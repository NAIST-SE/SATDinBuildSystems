{
  "Repository" : "89813",
  "Revision" : "HEAD",
  "ObjectId" : "494faeb4881deed89677f4d79e986f70b1915451",
  "CommitTime" : "2019-03-18T06:47:07Z",
  "Files" : {
    "converter/adb_usb/Makefile" : {
      "ObjectId" : "14fc181ba96fa194a50cf4fbaa62d595e4de94c9",
      "LastModified" : "2016-08-29T05:46:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name\n\n# atmega32u4 \tTeensy2.0\n\n# atemga32u4\tTMK Converter rev.1\n\n# atemga32u2\tTMK Converter rev.2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\tfor TMK Converter rev.1/rev.2\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration(+1000)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 74,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 76,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 77,
        "CharPositionInLine" : 24
      },
      "14" : {
        "Text" : "#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE = yes\t# USB Nkey Rollover\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#UNIMAP_ENABLE = yes\n\n#ACTIONMAP_ENABLE = yes         # Use 16bit actionmap instead of 8bit keymap\n\n#KEYMAP_SECTION_ENABLE = yes\t# fixed address keymap for keymap editor\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ADB Mice need acceleration for todays much bigger screens. \n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Optimize size but this may cause error \"relocation truncated to fit\"\n\n#EXTRALDFLAGS = -Wl,--relax\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Search Path\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "converter/ibm4704_usb/Makefile" : {
      "ObjectId" : "f930cb5981077ab2df3af400886b09a823767616",
      "LastModified" : "2016-09-30T03:36:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n\n# TMK Converter rev.2\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n\n# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 90,
        "CharPositionInLine" : 23
      },
      "13" : {
        "Text" : "# Console for debug(+400)\n\n# Commands for debug and configuration\n",
        "Line" : 93,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 95,
        "CharPositionInLine" : 18
      },
      "15" : {
        "Text" : "# Search Path\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "converter/m0110_usb/Makefile" : {
      "ObjectId" : "71d675ac7f43b6f67814c1f962ddca8a03f29f4d",
      "LastModified" : "2016-10-07T01:58:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   *Comment out* to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE ?= yes\t# Virtual DIP switch configuration(+1000)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 83,
        "CharPositionInLine" : 23
      },
      "13" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 85,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 86,
        "CharPositionInLine" : 25
      },
      "15" : {
        "Text" : "#SLEEP_LED_ENABLE ?= yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE ?= yes\t# USB Nkey Rollover\n\n#KEYMAP_SECTION_ENABLE ?= yes\t# fixed address keymap for keymap editor\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------- Programming Options --------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Search Path\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "converter/news_usb/Makefile" : {
      "ObjectId" : "e94a4f61a55bb716c09d9fe5d695645943322d9a",
      "LastModified" : "2016-04-29T05:54:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#MCU = at90usb162       # Teensy 1.0\n\n#MCU = atmega32u4       # Teensy 2.0\n\n#MCU = at90usb646       # Teensy++ 1.0\n\n#MCU = at90usb1286      # Teensy++ 2.0\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TMK Converter Rev.2\n",
        "Line" : 25,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   *Comment out* to disable the options.\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n",
        "Line" : 77,
        "CharPositionInLine" : 23
      },
      "13" : {
        "Text" : "# Mouse keys(+5000)\n\n# Audio control and System control(+600)\n",
        "Line" : 78,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Console for debug\n\n# Commands for debug and configuration\n",
        "Line" : 80,
        "CharPositionInLine" : 24
      },
      "15" : {
        "Text" : "#NKRO_ENABLE = yes\t# USB Nkey Rollover(+500)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Search Path\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "converter/next_usb/Makefile" : {
      "ObjectId" : "f3143c25c40b8224602fa3a586cfa9677dc781ef",
      "LastModified" : "2016-09-30T03:36:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#MCU = at90usb162       # Teensy 1.0\n\n#MCU = atmega32u4       # Teensy 2.0\n\n#MCU = at90usb646       # Teensy++ 1.0\n\n#MCU = at90usb1286      # Teensy++ 2.0\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TMK converter\n",
        "Line" : 41,
        "CharPositionInLine" : 24
      },
      "7" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n\n#OPT_DEFS += -DINTERRUPT_CONTROL_ENDPOINT\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build Options\n\n#   *Comment out* to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration(+1000)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 88,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# Console for debug(+400)\n\n# Commands for debug and configuration\n",
        "Line" : 90,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "#NKRO_ENABLE ?= yes\t# USB Nkey Rollover\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Search Path\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "converter/pana_m8/Makefile" : {
      "ObjectId" : "93f3c462ee51c778ee6162df662e47a6114d3c80",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Boot Section Size in *bytes*\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LUFA specific\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build Options\n\n#BOOTMAGIC_ENABLE ?= yes\t# Virtual DIP switch configuration\n\n#MOUSEKEY_ENABLE ?= yes\t\t# Mouse keys\n\n#EXTRAKEY_ENABLE ?= yes\t\t# Audio control and System control\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Console for debug\n",
        "Line" : 20,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 21,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : "#NKRO_ENABLE ?= yes\t\t# USB Nkey Rollover\n\n#ACTIONMAP_ENABLE ?= yes\t\t# Use 16bit actionmap instead of 8bit keymap\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Universal keymap\n",
        "Line" : 24,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# fixed address keymap for keymap editor\n",
        "Line" : 25,
        "CharPositionInLine" : 29
      },
      "8" : {
        "Text" : "# List C source files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Keymap file\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Search Path\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "converter/pc98_usb/Makefile" : {
      "ObjectId" : "a3cf2a2910c4c6e70bd1f6a32cb94cedb31a627e",
      "LastModified" : "2018-09-08T12:25:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n\n#   Add one of lines below to select serial protocol implementation\n\n#\tprotocol/serial_uart.c\n\n#\tprotocol/serial_soft.c\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TMK Converter\n",
        "Line" : 22,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   *Comment out* to disable the options.\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 59,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : "# Console for debug\n",
        "Line" : 61,
        "CharPositionInLine" : 22
      },
      "13" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 62,
        "CharPositionInLine" : 25
      },
      "14" : {
        "Text" : "#NKRO_ENABLE ?= yes\t# USB Nkey Rollover\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Search Path\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "converter/ps2_usb/Makefile" : {
      "ObjectId" : "5f9c4042c8cd5ae5dc5a88cb84a7ff34f389bcea",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task\n\n# Not work with suart debug\n\n#OPT_DEFS += -DINTERRUPT_CONTROL_ENDPOINT\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This improves response of keyboard when wakeup\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n",
        "Line" : 91,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# Mouse keys(+4700)\n",
        "Line" : 92,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# Audio control and System control(+450)\n",
        "Line" : 93,
        "CharPositionInLine" : 23
      },
      "16" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 94,
        "CharPositionInLine" : 22
      },
      "17" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 95,
        "CharPositionInLine" : 25
      },
      "18" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 96,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : "# PS/2 Options\n\n#\n\n#PS2_USE_USART ?= yes\t# uses hardware USART engine for PS/2 signal receive(recomened)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# uses external interrupt for falling edge of PS/2 clock pin\n",
        "Line" : 102,
        "CharPositionInLine" : 19
      },
      "21" : {
        "Text" : "#PS2_USE_BUSYWAIT ?= yes\t# uses primitive reference code\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Optimize size but this may cause error \"relocation truncated to fit\"\n\n#EXTRALDFLAGS = -Wl,--relax\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Search Path\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "converter/sun_usb/Makefile" : {
      "ObjectId" : "12eceb5e74fc0f348c86c7c649cf0ca9b6502431",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#MCU = at90usb162       # Teensy 1.0\n\n#MCU = atmega32u4       # Teensy 2.0\n\n#MCU = at90usb646       # Teensy++ 1.0\n\n#MCU = at90usb1286      # Teensy++ 2.0\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build Options\n\n#   *Comment out* to disable the options.\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 63,
        "CharPositionInLine" : 22
      },
      "11" : {
        "Text" : "# Console for debug\n",
        "Line" : 65,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 66,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "#HARDWARE_SERIAL = yes  # Use hardware serial (requires inverted serial, see README)\n\n#NKRO_ENABLE = yes\t# USB Nkey Rollover\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Search Path\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "converter/terminal_usb/Makefile" : {
      "ObjectId" : "fc07155f69a732590277b517f8ea7386b3d2b7b6",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#MCU = at90usb162       # Teensy 1.0\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Teensy 2.0\n",
        "Line" : 21,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "#MCU = at90usb646       # Teensy++ 1.0\n\n#MCU = at90usb1286      # Teensy++ 2.0\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration(+1000)\n\n#MOUSEKEY_ENABLE = yes\t# Mouse keys(+4700)\n\n#EXTRAKEY_ENABLE = yes\t# Audio control and System control(+450)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 70,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 71,
        "CharPositionInLine" : 24
      },
      "15" : {
        "Text" : "#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE = yes\t# USB Nkey Rollover\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# PS/2 protocol implementations\n\n#\n\n#PS2_USE_USART = yes\t# uses hardware USART engine for PS/2 signal receive\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# uses external interrupt for falling edge of PS/2 clock pin\n",
        "Line" : 80,
        "CharPositionInLine" : 18
      },
      "18" : {
        "Text" : "#PS2_USE_BUSYWAIT = yes\t# uses primitive reference code\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Programming Options --------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Search Path\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "converter/usb_usb/Makefile" : {
      "ObjectId" : "65b6d949511ca0cd8c894464fa8e6aef02e6b44f",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device.\n\n#                Please customize your programmer settings(PROGRAM_CMD)\n\n#\n\n# make teensy = Download the hex file to the device, using teensy_loader_cli.\n\n#               (must have teensy_loader_cli installed).\n\n#\n\n# make dfu = Download the hex file to the device, using dfu-programmer (must\n\n#            have dfu-programmer installed).\n\n#\n\n# make flip = Download the hex file to the device, using Atmel FLIP (must\n\n#             have Atmel FLIP installed).\n\n#\n\n# make dfu-ee = Download the eeprom file to the device, using dfu-programmer\n\n#               (must have dfu-programmer installed).\n\n#\n\n# make flip-ee = Download the eeprom file to the device, using Atmel FLIP\n\n#                (must have Atmel FLIP installed).\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging,\n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MCU name\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Mouse keys\n\n# Media control and System control\n",
        "Line" : 93,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# Console for debug\n",
        "Line" : 95,
        "CharPositionInLine" : 22
      },
      "11" : {
        "Text" : "#COMMAND_ENABLE ?= yes    # Commands for debug and configuration\n\n#NKRO_ENABLE ?= yes\t# USB Nkey Rollover\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#LDFLAGS += -Wl,--relax\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#OPT_DEFS += -DNO_ACTION_TAPPING\n\n#OPT_DEFS += -DNO_ACTION_LAYER\n\n#OPT_DEFS += -DNO_ACTION_MACRO\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Search Path\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# program Leonardo\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "converter/x68k_usb/Makefile" : {
      "ObjectId" : "41e32b18e003e80f73b813033dce8ccb3d1b362b",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name\n\n# atmega32u4 \tTeensy2.0\n\n# atemga32u4\tTMK Converter rev.1\n\n# atemga32u2\tTMK Converter rev.2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\tfor TMK Converter rev.1/rev.2\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration(+1000)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 74,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 76,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 77,
        "CharPositionInLine" : 24
      },
      "14" : {
        "Text" : "#UNIMAP_ENABLE = yes\n\n#ACTIONMAP_ENABLE = yes         # Use 16bit actionmap instead of 8bit keymap\n\n#KEYMAP_SECTION_ENABLE = yes\t# fixed address keymap for keymap editor\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Search Path\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "converter/xt_usb/Makefile" : {
      "ObjectId" : "081d2a2a46e4b43a1faf619403313f609be3b4de",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for Teensy\n\n#\n\n# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n\n# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 89,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 92,
        "CharPositionInLine" : 22
      },
      "13" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 93,
        "CharPositionInLine" : 24
      },
      "14" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 94,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Optimize size but this may cause error \"relocation truncated to fit\"\n\n#EXTRALDFLAGS = -Wl,--relax\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Search Path\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "keyboard/alps64/Makefile" : {
      "ObjectId" : "d9968f7c7995d862ff778c322fde42d671ae08b4",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n",
        "Line" : 70,
        "CharPositionInLine" : 24
      },
      "12" : {
        "Text" : "# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 71,
        "CharPositionInLine" : 23
      },
      "13" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 73,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 74,
        "CharPositionInLine" : 25
      },
      "15" : {
        "Text" : "#SLEEP_LED_ENABLE ?= yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE ?= yes\t# USB Nkey Rollover\n\n#ACTIONMAP_ENABLE ?= yes\t# Use 16bit action codes in keymap instead of 8bit keycodes\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Optimize size but this may cause error \"relocation truncated to fit\"\n\n#EXTRALDFLAGS = -Wl,--relax\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Search Path\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "keyboard/fc660c/Makefile" : {
      "ObjectId" : "5fb62fbd2efafedd37cf5d3cd263b3761f6580af",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Location of tmk_core\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Location of target dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List C source files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure file\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\t(TMK Alt Controller)\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE ?= yes\t# Virtual DIP switch configuration\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 71,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "# Console for debug\n",
        "Line" : 73,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 74,
        "CharPositionInLine" : 26
      },
      "15" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 75,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "#ACTIONMAP_ENABLE ?= yes\t\t# Use 16bit actionmap instead of 8bit keymap\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Universal keymap\n",
        "Line" : 77,
        "CharPositionInLine" : 22
      },
      "18" : {
        "Text" : "# fixed address keymap for keymap editor\n",
        "Line" : 78,
        "CharPositionInLine" : 29
      },
      "19" : {
        "Text" : "#OPT_DEFS += -DNO_ACTION_TAPPING\n\n#OPT_DEFS += -DNO_ACTION_LAYER\n\n#OPT_DEFS += -DNO_ACTION_MACRO\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Search Path\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "keyboard/fc980c/Makefile" : {
      "ObjectId" : "cecec4592054b61981fa4154c36eaaa2299e85c2",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Location of tmk_core\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Location of target dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List C source files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure file\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\t(TMK Alt Controller)\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE ?= yes\t# Virtual DIP switch configuration\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 71,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "# Console for debug\n",
        "Line" : 73,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 74,
        "CharPositionInLine" : 26
      },
      "15" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 75,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "#ACTIONMAP_ENABLE ?= yes\t\t# Use 16bit actionmap instead of 8bit keymap\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Universal keymap\n",
        "Line" : 77,
        "CharPositionInLine" : 22
      },
      "18" : {
        "Text" : "# fixed address keymap for keymap editor\n",
        "Line" : 78,
        "CharPositionInLine" : 29
      },
      "19" : {
        "Text" : "#OPT_DEFS += -DNO_ACTION_TAPPING\n\n#OPT_DEFS += -DNO_ACTION_LAYER\n\n#OPT_DEFS += -DNO_ACTION_MACRO\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Search Path\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "keyboard/gh60/Makefile" : {
      "ObjectId" : "b0e7a30e4ec719b1c94f51d71824b80e367e65bc",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device.\n\n#                Please customize your programmer settings(PROGRAM_CMD)\n\n#\n\n# make teensy = Download the hex file to the device, using teensy_loader_cli.\n\n#               (must have teensy_loader_cli installed).\n\n#\n\n# make dfu = Download the hex file to the device, using dfu-programmer (must\n\n#            have dfu-programmer installed).\n\n#\n\n# make flip = Download the hex file to the device, using Atmel FLIP (must\n\n#             have Atmel FLIP installed).\n\n#\n\n# make dfu-ee = Download the eeprom file to the device, using dfu-programmer\n\n#               (must have dfu-programmer installed).\n\n#\n\n# make flip-ee = Download the eeprom file to the device, using Atmel FLIP\n\n#                (must have Atmel FLIP installed).\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging, \n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# project specific files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n\n#MCU = at90usb1287\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n",
        "Line" : 116,
        "CharPositionInLine" : 23
      },
      "13" : {
        "Text" : "# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 117,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 119,
        "CharPositionInLine" : 21
      },
      "15" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 120,
        "CharPositionInLine" : 24
      },
      "16" : {
        "Text" : "#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 122,
        "CharPositionInLine" : 18
      },
      "18" : {
        "Text" : "# Optimize size but this may cause error \"relocation truncated to fit\"\n\n#EXTRALDFLAGS = -Wl,--relax\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Search Path\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "keyboard/hhkb/Makefile" : {
      "ObjectId" : "c9027535a13f33fc5f4608a7facf9d50c5dad8ba",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device.\n\n#                Please customize your programmer settings(PROGRAM_CMD)\n\n#\n\n# make teensy = Download the hex file to the device, using teensy_loader_cli.\n\n#               (must have teensy_loader_cli installed).\n\n#\n\n# make dfu = Download the hex file to the device, using dfu-programmer (must\n\n#            have dfu-programmer installed).\n\n#\n\n# make flip = Download the hex file to the device, using Atmel FLIP (must\n\n#             have Atmel FLIP installed).\n\n#\n\n# make dfu-ee = Download the eeprom file to the device, using dfu-programmer\n\n#               (must have dfu-programmer installed).\n\n#\n\n# make flip-ee = Download the eeprom file to the device, using Atmel FLIP\n\n#                (must have Atmel FLIP installed).\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging, \n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\t(TMK Alt Controller)\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE ?= yes\t# Virtual DIP switch configuration\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 115,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "# Console for debug\n",
        "Line" : 117,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 118,
        "CharPositionInLine" : 26
      },
      "15" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 119,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "#HHKB_JP ?= yes\t\t\t# HHKB JP support\n\n#UNIMAP_ENABLE ?= yes\t\t# Universal keymap\n\n#ACTIONMAP_ENABLE ?= yes\t# Use 16bit actionmap instead of 8bit keymap\n\n#KEYMAP_SECTION_ENABLE ?= yes\t# fixed address keymap for keymap editor\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#OPT_DEFS += -DNO_ACTION_TAPPING\n\n#OPT_DEFS += -DNO_ACTION_LAYER\n\n#OPT_DEFS += -DNO_ACTION_MACRO\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Keymap file\n\n#\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Search Path\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "keyboard/infinity/Makefile" : {
      "ObjectId" : "5b3c1fe6f62ccf5440312450e4e77addcb6a747e",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Build Options\n\n#   Comment out to disable\n\n#BOOTMAGIC_ENABLE = yes\n\n#MOUSEKEY_ENABLE = yes\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keyboard/infinity_chibios/Makefile" : {
      "ObjectId" : "3873239ae7585501c794daeaee57e9058954dd99",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source files exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## chip/board settings\n\n# - the next two should match the directories in\n\n#   <chibios>/os/hal/ports/$(MCU_FAMILY)/$(MCU_SERIES)\n\n# - For Teensies, FAMILY = KINETIS and SERIES is either\n\n#   KL2x (LC) or K20x (3.0,3.1,3.2).\n\n# - For Infinity KB, SERIES = K20x\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linker script to use\n\n# - it should exist either in <chibios>/os/common/ports/ARMCMx/compilers/GCC/ld/\n\n#   or <this_dir>/ld/\n\n# - NOTE: a custom ld script is needed for EEPROM on Teensy LC\n\n# - LDSCRIPT =\n\n#   - MKL26Z64 for Teensy LC\n\n#   - MK20DX128 for Teensy 3.0\n\n#   - MK20DX256 for Teensy 3.1 and 3.2\n\n#   - MK20DX128BLDR4 for Infinity with Kiibohd bootloader\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Startup code to use\n\n#  - it should exist in <chibios>/os/common/ports/ARMCMx/compilers/GCC/mk/\n\n# - STARTUP =\n\n#   - kl2x for Teensy LC\n\n#   - k20x5 for Teensy 3.0 and Infinity KB\n\n#   - k20x7 for Teensy 3.1 and 3.2\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Board: it should exist either in <chibios>/os/hal/boards/\n\n#  or <this_dir>/boards\n\n# - BOARD =\n\n#   - PJRC_TEENSY_LC for Teensy LC\n\n#   - PJRC_TEENSY_3 for Teensy 3.0\n\n#   - PJRC_TEENSY_3_1 for Teensy 3.1 or 3.2\n\n#   - MCHCK_K20 for Infinity KB\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cortex version\n\n# Teensy LC is cortex-m0; Teensy 3.x are cortex-m4\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ARM version, CORTEX-M0/M1 are 6, CORTEX-M3/M4/M7 are 7\n\n# I.e. 6 for Teensy LC; 7 for Teensy 3.x\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Vector table for application\n\n# 0x00000000-0x00001000 area is occupied by bootlaoder.*/\n\n# The CORTEX_VTOR... is needed only for MCHCK/Infinity KB\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Virtual DIP switch configuration\n",
        "Line" : 75,
        "CharPositionInLine" : 23
      },
      "13" : {
        "Text" : "## (Note that for BOOTMAGIC on Teensy LC you have to use a custom .ld script.)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 77,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# Console for debug\n",
        "Line" : 79,
        "CharPositionInLine" : 21
      },
      "16" : {
        "Text" : "# Commands for debug and configuration\n\n# Breathing sleep LED during USB suspend\n",
        "Line" : 80,
        "CharPositionInLine" : 24
      },
      "17" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 82,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 18
    },
    "keyboard/kl27z_kbd/Makefile" : {
      "ObjectId" : "369054f15961afd72e0b6ed9c7b70c2572fbf831",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source files exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## chip/board settings\n\n# - the next two should match the directories in\n\n#   <chibios>/os/hal/ports/$(MCU_FAMILY)/$(MCU_SERIES)\n\n# - For Teensies, FAMILY = KINETIS and SERIES is either\n\n#   KL2x (LC) or K20x (3.0,3.1,3.2).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linker script to use\n\n# - it should exist either in <chibios>/os/common/ports/ARMCMx/compilers/GCC/ld/\n\n#   or <this_dir>/ld/\n\n# - NOTE: a custom ld script is needed for EEPROM on Teensy LC\n\n# - LDSCRIPT =\n\n#   - MKL26Z64 for Teensy LC\n\n#   - MK20DX128 for Teensy 3.0\n\n#   - MK20DX256 for Teensy 3.1 and 3.2\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Startup code to use\n\n#  - it should exist in <chibios>/os/common/ports/ARMCMx/compilers/GCC/mk/\n\n# - STARTUP =\n\n#   - kl2x for Teensy LC\n\n#   - k20x5 for Teensy 3.0\n\n#   - k20x7 for Teensy 3.1 and 3.2\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Board: it should exist either in <chibios>/os/hal/boards/\n\n#  or <this_dir>/boards\n\n# - BOARD =\n\n#   - PJRC_TEENSY_LC for Teensy LC\n\n#   - PJRC_TEENSY_3 for Teensy 3.0\n\n#   - PJRC_TEENSY_3_1 for Teensy 3.1 or 3.2\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cortex version\n\n# Teensy LC is cortex-m0plus; Teensy 3.x are cortex-m4\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ARM version, CORTEX-M0/M1 are 6, CORTEX-M3/M4/M7 are 7\n\n# I.e. 6 for Teensy LC; 7 for Teensy 3.x\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration\n\n## (Note that for BOOTMAGIC on Teensy LC you have to use a custom .ld script.)\n\n#MOUSEKEY_ENABLE = yes\t# Mouse keys\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Audio control and System control\n",
        "Line" : 63,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "# Console for debug\n",
        "Line" : 64,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "#COMMAND_ENABLE = yes    # Commands for debug and configuration\n\n#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE = yes\t    # USB Nkey Rollover\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "keyboard/kl27z_onekey/Makefile" : {
      "ObjectId" : "8179d5bb96215ba960c5f07485d633422eda7f24",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source files exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## chip/board settings\n\n# - the next two should match the directories in\n\n#   <chibios>/os/hal/ports/$(MCU_FAMILY)/$(MCU_SERIES)\n\n# - For Teensies, FAMILY = KINETIS and SERIES is either\n\n#   KL2x (LC) or K20x (3.0,3.1,3.2).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linker script to use\n\n# - it should exist either in <chibios>/os/common/ports/ARMCMx/compilers/GCC/ld/\n\n#   or <this_dir>/ld/\n\n# - NOTE: a custom ld script is needed for EEPROM on Teensy LC\n\n# - LDSCRIPT =\n\n#   - MKL26Z64 for Teensy LC\n\n#   - MK20DX128 for Teensy 3.0\n\n#   - MK20DX256 for Teensy 3.1 and 3.2\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Startup code to use\n\n#  - it should exist in <chibios>/os/common/ports/ARMCMx/compilers/GCC/mk/\n\n# - STARTUP =\n\n#   - kl2x for Teensy LC\n\n#   - k20x5 for Teensy 3.0\n\n#   - k20x7 for Teensy 3.1 and 3.2\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Board: it should exist either in <chibios>/os/hal/boards/\n\n#  or <this_dir>/boards\n\n# - BOARD =\n\n#   - PJRC_TEENSY_LC for Teensy LC\n\n#   - PJRC_TEENSY_3 for Teensy 3.0\n\n#   - PJRC_TEENSY_3_1 for Teensy 3.1 or 3.2\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cortex version\n\n# Teensy LC is cortex-m0plus; Teensy 3.x are cortex-m4\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ARM version, CORTEX-M0/M1 are 6, CORTEX-M3/M4/M7 are 7\n\n# I.e. 6 for Teensy LC; 7 for Teensy 3.x\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration\n\n## (Note that for BOOTMAGIC on Teensy LC you have to use a custom .ld script.)\n\n#MOUSEKEY_ENABLE = yes\t# Mouse keys\n\n#EXTRAKEY_ENABLE = yes\t# Audio control and System control\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Console for debug\n",
        "Line" : 64,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "#COMMAND_ENABLE = yes    # Commands for debug and configuration\n\n#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE = yes\t    # USB Nkey Rollover\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "keyboard/mbed_onekey/Makefile" : {
      "ObjectId" : "c755806f58290249909e9e739b0386a2ebd52818",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Build Options\n\n#   Comment out to disable\n\n#BOOTMAGIC_ENABLE = yes\n\n#MOUSEKEY_ENABLE = yes\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "keyboard/onekey/Makefile" : {
      "ObjectId" : "bc89fffb01f2326ae442a9731bb139dcb4acf676",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device.\n\n#                Please customize your programmer settings(PROGRAM_CMD)\n\n#\n\n# make teensy = Download the hex file to the device, using teensy_loader_cli.\n\n#               (must have teensy_loader_cli installed).\n\n#\n\n# make dfu = Download the hex file to the device, using dfu-programmer (must\n\n#            have dfu-programmer installed).\n\n#\n\n# make flip = Download the hex file to the device, using Atmel FLIP (must\n\n#             have Atmel FLIP installed).\n\n#\n\n# make dfu-ee = Download the eeprom file to the device, using dfu-programmer\n\n#               (must have dfu-programmer installed).\n\n#\n\n# make flip-ee = Download the eeprom file to the device, using Atmel FLIP\n\n#                (must have Atmel FLIP installed).\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging, \n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# project specific files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n\n#MCU = at90usb1287\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration(+1000)\n\n#MOUSEKEY_ENABLE = yes\t# Mouse keys(+4700)\n\n#EXTRAKEY_ENABLE = yes\t# Audio control and System control(+450)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 114,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "#COMMAND_ENABLE = yes    # Commands for debug and configuration\n\n#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE = yes\t# USB Nkey Rollover\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#PS2_MOUSE_ENABLE = yes  # PS/2 mouse(TrackPoint) support\n\n#PS2_USE_BUSYWAIT = yes # uses primitive reference code\n\n#PS2_USE_INT = yes      # uses external interrupt for falling edge of PS/2 clock pin\n\n#PS2_USE_USART = yes     # uses hardware USART engine for PS/2 signal receive(recomened)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Search Path\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "keyboard/stm32_f072_onekey/Makefile" : {
      "ObjectId" : "3868ee3d38481f3a41df14f3288b3247e94910e0",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source files exist\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## chip/board settings\n\n# the next two should match the directories in\n\n#  <chibios>/os/hal/ports/$(MCU_FAMILY)/$(MCU_SERIES)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# linker script to use\n\n# it should exist either in <chibios>/os/common/ports/ARMCMx/compilers/GCC/ld/\n\n#  or <this_dir>/ld/\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# startup code to use\n\n# is should exist in <chibios>/os/common/ports/ARMCMx/compilers/GCC/mk/\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# it should exist either in <chibios>/os/hal/boards/\n\n#  or <this_dir>/boards\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cortex version\n\n# Teensy LC is cortex-m0; Teensy 3.x are cortex-m4\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ARM version, CORTEX-M0/M1 are 6, CORTEX-M3/M4/M7 are 7\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you want to be able to jump to bootloader from firmware on STM32 MCUs,\n\n# set the correct BOOTLOADER_ADDRESS. Either set it here, or define it in\n\n# ./bootloader_defs.h or in ./boards/<FOO>/bootloader_defs.h (if you have\n\n# a custom board definition that you plan to reuse).\n\n# If you're not setting it here, leave it commented out.\n\n# It is chip dependent, the correct number can be looked up here (page 175):\n\n# http://www.st.com/web/en/resource/technical/document/application_note/CD00167594.pdf\n\n# This also requires a patch to chibios:\n\n#   <tmk_dir>/tmk_core/tool/chibios/ch-bootloader-jump.patch\n\n#STM32_BOOTLOADER_ADDRESS = 0x1FFFC800\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration\n\n## BOOTMAGIC is not supported on STM32 chips yet.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 59,
        "CharPositionInLine" : 22
      },
      "13" : {
        "Text" : "# Console for debug\n",
        "Line" : 61,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n\n# Breathing sleep LED during USB suspend\n",
        "Line" : 62,
        "CharPositionInLine" : 24
      },
      "15" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 64,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 16
    },
    "keyboard/stm32_f103_onekey/Makefile" : {
      "ObjectId" : "19c84aceb1e715a5a5a14ceebcc40e3fe3be423c",
      "LastModified" : "2017-08-08T00:59:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source files exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GENERIC STM32F103C8T6 board - stm32duino bootloader\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GENERIC STM32F103C8T6 board - no bootloader (programmer over serial or SWD)\n\n# OPT_DEFS =\n\n# MCU_LDSCRIPT = STM32F103x8\n\n# BOARD = GENERIC_STM32_F103\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MAPLE MINI\n\n# OPT_DEFS = -DCORTEX_VTOR_INIT=0x5000\n\n# MCU_LDSCRIPT = STM32F103xB_maplemini_bootloader\n\n# BOARD = MAPLEMINI_STM32_F103\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## chip/board settings\n\n# the next two should match the directories in\n\n#  <chibios>/os/hal/ports/$(MCU_FAMILY)/$(MCU_SERIES)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# linker script to use\n\n# it should exist either in <chibios>/os/common/ports/ARMCMx/compilers/GCC/ld/\n\n#  or <this_dir>/ld/\n\n# startup code to use\n\n# is should exist in <chibios>/os/common/ports/ARMCMx/compilers/GCC/mk/\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# it should exist either in <chibios>/os/hal/boards/\n\n#  or <this_dir>/boards\n\n# Cortex version\n\n# Teensy LC is cortex-m0; Teensy 3.x are cortex-m4\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ARM version, CORTEX-M0/M1 are 6, CORTEX-M3/M4/M7 are 7\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If you want to be able to jump to bootloader from firmware on STM32 MCUs,\n\n# set the correct BOOTLOADER_ADDRESS. Either set it here, or define it in\n\n# ./bootloader_defs.h or in ./boards/<FOO>/bootloader_defs.h (if you have\n\n# a custom board definition that you plan to reuse).\n\n# If you're not setting it here, leave it commented out.\n\n# It is chip dependent, the correct number can be looked up here (page 175):\n\n# http://www.st.com/web/en/resource/technical/document/application_note/CD00167594.pdf\n\n# This also requires a patch to chibios:\n\n#   <tmk_dir>/tmk_core/tool/chibios/ch-bootloader-jump.patch\n\n#STM32_BOOTLOADER_ADDRESS = 0x1FFFC800\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration\n\n## BOOTMAGIC is not supported on STM32 chips yet.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 71,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# CONSOLE_ENABLE = yes\t# Console for debug\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Commands for debug and configuration\n\n# Breathing sleep LED during USB suspend\n",
        "Line" : 74,
        "CharPositionInLine" : 24
      },
      "16" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 76,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 17
    },
    "keyboard/teensy3.2_tkl/Makefile" : {
      "ObjectId" : "e4424dda2b9f4e74c2aa196ea9aede84f1ccd904",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source files exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## chip/board settings\n\n# - the next two should match the directories in\n\n#   <chibios>/os/hal/ports/$(MCU_FAMILY)/$(MCU_SERIES)\n\n# - For Teensies, FAMILY = KINETIS and SERIES is either\n\n#   KL2x (LC) or K20x (3.0,3.1,3.2).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linker script to use\n\n# - it should exist either in <chibios>/os/common/ports/ARMCMx/compilers/GCC/ld/\n\n#   or <this_dir>/ld/\n\n# - NOTE: a custom ld script is needed for EEPROM on Teensy LC\n\n# - LDSCRIPT =\n\n#   - MKL26Z64 for Teensy LC\n\n#   - MK20DX128 for Teensy 3.0\n\n#   - MK20DX256 for Teensy 3.1 and 3.2\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Startup code to use\n\n#  - it should exist in <chibios>/os/common/ports/ARMCMx/compilers/GCC/mk/\n\n# - STARTUP =\n\n#   - kl2x for Teensy LC\n\n#   - k20x5 for Teensy 3.0\n\n#   - k20x7 for Teensy 3.1 and 3.2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Board: it should exist either in <chibios>/os/hal/boards/\n\n#  or <this_dir>/boards\n\n# - BOARD =\n\n#   - PJRC_TEENSY_LC for Teensy LC\n\n#   - PJRC_TEENSY_3 for Teensy 3.0\n\n#   - PJRC_TEENSY_3_1 for Teensy 3.1 or 3.2\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cortex version\n\n# Teensy LC is cortex-m0plus; Teensy 3.x are cortex-m4\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ARM version, CORTEX-M0/M1 are 6, CORTEX-M3/M4/M7 are 7\n\n# I.e. 6 for Teensy LC; 7 for Teensy 3.x\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Virtual DIP switch configuration\n",
        "Line" : 67,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : "## (Note that for BOOTMAGIC on Teensy LC you have to use a custom .ld script.)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 69,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Console for debug\n",
        "Line" : 71,
        "CharPositionInLine" : 21
      },
      "15" : {
        "Text" : "# Commands for debug and configuration\n\n# Breathing sleep LED during USB suspend\n",
        "Line" : 72,
        "CharPositionInLine" : 24
      },
      "16" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 74,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 17
    },
    "keyboard/teensy_lc_onekey/Makefile" : {
      "ObjectId" : "e4424dda2b9f4e74c2aa196ea9aede84f1ccd904",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source files exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## chip/board settings\n\n# - the next two should match the directories in\n\n#   <chibios>/os/hal/ports/$(MCU_FAMILY)/$(MCU_SERIES)\n\n# - For Teensies, FAMILY = KINETIS and SERIES is either\n\n#   KL2x (LC) or K20x (3.0,3.1,3.2).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linker script to use\n\n# - it should exist either in <chibios>/os/common/ports/ARMCMx/compilers/GCC/ld/\n\n#   or <this_dir>/ld/\n\n# - NOTE: a custom ld script is needed for EEPROM on Teensy LC\n\n# - LDSCRIPT =\n\n#   - MKL26Z64 for Teensy LC\n\n#   - MK20DX128 for Teensy 3.0\n\n#   - MK20DX256 for Teensy 3.1 and 3.2\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Startup code to use\n\n#  - it should exist in <chibios>/os/common/ports/ARMCMx/compilers/GCC/mk/\n\n# - STARTUP =\n\n#   - kl2x for Teensy LC\n\n#   - k20x5 for Teensy 3.0\n\n#   - k20x7 for Teensy 3.1 and 3.2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Board: it should exist either in <chibios>/os/hal/boards/\n\n#  or <this_dir>/boards\n\n# - BOARD =\n\n#   - PJRC_TEENSY_LC for Teensy LC\n\n#   - PJRC_TEENSY_3 for Teensy 3.0\n\n#   - PJRC_TEENSY_3_1 for Teensy 3.1 or 3.2\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cortex version\n\n# Teensy LC is cortex-m0plus; Teensy 3.x are cortex-m4\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ARM version, CORTEX-M0/M1 are 6, CORTEX-M3/M4/M7 are 7\n\n# I.e. 6 for Teensy LC; 7 for Teensy 3.x\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Virtual DIP switch configuration\n",
        "Line" : 67,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : "## (Note that for BOOTMAGIC on Teensy LC you have to use a custom .ld script.)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Mouse keys\n\n# Audio control and System control\n",
        "Line" : 69,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Console for debug\n",
        "Line" : 71,
        "CharPositionInLine" : 21
      },
      "15" : {
        "Text" : "# Commands for debug and configuration\n\n# Breathing sleep LED during USB suspend\n",
        "Line" : 72,
        "CharPositionInLine" : 24
      },
      "16" : {
        "Text" : "# USB Nkey Rollover\n",
        "Line" : 74,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 17
    },
    "orphan/IIgs/Makefile" : {
      "ObjectId" : "3bf380e64b14747bc14f67626e2e4e514cc2a511",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device.\n\n#                Please customize your programmer settings(PROGRAM_CMD)\n\n#\n\n# make teensy = Download the hex file to the device, using teensy_loader_cli.\n\n#               (must have teensy_loader_cli installed).\n\n#\n\n# make dfu = Download the hex file to the device, using dfu-programmer (must\n\n#            have dfu-programmer installed).\n\n#\n\n# make flip = Download the hex file to the device, using Atmel FLIP (must\n\n#             have Atmel FLIP installed).\n\n#\n\n# make dfu-ee = Download the eeprom file to the device, using dfu-programmer\n\n#               (must have dfu-programmer installed).\n\n#\n\n# make flip-ee = Download the eeprom file to the device, using Atmel FLIP\n\n#                (must have Atmel FLIP installed).\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging, \n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#MCU = at90usb162       # Teensy 1.0\n\n#MCU = atmega32u4       # Teensy 2.0\n\n#MCU = at90usb646       # Teensy++ 1.0\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Teensy++ 2.0\n",
        "Line" : 63,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Mouse keys\n",
        "Line" : 77,
        "CharPositionInLine" : 21
      },
      "10" : {
        "Text" : "#PS2_MOUSE_ENABLE = yes\t# PS/2 mouse(TrackPoint) support\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Audio control and System control\n",
        "Line" : 79,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "#NKRO_ENABLE = yes\t# USB Nkey Rollover\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------- Programming Options --------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Search Path\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "orphan/ascii_usb/Makefile" : {
      "ObjectId" : "6d977afc05d4eb8826212074673c8077c79e9274",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#MCU = at90usb162       # Teensy 1.0\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Teensy 2.0\n",
        "Line" : 22,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "#MCU = at90usb646       # Teensy++ 1.0\n\n#MCU = at90usb1286      # Teensy++ 2.0\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build Options\n\n#   *Comment out* to disable the options.\n\n#\n\n#MOUSEKEY_ENABLE = yes\t# Mouse keys\n\n#EXTRAKEY_ENABLE = yes\t# Audio control and System control\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Console for debug\n",
        "Line" : 63,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "#NKRO_ENABLE = yes\t# USB Nkey Rollover\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Search Path\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "orphan/nerd/Makefile" : {
      "ObjectId" : "30149345cee96876b9c11adbf3042c8c6052f2ec",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device.\n\n#                Please customize your programmer settings(PROGRAM_CMD)\n\n#\n\n# make teensy = Download the hex file to the device, using teensy_loader_cli.\n\n#               (must have teensy_loader_cli installed).\n\n#\n\n# make dfu = Download the hex file to the device, using dfu-programmer (must\n\n#            have dfu-programmer installed).\n\n#\n\n# make flip = Download the hex file to the device, using Atmel FLIP (must\n\n#             have Atmel FLIP installed).\n\n#\n\n# make dfu-ee = Download the eeprom file to the device, using dfu-programmer\n\n#               (must have dfu-programmer installed).\n\n#\n\n# make flip-ee = Download the eeprom file to the device, using Atmel FLIP\n\n#                (must have Atmel FLIP installed).\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging, \n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# project specific files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n",
        "Line" : 111,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : "# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 112,
        "CharPositionInLine" : 22
      },
      "13" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 114,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 115,
        "CharPositionInLine" : 24
      },
      "15" : {
        "Text" : "#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE = yes\t# USB Nkey Rollover - not yet supported in LUFA\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable keyboard backlight functionality\n",
        "Line" : 118,
        "CharPositionInLine" : 24
      },
      "17" : {
        "Text" : "# Search Path\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "orphan/serialmouse_usb/Makefile" : {
      "ObjectId" : "34f550b31467ccde79183de94cba0fa229fe0543",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \n\n# Makefile for Teensy\n\n#\n\n# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project specific files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name\n\n#MCU = at90usb1287\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Interrupt driven control endpoint task(+60)\n\n#OPT_DEFS += -DINTERRUPT_CONTROL_ENDPOINT\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Boot Section Size in *bytes*\n\n#   Teensy halfKay   512\n\n#   Teensy++ halfKay 1024\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#   USBaspLoader     2048\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n#BOOTMAGIC_ENABLE = yes\t# Virtual DIP switch configuration(+1000)\n\n#MOUSEKEY_ENABLE = yes\t# Mouse keys(+4700)\n\n#EXTRAKEY_ENABLE = yes\t# Audio control and System control(+450)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 77,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "#COMMAND_ENABLE = yes    # Commands for debug and configuration\n\n#NKRO_ENABLE = yes\t# USB Nkey Rollover - not yet supported in LUFA\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Serial Mouse Options\n\n#   You can choose a mouse protocol and the implementation of\n\n#   the underlying serial connection.\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Enable support for Microsoft-compatible mice\n",
        "Line" : 86,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "#SERIAL_MOUSE_MOUSESYSTEMS_ENABLE = yes\t# Enable support for Mousesystems-compatible mice\n\n#SERIAL_MOUSE_USE_UART = yes\t\t# use hardware UART for serial connection\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# use software serial implementation\n",
        "Line" : 89,
        "CharPositionInLine" : 29
      },
      "17" : {
        "Text" : "# Optional serial mouse driver features\n\n# Support scrolling while holding the middle mouse button\n\n# (currently only supported for Mousesystems mice):\n\n#OPT_DEFS += -DSERIAL_MOUSE_CENTER_SCROLL\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Optimize size but this may cause error \"relocation truncated to fit\"\n\n#EXTRALDFLAGS = -Wl,--relax\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Search Path\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "orphan/terminal_bluefruit/Makefile" : {
      "ObjectId" : "dec9233ec9c08323cd2a3419c825d993d8a5f3de",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory common source filess exist\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# keyboard dependent files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#MCU = at90usb162       # Teensy 1.0\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Teensy 2.0\n",
        "Line" : 22,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "#MCU = at90usb646       # Teensy++ 1.0\n\n#MCU = at90usb1286      # Teensy++ 2.0\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Virtual DIP switch configuration(+1000)\n",
        "Line" : 68,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# Mouse keys(+4700)\n\n# Audio control and System control(+450)\n",
        "Line" : 69,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# Console for debug(+400)\n",
        "Line" : 71,
        "CharPositionInLine" : 21
      },
      "16" : {
        "Text" : "# Commands for debug and configuration\n",
        "Line" : 72,
        "CharPositionInLine" : 24
      },
      "17" : {
        "Text" : "#SLEEP_LED_ENABLE = yes  # Breathing sleep LED during USB suspend\n\n#NKRO_ENABLE = yes\t# USB Nkey Rollover - not yet supported in LUFA\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# PS/2 protocol implementations\n\n# \tUSART is recommended if it is available, others are for reference purpose.\n\n# \tINT implementation will drop simultaneous key strokes.\n\n#\n\n#PS2_USE_USART = yes\t# uses hardware USART engine for PS/2 signal receive(recomened)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# uses external interrupt for falling edge of PS/2 clock pin\n",
        "Line" : 83,
        "CharPositionInLine" : 18
      },
      "20" : {
        "Text" : "#PS2_USE_BUSYWAIT = yes\t# uses primitive reference code\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Programming Options --------------------------\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Search Path\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "tmk_core/protocol/lufa/LUFA-git/Bootloaders/HID/HostLoaderApp/Makefile" : {
      "ObjectId" : "7b2833e62f798067a7d4a949069bf32f88e99b3e",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#OS ?= WINDOWS\n\n#OS ?= MACOSX\n\n#OS ?= BSD\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also works on FreeBSD\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "# works on NetBSD and OpenBSD\n",
        "Line" : 28,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 3
    },
    "tmk_core/protocol/usb_hid/test/Makefile" : {
      "ObjectId" : "83bf2aed67abdf4e24d9afe6dd0071d234e07b41",
      "LastModified" : "2019-03-10T13:48:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device.\n\n#                Please customize your programmer settings(PROGRAM_CMD)\n\n#\n\n# make teensy = Download the hex file to the device, using teensy_loader_cli.\n\n#               (must have teensy_loader_cli installed).\n\n#\n\n# make dfu = Download the hex file to the device, using dfu-programmer (must\n\n#            have dfu-programmer installed).\n\n#\n\n# make flip = Download the hex file to the device, using Atmel FLIP (must\n\n#             have Atmel FLIP installed).\n\n#\n\n# make dfu-ee = Download the eeprom file to the device, using dfu-programmer\n\n#               (must have dfu-programmer installed).\n\n#\n\n# make flip-ee = Download the eeprom file to the device, using Atmel FLIP\n\n#                (must have Atmel FLIP installed).\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging, \n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directory keyboard dependent files exist\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MCU name\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# LUFA specific\n\n#\n\n# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Interrupt driven control endpoint task\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build Options\n\n#   comment out to disable the options.\n\n#\n\n# Console for debug\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Boot Section Size in bytes\n\n#   Teensy halfKay   512\n\n#   Atmel DFU loader 4096\n\n#   LUFA bootloader  4096\n\n#OPT_DEFS += -DBOOT_SIZE=4096\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Search Path\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# program Leonardo\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 35
  },
  "ElapsedTime" : 3101
}