{
  "Repository" : "8776197",
  "Revision" : "HEAD",
  "ObjectId" : "0d72e9f2f89817d725e723f4782ee686042a4c64",
  "CommitTime" : "2019-04-19T07:58:07Z",
  "Files" : {
    "Android/CsoundForAndroid/CsoundAndroid/proguard-rules.pro" : {
      "ObjectId" : "93e5d586a4c41c947ea7de97e509ef696fc3dca8",
      "LastModified" : "2018-01-31T22:07:03Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/stevenyi/work/android-sdk-mac_x86/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Android/CsoundForAndroid/CsoundAndroidExamples/proguard-rules.pro" : {
      "ObjectId" : "93e5d586a4c41c947ea7de97e509ef696fc3dca8",
      "LastModified" : "2018-01-31T22:07:03Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/stevenyi/work/android-sdk-mac_x86/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Bela/CMakeLists.txt" : {
      "ObjectId" : "c61bd540a726f72578cb9dff6db266f2850d3ae3",
      "LastModified" : "2018-10-24T21:23:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Bela/crosscompile.cmake" : {
      "ObjectId" : "6590c4678985aa8406a58a51b782bc78ca6273d2",
      "LastModified" : "2018-01-19T10:30:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this one is important\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#this one not so much\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# where is the target environment \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMakeLists.txt" : {
      "ObjectId" : "86e8dc36cf80acade1b92c8a75b686338d62d9e1",
      "LastModified" : "2019-04-19T00:03:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# silence RPATH cmake warning\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C++11 needed\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project definitions\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Relative install paths\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Utility to munge with items in a list.\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Utility function to make executables. All plugin targets should use this as it\n\n# sets up output directory set in top-level CmakeLists.txt\n\n# and adds an appropriate install target\n\n#\n\n# name - name of executable to produce\n\n# srcs - list of src files\n\n# libs - list of library files to link to\n\n# output_name (OPTIONAL) - overide the name of the generated executable\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Utility function to make a utility executable\n\n#\n\n# name - name of executable to produce\n\n# srcs - list of src files\n\n# libraries - OPTIONAL extra libraries to link\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Checks if dependencies for an enabled target are fulfilled.\n\n# If FAIL_MISSING is true and the dependencies are not fulfilled,\n\n# it will abort the cmake run.\n\n# If FAIL_MISSING is false, it will set the option to OFF.\n\n# If the target is not enabled, it will do nothing.\n\n# example: check_deps(BUILD_NEW_PARSER FLEX_EXECUTABLE BISON_EXECUTABLE)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set it in the local scope too\n",
        "Line" : 107,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "### COMPILER OPTIMIZATION FLAGS\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## USER OPTIONS ##\n\n# Optional targets, they should all default to ON (check_deps will disable them if not possible to build)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Include this after the install path definitions so we can override them here.\n\n# Also after function definitions so we can use them there\n\n# Also after user options so that the default values don't overwrite the custom files values\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# in Release configuration, set NDEBUG\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set -Werror if in Debug configuration\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# VL this is breaking CUDA compilation. It's not necessary\n\n#if(APPLE)\n\n#    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=gnu++11 -stdlib=libc++\")\n\n#endif()\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Experimented with flags but did not make change performance results\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /Oi /fp:fast /arch:AVX2\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /Oi /fp:fast /arch:AVX2\")\n\n#set(CompilerFlags\n\n#  CMAKE_CXX_FLAGS\n\n#  CMAKE_CXX_FLAGS_DEBUG\n\n#  CMAKE_CXX_FLAGS_RELEASE\n\n#  CMAKE_C_FLAGS\n\n#  CMAKE_C_FLAGS_DEBUG\n\n#  CMAKE_C_FLAGS_RELEASE\n\n#  )\n\n#foreach(CompilerFlag ${CompilerFlags})\n\n#  string(REPLACE \"/MD\" \"/MT\" ${CompilerFlag} \"${${CompilerFlag}}\")\n\n#endforeach()\n",
        "Line" : 356,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#if(USE_DOUBLE)\n\n#    set(BUILD_PLUGINS_DIR ${BUILD_DIR}/plugins64)\n\n#else()\n\n#    set(BUILD_PLUGINS_DIR ${BUILD_DIR}/plugins)\n\n#endif()\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#if(APPLE AND NOT ${CMAKE_GENERATOR} STREQUAL \"Xcode\")\n\n#    set(BUILD_PLUGINS_DIR ${BUILD_DIR}/${CSOUNDLIB}.framework/Versions/${APIVERSION}/Resources/Opcodes)\n\n#endif()\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OS specific checks\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## CONFIGURATION ##\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## HEADER/LIBRARY/OTHER CHECKS ##\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# First, required stuff\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#if (FLTK_FOUND AND MSVC)\n\n#    # If \"SHARED\" variants of FLTK libraries exist, use them.\n\n#    find_library(FLTK_SHARED_VARIANT \"fltk_SHARED\")\n\n#    message(STATUS \"FLTK_SHARED_VARIANT:\" ${FLTK_SHARED_VARIANT})\n\n#    if(FLTK_SHARED_VARIANT)\n\n#        message(STATUS \"Using 'SHARED' variants of FLTK libraries.\")\n\n#        LIST_REPLACE(FLTK_LIBRARIES 0 \"fltk_SHARED\")\n\n#        LIST_REPLACE(FLTK_LIBRARIES 1 \"fltk_forms_SHARED\")\n\n#        LIST_REPLACE(FLTK_LIBRARIES 2 \"fltk_images_SHARED\")\n\n#    endif()\n\n#endif()\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#if(MUSICXML_FOUND)\n\n#set(CMAKE_CXX_FLAGS \"-DHAVE_MUSICXML2 ${CMAKE_CXX_FLAGS}\")\n\n#endif()\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO should this work for MSVC also?\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#message(STATUS \"${LIBSNDFILE_SUPPORT_LIBS}\")\n",
        "Line" : 564,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Use ladder of if's to support older CMake versions (i.e., travis)\n",
        "Line" : 575,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#FIXME this variable is for required include directories, possible bug\n",
        "Line" : 588,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Now, non required library searches #\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Convert to uppercase and replace [./] with _\n",
        "Line" : 634,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "## Check existence of CURL\n",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Flex/Bison for the new parser\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## MAIN TARGETS ##\n",
        "Line" : 679,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#adding this for files that #include SDIF/sdif*\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#adding this for files that #include files in local dirs\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#checking pthread functions\n",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#list(APPEND libcsound_CFLAGS -DHAVE_PTHREAD)\n",
        "Line" : 695,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#if(WIN32)\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#endif(WIN32)\n",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# get the git hash and pass it to csound\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# The csound library\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Handling New Parser\n",
        "Line" : 977,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Handling New Score Parser\n",
        "Line" : 1031,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "##list(APPEND libcsound_CFLAGS -DSCORE_PARSER)\n",
        "Line" : 1033,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#set(YACC_SCOSRC ${CMAKE_CURRENT_SOURCE_DIR}/Engine/csound_sco.y)\n\n#set(YACC_SCOOUT ${CMAKE_CURRENT_BINARY_DIR}/csound_scoparse.c)\n\n#set(YACC_SCOOUTH ${CMAKE_CURRENT_BINARY_DIR}/csound_scoparse.h)\n",
        "Line" : 1035,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#set(LEX_SCOSRC ${CMAKE_CURRENT_SOURCE_DIR}/Engine/csound_sco.lex)\n\n#set(LEX_SCOOUT ${CMAKE_CURRENT_BINARY_DIR}/csound_scolex.c)\n",
        "Line" : 1039,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "##message(\"${CMAKE_CURRENT_BINARY_DIR}/csound_prslex.c\")\n\n##message(\"${CMAKE_CURRENT_BINARY_DIR}/csound_scolex.c\")\n\n##message(\"${CMAKE_CURRENT_BINARY_DIR}/csound_scoparse.c\")\n",
        "Line" : 1045,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#add_custom_command(\n\n#    OUTPUT ${LEX_SCOOUT}\n\n#    DEPENDS ${LEX_SCOSRC}\n\n#    COMMAND ${FLEX_EXECUTABLE} ARGS -B -t ${LEX_SCOSRC} > ${LEX_SCOOUT}\n\n#    )\n",
        "Line" : 1049,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#add_custom_command(\n\n#    OUTPUT ${YACC_SCOOUT} ${YACC_SCOOUTH}\n\n#    DEPENDS ${YACC_SCOSRC} ${LEX_SCOOUT}\n\n#    COMMAND ${BISON_EXECUTABLE}\n\n#    ARGS -pcsound_sco -t -d --report=itemset -o ${YACC_SCOOUT} ${YACC_SCOSRC}\n\n#    )\n",
        "Line" : 1061,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#${LEX_SCOOUT} ${YACC_SCOOUT} ${PRELEX_SCOOUT})\n",
        "Line" : 1069,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "#set_source_files_properties(${YACC_SCOOUT} GENERATED)\n\n#set_source_files_properties(${LEX_SCOOUT} GENERATED)\n",
        "Line" : 1071,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# ADDING HERE TO GRAB LIST OF HEADERS IN CASE OF BUILDING OSX FRAMEWORK\n",
        "Line" : 1105,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# This copies libsndfile into the framework and sets the install names\n\n# of CsoundLib to refer to it.\n\n#if(APPLE AND NOT ${CMAKE_GENERATOR} STREQUAL \"Xcode\")\n",
        "Line" : 1127,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#get_filename_component(source ${LIBSNDFILE_LIBRARY} REALPATH)\n\n#get_filename_component(depname ${source} NAME)\n",
        "Line" : 1131,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#set(CSOUNDLIB_DIR ${BUILD_DIR}/${CSOUNDLIB}.framework/Versions/${APIVERSION})\n",
        "Line" : 1134,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#if(NOT EXISTS ${CSOUNDLIB_DIR}/Resources/libs/${depname})\n\n#   add_custom_command(\n\n#       TARGET ${CSOUNDLIB}\n\n#       POST_BUILD\n\n#       COMMAND mkdir\n\n#       ARGS -p ${CSOUNDLIB_DIR}/Resources/libs\n\n#       COMMAND cp\n\n#       ARGS ${source} ${CSOUNDLIB_DIR}/Resources/libs/${depname}\n\n#       COMMAND ${CMAKE_INSTALL_NAME_TOOL}\n\n#       ARGS -id ${depname} ${CSOUNDLIB_DIR}/Resources/libs/${depname}\n\n#)\n\n#endif()\n",
        "Line" : 1136,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#add_custom_command(\n\n#       TARGET ${CSOUNDLIB}\n\n#       POST_BUILD\n\n#       COMMAND ${CMAKE_INSTALL_NAME_TOOL}\n\n#       ARGS -change ${source} @loader_path/Resources/libs/${depname} ${CSOUNDLIB_DIR}/${CSOUNDLIB}\n\n#)\n\n#endif()\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Utility function to make plugins. All plugin targets should use this as it\n\n# sets up output directory set in top-level CmakeLists.txt\n\n# and adds the appropriate install target\n\n#\n\n# libname - name of library to produce\n\n# srcs - list of src files (must be quoted if a list)\n\n# extralibs (OPTIONAL) - extra libraries to link the plugin to\n\n#\n\n# NB - this was moved here as it needs some VARS defined above\n\n# for setting up the framework\n",
        "Line" : 1157,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# this copies the dependencies of plugins into framework\n\n# and fixes the lib name references\n",
        "Line" : 1190,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#if(APPLE AND NOT ${CMAKE_GENERATOR} STREQUAL \"Xcode\")\n",
        "Line" : 1195,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "#get_filename_component(source ${dependency} REALPATH)\n\n#get_filename_component(depname ${source} NAME)\n\n#\n\n#set(RESOURCE_DIR ${BUILD_DIR}/${CSOUNDLIB}.framework/Versions/${APIVERSION}/Resources)\n",
        "Line" : 1197,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "#if(NOT EXISTS ${RESOURCE_DIR}/libs/${depname})\n\n#add_custom_command(\n\n#TARGET ${pluginlib}\n\n#COMMAND mkdir\n\n#ARGS -p ${RESOURCE_DIR}/libs\n\n#COMMAND cp\n\n#ARGS -f ${source} ${RESOURCE_DIR}/libs/${depname}\n\n#COMMAND ${CMAKE_INSTALL_NAME_TOOL}\n\n#ARGS -id ${depname} ${RESOURCE_DIR}/libs/${depname}\n\n#)\n\n#endif()\n\n#add_custom_command(\n\n#TARGET ${pluginlib}\n\n#POST_BUILD\n\n#COMMAND ${CMAKE_INSTALL_NAME_TOOL}\n\n#ARGS -change ${source} @loader_path/../libs/${depname} ${BUILD_PLUGINS_DIR}/lib${pluginlib}.dylib\n\n#)\n\n#endif()\n",
        "Line" : 1202,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Add the install target\n",
        "Line" : 1222,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# not quite working yet with msys2/mingw64\n\n#list(APPEND libcsound_CFLAGS -DCURL_STATICLIB -DLIBSSH_STATIC)\n\n#list(APPEND libcsound_LIBS crypto ssh2 ssl ws2_32 rtmp)\n\n#find_library(GNUTLS_LIB gnutls)\n\n#list(APPEND libcsound_LIBS ${GNUTLS_LIB})\n",
        "Line" : 1256,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Linux does not have a separate libintl, it is part of libc\n",
        "Line" : 1265,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Locale-aware reading and printing\n",
        "Line" : 1326,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Same for Windows\n",
        "Line" : 1341,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Pass flags according to system capabilities\n",
        "Line" : 1356,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#if(CMAKE_C_COMPILER MATCHES \"gcc\")\n\n#    list(APPEND libcsound_CFLAGS -fno-strict-aliasing)\n\n#endif()\n",
        "Line" : 1385,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Add the install target\n",
        "Line" : 1415,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# VL -- this seems to be a duplicate instruction\n\n# and it's breaking the build. See lines 1088-95\n\n#install(TARGETS ${CSOUNDLIB}\n\n#    LIBRARY DESTINATION \"${LIBRARY_INSTALL_DIR}\"\n\n#   ARCHIVE DESTINATION \"${LIBRARY_INSTALL_DIR}\")\n",
        "Line" : 1421,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "## option(BUILD_CATALOG \"Build the opcode/library catalog\" OFF)\n\n## check_deps(BUILD_CATALOG)\n\n## if(BUILD_CATALOG)\n\n## make_executable(mkdb \"mkdb\" \"dl\")\n\n## set_target_properties(mkdb PROPERTIES LINKER_LANGUAGE C)\n\n## endif()\n",
        "Line" : 1428,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# uninstall target\n",
        "Line" : 1449,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# target etags/tags\n",
        "Line" : 1458,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# build a CPack driven installer package\n\n#include (InstallRequiredSystemLibraries)\n",
        "Line" : 1464,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Documentation\n",
        "Line" : 1475,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# install CMake module\n",
        "Line" : 1488,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 77
    },
    "Frontends/CMakeLists.txt" : {
      "ObjectId" : "3f1ae1385ae6010f35f036af45418adc34f0f6a2",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Csound Commandline Executable ##\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need a different name to avoid clashes with float libcsound\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Post build dependencies copy for MSVC\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CsBeats\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#WinSound\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# debugger command line app\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "InOut/CMakeLists.txt" : {
      "ObjectId" : "3ce1e28ccb88c4e26418e0ebb3aaa6eb29fb5ab1",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# REAL TIME AUDIO AND MIDI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# option(USE_COREAUDIO \"Build the CoreAudio I/O module\" ON)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIND LIBRARIES AND HEADERS\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if(USE_COREAUDIO)\n\n#    find_path(COREAUDIO_INCLUDE_PATH CoreAudio.h)\n\n#    find_library(COREAUDIO_LIBRARY CoreAudio)\n\n# endif()\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# BUILD TARGETS\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check_deps(USE_COREAUDIO APPLE COREAUDIO_INCLUDE_PATH COREAUDIO_LIBRARY)\n\n# if(USE_COREAUDIO)\n\n#    make_plugin(rtcoreaudio rtcoreaudio.c)\n\n#    target_include_directories(rtcoreaudio PRIVATE ${COREAUDIO_INCLUDE_PATH})\n\n#    target_link_libraries(rtcoreaudio ${COREAUDIO_LIBRARY})\n\n# endif()\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# should probably do checks for these libs\n",
        "Line" : 119,
        "CharPositionInLine" : 32
      },
      "7" : {
        "Text" : "#check_deps(USE_IPMIDI PORTMIDI_HEADER PORTMIDI_LIBRARY)\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#add_dependency_to_framework(widgets ${FLTK_BASE_LIBRARY})\n\n#add_dependency_to_framework(widgets ${FLTK_FORMS_LIBRARY})\n\n#add_dependency_to_framework(widgets ${FLTK_IMAGES_LIBRARY})\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#add_dependency_to_framework(virtual ${FLTK_BASE_LIBRARY})\n\n#add_dependency_to_framework(virtual ${FLTK_FORMS_LIBRARY})\n\n#add_dependency_to_framework(virtual ${FLTK_IMAGES_LIBRARY})\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "Opcodes/CMakeLists.txt" : {
      "ObjectId" : "eef6062908d507d527945276d29538be78c5d4fd",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package (Eigen3 3.3 REQUIRED NO_MODULE)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## OPCODE LIBS WITH NO EXTERNAL DEPENDENCIES ##\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##make_plugin(zak zak.c)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## OPCODES WITH EXTERNAL DEPENDENCIES ##\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME how to build a static version of this?\n",
        "Line" : 230,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# OGG Opcode previously was built only for OLPC\n\n#if(VORBISFILE_LIBRARY)\n\n#    set(vorbis_LIBS ${libcsound_LIBS} ${VORBISFILE_LIBRARY})\n\n#    make_plugin(ogg ogg.c \"${vorbis_LIBS}\")\n\n#endif()\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#if(APPLE)\n\n#foreach(TARG ampmidid doppler mixer signalflowgraph arrayops pvsops\n\n#ftsamplebank padsynth)\n\n#set_target_properties(${TARG} PROPERTIES COMPILE_FLAGS \"-std=c++11\n\n#-stdlib=libc++\"\n\n#   LINK_FLAGS \"-std=c++11 -stdlib=libc++\")\n\n#endforeach(TARG)\n\n#endif()\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Opcodes/cuda/CMakeLists.txt" : {
      "ObjectId" : "54b4527d022edc0cb28f6a244df6fcb1232ce5bb",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set the lib type\n",
        "Line" : 9,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "#find_library(CUFFT cufft HINTS \"/Developer/NVIDIA/CUDA-6.0/lib\")\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# target_link_libraries(cudaop2 ${CUFFT})\n\n#target_link_libraries(cudaop5 ${CUFFT})\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#target_link_libraries(cudaop5 ${CUFFT})\n",
        "Line" : 54,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#target_link_libraries(cudaop2 ${CUFFT})\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#target_link_libraries(cudaop5 ${CUFFT})\n",
        "Line" : 70,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#target_link_libraries(cudaop2 ${CUFFT})\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "Opcodes/emugens/CMakeLists.txt" : {
      "ObjectId" : "646e6926fe457abd057aa230e3506eb7299886db",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(SOURCES emugens.c scugens.c)\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Opcodes/framebuffer/CMakeLists.txt" : {
      "ObjectId" : "f7e583cf4869925858c46c07886cced380caea20",
      "LastModified" : "2018-01-19T10:30:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Opcodes/hdf5/CMakeLists.txt" : {
      "ObjectId" : "38619a03b2028c15758c15070a7ed51a795a79e9",
      "LastModified" : "2018-01-19T10:30:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Opcodes/opencl/CMakeLists.txt" : {
      "ObjectId" : "08813b69acf87b8cca1de05317a7689ecc9540ea",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Opcodes/stk/CMakeLists.txt" : {
      "ObjectId" : "25e6d555a0670047fd960d9fecee167830ca05ce",
      "LastModified" : "2018-01-19T10:30:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_library(STK_LIBRARY stk)\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Assume that if this file exists, then we have the sources\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "Opcodes/websockets/CMakeLists.txt" : {
      "ObjectId" : "ccfad7cf0e76d5c9cd2c5b67b21fd390dba2ab30",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_library (crypto_library NAMES crypto.a\n",
        "Line" : 21,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "#find_library (crypto_library NAMES crypto)\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "cmake/CheckAtomic.cmake" : {
      "ObjectId" : "ae0f1fc496be2c013fbaf6072af10b2513b2ec58",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sometimes linking against libatomic is required for atomic ops, if\n\n# the platform doesn't support lock-free atomics.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/CompilerOptimizations.cmake" : {
      "ObjectId" : "75177ffb186cd96b14b6a9adbc17462d0fc78e70",
      "LastModified" : "2018-01-19T10:30:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindCsound.cmake" : {
      "ObjectId" : "e55b269e6d1e0e7e006b60be1fd70f98e5b28216",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the Csound library.\n\n# Once done this will define:\n\n#  CSOUND_FOUND - System has the Csound library\n\n#  CSOUND_INCLUDE_DIRS - The Csound include directories.\n\n#  CSOUND_LIBRARIES - The libraries needed to use the Csound library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CSOUND_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindFAUST.cmake" : {
      "ObjectId" : "62d7b54de89c46994b71b02edfd6ca4ee190c669",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Faust2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a static build of faust, hence\n\n# we have to add all the LLVM flags...\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindGMM.cmake" : {
      "ObjectId" : "102f0f4ea7a5f9ac9bea97319cc1123ee82976b9",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GMM library.\n\n# Once done this will define:\n\n#  GMM_FOUND - System has the GMM library.\n\n#  GMM_VERSION\n\n#  GMM_INCLUDE_DIRS - The GMM include directories.\n\n#  GMM_HAS_VECTOR_OSTREAM - Wether GMM defines operator<< for std::vector\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GMM_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLIBLO.cmake" : {
      "ObjectId" : "d7dc7f9088b3b0af6f17ce6c508fa5654185d476",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the Liblo library.\n\n# Once done this will define:\n\n#  LIBLO_FOUND - System has the OSC library.\n\n#  LIBLO_INCLUDE_DIRS - The OSC include directories.\n\n#  LIBLO_LIBRARIES - The libraries needed to use the OSC library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBLO_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLUAJIT.cmake" : {
      "ObjectId" : "be1fe9bfa56d797a1aad214d80934a9856854ab1",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the LuaJIT library.\n\n# Once done this will define\n\n#  LUAJIT_FOUND - System has LuaJIT\n\n#  LUAJIT_INCLUDE_DIRS - The LuaJIT include directories\n\n#  LUAJIT_LIBRARIES - The libraries needed to use LuaJIT\n\n#  LUAJIT_DEFINITIONS - Compiler switches required for using LuaJIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUAJIT_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindMUSICXML.cmake" : {
      "ObjectId" : "86c9385efad010928fd16c58f20662bd102f5c88",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MusicXML library.\n\n# Once done this will define:\n\n#  MUSICXML_FOUND - The system has the MusicXML library.\n\n#  MUSICXML_INCLUDE_DIRS - The MusicXML include directories.\n\n#  MUSICXML_LIBRARIES - The libraries needed to use MusicXML.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MUSICXML_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindPORTSMF.cmake" : {
      "ObjectId" : "5e456fe152288c341d95098dc5ea511aca0ce20a",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the PortSMF library.\n\n# Once done this will define:\n\n#  PORTSMF_FOUND - The system has the PortSMF library.\n\n#  PORTSMF_INCLUDE_DIRS - The PortSMF include directories.\n\n#  PORTSMF_LIBRARIES - The libraries needed to use MusicXML.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PORTSMF_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindSTK.cmake" : {
      "ObjectId" : "fcdc5d3168af30f0b2339ec939aea19a8e5e95de",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the STK library.\n\n# Once done this will define:\n\n#  STK_FOUND - System has the STK library.\n\n#  STK_INCLUDE_DIRS - The STK include directories.\n\n#  STK_LIBRARIES - The libraries needed to use the STK.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set STK_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindVSTSDK2X.cmake" : {
      "ObjectId" : "529c0bd3c89b52392bc3dd327d1175c156c6e1d1",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the VSTSDK2X library.\n\n# Once done this will define:\n\n#  VSTSDK2X_FOUND - The system has the VST SDK.\n\n#  VSTSDK2X_DIR - The VST SDK root directory.\n\n#  VSTSDK2X_INCLUDE_DIRS - The VST SDK include directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set VSTSDK2X_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "5c1dc21ffecdd8099c551ea2f4a8b7b3a5aab032",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These don't live here... but we list them here to have all headers\n\n# in one place\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "installer/linux/Makefile" : {
      "ObjectId" : "79eec9561f7639904f2cd5c878539efd8a950f71",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "installer/macosx/Custom_10.9.cmake" : {
      "ObjectId" : "1f7ac71871e27b85929c92c3eb9821aa652e90d7",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CUSTOM PROPERTIES TO SET\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GLOBAL\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(BUILD_JACK_OPCODES OFF)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "interfaces/CMakeLists.txt" : {
      "ObjectId" : "39126275d1f737b96d6460eaba3c190fd8bf64ab",
      "LastModified" : "2019-04-07T15:59:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Language bindings ##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C++ INTERFACE LIBRARY\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mingw64 needs this to create a valid .pyd.\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# users of this lib will need this dir included\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# SWIG INTERFACES\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note: Do not link to PYTHON_LIBRARY so that it can be loaded in any python\n",
        "Line" : 102,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# do nothing\n",
        "Line" : 136,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# The java package needs this unset or it will litter us with .java files\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "mingw64-linux/Custom-mingw64-i686.cmake" : {
      "ObjectId" : "a9d687641e6ced5d80733996b93ead322685caef",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CUSTOM PROPERTIES TO SET\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GLOBAL\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(PYTHON_INCLUDE_DIRS \"/usr/include/python2.7\")\n\n##set(BUILD_CSOUND_AC OFF)\n\n##set(BUILD_CSOUND_AC_PYTHON_INTERFACE OFF)\n\n##set(BUILD_CSOUND_AC_LUA_INTERFACE OFF)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### NOTE the processor type needs setting\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## also to test multicore\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -W -Wno-missing-field-initializers -Wno-unused-parameter -O3 -mtune=core2 -DJPFF\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "mingw64-linux/Custom-mingw64.cmake" : {
      "ObjectId" : "f81917ecfa133f5d53ba735dae709fb64d5046e2",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CUSTOM PROPERTIES TO SET\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GLOBAL\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(PYTHON_INCLUDE_DIRS \"/usr/include/python2.7\")\n\n##set(BUILD_CSOUND_AC OFF)\n\n##set(BUILD_CSOUND_AC_PYTHON_INTERFACE OFF)\n\n##set(BUILD_CSOUND_AC_LUA_INTERFACE OFF)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### NOTE the processor type needs setting\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## also to test multicore\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -W -Wno-missing-field-initializers -Wno-unused-parameter -O3 -mtune=core2 -DJPFF\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "mingw64-linux/Toolchain-mingw64-i686.cmake" : {
      "ObjectId" : "f8a80cae4217c78acfef6c24e82632a6d08ddcf7",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mingw64-linux/Toolchain-mingw64.cmake" : {
      "ObjectId" : "34e3c3bcda530aef392d59e86a2a28611c461779",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mingw64/Custom-mingw64-mkg.cmake" : {
      "ObjectId" : "6e3266839159699d93bba70415cf93f0c5c28ebf",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mingw64/Custom-mingw64.cmake" : {
      "ObjectId" : "ff04108def0fd766ec90d6fdd1c92417879fc93a",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mingw64/Toolchain-mingw64.cmake" : {
      "ObjectId" : "9a192ba787196aa04ac949c8d1b28acf39a31e87",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the name of the target operating system\n\n#SET(CMAKE_SYSTEM_NAME Windows)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# which compilers to use for C and C++\n\n#SET(CMAKE_C_COMPILER x86_64-w64-mingw32-gcc)\n\n#SET(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)\n\n#SET(CMAKE_RC_COMPILER x86_64-w64-mingw32-windres)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#GET_FILENAME_COMPONENT(MINGW_DEPS_DIR \"${CMAKE_CURRENT_BINARY_DIR}/../mingw64\" ABSOLUTE)\n\n#message(STATUS \">>> ${MINGW_DEPS_DIR}\")\n\n# here is the target environment located\n\n#SET(CMAKE_FIND_ROOT_PATH  /usr/x86_64-w64-mingw32 ${MINGW_DEPS_DIR} ${MINGW_DEPS_DIR}/usr/local)\n\n#SET(CMAKE_FIND_ROOT_PATH  /mingw64 /mingw64/x86_64-w64-mingw32 /usr)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(CMAKE_SYSTEM_PREFIX_PATH /mingw64/x85_64-w64-mingw32)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# http://www.cmake.org/Wiki/CMake_Cross_Compiling#The_toolchain_file\n\n# http://bulletphysics.org/Bullet/phpBB3/viewtopic.php?t=8959\n\n# http://stackoverflow.com/questions/19754316/cross-compiling-opencv-with-mingw-using-cmakein-linux-for-windows\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one is important\n\n#SET(CMAKE_SYSTEM_NAME Windows)\n\n##this one not so much\n\n##SET(CMAKE_SYSTEM_VERSION 1)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## specify the cross compiler\n\n#SET(PREFIX x86_64-w64-mingw32)\n\n##SET(CMAKE_MAKE_PROGRAM mingw32-make)\n\n#SET(CMAKE_C_COMPILER   ${PREFIX}-gcc)\n\n#SET(CMAKE_CXX_COMPILER ${PREFIX}-g++)\n\n#SET(CMAKE_AR ${PREFIX}-gcc-ar)\n\n#SET(CMAKE_NM ${PREFIX}-gcc-nm)\n\n#SET(CMAKE_RC_COMPILER  windres)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## specify the cross linker\n\n#SET(CMAKE_RANLIB ${PREFIX}-gcc-ranlib)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# where is the target environment\n\n#SET(CMAKE_FIND_ROOT_PATH / /mingw64)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "msvc/Custom-vs.cmake" : {
      "ObjectId" : "488ef9c0137940b667377179037be7ab741bd966",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CUSTOM PROPERTIES TO SET\n\n# GLOBAL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Csound build options for MSVC\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Csound use features\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# N/A\n",
        "Line" : 51,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Needs code changes for MSVC\n",
        "Line" : 52,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : "# N/A\n",
        "Line" : 53,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "# N/A\n",
        "Line" : 56,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# N/A\n",
        "Line" : 61,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# N/A\n",
        "Line" : 66,
        "CharPositionInLine" : 22
      },
      "9" : {
        "Text" : "# Misc build options\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable when packaging\n",
        "Line" : 73,
        "CharPositionInLine" : 22
      },
      "11" : {
        "Text" : "# Explicit settings for locally downloaded dependencies\n\n# TODO ideally find all of these on path\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Disable the following warnings in msvc\n\n# - C4244 loss of data in conversion\n\n# - C4267 loss of data in conversion\n\n# - C4005 macro refinitions\n\n# - C4996 unsafe functions\n\n# - C4047 levels of indirection difference (int and void*)\n\n# - C4090 different const qualifiers\n\n# - C4477 format string type differences\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "9e24ed70be15cec1e107f3f416f8b91fd61a4a1a",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake 2.8.7 has a macro GETTEXT_PROCESS_PO_FILES\n\n# We don't use it because it may be too new.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/c/CMakeLists.txt" : {
      "ObjectId" : "4d8c9cb974dd09c9febf4693445e86c8d17b4eb0",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests that depend on cunit\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(testCscore cscore_tests.c)\n\n#target_link_libraries(testCscore ${CSOUNDLIB} ${CUNIT_LIBRARY} pthread)\n\n#add_test(NAME testCscore\n\n#        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/tests/c/\n\n#        COMMAND $<TARGET_FILE:testCscore> ${CMAKE_SOURCE_DIR}/tests/c/ -arg2 ${TEST_ARGS})\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/commandline/CMakeLists.txt" : {
      "ObjectId" : "2058b7c0d697045b2fa6aa242b71de2ae5a974ea",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/regression/CMakeLists.txt" : {
      "ObjectId" : "e70e0ae761308a58fec2c64c30b9debf38d26861",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/soak/CMakeLists.txt" : {
      "ObjectId" : "9f0000c12be92fe48a78271260d0c23e65af4437",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "util/CMakeLists.txt" : {
      "ObjectId" : "50a78602526f68bcb8d6b58896b470a1ddf91958",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# UTILITY PLUGIN AND PROGRAMS\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_library(LIBSNDFILE_LIBRARY sndfile libsndfile-1)\r\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "util/SDIF/CMakeLists.txt" : {
      "ObjectId" : "92d4668acb131fbcd71001f472f2eaa03d7d1593",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SDIF2AD Utility\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "util1/CMakeLists.txt" : {
      "ObjectId" : "639ed0ac64d541bc586cba6fa09ef875ba319eeb",
      "LastModified" : "2019-04-03T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#extra utilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 43,
    "QMAKE" : 2,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 3957
}