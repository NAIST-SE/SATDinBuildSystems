{
  "Repository" : "8069016",
  "Revision" : "HEAD",
  "ObjectId" : "8387ecae30064996ab354196acd6f597d919903e",
  "CommitTime" : "2017-11-19T19:03:39Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4c68283eeb8233186adaafae77546369aafe4b42",
      "LastModified" : "2015-04-14T19:48:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find includes in corresponding build directories\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the QtWidgets library\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Executables fail to build with Qt 5 in the default configuration\n\n# without -fPIE. We add that here.\n\n#set(CMAKE_CXX_FLAGS \"${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS}\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include the header of the database overlay lib\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable support for C++ 11\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use the Widgets module from Qt 5.\n\n#target_link_libraries(helloworld Qt5::Widgets)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "QTournament.pro" : {
      "ObjectId" : "ee7c197ded5507dbccfeff277cac1d2663afcd41",
      "LastModified" : "2017-10-31T20:46:02Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-09-12T13:04:40\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Optimization level O3 for release\n\n#QMAKE_CXXFLAGS_RELEASE -= -O2\n\n#QMAKE_CXXFLAGS_RELEASE += -O3\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Optimization level O1 for debug\n\n#QMAKE_CXXFLAGS_DEBUG += -O0\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Detect the platform we are running on\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# linking against BOOST fails if this is not set\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#win32:CONFIG(release, debug|release): LIBS += -L$$PWD/../../../SqliteOverlay/release/ -lSqliteOverlay\n\n#else:win32:CONFIG(debug, debug|release): LIBS += -L$$PWD/../../../SqliteOverlay/debug/ -lSqliteOverlay\n\n#else:unix:!macx:CONFIG(debug, debug|release): LIBS += -L$$PWD/../../SqliteOverlay/debug/ -lSqliteOverlay\n\n#else:unix:!macx:CONFIG(release, debug|release): LIBS += -L$$PWD/../../SqliteOverlay/release/ -lSqliteOverlay\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#win32: INCLUDEPATH += $$PWD/../../../SqliteOverlay\n\n#else:unix:!macx: INCLUDEPATH += $$PWD/../../SqliteOverlay\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#INCLUDEPATH += $$PWD/../../SqliteOverlay\n\n#DEPENDPATH += $$PWD/../../SqliteOverlay\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "f79be5116747bfe59b16369f9aacdef972b9ce2c",
      "LastModified" : "2017-05-06T13:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# linking fails if this is not set\n",
        "Line" : 12,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : "#\n\n# Qt\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# My lib of sloppyly implemented helper functions\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# My SqliteOverlay\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#target_compile_options(${PROJECT_NAME} PRIVATE \"-Weffc++\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/cmakeModules/FindSQLite3.cmake" : {
      "ObjectId" : "aa650e38afe95c405566dcabdba70c6c579533a5",
      "LastModified" : "2017-05-02T13:32:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Sqlite3\n\n# Once done this will define\n\n#\n\n#  SQLITE3_FOUND - system has Sqlite3\n\n#  SQLITE3_INCLUDE_DIRS - the Sqlite3 include directory\n\n#  SQLITE3_LIBRARIES - Link these to use Sqlite3\n\n#  SQLITE3_DEFINITIONS - Compiler switches required for using Sqlite3\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the SQLITE3_INCLUDE_DIRS and SQLITE3_LIBRARIES variables only in the advanced view\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "translate.pro" : {
      "ObjectId" : "64fa4aff5a52d6c9b8e18082b99486180e979d26",
      "LastModified" : "2017-05-02T13:32:27Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "QMAKE" : 2
  },
  "ElapsedTime" : 718
}