{
  "Repository" : "82427476",
  "Revision" : "HEAD",
  "ObjectId" : "189fceff2c744d441b0257e987021b7bd50f0264",
  "CommitTime" : "2019-04-16T15:54:47Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "82dfa8e9e6ec8ff55c06751ea3f88937caecc324",
      "LastModified" : "2019-02-09T13:50:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/*\n\n# * This file is part of the source code of the software program\n\n# * Vampire. It is protected by applicable\n\n# * copyright laws.\n\n# *\n\n# * This source code is distributed under the licence found here\n\n# * https://vprover.github.io/license.html\n\n# * and in the source directory\n\n# *\n\n# * In summary, you are allowed to use Vampire for non-commercial\n\n# * uses but not allowed to distribute, modify, copy, create derivatives,\n\n# * or use in competitions. \n\n# * For other uses of Vampire please contact developers for a different\n\n# * licence, which we will make an effort to provide. \n\n# */\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################\n\n# File:    makefile \n\n# Author:  Andrei Voronkov\n\n# Created: 07/04/2006\n\n# Purpose: makefile for Vampire\n\n################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following flags are available for compilation:\n\n#   VDEBUG           - the debug mode\n\n#   VTEST            - testing procedures will also be compiled\n\n#   CHECK_LEAKS      - test for memory leaks (debugging mode only)\n\n#   UNIX_USE_SIGALRM - the SIGALRM timer will be used even in debug mode\n\n#   GNUMPF           - this option allows us to compile with bound propagation or without it ( value 1 or 0 ) \n\n#                      Importantly, it includes the GNU Multiple Precision Arithmetic Library (GMP)\n\n#   VZ3              - compile with Z3\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# debugging for spider \n",
        "Line" : 36,
        "CharPositionInLine" : 80
      },
      "4" : {
        "Text" : "# DELETEMEin2017: the bug with gcc-6.2 and problems in ClauseQueue could be also fixed by adding -fno-tree-ch\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# no debugging \n",
        "Line" : 38,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : "#-pedantic\n",
        "Line" : 39,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "#XFLAGS = -g -DVDEBUG=1 -DVTEST=1 -DCHECK_LEAKS=1 # full debugging + testing\n\n#XFLAGS = $(DBG_FLAGS)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# standard debugging only\n",
        "Line" : 47,
        "CharPositionInLine" : 71
      },
      "9" : {
        "Text" : "#XFLAGS = -g -DVDEBUG=1 -DCHECK_LEAKS=0 -DUSE_SYSTEM_ALLOCATION=1 -DVALGRIND=1 -DGNUMP=$(GNUMPF)# memory leaks\n\n#XFLAGS = $(REL_FLAGS)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: consider trying -flto (see https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#XFLAGS = -O6 -DVDEBUG=0 -march=native -mtune=native # no debugging \n\n#XFLAGS = -O6 -DVDEBUG=0 -msse3 # no debugging \n\n#XFLAGS = -O6 -DVDEBUG=0 -msse3 -g # no debugging \n\n#XFLAGS = -O6 -DVDEBUG=0 -march=core2 -msse4.1 -mtune=core2 # no debugging \n\n#XFLAGS = -O6 -DVDEBUG=0 -march=core2 -msse4.1 -mtune=core2 -g # no debugging \n\n#XFLAGS = -O6 -DUSE_SYSTEM_ALLOCATION=1 -DVDEBUG=0 -march=core2 -msse4.1 -mtune=core2 -g # no debugging \n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#XFLAGS = -pg -g -O6 -DVDEBUG=0 # profiling with max optimization\n\n#XFLAGS = -pg -g -O6 -DVDEBUG=0 -fno-inline # profiling with no inlining\n\n#XFLAGS = -pg -g -DVDEBUG=0 # profiling\n\n#XFLAGS = -pg -g -DVDEBUG=1 -DCHECK_LEAKS=0 # profiling & debugging\n\n#XFLAGS = -fprofile-arcs -pg -O6 -DVDEBUG=0 # coverage & profiling optimized\n\n#XFLAGS = -O0 -DVDEBUG=0 -g # no debugging, no optimization\n\n#XFLAGS = -O6 -DVDEBUG=1 -DCHECK_LEAKS=0 -g # debugging and optimized\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#XFLAGS = -O6 -DVDEBUG=0 -g # Cachegrind\n\n#XFLAGS = -O6 -DVDEBUG=0 -DUNIX_USE_SIGALRM=0 -g # Cachegrind\n\n#XFLAGS = -O2 -DVDEBUG=0 -fno-inline-functions -fno-inline-functions-called-once -fno-default-inline -fno-inline-small-functions -fno-early-inlining -g # Callgrind\n\n#XFLAGS = -O6 -DVDEBUG=0 -fno-inline-functions -fno-inline-functions-called-once -fno-default-inline -fno-early-inlining -g # Callgrind\n\n#XFLAGS = -O0 -DVDEBUG=0 -DUNIX_USE_SIGALRM=0 -fno-inline-functions -fno-inline-functions-called-once -fno-default-inline -fno-early-inlining -g # Callgrind\n\n#XFLAGS = -O2 -DVDEBUG=0 -fno-inline-functions -fno-inline-functions-called-once -fno-default-inline -fno-early-inlining -g # Callgrind\n\n#XFLAGS = -O6 -DVDEBUG=0 -DUNIX_USE_SIGALRM=0 -fno-inline -g # Callgrind\n\n#XFLAGS = -O0 -DVDEBUG=0 -DUSE_SYSTEM_ALLOCATION=1 -fno-inline -fno-default-inline -g # Valgrind\n\n#XFLAGS = -O0 -DVDEBUG=0 -DUSE_SYSTEM_ALLOCATION=1 -DVALGRIND=1 -fno-inline -g #Valgrind\n\n#XFLAGS = -O0 -DVDEBUG=0 -DUSE_SYSTEM_ALLOCATION=1 -DVALGRIND=1 -g #Valgrind\n\n#XFLAGS = -O6 -DVDEBUG=0 -DUSE_SYSTEM_ALLOCATION=1 -DVALGRIND=1 -g #Valgrind\n\n#XFLAGS = -O0 -DVDEBUG=1 -DCHECK_LEAKS=0 -DUSE_SYSTEM_ALLOCATION=1 -DVALGRIND=1 -fno-inline -fno-default-inline -g #Valgrind\n\n#XFLAGS = -O0 -DVDEBUG=0 -DUSE_SYSTEM_ALLOCATION=1 -DEFENCE=1 -fno-inline -g -lefence #Electric Fence\n\n#XFLAGS = -O6 -DVDEBUG=0 -DUSE_SYSTEM_ALLOCATION=1 -DEFENCE=1 -g -lefence #Electric Fence\n\n#XFLAGS = -O6 -DVDEBUG=0 -DUSE_SYSTEM_ALLOCATION=1 -g\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################\n\n# Specific build options for some targets\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -Wno-unknown-warning-option for clang\n",
        "Line" : 147,
        "CharPositionInLine" : 65
      },
      "17" : {
        "Text" : "################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\t  Api/Problem.o\\\t  \n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#        Lib/OptionsReader.o\\\n#        Lib/Graph.o\\\n\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#        Kernel/MatchTag.o\\\n#        Kernel/Assignment.o\\     \n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#        Kernel/Constraint.o\\\n#         Kernel/Number.o\\\n#         Kernel/Rational.o\\\n#         Kernel/V2CIndex.o\\\n    \n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#         Indexing/FormulaIndex.o\\         \n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#         Inferences/CTFwSubsAndRes.o\\\n\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#         SAT/ISSatSweeping.o\\\t \n\n#         SAT/SATClauseSharing.o\\\n#         SAT/TransparentSolver.o\\\n#         SAT/SingleWatchSAT.o\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#         Shell/PARSER_TKV.o\\\n#         Shell/SMTLEX.o\\\n#         Shell/SMTPAR.o\\\n#         Shell/CParser.o\\\n#         Shell/AxiomGenerator.o\\\n#         Shell/EqualityAxiomatizer.o\\\n#         Shell/GlobalOptions.o\\\n#         Shell/Lexer.o\\\n#         Shell/PDUtils.o\\\n#         Shell/Refutation.o\\\n#         Shell/SMTPrinter.o\\\n#         Shell/ConstantRemover.o\\\n#         Shell/ConstraintReaderBack.o\\\n#         Shell/EqualityVariableRemover.o\\\n#         Shell/EquivalentVariableRemover.o\\\n#         Shell/HalfBoundingRemover.o\\\n#         Shell/SubsumptionRemover.o\\\n\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# testing procedures\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#         Test/TestUtils.o\\         \n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#Test/CheckedFwSimplifier.o\\\n\n",
        "Line" : 435,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# ClausifierDependencyFix.o\\\n\n",
        "Line" : 482,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "#VCLAUSIFY_BASIC := $(VD_OBJ) $(VL_OBJ) $(VLS_OBJ) $(VK_OBJ) $(ALG_OBJ) $(VI_OBJ) $(VINF_OBJ) $(VSAT_OBJ) $(VST_OBJ) $(VS_OBJ) $(VT_OBJ)\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#VGROUND_BASIC := $(VD_OBJ) $(VL_OBJ) $(VK_OBJ) $(VI_OBJ) $(VSAT_OBJ) $(VS_OBJ) $(VT_OBJ)  \n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#UCOMPIT_OBJ = $(VCOMPIT_BASIC) Global.o compit2.o compit2_impl.o\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#default make disabled\n",
        "Line" : 536,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#the $(CONF_ID) directory is considered intermediate and make would otherwise try to delete it\n\n#(this forbids deletion of intermediate files)\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "################################################################\n\n# automated generation of Vampire revision information\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We extract the revision number from svn every time the svn meta-data are modified\n\n# (that's why there is the dependency on .svn/entries) \n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#.svn/entries:\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#version.cpp: .svn/entries Makefile\n\n#\techo \"//Automatically generated file, see Makefile for details\" > $@\n\n#\tsvn info | (grep Revision || echo \"Revision: unknown\") | sed 's|Revision: \\(.*\\)|const char* VERSION_STRING = \"Vampire $(VERSION_NUMBER) (revision \\1)\";|' >> $@\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Since we switched to Git we extract the commit hash.\n\n# The dependency on .git/HEAD tracks switching between branches,\n\n# the dependency on .git/index tracks new commits.\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "################################################################\n\n# separate directory for object files implementation\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# different directory for each configuration, so there is no need for \"make clean\"\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\n",
        "Line" : 571,
        "CharPositionInLine" : 38
      },
      "43" : {
        "Text" : "#cancel the implicit rule\n",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "################################################################\n\n# targets for executables\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#$(CXX) -static $(CXXFLAGS) $(Z3LIB) $(filter %.o, $^) -o $@\n\n#strip $@\n",
        "Line" : 620,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "#$(CXX) -static $(CXXFLAGS) $(filter %.o, $^) -o $@\n\n#strip $@\n",
        "Line" : 630,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "################################################################\n\n# definitions of targets\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n#ucompit: $(UCOMPIT_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n#\n\n#sat: $(SAT_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n##\tstrip sat\n\n#\n\n#test: $(TEST_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n#\n\n#rtest: $(RTEST_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n#\n\n#test_alloc: $(ALLOCTEST_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n#\n\n#\n\n#test_DHMap: $(DHTEST_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n#\n\n#test_DHMultiset: $(DHMSTEST_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n#\n\n#test_BinaryHeap: $(BHTEST_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n\n#\n\n#test_SkipList: $(SLTEST_OBJ) $(EXEC_DEF_PREREQ)\n\n#\t$(CXX) $(CXXFLAGS) $^ -o $@\n",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "###########################\n\n# include header dependencies\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1349
}