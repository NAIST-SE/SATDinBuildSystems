{
  "Repository" : "24577104",
  "Revision" : "HEAD",
  "ObjectId" : "2175b9a33e668ee8efdc943191820f5798f08fa1",
  "CommitTime" : "2019-04-05T13:11:20Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "7094d6a525487ee774277ef4b33e09d2a91db44e",
      "LastModified" : "2019-04-05T13:11:20Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#CLIENT_DATA_DIR = @datadir_relative@/domterm\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On WSL (Windows Subsystem for Linux) 'electron' is a Windows executable,\n\n# so main.js must be copied, not linked:\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#JS_LIBS = hlib/FileSaver.js hlib/ResizeSensor.js hlib/wcwidth.js hlib/browserkeymap.js\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(CLIENT_DATA_DIR)/hlib/domterm-all.js: hlib/terminal.js $(JS_LIBS)\n\n#\t$(MKDIR_P) $(CLIENT_DATA_DIR)/hlib\n\n#if WITH_CLOSURE_COMPILER\n\n# ADVANCED_OPTIMIZATION doesn't quite work, even with closure-externs.js.\n\n# There are some problem - and qtdomterm doesn't work at all. FIXME\n\n#\t@CLOSURE_COMPILER@ --js hlib/terminal.js --js hlib/closure-externs.js --compilation_level ADVANCED_OPTIMIZATIONS >tmp-domterm-all.js\n\n#\t@CLOSURE_COMPILER@ --js $(JS_LIBS) >>tmp-domterm-all.js\n\n#\t(cd $(srcdir) && @CLOSURE_COMPILER@ --language_in=ES6 --language_out=ES5 --js hlib/terminal.js --js $(JS_LIBS)) >tmp-domterm-all.js\n\n#else\n\n#\t(cd $(srcdir) && cat $(JS_LIBS) hlib/terminal.js) > tmp-domterm-all.js\n\n#endif\n\n#\tmv tmp-domterm-all.js $(CLIENT_DATA_DIR)/hlib/domterm-all.js\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 289:141 token recognition error at: '\"\\1'\nline 289:198 token recognition error at: '\\1'\nline 289:210 token recognition error at: '\\2'\nline 315:25 token recognition error at: '\"></a>Why|Why|' <web/index.html >web/tmp-index.html\\n\\tmv web/tmp-index.html web/index.html\\n\\tcd $(srcdir) && cp $(DOC_IMAGES) $(abs_builddir)/web/images\\n\\nWEB_SERVER_ROOT=bothner@bothner.com:domterm.org\\nupload-web: web/index.html\\n\\tcd web && \\\\n\\t  rsync -v -r -u -l -p -t --relative . $(WEB_SERVER_ROOT)\\n\\nbin/qtdomterm:\\n\\tcd qtdomterm && @QMAKE@ -makefile PREFIX=$(prefix) && $(MAKE)\\n\\nELECTRON_FILES = electron/package.json electron/main.js electron/preload.js\\n\\ninstall-data-local:\\n\\t$(MKDIR_P) $(DESTDIR)$(pkgdatadir)\\nif WITH_JAVA\\n\\t$(INSTALL_DATA) -t $(DESTDIR)$(pkgdatadir) share/domterm/domterm.jar\\nelse\\nif ENABLE_COMPILED_IN_RESOURCES\\nelse\\n\\t$(INSTALL_DATA) -t $(DESTDIR)$(pkgdatadir) share/domterm/domterm.jar\\nendif\\nendif\\n\\t$(MKDIR_P) $(DESTDIR)$(datadir)/applications \\\\n\\t    $(DESTDIR)$(datadir)/appdata\\n\\t$(INSTALL_DATA) $(srcdir)/domterm.desktop $(DESTDIR)$(datadir)/applications/\\n\\t$(INSTALL_DATA) $(srcdir)/domterm.appdata.xml $(DESTDIR)$(datadir)/appdata/\\nif WITH_QTWEBENGINE\\n\\t$(INSTALL_DATA) $(srcdir)/qtdomterm.desktop $(DESTDIR)$(datadir)/applications/\\n\\t$(INSTALL_DATA) $(srcdir)/qtdomterm.appdata.xml $(DESTDIR)$(datadir)/appdata/\\nendif\\n\\t$(MKDIR_P) $(DESTDIR)$(datadir)/domterm/electron\\n\\t$(INSTALL_DATA) $(srcdir)/electron/package.json $(srcdir)/electron/main.js $(srcdir)/electron/preload.js\\\\n\\t    $(DESTDIR)$(datadir)/domterm/electron/\\n\\t$(MKDIR_P) $(DESTDIR)$(datadir)/domterm/help\\n\\t$(INSTALL_DATA) share/domterm/help/*.txt share/domterm/help/*.html \\\\n\\t  $(DESTDIR)$(datadir)/domterm/help/\\n\\nuninstall-local:\\n\\trm -f $(DESTDIR)$(datadir)/applications/domterm.desktop \\\\n\\t  $(DESTDIR)$(datadir)/applications/qtdomterm.desktop \\\\n\\t  $(DESTDIR)$(datadir)/appdata/domterm.appdata.xml \\\\n\\t  $(DESTDIR)$(datadir)/appdata/qtdomterm.appdata.xml\\n\\trm -f $(DESTDIR)$(bindir)/domterm$(EXEEXT)\\nif WITH_QTWEBENGINE\\n\\trm -f $(DESTDIR)$(bindir)/qtdomterm$(EXEEXT)\\nendif\\n\\trm -rf $(DESTDIR)$(datadir)/domterm\\n\\ninstall-ldomterm:\\n\\tcd lws-term && $(MAKE) install\\n\\ninstall-exec-hook:\\n\\t$(MKDIR_P) $(DESTDIR)$(bindir)\\nif WITH_QTWEBENGINE\\n\\t$(INSTALL_PROGRAM) bin/qtdomterm$(EXEEXT) $(DESTDIR)$(bindir)/qtdomterm$(EXEEXT)\\nendif\\n\\n$(pkgdatadir)/help:\\n\\t$(MKDIR_P) $(pkgdatadir)/help\\n\\nshare/domterm/help:\\n\\t$(MKDIR_P) share/domterm/help\\n\\nASCIIDOCTOR = asciidoctor\\n#ADOC2HTML_OPTS = --no-doc-title --initial-header-level=2 \\\\n#  --link-stylesheet --stylesheet=docutils.css\\nADOC2HTML_OPTS = -s\\nADOC2MAN_OPTS = -b manpage\\n\\nif WITH_ASCIIDOCTOR\\nshare/domterm/help/%.txt: doc/help/%.adoc\\n\\t$(ASCIIDOCTOR) $(ADOC2MAN_OPTS) $< -o - \\\\n\\t  | man -l --nj --nh - \\\\n\\t  | $(SED) -e '1,3d' -e '4s/^ *//' -e '$$d' > $@\\nelse\\nshare/domterm/help/%.txt: doc/help/%.adoc share/domterm/help\\n\\t$(SED) -e '/^ifdef::basebackend-manpage/,/^endif::/d' \\\\n\\t  -e '/^ifndef::basebackend-manpage/d' -e '/^endif::/d' \\\\n\\t  -e 's/^[+]$$//' \\\\n\\t< $< > $@\\nendif\\n\\nshare/domterm/help/%.html: doc/help/%.adoc share/domterm/help\\n\\t$(ASCIIDOCTOR) $(ADOC2HTML_OPTS) $< -o $@\\n\\n#share/domterm/help/docutils.css: share/domterm/help\\n#\\techo | $(RADOC2HTML) - - | sed -e '1,/<style /d' -e '/<\\/style>/,$$d' >$@\\n\\nshare/man/man1/%.1: doc/help/%.adoc\\n\\t$(MKDIR_P) doc/man/man1\\n\\t$(ASCIIDOCTOR) $(ADOC2MAN_OPTS) $< -o $@\\n\\n# helper rule for updating hlib/wcwidth.js\\n# (Does not handle combining adjacent ranges - do that manually.)\\nEAST_ASIAN_WIDTH_TXT = /tmp/EastAsianWidth.txt\\nwcwidth-list.txt: $(EAST_ASIAN_WIDTH_TXT)\\n\\tsed -n \\\\n\\t  -e 's/^\\([0-9A-F][0-9A-F]*\\);[FW].*$$/    0x\\1'\nline 414:53 token recognition error at: '\\1'\nline 415:70 token recognition error at: '\\1'\nline 415:76 token recognition error at: '\\2'\n"
    },
    "lws-term/Makefile.am" : {
      "ObjectId" : "511ceb7c5a9b4392bbfa7cb0826f0653776e3afe",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Note we use a hard link.  This is so when we execute ../bin/domterm,\n\n# and then try figure out the executable's directory (so we can look for\n\n# resource files) we get ../bin and not the lws-term.\n\n# (This is to make execute-in-place and execute-after-install be similar.)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CLIENT_DATA_DIR = @DOMTERM_DIR_RELATIVE@\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include \"server.h\"' >tmp-resources.c\n",
        "Line" : 49,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "#define \\1 \\2|' \\\n\t    >>tmp-resources.c; \\\n\tdone\n",
        "Line" : 52,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 4,
      "Errorlog" : "line 70:87 token recognition error at: '\"\\nEXTRA_DIST = junzip.h server.h whereami.h utils.h\\n\u0000'\n"
    },
    "qtdomterm/qtdomterm.pro" : {
      "ObjectId" : "733c7c0763ed49989cb8287aacf1a2cab22b4dfd",
      "LastModified" : "2019-03-25T05:13:27Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# CONFIG += debug\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DESTDIR = ../bin\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "QMAKE" : 1,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1102
}