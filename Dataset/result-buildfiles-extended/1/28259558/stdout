{
  "Repository" : "28259558",
  "Revision" : "HEAD",
  "ObjectId" : "c34ca9b2272dc320de3589e1aa26b701e60e4c7a",
  "CommitTime" : "2019-04-17T05:26:05Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2ff131a1b2ca7eebf8b77dd68c1d7e1139f8345e",
      "LastModified" : "2019-03-13T06:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate a compile commands file as complete database for vim-YouCompleteMe or some other similar tools\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# generate qm\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Test architecture\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add compiler flags -mieee for mathmatic\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Install settings\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## qm files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## dev files\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## services files\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/DdeDock/DdeDockConfig.cmake" : {
      "ObjectId" : "a2dab5125a7e5efd5237f0f92e6b45215febeae3",
      "LastModified" : "2018-11-05T09:39:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "frame/CMakeLists.txt" : {
      "ObjectId" : "8dc490f3baadcc74c1ee650f22a4a48011c9256c",
      "LastModified" : "2018-11-05T09:39:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# driver-manager\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# bin\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "9f2425df5afe6858c5e2bbed2510fadb77d6a75a",
      "LastModified" : "2019-03-27T08:01:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(\"disk-mount\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/datetime/CMakeLists.txt" : {
      "ObjectId" : "34665290014333e0d774e45d7633cada665de3d5",
      "LastModified" : "2018-11-05T09:39:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/disk-mount/CMakeLists.txt" : {
      "ObjectId" : "c0d48c70d02183060694ac609b0797af9120f2df",
      "LastModified" : "2018-11-05T09:39:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/keyboard-layout/CMakeLists.txt" : {
      "ObjectId" : "1ac8fea35162f289cfd403a9921a76e77babed2b",
      "LastModified" : "2018-11-05T09:39:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/network/CMakeLists.txt" : {
      "ObjectId" : "9c70eb23774acf06c1b6aaacf7a36d38e314e460",
      "LastModified" : "2018-11-15T09:37:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/onboard/CMakeLists.txt" : {
      "ObjectId" : "1943820e53db94c099df68e7ce53641c70abe61b",
      "LastModified" : "2018-12-24T01:09:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/overlay-warning/CMakeLists.txt" : {
      "ObjectId" : "dc8f9c4c776945b87dad9142d30e9a87a2010bc8",
      "LastModified" : "2019-03-27T08:01:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# policy kit\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/plugin-guide/home_monitor/CMakeLists.txt" : {
      "ObjectId" : "7aba096aae38d7f5169ac8ebdac62ca1a575768c",
      "LastModified" : "2019-03-27T08:01:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 学习 cmake 时建议直接从命令列表作为入口，遇到不清楚意思的命令都可以在此处查阅：\n\n# https://cmake.org/cmake/help/latest/manual/cmake-commands.7.html\n\n# 另外下面是完整的文档入口：\n\n# https://cmake.org/cmake/help/latest/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 设置运行该脚本所需的 cmake 最低版本\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 使用 set 命令设置一个变量\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 设置项目名称\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 启用 qt moc 的支持\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 启用 qrc 资源文件的支持\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate a compile commands file as complete database for vim-YouCompleteMe or some other similar tools\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 指定所有源码文件\n\n# 使用了 cmake 的 file 命令，递归查找项目目录下所有头文件和源码文件，\n\n# 并将结果放入 SRCS 变量中，SRCS 变量可用于后续使用\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# 指定要用到的库\n\n# 使用了 cmake 的 find_package 命令，查找库 Qt5Widgets 等，\n\n# REQUIRED 参数表示如果没有找到则报错\n\n# find_package 命令在找到并加载指定的库之后会设置一些变量，\n\n# 常用的有：\n\n# <库名>_FOUND          是否找到（Qt5Widgets_FOUND）\n\n# <库名>_DIR            在哪个目录下找到的（Qt5Widgets_DIR）\n\n# <库名>_INCLUDE_DIRS   有哪些头文件目录（Qt5Widgets_INCLUDE_DIRS）\n\n# <库名>_LIBRARIES      有哪些库文件（Qt5Widgets_LIBRARIES）\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# find_package 命令还可以用来加载 cmake 的功能模块\n\n# 并不是所有的库都直接支持 cmake 查找的，但大部分都支持了 pkg-config 这个标准，\n\n# 因此 cmake 提供了间接加载库的模块：FindPkgConfig， 下面这行命令表示加载 FindPkgConfig 模块，\n\n# 这个 cmake 模块提供了额外的基于 “pkg-config” 加载库的能力\n\n# 执行下面的命令后后会设置如下变量，不过一般用不到：\n\n# PKG_CONFIG_FOUND            pkg-config 可执行文件是否找到了\n\n# PKG_CONFIG_EXECUTABLE       pkg-config 可执行文件的路径\n\n# PKG_CONFIG_VERSION_STRING   pkg-config 的版本信息\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 加载 FindPkgConfig 模块后就可以使用 pkg_check_modules 命令加载需要的库\n\n# pkg_check_modules 命令是由 FindPkgConfig 模块提供的，因此要使用这个命令必须先加载 FindPkgConfig 模块。\n\n# 执行 pkg_check_modules 命令加载库也会设置一些类似执行 find_package 加载库后设置的变量：\n\n# DdeDockInterface_FOUND\n\n# DdeDockInterface_INCLUDE_DIRS\n\n# DdeDockInterface_LIBRARIES\n\n# 还有有另外的一些变量以及更灵活的用法，比如一次性查找多个库，这些请自行查找 cmake 文档学习。\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# add_definitions 命令用于声明/定义一些编译/预处理参数\n\n# 根据 cmake 文档描述此命令已经由另外几个功能划分的更为细致的命令所取代，具体请查阅文档\n\n# 在我们这里的例子应该使用较新的 add_compile_definitions 命令，不过为了保持与 dock 已有插件一致，\n\n# 暂时仍然使用 add_definitions，add_definitions 的语法很简单就是直接写要定义的 flag 并在前面加上 \"-D\" 即可\n\n# 括号中的 ${QT_DEFINITIONS} 变量会在执行 cmake 时展开为它的值，这个变量属于历史遗留，应该是在 qt3/qt4 时有用，\n\n# 基于 qt5 或更高版本的新插件不必使用此变量。要查看 qt5 的库定义了哪些变量应该查看变量：${Qt5Widgets_DEFINITIONS}\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# 新增一个编译目标\n\n# 这里使用命令 add_library 来表示本项目要生成一个库文件目标，\n\n# 类似的还有命令 add_executable 添加一个可执行二进制目标，甚至 add_custom_target(使用较少) 添加自定义目标\n\n# SHARED 表示生成的库应该是动态库，\n\n# 变量 ${PLUGIN_NAME} 和 ${SRCS} 都是前面处理好的，\n\n# 另外 qrc 资源文件也应该追加在后面以编译进目标中。\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 设置目标的生成位置，这里表示生成在执行 make 的目录,\n\n# 另外还有很多可用于设置的属性，可查阅 cmake 文档。\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# 设置目标要使用的 include 目录，即头文件目录\n\n# 变量 ${DtkWidget_INCLUDE_DIRS} 是在前面执行 find_package 命令时引入的\n\n# 当出现编译失败提示找不到某些库的头文件时应该检查此处是否将所有需要的头文件都包含了\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# 设置目标要使用的链接库\n\n# 变量 ${DtkWidget_LIBRARIES} 和 ${Qt5Widgets_LIBRARIES} 是在前面执行 find_package 命令时引入的\n\n# 当出现运行时错误提示某些符号没有定义时应该检查此处是否将所有用的库都写在了这里\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# 设置安装路径的前缀(默认为\"/usr/local\")\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# 设置执行 make install 时哪个目标应该被 install 到哪个位置\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "plugins/power/CMakeLists.txt" : {
      "ObjectId" : "5f5b30eb01495de02215d0dd9821d5fb0a00eedb",
      "LastModified" : "2019-03-27T08:01:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/shutdown/CMakeLists.txt" : {
      "ObjectId" : "648a6183a28ebaab0a784dfdce0dccc35c3df987",
      "LastModified" : "2019-04-01T03:25:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/sound/CMakeLists.txt" : {
      "ObjectId" : "5d2f00ee8a33355a389f3b23ed25bd6af40cf605",
      "LastModified" : "2019-03-27T08:01:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/trash/CMakeLists.txt" : {
      "ObjectId" : "18a48b8029f48f45c5779f2fc4a08f3f06d44daa",
      "LastModified" : "2019-03-27T08:01:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/tray/CMakeLists.txt" : {
      "ObjectId" : "be2fe617ace165f4670b35add63b4f99e6d3ff53",
      "LastModified" : "2019-04-09T01:09:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sources files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 16
  },
  "ElapsedTime" : 1321
}