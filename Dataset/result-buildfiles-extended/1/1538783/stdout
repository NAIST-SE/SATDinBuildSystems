{
  "Repository" : "1538783",
  "Revision" : "HEAD",
  "ObjectId" : "3d674f73c4af2f7db5f77394658348d100eeca14",
  "CommitTime" : "2019-04-16T17:26:50Z",
  "Files" : {
    "cpan/temp-AI-Pathfinding-OptimizeMultiple-system-tests/Makefile" : {
      "ObjectId" : "4f7dbb2c7ab49aac469ab9a614a8211c54af53ca",
      "LastModified" : "2012-12-21T20:35:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Run the smoke test.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cpan/temp-AI-Pathfinding-OptimizeMultiple-system-tests/optimize-seq/Makefile" : {
      "ObjectId" : "de5ac78b42d74d70e0069a8ddfe25019cb32c68b",
      "LastModified" : "2012-12-21T20:35:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ext-ifaces/FC-Pro/Makefile" : {
      "ObjectId" : "af1174133ae58da0b1ced210a3189c1dd73c1913",
      "LastModified" : "2014-05-16T17:39:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ext-ifaces/kpat/Makefile" : {
      "ObjectId" : "c1f5b43fb3a57d04d1866e7f251278a1c1d1c68b",
      "LastModified" : "2017-12-26T00:42:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/arch_doc/docbook/Makefile" : {
      "ObjectId" : "23fe0a0a8217a956d27be74fc60f873d923026f1",
      "LastModified" : "2018-10-18T12:47:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/docs/Freecell-Solver--Evolution-of-a-C-Program/text/Makefile" : {
      "ObjectId" : "3f1f7535b22c5159afe8b8b831bb13dc4ad9ae6e",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/docs/Makefile" : {
      "ObjectId" : "630ad521710421ffa23e8b64d0d6640b279a2bae",
      "LastModified" : "2012-12-21T20:35:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/presets/flares-based-scans-data/Makefile" : {
      "ObjectId" : "9c2cd802191d301702d66329bd100d8a16021a11",
      "LastModified" : "2014-05-16T17:39:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/presets/soft-threads/meta-moves/auto-gen/Makefile" : {
      "ObjectId" : "4f7dbb2c7ab49aac469ab9a614a8211c54af53ca",
      "LastModified" : "2014-05-16T17:39:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Run the smoke test.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "fc-solve/presets/soft-threads/meta-moves/auto-gen/optimize-seq/Makefile" : {
      "ObjectId" : "18160f487f6587211ccce67c80ad82f2b51ced82",
      "LastModified" : "2017-12-26T00:42:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/rejects/CMakeLists.txt" : {
      "ObjectId" : "d15f37b65f94bb7b54b5140be9e41448196c3e79",
      "LastModified" : "2017-12-26T00:42:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Inspired from /usr/share/autoconf/autoconf/c.m4\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cancelled out.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "fc-solve/scripts/automatic-build-for-982-2fc-solving/Makefile" : {
      "ObjectId" : "22697e6ed7b016a63019896caa9baec47fca3850",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/scripts/automatic-build-for-982-2fc-solving/kaz_tree/Makefile" : {
      "ObjectId" : "30439c675a8a415765f191ab700fa1e6f0adc844",
      "LastModified" : "2017-12-26T00:42:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fc-solve/source/CMakeLists.txt" : {
      "ObjectId" : "80c1193f86cdcd4ccb048684cb6624b61f99b029",
      "LastModified" : "2019-04-13T01:34:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Introduces VERSION , CPACK_PACKAGE_VERSION_MAJOR,\n\n# CPACK_PACKAGE_VERSION_MAJOR, and CPACK_PACKAGE_VERSION_PATCH\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the equivalent to perform a \"make dist\"/\"make distdir\" etc.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# There is a bug in NSI that does not handle full unix paths properly. Make\n\n# sure there is at least one set of four (4) backlasshes.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Setting for NSIS :\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# See:\n\n# https://stackoverflow.com/questions/4702732/the-program-cant-start-because-libgcc-s-dw2-1-dll-is-missing#4703059\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "### This is to set the RPATH correctly, so when installed under a prefix\n\n### the executables will find the libraries.\n\n###\n\n### See:\n\n###\n\n### http://www.cmake.org/Wiki/CMake_RPATH_handling\n\n###\n\n### (Taken from that wiki page)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Clone the patsolve repository with the appropriate branch.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We do this so there will be no need to run \"make\" first.\n\n# See: http://github.com/kripken/emscripten/issues/766#issuecomment-11771150\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We do this so there will be no need to run \"make\" first.\n\n# See: http://github.com/kripken/emscripten/issues/766#issuecomment-11771150\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Execute it right away to avoid missing files/includes\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Execute it right away to avoid missing files/includes\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ADD_DEFINITIONS (\"-DXXH_INLINE_ALL=1\")\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# FCS_STACK_STORAGE in this case is irrelevant and should be ignored.\n",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Add the kaz_tree.c module if (and only if) it is being used.\n\n#\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add the google_hash.cpp if (and only if) it is being used.\n\n#\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Search for libredblack if appropriate.\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Search for glib if appropriate.\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Search for Judy ( http://judy.sourceforge.net/ ) if appropriate.\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Initialize to the empty list - it may or may not be populated.\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ADD_DEFINITIONS(\"-Weverything\")\n",
        "Line" : 511,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# -Wimplicit-fallthrough=5\n\n# -Wno-vla-larger-than\n\n# -Wsuggest-attribute=const\n\n# -Wstringop-overflow=2\n",
        "Line" : 516,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# So it can find the includes when building fcs-libavl/rb.h.\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# So it can find config.h\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# See https://en.wikipedia.org/wiki/Reproducible_builds\n\n# https://reproducible-builds.org/ .\n",
        "Line" : 563,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Avoid linking to tcmalloc if the test suite is enabled due to:\n\n# https://github.com/gperftools/gperftools/issues/758\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Optionally link against Google's TCMalloc if it's available:\n\n# http://goog-perftools.sourceforge.net/\n\n# This gives better performance for the threaded programs.\n",
        "Line" : 594,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Do nothing.\n",
        "Line" : 600,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# We also need to put the CMAKE_POLICY invocation here or else it still warns.\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# LINK_DIRECTORIES(\"/home/shlomif/progs/C/pthreads/rwlock/fcfs-rwlock/pthreads\")\n\n# INCLUDE_DIRECTORIES(\"/home/shlomif/progs/C/pthreads/rwlock/fcfs-rwlock/pthreads\")\n",
        "Line" : 680,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# ADD_DEFINITIONS(\"-DFCS_DBM_CACHE_ONLY=1\")\n",
        "Line" : 704,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# This is so on Windows, the .dll's will be installed in the bin/\n\n# directory as well where the Freecell Solver command-line utilities\n\n# will be able to find them.\n",
        "Line" : 845,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Rebuild config.h if ver.txt has changed.\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Asciidoc is optional so should not be \"REQUIRED\" because we include\n\n# these files in the source distribution.\n",
        "Line" : 994,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# The custom command needs to be assigned to a target.\n",
        "Line" : 1019,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# MESSAGE(STATUS \"_in == <<${_in}>> _html_out == <<${_html_out}>>\")\n",
        "Line" : 1034,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# -a toc\n",
        "Line" : 1036,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# MESSAGE (\"PDF_TARGETS == ${_pdf_targets}\")\n",
        "Line" : 1101,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# For Makefile.gnu in pgo.bash (see below)\n",
        "Line" : 1151,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# This does not work properly because the silencing happens earlier in the\n\n# line, but I'm still keeping it.\n",
        "Line" : 1162,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# The delta-states testing library\n",
        "Line" : 1183,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# The DeBondt delta-states testing library\n",
        "Line" : 1188,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 45
    },
    "fc-solve/source/Presets/CMakeLists.txt" : {
      "ObjectId" : "caec477cccb3ed6cd68fc7c098c1abfd6c33162c",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to put an actual $ followed by { and EXE_DIRNAME so we\n\n# escape it.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "fc-solve/source/Presets/presets/CMakeLists.txt" : {
      "ObjectId" : "c487663acb25af50d4b3d9476d8c8f3306a55a1c",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "fc-solve/source/board_gen/CMakeLists.txt" : {
      "ObjectId" : "4b0fe22028f08c3fea1a2d81c399441724b7cb1c",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Adapted from:\n\n# http://stackoverflow.com/questions/697560/how-to-copy-directory-from-source-tree-to-binary-tree\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Empty list\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INSTALL_MAN(\"fc-solve-board_gen.6\" 6)\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Install the nroff symbolic links.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "fc-solve/source/cmake/FindAsciidoc.cmake" : {
      "ObjectId" : "fd0a7dd6c678e185490b132ebc31a2de0b9432ae",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Asciidoc\n\n# this module looks for asciidoc\n\n#\n\n# ASCIIDOC_EXECUTABLE - the full path to asciidoc\n\n# ASCIIDOC_FOUND - If false, don't attempt to use asciidoc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is taken from:\n\n# http://grahamcox.co.uk/serendipity/index.php?/archives/36-CMake-code-to-support-asciidoc.html\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "fc-solve/source/cmake/shlomif_common_bootstrap.cmake" : {
      "ObjectId" : "8ee7112d2ff7c4e8da3ac6979a78ee1d5ae37919",
      "LastModified" : "2017-12-26T00:42:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "fc-solve/source/cmake/xxhash_wrapper_bootstrap.cmake" : {
      "ObjectId" : "f5e111384f49ed04983ab4e8d4dfcf61a58e571f",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clone the patsolve repository with the appropriate branch.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "fc-solve/source/man/CMakeLists.txt" : {
      "ObjectId" : "73c47daa6983bea51a0dffbf3dcb5f6e4d32ede4",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "fc-solve/source/t/CMakeLists.txt" : {
      "ObjectId" : "d3268f8091b84df99bb5b3dc7caf76a12d16749b",
      "LastModified" : "2018-10-30T20:04:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a kind-of-temporary kludge to make\n\n# \"dbm-kaztree-compare-records-test.c\" build.\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "MAKEFILE" : 12
  },
  "ElapsedTime" : 3085
}