{
  "Repository" : "31409697",
  "Revision" : "HEAD",
  "ObjectId" : "26546ded7c718def85478f1ea9d0e0086ea81d94",
  "CommitTime" : "2019-04-17T21:18:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "615261e5ddad30153ffe3b1a8e5ffcffb9e5fc59",
      "LastModified" : "2019-04-17T21:18:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015, Pivotal Software, Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Whenever an ABI-breaking change is made to GPORCA, this should be incremented.\n\n# ABI changes include removing functions, and adding or removing function\n\n# parameters. Because GPORCA is a C++ library, there are also several other cases\n\n# that might cause ABI changes, including adding or removing class members,\n\n# and things that might change vtables for classes with virtual methods. If in\n\n# doubt, do the safe thing and increment this number.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default to shared libraries.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure CCache if available\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check build type\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Override CMAKE_SYSTEM_PROCESSOR if it has been explicitly set in a toolchain file.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Turn on compiler flags for all warnings if available.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Turn off warnings about variadic macros if for some reason the C++ dialect is\n\n# not compatible with C99.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate maximum detail for DEBUG information with -g3 if available.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Do not omit frame pointer. Even with RELEASE builds, it is used for\n\n# backtracing.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Turn on GPOS_DEBUG define for DEBUG builds.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Turn on platform-specific defines.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Autodetect bit-width if not already set by toolchain file.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Autodetect bit-width.\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Library dependencies for optimizer.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# POSIX threads.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Xerces.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# GPOS.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Extra system libs needed on Solaris.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Sub-libraries.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Tests.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/FindAtomics.cmake" : {
      "ObjectId" : "60f758917382e4fdff50c6f8027b586d47e1de87",
      "LastModified" : "2017-01-20T22:48:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015, Pivotal Software, Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake module to find compiler built-ins for atomic operations.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test for GCC-style builtins for fetch-add and compare-and-swap (clang and ICC\n\n# also have these). C++11 and C11 do this in an elegant standardized way, but\n\n# we can not be assured of a C++11 compiler.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindXerces.cmake" : {
      "ObjectId" : "91635baf44d043af59be6e70762d3a677c424cae",
      "LastModified" : "2017-08-27T16:17:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module to find Xerces-C.\n\n# We specifically try to find the Greenplum patched version of Xerces.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for patched Xerces. DOMImplementationList is a subclass of XMemory in\n\n# the Greenplum version of Xerces, but not (yet) in upstream.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/i386.toolchain.cmake" : {
      "ObjectId" : "e9a3e92c1eb251f3c52cf622dbc92bc79b410e35",
      "LastModified" : "2017-01-20T22:48:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Older GCC versions give linking errors when using certain builtins without\n\n# explicitly setting a 32-bit -march. Tell the root CMakeLists file to set that\n\n# flag if needed.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/x86_64.toolchain.cmake" : {
      "ObjectId" : "a2653380492856c0ca9622c3b7982d49711749e1",
      "LastModified" : "2017-01-20T22:48:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libgpdbcost/CMakeLists.txt" : {
      "ObjectId" : "ceddfc39500b972ee8b57517a7331eddb2ed7692",
      "LastModified" : "2018-08-15T00:44:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015, Pivotal Software, Inc. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for the generated config.h file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add headers to make them visible in some IDEs (Clion, VS, Xcode)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent linker errors from undefined symbols on OSX.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libgpopt/CMakeLists.txt" : {
      "ObjectId" : "6b33f73619019eb7eb96229010d5276e1b27914e",
      "LastModified" : "2018-08-15T00:44:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015, Pivotal Software, Inc. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate version-number header.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for the generated config.h file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add headers to make them visible in some IDEs (Clion, VS, Xcode)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libgpos/CMakeLists.txt" : {
      "ObjectId" : "e335bb3cac68b1123f2a3da5eeff82e17f4414b0",
      "LastModified" : "2018-08-15T00:44:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need pthreads.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find atomic operations.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for the generated config.h file.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add headers to make them visible in some IDEs (Clion, VS, Xcode)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extra system libs needed on Solaris.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tests reside in the 'server' subdirectory.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installation.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libgpos/server/CMakeLists.txt" : {
      "ObjectId" : "2f4ebbbe27942383d80955527361370341d400c5",
      "LastModified" : "2018-08-15T00:44:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015, Pivotal Software, Inc. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include path for unit test headers.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CExceptionTest has a function that intentionally calls itself with infinite\n\n# recursion to test exception handling when exhausting the stack. Some C++\n\n# compilers (notably Clang) detect this and generate a warning. We suppress\n\n# such warnings ONLY for CExceptionTest, which we compile as a static library\n\n# separate from the rest of the tests.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CCacheTest sets some variables that are only read in DEBUG builds, causing\n\n# warnings about unused variables for RELEASE builds. We suppress such warnings\n\n# ONLY for CCacheTest, which we compile as a static library separate from the\n\n# rest of the tests.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add headers to make them visible in some IDEs (Clion, VS, Xcode)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Monolithic gpos_test executable.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Convenience function to add the test specified by 'TEST_NAME' to the set of\n\n# tests to be run by CTest.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Adaptation of the add_gpos_test for setting up a custom allocator instead of\n\n# using CMemoryPoolMalloc in gpos_init().\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Individual unit tests are added here in the same order they appear in\n\n# src/startup/main.cpp\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# common\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# error\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# io\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# memory\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# custom allocator\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# string\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# sync\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# task\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# test\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# fault-simulation\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# fault-simulation while running other tests\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# time-slicing\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "libnaucrates/CMakeLists.txt" : {
      "ObjectId" : "9f9b6f79a9b39894194a9ab69a5a09b8636e6eba",
      "LastModified" : "2018-08-15T00:44:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015, Pivotal Software, Inc. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for the generated config.h file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add headers to make them visible in some IDEs (Clion, VS, Xcode)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent linker errors from undefined symbols on OSX.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "server/CMakeLists.txt" : {
      "ObjectId" : "14e74df19522d4f0623178352e9cfe368947bb9c",
      "LastModified" : "2019-04-17T21:18:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015, Pivotal Software, Inc. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for the generated config.h file.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for the auto generated minidump test classes\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some tests use C99 long long integer constants, but the C++ dialect may not\n\n# explicitly include C99. We supress such errors here.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convenience function to add the test specified by 'TEST_NAME' to the set of\n\n# tests to be run by CTest.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Unit tests have many hard-coded paths to test data in optimizer/data. We\n\n# explicitly set the WORKING_DIRECTORY so that the files can be found\n\n# properly.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# minidump tests must follow rule:\n\n# \"CxxxTest: file1 file2; CxxxTest: file3 file4\"\n\n# each test case should end with \";\", EXCEPT LAST ONE.\n\n# comments with format /*...*/ are allowed at any place.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# if the old file exists and the new file is the same with old file,\n\n# do nothing. otherwise, write the old file with new file's content.\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove comments /*...*/ from minidump test group string\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# get minidump test name\n",
        "Line" : 301,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# get the length of \"CxxxTest:\"\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# get minidump file names (without .mdp) concatenated by spaces\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# generate full minidump paths array\n",
        "Line" : 312,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# generate header/src file name for current test\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# auto generate test class from template\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# add test header file into include file used in main.cpp\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# add unittest into test array in main.cpp\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The ordering of tests and the conditions by which tests are enabled or\n\n# disabled matches the static array of tests in \"src/startup/main.cpp\".\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Naucrates tests.\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Opt tests.\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# fault-simulation while running other tests\n",
        "Line" : 435,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# time-slicing\n",
        "Line" : 438,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Add headers to make them visible in some IDEs (Clion, VS, Xcode)\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 5276
}