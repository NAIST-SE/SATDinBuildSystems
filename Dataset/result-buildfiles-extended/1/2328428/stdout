{
  "Repository" : "2328428",
  "Revision" : "HEAD",
  "ObjectId" : "e3651b96f2c5eafa3653cbd0356a98c1c83df831",
  "CommitTime" : "2017-10-03T18:17:04Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "f42f974fa5bd1cbecdc315d2b5b6babbd5a3ac4f",
      "LastModified" : "2015-11-23T18:10:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\t\t$(FIGDIR)/pt_140318_1c_Baxtr1Activ1Rever1Nbd1.mcmc.ibax_reverse.pdf\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#python $(CODEDIR)/pt/show_chain.py $$f $$OUTPUT ;\\\n\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This bit here allows us to only rebuild when the hash of a file changes.\n\n# See blog post describing the approach here:\n\n# http://blog.jgc.org/2006/04/rebuilding-when-hash-has-changed-not.html\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The .md5 file is updated only if the hash has changed\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Dummy target so the .md5 step is always run\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Keying the MCMC execution on the dependency file ensures that a re-run is\n\n# performed if the model ensemble specification (or fit parameters) has\n\n# changed. Also ensures that the dependency file exists before we try to\n\n# include it. As a convention, the target used here should correspond to the\n\n# basename of the .yaml file specifying the fit for the model ensemble\n\n# (e.g., pt_140320.yaml --> pt_140320)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This file specifies the list of *.mcmc files that pt_140320 depends on\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# See comments for pt_140320, above\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# See comments for pt_140320, above\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# See comments for pt_140320, above\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# See comments for pt_140320, above\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Running this script generates both the dependency list and the .yaml files\n\n# specifying the fit parameters for each individual model\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# In this case, we know that the .fit file exists, since it has been\n\n# regenerated in the step that regenerated the dependency file. What\n\n# we care about is whether the hash is any different.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#bsub -q $(PQUEUE) -n 50 -W 12:00 -a openmpi mpirun.lsf python -m tbidbaxlipo.pt.run_pt $(call from-md5, $<) 1\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Don't delete the .md5 files! Without this rule they are treated as\n\n# intermediates and deleted.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ==== FIGURES ==============================================\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Bax depletion figures ----\n\n# fig_141016_1.pdf, fig_141016_2.pdf\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --- Figs generated by hazard_rate.py ----\n\n# fig_fmax_fit_comparison.pdf, fig_hazard_rate.pdf\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --- Figures showing the relationship between Bax distribution and fraction\n\n#     permeabilized ----\n\n# poisson_bax_fmax.pdf, poisson_bax_fmax_fit.pdf\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# --- Fits of models to 140318 Bax-NBD/liposome titration data by MCMC ----\n\n# Makes plots pt..._fits.pdf, pt..._tri.pdf\n\n# (for 2_conf, 2_conf_rev, and 3_conf models)\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# --- Slice diagrams ---\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --- Exponential fits to Bax titration, 140320\n\n#     140320_exp_fit_curves.pdf, 140320_exp_fits.pdf ---\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# --- 140318_exp_fits_lstsq_fmax_var.pdf,\n\n#     140318_exp_fits_lstsq_curves_fmax_var.pdf,\n\n#     140318_exp_fits_lstsq_fmax_fixed.pdf,\n\n#     140318_exp_fits_lstsq_curves_fmax_fixed.pdf ---\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# --- Fits of 140429 Bid FRET competition experiment by MCMC to the exact\n\n#     competition binding model ----\n\n# Files: 140429_exact_comp_bind_fit.pdf, 140429_exact_comp_bind_marginals.pdf\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Files: 140429_gouy_chap_fit.pdf, 140429_gouy_chap_marginals.pdf\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "doc/Makefile" : {
      "ObjectId" : "4295688023b8859f9f4eec240ca5580c5382e231",
      "LastModified" : "2014-08-29T17:52:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "kale/doc/Makefile" : {
      "ObjectId" : "4cd4425547dd07dfde928e14117869cd7c3cbb6c",
      "LastModified" : "2015-03-31T14:35:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "kale/make/Makefile" : {
      "ObjectId" : "ff07e7ef0313c566e3e2937c14500d211afb03e4",
      "LastModified" : "2017-10-03T18:17:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#PQUEUE := sorger_par_unlimited\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# md5 sum program to use (md5 on mac, md5sum on Linux)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This bit here allows us to only rebuild when the hash of a file changes.\n\n# See blog post describing the approach here:\n\n# http://blog.jgc.org/2006/04/rebuilding-when-hash-has-changed-not.html\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The .md5 file is updated only if the hash has changed\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Dummy target so the .md5 step is always run\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Running this script generates both the dependency list and the .yaml files\n\n# specifying the fit parameters for each individual model\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# In this case, we know that the .fit file exists, since it has been\n\n# regenerated in the step that regenerated the dependency file. What\n\n# we care about is whether the hash is any different.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Don't delete the .md5 files! Without this rule they are treated as\n\n# intermediates and deleted.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -- MCMC Fitting for 140430 Bid/Bax FRET pilot data -------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -- MCMC Fitting for Dataset 1, complete set of NBD-Bax trajectories --\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The pt_data1_deps target allows for the dependencies list to be created\n\n# without running all of the jobs that pt_data1 itself depends on. For example,\n\n# > make pt_data1_deps\n\n# then\n\n# > make pt_data1_Bid_NBD_126_r1\n\n# or\n\n# > make pt_data1_Bid_NBD_126_r1_2confs.mcmc\n\n# ...allows selected reps/models to be run explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -- MCMC Fitting for Dataset 1, complete set of NBD-Bax trajectories --\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -- MCMC Fitting for Dataset 2, complete set of NBD-Bax trajectories with FRET --\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -- MCMC fitting for NBD + FRET, dataset 2\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# -- MCMC fitting for NBD + FRET, dataset 2\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -- MCMC fitting for NBD + FRET, dataset 3\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -- MCMC fitting for NBD + FRET, dataset 3\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# -- Dataset 1, NBD + Tb release, summary plots ------------------------\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# -- Dataset 2, Bid FRET + NBD + Tb release, summary plots -------------\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -- Bax-Bax FRET data (141203) ------------------------------------------\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -- Dataset 3, Bax-Bax FRET + NBD + Tb release, summary plots -------------\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --- Normalized release endpoint data for release, dataset 1 ---\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# --- Raw release endpoint data for release, dataset 1 ---\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# --- NBD endpoints, dataset 1, normalized to F/F0 ---\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# --- NBD endpoints, dataset 1, no normalization (raw values) ---\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# NBD/release, initial rates\n\n# Building this target creates four files:\n\n#     data1_init_nbd_bar.pdf,\n\n#     data1_init_nbd_bar.pdf,\n\n#     data1_init_scatter_norm_Bid.pdf,\n\n#     data1_init_scatter_norm_Bim.pdf\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# --- Normalized release endpoint data for release, dataset 2 ---\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# --- Raw release endpoint data for release, dataset 2 ---\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# --- NBD endpoints, dataset 2, normalized to F/F0 ---\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# --- NBD endpoints, dataset 2, no normalization (raw values) ---\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# FRET/NBD/release, initial rates\n\n# Building this target creates four files:\n\n#     data2_init_nbd_bar.pdf,\n\n#     data2_init_nbd_bar.pdf,\n\n#     data2_init_scatter_norm_Bid.pdf,\n\n#     data2_init_scatter_norm_Bim.pdf\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ---------------------------------------------------------------\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ---------------------------------------------------------------\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# --- Normalized release endpoint data for release, dataset 3 ---\n\n# Not done, no WT control\n\n#data3_release_endpt_norm.pdf: \\\n#        $(PLOTSDIR)/nbd_bax_analysis.py \\\n#        $(PLOTSDIR)/bax_bax_fret_nbd_release/plots.py \\\n#        $(BAX_FRET_DATA)\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\tpython -m tbidbaxlipo.plots.bax_bax_fret_nbd_release.plots release_endpoint_norm $(basename $@)\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# --- Raw release endpoint data for release, dataset 3 ---\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# --- NBD endpoints, dataset 3, normalized to F/F0 ---\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# --- NBD endpoints, dataset 3, no normalization (raw values) ---\n\n# Not done, because data is already normalized in the spreadsheet\n\n#data3_nbd_endpt_no_norm.pdf: \\\n#        $(PLOTSDIR)/nbd_bax_analysis.py \\\n#        $(PLOTSDIR)/bax_bax_fret_nbd_release/plots.py \\\n#        $(BAX_FRET_DATA)\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\tpython -m tbidbaxlipo.plots.bax_bax_fret_nbd_release.plots nbd_endpoint_no_norm $(basename $@)\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# FRET/NBD/release, initial rates\n\n# Building this target creates four files:\n\n#     data3_init_nbd_bar.pdf,\n\n#     data3_init_nbd_bar.pdf,\n\n#     data3_init_scatter_norm_Bid.pdf,\n\n#     data3_init_scatter_norm_Bim.pdf\n\n#data3_init_nbd_bar.pdf: \\\n#        $(PLOTSDIR)/nbd_bax_analysis.py \\\n#        $(PLOTSDIR)/bax_bax_fret_nbd_release/plots.py \\\n#        $(BAX_FRET_DATA)\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\tpython -m tbidbaxlipo.plots.bax_bax_fret_nbd_release.plots initial_rate_samples data3\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#data3_example_nbd_fret_fits.pdf: \\\n#        $(PLOTSDIR)/bax_bax_fret_nbd_release/plot_example_fret_fits.py \\\n#        $(BAX_FRET_DATA)\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\tpython -m tbidbaxlipo.plots.bax_bax_fret_nbd_release.plot_example_fret_fits\n\n#\n\n#data3_delta_fret.pdf: \\\n#        $(PLOTSDIR)/nbd_bax_analysis.py \\\n#        $(PLOTSDIR)/bax_bax_fret_nbd_release/plot_delta_fret.py \\\n#        $(PLOTSDIR)/bax_bax_fret_nbd_release/preprocess_data.py \\\n#        $(BAX_FRET_DATA)\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\tpython -m tbidbaxlipo.plots.bax_bax_fret_nbd_release.plot_delta_fret $(basename $@)\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1445
}