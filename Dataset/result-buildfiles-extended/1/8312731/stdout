{
  "Repository" : "8312731",
  "Revision" : "HEAD",
  "ObjectId" : "aa9abe40bcef4f38aee4ab6881b0ce0cbe297fd6",
  "CommitTime" : "2019-03-01T10:57:10Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c3fb9fcb96bf6f84497acccc3b6dcae4aee10f36",
      "LastModified" : "2018-12-11T18:52:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: make a cross platform here\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# added for brew build in Travis,\n\n# because don't have default path\n\n# for new installed bundles in OS_X\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "##\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt5 is default and supported only\n",
        "Line" : 37,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "##\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check 64 bit\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# BSD does not use lib64 for 64bit libs\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#src/vm_viewer/qterminal/icons.qrc\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "##\n",
        "Line" : 1070,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#qt4_add_translation(QTERM_QM ${QTERM_TS})\n",
        "Line" : 1076,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#qt4_add_translation(VIEWER_QM ${VIEWER_TS})\n",
        "Line" : 1079,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "##\n",
        "Line" : 1093,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# uncomment below if libutf8proc is required\n\n#find_package(Utf8Proc                       REQUIRED)\n",
        "Line" : 1096,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# * build & install application & files\n",
        "Line" : 1176,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# * end\n",
        "Line" : 1260,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/CheckPointerMember.cmake" : {
      "ObjectId" : "b6ea5441b85e3fa45b923bb21e8045c05d6cd583",
      "LastModified" : "2016-05-12T17:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the given struct or class has the specified member variable\n\n# CHECK_POINTER_MEMBER (POINTER MEMBER HEADER VARIABLE)\n\n#\n\n#  POINTER - the name of the struct or class you are interested in\n\n#  MEMBER - the member which existence you want to check\n\n#  HEADER - the header(s) where the prototype should be declared\n\n#  VARIABLE - variable to store the result\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindCACard.cmake" : {
      "ObjectId" : "a5d57d5fa6449781a8833f7b93ec8bc2841e15a4",
      "LastModified" : "2016-09-24T09:38:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindCACard.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CACard_FOUND - System has CACard\n\n# CACard_INCLUDES - The CACard include directories\n\n# CACard_LIBRARIES - The libraries needed to use CACard\n\n# CACard_DEFINITIONS - Compiler switches required for using CACard\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 10,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 17,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"DEBUG: CACard include directory = ${CACard_INCLUDE_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: CACard link directory = ${CACard_LIBRARY_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: CACard CFlags = ${CACard_CFLAGS}\")\n",
        "Line" : 21,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "cmake/FindGLib2.cmake" : {
      "ObjectId" : "f25933062f666bc4687c37729111b6853a1de1c9",
      "LastModified" : "2016-05-12T17:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGLib2.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GLib2_FOUND - System has GLib2\n\n# GLib2_INCLUDES - The GLib2 include directories\n\n# GLib2_LIBRARIES - The libraries needed to use GLib2\n\n# GLib2_DEFINITIONS - Compiler switches required for using GLib2\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message (STATUS \"GLib2_INCLUDES: ${GLib2_INCLUDE_DIR}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGObject.cmake" : {
      "ObjectId" : "e906b8ebd88a6ed65b9e0ff87684c79d933caa85",
      "LastModified" : "2016-05-12T17:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GObject\n\n# Once done this will define\n\n#\n\n#  GOBJECT_FOUND - system has GObject\n\n#  GOBJECT_INCLUDE_DIR - the GObject include directory\n\n#  GOBJECT_LIBRARIES - the libraries needed to use GObject\n\n#  GOBJECT_DEFINITIONS - Compiler switches required for using GObject\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Tim Beaulen <tbscope@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 16,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"DEBUG: GObject include directory = ${GOBJECT_INCLUDE_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: GObject link directory = ${GOBJECT_LIBRARY_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: GObject CFlags = ${GOBJECT_CFLAGS}\")\n",
        "Line" : 27,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "cmake/FindGio.cmake" : {
      "ObjectId" : "08afcd654dc442699e0230f0bad8abe85a82fa9b",
      "LastModified" : "2016-05-12T17:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Gio\n\n# Once done this will define\n\n#\n\n#  GIO_FOUND - system has Gio\n\n#  GIO_INCLUDE_DIR - the Gio include directory\n\n#  GIO_LIBRARIES - the libraries needed to use Gio\n\n#  GIO_DEFINITIONS - Compiler switches required for using Gio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 11,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#MESSAGE(STATUS \"DEBUG: Gio include directory = ${GIO_INCLUDE_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: Gio link directory = ${GIO_LIBRARY_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: Gio CFlags = ${GIO_CFLAGS}\")\n",
        "Line" : 22,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/FindKRDC.cmake" : {
      "ObjectId" : "9707de64df74e06cdfd47149e5f17084748ad225",
      "LastModified" : "2018-04-06T10:44:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindKRDC.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# KRDC_FOUND - System has KRDC\n\n# KRDC_INCLUDES - The KRDC include directories\n\n# KRDC_LIBRARIES - The libraries needed to use KRDC\n\n# KRDC_DEFINITIONS - Compiler switches required for using KRDC\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 10,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 17,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"DEBUG: KRDC include directory = ${KRDC_INCLUDE_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: KRDC link directory = ${KRDC_LIBRARY_DIRS}\")\n\n#MESSAGE(STATUS \"DEBUG: KRDC CFlags = ${KRDC_CFLAGS}\")\n",
        "Line" : 21,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "cmake/FindLibVNCServer.cmake" : {
      "ObjectId" : "8f6226e1af78bd5be55bad9ebc3100810177e4b5",
      "LastModified" : "2018-04-06T10:44:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake macro to test LIBVNCSERVER LIB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alessandro Praduroux <pradu@pradu.it>\n\n# Copyright (c) 2007, Urs Wolfer <uwolfer @ kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# libvncserver and libvncclient are in the same package, so it does\n\n# not make sense to add a new cmake script for finding libvncclient.\n\n# instead just find the libvncclient also in this file.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindLibVirt.cmake" : {
      "ObjectId" : "cf4b4d7389c0995c331070159b7e1714b7ac08bb",
      "LastModified" : "2018-04-06T10:44:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindLibVirt.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LibVirt_FOUND - System has LibVirt\n\n# LibVirt_INCLUDES - The LibVirt include directories\n\n# LibVirt_LIBRARIES - The libraries needed to use LibVirt\n\n# LibVirt_DEFINITIONS - Compiler switches required for using LibVirt\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindSpice1.cmake" : {
      "ObjectId" : "73d8df60117634220c8ec0ff4b6920c3c4be8947",
      "LastModified" : "2018-04-06T10:44:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindSpice1.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Spice1_FOUND - System has Spice1\n\n# Spice1_INCLUDES - The Spice1 include directories\n\n# Spice1_LIBRARIES - The libraries needed to use Spice1\n\n# Spice1_DEFINITIONS - Compiler switches required for using Spice1\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# don't used ${Spice1_LIBRARY}, because library don't exist as one,\n\n# it part of spice-client-glib-2.0 library.\n\n#find_library(Spice1_LIBRARY NAMES spice-1 libspice-protocol libspice-1\n\n#             HINTS ${PC_Spice1_LIBDIR} ${PC_Spice1_LIBRARY_DIRS})\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(Spice1_LIBRARIES ${Spice1_LIBRARY})\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Spice1_LIBRARY\n",
        "Line" : 28,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "#Spice1_LIBRARY\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 6
    },
    "cmake/FindSpiceClientGLib2.cmake" : {
      "ObjectId" : "bf682db81f7deb487556c58dafbf2c67c09133f1",
      "LastModified" : "2018-04-06T10:44:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindSpiceClientGLib2.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SPICE_CLIENT_GLIB2_FOUND - System has SPICE_CLIENT_GLIB2\n\n# SPICE_CLIENT_GLIB2_INCLUDES - The SPICE_CLIENT_GLIB2 include directories\n\n# SPICE_CLIENT_GLIB2_LIBRARIES - The libraries needed to use SPICE_CLIENT_GLIB2\n\n# SPICE_CLIENT_GLIB2_DEFINITIONS - Compiler switches required for using SPICE_CLIENT_GLIB2\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindUtf8Proc.cmake" : {
      "ObjectId" : "4081854836cbe878481f2d0076e01ff684e19a82",
      "LastModified" : "2018-06-13T08:54:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindUtf8Proc\n\n# --------\n\n#\n\n# Find utf8proc\n\n#\n\n# Find the UTF-8 processing library\n\n#\n\n# ::\n\n#\n\n#   This module defines the following variables:\n\n#      UTF8PROC_FOUND       - True if UTF8PROC_INCLUDE_DIR & UTF8PROC_LIBRARY are found\n\n#      UTF8PROC_LIBRARIES   - Set when UTF8PROC_LIBRARY is found\n\n#      UTF8PROC_INCLUDE_DIRS - Set when UTF8PROC_INCLUDE_DIR is found\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#      UTF8PROC_INCLUDE_DIR - where to find utf8proc.h\n\n#      UTF8PROC_LIBRARY     - the utf8proc library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# This module is adapted from FindALSA.cmake. Below are the original license\n\n# header.\n\n#=============================================================================\n\n# Copyright 2009-2011 Kitware, Inc.\n\n# Copyright 2009-2011 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set UTF8PROC_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 12
  },
  "ElapsedTime" : 1472
}