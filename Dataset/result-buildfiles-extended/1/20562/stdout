{
  "Repository" : "20562",
  "Revision" : "HEAD",
  "ObjectId" : "019e87adddd37d53638fd9406de3f1a1ac0e3a37",
  "CommitTime" : "2019-04-16T12:29:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ca3f2344722181bd29ed6767ef412e811163953a",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# top-level CMake configuration file for PDAL\n\n#\n\n# (based originally on the libLAS files copyright Mateusz Loskot)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# internal cmake settings\n\n#------------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow advanced users to generate Makefiles printing detailed commands\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# PDAL general settings\n\n#------------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the next line is the ONLY place in the entire pdal system where\n\n# the version info is hard-coded\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of C++ library\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# To facilitate one-library linking, we do special things for various platforms.\n\n#\n\n# On Linux we install a linker script that we call libpdalcpp.so and it\n\n# in turn links libpdal_base.so and libpdal_util.so\n\n#\n\n# On OSX we reexport the symbols from libpdal_util.dylib into libpdalcpp.dylib\n\n# See below for the rest of the magic.\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# allow override of PDAL_PLUGIN_INSTALL_PATH path\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# wipe lib/ drectory on clean. It will have plugins that could be out of date\n\n# in the next build\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ---[ Windows requires DLLs (shared libraries) to be installed in\n\n# ---[ the same directory as executables\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Choose package components\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# General build settings\n\n#------------------------------------------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#  Dependencies.\n\n#------------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Optional (not really)\n\n# Optional\n",
        "Line" : 118,
        "CharPositionInLine" : 42
      },
      "14" : {
        "Text" : "# Optional\n",
        "Line" : 120,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "# Optional\n",
        "Line" : 131,
        "CharPositionInLine" : 41
      },
      "16" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# generate the pdal_features.hpp header\n\n#------------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# from http://stackoverflow.com/questions/1435953/how-can-i-pass-git-sha1-to-compiler-as-definition-using-cmake\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# needs to come before configuration of pdal_features\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# subdirectory controls\n\n#------------------------------------------------------------------------------\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# PDAL_TARGET_OBJECTS is used to collect the driver object libraries\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#include_directories(vendor/pdalboost)\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# On OSX we reexport the symbols in libpdal_util.dylib into libpdalcpp.dylib\n\n# so that users only need link libpdalcpp.\n\n#\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# This allows the rpath reference for the reexported library (above) to\n\n# be found.\n\n#\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#\n\n# Remove stuff we don't want to build.\n\n#\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Interface include directories allow downstream project to get the directory\n\n# without specification.\n\n#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# shut off -Wpedantic selectively\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# On Linux, we install a linker script as libpdalcpp.so.  That file\n\n# specifies linking in libpdal_base.so and libpdal_util.so.  This allows\n\n# users to link a single library, libpdalcpp\n\n#\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# Installation\n\n#\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n# Only install compression headers if we're building with the particular\n\n# compression type.\n\n#\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# CPACK\n\n#\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# TODO: move under scripts/bash-completion ?\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "74770d114b4a4b40c4c2473c2127eba7e5ef1962",
      "LastModified" : "2019-02-15T14:30:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ./apps CMake configuration file for PDAL utilties\n\n#\n\n# (based originally on the libLAS files copyright Mateusz Loskot)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Configure build targets\n\n#------------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Targets installation\n\n#------------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Autoconf compatibility variables to use the same script source.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Autoconf compatibility variables to use the same script source.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/arbiter.cmake" : {
      "ObjectId" : "2942c0561dd899620ad3b2036d78aa4224889e92",
      "LastModified" : "2017-09-01T13:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# arbiter support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/common.cmake" : {
      "ObjectId" : "a5f78fafb6f80c923955232b46c573ba4814952a",
      "LastModified" : "2017-09-01T13:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# To reduce typing.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This must be first.\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# This must come before macros, but I don't understand why the policies\n\n# apply to the macros rather than the invocation of the macros.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/compiler_options.cmake" : {
      "ObjectId" : "45019f42070422ff9e9ea2c6585ea9eaa5b9b40d",
      "LastModified" : "2017-09-01T13:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/config.cmake" : {
      "ObjectId" : "028588c3026a54b3f7cf6b8532d38d7f6adf1a2a",
      "LastModified" : "2019-01-10T21:29:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cpack.cmake" : {
      "ObjectId" : "b75a1f4f5d6d34a98c7bb0e994629974809c2041",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# CPACK controls\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ctest.cmake" : {
      "ObjectId" : "a8382aaef5df1ab7ef76179ae694ac7b35dc6899",
      "LastModified" : "2017-09-01T13:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CTEST support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Dashboard has been prepared for experiments\n\n# http://my.cdash.org/index.php?project=PDAL\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#\n\n# Define \"make check\" as alias for \"make test\"\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "cmake/curl.cmake" : {
      "ObjectId" : "0d24b3fb0de6519a804f6ff14ff55885fa182d48",
      "LastModified" : "2017-09-01T13:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# curl support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/dimension.cmake" : {
      "ObjectId" : "ebb7222d4a34fb6256223ce356931eb66f9cf206",
      "LastModified" : "2017-09-01T13:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Custom command to generate Dimension.hpp from Dimension.json\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/directories.cmake" : {
      "ObjectId" : "f079ec725b93e799c980f996a6f831d83c9883dd",
      "LastModified" : "2017-09-01T13:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/examples.cmake" : {
      "ObjectId" : "cd96467b415ff0b13e132c3f53fcd8c73a3c7a08",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EXAMPLE support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/execinfo.cmake" : {
      "ObjectId" : "e3067203e11a1637652c97bee8f9bf8b13de99a1",
      "LastModified" : "2018-09-26T02:46:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Unwind\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/gdal.cmake" : {
      "ObjectId" : "77be0078a382da19504e3ec0cff3c3d3ce4e65df",
      "LastModified" : "2019-03-27T16:27:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# GDAL/OGR support (required)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/geotiff.cmake" : {
      "ObjectId" : "1d1e8af851b419667b9db1882ae8651746568f0e",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# GeoTIFF support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/geowave.cmake" : {
      "ObjectId" : "1b69798516e2a846f8b5f5a2b9ce7361f986ad74",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# GeoWave support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GeoWave support - optional, default=OFF\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/gtest.cmake" : {
      "ObjectId" : "cf5b6f4cf5f11fc3fb5b78bf2d7a063484d7934e",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Since tests link CRT dynamically (/MD[d]), require gtest to\n\n#link dynamically too (default is /MT[d])\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# gtest 1.7.0 has some CMake warnings, so we silence these by setting the\n\n# following properties.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/hdf5.cmake" : {
      "ObjectId" : "29f817a5c97f5b66b00e6dd51f2ff142024a7b7c",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# HDF5\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/jace.cmake" : {
      "ObjectId" : "390d94ff1027d6d27e5e440eb03dfd18cfe27b87",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Jace support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Jace support - optional, default=OFF\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/jni.cmake" : {
      "ObjectId" : "37e7dedbe339c9c075fe629a4220111ba841aab4",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# JNI support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# JNI support - optional, default=OFF\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/json.cmake" : {
      "ObjectId" : "a6aac190be0dabdba71392613aeb644810ccaf47",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/laszip.cmake" : {
      "ObjectId" : "f5896da1b5842e5316f897ea05c1c2ec4b8ce620",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LASZIP support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/lazperf.cmake" : {
      "ObjectId" : "5ad91939735c33d663df28e4ca07876d9893f4dc",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/libraries.cmake" : {
      "ObjectId" : "dae98eac9c4c178c5bf4e9c4a4cb1256fb76e7b7",
      "LastModified" : "2017-11-03T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build shared libraries by default.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/libxml2.cmake" : {
      "ObjectId" : "1bb2a7ab4a4ff1d000ce86f30c73dbce348a8e14",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# libxml2\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find-module output variable, not cache variable\n",
        "Line" : 19,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 2
    },
    "cmake/lzma.cmake" : {
      "ObjectId" : "a7f8c8e6fc6f1cda610c1b67d9edd60ebd027ad0",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LZMA support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/macros.cmake" : {
      "ObjectId" : "f36a254efa3a1d9fa8da3726dec4ba3ee22472f5",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################################\n\n# These macros were taken from the Point Cloud Library (pointclouds.org) #\n\n# and have been modified for PDAL. License details follow.               #\n\n##########################################################################\n\n# Software License Agreement (BSD License)                               #\n\n#                                                                        #\n\n# Point Cloud Library (PCL) - www.pointclouds.org                        #\n\n# Copyright (c) 2009-2012, Willow Garage, Inc.                           #\n\n# Copyright (c) 2012-, Open Perception, Inc.                             #\n\n# Copyright (c) XXX, respective authors.                                 #\n\n#                                                                        #\n\n# All rights reserved.                                                   #\n\n#                                                                        #\n\n# Redistribution and use in source and binary forms, with or without     #\n\n# modification, are permitted provided that the following conditions     #\n\n# are met:                                                               #\n\n#                                                                        #\n\n#  * Redistributions of source code must retain the above copyright      #\n\n#    notice, this list of conditions and the following disclaimer.       #\n\n#  * Redistributions in binary form must reproduce the above             #\n\n#    copyright notice, this list of conditions and the following         #\n\n#    disclaimer in the documentation and/or other materials provided     #\n\n#    with the distribution.                                              #\n\n#  * Neither the name of the copyright holder(s) nor the names of its    #\n\n#    contributors may be used to endorse or promote products derived     #\n\n#    from this software without specific prior written permission.       #\n\n#                                                                        #\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    #\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      #\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS      #\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE         #\n\n# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,    #\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,   #\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;       #\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER       #\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT     #\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN      #\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE        #\n\n# POSSIBILITY OF SUCH DAMAGE.                                            #\n\n##########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Add a library target.\n\n# _name The library name.\n\n# ARGN The source files for the library.\n\n#\n\n# The \"generate_dimension_hpp\" ensures that Dimension.hpp is built before\n\n#  attempting to build anything else in the library.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Add a free library target (one that doesn't depend on PDAL).\n\n# _name The library name.\n\n# _library_type Shared or static\n\n# ARGN The source files for the library.\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't install static libraries - they're already built into libpdalXXX\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Add an executable target.\n\n# _name The executable name.\n\n# _component The part of PDAL that this library belongs to.\n\n# ARGN the source files for the library.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Add a plugin target.\n\n# _name The plugin name.\n\n# ARGN :\n\n#    FILES the source files for the plugin\n\n#    LINK_WITH link plugin with libraries\n\n#    INCLUDES header directories\n\n#\n\n# The \"generate_dimension_hpp\" ensures that Dimension.hpp is built before\n\n#  attempting to build anything else in the \"library\".\n\n#\n\n# NOTE: _name is the name of a variable that will hold the plugin name\n\n#    when the macro completes\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Add a test target.\n\n# _name The driver name.\n\n# ARGN :\n\n#    FILES the source files for the test\n\n#    LINK_WITH link test executable with libraries\n\n#    INCLUDES header file directories\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensure plugins are loaded from build dir\n\n# https://github.com/PDAL/PDAL/issues/840\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Add a driver. Creates object library and adds files to source_group for windows IDE.\n\n# _type The driver type (e.g., reader, writer, driver, filter, kernel).\n\n# _name The driver name.\n\n# _srcs The list of source files to add.\n\n# _incs The list of includes to add.\n\n# _objs The object library name that is created.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# Add a kernel. Creates object library and adds files to source_group\n\n# for windows IDE.\n\n# _name The driver name.\n\n# _srcs The list of source files to add.\n\n# _incs The list of includes to add.\n\n# _objs The object library name that is created.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n# Get the operating system information. Generally, CMake does a good job of\n\n# this. Sometimes, though, it doesn't give enough information. This macro will\n\n# distinguish between the UNIX variants. Otherwise, use the CMake variables\n\n# such as WIN32 and APPLE and CYGWIN.\n\n# Sets OS_IS_64BIT if the operating system is 64-bit.\n\n# Sets LINUX if the operating system is Linux.\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n# Pull the component parts out of the version number.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find version components\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "###############################################################################\n\n# Set the destination directories for installing stuff.\n\n# Sets PDAL_LIB_INSTALL_DIR. Install libraries here.\n\n# Sets PDAL_BIN_INSTALL_DIR. Install binaries here.\n\n# Sets PDAL_INCLUDE_INSTALL_DIR. Install include files here, preferably in a\n\n# subdirectory named after the library in question (e.g.\n\n# \"registration/blorgle.h\")\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/matlab.cmake" : {
      "ObjectId" : "087140f9f0f9b941bbfe75b97f9466a0eb665e6d",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Matlab\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules.cmake" : {
      "ObjectId" : "7cfc648cbf1ef36555409ddaba5964b9e72bd3db",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Processing necessary to deal with modules.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindCurl.cmake" : {
      "ObjectId" : "c250cd0d12c35f6debdcb4849c1aaebe09916f7b",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindCURL\n\n# --------\n\n#\n\n# Find curl\n\n#\n\n# Find the native CURL headers and libraries.\n\n#\n\n# ::\n\n#\n\n#   CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#   CURL_LIBRARIES      - List of libraries when using curl.\n\n#   CURL_FOUND          - True if curl found.\n\n#   CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CURL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindFreeGLUT.cmake" : {
      "ObjectId" : "03dcdd818cbabe1451b0521a62617575f1b65825",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2009 LuaDist.\n\n# Created by Peter Kapec <kapecp@gmail.com>\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n#\tNote:\n\n#\t\tSearching headers and libraries is very simple and is NOT as powerful as scripts\n\n#\t\tdistributed with CMake, because LuaDist defines directories to search for.\n\n#\t\tEveryone is encouraged to contact the author with improvements. Maybe this file\n\n#\t\tbecomes part of CMake distribution sometimes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find FreeGLUT\n\n# Find the native FreeGLUT headers and libraries.\n\n#\n\n#  FREEGLUT_INCLUDE_DIRS - where to find freeglut.h, etc.\n\n#  FREEGLUT_LIBRARIES    - List of libraries when using FreeGLUT.\n\n#  FREEGLUT_FOUND        - True if FreeGLUT found.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set FREEGLUT_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindGeoTIFF.cmake" : {
      "ObjectId" : "db189a266882d4a0a1338ac0ed4b6dc5bfadfaca",
      "LastModified" : "2019-01-10T21:29:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# CMake module to search for GeoTIFF library\n\n#\n\n# On success, the macro sets the following variables:\n\n# GEOTIFF_FOUND       = if the library found\n\n# GEOTIFF_LIBRARIES   = full path to the library\n\n# GEOTIFF_INCLUDE_DIR = where to find the library headers also defined,\n\n#                       but not for general use are\n\n# GEOTIFF_LIBRARY     = where to find the PROJ.4 library.\n\n# GEOTIFF_VERSION     = version of library which was found, e.g. \"1.2.5\"\n\n#\n\n# Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Module source: http://github.com/mloskot/workshop/tree/master/cmake/\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GEOTIFF_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindGeoWave.cmake" : {
      "ObjectId" : "06231f8341765ae96b77ce1a65fc37f034606bb1",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# CMake module to search for GeoWave\n\n#\n\n# On success, the macro sets the following variables:\n\n# GeoWave_FOUND    = if the runtime jar is found\n\n# GeoWave_RUNTIME  = full path to the GeoWave jar\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GeoWave_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindICONV.cmake" : {
      "ObjectId" : "f5fd3fd5245e83a6902b3900d8362ca722d93ffc",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# taken from:\n\n# http://code.google.com/p/tinygettext/source/browse/trunk/FindICONV.cmake?spec=svn183&r=183\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Copyright (c) 2006, Peter Kümmel, <syntheticpp@gmx.net>\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions\n\n#  are met:\n\n#  \n\n#  1. Redistributions of source code must retain the copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#  2. Redistributions in binary form must reproduce the copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#  3. The name of the author may not be used to endorse or promote products \n\n#     derived from this software without specific prior written permission.\n\n#  \n\n#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#message(STATUS \"Found iconv   dll  : ${ICONV_DLL}\")\n",
        "Line" : 90,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindJSONCPP.cmake" : {
      "ObjectId" : "8dc0d7cbf051d87447abaff475d2395f01cf3581",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find JSONCPP library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  JSONCPP_INCLUDE_DIR\n\n#  JSONCPP_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  JSONCPP_FOUND\n\n#  JSONCPP_INCLUDE_DIRS\n\n#  JSONCPP_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Author:\n\n# 2011 Philippe Crassous (ENSAM ParisTech / Institut Image) p.crassous _at_ free.fr\n\n#\n\n# Adapted from the Virtual Reality Peripheral Network library.\n\n# https://github.com/rpavlik/vrpn/blob/master/README.Legal\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindJace.cmake" : {
      "ObjectId" : "122b66a7fa61007d8e32792dad6a2544ee2528d9",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# CMake module to search for Jace library\n\n#\n\n# On success, the macro sets the following variables:\n\n# JACE_FOUND       = if the library found\n\n# JACE_LIBRARIES   = full path to the library\n\n# JACE_INCLUDE_DIR = where to find the library headers also defined,\n\n#                       but not for general use are\n\n# JACE_LIBRARY     = where to find the Jace library.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set JACE_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindLASzip.cmake" : {
      "ObjectId" : "2847e92d36976fce0b595268f1206dc556077c4f",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# CMake module to search for LASzip library\n\n#\n\n# On success, the macro sets the following variables:\n\n# LASZIP_FOUND       = if the library found\n\n# LASZIP_LIBRARIES   = full path to the library\n\n# LASZIP_INCLUDE_DIR = where to find the library headers also defined,\n\n#                       but not for general use are\n\n# LASZIP_LIBRARY     = where to find the laszip library.\n\n# LASZIP_VERSION     = version of library which was found, e.g. \"1.2.5\"\n\n#\n\n# Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Module source: http://github.com/mloskot/workshop/tree/master/cmake/\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Comment out laszip.hpp version info\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set LASZIP_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindLibexecinfo.cmake" : {
      "ObjectId" : "82a15e9743bb7cd38c18d250839ebdedf53512f0",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Libexecinfo\n\n# ~~~~~~~~~\n\n# CMake module to search for LIBEXECINFO\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# On Apple backtrace is in a system library.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindLibunwind.cmake" : {
      "ObjectId" : "7cc2a9c07a946e162815ceb2d1df7e11f6868d05",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Libunwind\n\n# ~~~~~~~~~\n\n# CMake module to search for LIBUNWIND\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindMBSystem.cmake" : {
      "ObjectId" : "bf546f47d39d9ecc9bf1237f6e3f2a35e5a009ba",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find MBSYSTEM library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  MBSYSTEM_INCLUDE_DIR\n\n#  MBSYSTEM_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  MBSYSTEM_FOUND\n\n#  MBSYSTEM_INCLUDE_DIRS\n\n#  MBSYSTEM_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Author:\n\n# 2011 Philippe Crassous (ENSAM ParisTech / Institut Image) p.crassous _at_ free.fr\n\n#\n\n# Adapted from the Virtual Reality Peripheral Network library.\n\n# https://github.com/rpavlik/vrpn/blob/master/README.Legal\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindMatlab.cmake" : {
      "ObjectId" : "dbce294808a6e022b0e84682a21e0ad21a8b7287",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMatlab\n\n# ----------\n\n#\n\n# Finds Matlab installations and provides Matlab tools and libraries to cmake.\n\n#\n\n# This package first intention is to find the libraries associated with Matlab\n\n# in order to be able to build Matlab extensions (mex files). It can also be\n\n# used:\n\n#\n\n# * run specific commands in Matlab\n\n# * declare Matlab unit test\n\n# * retrieve various information from Matlab (mex extensions, versions and\n\n#   release queries, ...)\n\n#\n\n# The module supports the following components:\n\n#\n\n# * ``MX_LIBRARY``, ``ENG_LIBRARY`` and ``MAT_LIBRARY``: respectively the MX,\n\n#   ENG and MAT libraries of Matlab\n\n# * ``MAIN_PROGRAM`` the Matlab binary program.\n\n# * ``MEX_COMPILER`` the MEX compiler.\n\n# * ``SIMULINK`` the Simulink environment.\n\n#\n\n# .. note::\n\n#\n\n#   The version given to the :command:`find_package` directive is the Matlab\n\n#   **version**, which should not be confused with the Matlab *release* name\n\n#   (eg. `R2014`).\n\n#   The :command:`matlab_get_version_from_release_name` and\n\n#   :command:`matlab_get_release_name_from_version` allow a mapping\n\n#   from the release name to the version.\n\n#\n\n# The variable :variable:`Matlab_ROOT_DIR` may be specified in order to give\n\n# the path of the desired Matlab version. Otherwise, the behaviour is platform\n\n# specific:\n\n#\n\n# * Windows: The installed versions of Matlab are retrieved from the\n\n#   Windows registry\n\n# * OS X: The installed versions of Matlab are given by the MATLAB\n\n#   paths in ``/Application``. If no such application is found, it falls back\n\n#   to the one that might be accessible from the PATH.\n\n# * Unix: The desired Matlab should be accessible from the PATH.\n\n#\n\n# Additional information is provided when :variable:`MATLAB_FIND_DEBUG` is set.\n\n# When a Matlab binary is found automatically and the ``MATLAB_VERSION``\n\n# is not given, the version is queried from Matlab directly.\n\n# On Windows, it can make a window running Matlab appear.\n\n#\n\n# The mapping of the release names and the version of Matlab is performed by\n\n# defining pairs (name, version).  The variable\n\n# :variable:`MATLAB_ADDITIONAL_VERSIONS` may be provided before the call to\n\n# the :command:`find_package` in order to handle additional versions.\n\n#\n\n# A Matlab scripts can be added to the set of tests using the\n\n# :command:`matlab_add_unit_test`. By default, the Matlab unit test framework\n\n# will be used (>= 2013a) to run this script, but regular ``.m`` files\n\n# returning an exit code can be used as well (0 indicating a success).\n\n#\n\n# Module Input Variables\n\n# ^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Users or projects may set the following variables to configure the module\n\n# behaviour:\n\n#\n\n# :variable:`Matlab_ROOT_DIR`\n\n#   the root of the Matlab installation.\n\n# :variable:`MATLAB_FIND_DEBUG`\n\n#   outputs debug information\n\n# :variable:`MATLAB_ADDITIONAL_VERSIONS`\n\n#   additional versions of Matlab for the automatic retrieval of the installed\n\n#   versions.\n\n#\n\n# Variables defined by the module\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Result variables\n\n# \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n#\n\n# ``Matlab_FOUND``\n\n#   ``TRUE`` if the Matlab installation is found, ``FALSE``\n\n#   otherwise. All variable below are defined if Matlab is found.\n\n# ``Matlab_ROOT_DIR``\n\n#   the final root of the Matlab installation determined by the FindMatlab\n\n#   module.\n\n# ``Matlab_MAIN_PROGRAM``\n\n#   the Matlab binary program. Available only if the component ``MAIN_PROGRAM``\n\n#   is given in the :command:`find_package` directive.\n\n# ``Matlab_INCLUDE_DIRS``\n\n#  the path of the Matlab libraries headers\n\n# ``Matlab_MEX_LIBRARY``\n\n#   library for mex, always available.\n\n# ``Matlab_MX_LIBRARY``\n\n#   mx library of Matlab (arrays). Available only if the component\n\n#   ``MX_LIBRARY`` has been requested.\n\n# ``Matlab_ENG_LIBRARY``\n\n#   Matlab engine library. Available only if the component ``ENG_LIBRARY``\n\n#   is requested.\n\n# ``Matlab_MAT_LIBRARY``\n\n#   Matlab matrix library. Available only if the component ``MAT_LIBRARY``\n\n#   is requested.\n\n# ``Matlab_LIBRARIES``\n\n#   the whole set of libraries of Matlab\n\n# ``Matlab_MEX_COMPILER``\n\n#   the mex compiler of Matlab. Currently not used.\n\n#   Available only if the component ``MEX_COMPILER`` is asked\n\n#\n\n# Cached variables\n\n# \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n#\n\n# ``Matlab_MEX_EXTENSION``\n\n#   the extension of the mex files for the current platform (given by Matlab).\n\n# ``Matlab_ROOT_DIR``\n\n#   the location of the root of the Matlab installation found. If this value\n\n#   is changed by the user, the result variables are recomputed.\n\n#\n\n# Provided macros\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# :command:`matlab_get_version_from_release_name`\n\n#   returns the version from the release name\n\n# :command:`matlab_get_release_name_from_version`\n\n#   returns the release name from the Matlab version\n\n#\n\n# Provided functions\n\n# ^^^^^^^^^^^^^^^^^^\n\n#\n\n# :command:`matlab_add_mex`\n\n#   adds a target compiling a MEX file.\n\n# :command:`matlab_add_unit_test`\n\n#   adds a Matlab unit test file as a test to the project.\n\n# :command:`matlab_extract_all_installed_versions_from_registry`\n\n#   parses the registry for all Matlab versions. Available on Windows only.\n\n#   The part of the registry parsed is dependent on the host processor\n\n# :command:`matlab_get_all_valid_matlab_roots_from_registry`\n\n#   returns all the possible Matlab paths, according to a previously\n\n#   given list. Only the existing/accessible paths are kept. This is mainly\n\n#   useful for the searching all possible Matlab installation.\n\n# :command:`matlab_get_mex_suffix`\n\n#   returns the suffix to be used for the mex files\n\n#   (platform/architecture dependent)\n\n# :command:`matlab_get_version_from_matlab_run`\n\n#   returns the version of Matlab, given the full directory of the Matlab\n\n#   program.\n\n#\n\n#\n\n# Known issues\n\n# ^^^^^^^^^^^^\n\n#\n\n# **Symbol clash in a MEX target**\n\n#   By default, every symbols inside a MEX\n\n#   file defined with the command :command:`matlab_add_mex` have hidden\n\n#   visibility, except for the entry point. This is the default behaviour of\n\n#   the MEX compiler, which lowers the risk of symbol collision between the\n\n#   libraries shipped with Matlab, and the libraries to which the MEX file is\n\n#   linking to. This is also the default on Windows platforms.\n\n#\n\n#   However, this is not sufficient in certain case, where for instance your\n\n#   MEX file is linking against libraries that are already loaded by Matlab,\n\n#   even if those libraries have different SONAMES.\n\n#   A possible solution is to hide the symbols of the libraries to which the\n\n#   MEX target is linking to. This can be achieved in GNU GCC compilers with\n\n#   the linker option ``-Wl,--exclude-libs,ALL``.\n\n#\n\n# **Tests using GPU resources**\n\n#   in case your MEX file is using the GPU and\n\n#   in order to be able to run unit tests on this MEX file, the GPU resources\n\n#   should be properly released by Matlab. A possible solution is to make\n\n#   Matlab aware of the use of the GPU resources in the session, which can be\n\n#   performed by a command such as ``D = gpuDevice()`` at the beginning of\n\n#   the test script (or via a fixture).\n\n#\n\n#\n\n# Reference\n\n# ^^^^^^^^^\n\n#\n\n# .. variable:: Matlab_ROOT_DIR\n\n#\n\n#    The root folder of the Matlab installation. If set before the call to\n\n#    :command:`find_package`, the module will look for the components in that\n\n#    path. If not set, then an automatic search of Matlab\n\n#    will be performed. If set, it should point to a valid version of Matlab.\n\n#\n\n# .. variable:: MATLAB_FIND_DEBUG\n\n#\n\n#    If set, the lookup of Matlab and the intermediate configuration steps are\n\n#    outputted to the console.\n\n#\n\n# .. variable:: MATLAB_ADDITIONAL_VERSIONS\n\n#\n\n#   If set, specifies additional versions of Matlab that may be looked for.\n\n#   The variable should be a list of strings, organised by pairs of release\n\n#   name and versions, such as follows::\n\n#\n\n#     set(MATLAB_ADDITIONAL_VERSIONS\n\n#         \"release_name1=corresponding_version1\"\n\n#         \"release_name2=corresponding_version2\"\n\n#         ...\n\n#         )\n\n#\n\n#   Example::\n\n#\n\n#     set(MATLAB_ADDITIONAL_VERSIONS\n\n#         \"R2013b=8.2\"\n\n#         \"R2013a=8.1\"\n\n#         \"R2012b=8.0\")\n\n#\n\n#   The order of entries in this list matters when several versions of\n\n#   Matlab are installed. The priority is set according to the ordering in\n\n#   this list.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The currently supported versions. Other version can be added by the user by\n\n# providing MATLAB_ADDITIONAL_VERSIONS\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# temporary folder for all Matlab runs\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_version_from_release_name\n\n#\n\n#   Returns the version of Matlab (17.58) from a release name (R2017k)\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_release_name_from_version\n\n#\n\n#   Returns the release name (R2017k) from the version of Matlab (17.58)\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extracts all the supported release names (R2017k...) of Matlab\n\n# internal use\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extracts all the supported versions of Matlab\n\n# internal use\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_extract_all_installed_versions_from_registry\n\n#\n\n#   This function parses the registry and founds the Matlab versions that are\n\n#   installed. The found versions are returned in `matlab_versions`.\n\n#   Set `win64` to `TRUE` if the 64 bit version of Matlab should be looked for\n\n#   The returned list contains all versions under\n\n#   ``HKLM\\\\SOFTWARE\\\\Mathworks\\\\MATLAB`` or an empty list in case an error\n\n#   occurred (or nothing found).\n\n#\n\n#   .. note::\n\n#\n\n#     Only the versions are provided. No check is made over the existence of the\n\n#     installation referenced in the registry,\n\n#\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# /reg:64 should be added on 64 bits capable OSs in order to enable the\n\n# redirection of 64 bits applications\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# (internal)\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# get the supported versions\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# this is a manual population of the versions we want to look for\n\n# this can be done as is, but preferably with the call to\n\n# matlab_get_supported_versions and variable\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# populating the versions we want to look for\n\n# set(matlab_supported_versions)\n",
        "Line" : 425,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# # Matlab 7\n\n# set(matlab_major 7)\n\n# foreach(current_matlab_minor RANGE 4 20)\n\n# list(APPEND matlab_supported_versions \"${matlab_major}.${current_matlab_minor}\")\n\n# endforeach(current_matlab_minor)\n",
        "Line" : 428,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# # Matlab 8\n\n# set(matlab_major 8)\n\n# foreach(current_matlab_minor RANGE 0 5)\n\n# list(APPEND matlab_supported_versions \"${matlab_major}.${current_matlab_minor}\")\n\n# endforeach(current_matlab_minor)\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# # taking into account the possible additional versions provided by the user\n\n# if(DEFINED MATLAB_ADDITIONAL_VERSIONS)\n\n# list(APPEND matlab_supported_versions MATLAB_ADDITIONAL_VERSIONS)\n\n# endif()\n",
        "Line" : 440,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# we order from more recent to older\n",
        "Line" : 446,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_all_valid_matlab_roots_from_registry\n\n#\n\n#   Populates the Matlab root with valid versions of Matlab.\n\n#   The returned matlab_roots is organized in pairs\n\n#   ``(version_number,matlab_root_path)``.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_all_valid_matlab_roots_from_registry(\n\n#         matlab_versions\n\n#         matlab_roots)\n\n#\n\n#   ``matlab_versions``\n\n#     the versions of each of the Matlab installations\n\n#   ``matlab_roots``\n\n#     the location of each of the Matlab installations\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The matlab_versions comes either from\n\n# extract_matlab_versions_from_registry_brute_force or\n\n# matlab_extract_all_installed_versions_from_registry.\n",
        "Line" : 481,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_mex_suffix\n\n#\n\n#   Returns the extension of the mex files (the suffixes).\n\n#   This function should not be called before the appropriate Matlab root has\n\n#   been found.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_mex_suffix(\n\n#         matlab_root\n\n#         mex_suffix)\n\n#\n\n#   ``matlab_root``\n\n#     the root of the Matlab installation\n\n#   ``mex_suffix``\n\n#     the variable name in which the suffix will be returned.\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# todo setup the extension properly. Currently I do not know if this is\n\n# sufficient for all win32 distributions.\n\n# there is also CMAKE_EXECUTABLE_SUFFIX that could be tweaked\n",
        "Line" : 522,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# we first try without suffix, since cmake does not understand a list with\n\n# one empty string element\n",
        "Line" : 530,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# this call should populate the cache automatically\n",
        "Line" : 542,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# the program has been found?\n",
        "Line" : 554,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_get_version_from_matlab_run\n\n#\n\n#   This function runs Matlab program specified on arguments and extracts its\n\n#   version.\n\n#\n\n#   ::\n\n#\n\n#     matlab_get_version_from_matlab_run(\n\n#         matlab_binary_path\n\n#         matlab_list_versions)\n\n#\n\n#   ``matlab_binary_path``\n\n#     the location of the `matlab` binary executable\n\n#   ``matlab_list_versions``\n\n#     the version extracted from Matlab\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# the log file is needed since on windows the command executes in a new\n\n# window and it is not possible to get back the answer of Matlab\n\n# the -wait command is needed on windows, otherwise the call returns\n\n# immediately after the program launches itself.\n",
        "Line" : 619,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# timeout set to 120 seconds, in case it does not start\n\n# note as said before OUTPUT_VARIABLE cannot be used in a platform\n\n# independent manner however, not setting it would flush the output of Matlab\n\n# in the current console (unix variant)\n",
        "Line" : 634,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# if successful, read back the log\n",
        "Line" : 668,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_add_unit_test\n\n#\n\n#   Adds a Matlab unit test to the test set of cmake/ctest.\n\n#   This command requires the component ``MAIN_PROGRAM``.\n\n#   The unit test uses the Matlab unittest framework (default, available\n\n#   starting Matlab 2013b+) except if the option ``NO_UNITTEST_FRAMEWORK``\n\n#   is given.\n\n#\n\n#   The function expects one Matlab test script file to be given.\n\n#   In the case ``NO_UNITTEST_FRAMEWORK`` is given, the unittest script file\n\n#   should contain the script to be run, plus an exit command with the exit\n\n#   value. This exit value will be passed to the ctest framework (0 success,\n\n#   non 0 failure). Additional arguments accepted by :command:`add_test` can be\n\n#   passed through ``TEST_ARGS`` (eg. ``CONFIGURATION <config> ...``).\n\n#\n\n#   ::\n\n#\n\n#     matlab_add_unit_test(\n\n#         NAME <name>\n\n#         UNITTEST_FILE matlab_file_containing_unittest.m\n\n#         [CUSTOM_MATLAB_COMMAND matlab_command_to_run_as_test]\n\n#         [UNITTEST_PRECOMMAND matlab_command_to_run]\n\n#         [TIMEOUT timeout]\n\n#         [ADDITIONAL_PATH path1 [path2 ...]]\n\n#         [MATLAB_ADDITIONAL_STARTUP_OPTIONS option1 [option2 ...]]\n\n#         [TEST_ARGS arg1 [arg2 ...]]\n\n#         [NO_UNITTEST_FRAMEWORK]\n\n#         )\n\n#\n\n#   The function arguments are:\n\n#\n\n#   ``NAME``\n\n#     name of the unittest in ctest.\n\n#   ``UNITTEST_FILE``\n\n#     the matlab unittest file. Its path will be automatically\n\n#     added to the Matlab path.\n\n#   ``CUSTOM_MATLAB_COMMAND``\n\n#     Matlab script command to run as the test.\n\n#     If this is not set, then the following is run:\n\n#     ``runtests('matlab_file_name'), exit(max([ans(1,:).Failed]))``\n\n#     where ``matlab_file_name`` is the ``UNITTEST_FILE`` without the extension.\n\n#   ``UNITTEST_PRECOMMAND``\n\n#     Matlab script command to be ran before the file\n\n#     containing the test (eg. GPU device initialisation based on CMake\n\n#     variables).\n\n#   ``TIMEOUT``\n\n#     the test timeout in seconds. Defaults to 180 seconds as the\n\n#     Matlab unit test may hang.\n\n#   ``ADDITIONAL_PATH``\n\n#     a list of paths to add to the Matlab path prior to\n\n#     running the unit test.\n\n#   ``MATLAB_ADDITIONAL_STARTUP_OPTIONS``\n\n#     a list of additional option in order\n\n#     to run Matlab from the command line.\n\n#     ``-nosplash -nodesktop -nodisplay`` are always added.\n\n#   ``TEST_ARGS``\n\n#     Additional options provided to the add_test command. These\n\n#     options are added to the default options (eg. \"CONFIGURATIONS Release\")\n\n#   ``NO_UNITTEST_FRAMEWORK``\n\n#     when set, indicates that the test should not\n\n#     use the unittest framework of Matlab (available for versions >= R2013a).\n\n#   ``WORKING_DIRECTORY``\n\n#     This will be the working directory for the test. If specified it will\n\n#     also be the output directory used for the log file of the test run.\n\n#     If not specifed the temporary directory ``${CMAKE_BINARY_DIR}/Matlab`` will\n\n#     be used as the working directory and the log location.\n\n#\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#.rst:\n\n# .. command:: matlab_add_mex\n\n#\n\n#   Adds a Matlab MEX target.\n\n#   This commands compiles the given sources with the current tool-chain in\n\n#   order to produce a MEX file. The final name of the produced output may be\n\n#   specified, as well as additional link libraries, and a documentation entry\n\n#   for the MEX file. Remaining arguments of the call are passed to the\n\n#   :command:`add_library` or :command:`add_executable` command.\n\n#\n\n#   ::\n\n#\n\n#      matlab_add_mex(\n\n#          NAME <name>\n\n#          [EXECUTABLE | MODULE | SHARED]\n\n#          SRC src1 [src2 ...]\n\n#          [OUTPUT_NAME output_name]\n\n#          [DOCUMENTATION file.txt]\n\n#          [LINK_TO target1 target2 ...]\n\n#          [...]\n\n#      )\n\n#\n\n#   ``NAME``\n\n#     name of the target.\n\n#   ``SRC``\n\n#     list of source files.\n\n#   ``LINK_TO``\n\n#     a list of additional link dependencies.  The target links to ``libmex``\n\n#     by default. If ``Matlab_MX_LIBRARY`` is defined, it also\n\n#     links to ``libmx``.\n\n#   ``OUTPUT_NAME``\n\n#     if given, overrides the default name. The default name is\n\n#     the name of the target without any prefix and\n\n#     with ``Matlab_MEX_EXTENSION`` suffix.\n\n#   ``DOCUMENTATION``\n\n#     if given, the file ``file.txt`` will be considered as\n\n#     being the documentation file for the MEX file. This file is copied into\n\n#     the same folder without any processing, with the same name as the final\n\n#     mex file, and with extension `.m`. In that case, typing ``help <name>``\n\n#     in Matlab prints the documentation contained in this file.\n\n#   ``MODULE`` or ``SHARED`` may be given to specify the type of library to be\n\n#     created. ``EXECUTABLE`` may be given to create an executable instead of\n\n#     a library. If no type is given explicitly, the type is ``SHARED``.\n\n#\n\n#   The documentation file is not processed and should be in the following\n\n#   format:\n\n#\n\n#   ::\n\n#\n\n#     % This is the documentation\n\n#     function ret = mex_target_output_name(input1)\n\n#\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# we do not need all this on Windows\n\n# pthread options\n",
        "Line" : 865,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# we should use try_compile instead, the link flags are discarded from\n\n# this compiler_flag function.\n\n#check_cxx_compiler_flag(-Wl,--exclude-libs,ALL HAS_SYMBOL_HIDING_CAPABILITY)\n",
        "Line" : 872,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# documentation\n",
        "Line" : 926,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# documentation\n",
        "Line" : 935,
        "CharPositionInLine" : 12
      },
      "35" : {
        "Text" : "# entry point in the mex file + taking care of visibility and symbol clashes.\n",
        "Line" : 937,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Apparently, compiling with -pthread generated the proper link flags\n\n# and some defines at compilation\n",
        "Line" : 945,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# if we do not do that, the symbols linked from eg. boost remain weak and\n\n# then clash with the ones defined in the matlab process. So by default\n\n# the symbols are hidden.\n\n# This also means that for shared libraries (like MEX), the entry point\n\n# should be explicitly declared with default visibility, otherwise Matlab\n\n# cannot find the entry point.\n\n# Note that this is particularly meaningful if the MEX wrapper itself\n\n# contains symbols that are clashing with Matlab (that are compiled in the\n\n# MEX file). In order to propagate the visibility options to the libraries\n\n# to which the MEX file is linked against, the -Wl,--exclude-libs,ALL\n\n# option should also be specified.\n",
        "Line" : 951,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "#  get_target_property(\n\n#    _previous_link_flags\n\n#    ${${prefix}_NAME}\n\n#    LINK_FLAGS)\n\n#  if(NOT _previous_link_flags)\n\n#    set(_previous_link_flags)\n\n#  endif()\n",
        "Line" : 970,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "#  if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"GNU\")\n\n#    set_target_properties(${${prefix}_NAME}\n\n#      PROPERTIES\n\n#        LINK_FLAGS \"${_previous_link_flags} -Wl,--exclude-libs,ALL\"\n\n#        # -Wl,--version-script=${_FindMatlab_SELF_DIR}/MatlabLinuxVisibility.map\"\n\n#    )\n\n#  elseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n\n#    # in this case, all other symbols become hidden.\n\n#    set_target_properties(${${prefix}_NAME}\n\n#      PROPERTIES\n\n#        LINK_FLAGS \"${_previous_link_flags} -Wl,-exported_symbol,_mexFunction\"\n\n#        #-Wl,-exported_symbols_list,${_FindMatlab_SELF_DIR}/MatlabOSXVisilibity.map\"\n\n#    )\n\n#  endif()\n",
        "Line" : 978,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# (internal)\n\n# Used to get the version of matlab, using caching. This basically transforms the\n\n# output of the root list, with possible unknown version, to a version\n\n#\n",
        "Line" : 1006,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# if the version is not trivial, we query matlab for that\n\n# we keep track of the location of matlab that induced this version\n\n#if(NOT DEFINED Matlab_PROG_VERSION_STRING_AUTO_DETECT)\n\n#  set(Matlab_PROG_VERSION_STRING_AUTO_DETECT \"\" CACHE INTERNAL \"internal matlab location for the discovered version\")\n\n#endif()\n",
        "Line" : 1012,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# the version is known, we just return it\n",
        "Line" : 1019,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "#\n",
        "Line" : 1025,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# do we already have a matlab program?\n",
        "Line" : 1028,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# if not found, clear the dependent variables\n",
        "Line" : 1045,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# full real path for path comparison\n",
        "Line" : 1056,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# is it the same as the previous one?\n",
        "Line" : 1061,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# update the location of the program\n",
        "Line" : 1067,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# set the version into the cache\n",
        "Line" : 1080,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# warning, just in case several versions found (should not happen)\n",
        "Line" : 1083,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# return the updated value\n",
        "Line" : 1088,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# ###################################\n\n# Exploring the possible Matlab_ROOTS\n",
        "Line" : 1099,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# this variable will get all Matlab installations found in the current system.\n",
        "Line" : 1102,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# if the user specifies a possible root, we keep this one\n",
        "Line" : 1108,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# if Matlab_ROOT_DIR specified but erroneous\n",
        "Line" : 1111,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# NOTFOUND indicates the code below to search for the version automatically\n",
        "Line" : 1116,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# empty version\n",
        "Line" : 1118,
        "CharPositionInLine" : 78
      },
      "58" : {
        "Text" : "# cached version\n",
        "Line" : 1120,
        "CharPositionInLine" : 101
      },
      "59" : {
        "Text" : "# if the user does not specify the possible installation root, we look for\n\n# one installation using the appropriate heuristics\n",
        "Line" : 1127,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# On WIN32, we look for Matlab installation in the registry\n\n# if unsuccessful, we look for all known revision and filter the existing\n\n# ones.\n",
        "Line" : 1132,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# testing if we are able to extract the needed information from the registry\n",
        "Line" : 1136,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# the returned list is empty, doing the search on all known versions\n",
        "Line" : 1140,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# filtering the results with the registry keys\n",
        "Line" : 1150,
        "CharPositionInLine" : 8
      },
      "64" : {
        "Text" : "# on mac, we look for the /Application paths\n\n# this corresponds to the behaviour on Windows. On Linux, we do not have\n\n# any other guess.\n",
        "Line" : 1156,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "# if we have not found anything, we fall back on the PATH\n",
        "Line" : 1191,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# At this point, we have no other choice than trying to find it from PATH.\n\n# If set by the user, this wont change\n",
        "Line" : 1194,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# we then populate the list of roots, with empty version\n",
        "Line" : 1202,
        "CharPositionInLine" : 8
      },
      "68" : {
        "Text" : "# resolve symlinks\n",
        "Line" : 1207,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "# get the directory (the command below has to be run twice)\n\n# this will be the matlab root\n",
        "Line" : 1210,
        "CharPositionInLine" : 8
      },
      "70" : {
        "Text" : "# Matlab should be in bin\n",
        "Line" : 1213,
        "CharPositionInLine" : 97
      },
      "71" : {
        "Text" : "# take the first possible Matlab root\n",
        "Line" : 1236,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# adding a warning in case of ambiguity\n",
        "Line" : 1243,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# check if the root changed wrt. the previous defined one, if so\n\n# clear all the cached variables for being able to reconfigure properly\n",
        "Line" : 1251,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# internal\n",
        "Line" : 1267,
        "CharPositionInLine" : 16
      },
      "75" : {
        "Text" : "#Matlab_PROG_VERSION_STRING_AUTO_DETECT\n",
        "Line" : 1270,
        "CharPositionInLine" : 16
      },
      "76" : {
        "Text" : "# Fix the version, in case this one is NOTFOUND\n",
        "Line" : 1284,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# i should be for intel\n",
        "Line" : 1311,
        "CharPositionInLine" : 34
      },
      "78" : {
        "Text" : "# This variable goes to the cache.\n",
        "Line" : 1357,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# internal\n\n# This small stub around find_library is to prevent any pollution of CMAKE_FIND_LIBRARY_PREFIXES in the global scope.\n\n# This is the function to be used below instead of the find_library directives.\n",
        "Line" : 1369,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# the MEX library/header are required\n",
        "Line" : 1381,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# the MEX extension is required\n",
        "Line" : 1400,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# the matlab root is required\n",
        "Line" : 1403,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# component Mex Compiler\n",
        "Line" : 1406,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# component Matlab program\n",
        "Line" : 1422,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Component MX library\n",
        "Line" : 1438,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Component ENG library\n",
        "Line" : 1454,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Component MAT library\n",
        "Line" : 1470,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Component Simulink\n",
        "Line" : 1486,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 89
    },
    "cmake/modules/FindMrSID.cmake" : {
      "ObjectId" : "9a4c12eed92d0497f951d95ddc7d4c183c4eb577",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# CMake module to search for MrSID/MG4 libraries\n\n#\n\n# On success, the macro sets the following variables:\n\n# MRSID_FOUND        = if the library was found\n\n# MRSID_LIBRARY      = full path to the library\n\n# MRSID_INCLUDE_DIR  = full path to the headers\n\n# MRSID_VERSION      = version of library which was found\n\n#\n\n# Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Developed with inspiration from Petr Vanek <petr@scribus.info>\n\n# who wrote similar macro for TOra - http://torasql.com/\n\n#\n\n# Module source: http://github.com/mloskot/workshop/tree/master/cmake/\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set MRSID_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindNitro.cmake" : {
      "ObjectId" : "29dd4c722dd53bb20230ca85cbd98e3a57cdaca6",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ###############################################################################\n\n# #\n\n# # CMake module to search for Nitro library\n\n# #\n\n# # On success, the macro sets the following variables:\n\n# # NITRO_FOUND       = if the library found\n\n# # NITRO_LIBRARIES   = full path to the library\n\n# # NITRO_INCLUDE_DIR = where to find the library headers also defined,\n\n# #                       but not for general use are\n\n# # NITRO_LIBRARY     = where to find the hexer library.\n\n# # NITRO_VERSION     = version of library which was found, e.g. \"1.2.5\"\n\n# #\n\n# # Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>\n\n# #\n\n# # Redistribution and use is allowed according to the terms of the BSD license.\n\n# # For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n# #\n\n# ###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  SET(NITRO_VERSION_H \"${NITRO_INCLUDE_DIR}/nitro/c/nitf/nitf/Defines.h\")\n\n#  FILE(READ ${NITRO_VERSION_H} NITRO_VERSION_H_CONTENTS)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set NITRO_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindNumPy.cmake" : {
      "ObjectId" : "a1fcbaa9b4f11b5d336d18dc5cd9864159b651df",
      "LastModified" : "2019-04-05T13:50:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Python module NumPy\n\n#\n\n# This module defines:\n\n#  NUMPY_INCLUDE_DIR: include path for arrayobject.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2009-2012 Arnaud Barré <arnaud.barre@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the include path\n\n# WARNING: The variable PYTHON_EXECUTABLE is defined by the script FindPythonInterp.cmake\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindOSG.cmake" : {
      "ObjectId" : "0d54f230dddd38add57d6874039d25916c0b7a73",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OSG_LIBRARY\n\n# OSG_FOUND, if false, do not try to link to osg\n\n# OSG_INCLUDE_DIRS, where to find the headers\n\n# OSG_INCLUDE_DIR, where to find the source headers\n\n# OSG_GEN_INCLUDE_DIR, where to find the generated headers\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to use this module, set variables to point to the osg build\n\n# directory, and source directory, respectively\n\n# OSGDIR or OSG_SOURCE_DIR: osg source directory, typically OpenSceneGraph\n\n# OSG_DIR or OSG_BUILD_DIR: osg build directory, place in which you've\n\n#    built osg via cmake\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgUtil/SceneView>\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###### headers ######\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 18
      },
      "8" : {
        "Text" : "###### libraries ######\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindOracle.cmake" : {
      "ObjectId" : "60f9c1793e5b87ea79e48e5d1344d0ee05855c21",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# CMake module to search for Oracle client library (OCI)\n\n#\n\n# On success, the macro sets the following variables:\n\n# ORACLE_FOUND       = if the library found\n\n# ORACLE_LIBRARY     = full path to the library\n\n# ORACLE_LIBRARIES   = full path to the library\n\n# ORACLE_INCLUDE_DIR = where to find the library headers also defined,\n\n#                       but not for general use are\n\n# ORACLE_VERSION     = version of library which was found, e.g. \"1.2.5\"\n\n#\n\n# Copyright (c) 2009-2013 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Developed with inspiration from Petr Vanek <petr@scribus.info>\n\n# who wrote similar macro for TOra - http://torasql.com/\n\n#\n\n# Module source: http://github.com/mloskot/workshop/tree/master/cmake/\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If ORACLE_HOME not defined, assume Oracle libraries not available\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Oracle SDK\n\n# Oracle XE on Windows\n",
        "Line" : 35,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# conda\n",
        "Line" : 45,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# Oracle SDK\n",
        "Line" : 46,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# Oracle XE on Windows\n",
        "Line" : 48,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# if(APPLE)\n\n#   set(ORACLE_OCIEI_NAMES libociei ociei)\n\n# \n\n#   find_library(ORACLE_OCIEI_LIBRARY\n\n#     NAMES libociei ociei\n\n#     PATHS ${ORACLE_LIB_DIR})\n\n# \n\n#   if(ORACLE_OCIEI_LIBRARY)\n\n#     set(ORACLE_LIBRARY ${ORACLE_LIBRARY} ${ORACLE_OCIEI_LIBRARY})\n\n#   else(ORACLE_OCIEI_LIBRARY)\n\n#     message(STATUS\n\n#       \"libociei.dylib is not found. It may cause crash if you are building BUNDLE\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set ORACLE_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindPostgreSQL.cmake" : {
      "ObjectId" : "8178418ccb1fc198c261b40f5a4838a2ab2ec428",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find PostgreSQL\n\n# Find the PostgreSQL includes and client library\n\n# This module defines\n\n#  POSTGRESQL_INCLUDE_DIR, where to find libpq-fe.h\n\n#  POSTGRESQL_LIBRARIES, libraries needed to use PostgreSQL\n\n#  POSTGRESQL_VERSION, if found, version of PostgreSQL\n\n#  POSTGRESQL_FOUND, if false, do not try to use PostgreSQL\n\n#\n\n# Copyright (c) 2010, Mateusz Loskot, <mateusz@loskot.net>\n\n# Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set POSTGRESQL_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSQLite3.cmake" : {
      "ObjectId" : "0d490c8df7427b3a7305dec8f38fa9a0a3cf4478",
      "LastModified" : "2018-12-05T15:42:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# CMake module to search for SQLite 3 library\n\n#\n\n# On success, the macro sets the following variables:\n\n# SQLITE3_FOUND = if the library found\n\n# SQLITE3_LIBRARY = full path to the library\n\n# SQLITE3_LIBRARIES = full path to the library\n\n# SQLITE3_HAS_LOAD_EXTENSION = was sqlite3 compiled with load extension?\n\n# SQLITE3_INCLUDE_DIR = where to find the library headers\n\n#\n\n# Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If sqlite3 was compiled with `OMIT_LOAD_EXTENSION`, PDAL compilation will fail due\n\n# to a missing symbol, `_sqlite3_enable_load_extension`.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS ${SQLITE3_LIBRARY})\n\n# Handle the QUIETLY and REQUIRED arguments and set SQLITE3_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindTileDB.cmake" : {
      "ObjectId" : "47ad9e4d5e21738360aceaf651531148d1afae11",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#\n\n# CMake module to search for the TileDB library\n\n#\n\n# On success, the macro sets the following variables:\n\n# TILEDB_FOUND       = if the library found\n\n# TILEDB_LIBRARIES   = full path to the library\n\n# TILEDB_INCLUDE_DIR = where to find the library headers also defined,\n\n#                       but not for general use are\n\n# TILEDB_LIBRARY     = where to find the hexer library.\n\n# TILEDB_VERSION     = version of library which was found, e.g. \"1.4.1\"\n\n#\n\n# Copyright (c) 2019 TileDB, Inc\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set TILEDB_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindZSTD.cmake" : {
      "ObjectId" : "05103b6b0c0eb532bef17622e91fd2afba12c2ec",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find ZSTD (zstd.h, libzstd.a, libzstd.so, and libzstd.so.0)\n\n# This module defines\n\n#  ZSTD_INCLUDE_DIRS, directory containing headers\n\n#  ZSTD_LIBRARIES, path to libzstd shared library\n\n#  ZSTD_FOUND, whether zstd has been found\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "2e61f4faeb7263cacd5c9828636b5498b11f993a",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "cmake/nitro.cmake" : {
      "ObjectId" : "dca8eb2c2c5bf04f99e95d90cde2bad7b7abe3b7",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# NITRO support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/openscenegraph.cmake" : {
      "ObjectId" : "6df56a1c483c2c8d03686ad20759148222bc6118",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OpenSceneGraph cmake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/openssl.cmake" : {
      "ObjectId" : "e5ea77f83b39b84e949648d5ef36e9cf5d911ddb",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/options.cmake" : {
      "ObjectId" : "552593f792ed52a85752277062fb6dec315812f9",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Options for optional components.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable CTest and submissions to PDAL dashboard at CDash\n\n# http://my.cdash.org/index.php?project=PDAL\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Choose dependent options\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/policies.cmake" : {
      "ObjectId" : "12bc5d5c1e13ef100e750789138a00cea562115b",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# cmake policies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# interface link libraries\n\n# osx rpath\n",
        "Line" : 5,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "cmake/postgres.cmake" : {
      "ObjectId" : "0dad7106944c447d9fd33b1a17e9ec372f9deb0a",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PostgreSQL configuration.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/python.cmake" : {
      "ObjectId" : "f0d50d3526f9de8ced2ff3f16a82417102d750fc",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Python\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Version 3.12 has shiny new FindPython2 and FindPython3 scripts\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since we've required 2.7, these should all be valid\n",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "cmake/rpath.cmake" : {
      "ObjectId" : "ba486b78c28d62d32fe41b1e280f963e72c76c10",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Set options and variable related to OSX rpath.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# per http://www.cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/spatialite.cmake" : {
      "ObjectId" : "07c18e5ea71695a3fe69c07c399331934c5cd2bb",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SpatiaLite cmake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/sqlite.cmake" : {
      "ObjectId" : "200754729a9b11cbaaa584712fc54853dc0b3ed4",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SQLite cmake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/test.cmake" : {
      "ObjectId" : "8a398acd981d12ebccfc11605dad82ec996c9b09",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TEST support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Without this MS builds fail from attempting to handle too many args.\n\n#\n\n# This is fixed in trunk\n\n# https://code.google.com/p/googletest/source/detail?r=675\n\n# but for now, we need this fix\n\n# http://stackoverflow.com/questions/12558327/google-test-in-visual-studio-2012\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/threads.cmake" : {
      "ObjectId" : "f4b6333675e069e91b68b56b7345284bfbd68f6d",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate the threads package (required)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/tiledb.cmake" : {
      "ObjectId" : "1ff7129ee4c70d5b9526b48c69f0ebf50b53ab81",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# TileDB support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/unix_compiler_options.cmake" : {
      "ObjectId" : "52c1e4fede16ffed6d9b66af40a5b40f9647cbb1",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# VERSION_GREATER_EQUAL doesn't come until cmake 3.7\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "cmake/unwind.cmake" : {
      "ObjectId" : "460a43c156f7b3a7cd12814d22925755e361c288",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Unwind\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/win32_compiler_options.cmake" : {
      "ObjectId" : "13ef049983d0cd63816c1047364c58519808a911",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# We assume you're using MSVC if you're on WIN32.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for MSVC 8+\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Yes, we don't understand GCC pragmas\n",
        "Line" : 20,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# Nitro makes use of Exception Specifications, which results in\n\n# numerous warnings when compiling in MSVC. We will ignore\n\n# them for now.\n",
        "Line" : 22,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Windows warns about integer narrowing like crazy and it's\n\n# annoying.  In most cases the programmer knows what they're\n\n# doing.  A good static analysis tool would be better than\n\n# turning this warning off.\n",
        "Line" : 27,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Annoying warning about function hiding with virtual\n\n# inheritance.\n",
        "Line" : 32,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# check for MSVC 9+\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#\n\n# Windows htonl and similar are in winsock :(\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/zlib.cmake" : {
      "ObjectId" : "dfb3ca9f360232dc24dff158801f4aab1d94f67e",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ZLIB support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/zstd.cmake" : {
      "ObjectId" : "77bf76d186b80717b1cf82c122218648fcdd7cee",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LZMA support\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dimbuilder/CMakeLists.txt" : {
      "ObjectId" : "6d81da234d4a2e75e708b43b9b7989f3ac45c606",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The seemingly strange arrangement of this cmake file allows you to build\n\n# this application as a standalone.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# We include Utils.cpp here rather than linking in the Utils library because\n\n# some people building linux packages disable rpath, which means that\n\n# the Utils library can't be located when running dimbuilder, even though\n\n# it has been built.\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/Makefile" : {
      "ObjectId" : "16853077262150aa88a0d82680bd7c162da5f4c9",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/workshop/Makefile" : {
      "ObjectId" : "929eb019516dda1e92c0a3a22983942e8bca6349",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "2a0f93f52fa310aa68759ccad824895a052e4593",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file allows a test compilation of all the examples without\n\n# a PDAL installation.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/writing-filter/CMakeLists.txt" : {
      "ObjectId" : "8b5c7451996839beaf1179927771d3e7d3154f11",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/writing-kernel/CMakeLists.txt" : {
      "ObjectId" : "cfa6945a2a7ddeb0ca49fed8bca9275ba32f2477",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/writing-reader/CMakeLists.txt" : {
      "ObjectId" : "a80c5d3512dd60357c7daebe41822f92c0a2c120",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/writing-writer/CMakeLists.txt" : {
      "ObjectId" : "e9777735a01c6164e92e5017804b0475302bcfae",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/writing/CMakeLists.txt" : {
      "ObjectId" : "9b2ec0458d39705523dd886f02f71214d91bfe8f",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pdal/util/CMakeLists.txt" : {
      "ObjectId" : "37e4a0ba92b069a2bd59a7beb07d91ed7ec581b6",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Make sure we don't attempt to add a library more than once\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "c40b32dd40cd6b4315b8cfea0c962b9d9654da21",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/cpd/CMakeLists.txt" : {
      "ObjectId" : "337bcbde604cbf2925307b518952c18df655b006",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/faux/CMakeLists.txt" : {
      "ObjectId" : "a9df27bd1d164a85b443e216a5ce0d6e01f7e981",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FauxPlugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/fbx/CMakeLists.txt" : {
      "ObjectId" : "12eee822ecaae51059652c6b6b10b2aeb5e5f929",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FBX plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/geowave/CMakeLists.txt" : {
      "ObjectId" : "d76576d1a6eeb280564889c9f70c3e5d21c5901c",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# GeoWave driver CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# GeoWave Reader\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# GeoWave Writer\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/greyhound/CMakeLists.txt" : {
      "ObjectId" : "590bdaadf908a1b3a98b3ee2ab36cbaa67ae1502",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Greyhound plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Need Winsock for htonl\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/i3s/CMakeLists.txt" : {
      "ObjectId" : "d7528adb411a34538b7f472e736faa5102b11c50",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/i3s/lepcc/CMakeLists.txt" : {
      "ObjectId" : "323be1de56c6b323bf1ade685f7a92a3f61f0aec",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Static library included in a shared lib needs PIC\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/icebridge/CMakeLists.txt" : {
      "ObjectId" : "4dd45866f7f9404e57a4ebbd2719542d886dab1e",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Icebridge plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/matlab/CMakeLists.txt" : {
      "ObjectId" : "b94dc41d80a0b5c8bfac86ff5ffed7758f2995c0",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Matlab plugin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_SKIP_RPATH true)\n\n#if (LINUX)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#endif()\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/mbio/CMakeLists.txt" : {
      "ObjectId" : "511284f64bda72546eef25f9bc301d6c7525a415",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# MBIO plugin CMake configuration (MB-System)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/mrsid/CMakeLists.txt" : {
      "ObjectId" : "46c4a1856d5562752bfed80b0f53ad12afd08d91",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# MrSID plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/nitf/CMakeLists.txt" : {
      "ObjectId" : "3d5de7867a8d8abe3771f2414ec7409fab0881cc",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# NITF plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# NITF Reader\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# NITF Writer\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/oci/CMakeLists.txt" : {
      "ObjectId" : "4a8b047685b9767674192e0d52017979fff86fa8",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Oracle OCI plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# OCI Reader\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# OCI Writer\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# OCI tests\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/openscenegraph/CMakeLists.txt" : {
      "ObjectId" : "f4b79d2bf0217ed9afa819ef2d84c6f32dfcc91c",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OpenScenGraph plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenSceneGraph Reader\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/pcl/CMakeLists.txt" : {
      "ObjectId" : "1ec87abee918d8cc50a747da9cdea90601663b0b",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PCL plugin CMake configuration\n\n#\n\n# The PCL integration still has a few warts that need to be resolved:\n\n#\n\n#     1. src/kernel/Kernel.cpp requires PCL for invoking the PCLVisualizer with\n\n#        two point buffers.\n\n#\n\n#        This is currently disabled (commented out), and should be somehow\n\n#        fully integrated as a plugin behavior.\n\n#\n\n#     2. PCL unit tests still live within main test directory.\n\n#\n\n#        We should be able to move plugin tests to plugin directories without\n\n#        too much hassle. PCL unit tests will pass with a warning if the PCL\n\n#        plugins are not installed in PDAL_DRIVER_PATH (just assumes you didn't\n\n#        intend to test with PCL support).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# settings for PCL\n\n#------------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# PCL has compiler issues.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# This can cause problems if you inline some code that instantiates a static.\n\n# I'm not sure why it was here, but I'm keeping it for now in case someone\n\n# goes looking for it. - ABELL 3/18\n\n#if (NOT WIN32)\n\n#    add_definitions(\"-fvisibility-inlines-hidden\")\n\n#endif()\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# PCL's configuration clobbers Boost find_package - do it again\n\n#find_package(Boost QUIET 1.52 COMPONENTS program_options iostreams filesystem system thread)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set (PCL_LIBRARIES \"${PCL_COMMON_LIBRARY};${PCL_REGISTRATION_LIBRARY};${PCL_FEATURES_LIBRARY};${PCL_FILTERS_LIBRARY};${PCL_SEARCH_LIBRARY};${PCL_SEGMENTATION_LIBRARY};${PCL_IO_LIBRARY}\")\n\n#\n\n# PCD Reader\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# PCD Writer\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# PCLBlock Filter\n\n#\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# PCL Kernel\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Smooth Kernel\n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "plugins/pgpointcloud/CMakeLists.txt" : {
      "ObjectId" : "036c84bc07029751cd5f427b014b4179f19abfd9",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PgPointCloud plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# PgPointCloud Reader\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# PgPointCloud Writer\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# PgPointCloud tests\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/python/CMakeLists.txt" : {
      "ObjectId" : "ac1a1632c6ddd4b3553113dc2587cd7f8d17277e",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Python plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/python/filters/CMakeLists.txt" : {
      "ObjectId" : "2eb4092db23b744b39c140dfe6cb9fd5967b4612",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/python/io/CMakeLists.txt" : {
      "ObjectId" : "9c65533ba235ac932229b4e71808228992a12ace",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install headers so Python extension\n\n# can use them later\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/rdb/CMakeLists.txt" : {
      "ObjectId" : "8ad470cc18f1fae8166e5c32d0a3fe7cd6b11675",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/rxp/CMakeLists.txt" : {
      "ObjectId" : "3eb806cf459689efd4231c8779c3ebc6b481e474",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/sqlite/CMakeLists.txt" : {
      "ObjectId" : "daba770b97bd996a03a3baf62008df12cc2f97b8",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SQLite plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SQLite Reader\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# SQLite Writer\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# SQLite tests\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/tiledb/CMakeLists.txt" : {
      "ObjectId" : "9dbb75039e8071d2b42f495b0cdc550aba7afd43",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# TileDB plugin CMake configuration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TileDB Reader\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# TileDB Writer\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "c5e25238b85d19126fd860ed3cf8bbf88d5276a6",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# test/CMakeLists.txt controls building of PDAL tests\n\n#\n\n# Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unit/CMakeLists.txt" : {
      "ObjectId" : "cb0d26f47c4717f80748d37e231e38739477fe94",
      "LastModified" : "2019-04-16T11:34:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# test/unit/CMakeLists.txt controls building of PDAL unit tests suite\n\n#\n\n# Copyright (c) 2009 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# sources for the native io\n\n#\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EptReaderTest uses the crop filter.\n",
        "Line" : 124,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "#\n\n# sources for the native filters\n\n#\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "fc45325c79a8bbb763199349706c947c22083fb2",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/lasdump/CMakeLists.txt" : {
      "ObjectId" : "8083a228d8eeb809f8c457ca6df0b850e360e784",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The seemingly strange arrangement of this cmake file allows you to build\n\n# lasdump as a standalone.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add necessary modules.\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Right now we don't bother if we don't have LASzip.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/nitfwrap/CMakeLists.txt" : {
      "ObjectId" : "7e5ec9026298a6ef098eff58ca2f8866f23f8dc2",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/arbiter/CMakeLists.txt" : {
      "ObjectId" : "3cf7621c309730c0193710a615fbc196faa0e30d",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Make sure we don't attempt to add a library more than once\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Arbiter is built static but is included in a shared lib.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "vendor/eigen/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "2bad314163c5044265aa6ac14e3767308dd04ba6",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/eigen/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/gtest/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "vendor/gtest/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "vendor/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "07439d7a92ff9366247bf84b7c1d32ffbfcbbd05",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# VS2017, https://github.com/google/googletest/issues/1111\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 110,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 32
    },
    "vendor/jsoncpp/dist/CMakeLists.txt" : {
      "ObjectId" : "cafc22989483a0bf30230a8f8f13d36107d28d0f",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Make sure we don't attempt to add a library more than once\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This forces dll_export on the symbols so that they're available from any\n\n# DLL that the JSON library gets linked with.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/kazhdan/CMakeLists.txt" : {
      "ObjectId" : "2cd857cc3fc16e13a7b76f6f326e39835e734c1a",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/pdalboost/CMakeLists.txt" : {
      "ObjectId" : "778658179533e0c2165a71cc857a8740f32c98a4",
      "LastModified" : "2019-04-04T16:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Make sure we don't attempt to add a library more than once\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we're not on WIN32, remove windows sources to eliminate warning message.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 150,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 5523
}