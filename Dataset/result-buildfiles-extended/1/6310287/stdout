{
  "Repository" : "6310287",
  "Revision" : "HEAD",
  "ObjectId" : "5ec53e2607ef4eef339de69f0e00dacbfda3bbd0",
  "CommitTime" : "2019-04-19T02:16:31Z",
  "Files" : {
    "external/lua/CMakeLists.txt" : {
      "ObjectId" : "01a7e87f393d077cc29fd6db05ffec2daa71f52f",
      "LastModified" : "2016-08-09T21:34:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Port of LUA5.1 makefiles to CMakeLists for easier build integration\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/lua/Makefile" : {
      "ObjectId" : "ee6b8e8434f603e8f2e0c3ad6e3a25f8f4f45f80",
      "LastModified" : "2015-04-13T08:30:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"MSYS Makefiles\" Generator, CMake Version 3.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow only one \"make -f Makefile2\" at a time, but pass parallelism.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Escaping for special characters.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Special rule for the target package\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Special rule for the target package\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Special rule for the target package_source\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Special rule for the target package_source\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# The main all target\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# The main clean target\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# The main clean target\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# clear depends\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to build an object file\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# target to build an object file\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# target to build an object file\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# target to build an object file\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# target to build an object file\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# target to build an object file\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# target to build an object file\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# target to build an object file\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# target to build an object file\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# target to build an object file\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# target to build an object file\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# target to build an object file\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# target to build an object file\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# target to build an object file\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# target to build an object file\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# target to build an object file\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# target to build an object file\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# target to build an object file\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# target to build an object file\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# target to build an object file\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# target to build an object file\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 679,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# target to build an object file\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# target to build an object file\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# target to build an object file\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# target to build an object file\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 767,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# target to build an object file\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# target to build an object file\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 823,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# target to build an object file\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# target to build an object file\n",
        "Line" : 855,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 871,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# Help Target\n",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 982,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 985,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 131
    },
    "external/openctm/CMakeLists.txt" : {
      "ObjectId" : "187ecc6f96344fc31d021b4d70f24c8e1a6e7bda",
      "LastModified" : "2016-08-09T21:34:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "efc58425c17b6a99f87ead012c44f87533c4eaad",
      "LastModified" : "2019-03-31T08:36:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tried playing nice by using REQUIRE_QUIET but some built-in modules\n\n# (CheckLibraryExists, ...) wouldn't listen so how about a nice cup\n\n# of shut up.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# another hack to strip noisy / useless data away from message() abuse\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# static base version, manually mantained\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# distributions packaging a build should tag this accordingly so we\n\n# can take that into consideration for bug reports\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generate an identifiable buildtag for tracking purposes\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we can remove some of this cruft when 'buntu LTS gets ~3.0ish\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# amsg(\"    -DENABLE_PBO=[Appl-path] : Profile-based Optimization prepass with appl\")\n\n# amsg(\"                               as optimization profile.\")\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# no other audio platforms supported currently\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# can ignore this abomination on BSD\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# stdalign.h placeholder\n",
        "Line" : 195,
        "CharPositionInLine" : 48
      },
      "10" : {
        "Text" : "# need this maneuver to deal with the combination of\n\n# static:arcan,arcan_lwa,arcan_shmif_tui] but also [dynamic:arcan_shmif_tui]\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# need the separation here to not confuse openAL here with\n\n# the version that we patch into LWA\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# the amalgamation is already included in the external/ tree sqlite3 use is\n\n# primarily settings management and very limited amount of queries, size is\n\n# more important here\n\n#\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# for the statically- linked external dependencies, we need to hint where\n\n# we need the gmake rather than make system\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Slated for deprecation / removal / migration to fsrv_decode\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# database tool is sqlite3 + libc so less need to work\n\n# around with platform layers etc.\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# can we get sane literal concatenation one day?\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Expand with more platforms as needed, all are expected to define PLATFORM_[\n\n# ,fsrv, shmif]_SOURCES, add a global definition for PLATFORM_HEADER add any\n\n# OS- specific definitions to ARCAN_LIBRARIES, set OS_DYLIB_EXTENSION\n\n#\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n#\tinclude(${CMAKE_CURRENT_SOURCE_DIR}/platform/cmake/CMakeLists.Windows)\n\n#\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Primarily used by the Darwin platform, since it is scanned before we\n\n# have the targets defined, we expose and add the property here\n",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Hybrid build is to allow the platform combination of egl-dri main with\n\n# fallback to SDL if X11 or Wayland is detected. We do this by resetting\n\n# and reusing the probe stage. It's not pretty, but beats a redesign.\n\n# Some cleanup possible by defining a function for taking [a,v,e,o] and\n\n# storing into a source/include/lib dir so that we can do that for both\n\n# arcan, the hybrids and lwa at the same time.\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# HACK: Force- remove the psep-open from the platform and switch to the open\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Hybrid headless is to allow an arcan setup where the normal egl drivers\n\n# etc. are being used, but the input platform is exposed as an connection\n\n# point in order to use it as a render server or client 'host' for remote\n\n# desktop like situations.\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# HACK: Force- remove the psep-open from the platform and switch to the open\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#egl-dri\n",
        "Line" : 721,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#\n\n# The database tool is a CLI for the engine/arcan_db with additional\n\n# code not part of the main arcan binaries (to make it somewhat harder\n\n# for a misbehaving script to add / introduce new configs / targets\n\n# and execute them.\n\n#\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Special case, the egl-dri platform requires suid- for the chain-loader\n\n#\n\n#\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Only installed if they have been generated manually, this is rather\n\n# suboptimal -- possibly replace with a compile- time option and a probe\n\n# for the correct ruby version\n\n#\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "src/frameserver/CMakeLists.txt" : {
      "ObjectId" : "f8d2adeedaa0c6e7c3d44456375b97fd0d795815",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expects:\n\n#  FSRV_PLATFORM (defined by platforms/CMakeLists.*)\n\n#  FSRV_INCLUDES (defined by CMakeLists.txt + platforms/CMakeLists.*)\n\n#  arcan_shmif (target)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#  [ SPLIT_FRAMESERVER ] (different outputs)\n\n#  [ DISABLE_FRAMESERVERS ] ignored entirely\n\n#  FSRV_[ATYPE = subgroup (if not set, default is used)\n\n#  FSRV_[ATYPE = subgroup]_REQUIRED (set if the module should fail on deps)\n\n#\n\n# Defines:\n\n#  FSRV_MODES (list of ENABLE_FSRV_ATYPE)\n\n#  FRAMESERVER_MODESTRING (exposed to scripting API)\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# afsrv is a chainloader, it takes a mode as first argument that\n\n# matches any of the specified archetypes to allow for a non-interactive,\n\n# non-parsing loader that can be given additional capabilities / privileges\n\n# that are then dropped when setting up the specific sandbox.\n\n#\n\n# it is also used to track descriptor / environment leaks from the parent\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/frameserver/avfeed/CMakeLists.txt" : {
      "ObjectId" : "7290336dee2f3e49fab528799969e09bc2a6a466",
      "LastModified" : "2016-11-08T19:47:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/avfeed/default/CMakeLists.txt" : {
      "ObjectId" : "a73108c5ef4777b2803912a3d32c3edfba3f4ec1",
      "LastModified" : "2016-08-09T21:34:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# must expose (or fsrv ignored):\n\n#\n\n# can expose:\n\n# AVFEED_INCLUDE_DIRS, AVFEED_INCLUDE_LIBS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/frameserver/decode/CMakeLists.txt" : {
      "ObjectId" : "85f0d27a3e9d3884714a833edfa08d1c5af37dfe",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/decode/default/CMakeLists.txt" : {
      "ObjectId" : "a7194f0db8afdcde3aaaec9b89c760780cc4d7b4",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/encode/CMakeLists.txt" : {
      "ObjectId" : "87ca659ed8f1452c17adf0f07686a9b7649aa79b",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/encode/default/CMakeLists.txt" : {
      "ObjectId" : "59ef55d3563142e8ed47e0e209e3dc839f1c0e84",
      "LastModified" : "2019-02-02T23:55:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/game/CMakeLists.txt" : {
      "ObjectId" : "88d4e5d45c8b256b67d7e8531b919aaa9db70414",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/game/default/CMakeLists.txt" : {
      "ObjectId" : "eac374a2eb3976c72c8928bc444e75cb15b5d574",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/net/CMakeLists.txt" : {
      "ObjectId" : "93762287628fcbf686cb7589bbfb2d39de2cd15f",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/net/default/CMakeLists.txt" : {
      "ObjectId" : "b2ae75daaf601f3788b359ec6d5c0c944a909704",
      "LastModified" : "2016-08-09T21:34:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/remoting/CMakeLists.txt" : {
      "ObjectId" : "09a90bf8393b713816b6057b773ab6c709698b56",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/remoting/default/CMakeLists.txt" : {
      "ObjectId" : "8d04e41527af646e26e2e2800e679f2716d52793",
      "LastModified" : "2016-08-09T21:34:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/terminal/CMakeLists.txt" : {
      "ObjectId" : "8712ec9dfb6b634cb793b3b2b13257e0d084c12e",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frameserver/terminal/default/CMakeLists.txt" : {
      "ObjectId" : "16317db9af72df69c40dfa59d2f8755ebffc6c8b",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hijack/CMakeLists.txt" : {
      "ObjectId" : "cb17fa0fc1e9ae59a214efda769c80c159601487",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Expects:\n\n# arcan_shmif (target)\n\n# FSRV_ROOT (defined in frameservers/CMakeLists.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(x)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/hijack/sdl12/CMakeLists.txt" : {
      "ObjectId" : "0b3e584b51e0cc592890ee08fd9e15c0ca5d90d6",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the weird unix_stub + fwdtbl was legacy from when this worked on OSX\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# currently disabled as the cross-compilation necessary\n\n# for shmif is a real pain to try and set up, though it is somewhat needed :(\n\n#\n\n#\tif (CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#\t\tmessage(STATUS \" |--> building 32-bit backward compatibility\")\n\n#\t\tadd_library(ahijack32_sdl12 SHARED\n\n#\t\t\t${SHMIF_SOURCES}\n\n#\t\t\t${SHMIF_PLATFORM}\n\n#\t\t\t${SDL12_SOURCES}\n\n#\t\t)\n\n#\ttarget_include_directories(ahijack32_sdl12 PRIVATE\n\n#\t\t${SDL_INCLUDE_DIR}\n\n#\t\t${FSRV_ROOT}\n\n#\t)\n\n#\tinstall(TARGETS ahijack32_sdl12 DESTINATION lib)\n\n#\tset_property(TARGET ahijack32_sdl12 APPEND PROPERTY COMPILE_FLAGS -m32)\n\n#\tendif()\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/hijack/x/CMakeLists.txt" : {
      "ObjectId" : "5c5daccd92e1bbcff958f77dcda25d0be69abee0",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/cmake/modules/CMakeColor.cmake" : {
      "ObjectId" : "0f3a9895c1b36140f7a0780decaf041762c45403",
      "LastModified" : "2016-08-09T21:34:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/cmake/modules/FindAPR.cmake" : {
      "ObjectId" : "2a4a267010d27b8f848caf6e76370aeec4ce2d8d",
      "LastModified" : "2016-08-09T21:34:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find Apache Portable Runtime\n\n# Find the APR includes and libraries\n\n# This module defines\n\n#  APR_INCLUDE_DIR and APRUTIL_INCLUDE_DIR, where to find apr.h, etc.\n\n#  APR_LIBRARIES and APRUTIL_LIBRARIES, the libraries needed to use APR.\n\n#  APR_FOUND and APRUTIL_FOUND, If false, do not try to use APR.\n\n# also defined, but not for general use are\n\n#  APR_LIBRARY and APRUTIL_LIBRARY, where to find the APR library.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# APR first.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Next, APRUTIL.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/platform/cmake/modules/FindASan.cmake" : {
      "ObjectId" : "fcebb43757e47b0233d0cc6d4f5946efcca32ae2",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang 3.2+ use this version. The no-omit-frame-pointer option is optional.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Older deprecated flag for ASan\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/platform/cmake/modules/FindEGL.cmake" : {
      "ObjectId" : "c038480eb572daf6897559e1c71026b577376624",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Broadcom (raspberry pi etc.) specific detection => hardcoded paths\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tFIND_PACKAGE_HANDLE_STANDARD_ARGS(OpenGL DEFAULT_MSG GLES2_LIBRARIES)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/platform/cmake/modules/FindFFMPEG.cmake" : {
      "ObjectId" : "c61eb304a005dc023e9976f26da68ab3c27d29aa",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ffmpeg\n\n# This module defines\n\n# FFMPEG_LIBRARIES\n\n# FFMPEG_FOUND, if false, do not try to link to ffmpeg\n\n# FFMPEG_INCLUDE_DIR, where to find the headers\n\n#\n\n# $FFMPEG_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$FFMPEG_DIR\n\n#\n\n# Created by Robert Osfield.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#In ffmpeg code, old version use \"#include <header.h>\" and newer use \"#include <libname/header.h>\"\n\n#In OSG ffmpeg plugin, we use \"#include <header.h>\" for compatibility with old version of ffmpeg\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#We have to search the path which contain the header.h (usefull for old version)\n\n#and search the path which contain the libname/header.h (usefull for new version)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Then we need to include ${FFMPEG_libname_INCLUDE_DIRS} (in old version case, use by ffmpeg header and osg plugin code)\n\n#                                                       (in new version case, use by ffmpeg header)\n\n#and ${FFMPEG_libname_INCLUDE_DIRS/libname}             (in new version case, use by osg plugin code)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro to find header and lib directories\n\n# example: FFMPEG_FIND(AVFORMAT avformat avformat.h)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# old version of ffmpeg put header in $prefix/include/[ffmpeg]\n\n# so try to find header in include directory\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Fink\n",
        "Line" : 38,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 39,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# Blastwave\n",
        "Line" : 40,
        "CharPositionInLine" : 25
      },
      "9" : {
        "Text" : "# newer version of ffmpeg put header in $prefix/include/[ffmpeg/]lib${shortname}\n\n# so try to find lib${shortname}/header in include directory\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Fink\n",
        "Line" : 62,
        "CharPositionInLine" : 24
      },
      "11" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 63,
        "CharPositionInLine" : 31
      },
      "12" : {
        "Text" : "# Blastwave\n",
        "Line" : 64,
        "CharPositionInLine" : 29
      },
      "13" : {
        "Text" : "# not sure about the header to look for here.\n",
        "Line" : 108,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 14
    },
    "src/platform/cmake/modules/FindGBMKMS.cmake" : {
      "ObjectId" : "5050075c7a601422c38ac9f52b935960d3534dfb",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Used for non-X11 dependant EGL/GL,GLES video platform\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/cmake/modules/FindGLES2.cmake" : {
      "ObjectId" : "a0e204153b98ca634b7a64f477dac6ab0b69a702",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Broadcom (raspberry pi etc.) specific detection => hardcoded paths\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be replaced with a real probe for SSE/NEON/nothing\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/platform/cmake/modules/FindGLES3.cmake" : {
      "ObjectId" : "93d602480cee98302b9dae52c90f8f8f78979df6",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/cmake/modules/FindGLEW.cmake" : {
      "ObjectId" : "e663fb1ab11a5e14228e42898404be66515c3451",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find GLEW. Once done, this will define:\r\n\n#\r\n\n#   GLEW_FOUND - variable which returns the result of the search\r\n\n#   GLEW_INCLUDE_DIRS - list of include directories\r\n\n#   GLEW_LIBRARIES - options for the linker\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/cmake/modules/FindHarfBuzz.cmake" : {
      "ObjectId" : "f394b82bf975ced36ef8f5c5e9069de54c24f4a7",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HarfBuzz 0.9.18 split ICU support into a separate harfbuzz-icu library.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/platform/cmake/modules/FindLua51JIT.cmake" : {
      "ObjectId" : "4a24e2e9935dc5a61b128eba1150b86f770ffdc9",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA51_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math/ldl library for Unix\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/platform/cmake/modules/FindMSan.cmake" : {
      "ObjectId" : "3b0a4addcb9b6f8c95268443285f0217140c491a",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/cmake/modules/FindOpenGL.cmake" : {
      "ObjectId" : "e48b2780e61b86e606d76189389a958a11712f6b",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL\n\n# Modified from the CMake-2.8 built-in version to:\n\n# remove X11 assumption,\n\n# remove support for GLUT, XMESA etc.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle HP-UX cases where we only want to find OpenGL in either hpux64\n\n# or hpux32 depending on if we're doing a 64 bit build.\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# The first line below is to make sure that the proper headers\n\n# are used on a Linux machine with the NVidia drivers installed.\n\n# They replace Mesa with NVidia's own library but normally do not\n\n# install headers and that causes the linking to\n\n# fail since the compiler finds the Mesa headers but NVidia's library.\n\n# Make sure the NVIDIA directory comes BEFORE the others.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENGL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/platform/cmake/modules/FindOpenHMD.cmake" : {
      "ObjectId" : "77a154d9beac25c1b2dc5a06db281466147c990f",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find OPENHMD. Once done, this will define:\r\n\n#\r\n\n#   OPENHMD_FOUND - variable which returns the result of the search\r\n\n#   OPENHMD_INCLUDE_DIRS - list of include directories\r\n\n#   OPENHMD_LIBRARIES - options for the linker\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/cmake/modules/FindSDL2.cmake" : {
      "ObjectId" : "757ed6b19084c52bf7f3a391810442d8c112023f",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# The reason for SDL_bits.h rather than SDL.h is that SDL.h\n\n# exist in SDL1 and we don't want the possibility of conflicted\n\n# results\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MinGW needs an additional link flag, -mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -mwindows\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For SDL2main\n",
        "Line" : 137,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# For MinGW library\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 166,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 15
    },
    "src/platform/cmake/modules/FindSQLITE3.cmake" : {
      "ObjectId" : "0eccec2252e3bfadcd0eb5061219935fb1f61786",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find Sqlite 3\n\n# SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)\n\n# SQLITE3_LIBRARIES - Sqlite 3 libraries\n\n# SQLITE3_LIBRARY_RELEASE - Where the release library is\n\n# SQLITE3_LIBRARY_DEBUG - Where the debug library is\n\n# SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and executable)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/platform/cmake/modules/FindSSE.cmake" : {
      "ObjectId" : "66cac4f89eac7dbdff47d9417360817260054678",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script checks for the highest level of SSE support on the host\n\n# by compiling and running small C++ programs that uses SSE intrinsics.\n\n#\n\n# You can invoke this module using the following command:\n\n#\n\n#   FIND_PACKAGE(SSE [major[.minor]] [EXACT] [QUIET|REQUIRED])\n\n#\n\n# where the version string is one of:\n\n#\n\n#   1.0 for SSE support\n\n#   2.0 for SSE2 support\n\n#   3.0 for SSE3 support\n\n#   3.1 for SSSE3 support\n\n#   4.1 for SSE 4.1 support\n\n#   4.2 for SSE 4.2 support\n\n#\n\n# Note that any \".0\" in the above version string is optional.\n\n#\n\n# If any SSE support is detected, the following variables are set:\n\n#\n\n#   SSE_FOUND   = 1\n\n#   SSE_VERSION = the requested version, if EXACT is true, or\n\n#                 the highest SSE version found.\n\n#\n\n# If SSE is not supported on the host platform, these variables are\n\n# not set. If QUIET is true, the module does not print a message if\n\n# SSE if missing. If REQUIRED is true, the module produces a fatal\n\n# error if SSE support is missing.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate a list of SSE versions to test.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set compiler flag to generate instructions for the host architecture.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for SSE 4.2 support.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for SSE 4.1 support.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for SSSE 3 support.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for SSE 3 support.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check for SSE2 support.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check for SSE support.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If no SSE support is found, print an error message.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/platform/cmake/modules/FindSanitizers.cmake" : {
      "ObjectId" : "627ee243d050c469300a7a37c260d0144d7b444a",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If any of the used compiler is a GNU compiler, add a second option to static\n\n# link against the sanitizers.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/platform/cmake/modules/FindTSan.cmake" : {
      "ObjectId" : "0e80f29b6484bf20109e8eeb8eaae7d93b320736",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ThreadSanitizer is not compatible with MemorySanitizer.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/platform/cmake/modules/FindTesseract.cmake" : {
      "ObjectId" : "c6403c682521b6f7310d05c5fe70f7ba0a5e95b6",
      "LastModified" : "2019-02-02T23:55:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/cmake/modules/FindUBSan.cmake" : {
      "ObjectId" : "69486742a4449564c794e40e18c6277894768ff0",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/cmake/modules/FindVLC.cmake" : {
      "ObjectId" : "b3b4f7b55a688886e14d9ad85ed6fe1603acd1e6",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake module to search for LIBVLC (VLC library)\n\n# Authors: Rohit Yadav <rohityadav89@gmail.com>\n\n#          Harald Sitter <apachelogger@ubuntu.com>\n\n#\n\n# If it's found it sets LIBVLC_FOUND to TRUE\n\n# and following variables are set:\n\n#    LIBVLC_INCLUDE_DIR\n\n#    LIBVLC_LIBRARY\n\n#    LIBVLC_VERSION\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_path and find_library normally search standard locations\n\n# before the specified paths. To search non-standard paths first,\n\n# FIND_* is invoked first with specified paths and NO_DEFAULT_PATH\n\n# and then again with no specified paths to search the default\n\n# locations. When an earlier FIND_* succeeds, subsequent FIND_*s\n\n# searching for the same item do nothing.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Put here path to custom location\n\n#example: /home/user/vlc/include etc..\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#mingw\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#Put here path to custom location\n\n#example: /home/user/vlc/lib etc..\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#mingw\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#mingw\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# TODO: implement means to detect version on windows (vlc --version && regex? ... ultimately we would get it from a header though...)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: only activate once version detection can be garunteed (which is currently not the case on windows)\n\n#     set(LIBVLC_FOUND FALSE)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/platform/cmake/modules/FindVNC.cmake" : {
      "ObjectId" : "c8435e8509025d8f623919654e406ffe518ad0d2",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Put here path to custom location\n\n#example: /home/user/vlc/include etc..\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#mingw\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Put here path to custom location\n\n#example: /home/user/vlc/lib etc..\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#mingw\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#mingw\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "src/platform/cmake/modules/FindWayland.cmake" : {
      "ObjectId" : "465d2665ed56b7b5bf7274c9b5972a6f747b5751",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindWayland\n\n# -----------\n\n#\n\n# Find Wayland installation\n\n#\n\n# Try to find Wayland. The following values are defined\n\n#\n\n# ::\n\n#\n\n#   WAYLAND_FOUND        - True if Wayland is found\n\n#   WAYLAND_LIBRARIES    - Link these to use Wayland\n\n#   WAYLAND_INCLUDE_DIRS - Include directories for Wayland\n\n#   WAYLAND_DEFINITIONS  - Compiler flags for using Wayland\n\n#\n\n# and also the following more fine grained variables:\n\n#\n\n# ::\n\n#\n\n#   WAYLAND_CLIENT_FOUND,  WAYLAND_CLIENT_INCLUDE_DIRS,  WAYLAND_CLIENT_LIBRARIES\n\n#   WAYLAND_SERVER_FOUND,  WAYLAND_SERVER_INCLUDE_DIRS,  WAYLAND_SERVER_LIBRARIES\n\n#   WAYLAND_EGL_FOUND,     WAYLAND_EGL_INCLUDE_DIRS,     WAYLAND_EGL_LIBRARIES\n\n#\n\n#=============================================================================\n\n# Copyright (c) 2015 Jari Vetoniemi\n\n#               2013 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/cmake/modules/FindWaylandProtocols.cmake" : {
      "ObjectId" : "8a8129b51ff0f664c358c1da212398c95e6ea2c0",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindWaylandProtocols\n\n# -------\n\n#\n\n# Find wayland protocol description files\n\n#\n\n# Try to find wayland protocol files. The following values are defined\n\n#\n\n# ::\n\n#\n\n#   WAYLANDPROTOCOLS_FOUND         - True if wayland protocol files are available\n\n#   WAYLANDPROTOCOLS_PATH          - Path to wayland protocol files\n\n#\n\n#=============================================================================\n\n# Copyright (c) 2015 Jari Vetoniemi\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/cmake/modules/FindXKB.cmake" : {
      "ObjectId" : "0d599df0fd4a4922940c3e5e99f7ac76092e6569",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find xkbcommon on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   XKB_FOUND        - True if XKB is available\n\n#   XKB_LIBRARIES    - Link these to use XKB\n\n#   XKB_INCLUDE_DIRS - Include directory for XKB\n\n#   XKB_DEFINITIONS  - Compiler flags for using XKB\n\n#\n\n# Additionally, the following imported targets will be defined:\n\n#\n\n#   XKB::XKB\n\n#\n\n# Copyright (c) 2014 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. Neither the name of the University nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software\n\n#    without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n\n# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\n# SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/platform/cmake/modules/Findarcan_shmif.cmake" : {
      "ObjectId" : "e4f2e0fcaa16a39494b81eb791bf091f5c644d02",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/cmake/modules/Findfuse3.cmake" : {
      "ObjectId" : "85ad8c3e30500ffc9e0c2255f2d75e302166caed",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find fuse (devel)\n\n# Once done, this will define\n\n#\n\n# FUSE3_FOUND - system has fuse\n\n# FUSE3_INCLUDE_DIRS - the fuse include directories\n\n# FUSE3_LIBRARIES - fuse libraries directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FUSE3_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/platform/cmake/modules/Findlibusb-1.0.cmake" : {
      "ObjectId" : "ec40055af8a4acb3c983e9fcfecf7960d0ab2461",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libusb-1.0\n\n# Once done this will define\n\n#\n\n#  LIBUSB_1_FOUND - system has libusb\n\n#  LIBUSB_1_INCLUDE_DIRS - the libusb include directory\n\n#  LIBUSB_1_LIBRARIES - Link these to use libusb\n\n#  LIBUSB_1_DEFINITIONS - Compiler switches required for using libusb\n\n#\n\n#  Adapted from cmake-modules Google Code project\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  (Changes for libusb) Copyright (c) 2008 Kyle Machulis <kyle@nonpolynomial.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the New BSD license.\n\n#\n\n# CMake-Modules Project New BSD License\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the CMake-Modules Project nor the names of its\n\n#   contributors may be used to endorse or promote products derived from this\n\n#   software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBUSB_1_INCLUDE_DIRS and LIBUSB_1_LIBRARIES variables only in the advanced view\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/platform/cmake/modules/LibFindMacros.cmake" : {
      "ObjectId" : "69975c51be3f9c5e0ff372a4424f8de3b580ee88",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/platform/cmake/modules/Wayland.cmake" : {
      "ObjectId" : "6647c5eec3e29c68635ced6f1ad35f940ac60643",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2012-2013 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of Pier Luigi Fiorini nor the names of his\n\n#   contributors may be used to endorse or promote products derived\n\n#   from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wayland_add_protocol_client(outfiles inputfile basename)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# wayland_add_protocol_server(outfiles inputfile basename)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/platform/cmake/modules/sanitize-helpers.cmake" : {
      "ObjectId" : "88da66ea76cf157579ef26d1145dfc7eda61e200",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper function to get the language of a source file.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper function to get compilers used by a target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if all sources for target use the same compiler. If a target uses\n\n# e.g. C and Fortran mixed and uses different compilers (e.g. clang and\n\n# gfortran) this can trigger huge problems, because different compilers may\n\n# use different implementations for sanitizers.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If expression was found, FILE is a generator-expression for an object\n\n# library. Object libraries will be ignored.\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Helper function to check compiler flags for language compiler.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CheckFortranCompilerFlag was introduced in CMake 3.x. To be compatible\n\n# with older Cmake versions, we will check if this module is present\n\n# before we use it. Otherwise we will define Fortran coverage support as\n\n# not available.\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Helper function to test compiler flags.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sanitizer flags are not dependend on language, but the used compiler.\n\n# So instead of searching flags foreach language, search flags foreach\n\n# compiler used.\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# If compiler is a GNU compiler, search for static flag, if\n\n# SANITIZE_LINK_STATIC is enabled.\n",
        "Line" : 118,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Helper to assign sanitizer flags for TARGET.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get list of compilers used by target and check, if target can be checked\n\n# by sanitizer.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Set compile- and link-flags for target.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "src/shmif/CMakeLists.txt" : {
      "ObjectId" : "12e38a6cb6c3745c3c43cabc2c4de09e07b99176",
      "LastModified" : "2019-03-31T08:36:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is used by the main arcan build system to define the shmif platform\n\n# and install targets, but also for some external projects that need to\n\n# do an in-source build of shmif- and its platform (automated build/\n\n# test systems etc) without a full installation.\n\n#\n\n# defines:\n\n# ARCAN_SHMIF_INCLUDE_DIR\n\n# ARCAN_SHMIF_LIBRARY (set to arcan_shmif_int)\n\n#\n\n# Targets:\n\n# arcan_shmif\n\n# arcan_shmif_int\n\n# arcan_tui\n\n# arcan_shmif_ext\n\n# arcan_tuiext\n\n# arcan_shmif_intext\n\n# arcan_shmif_server\n\n#\n\n# Installs: (if ARCAN_SOURCE_DIR is not set)\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a nasty little detail here is that we actually expand the build-time\n\n# platforms into a header that is included in the beginning of the defs.h file.\n\n# The reason for this is that different video platforms dictate different\n\n# optimal 'default' packing formats and we go to quite some lengths to avoid\n\n# having the whole fourcc like state space explosion of having to support every\n\n# packing format in the world, or having clients to support multiple formats\n\n# outside of GPU acceleration.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# FIXME:\n\n# We should have a linker script here that filters out all the non-TUI defined\n\n# symbols so we don't collide with programs linking TSM* (however unlikely).\n\n# Also, make the _ttf bits optional again (but explicit disable)\n\n#\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The TUI libraries / build setup is slated to change soonish when the TUI\n\n# refactor branch completes. This would push the freetype/harfbuzz etc. stage\n\n# to be a part of arcan instead and the library can be made to be quite tiny.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# STATIC_FREETYPE is inherited from the outer scope, means we have our own build\n\n# of freetype that we should link to statically\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Due to the accelerated- GPU flags, we also NEED to build a shared library\n\n# version as this likely pulls in libraries that we can't deal with statically\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This means we already have a find-package for Freetype (parent requires it)\n\n# and we can inherit/use those flags. For the time being, we need to treat\n\n# Harfbuzz- style shaping separately though.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# note that we enable fpic for the static here as some\n\n# subdirectores need to pull it in as part of building a shared library\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/tools/acfgfs/CMakeLists.txt" : {
      "ObjectId" : "3a1988dd4537f39a8eb91d8fd327053275ab8459",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 18,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "src/tools/aclip/CMakeLists.txt" : {
      "ObjectId" : "5468f5b760f13443a83356b597a3138f839f3ba3",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 21,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "src/tools/aloadimage/CMakeLists.txt" : {
      "ObjectId" : "c8734b58111620adad696b99ed51a47625c9c5a9",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 46,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "src/tools/leddec/CMakeLists.txt" : {
      "ObjectId" : "fccd84106ec79d0d58997d9dbc9c9afa7a85d41b",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 46,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "src/tools/ltui/CMakeLists.txt" : {
      "ObjectId" : "84600d3e771b6bbdc5bc8cd40d211890234ac490",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 17,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "src/tools/netproxy/CMakeLists.txt" : {
      "ObjectId" : "c94917f5dddb2c092816a48e4d80e21ce326c204",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#arcan-net\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/tools/shmmon/CMakeLists.txt" : {
      "ObjectId" : "850ee23c53fa3470d0ec1f65fa8992e02aed3ae0",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 22,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "src/tools/vrbridge/CMakeLists.txt" : {
      "ObjectId" : "37ce5ee0004c4119257f303ad078fa6fc9d4afd8",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 23,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "src/tools/waybridge/CMakeLists.txt" : {
      "ObjectId" : "6583d919a3b586bf955a640055a388c8dc0f7e1c",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 38,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# copied from Cloudef/wlc/protos\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/arcan-wayland.1 DESTINATION man)\n",
        "Line" : 112,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 3
    },
    "tests/core/proxycon/CMakeLists.txt" : {
      "ObjectId" : "639ecfb9153644e84c25f4b2cd24ad57fdbba715",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/core/shmifsrv/CMakeLists.txt" : {
      "ObjectId" : "d4857f584180e4dcbc25c83a22f96bcd7bd64eec",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/frameservers/avlat/CMakeLists.txt" : {
      "ObjectId" : "6ad5c2cfff8a2f38909587e12f7324ba697198f2",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/btbar/CMakeLists.txt" : {
      "ObjectId" : "40ccc2e0a114f48fe82a5a0fa0f3aa15027496dd",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/clockreq/CMakeLists.txt" : {
      "ObjectId" : "6663e2a93dc437d270740ec687dcf1e9156591fb",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/complex/CMakeLists.txt" : {
      "ObjectId" : "cee2e634def66c2ef61f6a774204d45323948b92",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/frameservers/counter-ndt/CMakeLists.txt" : {
      "ObjectId" : "7a5e6d8d1cac827310c1aa0ce68d279f73e90add",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/counter/CMakeLists.txt" : {
      "ObjectId" : "7a5e6d8d1cac827310c1aa0ce68d279f73e90add",
      "LastModified" : "2018-12-05T00:10:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/drv_eyetrack/CMakeLists.txt" : {
      "ObjectId" : "3091e8392e9275d76139564b8c2c0b69e6caf799",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "tests/frameservers/gamma/CMakeLists.txt" : {
      "ObjectId" : "bc9e08f5123095043b3af261e1286aba86b7c35b",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/glcube/CMakeLists.txt" : {
      "ObjectId" : "8e161c9aeb4bcf7493bf3d892beaff2d35342375",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/handover/CMakeLists.txt" : {
      "ObjectId" : "8ad2b7ffce111d2a5044e5946abcdd5f7e537abd",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/initial/CMakeLists.txt" : {
      "ObjectId" : "502ba5921d1410ce2056690765ef285f16d83a82",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/iodump/CMakeLists.txt" : {
      "ObjectId" : "e73f4ea87a7382d3e66fd4cbb51d9a0a6fe6cc97",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/frameservers/ioinject/CMakeLists.txt" : {
      "ObjectId" : "9a3191fe9aff7a62b131ff9f8b81be12e82ea3c7",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/frameservers/lastword/CMakeLists.txt" : {
      "ObjectId" : "ba6070830d40b2387f536f76e8fc82e7177b15cc",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/migrant/CMakeLists.txt" : {
      "ObjectId" : "76de9835e5959bb14a6a03e2a64a5c42bc96d14a",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/rcv_counter/CMakeLists.txt" : {
      "ObjectId" : "cabb3ba6bdfd44f090c7096012cebac5affd5fc6",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/selfdestr/CMakeLists.txt" : {
      "ObjectId" : "d770fbba8737afc4c29f1edb6d5281662dddfa45",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tests/frameservers/tui_test/CMakeLists.txt" : {
      "ObjectId" : "86961ab1693a56e857f053167f3a0251ff5cce70",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/modules/test/CMakeLists.txt" : {
      "ObjectId" : "f79d6af894d9abe0cc12dd1882a3cbcf082e8124",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/security/flexible/CMakeLists.txt" : {
      "ObjectId" : "0f012b8db5c808fe149daf8bf619db6bdf07e7c9",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/security/incontinence/CMakeLists.txt" : {
      "ObjectId" : "c1ca2ef28ebb301c114dcda703ddfa96fe1dfd0c",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/security/shmpuncher/CMakeLists.txt" : {
      "ObjectId" : "a321e892f5f27de33e6786031088edbcb96ff6a8",
      "LastModified" : "2019-04-06T20:36:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shmif-api requires this\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "#\trt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 87,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2520
}