{
  "Repository" : "6163",
  "Revision" : "HEAD",
  "ObjectId" : "b01816fe862b6b2fc7f53e6ada0d1544927d9d87",
  "CommitTime" : "2018-12-18T23:32:33Z",
  "Files" : {
    "3rdparty/LuaJIT-2.0.3/Makefile" : {
      "ObjectId" : "b23b64816d21061c89d7062400f9480bea92abb7",
      "LastModified" : "2014-04-19T01:01:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT top level Makefile for installation. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Note: src/Makefile has many more configurable options.\n\n#\n\n# ##### This Makefile is NOT useful for Windows! #####\n\n# For MSVC, please follow the instructions given in src/msvcbuild.bat.\n\n# For MinGW and Cygwin, cd to src and run make with the Makefile there.\n\n#\n\n# Copyright (C) 2005-2014 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#\n\n# Change the installation path as needed. This automatically adjusts\n\n# the paths in src/luaconf.h, too. Note: PREFIX must be an absolute path!\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3rdparty/LuaJIT-2.0.3/src/Makefile" : {
      "ObjectId" : "0ab6cfe97ffa6a6f74e7d9828ed20cb339f82b6a",
      "LastModified" : "2014-04-19T01:01:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT Makefile. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Also works with MinGW and Cygwin on Windows.\n\n# Please check msvcbuild.bat for building with MSVC on Windows.\n\n#\n\n# Copyright (C) 2005-2014 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#############################  COMPILER OPTIONS  #############################\n\n##############################################################################\n\n# These options mainly affect the speed of the JIT compiler itself, not the\n\n# speed of the JIT-compiled code. Turn any of the optional settings on by\n\n# removing the '#' in front of them. Make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\" if you change any options.\n\n#\n\n# LuaJIT builds as a native 32 or 64 bit binary by default.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Use this if you want to force a 32 bit build on a 64 bit multilib OS.\n\n#CC= gcc -m32\n\n#\n\n# Since the assembler part does NOT maintain a frame pointer, it's pointless\n\n# to slow down the C part by not omitting it. Debugging, tracebacks and\n\n# unwinding are not affected -- the assembler part has frame unwind\n\n# information and GCC emits it where needed (x64) or with -g (see CCDEBUG).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use this if you want to generate a smaller binary (but it's slower):\n\n#CCOPT= -Os -fomit-frame-pointer\n\n# Note: it's no longer recommended to use -O3 with GCC 4.x.\n\n# The I-Cache bloat usually outweighs the benefits from aggressive inlining.\n\n#\n\n# Target-specific compiler options:\n\n#\n\n# x86 only: it's recommended to compile at least for i686. Better yet,\n\n# compile for an architecture that has SSE2, too (-msse -msse2).\n\n#\n\n# x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute\n\n# the binaries to a different machine you could also use: -march=native\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Uncomment the next line to generate debug information:\n\n#CCDEBUG= -g\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Uncomment the next line to enable more warnings:\n\n#CCWARN+= -Wextra -Wdeclaration-after-statement -Wredundant-decls -Wshadow -Wpointer-arith\n\n#\n\n##############################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n################################  BUILD MODE  ################################\n\n##############################################################################\n\n# The default build mode is mixed mode on POSIX. On Windows this is the same\n\n# as dynamic mode.\n\n#\n\n# Mixed mode creates a static + dynamic library and a statically linked luajit.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Static mode creates a static library and a statically linked luajit.\n\n#BUILDMODE= static\n\n#\n\n# Dynamic mode creates a dynamic library and a dynamically linked luajit.\n\n# Note: this executable will only run when the library is installed!\n\n#BUILDMODE= dynamic\n\n#\n\n##############################################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n\n#################################  FEATURES  #################################\n\n##############################################################################\n\n# Enable/disable these features as needed, but make sure you force a full\n\n# recompile with \"make clean\", followed by \"make\".\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Permanently disable the FFI extension to reduce the size of the LuaJIT\n\n# executable. But please consider that the FFI library is compiled-in,\n\n# but NOT loaded by default. It only allocates any memory, if you actually\n\n# make use of it.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_FFI\n\n#\n\n# Features from Lua 5.2 that are unlikely to break existing code are\n\n# enabled by default. Some other features that *might* break some existing\n\n# code (e.g. __pairs or os.execute() return values) can be enabled here.\n\n# Note: this does not provide full compatibility with Lua 5.2 at this time.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_LUA52COMPAT\n\n#\n\n# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_JIT\n\n#\n\n# Some architectures (e.g. PPC) can use either single-number (1) or\n\n# dual-number (2) mode. Uncomment one of these lines to override the\n\n# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=1\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\n\n#\n\n##############################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n############################  DEBUGGING SUPPORT  #############################\n\n##############################################################################\n\n# Enable these options as needed, but make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\".\n\n# Note that most of these are NOT suitable for benchmarking or release mode!\n\n#\n\n# Use the system provided memory allocator (realloc) instead of the\n\n# bundled memory allocator. This is slower, but sometimes helpful for\n\n# debugging. It's helpful for Valgrind's memcheck tool, too. This option\n\n# cannot be enabled on x64, since the built-in allocator is mandatory.\n\n#XCFLAGS+= -DLUAJIT_USE_SYSMALLOC\n\n#\n\n# This define is required to run LuaJIT under Valgrind. The Valgrind\n\n# header files must be installed. You should enable debug information, too.\n\n# Use --suppressions=lj.supp to avoid some false positives.\n\n#XCFLAGS+= -DLUAJIT_USE_VALGRIND\n\n#\n\n# This is the client for the GDB JIT API. GDB 7.0 or higher is required\n\n# to make use of it. See lj_gdbjit.c for details. Enabling this causes\n\n# a non-negligible overhead, even when not running under GDB.\n\n#XCFLAGS+= -DLUAJIT_USE_GDBJIT\n\n#\n\n# Turn on assertions for the Lua/C API to debug problems with lua_* calls.\n\n# This is rather slow -- use only while developing C libraries/embeddings.\n\n#XCFLAGS+= -DLUA_USE_APICHECK\n\n#\n\n# Turn on assertions for the whole LuaJIT VM. This significantly slows down\n\n# everything. Use only if you suspect a problem with LuaJIT itself.\n\n#XCFLAGS+= -DLUA_USE_ASSERT\n\n#\n\n##############################################################################\n\n# You probably don't need to change anything below this line!\n\n##############################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Flags and options for host and target.\n\n##############################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# You can override the following variables at the make command line:\n\n#   CC       HOST_CC       STATIC_CC       DYNAMIC_CC\n\n#   CFLAGS   HOST_CFLAGS   TARGET_CFLAGS\n\n#   LDFLAGS  HOST_LDFLAGS  TARGET_LDFLAGS  TARGET_SHLDFLAGS\n\n#   LIBS     HOST_LIBS     TARGET_LIBS\n\n#   CROSS    HOST_SYS      TARGET_SYS      TARGET_FLAGS\n\n#\n\n# Cross-compilation examples:\n\n#   make HOST_CC=\"gcc -m32\" CROSS=i586-mingw32msvc- TARGET_SYS=Windows\n\n#   make HOST_CC=\"gcc -m32\" CROSS=powerpc-linux-gnu-\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If left blank, minilua is built and used. You can supply an installed\n\n# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################################################################\n\n# System detection.\n\n##############################################################################\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\n\n# Files and pathnames.\n\n##############################################################################\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\n\n# Build mode handling.\n\n##############################################################################\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Mixed mode defaults.\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Mixed mode is not supported on Windows. And static mode doesn't work well.\n\n# C modules cannot be loaded, because they bind to lua51.dll.\n",
        "Line" : 508,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#Q=\n\n#E= @:\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\n\n# Make targets.\n\n##############################################################################\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22,
      "Errorlog" : "line 532:19 token recognition error at: '\\m'\nline 533:19 token recognition error at: '\\b'\nline 586:10 token recognition error at: '\"s| [^ ]*/dasm_\\S'\nline 587:29 token recognition error at: '\\1'\nline 588:24 token recognition error at: '\\S'\nline 589:22 token recognition error at: '\\S'\nline 590:21 token recognition error at: '\\S'\nline 685:42 token recognition error at: '\"\\n\\n##############################################################################\\n\u0000'\n"
    },
    "3rdparty/box2d-2.3.0/Box2D/Box2DConfig.cmake" : {
      "ObjectId" : "b567c17d14df997bb1edfe29e50e7a28b998c51a",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/box2d-2.3.0/Box2D/CMakeLists.txt" : {
      "ObjectId" : "b800bcccbc023fe9e1ed0d5a145b193caabe1913",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These are used to create visual studio folders.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install headers\n",
        "Line" : 186,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# install libraries\n",
        "Line" : 196,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# install build system hooks for third-party apps\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "3rdparty/box2d-2.3.0/CMakeLists.txt" : {
      "ObjectId" : "a290f1576c95b69d0e2a312d137ed5f5d50f1278",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Box2D library.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HelloWorld console example.\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Testbed and dependencies.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "3rdparty/box2d-2.3.0/HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "c6ae2b2fd45efd3e04f48e0f24b1c9926b6f85aa",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hello World examples\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/box2d-2.3.0/Testbed/CMakeLists.txt" : {
      "ObjectId" : "b030a4840ea1f86ddcbceb8e92199c2cece86486",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some flags for Freeglut and GLUI.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define the framework files.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define the test files.\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are used to create visual studio folders.\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We are not using the Apple's framework version, but X11's\r\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "3rdparty/box2d-2.3.0/freeglut/CMakeLists.txt" : {
      "ObjectId" : "8c97446deb60bbb08eb945ad0305b4d498798912",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/box2d-2.3.0/glui/CMakeLists.txt" : {
      "ObjectId" : "1e502988013506141c9ede56f4bb7e640ea9aa6d",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/c-ares-1.7.5/Makefile.am" : {
      "ObjectId" : "8969403a0f8901cd61bcea0f1cd287969f509249",
      "LastModified" : "2014-05-23T14:59:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# When using the low-level hard-hacking memory leak tracking code from\n\n# libcurl the generated curl/curlbuild.h file must also be reachable.\n\n# Using the libcurl lowlevel code from within c-ares library is ugly and\n\n# only works when c-ares is built and linked with a similarly debug-build\n\n# libcurl, but we do this anyway for convenience.\n\n#\n\n# $(top_builddir)/../include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/../include is for libcurl's generated curl/curlbuild.h file\n\n# $(top_srcdir)/../include is for libcurl's external include files\n\n# $(top_builddir)/../lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_srcdir)/../lib is for libcurl's lib/setup.h and other \"private\" files\n\n# $(top_builddir) is for c-ares's generated ares_config.h file\n\n# $(top_srcdir) is for c-ares's ares_setup.h and other \"c-ares-private\" files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adig and ahost are just sample programs and thus not mentioned with the\n\n# regular sources and headers\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This flag accepts an argument of the form current[:revision[:age]]. So,\n\n# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to\n\n# 1.\n\n#\n\n# If either revision or age are omitted, they default to 0. Also note that age\n\n# must be less than or equal to the current interface number.\n\n#\n\n# Here are a set of rules to help you update your library version information: \n\n#\n\n# 1.Start with version information of 0:0:0 for each libtool library.\n\n#\n\n# 2.Update the version information only immediately before a public release of\n\n# your software. More frequent updates are unnecessary, and only guarantee\n\n# that the current interface number gets larger faster.\n\n#\n\n# 3.If the library source code has changed at all since the last update, then\n\n# increment revision (c:r+1:a)\n\n#\n\n# 4.If any interfaces have been added, removed, or changed since the last\n\n# update, increment current, and set revision to 0. (c+1:r=0:a)\n\n#\n\n# 5.If any interfaces have been added since the last public release, then\n\n# increment age. (c:r:a+1)\n\n#\n\n# 6.If any interfaces have been removed since the last public release, then\n\n# set age to 0. (c:r:a=0)\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The -no-undefined flag is crucial for this to build fine on some platforms\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add -Werror if defined\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Makefile.inc provides the CSOURCES and HHEADERS defines\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# where to install the c-ares headers\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# what headers to install on 'make install':\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make files named *.dist replace the file without .dist extension\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "3rdparty/expat-2.2.6/CMakeLists.txt" : {
      "ObjectId" : "a537f8a778563bf82bc6c386805dea515077dc1e",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is copyrighted under the BSD-license for buildsystem files of KDE\r\n\n# copyright 2010, Patrick Spendrin <ps_ml@gmx.de>\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configuration options\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sync\r\n\n# with\r\n\n# configure.ac!\r\n",
        "Line" : 167,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "## these are unittests that can be run on any platform\r\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "3rdparty/expat-2.2.6/ConfigureChecks.cmake" : {
      "ObjectId" : "dbb49210202fbc9b5b564ebf728a6e4038b1846d",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/* Define to 1 if you have the ANSI C header files. */\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/expat-2.2.6/Makefile.am" : {
      "ObjectId" : "5ed9ac410a428c57122effd56e4d2b7490d25944",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#                          __  __            _\n\n#                       ___\\ \\/ /_ __   __ _| |_\n\n#                      / _ \\\\  /| '_ \\ / _` | __|\n\n#                     |  __//  \\| |_) | (_| | |_\n\n#                      \\___/_/\\_\\ .__/ \\__,_|\\__|\n\n#                               |_| XML parser\n\n#\n\n# Copyright (c) 2017 Expat development team\n\n# Licensed under the MIT license:\n\n#\n\n# Permission is  hereby granted,  free of charge,  to any  person obtaining\n\n# a  copy  of  this  software   and  associated  documentation  files  (the\n\n# \"Software\"),  to  deal in  the  Software  without restriction,  including\n\n# without  limitation the  rights  to use,  copy,  modify, merge,  publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons  to whom  the Software  is  furnished to  do so,  subject to  the\n\n# following conditions:\n\n#\n\n# The above copyright  notice and this permission notice  shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE  SOFTWARE  IS  PROVIDED  \"AS  IS\",  WITHOUT  WARRANTY  OF  ANY  KIND,\n\n# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\n# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\n# USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# lib goes first to build first\n",
        "Line" : 40,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "3rdparty/expat-2.2.6/doc/Makefile.am" : {
      "ObjectId" : "d8a35c0da235691b20663470babe3700443ff30d",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#                          __  __            _\n\n#                       ___\\ \\/ /_ __   __ _| |_\n\n#                      / _ \\\\  /| '_ \\ / _` | __|\n\n#                     |  __//  \\| |_) | (_| | |_\n\n#                      \\___/_/\\_\\ .__/ \\__,_|\\__|\n\n#                               |_| XML parser\n\n#\n\n# Copyright (c) 2017 Expat development team\n\n# Licensed under the MIT license:\n\n#\n\n# Permission is  hereby granted,  free of charge,  to any  person obtaining\n\n# a  copy  of  this  software   and  associated  documentation  files  (the\n\n# \"Software\"),  to  deal in  the  Software  without restriction,  including\n\n# without  limitation the  rights  to use,  copy,  modify, merge,  publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons  to whom  the Software  is  furnished to  do so,  subject to  the\n\n# following conditions:\n\n#\n\n# The above copyright  notice and this permission notice  shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE  SOFTWARE  IS  PROVIDED  \"AS  IS\",  WITHOUT  WARRANTY  OF  ANY  KIND,\n\n# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\n# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\n# USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https://www.gnu.org/software/automake/manual/automake.html#What-Gets-Cleaned\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/expat-2.2.6/examples/Makefile.am" : {
      "ObjectId" : "99edf21227c9d1c17afb2c03940e4d1e09872d99",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#                          __  __            _\n\n#                       ___\\ \\/ /_ __   __ _| |_\n\n#                      / _ \\\\  /| '_ \\ / _` | __|\n\n#                     |  __//  \\| |_) | (_| | |_\n\n#                      \\___/_/\\_\\ .__/ \\__,_|\\__|\n\n#                               |_| XML parser\n\n#\n\n# Copyright (c) 2017 Expat development team\n\n# Licensed under the MIT license:\n\n#\n\n# Permission is  hereby granted,  free of charge,  to any  person obtaining\n\n# a  copy  of  this  software   and  associated  documentation  files  (the\n\n# \"Software\"),  to  deal in  the  Software  without restriction,  including\n\n# without  limitation the  rights  to use,  copy,  modify, merge,  publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons  to whom  the Software  is  furnished to  do so,  subject to  the\n\n# following conditions:\n\n#\n\n# The above copyright  notice and this permission notice  shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE  SOFTWARE  IS  PROVIDED  \"AS  IS\",  WITHOUT  WARRANTY  OF  ANY  KIND,\n\n# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\n# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\n# USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/expat-2.2.6/expat_config.h.cmake" : {
      "ObjectId" : "3e23f4873fda40129b3f21df86521150ecab0fbb",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* expat_config.h.cmake.  Based upon generated expat_config.h.in.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the `arc4random' function. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the `arc4random_buf' function. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the `bcopy' function. */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the `getpagesize' function. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the `getrandom' function. */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the `bsd' library (-lbsd). */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the `memmove' function. */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have a working `mmap' system call. */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have `syscall' and `SYS_getrandom'. */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* whether byteorder is bigendian */",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to specify how much context to retain around the current parse\r\n   point. */",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to make parameter entity parsing functionality available. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to make XML Namespaces functionality available. */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to extract entropy from /dev/urandom. */",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to use UTF-16 chars (two bytes). */",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to use wchar_t as UTF-16 char type instead of unsigned short. */",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to __FUNCTION__ or \"\" if `__func__' does not conform to ANSI C. */",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to `long' if <sys/types.h> does not define. */",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to `unsigned' if <sys/types.h> does not define. */",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "3rdparty/expat-2.2.6/lib/Makefile.am" : {
      "ObjectId" : "534369e8af20ffb1352085bc74a7ea1b4d4bf5c4",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#                          __  __            _\n\n#                       ___\\ \\/ /_ __   __ _| |_\n\n#                      / _ \\\\  /| '_ \\ / _` | __|\n\n#                     |  __//  \\| |_) | (_| | |_\n\n#                      \\___/_/\\_\\ .__/ \\__,_|\\__|\n\n#                               |_| XML parser\n\n#\n\n# Copyright (c) 2017 Expat development team\n\n# Licensed under the MIT license:\n\n#\n\n# Permission is  hereby granted,  free of charge,  to any  person obtaining\n\n# a  copy  of  this  software   and  associated  documentation  files  (the\n\n# \"Software\"),  to  deal in  the  Software  without restriction,  including\n\n# without  limitation the  rights  to use,  copy,  modify, merge,  publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons  to whom  the Software  is  furnished to  do so,  subject to  the\n\n# following conditions:\n\n#\n\n# The above copyright  notice and this permission notice  shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE  SOFTWARE  IS  PROVIDED  \"AS  IS\",  WITHOUT  WARRANTY  OF  ANY  KIND,\n\n# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\n# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\n# USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/expat-2.2.6/tests/Makefile.am" : {
      "ObjectId" : "742ed437dbde3374665370281ba35440eb1e52c9",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#                          __  __            _\n\n#                       ___\\ \\/ /_ __   __ _| |_\n\n#                      / _ \\\\  /| '_ \\ / _` | __|\n\n#                     |  __//  \\| |_) | (_| | |_\n\n#                      \\___/_/\\_\\ .__/ \\__,_|\\__|\n\n#                               |_| XML parser\n\n#\n\n# Copyright (c) 2017 Expat development team\n\n# Licensed under the MIT license:\n\n#\n\n# Permission is  hereby granted,  free of charge,  to any  person obtaining\n\n# a  copy  of  this  software   and  associated  documentation  files  (the\n\n# \"Software\"),  to  deal in  the  Software  without restriction,  including\n\n# without  limitation the  rights  to use,  copy,  modify, merge,  publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons  to whom  the Software  is  furnished to  do so,  subject to  the\n\n# following conditions:\n\n#\n\n# The above copyright  notice and this permission notice  shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE  SOFTWARE  IS  PROVIDED  \"AS  IS\",  WITHOUT  WARRANTY  OF  ANY  KIND,\n\n# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\n# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\n# USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To support MinGW and Non-MinGW at the same time:\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/expat-2.2.6/tests/benchmark/Makefile.am" : {
      "ObjectId" : "f4d7a8e2c3eb1289967a85687425e1ec2ea8fa83",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#                          __  __            _\n\n#                       ___\\ \\/ /_ __   __ _| |_\n\n#                      / _ \\\\  /| '_ \\ / _` | __|\n\n#                     |  __//  \\| |_) | (_| | |_\n\n#                      \\___/_/\\_\\ .__/ \\__,_|\\__|\n\n#                               |_| XML parser\n\n#\n\n# Copyright (c) 2017 Expat development team\n\n# Licensed under the MIT license:\n\n#\n\n# Permission is  hereby granted,  free of charge,  to any  person obtaining\n\n# a  copy  of  this  software   and  associated  documentation  files  (the\n\n# \"Software\"),  to  deal in  the  Software  without restriction,  including\n\n# without  limitation the  rights  to use,  copy,  modify, merge,  publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons  to whom  the Software  is  furnished to  do so,  subject to  the\n\n# following conditions:\n\n#\n\n# The above copyright  notice and this permission notice  shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE  SOFTWARE  IS  PROVIDED  \"AS  IS\",  WITHOUT  WARRANTY  OF  ANY  KIND,\n\n# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\n# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\n# USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/expat-2.2.6/xmlwf/Makefile.am" : {
      "ObjectId" : "ff460902caa0a89ffaf949b2783931c4b7a40474",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#                          __  __            _\n\n#                       ___\\ \\/ /_ __   __ _| |_\n\n#                      / _ \\\\  /| '_ \\ / _` | __|\n\n#                     |  __//  \\| |_) | (_| | |_\n\n#                      \\___/_/\\_\\ .__/ \\__,_|\\__|\n\n#                               |_| XML parser\n\n#\n\n# Copyright (c) 2017 Expat development team\n\n# Licensed under the MIT license:\n\n#\n\n# Permission is  hereby granted,  free of charge,  to any  person obtaining\n\n# a  copy  of  this  software   and  associated  documentation  files  (the\n\n# \"Software\"),  to  deal in  the  Software  without restriction,  including\n\n# without  limitation the  rights  to use,  copy,  modify, merge,  publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons  to whom  the Software  is  furnished to  do so,  subject to  the\n\n# following conditions:\n\n#\n\n# The above copyright  notice and this permission notice  shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE  SOFTWARE  IS  PROVIDED  \"AS  IS\",  WITHOUT  WARRANTY  OF  ANY  KIND,\n\n# EXPRESS  OR IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO  THE WARRANTIES  OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\n# NO EVENT SHALL THE AUTHORS OR  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR  OTHER LIABILITY, WHETHER  IN AN  ACTION OF CONTRACT,  TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\n# USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/freetype-2.7/CMakeLists.txt" : {
      "ObjectId" : "077d5fd8d86484fb1a425f2756a23f521bfdde3c",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013-2016 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written originally by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# As a preliminary, create a compilation directory and change into it, for\n\n# example\n\n#\n\n#   mkdir ~/freetype2.compiled\n\n#   cd ~/freetype2.compiled\n\n#\n\n# Now you can say\n\n#\n\n#   cmake <path-to-freetype2-src-dir>\n\n#\n\n# to create a Makefile that builds a static version of the library.\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_SHARED_LIBS:BOOL=true\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_FRAMEWORK:BOOL=true -G Xcode\n\n#\n\n# instead.\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake -D IOS_PLATFORM=OS -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# or\n\n#\n\n#   cmake -D IOS_PLATFORM=SIMULATOR -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' creates configuration files in\n\n#\n\n#     <build-directory>/include/freetype/config\n\n#\n\n#   which should be further modified if necessary.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt' is provided as-is since it is normally not used by the\n\n#   developer team.\n\n#\n\n# . If you want to disable the automatic generation of the distribution\n\n#   targets, add the `-D FREETYPE_NO_DIST=true' command line argument.\n\n#\n\n# . Set the `WITH_ZLIB', `WITH_BZip2', `WITH_PNG', and `WITH_HarfBuzz'\n\n#   CMake variables to `ON' or `OFF' to force or skip using a dependency.\n\n#   Leave a variable undefined (which is the default) to use the dependency\n\n#   only if it is available.  Example:\n\n#\n\n#     cmake ... -DWITH_ZLIB=ON -DWITH_HarfBuzz=OFF ...\n\n#\n\n# . Installation of FreeType can be controlled with the CMake variables\n\n#   `SKIP_INSTALL_HEADERS', `SKIP_INSTALL_LIBRARIES', and `SKIP_INSTALL_ALL'\n\n#   (this is compatible with the same CMake variables in zlib's CMake\n\n#   support).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Disallow in-source builds\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add local cmake modules\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compiler definitions for building the library\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find dependencies\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the options file\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specify library include directories\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# not BZIP2_INCLUDE_DIRS\n",
        "Line" : 382,
        "CharPositionInLine" : 44
      },
      "11" : {
        "Text" : "# Installations\n\n# Note the trailing slash in the argument to the `DIRECTORY' directive\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Packaging\n\n# CPack version numbers for release tarball name.\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add `make dist' target if FREETYPE_DIST is set (which is the default)\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# eof\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "3rdparty/freetype-2.7/Makefile" : {
      "ObjectId" : "e370cae8fe2c39d3cc0d1355c8a665403b011484",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2016 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3rdparty/freetype-2.7/builds/cmake/FindHarfBuzz.cmake" : {
      "ObjectId" : "f394b82bf975ced36ef8f5c5e9069de54c24f4a7",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HarfBuzz 0.9.18 split ICU support into a separate harfbuzz-icu library.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/freetype-2.7/builds/cmake/iOS.cmake" : {
      "ObjectId" : "378dbd895fa2303bc0b5692c1a2520e0e79e1464",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iOS.cmake\n\n#\n\n# Copyright 2014-2016 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by David Wimsey <david@wimsey.us>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# This file is derived from the files `Platform/Darwin.cmake' and\n\n# `Platform/UnixPaths.cmake', which are part of CMake 2.8.4.  It has been\n\n# altered for iOS development.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n\n# -------\n\n#\n\n#   IOS_PLATFORM = OS | SIMULATOR\n\n#\n\n#     This decides whether SDKS are selected from the `iPhoneOS.platform' or\n\n#     `iPhoneSimulator.platform' folders.\n\n#\n\n#     OS - the default, used to build for iPhone and iPad physical devices,\n\n#       which have an ARM architecture.\n\n#     SIMULATOR - used to build for the Simulator platforms, which have an\n\n#       x86 architecture.\n\n#\n\n#   CMAKE_IOS_DEVELOPER_ROOT = /path/to/platform/Developer folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     IOS_PLATFORM value above.  If you manually set this variable, it\n\n#     overrides the default location and forces the use of a particular\n\n#     Developer Platform.\n\n#\n\n#   CMAKE_IOS_SDK_ROOT = /path/to/platform/Developer/SDKs/SDK folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     CMAKE_IOS_DEVELOPER_ROOT value.  In this case it is always the most\n\n#     up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.  If you\n\n#     manually set this variable, it forces the use of a specific SDK\n\n#     version.\n\n#\n\n#\n\n# Macros\n\n# ------\n\n#\n\n#   set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#\n\n#     A convenience macro for setting Xcode specific properties on targets.\n\n#\n\n#     Example:\n\n#\n\n#       set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n#   find_host_package (PROGRAM ARGS)\n\n#\n\n#     A macro to find executable programs on the host system, not within the\n\n#     iOS environment.  Thanks to the `android-cmake' project for providing\n\n#     the command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required as of cmake 2.8.10\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# determine the cmake host system version so we know where to find the iOS\n\n# SDKs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# skip the platform compiler checks for cross compiling\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# all iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# hidden visibility is required for cxx on iOS\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hack: If a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n#       build tree (where `install_name_tool' was hardcoded), and where\n\n#       CMAKE_INSTALL_NAME_TOOL isn't in the cache and still cmake didn't\n\n#       fail in `CMakeFindBinUtils.cmake' (because it isn't rerun), hardcode\n\n#       CMAKE_INSTALL_NAME_TOOL here to `install_name_tool' so it behaves as\n\n#       it did before.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set up iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check the platform selection and setup for developer root\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# set up iOS developer location unless specified manually with\n\n# CMAKE_IOS_DEVELOPER_ROOT --\n\n# note that Xcode 4.3 changed the installation location; choose the most\n\n# recent one available\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find and use the most recent iOS SDK unless specified manually with\n\n# CMAKE_IOS_SDK_ROOT\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set the sysroot default to the most recent SDK\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the architecture for iOS --\n\n# note that currently both ARCHS_STANDARD_32_BIT and\n\n# ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# only search the iOS SDKs, not the remainder of the host filesystem\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# this little macro lets you set any Xcode specific property\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this macro lets you find executable programs on the host system\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# eof\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "3rdparty/freetype-2.7/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "24dc49c563961522b068c37a31bbb81bcf70eac1",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform,\n\n# where FreeType has been set up to create a static library\n\n# (which is the default).\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/glew-1.5.6/auto/Makefile" : {
      "ObjectId" : "89b9c77672280279ab31baf0b63a4dfc8893374d",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\r\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\r\n\n##\r\n\n## This program is distributed under the terms and conditions of the GNU\r\n\n## General Public License Version 2 as published by the Free Software\r\n\n## Foundation or, at your option, any later version.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#GLEW_SPLIT_SOURCE = yes\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#http://oss.sgi.com/projects/ogl-sample/registry/\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#GL_CORE_SPEC := $(shell grep GL_VERSION custom.txt | sed -e 's/\\(.*\\)/$(CORE)\\/\\1/g;')\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#GLX_CORE_SPEC := $(shell grep GLX_VERSION custom.txt | sed -e 's/\\(.*\\)/$(CORE)\\/\\1/g;')\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t$(BIN)/fix_OML_sync_control.sh $@\r\n\n#\tperl -e \"s/GLEW_VERSION_STRING/$(GLEW_VERSION)/g\" -pi $@\r\n\n#\tperl -e \"s/GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader\\(GLEW_CONTEXT_ARG_VAR_INIT\\);/{ GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader(GLEW_CONTEXT_ARG_VAR_INIT); _glewInit_GL_ARB_vertex_program(GLEW_CONTEXT_ARG_VAR_INIT); }/g\" -pi $@\r\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update documentation\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#<a href=\"$(@F)\">\\(.*\\)</a>#\\1#' > $@\r\n",
        "Line" : 329,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#<a href=\"$(@F)\">\\(.*\\)</a>#\\1#' $@\r\n",
        "Line" : 339,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "#<a href=\"$(@F)\">\\(.*\\)</a>#\\1#' $@\r\n",
        "Line" : 349,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "#<a href=\"$(@F)\">\\(.*\\)</a>#\\1#' $@\r\n",
        "Line" : 359,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 11,
      "Errorlog" : "line 26:100 token recognition error at: '\\1'\nline 27:81 token recognition error at: '\\1'\nline 29:134 token recognition error at: '\\1'\n"
    },
    "3rdparty/glew-1.5.6/build/vc6/Makefile" : {
      "ObjectId" : "7ecef0ede747abd38872de7a848291b8ed4351c7",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/jansson-2.7/CMakeLists.txt" : {
      "ObjectId" : "d8a78c5ba1a7eb04e9fd087b0c1a62a8ae73c05e",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Notes:\n\n#\n\n# Author: Paul Harris, June 2012\n\n# Additions: Joakim Soderberg, Febuary 2013\n\n#\n\n# Supports: building static/shared, release/debug/etc, can also build html docs\n\n# and some of the tests.\n\n# Note that its designed for out-of-tree builds, so it will not pollute your\n\n# source tree.\n\n#\n\n# TODO 1: Finish implementing tests. api tests are working, but the valgrind\n\n# variants are not flagging problems.\n\n#\n\n# TODO 2: There is a check_exports script that would try and incorporate.\n\n#\n\n# TODO 3: Consolidate version numbers, currently the version number is written\n\n# into: * cmake (here) * autotools (the configure) * source code header files.\n\n# Should not be written directly into header files, autotools/cmake can do\n\n# that job.\n\n#\n\n# Brief intro on how to use cmake:\n\n# > mkdir build (somewhere - we do out-of-tree builds)\n\n# > use cmake, ccmake, or cmake-gui to configure the project. for linux, you\n\n# can only choose one variant: release,debug,etc... and static or shared.\n\n# >> example:\n\n# >> cd build\n\n# >> ccmake -i ../path_to_jansson_dir\n\n# >>  inside, configure your options. press C until there are no lines\n\n#     with * next to them.\n\n# >>  note, I like to configure the 'install' path to ../install, so I get\n\n#     self-contained clean installs I can point other projects to.\n\n# >>  press G to 'generate' the project files.\n\n# >> make (to build the project)\n\n# >> make install\n\n# >> make test (to run the tests, if you enabled them)\n\n#\n\n# Brief description on how it works:\n\n# There is a small heirachy of CMakeLists.txt files which define how the\n\n# project is built.\n\n# Header file detection etc is done, and the results are written into config.h\n\n# and jansson_config.h, which are generated from the corresponding\n\n# config.h.cmake and jansson_config.h.cmake template files.\n\n# The generated header files end up in the build directory - not in\n\n# the source directory.\n\n# The rest is down to the usual make process.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# required for exports? cmake_minimum_required (VERSION 2.8.6)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Options\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This option must match the settings used in your program, in particular if you\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# are linking statically\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Set some nicer output dirs.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Give the debug version a different postfix for windows,\n\n# so both the debug and release version can be built in the\n\n# same build-tree on Windows (MSVC).\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is how I thought it should go\n\n# set (JANSSON_VERSION \"2.3.1\")\n\n# set (JANSSON_SOVERSION 2)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is what is required to match the same numbers as automake's\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for CheckFunctionKeywords\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Turn off Microsofts \"security\" warnings.\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Check for the int-type includes\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check our 64 bit integer sizes\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check our 32 bit integer sizes\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check for ssize_t and SSIZE_T existance.\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check for all the variants of strtoll\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Figure out what variant we should use\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# fallback to strtol (32 bit)\n\n# this will set all the required variables\n",
        "Line" : 219,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# if we haven't defined JSON_INT_T, then we have a 64 bit conversion function.\n\n# detect what to use for the 64 bit type.\n\n# Note: I will prefer long long if I can get it, as that is what the automake system aimed for.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Apparently, Borland BCC and MSVC wants I64d,\n\n# Borland BCC could also accept LD\n\n# and gcc wants ldd,\n\n# I am not sure what cygwin will want, so I will assume I64d\n",
        "Line" : 240,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# matches both msvc and cygwin\n",
        "Line" : 245,
        "CharPositionInLine" : 14
      },
      "21" : {
        "Text" : "# If locale.h and localeconv() are available, define to 1, otherwise to 0.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# check if we have setlocale\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Check what the inline keyword is.\n\n# Note that the original JSON_INLINE was always set to just 'inline', so this goes further.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# no inline on this platform\n",
        "Line" : 279,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "# Find our snprintf\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Create pkg-conf file.\n\n# (We use the same files as ./configure does, so we\n\n#  have to defined the same variables used there).\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# configure the public config file\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Copy the jansson.h file to the public include folder\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# configure the private config file\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# and tell the source code to include it\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add the lib sources.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# For building Documentation (uses Sphinx)\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 381,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 384,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# CMake could be used to build the conf.py file too,\n\n# eg it could automatically write the version of the program or change the theme.\n\n# if(NOT DEFINED SPHINX_THEME)\n\n#    set(SPHINX_THEME default)\n\n# endif()\n\n#\n\n# if(NOT DEFINED SPHINX_THEME_DIR)\n\n#    set(SPHINX_THEME_DIR)\n\n# endif()\n\n#\n\n# configure_file(\n\n#    \"${CMAKE_CURRENT_SOURCE_DIR}/conf.py.in\"\n\n#    \"${BINARY_BUILD_DIR}/conf.py\"\n\n#    @ONLY)\n",
        "Line" : 387,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# TODO: Add support for all sphinx builders: http://sphinx-doc.org/builders.html\n",
        "Line" : 402,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Add documentation targets.\n",
        "Line" : 404,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# The doc target will build all documentation targets.\n",
        "Line" : 430,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# -q   # Enable for quiet mode\n",
        "Line" : 436,
        "CharPositionInLine" : 12
      },
      "40" : {
        "Text" : "# -c \"${BINARY_BUILD_DIR}\" # enable if using cmake-generated conf.py\n",
        "Line" : 439,
        "CharPositionInLine" : 12
      },
      "41" : {
        "Text" : "# TODO: Add FindValgrind.cmake instead of having a hardcoded path.\n",
        "Line" : 460,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# enable valgrind\n",
        "Line" : 464,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "#\n\n# Test suites.\n\n#\n",
        "Line" : 474,
        "CharPositionInLine" : 3
      },
      "44" : {
        "Text" : "# Doing arithmetic on void pointers is not allowed by Microsofts compiler\n\n# such as secure_malloc and secure_free is doing, so exclude it for now.\n",
        "Line" : 495,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# Helper macro for building and linking a test program.\n",
        "Line" : 501,
        "CharPositionInLine" : 3
      },
      "46" : {
        "Text" : "# Create executables and tests/valgrind tests for API tests.\n",
        "Line" : 508,
        "CharPositionInLine" : 3
      },
      "47" : {
        "Text" : "# Test harness for the suites tests.\n",
        "Line" : 520,
        "CharPositionInLine" : 3
      },
      "48" : {
        "Text" : "#\n\n# Installation preparation.\n\n#\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Allow the user to override installation directories.\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Make sure the paths are absolute.\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Export targets (This is used for other CMake projects to easily find the libraries and include files).\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Generate the config file for the build-tree.\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Generate the config file for the installation tree.\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Calculate the relative directory from the Cmake dir.\n",
        "Line" : 601,
        "CharPositionInLine" : 38
      },
      "55" : {
        "Text" : "# Note the EVENT_CMAKE_DIR is defined in JanssonConfig.cmake.in, \n\n# we escape it here so it's evaluated when it is included instead\n\n# so that the include dirs are given relative to where the \n\n# config file is located.\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Generate version info for both build-tree and install-tree.\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define the public headers.\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#TODO: fix this.\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Create pkg-conf file.\n\n# (We use the same files as ./configure does, so we\n\n#  have to defined the same variables used there).\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#\n\n# Install targets.\n\n#\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Windows DLLs\n",
        "Line" : 639,
        "CharPositionInLine" : 71
      },
      "62" : {
        "Text" : "# Install the pkg-config.\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Install the configs.\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Install exports for the install-tree.\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# For use when simply using add_library from a parent project to build jansson.\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 66
    },
    "3rdparty/jansson-2.7/Makefile.am" : {
      "ObjectId" : "ccd70e977dfd6bb4db0fc2b07faa72818017cd4e",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# \"make distcheck\" builds the dvi target, so use it to check that the\n\n# documentation is built correctly.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/jansson-2.7/cmake/CheckFunctionKeywords.cmake" : {
      "ObjectId" : "44601fd4e9fa15f0d9a26481d84ebf0662316131",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#      break()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/jansson-2.7/cmake/FindSphinx.cmake" : {
      "ObjectId" : "55539d42c6462babd4fdf30691d613998a61a602",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PART B. DOWNLOADING AGREEMENT - LICENSE FROM SBIA WITH RIGHT TO SUBLICENSE (\"SOFTWARE LICENSE\").\n\n#  ------------------------------------------------------------------------------------------------\n\n#\n\n#  1. As used in this Software License, \"you\" means the individual downloading and/or\n\n#     using, reproducing, modifying, displaying and/or distributing the Software and\n\n#     the institution or entity which employs or is otherwise affiliated with such\n\n#     individual in connection therewith. The Section of Biomedical Image Analysis,\n\n#     Department of Radiology at the Universiy of Pennsylvania (\"SBIA\") hereby grants\n\n#     you, with right to sublicense, with respect to SBIA's rights in the software,\n\n#     and data, if any, which is the subject of this Software License (collectively,\n\n#     the \"Software\"), a royalty-free, non-exclusive license to use, reproduce, make\n\n#     derivative works of, display and distribute the Software, provided that:\n\n#     (a) you accept and adhere to all of the terms and conditions of this Software\n\n#     License; (b) in connection with any copy of or sublicense of all or any portion\n\n#     of the Software, all of the terms and conditions in this Software License shall\n\n#     appear in and shall apply to such copy and such sublicense, including without\n\n#     limitation all source and executable forms and on any user documentation,\n\n#     prefaced with the following words: \"All or portions of this licensed product\n\n#     (such portions are the \"Software\") have been obtained under license from the\n\n#     Section of Biomedical Image Analysis, Department of Radiology at the University\n\n#     of Pennsylvania and are subject to the following terms and conditions:\"\n\n#     (c) you preserve and maintain all applicable attributions, copyright notices\n\n#     and licenses included in or applicable to the Software; (d) modified versions\n\n#     of the Software must be clearly identified and marked as such, and must not\n\n#     be misrepresented as being the original Software; and (e) you consider making,\n\n#     but are under no obligation to make, the source code of any of your modifications\n\n#     to the Software freely available to others on an open source basis.\n\n#\n\n#  2. The license granted in this Software License includes without limitation the\n\n#     right to (i) incorporate the Software into proprietary programs (subject to\n\n#     any restrictions applicable to such programs), (ii) add your own copyright\n\n#     statement to your modifications of the Software, and (iii) provide additional\n\n#     or different license terms and conditions in your sublicenses of modifications\n\n#     of the Software; provided that in each case your use, reproduction or\n\n#     distribution of such modifications otherwise complies with the conditions\n\n#     stated in this Software License.\n\n#\n\n#  3. This Software License does not grant any rights with respect to third party\n\n#     software, except those rights that SBIA has been authorized by a third\n\n#     party to grant to you, and accordingly you are solely responsible for\n\n#     (i) obtaining any permissions from third parties that you need to use,\n\n#     reproduce, make derivative works of, display and distribute the Software,\n\n#     and (ii) informing your sublicensees, including without limitation your\n\n#     end-users, of their obligations to secure any such required permissions.\n\n#\n\n#  4. The Software has been designed for research purposes only and has not been\n\n#     reviewed or approved by the Food and Drug Administration or by any other\n\n#     agency. YOU ACKNOWLEDGE AND AGREE THAT CLINICAL APPLICATIONS ARE NEITHER\n\n#     RECOMMENDED NOR ADVISED. Any commercialization of the Software is at the\n\n#     sole risk of the party or parties engaged in such commercialization.\n\n#     You further agree to use, reproduce, make derivative works of, display\n\n#     and distribute the Software in compliance with all applicable governmental\n\n#     laws, regulations and orders, including without limitation those relating\n\n#     to export and import control.\n\n#\n\n#  5. The Software is provided \"AS IS\" and neither SBIA nor any contributor to\n\n#     the software (each a \"Contributor\") shall have any obligation to provide\n\n#     maintenance, support, updates, enhancements or modifications thereto.\n\n#     SBIA AND ALL CONTRIBUTORS SPECIFICALLY DISCLAIM ALL EXPRESS AND IMPLIED\n\n#     WARRANTIES OF ANY KIND INCLUDING, BUT NOT LIMITED TO, ANY WARRANTIES OF\n\n#     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.\n\n#     IN NO EVENT SHALL SBIA OR ANY CONTRIBUTOR BE LIABLE TO ANY PARTY FOR\n\n#     DIRECT, INDIRECT, SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES\n\n#     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY ARISING IN ANY WAY RELATED\n\n#     TO THE SOFTWARE, EVEN IF SBIA OR ANY CONTRIBUTOR HAS BEEN ADVISED OF THE\n\n#     POSSIBILITY OF SUCH DAMAGES. TO THE MAXIMUM EXTENT NOT PROHIBITED BY LAW OR\n\n#     REGULATION, YOU FURTHER ASSUME ALL LIABILITY FOR YOUR USE, REPRODUCTION,\n\n#     MAKING OF DERIVATIVE WORKS, DISPLAY, LICENSE OR DISTRIBUTION OF THE SOFTWARE\n\n#     AND AGREE TO INDEMNIFY AND HOLD HARMLESS SBIA AND ALL CONTRIBUTORS FROM\n\n#     AND AGAINST ANY AND ALL CLAIMS, SUITS, ACTIONS, DEMANDS AND JUDGMENTS ARISING\n\n#     THEREFROM.\n\n#\n\n#  6. None of the names, logos or trademarks of SBIA or any of SBIA's affiliates\n\n#     or any of the Contributors, or any funding agency, may be used to endorse\n\n#     or promote products produced in whole or in part by operation of the Software\n\n#     or derived from or based on the Software without specific prior written\n\n#     permission from the applicable party.\n\n#\n\n#  7. Any use, reproduction or distribution of the Software which is not in accordance\n\n#     with this Software License shall automatically revoke all rights granted to you\n\n#     under this Software License and render Paragraphs 1 and 2 of this Software\n\n#     License null and void.\n\n#\n\n#  8. This Software License does not grant any rights in or to any intellectual\n\n#     property owned by SBIA or any Contributor except those rights expressly\n\n#     granted hereunder.\n\n#\n\n#\n\n#  PART C. MISCELLANEOUS\n\n#  ---------------------\n\n#\n\n#  This Agreement shall be governed by and construed in accordance with the laws\n\n#  of The Commonwealth of Pennsylvania without regard to principles of conflicts\n\n#  of law. This Agreement shall supercede and replace any license terms that you\n\n#  may have agreed to previously with respect to Software from SBIA.\n\n#\n\n##############################################################################\n\n# @file  FindSphinx.cmake\n\n# @brief Find Sphinx documentation build tools.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_DIR @endtp\n\n#     <td>Installation directory of Sphinx tools. Can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_DIR @endtp\n\n#     <td>Alternative environment variable for @c Sphinx_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_FIND_COMPONENTS @endtp\n\n#     <td>Sphinx build tools to look for, i.e., 'apidoc' and/or 'build'.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_FOUND @endtp\n\n#     <td>Whether all or only the requested Sphinx build tools were found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_FOUND @endtp\n\n#     <td>Alias for @c Sphinx_FOUND.<td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_EXECUTABLE @endtp\n\n#     <td>Non-cached alias for @c Sphinx-build_EXECUTABLE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_EXECUTABLE @endtp\n\n#     <td>Python executable used to run sphinx-build. This is either the\n\n#         by default found Python interpreter or a specific version as\n\n#         specified by the shebang (#!) of the sphinx-build script.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_OPTIONS @endtp\n\n#     <td>A list of Python options extracted from the shebang (#!) of the\n\n#         sphinx-build script. The -E option is added by this module\n\n#         if the Python executable is not the system default to avoid\n\n#         problems with a differing setting of the @c PYTHONHOME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-build_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-build tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-apidoc_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-apidoc tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_STRING @endtp\n\n#     <td>Sphinx version found e.g. 1.1.2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MAJOR @endtp\n\n#     <td>Sphinx major version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MINOR @endtp\n\n#     <td>Sphinx minor version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_PATCH @endtp\n\n#     <td>Sphinx patch version found e.g. 2.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# default components to look for\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find components, i.e., build tools\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Python executable used by Sphinx\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract python executable from shebang of sphinx-build\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# does not match \"#!/usr/bin/env python\" !\n",
        "Line" : 225,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# this is done to avoid problems with multiple Python versions being installed\n\n# remember: CMake command if(STR EQUAL STR) is bad and may cause many troubles !\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Sphinx version\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# intentionally use invalid -h option here as the help that is shown then\n\n# will include the Sphinx version information\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The sphinx version can also contain a \"b\" instead of the last dot.\n\n# For example \"Sphinx v1.2b1\" so we cannot just split on \".\"\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# v1.2.0 -> v1.2\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# compatibility with FindPythonInterp.cmake and FindPerl.cmake\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set SPHINX_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  VERSION_VAR # This isn't available until CMake 2.8.8 so don't use it.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set Sphinx_DIR\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "3rdparty/jansson-2.7/cmake/jansson_config.h.cmake" : {
      "ObjectId" : "43e36c573742a0bcceedce475b890550fe8eb166",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * Copyright (c) 2010-2014 Petri Lehtinen <petri@digip.org>\n *\n * Jansson is free software; you can redistribute it and/or modify\n * it under the terms of the MIT license. See LICENSE for details.\n *\n *\n * This file specifies a part of the site-specific configuration for\n * Jansson, namely those things that affect the public API in\n * jansson.h.\n *\n * The CMake system will generate the jansson_config.h file and\n * copy it to the build and install directories.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define this so that we can disable scattered automake configuration in source files */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Note: when using cmake, JSON_INTEGER_IS_LONG_LONG is not defined nor used,\n * as we will also check for __int64 etc types.\n * (the definition was used in the automake system) */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Bring in the cmake-detected defines */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Include our standard type header for the integer typedef */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* If your compiler supports the inline keyword in C, JSON_INLINE is\n   defined to `inline', otherwise empty. In C++, the inline is always\n   supported. */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* If locale.h and localeconv() are available, define to 1, otherwise to 0. */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "3rdparty/jansson-2.7/cmake/jansson_private_config.h.cmake" : {
      "ObjectId" : "16e7eb798b2750513d2fc538deb2b2f2f3dc0560",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "3rdparty/jansson-2.7/doc/Makefile.am" : {
      "ObjectId" : "5069623fa39866121748b7d58f893daa269b6eb0",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/jansson-2.7/src/Makefile.am" : {
      "ObjectId" : "b5db968eef91c2604c4f3741c82e9d6d2c8c5599",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/jansson-2.7/test/Makefile.am" : {
      "ObjectId" : "86d1614e06a88ed49c42678ca59745cd63022d11",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/jansson-2.7/test/bin/Makefile.am" : {
      "ObjectId" : "63b6dce7e259f62ab5bf85be0c5165ef522886c9",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 4,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "3rdparty/jansson-2.7/test/suites/Makefile.am" : {
      "ObjectId" : "a53eb07f13c81c52b6c73c1ba26b1be83ef61e38",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/jansson-2.7/test/suites/api/Makefile.am" : {
      "ObjectId" : "1dbdd2b8968f9abb8d9a5c88c4b67bd2220299d7",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 33,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "3rdparty/jpeg-8c/Makefile.am" : {
      "ObjectId" : "b4b46005804c572bab5cdda6905617c547ca5db2",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\r\n\n#\r\n\n#  Automake Makefile for the JPEG library\r\n\n#\r\n\n#  This file is written by Bob Friesenhahn, Guido Vollbeding\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources to build library\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# System dependent sources\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Headers which are installed to support the library\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers which are not installed\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Manual pages (Automake uses 'MANS' for itself)\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other documentation files\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Makefiles for various systems\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Configuration files\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Support scripts for configure\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Miscellaneous support files\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test support files\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libtool libraries to build\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Library sources for libjpeg.la\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LDFLAGS for libjpeg.la\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executables to build\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable sources & libs\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Manual pages to install\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Headers to install\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Other distributed headers\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Other distributed files\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Files to be cleaned\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Install jconfig.h\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Uninstall jconfig.h\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Run tests\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "3rdparty/libogg-1.2.2/Makefile.am" : {
      "ObjectId" : "bce2ad4c2499fc1f2d5fbc09a4ccb8d3a4894254",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AUTOMAKE_OPTIONS = foreign 1.6 dist-zip\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/libogg-1.2.2/doc/Makefile.am" : {
      "ObjectId" : "9c2c316f871a82ffbe9860ed4df83a1e347df2e0",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libogg-1.2.2/doc/libogg/Makefile.am" : {
      "ObjectId" : "9eb7d341cbec70817e29463d85d69cd2fa2fec84",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libogg-1.2.2/include/Makefile.am" : {
      "ObjectId" : "0084e4d8298a2ec161888420af70ba0f1f3cc778",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libogg-1.2.2/include/ogg/Makefile.am" : {
      "ObjectId" : "142699d35608e1bbe175746ef0073f8f2e01fb61",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libogg-1.2.2/src/Makefile.am" : {
      "ObjectId" : "b207e7865bfce7ca6cece9b2747b128754d32198",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/libogg-1.2.2/win32/Makefile" : {
      "ObjectId" : "83bd550af893175905580981587bbfd976f82e4d",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.in generated by automake 1.6.3 from Makefile.am.\n\n# win32/Makefile.  Generated from Makefile.in by configure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n\n# Free Software Foundation, Inc.\n\n# This Makefile.in is free software; the Free Software Foundation\n\n# gives unlimited permission to copy and/or distribute it,\n\n# with or without modifications, as long as this notice is preserved.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n\n# PARTICULAR PURPOSE.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)\n",
        "Line" : 123,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# $(srcdir)/Makefile.in  $(top_builddir)/config.status\n",
        "Line" : 126,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# Tell versions [3.59,3.63) of GNU make to not export all variables.\n\n# Otherwise a system limit (for SysV at least) may be exceeded.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "3rdparty/libvorbis-1.3.2/Makefile.am" : {
      "ObjectId" : "7ddc44261ecc7412f9d87d67971662533ea9bf2a",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/doc/Makefile.am" : {
      "ObjectId" : "2870528d1291ae5539c50c81da532e76bd8ac756",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### all of the static docs, commited to SVN and included as is\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bits needed by the spec\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: also needed here\n\n#\twhite-xifish.png \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# conditionally make the generated documentation\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# these are expensive; only remove if we have to\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# explicit rules for generating docs\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "3rdparty/libvorbis-1.3.2/doc/libvorbis/Makefile.am" : {
      "ObjectId" : "0bcc135b75d8069ecea9180f9672f28a7323d611",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/doc/vorbisenc/Makefile.am" : {
      "ObjectId" : "bbab3c5ba4b0586181badf250fef2ae1fa8b88e9",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/doc/vorbisfile/Makefile.am" : {
      "ObjectId" : "fb27d44ae8a4fbfdc7df92de8e4f149b6521fe70",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/examples/Makefile.am" : {
      "ObjectId" : "45189763e468b857c071d2c3bdd87f86e4cab771",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment to build static executables from the example code\n\n#LDFLAGS = -all-static \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/libvorbis-1.3.2/include/Makefile.am" : {
      "ObjectId" : "0f34fab4ca61c0ef3f650a643f53286d532ab09f",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/include/vorbis/Makefile.am" : {
      "ObjectId" : "dbba34e55974a19203f0c094e91a3ed69298e150",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/lib/Makefile.am" : {
      "ObjectId" : "50f7ea4f293e79bfab4a5f8bb307a8f24435686c",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#vorbis_selftests = test_codebook test_sharedbook\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test_codebook_SOURCES = codebook.c\n\n#test_codebook_CFLAGS = -D_V_SELFTEST\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# recurse for alternate targets\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3rdparty/libvorbis-1.3.2/lib/books/Makefile.am" : {
      "ObjectId" : "3697a7177ec1c115ccd1ef4e9412ce8c6bf08f39",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/lib/books/coupled/Makefile.am" : {
      "ObjectId" : "1115201dd09248cd89d8b7af0fbe89cef2236e3d",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/lib/books/floor/Makefile.am" : {
      "ObjectId" : "272ab1a28c68d4f0393a7cd41ba6f1f50f4f85fc",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/lib/books/uncoupled/Makefile.am" : {
      "ObjectId" : "93ff417c8f13e5a4eff7884acc146cc2f153ac92",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/lib/modes/Makefile.am" : {
      "ObjectId" : "5c7ffefaa4a66ac02e8ab68a422e435887e87e9a",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/m4/Makefile.am" : {
      "ObjectId" : "cd184850f71e5db41c307fbdfcedb3f86edb9056",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/test/Makefile.am" : {
      "ObjectId" : "5f7e32af63ecdbb4bf37081e4d41743796dcdc8a",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libvorbis-1.3.2/vq/Makefile.am" : {
      "ObjectId" : "6fd105c5c0b157100d950f4f50392a6bb5f363ae",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/libwebp-0.4.1/Makefile.am" : {
      "ObjectId" : "ceee75d46cc11b23e6e292b0a1f936c3e085a5a4",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/examples/Makefile.am" : {
      "ObjectId" : "a333c6dc0c625d1e67f00b2cfbd907426dc74c88",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/man/Makefile.am" : {
      "ObjectId" : "f896ef9397326c432ac616a6c0d73192703253e6",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/src/Makefile.am" : {
      "ObjectId" : "d4bd3caf99bc7e3a5bab13783d189ee7ff1d841a",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The mux and demux libraries depend on libwebp, thus the '.' to force the\n\n# build order so it's available to them.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use '-no-undefined' to declare that libwebp does not depend on any libraries\n\n# other than the ones listed on the command line, i.e., after linking, it will\n\n# not have unresolved symbols. Some platforms (Windows among them) require all\n\n# symbols in shared libraries to be resolved at library creation.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/libwebp-0.4.1/src/dec/Makefile.am" : {
      "ObjectId" : "c3b6f7903fe7ee0f497b31c3dbae3e3580de2b16",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/src/demux/Makefile.am" : {
      "ObjectId" : "8fdc28ea09ca8a5d29218ab3a238c9883977c1fc",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/src/dsp/Makefile.am" : {
      "ObjectId" : "02c964443b5dd1d12dfcd54dfc935b0ffd2f2b51",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/src/enc/Makefile.am" : {
      "ObjectId" : "0dc375b8401cfd18ee9862843ecb47650baa4cf9",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/src/mux/Makefile.am" : {
      "ObjectId" : "37f96726a24e0ad4108a8bd87dac4a54880aa019",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libwebp-0.4.1/src/utils/Makefile.am" : {
      "ObjectId" : "534cc836e3184c9dfc65f94f3d4d105d8636ad4e",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/lpng140/CMakeLists.txt" : {
      "ObjectId" : "6f7413f3e663789e0fea081d2c0203967daaa908",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# workaround CMake 2.4.x bug\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Copyright (C) 2007-2012 Glenn Randers-Pehrson\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed packages\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# not needed on windows\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#TODO:\n\n# PNG_CONSOLE_IO_SUPPORTED\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# maybe needs improving, but currently I don't know when we can enable what :)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# this env var is normally only set on win64\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#if building msvc static this has NOT to be defined\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#\n\n# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#   VERSION 14.${PNGLIB_RELEASE}.1.4.20\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# future proof\n",
        "Line" : 279,
        "CharPositionInLine" : 38
      },
      "26" : {
        "Text" : "# INSTALL\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng14.dll.a on Cygwin\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Install man pages\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "3rdparty/lua-5.1.3/Makefile" : {
      "ObjectId" : "fec201156a9ea3881d67ead48330b2fa5c6f3f51",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for installing Lua\n\n# see INSTALL for installation instructions\n\n# see src/Makefile and src/luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src directory, so take care\n\n# if INSTALL_TOP is not an absolute path. (Man pages are installed from the\n\n# doc directory.) You may want to make these paths consistent with LUA_ROOT,\n\n# LUA_LDIR, and LUA_CDIR in luaconf.h (and also with etc/lua.pc).\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If you don't have \"install\" (unlikely) then get install-sh at\n\n#\thttp://dev.w3.org/cvsweb/libwww/config/install-sh\n\n# or use cp instead.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Utilities.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# What to install.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# make may get confused with test/ and INSTALL in a case-insensitive OS\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# echo config parameters\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# echo private config parameters\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters as Lua code\n\n# uncomment the last sed expression if you want nil instead of empty strings\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-e 's/\"\"/nil/'\n",
        "Line" : 114,
        "CharPositionInLine" : 58
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "3rdparty/lua-5.1.3/etc/Makefile" : {
      "ObjectId" : "6d00008d98157eb4c3c83db0e74682f756c8104d",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for Lua etc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MYLIBS= -lm -Wl,-E -ldl -lreadline -lhistory -lncurses\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/lua-5.1.3/src/Makefile" : {
      "ObjectId" : "e190ab740ac4ccae1b247894ba6054198cb8874f",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for building Lua\n\n# see ../INSTALL for installation instructions\n\n# see ../Makefile and luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# convenience targets for popular platforms\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use this on Mac OS X 10.3-\n\n#\t$(MAKE) all MYCFLAGS=-DLUA_USE_MACOSX\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "3rdparty/lua-5.2.2/Makefile" : {
      "ObjectId" : "bd9515fd84dad9bfbbdb51bdce3f7a2cf6fb5b8b",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "3rdparty/lua-5.2.2/src/Makefile" : {
      "ObjectId" : "fea895bc065711b62bee958d248397e7cb77c9fe",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3rdparty/luafilesystem-1.5.0/Makefile" : {
      "ObjectId" : "6b54f2c779dfba04a4f13b852a6dad0e0b64be4a",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# $Id: Makefile,v 1.36 2009/09/21 17:02:44 mascarenhas Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/luasql-2.2.0/Makefile" : {
      "ObjectId" : "e24f8acc491ec78d18d0337ad7fb7f25885c45e0",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# $Id: Makefile,v 1.56 2008/05/30 17:21:18 tomas Exp $\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/luasql-2.2.0/src/jdbc/Makefile" : {
      "ObjectId" : "455f73aa85395bc71bf216cb65725ea5b32c0667",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# JDBC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#source dir\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#lib dir\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#build dir\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#java compiler\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#luajava jar name\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#compilation options\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#package name\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3rdparty/luasql-2.2.0/src/jdbc/build.xml" : {
      "ObjectId" : "50d8efa1fe267e54f62a8bce677b7c7bffab52a2",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " ======================================================================= ",
        "Line" : 2,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : " Build file                                                              ",
        "Line" : 3,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : " ======================================================================= ",
        "Line" : 4,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " =================================================================== ",
        "Line" : 6,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Initializes some variables                                          ",
        "Line" : 7,
        "CharPositionInLine" : 78
      },
      "5" : {
        "Text" : " =================================================================== ",
        "Line" : 8,
        "CharPositionInLine" : 78
      },
      "6" : {
        "Text" : " ================================================================== ",
        "Line" : 15,
        "CharPositionInLine" : 77
      },
      "7" : {
        "Text" : " Prints useful build environment values                             ",
        "Line" : 16,
        "CharPositionInLine" : 77
      },
      "8" : {
        "Text" : " ================================================================== ",
        "Line" : 17,
        "CharPositionInLine" : 77
      },
      "9" : {
        "Text" : " =================================================================== ",
        "Line" : 25,
        "CharPositionInLine" : 78
      },
      "10" : {
        "Text" : " Prepare to compile                                                  ",
        "Line" : 26,
        "CharPositionInLine" : 78
      },
      "11" : {
        "Text" : " =================================================================== ",
        "Line" : 27,
        "CharPositionInLine" : 78
      },
      "12" : {
        "Text" : " =================================================================== ",
        "Line" : 31,
        "CharPositionInLine" : 78
      },
      "13" : {
        "Text" : " Compile the java files                                              ",
        "Line" : 32,
        "CharPositionInLine" : 78
      },
      "14" : {
        "Text" : " =================================================================== ",
        "Line" : 33,
        "CharPositionInLine" : 78
      },
      "15" : {
        "Text" : " =================================================================== ",
        "Line" : 45,
        "CharPositionInLine" : 78
      },
      "16" : {
        "Text" : " Generate the JAR                                                    ",
        "Line" : 46,
        "CharPositionInLine" : 78
      },
      "17" : {
        "Text" : " =================================================================== ",
        "Line" : 47,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 18
    },
    "3rdparty/mongoose/Makefile" : {
      "ObjectId" : "716d0d28b17ae740d38dee66b52b683350a4fa98",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile is part of Mongoose web server project,\n\n# https://github.com/valenok/mongoose\n\n#\n\n# Example custom build:\n\n# COPT=\"-g -O0 -DNO_SSL_DL -DUSE_LUA -llua -lcrypto -lssl\" make linux\n\n#\n\n# Flags are:\n\n# -DHAVE_MD5              - use system md5 library (-2kb)\n\n# -DNDEBUG                - strip off all debug code (-5kb)\n\n# -DDEBUG                 - build debug version (very noisy) (+7kb)\n\n# -DNO_CGI                - disable CGI support (-5kb)\n\n# -DNO_SSL                - disable SSL functionality (-2kb)\n\n# -DNO_SSL_DL             - link against system libssl library (-1kb)\n\n# -DCONFIG_FILE=\\\"file\\\"  - use `file' as the default config file\n\n# -DSSL_LIB=\\\"libssl.so.<version>\\\"   - use system versioned SSL shared object\n\n# -DCRYPTO_LIB=\\\"libcrypto.so.<version>\\\" - use system versioned CRYPTO so\n\n# -DUSE_LUA               - embed Lua in Mongoose (+100kb)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To build with Lua, download and unzip Lua 5.2.1 source code into the\n\n# mongoose directory, and then add $(LUA_SOURCES) to CFLAGS\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Using Visual Studio 6.0. To build Mongoose:\n\n#  Set MSVC variable below to where VS 6.0 is installed on your system\n\n#  Run \"PATH_TO_VC6\\bin\\nmake windows\"\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#DBG         = /Zi /Od\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Stock windows binary builds with Lua and YASSL library.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To build with lua, make sure you have Lua unpacked into lua-5.2.1 directory\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure that the compiler flags come last in the compilation string.\n\n# If not so, this can break some on some Linux distros which use\n\n# \"-Wl,--as-needed\" turned on by default  in cc command.\n\n# Also, this is turned in many other distros in static linkage builds.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# For codesign to work in non-interactive mode, unlock login keychain:\n\n# security unlock ~/Library/Keychains/login.keychain\n\n# See e.g. http://lists.apple.com/archives/apple-cdsa/2008/Jan/msg00027.html\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 112:22 token recognition error at: '\\s'\nline 112:41 token recognition error at: '\\s'\nline 112:44 token recognition error at: '\"(\\S'\nline 112:413 token recognition error at: '\" -srcfolder dmg -ov #; rm -rf dmg\\n\\nu:\\n\\t$(CC) test/unit_test.c -o unit_test -I. -I$(LUA) $(LUA_SOURCES) \\\\n          $(CFLAGS) -g -O0\\n\\t./unit_test\\n\\nw:\\n\\t$(CL) test/unit_test.c $(LUA_SOURCES) \\\\n          $(YASSL_SOURCES) $(YASSL_FLAGS) /DNO_SSL_DL \\\\n          $(MSLIB) /out:unit_test.exe\\n\\t./unit_test.exe\\n\\nwindows:\\n\\t$(MSVC)/bin/rc build\\res.rc\\n\\t$(CL) main.c mongoose.c build/lsqlite3.c build/sqlite3.c \\\\n          $(YASSL_SOURCES) $(YASSL_FLAGS) /DNO_SSL_DL \\\\n          $(LUA_SOURCES) /DUSE_LUA /DUSE_LUA_SQLITE3 /DLUA_COMPAT_ALL \\\\n          $(MSLIB) build\\res.res /out:$(PROG).exe /subsystem:windows\\n\\n# Build for Windows under MinGW\\n#MINGWDBG= -DDEBUG -O0 -ggdb\\nMINGWDBG= -DNDEBUG -Os\\nMINGWOPT=  -W -Wall -mthreads -Wl,--subsystem,console $(MINGWDBG) -DHAVE_STDINT $(GCC_WARNINGS) $(COPT)\\nmingw:\\n\\twindres build\\res.rc build\\res.o\\n\\t$(CC) $(MINGWOPT) mongoose.c -lws2_32 \\\\n\\t\\t-shared -Wl,--out-implib=$(PROG).lib -o $(PROG).dll\\n\\t$(CC) $(MINGWOPT) mongoose.c main.c build\\res.o \\\\n\\t-lws2_32 -ladvapi32 -lcomdlg32 -o $(PROG).exe\\n\\n# Build for Windows under Cygwin\\n#CYGWINDBG= -DDEBUG -O0 -ggdb\\nCYGWINDBG= -DNDEBUG -Os\\nCYGWINOPT=  -W -Wall -mthreads -Wl,--subsystem,console $(CYGWINDBG) -DHAVE_STDINT $(GCC_WARNINGS) $(COPT)\\ncygwin:\\n\\twindres ./build/res.rc ./build/res.o\\n\\t$(CC) $(CYGWINOPT) mongoose.c -lws2_32 \\\\n\\t\\t-shared -Wl,--out-implib=$(PROG).lib -o $(PROG).dll\\n\\t$(CC) $(CYGWINOPT) -Ibuild mongoose.c main.c ./build/res.o \\\\n\\t-lws2_32 -ladvapi32 -o $(PROG).exe\\n\\ntests:\\n\\tperl test/test.pl $(TEST)\\n\\ntarball: clean\\n\\tF=mongoose-`perl -lne '/define\\s'\nline 158:50 token recognition error at: '\\s'\nline 158:53 token recognition error at: '\"(\\S'\nline 158:59 token recognition error at: '\"/ and print $$1' mongoose.c`.tgz ; cd .. && tar -czf x mongoose/{LICENSE,Makefile,examples,test,build,*.[ch],*.md} && mv x mongoose/$$F\\n\\nrelease: tarball cocoa\\n\\twine make windows\\n\\tV=`perl -lne '/define\\s'\nline 162:41 token recognition error at: '\\s'\nline 162:44 token recognition error at: '\"(\\S'\nline 162:50 token recognition error at: '\"/ and print $$1' mongoose.c`; upx mongoose.exe; cp mongoose.exe mongoose-$$V.exe; cp mongoose.exe mongoose_php_bundle/; zip -r mongoose_php_bundle_$$V.zip mongoose_php_bundle/\\n\\nclean:\\n\\tcd examples && $(MAKE) clean\\n\\trm -rf *.o *.core $(PROG) *.obj *.so $(PROG).txt *.dSYM *.tgz \\\\n\\t$(PROG).exe *.dll *.lib build/res.o build/res.RES *.dSYM *.zip *.pdb \\\\n\\t*.exe *.dmg\\n\\n\u0000'\n"
    },
    "3rdparty/mongoose/examples/Makefile" : {
      "ObjectId" : "16294c5aa634fb5243833c97201b0162b9a6ec34",
      "LastModified" : "2018-08-18T09:45:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/CMakeLists.txt" : {
      "ObjectId" : "0128c7ac7d3e6aaa5cd614f2305f43ab95ee77d2",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the following should match the versions in Xcode project file:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# General settings & flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the platform\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 142,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "# Default option knobs\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compiler info\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 187,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# When building shared lib for Windows with MinGW,\n\n# avoid the DLL having a \"lib\" prefix\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks\n\n# in this file need to change that, so remember the original value, and\n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# General includes\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library\n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# General source files\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 613,
        "CharPositionInLine" : 31
      },
      "33" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 667,
        "CharPositionInLine" : 41
      },
      "37" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 683,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 752,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Core stuff\n",
        "Line" : 875,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#enable gles\n",
        "Line" : 882,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 915,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#enable gles\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 997,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# We've already found the header, so REQUIRE the lib to be present\n",
        "Line" : 1068,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1089,
        "CharPositionInLine" : 20
      },
      "53" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1170,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1177,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1190,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1218,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# headers needed elsewhere ...\n",
        "Line" : 1226,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1251,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1294,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1297,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1379,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1381,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1390,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1394,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1397,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1406,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1466,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1472,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1502,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1547,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1574,
        "CharPositionInLine" : 33
      },
      "73" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1601,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1617,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1627,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1642,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1674,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1687,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1704,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1733,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1759,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1777,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1788,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "##### Tests #####\n",
        "Line" : 1798,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1807,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1813,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# \".so\", \".dylib\", etc.\n",
        "Line" : 1859,
        "CharPositionInLine" : 46
      },
      "91" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1870,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1881,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "3rdparty/sdl2-2.0.9/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/android-project/app/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/sdl2-2.0.9/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "3rdparty/sdl2-2.0.9/cmake/sdlchecks.cmake" : {
      "ObjectId" : "4a2c3ed57856e3a43ab48f5f7cd40db9c4b7043b",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 510,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 665,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 707,
        "CharPositionInLine" : 14
      },
      "22" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 842,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 852,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Run some tests\n",
        "Line" : 884,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 951,
        "CharPositionInLine" : 65
      },
      "31" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "3rdparty/sdl2-2.0.9/include/SDL_config.h.cmake" : {
      "ObjectId" : "48dd2d41b785186e3eaced3092cefe6157f300e6",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various sensor drivers */",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system power support */",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/Makefile.am" : {
      "ObjectId" : "3382a1f040bcd84e64b5b4d49f3bdd06df9d4604",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/hidtest/Makefile.am" : {
      "ObjectId" : "d2786445a316ce0eb0e1033eb599ebf6fddd29d4",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/ios/Makefile.am" : {
      "ObjectId" : "1f8f2cec66a275ecdb5a10322fc63a7c924da979",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/libusb/Makefile.am" : {
      "ObjectId" : "13c9d355178815e6a3fb899501e30dbd1cd032ef",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/linux/Makefile.am" : {
      "ObjectId" : "230eeb75a207745621b72a1a12bddf1c182cdade",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/mac/Makefile.am" : {
      "ObjectId" : "23d96e08fb6c25a41e940a8dd0900353231dcf1c",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/testgui/Makefile.am" : {
      "ObjectId" : "1c02f3f2c3559ba327db83c3d622221ef0c008ae",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rules for copying the binary and its dependencies into the app bundle.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/sdl2-2.0.9/src/hidapi/windows/Makefile.am" : {
      "ObjectId" : "97e261ac9ee1edaab169dbf068340240c823a257",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sdl2-2.0.9/test/CMakeLists.txt" : {
      "ObjectId" : "3c25c5c7c98790944cc22c408cec58152544b0e6",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Global settings for all of the test targets\n\n# FIXME: is this wrong?\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Parent directory CMakeLists.txt only sets these for mingw/cygwin,\n\n# but we need them for VS as well.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: Dummy target to cause the resource files to be copied to the build directory.\n\n# Need to make it an executable so we can use the TARGET_FILE_DIR generator expression.\n\n# This is needed so they get copied to the correct Debug/Release subdirectory in Xcode.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Might be easier to make all targets depend on the resources...?\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3rdparty/sdl2-2.0.9/test/nacl/Makefile" : {
      "ObjectId" : "9ca166c12742e3c6ae23d6c7ac84a421244e9c1d",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2013 The Chromium Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile based on shared rules provided by the Native Client SDK.\n\n# See README.Makefiles for more details.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ppapi_simple and SDL2 end up being listed twice due to dependency solving issues -- Gabriel\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build rules generated by macros from common.mk:\n\n# Overriden macro from NACL SDK to be able to customize the library search path -- Gabriel\n\n# Specific Link Macro \n\n#\n\n# $1 = Target Name\n\n# $2 = List of inputs\n\n# $3 = List of libs\n\n# $4 = List of deps\n\n# $5 = List of lib dirs\n\n# $6 = Other Linker Args\n\n#\n\n# For debugging, we translate the pre-finalized .bc file.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3rdparty/sfmt-1.4/Makefile" : {
      "ObjectId" : "13b1bb6d98d977560edcc66be6477fa50ccb5a63",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# @file  Makefile\n\n# @brief Makefile\n\n#\n\n# @author Mutsuo Saito (Hiroshima University)\n\n# @author Makoto Matsumoto (Hiroshima University)\n\n#\n\n# Copyright (C) 2007 Mutsuo Saito, Makoto Matsumoto and Hiroshima\n\n# University. All rights reserved.\n\n#\n\n# The new BSD License is applied to this software.\n\n# see LICENSE.txt\n\n#\n\n# @note\n\n# We could comple test-sse2-Mxxx using gcc 3.4.4 of cygwin.\n\n# We could comple test-sse2-Mxxx using gcc 4.0.1 of Linux.\n\n# We coundn't comple test-sse2-Mxxx using gcc 3.3.2 of Linux.\n\n# We could comple test-alti-Mxxx using gcc 3.3 of osx.\n\n# We could comple test-alti-Mxxx using gcc 4.0 of osx.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-Winline\n",
        "Line" : 20,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#WARN = -Wmissing-prototypes -Wall -W\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--param inline-unit-growth=500 --param large-function-growth=900 #for gcc 4\n\n#STD =\n\n#STD = -std=c89 -pedantic\n\n#STD = -std=c99 -pedantic\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ==========================================================\n\n# comment out or EDIT following lines to get max performance\n\n# ==========================================================\n\n# --------------------\n\n# for gcc 4\n\n# --------------------\n\n#CCFLAGS += --param inline-unit-growth=500 \\\n#--param large-function-growth=900\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --------------------\n\n# for icl\n\n# --------------------\n\n#CC = icl /Wcheck /O3 /QxB /Qprefetch\n\n# -----------------\n\n# for PowerPC\n\n# -----------------\n\n#CCFLAGS += -arch ppc\n\n# -----------------\n\n# for Pentium M\n\n# -----------------\n\n#CCFLAGS += -march=prescott\n\n# -----------------\n\n# for Athlon 64\n\n# -----------------\n\n#CCFLAGS += -march=athlon64\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3rdparty/zlib-1.2.11/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "3rdparty/zlib-1.2.11/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib-1.2.11/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib-1.2.11/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib-1.2.11/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/zlib-1.2.11/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/zlib-1.2.11/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib-1.2.11/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "android-studio/app/proguard-rules.pro" : {
      "ObjectId" : "dafb72ef25ca45015e03ee80eaf1614e546a2c4e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/patrick/Library/Android/sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "android-studio/libmoai/proguard-rules.pro" : {
      "ObjectId" : "2f5f4b59bcd2707d0a014fb8e13d88d048268ef7",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in C:\\dev\\android-sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/cmake/CMakeLists.txt" : {
      "ObjectId" : "5a2bef853cf209e08f5fce35c90efc4ab982d069",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This is the CMake build script for Moai SDK library\n\n# Please, don't modify the flags inside this script.\n\n# To create a custom version of Moai SDK use a bash script\n\n# like the ones in bin/ ( bin/build-linux_x64 for example )\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setup the \"MOAI_ROOT\" variable\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#common setup\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install target so we can use a prebuilt one next time\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/cmake/cmake-modules/FindXCB.cmake" : {
      "ObjectId" : "fa3605443da76f96706de36fe38f5c1e24742937",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find XCB on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   XCB_FOUND       - True if xcb is available\n\n#   XCB_LIBRARIES   - Link these to use xcb\n\n#   XCB_INCLUDE_DIR - Include directory for xcb\n\n#   XCB_DEFINITIONS - Compiler flags for using xcb\n\n#\n\n# In addition the following more fine grained variables will be defined:\n\n#\n\n#   XCB_XCB_FOUND        XCB_XCB_INCLUDE_DIR        XCB_XCB_LIBRARIES\n\n#   XCB_UTIL_FOUND       XCB_UTIL_INCLUDE_DIR       XCB_UTIL_LIBRARIES\n\n#   XCB_COMPOSITE_FOUND  XCB_COMPOSITE_INCLUDE_DIR  XCB_COMPOSITE_LIBRARIES\n\n#   XCB_DAMAGE_FOUND     XCB_DAMAGE_INCLUDE_DIR     XCB_DAMAGE_LIBRARIES\n\n#   XCB_XFIXES_FOUND     XCB_XFIXES_INCLUDE_DIR     XCB_XFIXES_LIBRARIES\n\n#   XCB_RENDER_FOUND     XCB_RENDER_INCLUDE_DIR     XCB_RENDER_LIBRARIES\n\n#   XCB_RANDR_FOUND      XCB_RANDR_INCLUDE_DIR      XCB_RANDR_LIBRARIES\n\n#   XCB_SHAPE_FOUND      XCB_SHAPE_INCLUDE_DIR      XCB_SHAPE_LIBRARIES\n\n#   XCB_DRI2_FOUND       XCB_DRI2_INCLUDE_DIR       XCB_DRI2_LIBRARIES\n\n#   XCB_GLX_FOUND        XCB_GLX_INCLUDE_DIR        XCB_GLX_LIBRARIES\n\n#   XCB_SHM_FOUND        XCB_SHM_INCLUDE_DIR        XCB_SHM_LIBRARIES\n\n#   XCB_XV_FOUND         XCB_XV_INCLUDE_DIR         XCB_XV_LIBRARIES\n\n#   XCB_SYNC_FOUND       XCB_SYNC_INCLUDE_DIR       XCB_SYNC_LIBRARIES\n\n#   XCB_XTEST_FOUND      XCB_XTEST_INCLUDE_DIR      XCB_XTEST_LIBRARIES\n\n#   XCB_ICCCM_FOUND      XCB_ICCCM_INCLUDE_DIR      XCB_ICCCM_LIBRARIES\n\n#   XCB_EWMH_FOUND       XCB_EWMH_INCLUDE_DIR       XCB_EWMH_LIBRARIES\n\n#   XCB_IMAGE_FOUND      XCB_IMAGE_INCLUDE_DIR      XCB_IMAGE_LIBRARIES\n\n#   XCB_RENDERUTIL_FOUND XCB_RENDERUTIL_INCLUDE_DIR XCB_RENDERUTIL_LIBRARIES\n\n#\n\n# Copyright (c) 2011 Fredrik Höglund <fredrik@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In the cache already\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/cmake/cmake-modules/libmoai-setup.cmake" : {
      "ObjectId" : "9b2eee5c168adaeeca0122a033ad78b91628d09e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/cmake-modules/module-config.cmake" : {
      "ObjectId" : "42b7dd592ca8521bcc49b12054d0a92467d865cc",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/cmake-modules/module-setup.cmake" : {
      "ObjectId" : "993dd85a0d6346f48bdebb0fc32c9276f551e4b8",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Optional modules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Moai SDK Extensions\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#setup our defines for optional modules.\n\n#if we have a prebuilt library, it is too late for most of these as they will already exist in the library\n\n#instead we rely on the moai_config.h that was generated during the lib build phase.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Flags for optional modules\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/cmake/cmake-modules/platform-android.cmake" : {
      "ObjectId" : "ebfce870616b7e2558f76e48980f7415bb06c477",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/cmake-modules/platform-blackberry.cmake" : {
      "ObjectId" : "d1c5f68659f666d74acdf8bb52fa792c9ee83a8c",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -V4.6.3,gcc_ntoarmv7le -w1 -D__QNX__\")\n\n# set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D__QNX__ -V4.6.3,gcc_ntoarmv7le_cpp\")\n",
        "Line" : 1,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/cmake-modules/platform-common.cmake" : {
      "ObjectId" : "9df22864f3b23d7a3fb27a9e3611746b76a7f558",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Virtual File System Force include\n\n# this should force all of moai to have this include and then we remove it from flags in zl-vfs\n\n# easier than adding it to each project!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Set as debug\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build testing code\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/cmake-modules/platform-html.cmake" : {
      "ObjectId" : "24104a063c50708ab014d60a677d312fad71df2d",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Workaround batchfiles (cmd.exe) not being able to handle long command lines\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/cmake/cmake-modules/platform-ios.cmake" : {
      "ObjectId" : "cfa61cc45d7d0f93b82f0d280141c2ba59b85e5b",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#default in ios7 is libc++ but some of our ad support libs are libstdc++ so force the lot to build as libstdc++\n\n#set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libstdc++\" )\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/cmake-modules/platform-linux.cmake" : {
      "ObjectId" : "7b61c0c2de1c1e5fee7d4c7380344773577446c5",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package ( OpenGL REQUIRED )\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/cmake/cmake-modules/platform-osx.cmake" : {
      "ObjectId" : "6e3565eacedbe937ddde4354b682b055b9ed30e7",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package ( OpenGL REQUIRED )\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/cmake/cmake-modules/platform-windows.cmake" : {
      "ObjectId" : "146414daa847a3e1b9896ca0127433be9a258cb9",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find_package ( OpenGL REQUIRED )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include debug info inside the libs (not as .pdb files)\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#work around bug with mingw in release mode failing at link time due to different sized duplicate segments! Optimise for size instead\n",
        "Line" : 12,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "#lets have 32bit for windows (for luajits sake)\n",
        "Line" : 15,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "#set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS}  -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -D_WIN32_IE=0x0500 \" )\n\n#SET ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DWINVER=0x0600 -D_WIN32_WINNT=0x0600 -D_WIN32_IE=0x0500\"  )",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/cmake/hosts/host-android/CMakeLists.txt" : {
      "ObjectId" : "d4aa70ef5fea1073061b73879323f7749ad45700",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup the \"MOAI_ROOT\" variable\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/hosts/host-html/CMakeLists.txt" : {
      "ObjectId" : "a7db1b9839de84c5d3cb7284ab89c7f29d5a0f06",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#build shared lib (libmoaishared.so) and moaijs.js\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setup the \"MOAI_ROOT\" variable\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--closure 0 --minify 0\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/hosts/host-ios/CMakeLists.txt" : {
      "ObjectId" : "aa16ede7b5f2a6ba340791925342e06183141b40",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define all our required targets\n",
        "Line" : 10,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "# set ( CMAKE_OSX_ARCHITECTURES \"armv7;arm;i386\" )\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#add_subdirectory( \"../moai-iphone\" \"moai-iphone\")\n",
        "Line" : 24,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "cmake/cmake/hosts/host-ios/iOS.cmake" : {
      "ObjectId" : "1c8cba42db489ea0c3d1f47529a3bd2b75c26ac4",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard settings\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force the compilers to gcc for iOS\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS \n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Setup iOS platform\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Setup iOS developer location\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find and use the most recent iOS sdk \n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set the architecture for iOS - using ARCHS_STANDARD_32_BIT sets armv6,armv7 and appears to be XCode's standard. \n\n# The other value that works is ARCHS_UNIVERSAL_IPHONE_OS but that sets armv7 only\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/cmake/hosts/host-linux-sdl/CMakeLists.txt" : {
      "ObjectId" : "90bcbf0d1a66ac51f958e2a43eebf33e9b682bd6",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup the \"MOAI_ROOT\" variable\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DMOAI_OS_LINUX \" )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#fix lua lib path\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\" )\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/cmake/hosts/host-modules/CMakeLists.txt" : {
      "ObjectId" : "cc73adf388cd6e8590a6e93a903f65087c26747b",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include_directories ( ${HOST_MODULES_INCLUDES} )\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# link against all of these if we have a lib path since there are no speed gains to be made\n\n# and so that the project can rely on the defines in aku_modules_config\n\n# and let the linker sort out the redundant entries\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ASSIMP\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#BOX2D\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#UNTZ\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SDL\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Harfbuzz\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Http Client\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Http Server\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#LuaExt\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#audiosampler\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#plugins\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#tests\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/cmake/hosts/host-osx-sdl/CMakeLists.txt" : {
      "ObjectId" : "bfcec2bf849ed296ce1593f0e3c1d982d8866a00",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#fix lua lib path\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#64 bit macs should add this to keep luajit happy\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/hosts/host-test/CMakeLists.txt" : {
      "ObjectId" : "450b60c39ded1e004f293ab0c981e2576937a3c7",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# link_directories (\n\n#   \"third-party\"\n\n# )\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/hosts/host-win-sdl/CMakeLists.txt" : {
      "ObjectId" : "4c935e816f39c897f261600ccfcfb779bf617960",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup the \"MOAI_ROOT\" variable\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#normalizes slashes to forward slashes for windows\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#fix lua lib path\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/cmake/libmoai/CMakeLists.txt" : {
      "ObjectId" : "d5f6cd0caee0fdad040c99ae6cf6d5dfed9b0134",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#platform specific libs\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/config/CMakeLists.txt" : {
      "ObjectId" : "3ff33ce77d7a7c01b6be0a9c810b92400976fc58",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#save our config for later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#author\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-android/CMakeLists.txt" : {
      "ObjectId" : "91a56a2f326f9b8a1c8b8482504fff01413c2d34",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# remove this since this should be built as part of the main shared library build script\n\n# preventing the linker from removing the JNI methods.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-android/android-module.cmake" : {
      "ObjectId" : "a4fc9bd768067c18164a438245ed3ca01b06a413",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#tell our parent to dump our setting for ndk_build\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#exclude moai.cpp, that is the host file that will bind all the others together\n\n#it contains the jni calls\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#tell our parent to dump our setting for ndk_build\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#java\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#third-party\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/cmake/libmoai/moai-android/moai-android-adcolony/CMakeLists.txt" : {
      "ObjectId" : "4b61996bd89754babdfb46979ffc4f7c95770ad4",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-amazon-billing/CMakeLists.txt" : {
      "ObjectId" : "9ccb4f3a8434253744c8096c56a1d0f8cb3c5498",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-chartboost/CMakeLists.txt" : {
      "ObjectId" : "d1f6dbf47597bc809ec753435b3ac043cf4d6b5c",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-crittercism/CMakeLists.txt" : {
      "ObjectId" : "277bad58783f1588f00fc896d2f3d04a4f779704",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-facebook/CMakeLists.txt" : {
      "ObjectId" : "889e4f4ac97f224333c8c09f7ad671e71e086d71",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-flurry/CMakeLists.txt" : {
      "ObjectId" : "8d1ab1794ef579d96372788ce5b73b0bc0ca19d2",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-fortumo/CMakeLists.txt" : {
      "ObjectId" : "1cd21961d4ece0db4bbbc328a832024cf9991090",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-google-billing/CMakeLists.txt" : {
      "ObjectId" : "6f6a70a6273e7b2a5d8548359bf0f37565cc5c37",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-google-play-services/CMakeLists.txt" : {
      "ObjectId" : "e334fd942e0addc9f2c40bbfc69843b5d07e5d89",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-google-push/CMakeLists.txt" : {
      "ObjectId" : "a537b3087b7c21f6d93b796b2a245310c6361df1",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-tapjoy/CMakeLists.txt" : {
      "ObjectId" : "6cdaa2959cb7dabd17f9f18fc1688fae230e4446",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-twitter/CMakeLists.txt" : {
      "ObjectId" : "aa4d0800e0eb95cf8d4a477ae1b10656a7b7d600",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-android/moai-android-vungle/CMakeLists.txt" : {
      "ObjectId" : "e77fdcc69376c3440a2c7252962fefcd8281f2a5",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-apple/CMakeLists.txt" : {
      "ObjectId" : "f76822b425e2050377f5ec02c765453869e27988",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-assimp/CMakeLists.txt" : {
      "ObjectId" : "9176236600d8e9df1492821b9c2e4320b7c112ba",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-audiosampler/CMakeLists.txt" : {
      "ObjectId" : "5133094c792a6eb3fd31e3b44da771cb4d4429ed",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-box2d/CMakeLists.txt" : {
      "ObjectId" : "4b8bf323c18867bedbd4f8e47761a773c9c0acb7",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-core/CMakeLists.txt" : {
      "ObjectId" : "03a94d9df6df45719ac385ffcf8b266b699ce918",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\"${MOAI_ROOT}/src/moai-core\"\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#get_target_property ( LUA_HEADERS liblua-static INCLUDE_DIRECTORIES )\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/libmoai/moai-crypto/CMakeLists.txt" : {
      "ObjectId" : "389e01c25de5f07bac31412c11289400a7ba0554",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_include_directories( moai-crypto PUBLIC ${MOAI_CRYPTO_INCLUDES} )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-harfbuzz/CMakeLists.txt" : {
      "ObjectId" : "504902cbfb73c491a0df1b404bc60f5485aa9218",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-http-client/CMakeLists.txt" : {
      "ObjectId" : "9d78ec6f2c3133b322ebbe7e2862d0f15c148036",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-http-server/CMakeLists.txt" : {
      "ObjectId" : "b5979568c1c3a80ee1c14201e13f4fb2cf722b9e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-image-jpg/CMakeLists.txt" : {
      "ObjectId" : "ad86225d962775d3dd0a615c3db0e4dad92806f9",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-image-png/CMakeLists.txt" : {
      "ObjectId" : "e852d1fd9b22313dbe691358f3b65774852f208c",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-image-pvr/CMakeLists.txt" : {
      "ObjectId" : "a12e2796ef44fb23179b992ec3794b29b968d7e2",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-image-webp/CMakeLists.txt" : {
      "ObjectId" : "d86f000ea1ea61d7aba5e025dc28aeb41920cf7b",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-iphone/CMakeLists.txt" : {
      "ObjectId" : "1e9b46064b29791d5650c7553a9f9bd03c47d6f1",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extensions\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#broken add_subdirectory(moai-ios-motion)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use all mm files in directory as source code\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-adcolony/CMakeLists.txt" : {
      "ObjectId" : "4439b701e8001bbe7aa3c9c5cb83f6a571ce2eef",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-billing/CMakeLists.txt" : {
      "ObjectId" : "7430167c7800def457f745cf2ede7a1827ce6d1f",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-chartboost/CMakeLists.txt" : {
      "ObjectId" : "6f084f816868933ddccf51af91159e96b35ec2e1",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lib\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_include_directories(libChartboost PUBLIC \"${MOAI_ROOT}/3rdparty/chartboost-4.2\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#glue\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-crittercism/CMakeLists.txt" : {
      "ObjectId" : "8f3692630bccea6a100d8d40f90941c6747fc7ee",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-facebook/CMakeLists.txt" : {
      "ObjectId" : "cc9549b852f6cc3546216e6d163104af2401ad4e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#lib\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# <FBSDKCoreKit/FBSDKCoreKit.h>\n\n# <FBSDKLoginKit/FBSDKLoginKit.h>\n\n# <FBSDKShareKit/FBSDKShareKit.h>\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set(FACEBOOK_ROOT ${MOAI_ROOT}/3rdparty/facebook-ios-sdk-3.14.1/FacebookSDK.framework)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set(FACEBOOK_LIB ${FACEBOOK_ROOT}/FacebookSDK)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#glue\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-flurry/CMakeLists.txt" : {
      "ObjectId" : "645427ea483638ecdad898b6d43218170c70451e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lib\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#glue\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-gamecenter/CMakeLists.txt" : {
      "ObjectId" : "106962ddd66cfb26202e846b464799d3abb44f72",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-host-modules/CMakeLists.txt" : {
      "ObjectId" : "aa21703aba902049b89a0f28e80703cc59a16af2",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adcolony doesnt have armv7s, so leave it as opt in\n\n#if ( NOT DISABLE_ADCOLONY )\n\n#  target_link_libraries ( moai-ios-host-modules moai-ios-adcolony )\n\n#endif ( NOT DISABLE_ADCOLONY )\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#for EXPORT\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-kontagent/CMakeLists.txt" : {
      "ObjectId" : "9c34bb921f043ea2b826cf320b42888846fb7351",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#native\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#glue\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-mobile-app-tracker/CMakeLists.txt" : {
      "ObjectId" : "2d440a253b6bbe7fa667a28a29aa3315e8402ad6",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#native\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#glue\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-motion/CMakeLists.txt" : {
      "ObjectId" : "714ffb537c376128bc2c94354592a51187982915",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-movie/CMakeLists.txt" : {
      "ObjectId" : "b7ef3dcbdbab05a1ad7872438621773511449794",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-playhaven/CMakeLists.txt" : {
      "ObjectId" : "7c5e0923e0e525a682f59b9757e090d8d9677a7f",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-playhaven/playhaven/CMakeLists.txt" : {
      "ObjectId" : "f2bcb6a929ff72f2f0c9579796e6ec4dc73520f6",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-tapjoy/CMakeLists.txt" : {
      "ObjectId" : "1a0574f8bd2ac91c83e4c705340a0ddd91394f8e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#native\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#glue\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-twitter/CMakeLists.txt" : {
      "ObjectId" : "995bfc0e29dfefbba4566f8963b7babda7ffdd44",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-urban-airship/CMakeLists.txt" : {
      "ObjectId" : "d39b7af4fd2339fae4e9d08434cd762cdcb0f2a4",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lib\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#glue\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-iphone/moai-ios-vungle/CMakeLists.txt" : {
      "ObjectId" : "83e172cc1e7c665ecd0421513a35779a1fe4ea2d",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#native\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#glue\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/libmoai/moai-luaext/CMakeLists.txt" : {
      "ObjectId" : "56ccd8a82961cebca374577d5ff629f0a0e15420",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moai-plugins/CMakeLists.txt" : {
      "ObjectId" : "d75346f0b6ea3aa81a51d4379a9f887684b74a47",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Setup our substitution vars\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find our pre-installed plugins\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install(TARGETS \"${PLUGIN_TARGET}\" EXPORT libmoai ARCHIVE DESTINATION plugins/${PLUGIN}/lib)\n\n#install(FILES \"${PLUGIN_DIR}/${PLUGIN}/${PLUGIN}/host.h\" DESTINATION plugins/${PLUGIN}/include/${PLUGIN})\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#\n\n#  Create a host.cpp\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n#  actually define the target\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#install(TARGETS moai-plugins EXPORT libmoai ARCHIVE DESTINATION lib)\n\n#install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/host.h DESTINATION include/moai-plugins)",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/cmake/libmoai/moai-sdl/CMakeLists.txt" : {
      "ObjectId" : "468b857f1f858e7c1f26c4d2b224aa1c0b669441",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-sim/CMakeLists.txt" : {
      "ObjectId" : "8b09820fcbe6f3c1f8050e2558df2314b398c0cd",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#always point to freetype includes so the generated project is easy to turn freetype back on!\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#GetProcessMemoryInfo and UuidCreateSequential\n",
        "Line" : 65,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 3
    },
    "cmake/cmake/libmoai/moai-test/CMakeLists.txt" : {
      "ObjectId" : "06aa9bea28edca7eb485bf5e1790c9babc21de40",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-untz/CMakeLists.txt" : {
      "ObjectId" : "c5e5a3adf5be76ac6fca666d326628e382247a3a",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/libmoai/moai-util/CMakeLists.txt" : {
      "ObjectId" : "ee78ee473efdfe8f26cded26a3afd66955a42ee4",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/moaiext-server/CMakeLists.txt" : {
      "ObjectId" : "5586bdc4a61e2148071fd24b5efab218f0713840",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/libmoai/zlcore/CMakeLists.txt" : {
      "ObjectId" : "6e05f8c51b9b778c97c6679e46f0ce8e8417abc9",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define source directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define needed include files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compulsory li\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#GetAdaptersAddresses\n",
        "Line" : 65,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 5
    },
    "cmake/cmake/libmoai/zlcore/zlcrypto/CMakeLists.txt" : {
      "ObjectId" : "e5e54726cb66c4daafd686b098c7cfebfd711d49",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define source directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define needed include files\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/cmake/libmoai/zlcore/zlvfs/CMakeLists.txt" : {
      "ObjectId" : "954961a7afaa41f959c8030a77b32a6388d87711",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define source directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#remove forced vfs includes\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define needed include files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use all cpp files in directory as source code\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/cmake/third-party/CMakeLists.txt" : {
      "ObjectId" : "05f9d9494dfd618c8e2797d8bf4bbac5cba1769e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this is someone elses code, lets not get spammed by their warnings\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#Lua or LuaJit?\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDL is for pc only\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Build platform specific untz\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if ( BUILD_ANDROID )\n\n#  set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -include ${MOAI_ROOT}/src/zl-vfs/zl_replace.h\" )\n\n#   set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -include ${MOAI_ROOT}/src/zl-vfs/zl_replace.h\" ) \n\n#endif ( BUILD_ANDROID )\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/cmake/third-party/android/CMakeLists.txt" : {
      "ObjectId" : "0ed071f569949ed30a7e235a2ef889cfcb1c432d",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Android NDK has some uncompiled libs that some third party libraries need\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/assimp/CMakeLists.txt" : {
      "ObjectId" : "01f2206402be7d6f8cee1847690b9546610351f0",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#remove forced vfs includes, assimp provides a cleaner way to do this http://www.assimp.org/lib_html/usage.html#custom_io\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/box2d/CMakeLists.txt" : {
      "ObjectId" : "a16cf8731237390a0ee2d5e68e184b8bba60c6e1",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/cares/CMakeLists.txt" : {
      "ObjectId" : "0976281d9708a9711013cd29b9aa16798e03a3f6",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/contrib/CMakeLists.txt" : {
      "ObjectId" : "20f1c7e224134a5729445412078ef23a9694a252",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/curl/CMakeLists.txt" : {
      "ObjectId" : "99f9ba8ca46a4749753ad5b7a7d0c8c46f557502",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ${CMAKE_CURRENT_SOURCE_DIR}/lib/amigaos.c\n",
        "Line" : 83,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/expat/CMakeLists.txt" : {
      "ObjectId" : "2dd9cb7a313e1197c1dc092c04d38ab51d81f5d1",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/freetype/CMakeLists.txt" : {
      "ObjectId" : "9f3640d60a62e7d73786235518f092e0015b3979",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#source\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#modules\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/cmake/third-party/glew/CMakeLists.txt" : {
      "ObjectId" : "418afd8d374f2617a6b2987bb8eb410574510d00",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/harfbuzz/CMakeLists.txt" : {
      "ObjectId" : "eb116c32389ed8e2d78c18b4f3ebdad9b4a0bf22",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#no multithreading in emscripten and none built in on linux\n",
        "Line" : 29,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/jansson/CMakeLists.txt" : {
      "ObjectId" : "69d37c11c9b82da251a28685e6923aa6886788a8",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#need a platform header for this. snprintf doesn't exist\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/jpg/CMakeLists.txt" : {
      "ObjectId" : "4f798f8d00ce46e7f3e3029b0157c6459847a1f8",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/kissfft/CMakeLists.txt" : {
      "ObjectId" : "fd81203ac50dbbe22644d9af93ee8a00656a39c1",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/lua/CMakeLists.txt" : {
      "ObjectId" : "707efbf6effa721478977f70fa8a00d11f4f4e8f",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/luaext/CMakeLists.txt" : {
      "ObjectId" : "c2d247baa093af3348c1bb9ed437ade1c24f8b6e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory ( luacrypto )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/luaext/luacrypto/CMakeLists.txt" : {
      "ObjectId" : "6b659fcff3e339def794c6b7f1ac51d7cc7abf80",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/luaext/luacurl/CMakeLists.txt" : {
      "ObjectId" : "ecc22812b1505e5e24efdeaa67542c73e5e8ab92",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/luaext/luafilesystem/CMakeLists.txt" : {
      "ObjectId" : "8629576e8cb426711189670e08eb85796732719c",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/luaext/luasocket/CMakeLists.txt" : {
      "ObjectId" : "6dec0d64170a3edf3f0778f31abecca3777bf5f5",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/luaext/luasql/CMakeLists.txt" : {
      "ObjectId" : "0bfef51a2554eb309bdeb55dcdc658b6b60edc2a",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/luajit/CMakeLists.txt" : {
      "ObjectId" : "da88e4855a44f88afc7f7d2b4c7b8f3d0fe66485",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LuaJIT configuration file.\n\n#\n\n# A copy of LuaJIT is maintained within Tarantool\n\n# source. It's located in third_party/luajit.\n\n#\n\n# Instead of this copy, Tarantool can be compiled\n\n# with a system-wide LuaJIT, or LuaJIT at a given\n\n# prefix. This is used when compiling Tarantool\n\n# as part of a distribution, e.g. Debian.\n\n#\n\n# To explicitly request use of the bundled LuaJIT,\n\n# add -DENABLE_BUNDLED_LUAJIT=True to CMake\n\n# configuration flags.\n\n# To explicitly request use of LuaJIT at a given\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set (luajit_copt ${luajit_copt} -I${PROJECT_SOURCE_DIR}/libobjc)\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#remove our forced include from target_cc commands\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use external unwind on all platforms.\n\n#set (luajit_target_cc \"${luajit_target_cc} -DLUAJIT_UNWIND_EXTERNAL=1\")\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Regular mode - use CMake compiler for building host utils.\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Crosscompile mode - use a host CC compiler for building host utils.\n\n# Since CMake does not support cross compilation properly\n\n# we have to use system CC here.\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# The host compiler must have same pointer size as the target compiler.\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#our sysroot\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#set (luajit_buildoptions ${luajit_buildoptions} ) #Q=''\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#in cmake 3.0 we can do this but it isn't out yet.\n\n#add_library(liblua-static INTERFACE)\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#target_link_libraries(liblua-static INTERFACE \"${CMAKE_CURRENT_BINARY_DIR}/luajit/src/${LUA_LIB}\")\n\n#add_dependencies(liblua-static liblua)\n",
        "Line" : 181,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 11
    },
    "cmake/cmake/third-party/mbedtls/CMakeLists.txt" : {
      "ObjectId" : "e303c958be9f3a9cfbd42fe2d58b87ef7bdda0c2",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/mongoose/CMakeLists.txt" : {
      "ObjectId" : "0a79142c9e7105b8107b8453a186603075fc4eba",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/ogg/CMakeLists.txt" : {
      "ObjectId" : "6ec2c86734240021afe0c58154f4bc5c0d45fe2d",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/png/CMakeLists.txt" : {
      "ObjectId" : "4c5222adca40fded06449c06a4a131ad3da585a4",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/pvr/CMakeLists.txt" : {
      "ObjectId" : "9b1322bd50ab06ea9c70bba0dc6a9da8bbc1d01d",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/sdl2/CMakeLists.txt" : {
      "ObjectId" : "6f85c3528bc9a23716e90dc61ea3afd48d13bdce",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#todo install headers too :)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/sfmt/CMakeLists.txt" : {
      "ObjectId" : "7af7ee370712ec74023e6a28c0fe2ee20c271d73",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/sqlite3/CMakeLists.txt" : {
      "ObjectId" : "166d99ac6c6884d32fa3abab4a037a4430492f24",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/tess/CMakeLists.txt" : {
      "ObjectId" : "d62f476d59eaf161202fcc962f26c05f6d2580ad",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/tinyxml/CMakeLists.txt" : {
      "ObjectId" : "54ea7379261593a159bc9d6bd2a5f0da4b4908ae",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/tlsf/CMakeLists.txt" : {
      "ObjectId" : "b7b282c4b53dea6566b9bb3ec588f065145036c6",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/untz-android/CMakeLists.txt" : {
      "ObjectId" : "e90c855dba61195134077f75e28b79553a38fb10",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/untz-html/CMakeLists.txt" : {
      "ObjectId" : "3ee9669e6674979ac209f4cd2fdde52bd3bca645",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/untz-ios/CMakeLists.txt" : {
      "ObjectId" : "ea3707dd0a1cd25dd23efc8ed2f139ae576d301f",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/untz-windows/CMakeLists.txt" : {
      "ObjectId" : "f739d703e9cfc47882a6c01590f1d16c3661648a",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/untz/CMakeLists.txt" : {
      "ObjectId" : "df104f400114d4437e8411fea7f81ba7d5a4d674",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cmake/third-party/vorbis/CMakeLists.txt" : {
      "ObjectId" : "f82ff3b42c635395a5c790ac51e18845d55ff97a",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}/barkmel.c\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}/psytune.c\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}/tone.c\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/cmake/third-party/webp/CMakeLists.txt" : {
      "ObjectId" : "307e1a7f7355e380fa3aee98ce6f7738468b08f3",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fix endianness for quantized formats\n",
        "Line" : 4,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 1
    },
    "cmake/cmake/third-party/zlib/CMakeLists.txt" : {
      "ObjectId" : "f3d6f0d7a64b43a20da4730112344a6fc126187e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/moai-android/java/proguard-rules.pro" : {
      "ObjectId" : "dafb72ef25ca45015e03ee80eaf1614e546a2c4e",
      "LastModified" : "2018-11-30T22:43:45Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/patrick/Library/Android/sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 145,
    "CMAKESOURCE" : 4,
    "QMAKE" : 4,
    "MAKEFILE" : 25,
    "AUTOMAKE" : 58,
    "ANT" : 1
  },
  "ElapsedTime" : 11551
}