{
  "Repository" : "7740",
  "Revision" : "HEAD",
  "ObjectId" : "c0ea93e954173fcf2f039b9c45c30dc3e69fb090",
  "CommitTime" : "2019-04-18T19:31:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5ed2a9aca0141dbc2ae2234616cb363921d646d9",
      "LastModified" : "2019-02-14T17:51:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build type\n\n# Debug Release RelWithDebInfo MinSizeRel Coverage\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default to release with debug symbols\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# try Qt 5.11.2 if none specified\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#set(QT_MKSPEC winrt_x64_msvc2017)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add folder where are supportive functions\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#=============================================================================\n\n# ccache\n\n#\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#=============================================================================\n\n# Qt5\n\n#\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clang and AppleClang\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# ignore for mavlink\n",
        "Line" : 139,
        "CharPositionInLine" : 32
      },
      "9" : {
        "Text" : "# GCC\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# warning C4244: '=': conversion from 'double' to 'float', possible loss of data\n",
        "Line" : 157,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# TODO: get qtquick compiler working\n\n#qtquick_compiler_add_resources(QGC_RESOURCES ${QGC_RESOURCES}\n\n#find_package(Qt5QuickCompiler)\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#HackAndroidFileDialog.qrc\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Check if we are using the Visual Studio compiler\n",
        "Line" : 238,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# deploy\n",
        "Line" : 245,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#KEYSTORE ${CMAKE_CURRENT_LIST_DIR}/mykey.keystore myalias\n\n#KEYSTORE_PASSWORD xxxxx\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# TODO: investigate https://github.com/probonopd/linuxdeployqt\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 17
    },
    "Makefile" : {
      "ObjectId" : "072569fcab41676805e1307035a9d8665f49d3d5",
      "LastModified" : "2018-10-15T13:15:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Enforce the presence of the GIT repository\n\n#\n\n# We depend on our submodules, so we have to prevent attempts to\n\n# compile without it being present.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  explicity set default build target\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parsing\n\n# --------------------------------------------------------------------\n\n# assume 1st argument passed is the main target, the\n\n# rest are arguments to pass to the makefile generated\n\n# by cmake in the subdirectory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Functions\n\n# --------------------------------------------------------------------\n\n# describe how to build a cmake config\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt mkspec\n\n# android_armv7  android_x86  gcc_64\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Astyle\n\n# --------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Testing\n\n# --------------------------------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cleanup\n\n# --------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "QGCCommon.pri" : {
      "ObjectId" : "5f162ab490d4c70cdaad63d34a13de9073c994bd",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# QGroundControl - Micro Air Vehicle Groundstation\n\n# Please see our website at <http://qgroundcontrol.org>\n\n# Maintainer:\n\n# Lorenz Meier <lm@inf.ethz.ch>\n\n# (c) 2009-2014 QGroundControl Developers\n\n# License terms set in COPYING.md\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This file contains configuration settings which are common to both the QGC Application and\n\n# the Location Plugin. It should mainly contains initial CONFIG tag setup and compiler settings.\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Setup our supported build types. We do this once here and then use the defined config scopes\n\n# to allow us to easily modify suported build types in one place instead of duplicated throughout\n\n# the project file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-- Not forcing anything. Let qmake find the latest, installed SDK.\n\n#QMAKE_MAC_SDK = macosx10.12\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#-- Disable annoying warnings comming from mavlink.h\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Universal\n",
        "Line" : 98,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "# Enable ccache where we can\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set the QGC version from git\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# determine if we're on a tag matching vX.Y.Z (stable release)\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# release version \"vX.Y.Z\"\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# development version \"Development branch:sha date\"\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Marker to indicate out-of-tree build\n",
        "Line" : 151,
        "CharPositionInLine" : 30
      },
      "12" : {
        "Text" : "# Installer configuration\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Setup our supported build flavors\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Setup our build directories\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Turn off serial port warnings\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# By default warnings as errors are turned off. Even so, in order for a pull request\n\n# to be accepted you must compile cleanly with warnings as errors turned on the default\n\n# set of OS builds. See http://www.qgroundcontrol.org/dev/contribute for more details.\n\n# You can use the WarningsAsErrorsOn CONFIG switch to turn warnings as errors on for your\n\n# own builds.\n\n#\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Latest clang version has a buggy check for this which cause Qt headers to throw warnings on qmap.h\n",
        "Line" : 213,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Xcode 8.3 has issues on how MAVLink accesses (packed) message structure members.\n\n# Note that this will fail when Xcode version reaches 10.x.x\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# silence warnings about deprecated strcpy and whatnot\n\n# silence warnings about macro redefinition\n\n# ignore exception specifications\n",
        "Line" : 233,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "#\n\n# Build-specific settings\n\n#\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Enable debugging symbols on release builds\n",
        "Line" : 248,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : "# Turn on link time code generation\n",
        "Line" : 251,
        "CharPositionInLine" : 40
      },
      "23" : {
        "Text" : "# Enable function level linking and enhanced optimized debugging\n",
        "Line" : 256,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Eliminate duplicate COMDATs\n",
        "Line" : 262,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 25
    },
    "QGCExternalLibs.pri" : {
      "ObjectId" : "2aafbf5d5fcae9cea48626d259b8f159e45f4e93",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# [REQUIRED] Add support for <inttypes.h> to Windows.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# [REQUIRED] Add support for the MAVLink communications protocol.\n\n#\n\n# By default MAVLink dialect is hardwired to arudpilotmega. The reason being\n\n# the current codebase supports both PX4 and APM flight stack. PX4 flight stack\n\n# only uses common MAVLink specifications, whereas APM flight stack uses custom\n\n# MAVLink specifications which adds to common. So by using the adupilotmega dialect\n\n# QGC can support both in the same codebase.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Once the mavlink helper routines include support for multiple dialects within\n\n# a single compiled codebase this hardwiring of dialect can go away. But until then\n\n# this \"workaround\" is needed.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In the mean time, it’s possible to define a completely different dialect by defining the\n\n# location and name below.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check for user defined settings in user_config.pri if not already set as qmake argument\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If defined, all APM specific MAVLink messages are disabled\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# First we select the dialect, checking for valid user selection\n\n# Users can override all other settings by specifying MAVLINK_CONF as an argument to qmake\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Then we add the proper include paths dependent on the dialect.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# [REQUIRED] EIGEN matrix library\n\n# NOMINMAX constant required to make internal min/max work.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# [REQUIRED] shapelib library\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# [REQUIRED] QWT plotting library dependency. Provides plotting capabilities.\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# [REQUIRED] SDL dependency. Provides joystick/gamepad support.\n\n# The SDL is packaged with QGC for the Mac and Windows. Linux support requires installing the SDL\n\n# library (development libraries and static binaries).\n\n#\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# [OPTIONAL] Zeroconf for UDP links\n\n#\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Otherwise the user can still disable this feature in the user_config.pri file.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Mac support is built into OS\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# [OPTIONAL] AirMap Support\n\n#\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Otherwise the user can still disable this feature in the user_config.pri file.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "QGCInstaller.pri" : {
      "ObjectId" : "ba07de6f1dfa8eac50b105ca885dd974f6e9a418",
      "LastModified" : "2018-10-15T13:15:54Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# QGroundControl - Micro Air Vehicle Groundstation\n\n# Please see our website at <http://qgroundcontrol.org>\n\n# Maintainer:\n\n# Lorenz Meier <lm@inf.ethz.ch>\n\n# (c) 2009-2014 QGroundControl Developers\n\n# License terms set in COPYING.md\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install the gstreamer framework\n\n# This will:\n\n# Copy from the original distibution into DESTDIR/gstwork (if not already there)\n\n# Prune the framework, removing stuff we don't need\n\n# Relocate all dylibs so they can work under @executable_path/...\n\n# Copy the result into the app bundle\n\n# Make sure qgroundcontrol can find them\n",
        "Line" : 14,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# We cd to release directory so we can run macdeployqt without a path to the\n\n# qgroundcontrol.app file. If you specify a path to the .app file the symbolic\n\n# links to plugins will not be created correctly.\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# macdeployqt does not deploy texttospeech plugin\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# macdeployqt is missing some relocations once in a while. \"Fix\" it:\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Create package\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#-- TODO: This uses hardcoded paths. It should use $${DESTDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#-- TODO: This uses hardcoded paths. It should use $${DESTDIR}\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "QGCSetup.pri" : {
      "ObjectId" : "84cc7f1f895d0f5dd1aa573ab5615e1b4ce307cd",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# QGroundControl - Micro Air Vehicle Groundstation\n\n# Please see our website at <http://qgroundcontrol.org>\n\n# Maintainer:\n\n# Lorenz Meier <lm@inf.ethz.ch>\n\n# (c) 2009-2011 QGroundControl Developers\n\n# License terms set in COPYING.md\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Copy the application resources to the associated place alongside the application\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows version of QMAKE_COPY_DIR of course doesn't work the same as Mac/Linux. It will only\n\n# copy the contents of the source directory. It doesn't create the top level source directory\n\n# in the target.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure to keep both side of this if using the same set of directories\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Make sure to keep both sides of this if using the same set of directories\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#\n\n# Perform platform specific setup\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update version info in bundle\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Copy non-standard frameworks into app package\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# SDL2 Framework\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# AirMap\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Copy dependencies\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Copy Visual Studio DLLs\n\n# Note that this is only done for release because the debugging versions of these DLLs cannot be redistributed.\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# QT_INSTALL_LIBS\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Some Qt distributions link with *.so.56\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# QT_INSTALL_PLUGINS\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# QT_INSTALL_QML\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Airmap\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# QGroundControl start script\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "android.pri" : {
      "ObjectId" : "f655709bc50e8b137bf808938fba18a5bc075f6c",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "cmake/AddQtAndroidApk.cmake" : {
      "ObjectId" : "ecb4ba78ffdb0d2fce2a4f518bd701d425903f8d",
      "LastModified" : "2018-10-15T13:15:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# allow use of the LOCATION target property\n",
        "Line" : 2,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# store the current source directory for future use\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check the JAVA_HOME environment variable\n\n# (I couldn't find a way to set it from this script, it has to be defined outside)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make sure that the Android toolchain is used\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find the Qt root directory\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find the Android SDK\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# androiddeployqt doesn't like backslashes in paths\n",
        "Line" : 33,
        "CharPositionInLine" : 68
      },
      "7" : {
        "Text" : "# find the Android NDK\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# androiddeployqt doesn't like backslashes in paths\n",
        "Line" : 46,
        "CharPositionInLine" : 68
      },
      "9" : {
        "Text" : "# define a macro to create an Android APK target\n\n#\n\n# example:\n\n# add_qt_android_apk(my_app_apk my_app\n\n#     NAME \"My App\"\n\n#     VERSION_CODE 12\n\n#     PACKAGE_NAME \"org.mycompany.myapp\"\n\n#     PACKAGE_SOURCES ${CMAKE_CURRENT_LIST_DIR}/my-android-sources\n\n#     BUILDTOOLS_REVISION \"23.0.3\"\n\n#     KEYSTORE ${CMAKE_CURRENT_LIST_DIR}/mykey.keystore myalias\n\n#     KEYSTORE_PASSWORD xxxx\n\n#     DEPENDS a_linked_target \"path/to/a_linked_library.so\" ...\n\n#     INSTALL\n\n#)\n\n# \n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# parse the macro arguments\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# extract the full path of the source target binary\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# define the application name\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# define the application package name\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# set the Android SDK build-tools revision\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# define the application source package directory\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# get version code from arguments, or generate a fixed one if not provided\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# try to extract the app version from the target properties, or use the version code if not provided\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# create a subdirectory for the extra package sources\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# generate a manifest from the template\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# set the list of dependant libraries\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# item is a CMake target, extract the library path\n",
        "Line" : 126,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "# make sure that the output directory for the Android package exists\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# create the configuration file that will feed androiddeployqt\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# check if the apk must be signed\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# check if the apk must be installed to the device\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# specify the Android API level\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# create a custom command that will run the androiddeployqt utility to prepare the Android package\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# it seems that recompiled libraries are not copied if we don't remove them first\n",
        "Line" : 172,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 29
    },
    "cmake/Windeployqt.cmake" : {
      "ObjectId" : "c0f77d9d344157b9b5cdf9dc372a371b9f6399eb",
      "LastModified" : "2018-10-15T13:15:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2017 Nathan Osman\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Retrieve the absolute path to qmake and then use that path to find\n\n# the windeployqt binary\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Running this with MSVC 2015 requires CMake 3.6+\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add commands that copy the Qt runtime to the target's output directory after\n\n# build and install the Qt runtime to the specified directory\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Run windeployqt immediately after build\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# install(CODE ...) doesn't support generator expressions, but\n\n# file(GENERATE ...) does - store the path in a file\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Before installation, run a series of commands that copy each of the Qt\n\n# runtime files to the appropriate directory for installation\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# windeployqt doesn't work correctly with the system runtime libraries,\n\n# so we fall back to one of CMake's own modules for copying them over\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/android.toolchain.cmake" : {
      "ObjectId" : "07100ee33db8611b81b467452837110108f5893c",
      "LastModified" : "2018-10-15T13:15:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10d\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 404,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 471,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 476,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 487,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 568,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 602,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 691,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 719,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 904,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# clang\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# do nothing\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 989,
        "CharPositionInLine" : 42
      },
      "50" : {
        "Text" : "# before r8d\n",
        "Line" : 997,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : "# before r7\n",
        "Line" : 1002,
        "CharPositionInLine" : 42
      },
      "52" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1014,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1032,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1034,
        "CharPositionInLine" : 137
      },
      "55" : {
        "Text" : "# r7-r8\n",
        "Line" : 1036,
        "CharPositionInLine" : 110
      },
      "56" : {
        "Text" : "# before r7\n",
        "Line" : 1038,
        "CharPositionInLine" : 36
      },
      "57" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1061,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# ccache support\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1121,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1144,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1160,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1166,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1181,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# NDK flags\n",
        "Line" : 1188,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1205,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1232,
        "CharPositionInLine" : 62
      },
      "69" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1239,
        "CharPositionInLine" : 72
      },
      "70" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1242,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1253,
        "CharPositionInLine" : 91
      },
      "72" : {
        "Text" : "# STL\n",
        "Line" : 1268,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# C objects:\n",
        "Line" : 1279,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1297,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# before r7\n",
        "Line" : 1298,
        "CharPositionInLine" : 40
      },
      "76" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1299,
        "CharPositionInLine" : 1
      },
      "77" : {
        "Text" : "# linker flags\n",
        "Line" : 1319,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1323,
        "CharPositionInLine" : 1
      },
      "79" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1330,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# after r8b\n",
        "Line" : 1351,
        "CharPositionInLine" : 48
      },
      "81" : {
        "Text" : "# version 4.6\n",
        "Line" : 1359,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "# cache flags\n",
        "Line" : 1381,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1392,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# finish flags\n",
        "Line" : 1398,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# pie/pic\n",
        "Line" : 1415,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# configure rtti\n",
        "Line" : 1425,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1434,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1445,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1447,
        "CharPositionInLine" : 111
      },
      "90" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# setup output directories\n",
        "Line" : 1487,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1504,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1516,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1520,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1523,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1529,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1551,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1573,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1610,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1612,
        "CharPositionInLine" : 1
      },
      "101" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1614,
        "CharPositionInLine" : 37
      },
      "102" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1618,
        "CharPositionInLine" : 1
      },
      "103" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10d; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1623,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 104
    },
    "libs/CMakeLists.txt" : {
      "ObjectId" : "ddd3b9406a7a4ae38ebb9e86dcf51948e13b14b0",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/CMakeLists.txt" : {
      "ObjectId" : "a92dd6f6cafd2206f8be1a50f1294e2ae49feb5a",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "2bad314163c5044265aa6ac14e3767308dd04ba6",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/eigen/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/qtandroidserialport/CMakeLists.txt" : {
      "ObjectId" : "edf1361a144e82093e74a2316bfe3711db3acc66",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/qtandroidserialport/src/qtandroidserialport.pri" : {
      "ObjectId" : "e02e22367c6de84db6892ac5ca7656e26c9e8bac",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "libs/qwt.pri" : {
      "ObjectId" : "ecb19d61fd7a914c9ccfd9e5c0c98703ed917a37",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (2.01a) Wed Feb 10 11:43:43 2010\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/qwt/CMakeLists.txt" : {
      "ObjectId" : "a17395383f674e5a9211cb8a05416b37c6e1d8de",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/qwt/qwt.pri" : {
      "ObjectId" : "ec9c909284c6ef1ccc1802fb152f5d3acf5a8036",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (2.01a) Wed Feb 10 11:43:43 2010\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libs/shapelib/CMakeLists.txt" : {
      "ObjectId" : "f581a8e878fcbd903581cc61419a0f34faa25e59",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Top-level CMakeLists.txt for the CMake-based build and test system\n\n# of the shapelib software.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2012-2013 Alan W. Irwin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# See README.CMake\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU Library General Public License as published\n\n# by the Free Software Foundation; version 2 of the License.\n\n#\n\n# This file is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU Library General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Library General Public License\n\n# along with this file; if not, write to the Free Software\n\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# It is a fatal error if no working C compiler is available to build\n\n# the shapelib library and utilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version 2.8.5 or above of cmake is currently required for all platforms.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# libraries are all shared by default.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disallow use of the LOCATION property for build targets\n",
        "Line" : 34,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Use rpath?\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# No rpath on Darwin. Setting it will only cause trouble.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# In windows all created dlls are gathered in the dll directory\n\n# if you add this directory to your PATH all shared libraries are available\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set up install locations.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Export build information to help other projects link installed\n\n# shapelib software.  Only one of these signatures is required\n\n# for the export_shp name.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Initial boilerplate done, now build library and executables.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#define the SHP_DROP_UNABLE_TO_OPEN_MSG C macro for this source file.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# executables to be built and installed.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#set(BUILD_TEST ON)\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# For the first series of tests, the user needs to have downloaded\n\n# from http://dl.maptools.org/dl/shapelib/shape_eg_data.zip, unpacked\n\n# that file, and specified the location of that directory with\n\n# the cmake option, -DEG_DATA:PATH=whatever\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Install header\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set up tests:\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Other executables to be built to facilitate tests.\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Write this as a shell script since execute_process cannot handle\n\n# anything like redirection.\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# These tests correspond to everything in test1.sh\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# These tests correspond to everything in test2.sh\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# These tests correspond to everything in test3.sh\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "libs/shapelib/Makefile.am" : {
      "ObjectId" : "2d22cc68f2b32a221d95de6e521eaadce3587389",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extra files to distribute in the source tarball\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pkg-config file\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installed executables\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Non-installed executables\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tests\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# tests/test1.sh requires ftp://gdal.velocet.ca/pub/outgoing/shape_eg_data.zip\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libs/shapelib/README.CMake" : {
      "ObjectId" : "de3ff242075ae7d3e9df323d54a2df5a597ec183",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure with the compiler and compiler options of your choice.\n\n# N.B. the gcc -fvisibility=hidden option not (yet) supported by shapelib.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build and install\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/shapelib/contrib/Makefile.am" : {
      "ObjectId" : "d9fc8c3c72c7e87a1228abe9769115b11e14a976",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Extra files to distribute in the source tarball\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Installed executables\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tests\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "qgroundcontrol.pro" : {
      "ObjectId" : "79b2919a426a33a149905a8258439b6f0361aa6f",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# QGroundControl - Micro Air Vehicle Groundstation\n\n# Please see our website at <http://qgroundcontrol.org>\n\n# Maintainer:\n\n# Lorenz Meier <lm@inf.ethz.ch>\n\n# (c) 2009-2015 QGroundControl Developers\n\n# License terms set in COPYING.md\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# undocumented qmake flag to force absolute paths in make files\n",
        "Line" : 10,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "#\n\n# OS Specific settings\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Branding\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Load additional config flags from user_config.pri\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Custom Build\n\n#\n\n# QGC will create a \"CUSTOMCLASS\" object (exposed by your custom build\n\n# and derived from QGCCorePlugin).\n\n# This is the start of allowing custom Plugins, which will eventually use a\n\n# more defined runtime plugin architecture and not require a QGC project\n\n# file you would have to keep in sync with the upstream repo.\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This allows you to ignore the custom build even if the custom build\n\n# is present. It's useful to run \"regular\" builds to make sure you didn't\n\n# break anything.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# custom.pri must define:\n\n# CUSTOMCLASS  = YourIQGCCorePluginDerivation\n\n# CUSTOMHEADER = \\\"\\\\\\\"YourIQGCCorePluginDerivation.h\\\\\\\"\\\"\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Sets up application properties\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------------\n\n# iOS\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-- Info.plist (need an \"official\" one for the App Store)\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#-- Create official, versioned Info.plist\n",
        "Line" : 123,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "#\n\n# Plugin configuration\n\n#\n\n# This allows you to build custom versions of QGC which only includes your\n\n# specific vehicle plugin. To remove support for a firmware type completely,\n\n# disable both the Plugin and PluginFactory entries. To include custom support\n\n# for an existing plugin type disable PluginFactory only. Then provide you own\n\n# implementation of FirmwarePluginFactory and use the FirmwarePlugin and\n\n# AutoPilotPlugin classes as the base clase for your derived plugin\n\n# implementation.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Bluetooth\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# USB Camera and UVC Video Sources\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Qt configuration\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Multimedia only used if QVC is enabled\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Android and iOS don't unclude these\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#  testlib is needed even in release flavor for QSignalSpy support\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We don't need the testlib console in release mode\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#\n\n# Build-specific settings\n\n#\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# Our QtLocation \"plugin\"\n\n#\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# External library configuration\n\n#\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# Resources (custom code can replace them)\n\n#\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# On Qt 5.9 android versions there is the following bug: https://bugreports.qt.io/browse/QTBUG-61424\n\n# This prevents FileDialog from being used. So we have a temp hack workaround for it which just no-ops\n\n# the FileDialog fallback mechanism on android 5.9 builds.\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Main QGroundControl portion of project file\n\n#\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Unit Test resources\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#\n\n# Plugin API\n\n#\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# Unit Test specific configuration goes here (requires full debug build with all plugins)\n\n#\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Main QGC Headers and Source files\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Palette test widget in debug builds\n",
        "Line" : 896,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# Firmware Plugin Support\n\n#\n",
        "Line" : 902,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ArduPilot Specific\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ArduPilot FirmwarePlugin\n",
        "Line" : 974,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# PX4 FirmwarePlugin\n",
        "Line" : 1043,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Fact System code\n",
        "Line" : 1098,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#-------------------------------------------------------------------------------------\n\n# Taisync\n",
        "Line" : 1124,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#-------------------------------------------------------------------------------------\n\n# Microhard\n",
        "Line" : 1151,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#-------------------------------------------------------------------------------------\n\n# AirMap\n",
        "Line" : 1168,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#-- These should be always enabled but not yet\n",
        "Line" : 1173,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "#-- This is the AirMap implementation of the above\n",
        "Line" : 1197,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "#-- Do we have an API key?\n",
        "Line" : 1233,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "#-- Dummies\n",
        "Line" : 1243,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "#-------------------------------------------------------------------------------------\n\n# Video Streaming\n",
        "Line" : 1254,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Otherwise the user can still disable this feature in the user_config.pri file.\n",
        "Line" : 1275,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#-------------------------------------------------------------------------------------\n\n# Android\n",
        "Line" : 1282,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#-------------------------------------------------------------------------------------\n\n#\n\n# Post link configuration\n\n#\n",
        "Line" : 1293,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\n\n# Installer targets\n\n#\n",
        "Line" : 1304,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "src/Airmap/CMakeLists.txt" : {
      "ObjectId" : "6952af9398d8654ca0cd3c14b252f1982040f5e7",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Airmap/QJsonWebToken/src/qjsonwebtoken.pri" : {
      "ObjectId" : "3efe5d61fa69fdca5ca6ddf2f76bba7e9c4c7e70",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/AirspaceManagement/CMakeLists.txt" : {
      "ObjectId" : "306abee63d97e730f1db0d44c615dfcb6ed96c4f",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/AnalyzeView/CMakeLists.txt" : {
      "ObjectId" : "02640f6204e6aa800a1dcef0d0d772bac95b7720",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Audio/CMakeLists.txt" : {
      "ObjectId" : "11203d2382d2c246fdffab5b9ded08fd96d59efa",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/AutoPilotPlugins/CMakeLists.txt" : {
      "ObjectId" : "d8a1718652b8aaa3f47141dde140ac693d02bc06",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "f27db15ca06a8d4ae9438a5b66e91a6a6a4c075d",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# UI\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# HACK: AUTOUIC paths not inheriting?\n",
        "Line" : 174,
        "CharPositionInLine" : 58
      },
      "2" : {
        "Text" : "# HACK: AUTOUIC paths not inheriting?\n",
        "Line" : 176,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 3
    },
    "src/Camera/CMakeLists.txt" : {
      "ObjectId" : "2aa59ef5fdb534a6f4a126285d4236e9bc783d7d",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FactSystem/CMakeLists.txt" : {
      "ObjectId" : "6b7f1999bc1e9bb1f106ac5338a23934d0f8f1cf",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FirmwarePlugin/CMakeLists.txt" : {
      "ObjectId" : "15d11e2cc7150955a90126fe623dc742bd4e9502",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FlightDisplay/CMakeLists.txt" : {
      "ObjectId" : "2a92626931778a6fd0a69f5dce1d97ebf40f7911",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FlightMap/CMakeLists.txt" : {
      "ObjectId" : "ba631e46af36fe9387e66944e5168f44b574bebc",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FollowMe/CMakeLists.txt" : {
      "ObjectId" : "b71c7492ffc372c045403053d17e565ad11ba87b",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/GPS/CMakeLists.txt" : {
      "ObjectId" : "b72845780581dcb9082ca2af1d96e486c42205af",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Joystick/CMakeLists.txt" : {
      "ObjectId" : "2024dcd98ed43ab00aea200dd0b2b152fa746cf2",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Support both 32 and 64 bit builds\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/MissionManager/CMakeLists.txt" : {
      "ObjectId" : "67a62a48027420d996c41909a8b3ab7ce774067f",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shouldn't be listed here, but isn't named properly for AUTOMOC\n",
        "Line" : 62,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 1
    },
    "src/PositionManager/CMakeLists.txt" : {
      "ObjectId" : "b693aa59e1f84bd097cfab1578932a6b421330e5",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/QmlControls/CMakeLists.txt" : {
      "ObjectId" : "7c5b170d3b19fac3f68f927ab9892083a9430454",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/QtLocationPlugin/CMakeLists.txt" : {
      "ObjectId" : "6b7e47788495decb69998d47cd32ce5363b45244",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HEADERS\n\n# shouldn't be listed here, but aren't named properly for AUTOMOC\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/QtLocationPlugin/QGCLocationPlugin.pri" : {
      "ObjectId" : "fd31ddd6e82bf0707227fabdb2778fafa816e9d3",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/QtLocationPlugin/qtlocation/src/location/maps/maps.pri" : {
      "ObjectId" : "43e0f7476f2046af5963e897ca3cf3880e738944",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/Settings/CMakeLists.txt" : {
      "ObjectId" : "504e532eab6ce55ac9f53e827ee158db445e47f6",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Terrain/CMakeLists.txt" : {
      "ObjectId" : "e04f7af89eae172b21896d0ef3e0efb8c23e7a3d",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Vehicle/CMakeLists.txt" : {
      "ObjectId" : "97ff306278e102675950bce2c8f6b8c29da975c2",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/VehicleSetup/CMakeLists.txt" : {
      "ObjectId" : "6969fd5bbee2205c9998a9a74a95544b55f08a70",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/VideoStreaming/CMakeLists.txt" : {
      "ObjectId" : "9024b35bbdfd0cd404553940949e1a7894410623",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/VideoStreaming/VideoStreaming.pri" : {
      "ObjectId" : "f4265181b3a729797fb604dbcc1728616a0b68e8",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# QGroundControl - Micro Air Vehicle Groundstation\n\n# Please see our website at <http://qgroundcontrol.org>\n\n# Maintainer:\n\n# Lorenz Meier <lm@inf.ethz.ch>\n\n# (c) 2009-2015 QGroundControl Developers\n\n#\n\n# This file is part of the open groundstation project\n\n# QGroundControl is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n\n# QGroundControl is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n\n# along with QGroundControl. If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n# Author: Gus Grubba <mavlink@grubba.com>\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#-- Depends on gstreamer, which can be found at: http://gstreamer.freedesktop.org/download/\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#- gstreamer framework installed by the gstreamer devel installer\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#- gstreamer framework installed by the gstreamer iOS SDK installer (default to home directory)\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#- gstreamer installed by default under c:/gstreamer\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Copy main GStreamer runtime files\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Copy GStreamer plugins\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#- gstreamer assumed to be installed in $$PWD/../../gstreamer-1.0-android-universal-1.14.4/armv7 (or x86)\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We want to link these plugins statically\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Rest of GStreamer dependencies\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#-- QtGstreamer (gutted to our needs)\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "src/ViewWidgets/CMakeLists.txt" : {
      "ObjectId" : "d48b0f9bca6c91326fcd0a14cb2adbce972cddb2",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/api/CMakeLists.txt" : {
      "ObjectId" : "4570932174ac3306e5ad17060b5da5c8429c1851",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/comm/CMakeLists.txt" : {
      "ObjectId" : "4a5fa752f30a0f68dd47e66d6cf98c94ba46d60c",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#BluetoothLink.cc\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# HEADERS\n\n# shouldn't be listed here, but aren't named properly for AUTOMOC\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "src/qgcunittest/CMakeLists.txt" : {
      "ObjectId" : "b9066a6ca4c9539c09df18633ea3acbfd5b880b5",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/uas/CMakeLists.txt" : {
      "ObjectId" : "edb9b2d301966aa5513fcaf980698ab9e076d377",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HEADERS\n\n# shouldn't be listed here, but aren't named properly for AUTOMOC\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/ui/CMakeLists.txt" : {
      "ObjectId" : "0a1660e979182e5010e3c18c32c45f6d60607010",
      "LastModified" : "2019-03-17T15:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HEADERS\n\n# shouldn't be listed here, but aren't named properly for AUTOMOC\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# UI\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 76,
    "QMAKE" : 13,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 9125
}