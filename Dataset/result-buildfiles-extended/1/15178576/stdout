{
  "Repository" : "15178576",
  "Revision" : "HEAD",
  "ObjectId" : "70d850fed55c9aed9bfc88e7f70aaeaf384ad11f",
  "CommitTime" : "2019-02-10T04:42:46Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ce64ea11a4ceb5bb7f49c3e9b44e2754368d3b4a",
      "LastModified" : "2017-09-06T23:25:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default to a Release build\n",
        "Line" : 5,
        "CharPositionInLine" : 59
      },
      "1" : {
        "Text" : "#find_path(GLIB_INCLUDE_DIR NAMES glib.h PATH_SUFFIXES glib-2.0)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF(UNIX)\n\n#  execute_process(COMMAND bash ${CMAKE_CURRENT_LIST_DIR}/tools/install_deps.sh)\n\n#  execute_process(COMMAND bash ${CMAKE_CURRENT_LIST_DIR}/tools/key.sh)\n\n#ENDIF(UNIX)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#se comentan los test que requieren entrada de datos leer()\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if (CMAKE_BUILD_TYPE STREQUAL \"Coverage\")\n\n#    include(CodeCoverage)\n\n#    setup_target_for_coverage(${PROJECT}_coverage ${PROJECT_TEST_NAME} coverage)\n\n#\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage -coverage\")\n\n#    SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage -coverage\")\n\n#endif() #CMAKE_BUILD_TYPE STREQUAL \"Coverage\"\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/CPack.cmake" : {
      "ObjectId" : "4d51a3ee3ccdae2f8995edb645ea0853823aa945",
      "LastModified" : "2016-07-04T02:33:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CPack\n\n# -----\n\n#\n\n# Build binary and source package installers.\n\n#\n\n# Variables common to all CPack generators\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The\n\n# CPack module generates binary and source installers in a variety of\n\n# formats using the cpack program.  Inclusion of the CPack module adds\n\n# two new targets to the resulting makefiles, package and\n\n# package_source, which build the binary and source installers,\n\n# respectively.  The generated binary installers contain everything\n\n# installed via CMake's INSTALL command (and the deprecated\n\n# INSTALL_FILES, INSTALL_PROGRAMS, and INSTALL_TARGETS commands).\n\n#\n\n# For certain kinds of binary installers (including the graphical\n\n# installers on Mac OS X and Windows), CPack generates installers that\n\n# allow users to select individual application components to install.\n\n# See CPackComponent module for that.\n\n#\n\n# The CPACK_GENERATOR variable has different meanings in different\n\n# contexts.  In your CMakeLists.txt file, CPACK_GENERATOR is a *list of\n\n# generators*: when run with no other arguments, CPack will iterate over\n\n# that list and produce one package for each generator.  In a\n\n# CPACK_PROJECT_CONFIG_FILE, though, CPACK_GENERATOR is a *string naming\n\n# a single generator*.  If you need per-cpack- generator logic to\n\n# control *other* cpack settings, then you need a\n\n# CPACK_PROJECT_CONFIG_FILE.\n\n#\n\n# The CMake source tree itself contains a CPACK_PROJECT_CONFIG_FILE.\n\n# See the top level file CMakeCPackOptions.cmake.in for an example.\n\n#\n\n# If set, the CPACK_PROJECT_CONFIG_FILE is included automatically on a\n\n# per-generator basis.  It only need contain overrides.\n\n#\n\n# Here's how it works:\n\n#\n\n# * cpack runs\n\n# * it includes CPackConfig.cmake\n\n# * it iterates over the generators listed in that file's\n\n#   CPACK_GENERATOR list variable (unless told to use just a\n\n#   specific one via -G on the command line...)\n\n# * foreach generator, it then\n\n#\n\n#   - sets CPACK_GENERATOR to the one currently being iterated\n\n#   - includes the CPACK_PROJECT_CONFIG_FILE\n\n#   - produces the package for that generator\n\n#\n\n# This is the key: For each generator listed in CPACK_GENERATOR in\n\n# CPackConfig.cmake, cpack will *reset* CPACK_GENERATOR internally to\n\n# *the one currently being used* and then include the\n\n# CPACK_PROJECT_CONFIG_FILE.\n\n#\n\n# Before including this CPack module in your CMakeLists.txt file, there\n\n# are a variety of variables that can be set to customize the resulting\n\n# installers.  The most commonly-used variables are:\n\n#\n\n# .. variable:: CPACK_PACKAGE_NAME\n\n#\n\n#  The name of the package (or application). If not specified, defaults to\n\n#  the project name.\n\n#\n\n# .. variable:: CPACK_PACKAGE_VENDOR\n\n#\n\n#  The name of the package vendor. (e.g., \"Kitware\").\n\n#\n\n# .. variable:: CPACK_PACKAGE_DIRECTORY\n\n#\n\n#  The directory in which CPack is doing its packaging. If it is not set\n\n#  then this will default (internally) to the build dir. This variable may\n\n#  be defined in CPack config file or from the cpack command line option\n\n#  \"-B\". If set the command line option override the value found in the\n\n#  config file.\n\n#\n\n# .. variable:: CPACK_PACKAGE_VERSION_MAJOR\n\n#\n\n#  Package major Version\n\n#\n\n# .. variable:: CPACK_PACKAGE_VERSION_MINOR\n\n#\n\n#  Package minor Version\n\n#\n\n# .. variable:: CPACK_PACKAGE_VERSION_PATCH\n\n#\n\n#  Package patch Version\n\n#\n\n# .. variable:: CPACK_PACKAGE_DESCRIPTION_FILE\n\n#\n\n#  A text file used to describe the project. Used, for example, the\n\n#  introduction screen of a CPack-generated Windows installer to describe\n\n#  the project.\n\n#\n\n# .. variable:: CPACK_PACKAGE_DESCRIPTION_SUMMARY\n\n#\n\n#  Short description of the project (only a few words).\n\n#\n\n# .. variable:: CPACK_PACKAGE_FILE_NAME\n\n#\n\n#  The name of the package file to generate, not including the\n\n#  extension. For example, cmake-2.6.1-Linux-i686.  The default value is::\n\n#\n\n#   ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}.\n\n#\n\n# .. variable:: CPACK_PACKAGE_INSTALL_DIRECTORY\n\n#\n\n#  Installation directory on the target system. This may be used by some\n\n#  CPack generators like NSIS to create an installation directory e.g.,\n\n#  \"CMake 2.5\" below the installation prefix. All installed element will be\n\n#  put inside this directory.\n\n#\n\n# .. variable:: CPACK_PACKAGE_ICON\n\n#\n\n#  A branding image that will be displayed inside the installer (used by GUI\n\n#  installers).\n\n#\n\n# .. variable:: CPACK_PROJECT_CONFIG_FILE\n\n#\n\n#  CPack-time project CPack configuration file. This file included at cpack\n\n#  time, once per generator after CPack has set CPACK_GENERATOR to the\n\n#  actual generator being used. It allows per-generator setting of CPACK_*\n\n#  variables at cpack time.\n\n#\n\n# .. variable:: CPACK_RESOURCE_FILE_LICENSE\n\n#\n\n#  License to be embedded in the installer. It will typically be displayed\n\n#  to the user by the produced installer (often with an explicit \"Accept\"\n\n#  button, for graphical installers) prior to installation. This license\n\n#  file is NOT added to installed file but is used by some CPack generators\n\n#  like NSIS. If you want to install a license file (may be the same as this\n\n#  one) along with your project you must add an appropriate CMake INSTALL\n\n#  command in your CMakeLists.txt.\n\n#\n\n# .. variable:: CPACK_RESOURCE_FILE_README\n\n#\n\n#  ReadMe file to be embedded in the installer. It typically describes in\n\n#  some detail the purpose of the project during the installation. Not all\n\n#  CPack generators uses this file.\n\n#\n\n# .. variable:: CPACK_RESOURCE_FILE_WELCOME\n\n#\n\n#  Welcome file to be embedded in the installer. It welcomes users to this\n\n#  installer.  Typically used in the graphical installers on Windows and Mac\n\n#  OS X.\n\n#\n\n# .. variable:: CPACK_MONOLITHIC_INSTALL\n\n#\n\n#  Disables the component-based installation mechanism. When set the\n\n#  component specification is ignored and all installed items are put in a\n\n#  single \"MONOLITHIC\" package.  Some CPack generators do monolithic\n\n#  packaging by default and may be asked to do component packaging by\n\n#  setting CPACK_<GENNAME>_COMPONENT_INSTALL to 1/TRUE.\n\n#\n\n# .. variable:: CPACK_GENERATOR\n\n#\n\n#  List of CPack generators to use. If not specified, CPack will create a\n\n#  set of options CPACK_BINARY_<GENNAME> (e.g., CPACK_BINARY_NSIS) allowing\n\n#  the user to enable/disable individual generators. This variable may be\n\n#  used on the command line as well as in::\n\n#\n\n#   cpack -D CPACK_GENERATOR=\"ZIP;TGZ\" /path/to/build/tree\n\n#\n\n# .. variable:: CPACK_OUTPUT_CONFIG_FILE\n\n#\n\n#  The name of the CPack binary configuration file. This file is the CPack\n\n#  configuration generated by the CPack module for binary\n\n#  installers. Defaults to CPackConfig.cmake.\n\n#\n\n# .. variable:: CPACK_PACKAGE_EXECUTABLES\n\n#\n\n#  Lists each of the executables and associated text label to be used to\n\n#  create Start Menu shortcuts. For example, setting this to the list\n\n#  ccmake;CMake will create a shortcut named \"CMake\" that will execute the\n\n#  installed executable ccmake. Not all CPack generators use it (at least\n\n#  NSIS, WIX and OSXX11 do).\n\n#\n\n# .. variable:: CPACK_STRIP_FILES\n\n#\n\n#  List of files to be stripped. Starting with CMake 2.6.0 CPACK_STRIP_FILES\n\n#  will be a boolean variable which enables stripping of all files (a list\n\n#  of files evaluates to TRUE in CMake, so this change is compatible).\n\n#\n\n# .. variable:: CPACK_VERBATIM_VARIABLES\n\n#\n\n#  If set to TRUE, values of variables prefixed with CPACK_ will be escaped\n\n#  before being written to the configuration files, so that the cpack program\n\n#  receives them exactly as they were specified. If not, characters like quotes\n\n#  and backslashes can cause parsing errors or alter the value received by the\n\n#  cpack program. Defaults to FALSE for backwards compatibility.\n\n#\n\n#  * Mandatory : NO\n\n#  * Default   : FALSE\n\n#\n\n# The following CPack variables are specific to source packages, and\n\n# will not affect binary packages:\n\n#\n\n# .. variable:: CPACK_SOURCE_PACKAGE_FILE_NAME\n\n#\n\n#  The name of the source package. For example cmake-2.6.1.\n\n#\n\n# .. variable:: CPACK_SOURCE_STRIP_FILES\n\n#\n\n#  List of files in the source tree that will be stripped. Starting with\n\n#  CMake 2.6.0 CPACK_SOURCE_STRIP_FILES will be a boolean variable which\n\n#  enables stripping of all files (a list of files evaluates to TRUE in\n\n#  CMake, so this change is compatible).\n\n#\n\n# .. variable:: CPACK_SOURCE_GENERATOR\n\n#\n\n#  List of generators used for the source packages. As with CPACK_GENERATOR,\n\n#  if this is not specified then CPack will create a set of options (e.g.,\n\n#  CPACK_SOURCE_ZIP) allowing users to select which packages will be\n\n#  generated.\n\n#\n\n# .. variable:: CPACK_SOURCE_OUTPUT_CONFIG_FILE\n\n#\n\n#  The name of the CPack source configuration file. This file is the CPack\n\n#  configuration generated by the CPack module for source\n\n#  installers. Defaults to CPackSourceConfig.cmake.\n\n#\n\n# .. variable:: CPACK_SOURCE_IGNORE_FILES\n\n#\n\n#  Pattern of files in the source tree that won't be packaged when building\n\n#  a source package. This is a list of regular expression patterns (that\n\n#  must be properly escaped), e.g.,\n\n#  /CVS/;/\\\\.svn/;\\\\.swp$;\\\\.#;/#;.*~;cscope.*\n\n#\n\n# The following variables are for advanced uses of CPack:\n\n#\n\n# .. variable:: CPACK_CMAKE_GENERATOR\n\n#\n\n#  What CMake generator should be used if the project is CMake\n\n#  project. Defaults to the value of CMAKE_GENERATOR few users will want to\n\n#  change this setting.\n\n#\n\n# .. variable:: CPACK_INSTALL_CMAKE_PROJECTS\n\n#\n\n#  List of four values that specify what project to install. The four values\n\n#  are: Build directory, Project Name, Project Component, Directory. If\n\n#  omitted, CPack will build an installer that installs everything.\n\n#\n\n# .. variable:: CPACK_SYSTEM_NAME\n\n#\n\n#  System name, defaults to the value of ${CMAKE_SYSTEM_NAME}.\n\n#\n\n# .. variable:: CPACK_PACKAGE_VERSION\n\n#\n\n#  Package full version, used internally. By default, this is built from\n\n#  CPACK_PACKAGE_VERSION_MAJOR, CPACK_PACKAGE_VERSION_MINOR, and\n\n#  CPACK_PACKAGE_VERSION_PATCH.\n\n#\n\n# .. variable:: CPACK_TOPLEVEL_TAG\n\n#\n\n#  Directory for the installed files.\n\n#\n\n# .. variable:: CPACK_INSTALL_COMMANDS\n\n#\n\n#  Extra commands to install components.\n\n#\n\n# .. variable:: CPACK_INSTALLED_DIRECTORIES\n\n#\n\n#  Extra directories to install.\n\n#\n\n# .. variable:: CPACK_PACKAGE_INSTALL_REGISTRY_KEY\n\n#\n\n#  Registry key used when installing this project. This is only used by\n\n#  installer for Windows.  The default value is based on the installation\n\n#  directory.\n\n#\n\n# .. variable:: CPACK_CREATE_DESKTOP_LINKS\n\n#\n\n#  List of desktop links to create.\n\n#  Each desktop link requires a corresponding start menu shortcut\n\n#  as created by :variable:`CPACK_PACKAGE_EXECUTABLES`.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define this var in order to avoid (or warn) concerning multiple inclusion\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Pick a configuration file\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Backward compatibility\n\n# Include CPackComponent macros if it has not already been included before.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macro for setting values if a user did not overwrite them\n\n# Mangles CMake-special characters. Only kept for backwards compatibility.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# cpack_encode_variables - Function to encode variables for the configuration file\n\n# find any variable that starts with CPACK and create a variable\n\n# _CPACK_OTHER_VARIABLES_ that contains SET commands for\n\n# each cpack variable.  _CPACK_OTHER_VARIABLES_ is then\n\n# used as an @ replacment in configure_file for the CPackConfig.\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Internal use functions\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set the package name\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Root dir: default value should be the string literal \"$PROGRAMFILES\"\n\n# for backwards compatibility. Projects may set this value to anything.\n\n# When creating 64 bit binaries we set the default value to \"$PROGRAMFILES64\"\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# <project>-<major>.<minor>.<patch>-<release>-<platform>.<pkgtype>\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# always force to exactly \"true\" or \"false\" for CPack.Info.plist.in:\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#.rst:\n\n# .. variable:: CPACK_BINARY_<GENNAME>\n\n#\n\n#  CPack generated options for binary generators. The CPack.cmake module\n\n#  generates (when CPACK_GENERATOR is not set) a set of CMake options (see\n\n#  CMake option command) which may then be used to select the CPack\n\n#  generator(s) to be used when launching the package target.\n\n#\n\n#  Provide options to choose generators we might check here if the required\n\n#  tools for the generates exist and set the defaults according to the results\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Provide options to choose source generators\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# mark the above options as advanced\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set some other variables\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if the user has set CPACK_NSIS_DISPLAY_NAME remember it\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# if the user has set CPACK_NSIS_DISPLAY\n\n# explicitly, then use that as the default\n\n# value of CPACK_NSIS_PACKAGE_NAME  instead\n\n# of CPACK_PACKAGE_INSTALL_DIRECTORY\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# WiX specific variables\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set sysroot so SDK tools can be used\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The user has provided the set of components to be installed as\n\n# part of a component-based installation; trust her.\n",
        "Line" : 600,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# If the user has not specifically requested a monolithic installer\n\n# but has specified components in various \"install\" commands, tell\n\n# CPack about those components.\n",
        "Line" : 605,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Only one component: this is not a component-based installation\n\n# (at least, it isn't a component-based installation, but may\n\n# become one later if the user uses the cpack_add_* commands).\n",
        "Line" : 612,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# CMake always generates a component named \"Unspecified\", which is\n\n# used to install everything that doesn't have an explicitly-provided\n\n# component. Since these files should always be installed, we'll make\n\n# them hidden and required.\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Generate source file\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cmake/Modules/CodeCoverage.cmake" : {
      "ObjectId" : "f064b51dfdc8b39b422b23ae8dae06378c106e5d",
      "LastModified" : "2016-07-21T03:12:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 128,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 132,
        "CharPositionInLine" : 9
      },
      "10" : {
        "Text" : "# Setup target\n",
        "Line" : 139,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Run tests\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 164,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 175,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 179,
        "CharPositionInLine" : 9
      },
      "19" : {
        "Text" : "# Run tests\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Running gcovr\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 192,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 198,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 23
    },
    "cmake/Modules/FindCURL.cmake" : {
      "ObjectId" : "200f8c388bf55965bb86a5cff45519931d48744e",
      "LastModified" : "2016-10-06T15:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCURL\n\n# --------\n\n#\n\n# Find curl\n\n#\n\n# Find the native CURL headers and libraries.\n\n#\n\n# ::\n\n#\n\n#   CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#   CURL_LIBRARIES      - List of libraries when using curl.\n\n#   CURL_FOUND          - True if curl found.\n\n#   CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CURL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindGlib.cmake" : {
      "ObjectId" : "8b7be89810a5cd3b2d795127c3b3ff10233d4fd5",
      "LastModified" : "2016-10-06T15:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib-2.0 (with gobject)\n\n# Once done, this will define\n\n#\n\n#  Glib_FOUND - system has Glib\n\n#  Glib_INCLUDE_DIRS - the Glib include directories\n\n#  Glib_LIBRARIES - link these to use Glib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindMd5sum.cmake" : {
      "ObjectId" : "1552fd0df57f5ebea4b3986961b0858b20753126",
      "LastModified" : "2016-10-06T15:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Program: GDCM (Grass Root DICOM). A DICOM library\n\n#  Module:  $URL$\n\n#\n\n#  Copyright (c) 2006-2008 Mathieu Malaterre\n\n#  All rights reserved.\n\n#  See Copyright.txt or http://gdcm.sourceforge.net/Copyright.html for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even\n\n#     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#     PURPOSE.  See the above copyright notice for more information.\n\n#\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find md5sum\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compute the md5sums file by doing a recursion of directory: `DIRECTORY`\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Super ugly and barely readable but you need that in order to\n\n# work around a deficiency in EXECUTE_PROCESS which does not have dependencie scanning\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Report the results.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindRegex.cmake" : {
      "ObjectId" : "bcae6f94bed720178566c43e258cf47d71a11baa",
      "LastModified" : "2017-05-22T16:07:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#                                               -*- cmake -*-\n\n#\n\n#  FindRegex.cmake: Try to find Regex\n\n#\n\n#  Copyright (C) 2005-2013 EDF-EADS-Phimeca\n\n#\n\n#  This library is free software: you can redistribute it and/or modify\n\n#  it under the terms of the GNU Lesser General Public License as published by\n\n#  the Free Software Foundation, either version 3 of the License, or\n\n#  (at your option) any later version.\n\n#\n\n#  This library is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU Lesser General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU Lesser General Public\n\n#  along with this library.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#  @author dutka\n\n#  @date   2010-02-04 16:44:49 +0100 (Thu, 04 Feb 2010)\n\n#\n\n#\n\n# - Try to find Regex\n\n# Once done this will define\n\n#\n\n#  REGEX_FOUND - System has Regex\n\n#  REGEX_INCLUDE_DIR - The Regex include directory\n\n#  REGEX_LIBRARIES - The libraries needed to use Regex\n\n#  REGEX_DEFINITIONS - Compiler switches required for using Regex\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#IF (NOT WIN32)\n\n#   # use pkg-config to get the directories and then use these values\n\n#   # in the FIND_PATH() and FIND_LIBRARY() calls\n\n#   FIND_PACKAGE(PkgConfig)\n\n#   PKG_CHECK_MODULES(PC_REGEX regex)\n\n#   SET(REGEX_DEFINITIONS ${PC_REGEX_CFLAGS_OTHER})\n\n#ENDIF (NOT WIN32)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set REGEX_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/UseDebian.cmake" : {
      "ObjectId" : "bb1aa151cfa63f9a84e7e8220dc073a85ef0d5af",
      "LastModified" : "2017-05-22T16:07:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#\n\n#  Program: GDCM (Grass Root DICOM). A DICOM library\n\n#  Module:  $URL$\n\n#\n\n#  Copyright (c) 2006-2008 Mathieu Malaterre\n\n#  All rights reserved.\n\n#  See Copyright.txt or http://gdcm.sourceforge.net/Copyright.html for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even\n\n#     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#     PURPOSE.  See the above copyright notice for more information.\n\n#\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create .deb file\n\n# You need to setup CPack first !\n\n# UGLY: I reuse CPACK_NSIS_CONTACT to get the contact name for the debian package...\n\n# TODO: How do I transmit the 'Depends' line ?\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DOCUMENTATION; You need to fill these values to set the control file:\n\n# \"Package: ${DEBIAN_PACKAGE_NAME}\n\n# Version: ${DEBIAN_PACKAGE_VERSION}\n\n# Architecture: ${DEBIAN_ARCHITECTURE}\n\n# Depends: ${DEBIAN_PACKAGE_DEPENDS}\n\n# Maintainer: ${CPACK_NSIS_CONTACT}\n\n# Description: ${CPACK_PACKAGE_DESCRIPTION_SUMMARY}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Thanks:\n\n# Eric Noulard for initial UseRpmTools used as template\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Detect if CPack was included or not\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# $ ar tv cmake_2.4.5-1_i386.deb\n\n# rw-r--r-- 0/0      4 Dec  4 22:58 2006 debian-binary\n\n# rw-r--r-- 0/0   8981 Dec  4 22:58 2006 control.tar.gz\n\n# rw-r--r-- 0/0 4893146 Dec  4 22:58 2006 data.tar.gz\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Need a newline:\n\n# dpkg-deb: archive has no newlines in header\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# seems better to ADD_CUSTOM_COMMAND this way debian-binary may\n\n# be regenerated when make is called.\n\n#      FILE(WRITE ${CMAKE_BINARY_DIR}/debian-binary \"2.0\n\n#\" )\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# debian policy enforce lower case for package name\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# There is no such thing as i686 architecture on debian, you should use i386 instead\n\n# $ dpkg --print-architecture\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#MESSAGE(${CMAKE_SYSTEM_PROCESSOR})\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# FIXME:\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# I have no friggin clue how cpack works, let's reinvent the wheel instead\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#INCLUDE(${CMAKE_BINARY_DIR}/CPackConfig.cmake)\n\n#ADD_CUSTOM_TARGET(data_tgz\n\n#  COMMAND cpack -G TGZ --config CPackConfig.cmake\n\n## TODO: How to get the cpack package name ?\n\n#  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_BINARY_DIR}/${CPACK_PACKAGE_FILE_NAME}.tar.gz ${CMAKE_BINARY_DIR}/data.tar.gz\n\n#)  \n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# let's create a temp directory to call 'DESTDIR=... make install' into:\n\n# cleanup\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# make dir:\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# calling cmake -P cmake_install.cmake is the same as calling make install:\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# create data.tar.gz from the make install stuff\n\n# all files starts with: ./usr\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# get all the files to be installed:\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# create a tarball (control.tar.gz) of control and md5sums\n\n# files need to be in relative path: ./md5sums ./control ...\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Warning order is important:\n\n# ar -r your-package-name.deb debian-binary control.tar.gz data.tar.gz\n\n# eg: cmake_2.4.5-1_i386.deb\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# the final target:\n",
        "Line" : 171,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# BUG: debian_package is not removed during a 'make clean':\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 23
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "32b6a384da22c65fa702ecdb2b089c886e620cb2",
      "LastModified" : "2019-02-10T04:09:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -fprofile-arcs -ftest-coverage -coverage\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#librerias\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#extra\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\n\n#SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create dynamic library\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Create static library\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#ELSE()\n\n#https://stackoverflow.com/questions/13556885/how-to-change-the-executable-output-directory-for-win32-builds-in-cmake\n\n#  add_custom_command(target latino\n\n#          POST_BUILD\n\n#          COMMAND ${CMAKE_COMMAND} -E copy ${EXAMPLE_BIN_NAME} ${PROJECT_BINARY_DIR}/.)\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#crear paquete .deb https://cmake.org/Wiki/CMake/CPack/Examples/Linux/DEB\n\n#ejecutar en terminal\n\n#make package\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/linenoise/CMakeLists.txt" : {
      "ObjectId" : "89a86c60286b3c2fb076e848c3654f04928178b7",
      "LastModified" : "2017-05-22T16:07:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_include_directories(linenoise PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 10
  },
  "ElapsedTime" : 2141
}