{
  "Repository" : "13127263",
  "Revision" : "HEAD",
  "ObjectId" : "ca3dbb5a338ee83ab45901fae74669f736271e88",
  "CommitTime" : "2019-04-02T15:04:41Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "75d66a8ea34626a8007c78a52be1c814c7db8da4",
      "LastModified" : "2019-04-02T15:04:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Ganeti makefile\n\n# - Indent with tabs only.\n\n# - Keep files sorted; one line per file.\n\n# - Directories in lib/ must have their own *dir variable (see hypervisor).\n\n# - All directories must be listed DIRS.\n\n# - Use autogen.sh to generate Makefile.in and configure script.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For distcheck we need the haskell tests to be enabled. Note:\n\n# The \"correct\" way would be to define AM_DISTCHECK_CONFIGURE_FLAGS.\n\n# However, we still have to support older versions of autotools,\n\n# so we cannot use that yet, hence we fall back to..\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Automake doesn't export these variables before version 1.10.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helper values for calling builtin functions\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Helper function to strip src/ and test/hs/ from a list\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use bash in order to be able to use pipefail\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable colors in shelltest\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use C.UTF-8 for tests/checks when available, fall back to en_US.UTF-8 else\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# starting as of Ganeti 2.10, all files are stored in two directories,\n\n# with only symbolic links added at other places.\n\n#\n\n# $(versiondir) contains most of Ganeti and all architecture-dependent files\n\n# $(versionedsharedir) contains only architecture-independent files; all python\n\n# executables need to go directly to $(versionedsharedir), as all ganeti python\n\n# mdules are installed outside the usual python path, i.e., as private modules.\n\n#\n\n# $(defaultversiondir) and $(defaultversionedsharedir) are the corresponding\n\n# directories for \"the currently running\" version of Ganeti. We never install\n\n# there, but all symbolic links go there, rather than directory to $(versiondir)\n\n# or $(versionedsharedir). Note that all links to $(default*dir) need to be stable;\n\n# so, if some currently architecture-independent executable is replaced by an\n\n# architecture-dependent one (and hence has to go under $(versiondir)), add a link\n\n# under $(versionedsharedir) but do not change the external links.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Note: these are automake-specific variables, and must be named after\n\n# the directory + 'dir' suffix\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Delete output file if an error occurred while building it\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Haskell directories without the roots (src, test/hs)\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# some helper vars\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# these are all built from the underlying %.in sources\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Generates file names such as \"doc/man-gnt-instance.rst\"\n",
        "Line" : 757,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Haskell programs to be installed in $PREFIX/bin\n",
        "Line" : 760,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Haskell programs to be installed in the MYEXECLIB dir\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Haskell programs to be compiled by \"make really-all\"\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# All Haskell non-test programs to be compiled but not automatically installed\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Haskell programs that cannot be disabled at configure (e.g., unlike\n\n# 'mon-collector')\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# GHC >= 7.8 stopped putting underscores into -dep-suffix by itself\n\n# (https://ghc.haskell.org/trac/ghc/ticket/9749) so we have to put them.\n\n# It also needs -dep-suffix \"\" for the .o file.\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# GHC > 7.6 needs -dynamic-too when using Template Haskell since its\n\n# ghci is switched to loading dynamic libraries by default.\n\n# It must only be used in non-profiling GHC invocations.\n\n# We also don't use it in compilations that use HTEST_SUFFIX (which are\n\n# compiled with -fhpc) because HPC coverage doesn't interact well with\n\n# GHCI shared lib loading (https://ghc.haskell.org/trac/ghc/ticket/9762).\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# extra flags that can be overriden on the command line (e.g. -Wwarn, etc.)\n",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# combination of HEXTRA and HEXTRA_CONFIGURE\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# extra flags used for test/hs/htest\n\n# Only use the threaded runtime and run tests in parallel for GHC > 7.6. A bug\n\n# in base that wasn't fixed until 4.7.0.0 in GHC 7.8 causes random file lock\n\n# errors in the JQueue tests with the threaded runtime.\n\n# See https://ghc.haskell.org/trac/ghc/ticket/7646\n",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# exclude options for coverage reports\n",
        "Line" : 866,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Note: we use here an order-only prerequisite, as the contents of\n\n# _constants.py are not actually influencing the html build output: it\n\n# has to exist in order for the sphinx module to be loaded\n\n# successfully, but we certainly don't want the docs to be rebuilt if\n\n# it changes\n",
        "Line" : 1171,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Sphinx provides little control over what content should be included. Some\n\n## mechanisms exist, but they all have drawbacks or actual issues. Since we\n\n## build two different versions of the documentation--once without man pages and\n\n## once, if enabled, with them--some control is necessary. xmpp-wrapper provides\n\n## us with this, but requires running in a temporary directory. It moves the\n\n## correct files into place depending on environment variables.\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Things to build but not to install (add it to EXTRA_DIST if it should be\n\n# distributed)\n",
        "Line" : 1260,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# FIXME: this is a hardcoded logic, instead of auto-resolving\n",
        "Line" : 1340,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Since ghc -M does not generate dependency line for object files, dependencies\n\n# from a target executable seed object (e.g. src/hluxid.o) to objects which\n\n# finally will be linked to the target object (e.g. src/Ganeti/Daemon.o) are\n\n# missing in Makefile.ghc.\n\n# see: https://www.haskell.org/ghc/docs/7.6.2/html/users_guide/separate-compilation.html#makefile-dependencies\n\n# Following substitutions will add dependencies between object files which\n\n# corresponds to the interface file already there as a dependency for each\n\n# object listed in Makefile.ghc.\n\n# e.g. src/hluxid.o : src/Ganeti/Daemon.hi\n\n#        => src/hluxid.o : src/Ganeti/Daemon.hi src/Ganeti/Daemon.o\n",
        "Line" : 1358,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Contains the package-id flags for the current build: \"-package-id\" followed\n\n# by the name and hash of the package, one for each dependency.\n\n# Obtained from the setup-config using the Cabal API\n\n# (CabalDependenciesMacros.hs) after `cabal configure`.\n\n# This file is created along with HASKELL_PACKAGE_VERSIONS_FILE; if you want\n\n# to depend on it in a rule, depend on HASKELL_PACKAGE_VERSIONS_FILE instead.\n",
        "Line" : 1372,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Defines the MIN_VERSION_* macros for all Haskell packages used in this\n\n# compilation.\n\n# The versions are determined using `cabal configure`, which takes them from\n\n# the ghc-pkg database.\n\n# At the moment, we don't support cabal sandboxes, so we use cabal configure\n\n# with the --user flag.\n\n# Note: `cabal configure` and CabalDependenciesMacros.hs perform no\n\n# downloading (only `cabal install` can do that).\n",
        "Line" : 1380,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Like the %.o rule, but allows access to the test/hs directory.\n\n# This uses HFLAGS instead of HTEST_FLAGS because it's only for generating\n\n# object files (.o for GHC <= 7.6, .o/.so for newer GHCs) that are loaded\n\n# in GHCI when evaluating TH. The actual test-with-coverage .hpc_o files\n\n# are created in the `%.$(HTEST_SUFFIX)_o` rule.\n",
        "Line" : 1402,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# For TH+profiling we need to compile twice: Once without profiling,\n\n# and then once with profiling. See\n\n# http://www.haskell.org/ghc/docs/7.0.4/html/users_guide/template-haskell.html#id636646\n",
        "Line" : 1421,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# We depend on the non-test .o file here because we need the corresponding .so\n\n# file for GHC > 7.6 ghci dynamic loading for TH, and creating the .o file\n\n# will create the .so file since we use -dynamic-too (using the `test/hs/%.o`\n\n# rule).\n",
        "Line" : 1435,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# strip path prefixes off the sbin scripts\n",
        "Line" : 1490,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# compute the basenames of the myexeclib_scripts\n",
        "Line" : 1577,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Remove extensions from all filenames in man_MANS\n",
        "Line" : 1691,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# test dependency\n",
        "Line" : 2052,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Environment for all tests\n",
        "Line" : 2063,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Environment for tests run by automake\n",
        "Line" : 2070,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "## Extract constant names from 'Constants.hs' by extracting the left\n\n## side of all lines containing an equal sign (i.e., '=') and\n\n## prepending the apostrophe sign (i.e., \"'\").\n\n##\n\n## For example, the constant\n\n##   adminstDown = ...\n\n## becomes\n\n##   'adminstDown\n",
        "Line" : 2311,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Generating the RPC wrappers depends on many things, so make sure\n\n# it's built at the end of the built sources\n",
        "Line" : 2450,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "## Writes sed script to replace placeholders with build-time values. The\n\n## additional quotes after the first @ sign are necessary to stop configure\n\n## from replacing those values as well.\n",
        "Line" : 2476,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Using deferred evaluation\n",
        "Line" : 2523,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# We need to create symlinks because \"make distcheck\" will not install Python\n\n# files when building.\n",
        "Line" : 2579,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# E111: indentation is not a multiple of four\n\n# E121: continuation line indentation is not a multiple of four\n\n#       (since our indent level is not 4)\n\n# E125: continuation line does not distinguish itself from next logical line\n\n#       (since our indent level is not 4)\n\n# E123: closing bracket does not match indentation of opening bracket's line\n\n# E127: continuation line over-indented for visual indent\n\n#       (since our indent level is not 4)\n\n# note: do NOT add E128 here; it's a valid style error in most cases!\n\n# I've seen real errors, but also some cases were we indent wrongly\n\n# due to line length; try to rework the cases where it is triggered,\n\n# instead of silencing it\n\n# E261: at least two spaces before inline comment\n\n# E501: line too long (80 characters)\n",
        "Line" : 2694,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For excluding pep8 expects filenames only, not whole paths\n",
        "Line" : 2710,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# A space-separated list of pylint warnings to completely ignore:\n\n# I0013 = disable warnings for ignoring whole files\n\n# R0912 = disable too many branches warning. It's useful, but ganeti requires\n\n#         a lot of refactoring to fix this.\n\n# R0204 = disable redefined-variable-type warning. There are a large number of\n\n#         cases where Ganeti assigns multiple types (eg set/list, float/int) to\n\n#         the same variable, and these are benign.\n\n# C0325 = disable superfluous-parens. There are a lot of cases where this is\n\n#         overzealous, eg where we use parens to make it clear that we're\n\n#         deliberately doing a comparison that should yield bool, or are using\n\n#         parens clarify precedence or to allow multi-line expressions.\n\n# C0330 = disable wrong indentation warnings. pylint is much more strict than\n\n#         pep8, and it would be too invasive to fix all these.\n",
        "Line" : 2713,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Additional pylint options\n",
        "Line" : 2727,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# The combined set of pylint options\n",
        "Line" : 2729,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Whitelist loading pycurl C extension for attribute checking\n",
        "Line" : 2733,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# FIXME: lint all test code, not just the newly added test support\n",
        "Line" : 2758,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# a dist hook rule for updating the vcs-version file; this is\n\n# hardcoded due to where it needs to build the file...\n",
        "Line" : 2785,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# a distcheck hook rule for catching revision control directories\n",
        "Line" : 2792,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Empty files or directories should not be distributed. They can cause\n\n# unnecessary warnings for packagers. Directories used by automake during\n\n# distcheck must be excluded.\n",
        "Line" : 2806,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Backwards compatible distcheck-release target\n",
        "Line" : 2820,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "##src/}; \\\n\t  f_notst=$${f_nosrc##test/hs/}; \\\n\t  f_html=$${f_notst%%.hs}.html; \\\n\t  $(HSCOLOUR) -css -anchor $$file > $(APIDOC_HS_DIR)/$$f_html ; \\\n\tdone ; \\\n\t$(HADDOCK) --odir $(APIDOC_HS_DIR) --html --hoogle --ignore-all-exports -w \\\n\t  -t ganeti -p src/haddock-prologue \\\n\t  --source-module=\"%{MODULE/.//}.html\" \\\n\t  --source-entity=\"%{MODULE/.//}.html#%{NAME}\" \\\n\t  $$OPTGHC \\\n\t  $(HS_LIBTESTBUILT_SRCS)\n",
        "Line" : 2917,
        "CharPositionInLine" : 18
      },
      "59" : {
        "Text" : "# Special \"kind-of-QA\" target for htools, needs special setup (all\n\n# tools compiled with -fhpc)\n",
        "Line" : 2981,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# target to rebuild all man pages (both groff and html output)\n",
        "Line" : 3012,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Executable symlinks\n",
        "Line" : 3020,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Builds the cabal file\n",
        "Line" : 3027,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Target that builds all binaries (including those that are not\n\n# rebuilt except when running the tests)\n",
        "Line" : 3049,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# we don't need the ancient implicit rules:\n",
        "Line" : 3054,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# support inspecting the value of a make variable\n",
        "Line" : 3063,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# vim: set noet :\n",
        "Line" : 3068,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 67,
      "Errorlog" : "line 1368:31 token recognition error at: '\\1'\nline 1368:37 token recognition error at: '\\1'\nline 1368:63 token recognition error at: '\\1'\nline 1368:69 token recognition error at: '\\1'\nline 2320:13 token recognition error at: '\"/=/ s/\\(.*\\) =.*/    '\\1'\nline 2417:67 token recognition error at: '\"\\1'\nline 2417:70 token recognition error at: '\",\\2'\n"
    }
  },
  "FileTypes" : {
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1265
}