{
  "Repository" : "25886483",
  "Revision" : "HEAD",
  "ObjectId" : "ceadcd49927c3e10b10419d4281725e1fc95a7f0",
  "CommitTime" : "2019-04-09T08:02:51Z",
  "Files" : {
    "Marlin/Makefile" : {
      "ObjectId" : "3bd0ae3bf49b34cb12ebd8c26502e0ab51a57d4c",
      "LastModified" : "2014-12-12T10:54:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Sprinter Arduino Project Makefile\n\n#\n\n# Makefile Based on:\n\n# Arduino 0011 Makefile\n\n# Arduino adaptation by mellis, eighthave, oli.keller\n\n# Marlin adaption by Daid\n\n#\n\n# This has been tested with Arduino 0022.\n\n#\n\n# This makefile allows you to build sketches from the command line\n\n# without the Arduino environment (or Java).\n\n#\n\n# Detailed instructions for using the makefile:\n\n#\n\n#  1. Modify the line containg \"ARDUINO_INSTALL_DIR\" to point to the directory that\n\n#     contains the Arduino installation (for example, under Mac OS X, this\n\n#     might be /Applications/Arduino.app/Contents/Resources/Java).\n\n#\n\n#  2. Modify the line containing \"UPLOAD_PORT\" to refer to the filename\n\n#     representing the USB or serial connection to your Arduino board\n\n#     (e.g. UPLOAD_PORT = /dev/tty.USB0).  If the exact name of this file\n\n#     changes, you can use * as a wildcard (e.g. UPLOAD_PORT = /dev/tty.usb*).\n\n#\n\n#  3. Set the line containing \"MCU\" to match your board's processor.\n\n#     Older one's are atmega8 based, newer ones like Arduino Mini, Bluetooth\n\n#     or Diecimila have the atmega168.  If you're using a LilyPad Arduino,\n\n#     change F_CPU to 8000000. If you are using Gen7 electronics, you\n\n#     probably need to use 20000000. Either way, you must regenerate\n\n#     the speed lookup table with create_speed_lookuptable.py.\n\n#\n\n#  4. Type \"make\" and press enter to compile/verify your program.\n\n#\n\n#  5. Type \"make upload\", reset your Arduino board, and press enter to\n\n#     upload your program to the Arduino board.\n\n#\n\n# Note that all settings are set with ?=, this means you can override them\n\n# from the commandline with \"make HARDWARE_MOTHERBOARD=71\" for example\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This defined the board you are compiling for (see Configuration.h for the options)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Arduino source install directory, and version number\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You can optionally set a path to the avr-gcc tools. Requires a trailing slash. (ex: /usr/local/avr-gcc/bin)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Programmer configuration\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Directory used to build files in, contains all the build files, from object files to the final hex file.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This defines whether Liquid_TWI2 support will be built\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# this defines if Wire is needed\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "############################################################################\n\n# Below here nothing should be changed...\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Here the Arduino variant is selected by the board type\n\n# HARDWARE_VARIANT = \"arduino\", \"Sanguino\", \"Gen7\", ...\n\n# MCU = \"atmega1280\", \"Mega2560\", \"atmega2560\", \"atmega644p\", ...\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Gen7\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#RAMPS\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Duemilanove w/ ATMega328P pin assignment\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Gen6\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Sanguinololu\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Ultimaker\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Teensylu\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Gen3+\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Megatronics\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#Alpha OMCA board\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#Final OMCA board\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#Rambo\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Azteeg\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Be sure to regenerate speed_lookuptable.h with create_speed_lookuptable.py\n\n# if you are setting this to something other than 16MHz\n\n# Set to 16Mhz if not yet set.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Arduino containd the main source code for the Arduino\n\n# Libraries, the \"hardware variant\" are for boards\n\n# that derives from that, and their source are present in\n\n# the main Marlin source directory\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# VPATH tells make to look into these directory for source files,\n\n# there is no need to specify explicit pathnames as long as the\n\n# directory is added here\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#Check for Arduino 1.0.0 or higher and use the correct sourcefiles for that version\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Name of this Makefile (used for \"make depend\").\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Debugging format.\n\n# Native formats for AVR-GCC's -g are stabs [default], or dwarf-2.\n\n# AVR (extended) COFF requires stabs, plus an avr-objcopy run.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Program settings\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Place -D or -U options here\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add all the source directories as include directories too\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n\n#CSTANDARD = -std=gnu99\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#CEXTRA = -Wa,-adhlns=$(<:.c=.lst)\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#ASFLAGS = -Wa,-adhlns=$(<:.S=.lst),-gstabs\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Define all object files.\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Define all listing files.\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# set V=1 (eg, \"make V=1\") to print the full commands etc.\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Default target.\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Creates the object directory\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Program the device.\n\n# Do not try to reset an arduino if it's not one\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Display size of file.\n",
        "Line" : 408,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Create extended listing file from ELF output file.\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Create a symbol table from ELF output file.\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Link: create ELF output file from library.\n",
        "Line" : 454,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Automaticaly include the dependency files created by gcc\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "buildroot/share/cmake/CMakeLists.txt" : {
      "ObjectId" : "54cef29cc4495806a81fa76cc37495d0119b24de",
      "LastModified" : "2018-09-04T08:16:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#====================================================================#\n\n# Usage under Linux:                                                 #\n\n#                                                                    #\n\n#    From Marlin/buildroot/share/cmake folder:                       #\n\n#        mkdir -p build && cd build                                  #\n\n#        cmake ..                                                    #\n\n#        make                                                        #\n\n#                                                                    #\n\n# Usage under Windows:                                               #\n\n#                                                                    #\n\n#    From Marlin/buildroot/share/cmake folder:                       #\n\n#        mkdir build && cd build                                     #\n\n#        cmake -G\"Unix Makefiles\" ..                                 #\n\n#        make                                                        #\n\n#====================================================================#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#====================================================================#\n\n# Download marlin-cmake scriptfiles if not already installed         #\n\n# and add the path to the module path                                #\n\n#====================================================================#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set to wanted marlin-cmake release tag or branch\n",
        "Line" : 23,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "#====================================================================#\n\n#  Custom path to Arduino SDK can be set here.                       #\n\n#  It can also be set from command line. eg.:                        #\n\n#  cmake .. -DARDUINO_SDK_PATH=\"/path/to/arduino-1.x.x\"              #\n\n#====================================================================#\n\n#set(ARDUINO_SDK_PATH ${CMAKE_CURRENT_LIST_DIR}/arduino-1.6.8)\n\n#set(ARDUINO_SDK_PATH /home/tom/git/BigBox-Dual-Marlin/ArduinoAddons/Arduino_1.6.x)\n\n#set(ARDUINO_SDK_PATH  /home/tom/test/arduino-1.6.11)\n\n#====================================================================#\n\n#  Set included cmake files                                          #\n\n#====================================================================#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the intallpath of Arduino SDK\n",
        "Line" : 55,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "#====================================================================#\n\n#  Set toolchain file for arduino                                    #\n\n#====================================================================#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Arduino Toolchain\n",
        "Line" : 61,
        "CharPositionInLine" : 98
      },
      "7" : {
        "Text" : "#====================================================================#\n\n#  Setup Project                                                     #\n\n#====================================================================#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#====================================================================#\n\n#  Register non standard hardware                                    #\n\n#====================================================================#\n\n#register_hardware_platform(/home/tom/test/Sanguino)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#====================================================================#\n\n#  Print any info                                                    #\n\n#  print_board_list()                                                #\n\n#  print_programmer_list()                                           #\n\n#  print_board_settings(mega)                                        #\n\n#====================================================================#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#====================================================================#\n\n#  Get motherboard settings from Configuration.h                     #\n\n#  setup_motherboard(TARGET Marlin_src_folder)                       #\n\n#  Returns ${TARGET}_BOARD and ${TARGET}_CPU                         #\n\n#                                                                    #\n\n#  To set it manually:                                               #\n\n#    set(${PROJECT_NAME}_BOARD mega)                                 #\n\n#    set(${PROJECT_NAME}_CPU atmega2560)                             #\n\n#====================================================================#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#====================================================================#\n\n#  Setup all source files                                            #\n\n#  Incude Marlin.ino to compile libs not included in *.cpp files     #\n\n#====================================================================#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#====================================================================#\n\n#  Define the port for uploading code to the Arduino                 #\n\n#  Can be set from commandline with:                                 #\n\n#    cmake .. -DUPLOAD_PORT=/dev/ttyACM0                             #\n\n#====================================================================#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#====================================================================#\n\n#  Register arduino libraries not included in SDK                    #\n\n#====================================================================#\n\n#link_directories(/home/tom/test/ArduinoAddons) #U8glib\n\n#set(${PROJECT_NAME}_ARDLIBS U8glib)\n\n#set(U8glib_RECURSE True)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#====================================================================#\n\n# Command to generate code arduino firmware (.hex file)              #\n\n#====================================================================#\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2464
}