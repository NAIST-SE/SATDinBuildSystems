{
  "Repository" : "1634655",
  "Revision" : "HEAD",
  "ObjectId" : "1825ea3063e4d95089a2fbc9e7ade8773127127e",
  "CommitTime" : "2019-04-12T22:24:08Z",
  "Files" : {
    "src/CMakeLists.txt" : {
      "ObjectId" : "601d05328a032b4e4c4f41f58fcbd2c77c73c0f4",
      "LastModified" : "2019-04-12T22:24:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NFS Ganesha  Cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Current version as of Fedora 16.  Not tested with earlier.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project versioning\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needs to come after project()\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Patch level is always \".0\" for mainline (master).  It is blank for development.\n\n# When starting a stable maintenance branch, this becomes \".N\"\n\n# where N is monotonically increasing starting at 1. Remember to include the \".\" !!\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra version is for naming development/RC.  It is blank in master/stable branches\n\n# so it can be available to end-users to name local variants/versions\n\n# If used, it is always of the form \"-whateveryouwant\"\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find out which platform we are building on\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Now detects the Linux's distro\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Red Hat Enterprise Linux versions before 7.0 will be detected as UNKNOWN\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# On FreeBSD libc doesn't directly provide libexecinfo, so we have to find it\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Identify the host we are building on\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add maintainer mode for (mainly) strict builds\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# For libraries that provide pkg-config files\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For our option system\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If we are in a git tree, then this CMakeLists.txt is in \"src/\" and go .git is in \"src/..\"\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#default gcc doesn't like using -Wuninitialized without -O on FreeBSD\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# libc suffices on freebsd\n",
        "Line" : 162,
        "CharPositionInLine" : 27
      },
      "17" : {
        "Text" : "# module loader\n",
        "Line" : 170,
        "CharPositionInLine" : 28
      },
      "18" : {
        "Text" : "# Library path name\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# uname -p is broken on this system.  Try uname -m\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Nothing special to do for x86_64\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Nothing special to do for i386\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# FSAL selection\n\n# FSALs which are enabled by default but could be disabled\n\n# during the build\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# nTIRPC\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Build configure options\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Various DBUS enabled features\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Electric Fence (-lefence) link flag\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# These are -D_FOO options, why ???  should be flags??\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Debug symbols (-g) build flag\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Add coverage information to build tree\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define CPACK component (to deal with sub packages)\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Don't include libntirpc in the tarball\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Don't include libntirpc's spec file; this can confuse rpmbuild\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Include custom config and cpack module\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# MSPAC support -lwbclient link flag\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# CUnit\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Blkin (Zipkin) Tracing\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# build flags\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# GTest\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# NFS RDMA\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Enable 9P Support\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Enable NFSv3 Support\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Enable NLM Support\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# AF_VSOCK host support (NFS)\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# This option will trigger \"long distro name\" aka name that contains git information\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Build and package Python admin scripts for managing via DBus\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Build and package Python gui admin scripts for managing via DBus\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Enable LTTng tracing\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Build man page.\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Enable Rados KV store for recovery\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Enable RADOS URL config file sections\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Enable NFSv4 and POSIX acls mapping\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#\n\n# End build options\n\n#\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Choose a shortcut build config\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Set what's needed is GCC is enforced\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Find packages and libs we need for building\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# we have all the libraries and include files to use string.h\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Debian/Ubuntu 12 magic\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Validate fsal dependencies\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# PROXY has no deps of it's own, but it has a dependent option\n\n# PROXY handle mapping needs sqlite3\n",
        "Line" : 545,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# VFS has no dependencies\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "########### lustre hsm version test ##########\n\n# Lustre/HSM feature needs Lustre 2.5.0.\n\n# As some hsm calls were already landed as empty nutshells in 2.4\n\n# we rely on this new call of 2.5.0: llapi_hsm_state_get_fd().\n\n##############################################\n",
        "Line" : 572,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# GPFS has no dependencies\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# PANFS has no dependencies\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# pkg_check_modules doesn't fatal error on REQUIRED, so handle it ourselves\n",
        "Line" : 630,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# missing directory not provided by current version of GlusterFS\n",
        "Line" : 644,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# NULL has no dependencies\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# require RGW w/API version 1.1.x\n",
        "Line" : 713,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# MEM has no dependencies\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# sort out which allocator to use\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Find optional libraries/packages\n",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# pkg_check_modules doesn't fatal error on REQUIRED, so handle it ourselves\n",
        "Line" : 777,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# Set LTTNG_PATH_HINT on the command line\n\n# if your LTTng is not in a standard place\n",
        "Line" : 833,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Cmake 2.6 has issue in managing BISON and FLEX\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# check for d_off support, FreeBSD doesn't support it before 1200500\n",
        "Line" : 881,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# d_off is on by default for other cases\n",
        "Line" : 893,
        "CharPositionInLine" : 7
      },
      "76" : {
        "Text" : "# Fixup loose bits of autotools legacy\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "########### add a \"make dist\" and a \"make rpm\"  ###############\n",
        "Line" : 904,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Find misc system libs\n",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# extended Pthreads functions\n",
        "Line" : 910,
        "CharPositionInLine" : 24
      },
      "80" : {
        "Text" : "# Check if we have libblkid and libuuid, will just be reported under one\n\n# flag USE_BLKID\n",
        "Line" : 924,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Management of Capablilities\n",
        "Line" : 928,
        "CharPositionInLine" : 30
      },
      "82" : {
        "Text" : "# Management of Capablilities\n",
        "Line" : 937,
        "CharPositionInLine" : 28
      },
      "83" : {
        "Text" : "# we have all the libraries and include files to use libblkid and libuuid\n",
        "Line" : 946,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# we are missing something and can't use libblkid and libuuid\n",
        "Line" : 950,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# check is daemon exists\n\n# I use check_library_exists there to be portab;e\n",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Roll up required libraries\n",
        "Line" : 972,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#Protocols we support\n",
        "Line" : 974,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Core subsystems\n",
        "Line" : 993,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Remove rdma and ibverbs libraries that have already been found by FindRDMA\n\n#\n\n# TODO: this temporary workaround will no longer be required\n\n# with future mooshika versions (>1.0)\n\n# Original code is: set(GANESHA_CORE ${GANESHA_CORE} ${MOOSHIKA_LIBRARIES})\n\n#\n",
        "Line" : 1026,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# Set options for submodule\n",
        "Line" : 1047,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# All the plumbing in the basement\n",
        "Line" : 1070,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Config file; make sure it doesn't clobber an existing one\n",
        "Line" : 1081,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Sample config files\n",
        "Line" : 1084,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# pre-create PREFIX/var/run/ganesha\n",
        "Line" : 1090,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# display configuration vars\n",
        "Line" : 1128,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Now create a useable config.h\n",
        "Line" : 1290,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Tweak the \"%bcond_<with|without> in the specfile for every\n\n# optional feature. Take care on the logic of this syntax\n\n# %bcond_with means you add a \"--with\" option, default is \"without this feature\"\n\n# %bcond_without adds a\"--without\" so the feature is enabled by default\n\n# This has to be coherent with chosen FSALs\n",
        "Line" : 1296,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Now create a useable specfile\n",
        "Line" : 1434,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Make a docker image\n",
        "Line" : 1458,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1499,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1513,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1522,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1541,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1553,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "########### add a \"make doc\" target to call Doxygen\n",
        "Line" : 1565,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 106
    },
    "src/FSAL/CMakeLists.txt" : {
      "ObjectId" : "cfe52c6a4a58b8f7efc8e35839bb42e46b420458",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the directory for stackable FSALs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the directory for Pseudo FSAL\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All we need to do here is control the\n\n# build of chosen fsals\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/FSAL/FSAL_CEPH/CMakeLists.txt" : {
      "ObjectId" : "5f09e3825564678728627ab9a321cb848f03c9ef",
      "LastModified" : "2016-12-22T15:55:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FSAL/FSAL_GLUSTER/CMakeLists.txt" : {
      "ObjectId" : "5f3c74dd1e9c92074acdc0ffe0f6b8c539dfd4df",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(pnfs_panfs)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(USE_FSAL_XFS)\n\n#    add_subdirectory(xfs)\n\n#endif(USE_FSAL_XFS)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### next target ###############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/FSAL/FSAL_GPFS/CMakeLists.txt" : {
      "ObjectId" : "2c9fd9be1042027f0acf307cfce93a44df2211cd",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_MEM/CMakeLists.txt" : {
      "ObjectId" : "a6dc347a206b28ae9f25709e5f9313c7346e0c40",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_PROXY/CMakeLists.txt" : {
      "ObjectId" : "303519260217d5ff88346deba2e9aee934f02696",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_PROXY/handle_mapping/CMakeLists.txt" : {
      "ObjectId" : "2422b3fb55649f35e76581351cd60e9a422e71dc",
      "LastModified" : "2016-12-22T15:55:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### next target ###############\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#original Makefile.am contents follow:\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#AM_CFLAGS = $(SQLITE_CFLAGS)\n\n#\n\n#noinst_LTLIBRARIES          = libhandlemapping.la\n\n#\n\n#libhandlemapping_la_SOURCES = handle_mapping.c  handle_mapping.h  handle_mapping_db.c  handle_mapping_db.h handle_mapping_internal.h\n\n#\n\n#\n\n#check_PROGRAMS              = test_handle_mapping_db test_handle_mapping\n\n#test_handle_mapping_db_SOURCES      = test_handle_mapping_db.c\n\n#test_handle_mapping_db_LDADD        = libhandlemapping.la $(top_srcdir)/HashTable/libhashtable.la  $(top_srcdir)/Log/liblog.la \\\n\n#\t\t\t\t\t$(top_srcdir)/Common/libcommon_utils.la -lsqlite3 \n\n#\n\n#\n\n#test_handle_mapping_SOURCES      = test_handle_mapping.c\n\n#test_handle_mapping_LDADD        = libhandlemapping.la $(top_srcdir)/HashTable/libhashtable.la $(top_srcdir)/Log/liblog.la \\\n\n#\t\t\t\t\t$(top_srcdir)/Common/libcommon_utils.la -lsqlite3 \n\n#\n\n#new: clean all\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/FSAL/FSAL_PSEUDO/CMakeLists.txt" : {
      "ObjectId" : "fc5ac5030070ed82c41980a11302da1550a4ec92",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_RGW/CMakeLists.txt" : {
      "ObjectId" : "4ebd9a720bdf7fa527cef04c5660c736ef0a46d7",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### install files ###############\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/FSAL/FSAL_VFS/CMakeLists.txt" : {
      "ObjectId" : "d3706ec903db754837a4fca3b1d20cc9728af848",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We explicitly need to include this directory for linking vfs/lustre subfsals\n\n# main.c that is generated by cmake in compilation tree outside of source tree.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_VFS/os/CMakeLists.txt" : {
      "ObjectId" : "5d8db4cf94acdce58d93e70a93624546f1f31cf3",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All we need to do here is control the\n\n# build of chosen platform\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_VFS/panfs/CMakeLists.txt" : {
      "ObjectId" : "fd5d43681d5e5c1ade4e9764ad12649a1d714269",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### install files ###############\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/FSAL/FSAL_VFS/vfs/CMakeLists.txt" : {
      "ObjectId" : "a9ef1fb6bb0776a5cbbc3299d8d4e55a09f8dfb0",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FSAL_LUSTRE OVER FSAL_VFS\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TRUE FSAL_LUSTRE\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#FSAL_DUMMYLUSTRE\n\n#Even if we lack a good version of lustreapi, we continue to build and link\n\n# a dummy FSAL_LUSTRE to test the build path.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/FSAL/FSAL_VFS/vfs/main-c.in.cmake" : {
      "ObjectId" : "13e49ce58ecdd111c386fef1128838cff7357e00",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include \"config.h\"\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include <libgen.h>\t\t/* used for 'dirname' */\n\n#include <pthread.h>\n\n#include <string.h>\n\n#include <limits.h>\n\n#include <sys/types.h>\n\n#include \"gsh_list.h\"\n\n#include \"fsal.h\"\n\n#include \"FSAL/fsal_init.h\"\n\n#include \"fsal_handle_syscalls.h\"\n\n#include \"vfs_methods.h\"\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ifndef ENABLE_VFS_DEBUG_ACL\n\n#define VFS_SUPPORTED_ATTRIBUTES ((const attrmask_t) (ATTRS_POSIX | \\\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#else\n\n#define VFS_SUPPORTED_ATTRIBUTES ((const attrmask_t) (ATTRS_POSIX | ATTR_ACL | \\\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#endif\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ifdef F_OFD_GETLK\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#endif\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#ifdef F_OFD_GETLK\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#endif\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/FSAL/FSAL_VFS/xfs/CMakeLists.txt" : {
      "ObjectId" : "53442515c656e0597d110a8326c9e7ca8f8856b4",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### install files ###############\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/FSAL/Stackable_FSALs/CMakeLists.txt" : {
      "ObjectId" : "8b2eb3ebd17dc4e6eb73ed96a1913ba9bcf86e45",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FSAL/Stackable_FSALs/FSAL_MDCACHE/CMakeLists.txt" : {
      "ObjectId" : "c42d6bdced9efbd726d7918c444be43a56126879",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/Stackable_FSALs/FSAL_NULL/CMakeLists.txt" : {
      "ObjectId" : "a6ade78bc3a17ed0270a4adbaf7a27d5d1f0b5a3",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/MainNFSD/CMakeLists.txt" : {
      "ObjectId" : "bb7dabc37231af909c20d8eda986b6e12ad67100",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FSAL core sources\n\n# fsal_manager and fsal_destroyer are the only objects referenced by the\n\n# core server all the rest are for the common support of fsal plugins.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install(TARGETS ganesha.nfsd COMPONENT daemon DESTINATION bin)\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We are still missing the install of docs and stuff\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/Protocols/9P/CMakeLists.txt" : {
      "ObjectId" : "98059527ae9ecce739fc8ea7f82afffe6bb3e571",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Protocols/CMakeLists.txt" : {
      "ObjectId" : "fc2aefcabda355e558d66cc1ca4a20bbd3e19207",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### install files ###############\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Protocols/NFS/CMakeLists.txt" : {
      "ObjectId" : "8c3f25d16ac8445784fb3a21d464433bd4682a1f",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Protocols/NLM/CMakeLists.txt" : {
      "ObjectId" : "8a2f5b9e48072713102f531acef36b6f08cb0997",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Protocols/RQUOTA/CMakeLists.txt" : {
      "ObjectId" : "3b1f890b829fffb1db37d622d93c733b3c0eb3c8",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Protocols/XDR/CMakeLists.txt" : {
      "ObjectId" : "2ec05b4bb9f3e90f86b26ae5dbf82da54875f213",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/RPCAL/CMakeLists.txt" : {
      "ObjectId" : "1d95f4203dfd98d25f8d20eb89bafa2ce24c1645",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/SAL/CMakeLists.txt" : {
      "ObjectId" : "31ac79c14b775675b33292636962b54bcc6899f3",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/avl/CMakeLists.txt" : {
      "ObjectId" : "79dd70412dc6edec11df280417a2988342da519c",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cidr/CMakeLists.txt" : {
      "ObjectId" : "e784004dad74641f1da76959ff65fc7cf611c82a",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/build_configurations/bsd10.cmake" : {
      "ObjectId" : "750ab1713ee00d0ae956fbca6150e16c47b39b47",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only build VFS fsal for FreeBSD 10.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/debian.cmake" : {
      "ObjectId" : "0973c3a260837b47968caa36672603d4df0f2e99",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn on everything in the options for a complete build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/everything.cmake" : {
      "ObjectId" : "57b0d4dce237fea506c62cab48ad52a74ee2cc02",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn on everything in the options for a complete build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/gpfs.cmake" : {
      "ObjectId" : "a1c09a3d0a20d1ef60f44d99d71c53e447a70af3",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# where `make install` will place files\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FSAL's to build\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable FSAL's we don't use\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/build_configurations/rpmbuild.cmake" : {
      "ObjectId" : "aef0a25f1cb8b7bef4fa7fde9a143ddb3d0f49fb",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn on everything in the options for a complete build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/vfs_only.cmake" : {
      "ObjectId" : "e10bed565f97eae880fe08ec5d38f9cedb70cf22",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only build VFS fsal and other useful options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/cpack_config.cmake" : {
      "ObjectId" : "acb09407508eb8fa4d999de85bc5da0e2c29ae35",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A few CPack related variables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPack's debian stuff\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tell CPack the kind of packages to be generated\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/goption.cmake" : {
      "ObjectId" : "23ba21927816c9b9a824625323b3327c07c4bf7b",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check to see if a FSAL is on or off, and required\n\n#\n\n# This is to work around the broken option() system, which doesn't indicate\n\n# whether or not an option was given on the command line, but only whether it's\n\n# on or off (but not defaulted on or off).\n\n#\n\n# This consists of several macros:\n\n#\n\n# goption(<OPTION_NAME> <description> [ON | OFF])\n\n#     This sets up an option, and it's default value\n\n#\n\n# gopt_test(<OPTION_NAME>)\n\n#     This tests the value of <OPTION_NAME> and sets it to ON or OFF, and sets\n\n#     <OPTION_NAME>_REQUIRED to \"\" or \"REQUIRED\"\n\n#\n\n# This should be used as follows:\n\n# goption(USE_FSAL_TEST ON)\n\n# gopt_test(USE_FSAL_TEST)\n\n# if(USE_FSAL_TEST)\n\n#   find_package(test ${USE_FSAL_TEST_REQUIRED})\n\n#   if(NOT TEST_FOUND)\n\n#     message(WARNING \"libtest not found; disabling FSAL_TEST\")\n\n#     set(USE_FSAL_TEST OFF)\n\n#   endif(NOT TEST_FOUND)\n\n# endif(USE_FSAL_TEST)\n\n#\n\n# Alternatively, if your option doesn't use find_package(), the test can look like this:\n\n# if(USE_FSAL_TEST)\n\n#   <Whatever tests you run>\n\n#   if(NOT TEST_FOUND)\n\n#     if (USE_FSAL_TEST_REQUIRED)\n\n#       message(FATAL_ERROR \"libtest not found but requested on command line\")\n\n#     elseif (USE_FSAL_TEST_REQUIRED)\n\n#       message(WARNING \"libtest not found; disabling FSAL_TEST\")\n\n#       set(USE_FSAL_TEST OFF)\n\n#     endif (USE_FSAL_TEST_REQUIRED)\n\n#   endif(NOT TEST_FOUND)\n\n# endif(USE_FSAL_TEST)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(WARNING \"${OPTNAME}: ${${OPTNAME}}\")\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#message(WARNING \"Trying to set ${OPTNAME}: to ON\")\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(WARNING \"Trying to set ${OPTNAME}: to OFF\")\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(WARNING \"Trying to set ${OPTNAME}: to ON REQ\")\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(WARNING \"Trying to set ${OPTNAME}: to OFF REQ\")\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/cmake/maintainer_mode.cmake" : {
      "ObjectId" : "3fe8d1fe8fd159d6ba913f492e286f5b75ad979b",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Debug wants the same flags, plus -g\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "406780eb4b6c9fef76a485251c5f18a3ea020ff8",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 100,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 102,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/cmake/modules/FindASan.cmake" : {
      "ObjectId" : "98ea7cb311ca05384d3fc1f6c3f1575bb9cc6de7",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang 3.2+ use this version. The no-omit-frame-pointer option is optional.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Older deprecated flag for ASan\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/FindCEPHFS.cmake" : {
      "ObjectId" : "e7266fb5eea36e7c71d2b232185623cf0f470de8",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find CephFS\n\n# Find the Linux Trace Toolkit - next generation with associated includes path.\n\n# See http://ceph.org/\n\n#\n\n# This module accepts the following optional variables:\n\n#    CEPH_PREFIX   = A hint on CEPHFS install path.\n\n#\n\n# This module defines the following variables:\n\n#    CEPHFS_FOUND       = Was CephFS found or not?\n\n#    CEPHFS_LIBRARIES   = The list of libraries to link to when using CephFS\n\n#    CEPHFS_INCLUDE_DIR = The path to CephFS include directory\n\n#\n\n# On can set CEPH_PREFIX before using find_package(CephFS) and the\n\n# module with use the PATH as a hint to find CephFS.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DCEPH_PREFIX=/DATA/ERIC/CephFS /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to make the prefix override the normal paths\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/cmake/modules/FindCaps.cmake" : {
      "ObjectId" : "89d30ebf7df9e89dfce68517c742acdbbb37d150",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tries to find Capabilities libraries\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Caps)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  CAPS_PREFIX  Set this variable to the root installation of\n\n#                       Caps if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  CAPS_FOUND              System has Caps libs/headers\n\n#  CAPS_LIBRARIES          The Caps libraries (tcmalloc & profiler)\n\n#  CAPS_INCLUDE_DIR        The location of Caps headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindEPOLL.cmake" : {
      "ObjectId" : "852ba72a8abf90c7d914e16ac83b1b5246dab1cc",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find EPOLL\n\n#\n\n# This module defines the following variables:\n\n#    EPOLL_FOUND       = Was EPOLL found or not?\n\n#\n\n# On can set EPOLL_PATH_HINT before using find_package(EPOLL) and the\n\n# module with use the PATH as a hint to find EPOLL.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DEPOLL_PATH_HINT=/DATA/ERIC/EPOLL /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# epoll is emulated on FreeBSD\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/FindExecInfo.cmake" : {
      "ObjectId" : "b613dbbd71611ee95c60e3f5af253c2363bb935b",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindGTest.cmake" : {
      "ObjectId" : "0376bc437790eb60026776c86292c97fda9cb077",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tries to find GTest.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(GTest)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  GTEST_PREFIX  Set this variable to the root installation of\n\n#                       GTest if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  GTEST_FOUND              System has GTest libs/headers\n\n#  GTEST_LIBRARIES          The GTest libraries (tcmalloc & profiler)\n\n#  GTEST_INCLUDE_DIR        The location of GTest headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindGperftools.cmake" : {
      "ObjectId" : "f3a1c70066c28435c086259606c9ed0ef4f2bd8c",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tries to find Gperftools.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Gperftools)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  Gperftools_ROOT_DIR  Set this variable to the root installation of\n\n#                       Gperftools if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  GPERFTOOLS_FOUND              System has Gperftools libs/headers\n\n#  GPERFTOOLS_LIBRARIES          The Gperftools libraries (tcmalloc & profiler)\n\n#  GPERFTOOLS_INCLUDE_DIR        The location of Gperftools headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindJeMalloc.cmake" : {
      "ObjectId" : "5c7aa2cf1e10ea90c4a279aebfa8357044d24d12",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JeMalloc library\n\n# Find the native JeMalloc includes and library\n\n# This module defines\n\n#  JEMALLOC_INCLUDE_DIRS, where to find jemalloc.h, Set when\n\n#                        JEMALLOC_INCLUDE_DIR is found.\n\n#  JEMALLOC_LIBRARIES, libraries to link against to use JeMalloc.\n\n#  JEMALLOC_ROOT_DIR, The base directory to search for JeMalloc.\n\n#                    This can also be an environment variable.\n\n#  JEMALLOC_FOUND, If false, do not try to use JeMalloc.\n\n#\n\n# also defined, but not for general use are\n\n#  JEMALLOC_LIBRARY, where to find the JeMalloc library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If JEMALLOC_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JEMALLOC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/modules/FindKrb5.cmake" : {
      "ObjectId" : "38a9cac909736cc825d1a1571759cacbb6386032",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find kerberos 5\n\n# Find the native Kerberos 5 headers and libraries.\n\n#  KRB5_INCLUDE_DIRS      - where to find krb5.h, etc.\n\n#  KRB5_LIBRARIES         - List of libraries when using kerberos 5.\n\n#  KRB5_FOUND             - True if kerberos 5 found.\n\n# KRB5 modules may be specified as components for this find module.\n\n# Modules may be listed by running \"krb5-config\".  Modules include:\n\n#  krb5              Kerberos 5 application\n\n#  gssapi            GSSAPI application with Kerberos 5 bindings\n\n#  krb4              Kerberos 4 application\n\n#  kadm-client       Kadmin client\n\n#  kadm-server       Kadmin server\n\n#  kdb               Application that accesses the kerberos database\n\n# Typical usage:\n\n#  FIND_PACKAGE(KRB5 REQUIRED gssapi)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First find the config script from which to obtain other values.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check whether we found anything.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Lookup the include directories needed for the components requested.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use the newer EXECUTE_PROCESS command if it is available.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Parse the include flags.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Convert the compile flags to a CMake list.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look for -I options.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Lookup the libraries needed for the components requested.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the newer EXECUTE_PROCESS command if it is available.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Parse the library names and directories.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Look for -L flags for directories and -l flags for library names.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add gssapi_krb5 (MIT)\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Search for each library needed using the directories given.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Look for this library.\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# If any library is not found then the whole package is not found.\n",
        "Line" : 126,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Build an ordered list of all the libraries needed.\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Report the results.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/cmake/modules/FindLSB.cmake" : {
      "ObjectId" : "b65e25e60c49377ef021689969c0f213559c24e4",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Linux Standard Base Release Tools\n\n# This module defines the following variables:\n\n#  LSB_RELEASE_EXECUTABLE        - path to lsb_release program\n\n#  LSB_RELEASE_VERSION_SHORT     - Output of \"lsb_release -vs\"\n\n#  LSB_RELEASE_ID_SHORT          - Output of \"lsb_release -is\"\n\n#  LSB_RELEASE_DESCRIPTION_SHORT - Output of \"lsb_release -ds\"\n\n#  LSB_RELEASE_RELEASE_SHORT     - Output of \"lsb_release -rs\"\n\n#  LSB_RELEASE_CODENAME_SHORT    - Output of \"lsb_release -cs\"\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Copyright (c) 2012, Ben Morgan, University of Warwick\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#    * Redistributions of source code must retain the above copyright\n\n#      notice, this list of conditions and the following disclaimer.\n\n#    * Redistributions in binary form must reproduce the above copyright\n\n#      notice, this list of conditions and the following disclaimer in the\n\n#      documentation and/or other materials provided with the distribution.\n\n#    * Neither the name of Ben Morgan, or the University of Warwick nor the\n\n#      names of its contributors may be used to endorse or promote products\n\n#      derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\n# SUCH DAMAGE.\n\n#----------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract the standard information in short format into CMake variables\n\n# - Version (strictly a colon separated list, kept as string for now)\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# - Distributor ID\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# - Description\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Description might be quoted, so strip out if they're there\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# - Release\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# - Codename\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/cmake/modules/FindLTTng.cmake" : {
      "ObjectId" : "09c9fe89a13c7d94f27b0952b84af9a288f7359a",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LTTng\n\n# Find the Linux Trace Toolkit - next generation with associated includes path.\n\n# See http://lttng.org/\n\n#\n\n# This module accepts the following optional variables:\n\n#    LTTNG_PATH_HINT   = A hint on LTTNG install path.\n\n#\n\n# This module defines the following variables:\n\n#    LTTNG_FOUND       = Was LTTng found or not?\n\n#    LTTNG_EXECUTABLE  = The path to lttng command\n\n#    LTTNG_LIBRARIES   = The list of libraries to link to when using LTTng\n\n#    LTTNG_INCLUDE_DIR = The path to LTTng include directory\n\n#\n\n# On can set LTTNG_PATH_HINT before using find_package(LTTng) and the\n\n# module with use the PATH as a hint to find LTTng.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DLTTNG_PATH_HINT=/DATA/ERIC/LTTng /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#One can add his/her own builtin PATH.\n\n#FILE(TO_CMAKE_PATH \"/DATA/ERIC/LTTng\" MYPATH)\n\n#list(APPEND LTTNG_PATH_HINT ${MYPATH})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIND_PROGRAM twice using NO_DEFAULT_PATH on first shot\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/cmake/modules/FindLibACL.cmake" : {
      "ObjectId" : "1fde98481fd4d94e6ff3a93f3b498adb2bf1e552",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindMSan.cmake" : {
      "ObjectId" : "22d0050e97c5e42ea387c972d258e4d9578e3e44",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindNTIRPC.cmake" : {
      "ObjectId" : "7346425822d1fd57a8c36623a9737346a9f69ac3",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find NTIRPC\n\n# Find the New TIRPC RPC library\n\n#\n\n# This module accepts the following optional variables:\n\n#    NTIRPC_PATH_HINT   = A hint on NTIRPC install path.\n\n#\n\n# This module defines the following variables:\n\n#    NTIRPC_FOUND       = Was NTIRPC found or not?\n\n#    NTIRPC_LIBRARY   = The list of libraries to link to when using NTIRPC\n\n#    NTIRPC_INCLUDE_DIR = The path to NTIRPC include directory(s)\n\n#\n\n# On can set NTIRPC_PATH_HINT before using find_package(NTIRPC) and the\n\n# module with use the PATH as a hint to find NTIRPC.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DNTIRPC_PATH_HINT=/DATA/ERIC/NTIRPC /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/FindNfsIdmap.cmake" : {
      "ObjectId" : "9c1cb6332543f60315b41776903ffe4a00b79a46",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "27bfcdecb028b61d5a5fd2ccc9bf861f5e27a81c",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to find_package().\n\n# It also sets the <packagename>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [FOUND_VAR <resultVar>]\n\n#                                           [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# In this mode, the name of the result-variable can be set either to either\n\n# <UPPERCASED_NAME>_FOUND or <OriginalCase_Name>_FOUND using the FOUND_VAR option.\n\n# Other names for the result-variable are not allowed.\n\n# So for a Find-module named FindFooBar.cmake, the two possible names are\n\n# FooBar_FOUND and FOOBAR_FOUND. It is recommended to use the original case version.\n\n# If the FOUND_VAR option is not used, the default is <UPPERCASED_NAME>_FOUND.\n\n#\n\n# As in the simple mode, if <var1> through <varN> are all valid,\n\n# <packagename>_FOUND will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <packagename>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    find_package_handle_standard_args(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    find_package_handle_standard_args(LibXslt FOUND_VAR LibXslt_FOUND\n\n#                                             REQUIRED_VARS LibXslt_LIBRARIES LibXslt_INCLUDE_DIRS\n\n#                                             VERSION_VAR LibXslt_VERSION_STRING)\n\n# In this case, LibXslt is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. LibXslt_LIBRARIES and LibXslt_INCLUDE_DIRS\n\n# in this case. The result will then be stored in LibXslt_FOUND .\n\n# Also the version of LibXslt will be checked by using the version contained\n\n# in LibXslt_VERSION_STRING.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# Here the result will be stored in AUTOMOC4_FOUND.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# component handling\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# version handling:\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# exact version required\n",
        "Line" : 266,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 274,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 285,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# print the result:\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "src/cmake/modules/FindPackageMessage.cmake" : {
      "ObjectId" : "5cea43e352283d0f343045fd5261c82858ba4cf8",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It will print a message once for each unique find result.\n\n# This is useful for telling the user where a package was found.\n\n# The first argument specifies the name (XXX) of the package.\n\n# The second argument specifies the message to display.\n\n# The third argument lists details about the find result so that\n\n# if they change the message will be displayed again.\n\n# The macro also obeys the QUIET argument to the find_package command.\n\n#\n\n# Example:\n\n#\n\n#  if(X11_FOUND)\n\n#    FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#      \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#  else()\n\n#   ...\n\n#  endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "src/cmake/modules/FindPkgConfig.cmake" : {
      "ObjectId" : "4fc05e6ea35534dcdf216966811bc2dbbb634121",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - a pkg-config module for CMake\n\n#\n\n# Usage:\n\n#   pkg_check_modules(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#     checks for all the given modules\n\n#\n\n#   pkg_search_module(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#     checks for given modules and uses the first working one\n\n#\n\n# When the 'REQUIRED' argument was set, macros will fail with an error\n\n# when module(s) could not be found\n\n#\n\n# When the 'QUIET' argument is set, no status messages will be printed.\n\n#\n\n# It sets the following variables:\n\n#   PKG_CONFIG_FOUND          ... if pkg-config executable was found\n\n#   PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program\n\n#   PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found\n\n#                                 (since CMake 2.8.8)\n\n#\n\n# For the following variables two sets of values exist; first one is the\n\n# common one and has the given PREFIX. The second set contains flags\n\n# which are given out when pkgconfig was called with the '--static'\n\n# option.\n\n#   <XPREFIX>_FOUND          ... set to 1 if module(s) exist\n\n#   <XPREFIX>_LIBRARIES      ... only the libraries (w/o the '-l')\n\n#   <XPREFIX>_LIBRARY_DIRS   ... the paths of the libraries (w/o the '-L')\n\n#   <XPREFIX>_LDFLAGS        ... all required linker flags\n\n#   <XPREFIX>_LDFLAGS_OTHER  ... all other linker flags\n\n#   <XPREFIX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (w/o the '-I')\n\n#   <XPREFIX>_CFLAGS         ... all required cflags\n\n#   <XPREFIX>_CFLAGS_OTHER   ... the other compiler flags\n\n#\n\n#   <XPREFIX> = <PREFIX>        for common case\n\n#   <XPREFIX> = <PREFIX>_STATIC for static linking\n\n#\n\n# There are some special variables whose prefix depends on the count\n\n# of given modules. When there is only one module, <PREFIX> stays\n\n# unchanged. When there are multiple modules, the prefix will be\n\n# changed to <PREFIX>_<MODNAME>:\n\n#   <XPREFIX>_VERSION    ... version of the module\n\n#   <XPREFIX>_PREFIX     ... prefix-directory of the module\n\n#   <XPREFIX>_INCLUDEDIR ... include-dir of the module\n\n#   <XPREFIX>_LIBDIR     ... lib-dir of the module\n\n#\n\n#   <XPREFIX> = <PREFIX>  when |MODULES| == 1, else\n\n#   <XPREFIX> = <PREFIX>_<MODNAME>\n\n#\n\n# A <MODULE> parameter can have the following formats:\n\n#   {MODNAME}            ... matches any version\n\n#   {MODNAME}>={VERSION} ... at least version <VERSION> is required\n\n#   {MODNAME}={VERSION}  ... exactly version <VERSION> is required\n\n#   {MODNAME}<={VERSION} ... modules must not be newer than <VERSION>\n\n#\n\n# Examples\n\n#   pkg_check_modules (GLIB2   glib-2.0)\n\n#\n\n#   pkg_check_modules (GLIB2   glib-2.0>=2.10)\n\n#     requires at least version 2.10 of glib2 and defines e.g.\n\n#       GLIB2_VERSION=2.10.3\n\n#\n\n#   pkg_check_modules (FOO     glib-2.0>=2.10 gtk+-2.0)\n\n#     requires both glib2 and gtk2, and defines e.g.\n\n#       FOO_glib-2.0_VERSION=2.10.3\n\n#       FOO_gtk+-2.0_VERSION=2.8.20\n\n#\n\n#   pkg_check_modules (XRENDER REQUIRED xrender)\n\n#     defines e.g.:\n\n#       XRENDER_LIBRARIES=Xrender;X11\n\n#       XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp\n\n#\n\n#   pkg_search_module (BAR     libxml-2.0 libxml2 libxml>=2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Common stuff ####\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is needed because the module name is \"PkgConfig\" but the name of\n\n# this variable has always been PKG_CONFIG_FOUND so this isn't automatically\n\n# handled by FPHSA.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unsets the given variables\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Invokes pkgconfig, cleans up the result and sets variables\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(STATUS \"  ${_varname} ... ${_pkgconfig_invoke_result}\")\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Invokes pkgconfig two times; once without '--static' and once with\n\n# '--static'\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Splits given arguments into options and a package list\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# create a better addressable variable of the modules and calculate its size\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# give out status message telling checked module\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# iterate through module list and check whether they exist and match the required version\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# check whether version is given\n",
        "Line" : 223,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# handle the operands\n",
        "Line" : 234,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# create the final query which is of the format:\n\n# * --atleast-version <version> <pkg-name>\n\n# * --exact-version <version> <pkg-name>\n\n# * --max-version <version> <pkg-name>\n\n# * --exists <pkg-name>\n",
        "Line" : 247,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# execute the query\n",
        "Line" : 266,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# evaluate result and tell failures\n",
        "Line" : 271,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# fail when requested\n",
        "Line" : 282,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# when we are here, we checked whether requested modules\n\n# exist. Now, go through them and set variables\n",
        "Line" : 287,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# iterate through all modules again and set individual variables\n",
        "Line" : 293,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# handle case when there is only one package required\n",
        "Line" : 295,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# set variables which are combined for multiple modules\n",
        "Line" : 312,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "###\n\n### User visible macros start here\n\n###\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# check cached value\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "###\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# check cached value\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# iterate through all modules and stop at the first working one.\n",
        "Line" : 355,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "### Local Variables:\n\n### mode: cmake\n\n### End:\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "src/cmake/modules/FindRADOS.cmake" : {
      "ObjectId" : "ee60fcdd893a8f5d246c95e0b6f4b88d3471fab7",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find RADOS\n\n# This module accepts the following optional variables:\n\n#    RADOS_PREFIX   = A hint on RADOS install path.\n\n#\n\n# This module defines the following variables:\n\n#    RADOS_FOUND       = Was RADOS found or not?\n\n#    RADOS_LIBRARIES   = The list of libraries to link to when using RADOS\n\n#    RADOS_INCLUDE_DIR = The path to RADOS include directory\n\n#\n\n# On can set RADOS_PREFIX before using find_package(RADOS) and the\n\n# module with use the PATH as a hint to find RADOS.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DRADOS_PREFIX=/DATA/ERIC/RADOS /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to make the prefix override the normal paths\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/cmake/modules/FindRDMA.cmake" : {
      "ObjectId" : "b79894854bf6fa4283bb6a1c4b575cd8392e37d5",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find RDMA\n\n# Find the New TIRPC RPC library\n\n#\n\n# This module accepts the following optional variables:\n\n#    RDMA_PATH_HINT   = A hint on RDMA install path.\n\n#\n\n# This module defines the following variables:\n\n#    RDMA_FOUND       = Was RDMA found or not?\n\n#    RDMA_LIBRARY   = The list of libraries to link to when using RDMA\n\n#    RDMA_INCLUDE_DIR = The path to RDMA include directory(s)\n\n#\n\n# One can set RDMA_PATH_HINT before using find_package(RDMA) and the\n\n# module with use the PATH as a hint to find RDMA.\n\n# Alternatively, one can set LIBIBVERBS_PREFIX and LIBRDMACM_PREFIX to the individual\n\n# hints for those libraries.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DRDMA_PATH_HINT=/DATA/ERIC/RDMA /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ibverbs\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rdmacm\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (RDMA_LIBRARY)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#libfind_version_header(RDMA version.h RDMA_VERSION)\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#endif (RDMA_LIBRARY)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/modules/FindRGW.cmake" : {
      "ObjectId" : "248ee0a1658f7159a46c3d4f3d2c37834373348e",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find RGW\n\n# Find the Linux Trace Toolkit - next generation with associated includes path.\n\n# See http://ceph.org/\n\n#\n\n# This module accepts the following optional variables:\n\n#    RGW_PREFIX   = A hint on RGW install path.\n\n#\n\n# This module defines the following variables:\n\n#    RGW_FOUND       = Was RGW found or not?\n\n#    RGW_LIBRARIES   = The list of libraries to link to when using RGW\n\n#    RGW_INCLUDE_DIR = The path to RGW include directory\n\n#\n\n# On can set RGW_PREFIX before using find_package(RGW) and the\n\n# module with use the PATH as a hint to find RGW.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DRGW_PREFIX=/DATA/ERIC/RGW /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to make the prefix override the normal paths\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/cmake/modules/FindReadline.cmake" : {
      "ObjectId" : "0e0cc00a1b42d862694fe11d94165fe4aa1fa82e",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindSanitizers.cmake" : {
      "ObjectId" : "627ee243d050c469300a7a37c260d0144d7b444a",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If any of the used compiler is a GNU compiler, add a second option to static\n\n# link against the sanitizers.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/FindTSan.cmake" : {
      "ObjectId" : "2124e3164f9e002867af5ff69f927e56ff9d7989",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ThreadSanitizer is not compatible with MemorySanitizer.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/FindTcMalloc.cmake" : {
      "ObjectId" : "68a8bc62a3a533c8f1cb7f2d16364b0b950f2783",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Tcmalloc library\n\n# Find the native Tcmalloc includes and library\n\n# This module defines\n\n#  TCMALLOC_INCLUDE_DIRS, where to find tcmalloc.h, Set when\n\n#                        TCMALLOC_INCLUDE_DIR is found.\n\n#  TCMALLOC_LIBRARIES, libraries to link against to use Tcmalloc.\n\n#  TCMALLOC_ROOT_DIR, The base directory to search for Tcmalloc.\n\n#                    This can also be an environment variable.\n\n#  TCMALLOC_FOUND, If false, do not try to use Tcmalloc.\n\n#\n\n# also defined, but not for general use are\n\n#  TCMALLOC_LIBRARY, where to find the Tcmalloc library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If TCMALLOC_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# Debain tcmalloc minimal\n",
        "Line" : 36,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# Debian gperftools\n",
        "Line" : 37,
        "CharPositionInLine" : 26
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TCMALLOC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/cmake/modules/FindToolchain.cmake" : {
      "ObjectId" : "1a6a4414fd7d66f6f4775b9c537de14108bbe320",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindUBSan.cmake" : {
      "ObjectId" : "ae103f71725f485a005d22f6323f81642e4f4ea9",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindWBclient.cmake" : {
      "ObjectId" : "da225e96cde2a775cca5356ac6bcf64718548f1b",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find a sufficiently recent wbclient\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the stdint and stdbool includes are required (silly Cmake)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# now see if this is a winbind 4 header\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "b06207530662c9a216aa2f953cb1b8f55d70d44c",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "src/cmake/modules/InstallClobberImmune.cmake" : {
      "ObjectId" : "2c62782432c9af7fae4a8470b8eb8c43ce7fd8c4",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determines at `make install` time if a file, typically a configuration\n\n# file placed in $PREFIX/etc, shouldn't be installed to prevent overwrite\n\n# of an existing file.\n\n#\n\n# _srcfile: the file to install\n\n# _dstfile: the absolute file name after installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/InstallPackageConfigFile.cmake" : {
      "ObjectId" : "7bb112975e66bf152792f72906829aa09464a73c",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro can be used to install configuration files which\n\n# users are expected to modify after installation.  It will:\n\n#\n\n#   - If binary packaging is enabled:\n\n#     Install the file in the typical CMake fashion, but append to the\n\n#     INSTALLED_CONFIG_FILES cache variable for use with the Mac package's\n\n#     pre/post install scripts\n\n#\n\n#   - If binary packaging is not enabled:\n\n#     Install the script in a way such that it will check at `make install`\n\n#     time whether the file does not exist.  See InstallClobberImmune.cmake\n\n#\n\n#   - Always create a target \"install-example-configs\" which installs an\n\n#     example version of the config file.\n\n#\n\n#   _srcfile: the absolute path to the file to install\n\n#   _dstdir: absolute path to the directory in which to install the file\n\n#   _dstfilename: how to (re)name the file inside _dstdir\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If packaging mode is enabled, always install the distribution's\n\n# version of the file.  The Mac package's pre/post install scripts\n\n# or native functionality of RPMs will take care of not clobbering it.\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# This cache variable is what the Mac package pre/post install scripts\n\n# use to avoid clobbering user-modified config files\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Additionally, the Mac PackageMaker packages don't have any automatic\n\n# handling of configuration file conflicts so install an example file\n\n# that the post install script will cleanup in the case it's extraneous\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Have `make install` check at run time whether the file does not exist\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# '/' is invalid in target names, so replace w/ '.'\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/cmake/modules/LibFindMacros.cmake" : {
      "ObjectId" : "81fef7d8e7bd5e9adcfd42cc3fe6a06924b8ab38",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.2\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic>\n\n# Maintained at https://github.com/Tronic/cmake-modules\n\n# Please send your improvements as pull requests on Github.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find another package and make it a dependency of the current package.\n\n# This also automatically forwards the \"REQUIRED\" argument.\n\n# Usage: libfind_package(<prefix> <another package> [extra args to find_package])\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A simple wrapper to make pkg-config searches a bit easier.\n\n# Works the same as CMake's internal pkg_check_modules but is always quiet.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid useless copy&pasta by doing what most simple libraries do anyway:\n\n# pkg-config, find headers, find library.\n\n# Usage: libfind_pkg_detect(<prefix> <pkg-config args> FIND_PATH <name> [other args] FIND_LIBRARY <name> [other args])\n\n# E.g. libfind_pkg_detect(SDL2 sdl2 FIND_PATH SDL.h PATH_SUFFIXES SDL2 FIND_LIBRARY SDL2)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extracts a version #define from a version.h file, output stored to <PREFIX>_VERSION.\n\n# Usage: libfind_version_header(Foobar foobar/version.h FOOBAR_VERSION_STR)\n\n# Fourth argument \"QUIET\" may be used for silently testing different define names.\n\n# This function does nothing if the version variable is already defined.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip processing if we already have a version or if the include dir was not found\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Process optional arguments\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Read the header and parse for version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No regex match?\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Export the version string\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Skip processing if already processed during this configuration run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Start with the assumption that the package was found\n",
        "Line" : 108,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Did we find any files? Did we miss includes? These are for formatting better error messages.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Shorthands for some variables that we need often\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Lists of config option names (all, includes, libs)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Process deps to add to\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The package seems to export option lists that we can use, woohoo!\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# If plural forms don't exist or they equal singular forms\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Singular forms can be used\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Oh no, we don't know the option names\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Include/library names separated by spaces (notice: not CMake lists)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Process all includes and set found false if any are missing\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Process all libraries and set found false if any are missing\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Version checks\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# If all-OK, hide all config options, export variables, print status and exit\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Format messages for debug info and the type of error\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Fatal error out if REQUIRED\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Otherwise just print a nasty warning\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "src/cmake/modules/sanitize-helpers.cmake" : {
      "ObjectId" : "7b43074724a4f1107ac1d3875af165320fd3f277",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper function to get the language of a source file.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper function to get compilers used by a target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if all sources for target use the same compiler. If a target uses\n\n# e.g. C and Fortran mixed and uses different compilers (e.g. clang and\n\n# gfortran) this can trigger huge problems, because different compilers may\n\n# use different implementations for sanitizers.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If expression was found, FILE is a generator-expression for an object\n\n# library. Object libraries will be ignored.\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Helper function to check compiler flags for language compiler.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CheckFortranCompilerFlag was introduced in CMake 3.x. To be compatible\n\n# with older Cmake versions, we will check if this module is present\n\n# before we use it. Otherwise we will define Fortran coverage support as\n\n# not available.\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Helper function to test compiler flags.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sanitizer flags are not dependend on language, but the used compiler.\n\n# So instead of searching flags foreach language, search flags foreach\n\n# compiler used.\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# If compiler is a GNU compiler, search for static flag, if\n\n# SANITIZE_LINK_STATIC is enabled.\n",
        "Line" : 118,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# Helper to assign sanitizer flags for TARGET.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get list of compilers used by target and check, if target can be checked\n\n# by sanitizer.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Set compile- and link-flags for target.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "src/cmake/portability_cmake_2.8/FindBISON.cmake" : {
      "ObjectId" : "4a3e68c6860d6f052f18a35ed3ecbd55236eb147",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find bison executable and provides macros to generate custom build rules\n\n# The module defines the following variables:\n\n#\n\n#  BISON_EXECUTABLE - path to the bison program\n\n#  BISON_VERSION - version of bison\n\n#  BISON_FOUND - true if the program was found\n\n#\n\n# The minimum required version of bison can be specified using the\n\n# standard CMake syntax, e.g. find_package(BISON 2.1.3)\n\n#\n\n# If bison is found, the module defines the macros:\n\n#  BISON_TARGET(<Name> <YaccInput> <CodeOutput> [VERBOSE <file>]\n\n#              [COMPILE_FLAGS <string>])\n\n# which will create  a custom rule to generate  a parser. <YaccInput> is\n\n# the path to  a yacc file. <CodeOutput> is the name  of the source file\n\n# generated by bison.  A header file is also  be generated, and contains\n\n# the  token  list.  If  COMPILE_FLAGS  option is  specified,  the  next\n\n# parameter is  added in the bison  command line.  if  VERBOSE option is\n\n# specified, <file> is created  and contains verbose descriptions of the\n\n# grammar and parser. The macro defines a set of variables:\n\n#  BISON_${Name}_DEFINED - true is the macro ran successfully\n\n#  BISON_${Name}_INPUT - The input source file, an alias for <YaccInput>\n\n#  BISON_${Name}_OUTPUT_SOURCE - The source file generated by bison\n\n#  BISON_${Name}_OUTPUT_HEADER - The header file generated by bison\n\n#  BISON_${Name}_OUTPUTS - The sources files generated by bison\n\n#  BISON_${Name}_COMPILE_FLAGS - Options used in the bison command line\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(BISON)\n\n#   BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp)\n\n#   add_executable(Foo main.cpp ${BISON_MyParser_OUTPUTS})\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the bison commands should be executed with the C locale, otherwise\n\n# the message (which are parsed) may be translated\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Bison++\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# GNU Bison\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# internal macro\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# internal macro\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#============================================================\n\n# BISON_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Parsing parameters\n",
        "Line" : 121,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Header's name generated by bison (see option -d)\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# define target variables\n",
        "Line" : 157,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#\n\n#============================================================\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# FindBISON.cmake ends here\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/cmake/portability_cmake_2.8/FindFLEX.cmake" : {
      "ObjectId" : "79a3a1e6c27044491fc153ca2fabdc8a9fc38a59",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find flex executable and provides a macro to generate custom build rules\n\n#\n\n# The module defines the following variables:\n\n#  FLEX_FOUND - true is flex executable is found\n\n#  FLEX_EXECUTABLE - the path to the flex executable\n\n#  FLEX_VERSION - the version of flex\n\n#  FLEX_LIBRARIES - The flex libraries\n\n#  FLEX_INCLUDE_DIRS - The path to the flex headers\n\n#\n\n# The minimum required version of flex can be specified using the\n\n# standard syntax, e.g. find_package(FLEX 2.5.13)\n\n#\n\n#\n\n# If flex is found on the system, the module provides the macro:\n\n#  FLEX_TARGET(Name FlexInput FlexOutput [COMPILE_FLAGS <string>])\n\n# which creates a custom command  to generate the <FlexOutput> file from\n\n# the <FlexInput> file.  If  COMPILE_FLAGS option is specified, the next\n\n# parameter is added to the flex  command line. Name is an alias used to\n\n# get  details of  this custom  command.  Indeed the  macro defines  the\n\n# following variables:\n\n#  FLEX_${Name}_DEFINED - true is the macro ran successfully\n\n#  FLEX_${Name}_OUTPUTS - the source file generated by the custom rule, an\n\n#  alias for FlexOutput\n\n#  FLEX_${Name}_INPUT - the flex source file, an alias for ${FlexInput}\n\n#\n\n# Flex scanners oftenly use tokens  defined by Bison: the code generated\n\n# by Flex  depends of the header  generated by Bison.   This module also\n\n# defines a macro:\n\n#  ADD_FLEX_BISON_DEPENDENCY(FlexTarget BisonTarget)\n\n# which  adds the  required dependency  between a  scanner and  a parser\n\n# where  <FlexTarget>  and <BisonTarget>  are  the  first parameters  of\n\n# respectively FLEX_TARGET and BISON_TARGET macros.\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(BISON)\n\n#   find_package(FLEX)\n\n#\n\n#   BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp)\n\n#   FLEX_TARGET(MyScanner lexer.l  ${CMAKE_CURRENT_BINARY_DIR}/lexer.cpp)\n\n#   ADD_FLEX_BISON_DEPENDENCY(MyScanner MyParser)\n\n#\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   add_executable(Foo\n\n#      Foo.cc\n\n#      ${BISON_MyParser_OUTPUTS}\n\n#      ${FLEX_MyScanner_OUTPUTS}\n\n#   )\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# older versions of flex printed \"/full/path/to/executable version X.Y\"\n\n# newer versions use \"basename(executable) X.Y\"\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#============================================================\n\n# FLEX_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#============================================================\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#============================================================\n\n# ADD_FLEX_BISON_DEPENDENCY (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#============================================================\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# FindFLEX.cmake ends here\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/rpmtools_config.cmake" : {
      "ObjectId" : "3e97df9ce004a99badee7fd13c130ae8cedc1015",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/config_parsing/CMakeLists.txt" : {
      "ObjectId" : "20e6719ace1845aab8d7ea27ed5f21c2532aa995",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/dbus/CMakeLists.txt" : {
      "ObjectId" : "bd92631412c41e396c309ff60e1d3383ca9c44ee",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/doc/CMakeLists.txt" : {
      "ObjectId" : "f38eaf1c93a17b671941c7b204c9908031eec73a",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/doc/man/CMakeLists.txt" : {
      "ObjectId" : "ed1ee657472c1cf02f3c2e54ba74f37d780d58f8",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gtest/CMakeLists.txt" : {
      "ObjectId" : "0fca15838862822fb3bae0afdc46161b42999365",
      "LastModified" : "2019-04-05T20:33:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set CMAKE_CXX_FLAGS, for gtest presently\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generic test\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test using ganesha internals\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/gtest/fsal_api/CMakeLists.txt" : {
      "ObjectId" : "ca0d0f5d57d679704c6d96151c4e273b0a479a38",
      "LastModified" : "2019-04-05T20:33:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gtest/nfs4/CMakeLists.txt" : {
      "ObjectId" : "557a8c31a17f092453d7f1f48f1b6f0ee29a0411",
      "LastModified" : "2019-04-05T20:33:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hashtable/CMakeLists.txt" : {
      "ObjectId" : "eb3739c66d60e8e5628e8ba8e7922dd69e6a0c43",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/idmapper/CMakeLists.txt" : {
      "ObjectId" : "bbe26fb59f43bf56bde396085705d9e6af430aa5",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/include/config-h.in.cmake" : {
      "ObjectId" : "6df2ba35045cba2e720fd19f950e34bae7712775",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef CONFIG_H\n\n#define CONFIG_H\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define GANESHA_VERSION_MAJOR @GANESHA_MAJOR_VERSION@\n\n#define GANESHA_VERSION_MINOR @GANESHA_MINOR_VERSION@\n\n#define GANESHA_PATCH_LEVEL @GANESHA_PATCH_LEVEL@\n\n#define GANESHA_EXTRA_VERSION @GANESHA_EXTRA_VERSION@\n\n#define GANESHA_VERSION \"@GANESHA_VERSION@\"\n\n#define GANESHA_BUILD_RELEASE @GANESHA_BUILD_RELEASE@\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define VERSION GANESHA_VERSION\n\n#define VERSION_COMMENT \"@VERSION_COMMENT@\"\n\n#define _GIT_HEAD_COMMIT \"@_GIT_HEAD_COMMIT@\"\n\n#define _GIT_DESCRIBE \"@_GIT_DESCRIBE@\"\n\n#define BUILD_HOST \"@BUILD_HOST_NAME@\"\n\n#define FSAL_MODULE_LOC \"@FSAL_DESTINATION@\"\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cmakedefine _MSPAC_SUPPORT 1\n\n#cmakedefine USE_NFSIDMAP 1\n\n#cmakedefine USE_DBUS 1\n\n#cmakedefine _USE_CB_SIMULATOR 1\n\n#cmakedefine USE_CAPS 1\n\n#cmakedefine USE_BLKID 1\n\n#cmakedefine PROXY_HANDLE_MAPPING 1\n\n#cmakedefine _USE_9P 1\n\n#cmakedefine _USE_9P_RDMA 1\n\n#cmakedefine _USE_NFS_RDMA 1\n\n#cmakedefine _USE_NFS3 1\n\n#cmakedefine _USE_NLM 1\n\n#cmakedefine DEBUG_SAL 1\n\n#cmakedefine _VALGRIND_MEMCHECK 1\n\n#cmakedefine _NO_TCP_REGISTER 1\n\n#cmakedefine RPCBIND 1\n\n#cmakedefine HAVE_KRB5 1\n\n#cmakedefine HAVE_HEIMDAL 1\n\n#cmakedefine USE_GSS_KRB5_CCACHE_NAME 1\n\n#cmakedefine LINUX 1\n\n#cmakedefine FREEBSD 1\n\n#cmakedefine _HAVE_GSSAPI 1\n\n#cmakedefine HAVE_STRING_H 1\n\n#cmakedefine HAVE_STRNLEN 1\n\n#cmakedefine LITTLEEND 1\n\n#cmakedefine HAVE_DAEMON 1\n\n#cmakedefine USE_LTTNG 1\n\n#cmakedefine ENABLE_VFS_DEBUG_ACL 1\n\n#cmakedefine ENABLE_RFC_ACL 1\n\n#cmakedefine USE_GLUSTER_XREADDIRPLUS 1\n\n#cmakedefine USE_GLUSTER_UPCALL_REGISTER 1\n\n#cmakedefine USE_GLUSTER_DELEGATION 1\n\n#cmakedefine USE_FSAL_CEPH_MKNOD 1\n\n#cmakedefine USE_FSAL_CEPH_SETLK 1\n\n#cmakedefine USE_FSAL_CEPH_LL_LOOKUP_ROOT 1\n\n#cmakedefine USE_FSAL_CEPH_STATX 1\n\n#cmakedefine USE_FSAL_CEPH_LL_DELEGATION 1\n\n#cmakedefine USE_FSAL_CEPH_LL_SYNC_INODE 1\n\n#cmakedefine USE_CEPH_LL_FALLOCATE 1\n\n#cmakedefine USE_FSAL_CEPH_ABORT_CONN 1\n\n#cmakedefine USE_FSAL_CEPH_RECLAIM_RESET 1\n\n#cmakedefine USE_FSAL_CEPH_GET_FS_CID 1\n\n#cmakedefine USE_FSAL_RGW_MOUNT2 1\n\n#cmakedefine ENABLE_LOCKTRACE 1\n\n#cmakedefine SANITIZE_ADDRESS 1\n\n#cmakedefine DEBUG_MDCACHE 1\n\n#cmakedefine USE_RADOS_RECOV 1\n\n#cmakedefine RADOS_URLS 1\n\n#cmakedefine USE_LLAPI 1\n\n#cmakedefine USE_GLUSTER_STAT_FETCH_API 1\n\n#cmakedefine HAVE_URCU_REF_GET_UNLESS_ZERO 1\n\n#define NFS_GANESHA 1\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#define GANESHA_CONFIG_PATH \"@SYSCONFDIR@/ganesha/ganesha.conf\"\n\n#define GANESHA_PIDFILE_PATH \"@SYSSTATEDIR@/run/ganesha.pid\"\n\n#define NFS_V4_RECOV_ROOT \"@SYSSTATEDIR@/lib/nfs/ganesha\"\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#define DEFAULT_NFS_CCACHE_DIR \"@SYSSTATEDIR@/run/ganesha\"\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#define _LGPL_SOURCE 1\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#endif /* CONFIG_H */\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/libganeshaNFS.pc.cmake" : {
      "ObjectId" : "fd07b9154ff41f5d7fe8a66fd7092aa2f1d5a3b1",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/log/CMakeLists.txt" : {
      "ObjectId" : "d3e4e2e167a31a827d8d9ef2799dcd2882ec3636",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/nfs-ganesha.spec-in.cmake" : {
      "ObjectId" : "6b60eb32dbc38156bf3914d0f30c8fc05599f73a",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Conditionally enable some FSALs, disable others.\n\n#\n\n# 1. rpmbuild accepts these options (gpfs as example):\n\n#    --with gpfs\n\n#    --without gpfs\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A few explanation about % bcond_with and % bcond_without\n\n# /!\\ be careful: this syntax can be quite messy\n\n# % bcond_with means you add a \"--with\" option, default = without this feature\n\n# % bcond_without adds a\"--without\" so the feature is enabled by default\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use CMake variables\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Option packages start here. use \"rpmbuild --with gpfs\" (or equivalent)\n\n# for activating this part of the spec file\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NULL\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MEM\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# GPFS\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CEPH\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# RGW\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XFS\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#LUSTRE\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# PANFS\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# GLUSTER\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SELINUX\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# NTIRPC (if built-in)\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# libtirpc has /etc/netconfig, most machines probably have it anyway\n\n# for NFS client\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Optional packages\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/os/CMakeLists.txt" : {
      "ObjectId" : "46f670f644becf1ad4118af1c6bfefcb57a29424",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All we need to do here is control the\n\n# build of chosen platform\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/scripts/CMakeLists.txt" : {
      "ObjectId" : "1c66e7e7516fd555d180416bc11438ab0db9fa12",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/scripts/docker/Dockerfile-in.cmake" : {
      "ObjectId" : "fe05717ce8a989606eb0cfe3a451397677e7f7b5",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CEPH BASE IMAGE\n\n# CEPH VERSION: Hammer\n\n# CEPH VERSION DETAIL: 0.94.x\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ENV ETCDCTL_VERSION v2.2.0\n\n#ENV ETCDCTL_ARCH linux-amd64\n\n#ENV CEPH_VERSION 10.0.3-2378.gd3db533\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install prerequisites\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install deps\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install ganesha\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/scripts/docker/entrypoint.sh-in.cmake" : {
      "ObjectId" : "6c47676618a0daf579f4aed865d98c9679fb384e",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!/bin/bash\n\n#\n\n# Entrypoint for the Ganesha docker container.  If \"shell\" is given as the\n\n# argument, then a shell is run; otherwise, Ganseha is started.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are the options for starting Ganesha.  Set them in the environment.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/scripts/ganeshactl/CMakeLists.txt" : {
      "ObjectId" : "2e950b6768b5be24378b78e5ccdc5648c1412ee3",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building and packaging DBUS scripts for ganesha\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PyQT based class modules\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Command line scripts\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt Designer files that get compiled into .py scripts\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate rules for compiling .ui -> .py\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Generate rules to copy command line scripts from src to build,\n\n# stripping .py along the way\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Build up the string for the configure substitution in setup.py\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Man page\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/scripts/systemd/nfs-ganesha-config.service-in.cmake" : {
      "ObjectId" : "8c7d128170eac25dbbbdb9c6c31529a521753f94",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/support/CMakeLists.txt" : {
      "ObjectId" : "67335e82df3e02789084526c10e8aeea98ea3d7a",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# string utilities.  This should eventually go into src/os\n\n# because BSD has them and Linux doesn't\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# hash function libraries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# uid2grp mapper\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# netgroup cache\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########### next target ###############\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########### install files ###############\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "dff9d75c3dfd31cdf71db5b37db7609635eeb23d",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "fa447ce61c85f01adf6ebe5115299a7190c4317d",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### install files ###############\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/multilock/CMakeLists.txt" : {
      "ObjectId" : "d322813dff5c0806ed05802a68005a6025a8f97c",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tracing/CMakeLists.txt" : {
      "ObjectId" : "e5c119ac7358cf64c385ebd567c2530abc1ffe17",
      "LastModified" : "2019-03-29T22:25:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 100
  },
  "ElapsedTime" : 8748
}