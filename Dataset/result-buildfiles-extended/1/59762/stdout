{
  "Repository" : "59762",
  "Revision" : "HEAD",
  "ObjectId" : "f9108db6688612d0a1e5a0327e2794600c06e768",
  "CommitTime" : "2019-04-08T12:05:54Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6ba59c54501e5e1f61055364e7426748f05170d4",
      "LastModified" : "2019-01-30T20:43:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enforce \"Debug\" as standard build type.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake project configuration.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cmake module search path.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add extended path for FreeBSD and Homebrew on OS X.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enforce compiler flags:\n\n#  -Wall                -> More warnings\n\n#  -fno-strict-aliasing -> Quake 2 is far away from strict aliasing\n\n#  -fwrapv              -> Make signed integer overflows defined\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Switch of some annoying warnings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use -O2 as maximum optimization level. -O3 has it's problems with yquake2.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compilation time options.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These variables will act as our list of include folders and linker flags.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set directory locations (allowing us to move directories easily)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Operating system.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Architecture string.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Systemwide installation of game assets.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# We need to pass some options to minizip / unzip.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Required libraries to build the different components of the binaries. Find\n\n# them and add the include/linker directories and flags (in case the package\n\n# manager find it in a weird place).\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# We need an OpenGL implementation.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# FreeBSD needs libexecinfo.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# cURL support.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OpenAL support.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# General linker flags.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# With all of those libraries and user defined paths\n\n# added, lets give them to the compiler and linker.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# If we're building with gcc for i386 let's define -ffloat-store.\n\n# This helps the old and crappy x87 FPU to produce correct values.\n\n# Would be nice if Clang had something comparable.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Force SSE math on x86_64. All sane compilers should do this\n\n# anyway, just to protect us from broken Linux distros.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set the nessesary platform specific source\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Wrapper for the Windows binary\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Main Quake 2 executable\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Wrapper for the Windows binary\n",
        "Line" : 565,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Quake 2 Dedicated Server\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Build the game dynamic library\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Build the GL1 dynamic library\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Build the GL3 dynamic library\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Build the soft renderer dynamic library\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "Makefile" : {
      "ObjectId" : "d34e54bd4a1f08f38ffe8fd9da346f474a44afe6",
      "LastModified" : "2019-01-30T20:42:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ------------------------------------------------------ #\n\n# Makefile for the \"Yamagi Quake 2 Client\"               #\n\n#                                                        #\n\n# Just type \"make\" to compile the                        #\n\n#  - Client (quake2)                                     #\n\n#  - Server (q2ded)                                      #\n\n#  - Quake II Game (baseq2)                              #\n\n#  - Renderer libraries (gl1, gl3, soft)                 #\n\n#                                                        #\n\n# Base dependencies:                                     #\n\n#  - SDL 2.0                                             #\n\n#  - libGL                                               #\n\n#                                                        #\n\n# Optional dependencies:                                 #\n\n#  - OpenAL                                              #\n\n#                                                        #\n\n# Platforms:                                             #\n\n#  - FreeBSD                                             #\n\n#  - Linux                                               #\n\n#  - OpenBSD                                             #\n\n#  - OS X                                                #\n\n#  - Windows (MinGW)                                     #\n\n# ------------------------------------------------------ #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# User configurable options\n\n# -------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enables HTTP support through cURL. Used for\n\n# HTTP download.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enables the optional OpenAL sound system.\n\n# To use it your system needs libopenal.so.1\n\n# or openal32.dll (we recommend openal-soft)\n\n# installed\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable systemwide installation of game assets\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This will set the default SYSTEMDIR, a non-empty string\n\n# would actually be used. On Windows normals slashes (/)\n\n# instead of backslashed (\\) should be used! The string\n\n# MUST NOT be surrounded by quotation marks!\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This will set the architectures of the OSX-binaries.\n\n# You have to make sure your libs/frameworks supports\n\n# these architectures! To build an universal ppc-compatible\n\n# one would add -arch ppc for example.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This will set the build options to create an MacOS .app-bundle.\n\n# The app-bundle itself will not be created, but the runtime paths\n\n# will be set to expect the game-data in *.app/\n\n# Contents/Resources\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is an optional configuration file, it'll be used in\n\n# case of presence.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# In case a of a configuration file being present, we'll just use it\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Detect the OS\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Special case for MinGW\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Detect the architecture\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# 64 bit Windows\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# 32 bit Windows\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Normalize some abiguous YQ2_ARCH strings\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# On Windows / MinGW $(CC) is undefined by default.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Detect the compiler\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Base CFLAGS.\n\n#\n\n# -O2 are enough optimizations.\n\n#\n\n# -fno-strict-aliasing since the source doesn't comply\n\n#  with strict aliasing rules and it's next to impossible\n\n#  to get it there...\n\n#\n\n# -fomit-frame-pointer since the framepointer is mostly\n\n#  useless for debugging Quake II and slows things down.\n\n#\n\n# -g to build always with debug symbols. Please DO NOT\n\n#  CHANGE THIS, since it's our only chance to debug this\n\n#  crap when random crashes happen!\n\n#\n\n# -MMD to generate header dependencies. (They cannot be\n\n#  generated if building universal binaries on OSX)\n\n#\n\n# -fwrapv for defined integer wrapping. MSVC6 did this\n\n#  and the game code requires it.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Switch of some annoying warnings.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# -Wno-missing-braces because otherwise clang complains\n\n#  about totally valid 'vec3_t bla = {0}' constructs.\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# GCC 8.0 or higher.\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# -Wno-format-truncation and -Wno-format-overflow\n",
        "Line" : 153,
        "CharPositionInLine" : 5
      },
      "26" : {
        "Text" : "# because GCC spams about 50 false positives.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ----------\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Defines the operating system and architecture\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ----------\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Fore reproduceable builds, look here for details:\n\n# https://reproducible-builds.org/specs/source-date-epoch/\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ----------\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If we're building with gcc for i386 let's define -ffloat-store.\n\n# This helps the old and crappy x87 FPU to produce correct values.\n\n# Would be nice if Clang had something comparable.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Force SSE math on x86_64. All sane compilers should do this\n\n# anyway, just to protect us from broken Linux distros.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ----------\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Systemwide installation.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ----------\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Just set IOAPI_NO_64 on everything that's not Linux or Windows,\n\n# otherwise minizip will use fopen64(), fseek64() and friends that\n\n# may be unavailable. This is - of course - not really correct, in\n\n# a better world we would set -DIOAPI_NO_64 to force everything to\n\n# fopen(), fseek() and so on and -D_FILE_OFFSET_BITS=64 to let the\n\n# libc headers do their work. Currently we can't do that because\n\n# Quake II uses nearly everywere int instead of off_t...\n\n#\n\n# This may have the side effect that ZIP files larger than 2GB are\n\n# unsupported. But I doubt that anyone has such large files, they\n\n# would likely hit other internal limits.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# We don't support encrypted ZIP files.\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# ----------\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Extra CFLAGS for SDL.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# ----------\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Base include path.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ----------\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Local includes for GLAD.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# ----------\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Base LDFLAGS.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Keep symbols hidden.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# for some reason the OSX & OpenBSD linker doesn't support this...\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# ----------\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Extra LDFLAGS for SDL\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# not Darwin\n",
        "Line" : 275,
        "CharPositionInLine" : 5
      },
      "52" : {
        "Text" : "# Darwin\n",
        "Line" : 277,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# The renderer libs don't need libSDL2main, libmingw32 or -mwindows.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# ----------\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# When make is invoked by \"make VERBOSE=1\" print\n\n# the compiler and linker commands.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# ----------\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Phony targets\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# ----------\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Builds everything\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# ----------\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Print config values\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# ----------\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Special target to compile the icon on Windows\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# ----------\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Cleanup\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# ----------\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# The client\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# ----------\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# The server\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# not Windows\n",
        "Line" : 442,
        "CharPositionInLine" : 5
      },
      "71" : {
        "Text" : "# ----------\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# The OpenGL 1.x renderer lib\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# not Windows or Darwin\n",
        "Line" : 482,
        "CharPositionInLine" : 5
      },
      "74" : {
        "Text" : "# OS specific ref_gl1 stuff\n",
        "Line" : 492,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# ----------\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# The OpenGL 3.x renderer lib\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# not Windows or Darwin\n",
        "Line" : 520,
        "CharPositionInLine" : 5
      },
      "78" : {
        "Text" : "# OS specific ref_gl3 stuff\n",
        "Line" : 530,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "# ----------\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# The soft renderer lib\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# not Windows or Darwin\n",
        "Line" : 557,
        "CharPositionInLine" : 5
      },
      "82" : {
        "Text" : "# OS specific ref_soft stuff\n",
        "Line" : 566,
        "CharPositionInLine" : 6
      },
      "83" : {
        "Text" : "# ----------\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# The baseq2 game\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# not Windows or Darwin\n",
        "Line" : 604,
        "CharPositionInLine" : 5
      },
      "86" : {
        "Text" : "# ----------\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Used by the game\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# ----------\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Used by the client\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# ----------\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# not Windows\n",
        "Line" : 784,
        "CharPositionInLine" : 5
      },
      "92" : {
        "Text" : "# ----------\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# not Windows\n",
        "Line" : 817,
        "CharPositionInLine" : 5
      },
      "94" : {
        "Text" : "# ----------\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# not Windows\n",
        "Line" : 852,
        "CharPositionInLine" : 5
      },
      "96" : {
        "Text" : "# ----------\n",
        "Line" : 857,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Used by the server\n",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# not Windows\n",
        "Line" : 899,
        "CharPositionInLine" : 5
      },
      "99" : {
        "Text" : "# ----------\n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Rewrite pathes to our object directory.\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# ----------\n",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Generate header dependencies.\n",
        "Line" : 920,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Suck header dependencies in.\n",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# ----------\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# release/quake2\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# release/q2ded\n",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# release/ref_gl1.so\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# release/ref_gl3.so\n",
        "Line" : 980,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# release/ref_soft.so\n",
        "Line" : 996,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# release/baseq2/game.so\n",
        "Line" : 1012,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# ----------\n",
        "Line" : 1028,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 112,
      "Errorlog" : "line 104:72 token recognition error at: '\\1'\nline 104:97 token recognition error at: '\\1'\nline 107:72 token recognition error at: '\\1'\nline 107:97 token recognition error at: '\\1'\n"
    },
    "stuff/cmake/modules/FindSDL2.cmake" : {
      "ObjectId" : "464ca2d924e7469ca0477e390e65cfe71f80e47a",
      "LastModified" : "2018-08-14T13:29:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(\"<FindSDL2.cmake>\")\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MinGW needs an additional link flag, -mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -mwindows\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For SDL2main\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 141,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# For MinGW library\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# message(\"</FindSDL2.cmake>\")\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    }
  },
  "FileTypes" : {
    "CMAKE" : 2,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1560
}