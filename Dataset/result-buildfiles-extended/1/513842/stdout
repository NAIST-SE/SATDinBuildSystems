{
  "Repository" : "513842",
  "Revision" : "HEAD",
  "ObjectId" : "a6bad4daec2998658fc4159eb441c05c3c0884b3",
  "CommitTime" : "2018-12-20T14:24:12Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4227a5066d3dce71d92a0d3fa1bed129c7e98c40",
      "LastModified" : "2018-12-20T12:53:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2005-2018, University of Oxford.\n\n# All rights reserved.\n\n# \n\n# University of Oxford means the Chancellor, Masters and Scholars of the\n\n# University of Oxford, having an administrative office at Wellington\n\n# Square, Oxford OX1 2JD, UK.\n\n# \n\n# This file is part of Chaste.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the name of the University of Oxford nor the names of its\n\n#    contributors may be used to endorse or promote products derived from this\n\n#    software without specific prior written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n\n# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This statement can be removed when cmake_minimum_required >= 3.0\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This statement can be removed when cmake_minimum_required >= 3.3\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Since CMake 3.0, version can be supplied to the project() command.  We set it directly, for users on older CMake\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Memory testing\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Coverage\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Clang tidy\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# This creates a compile_commands.json in the build directory\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Profiling\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#get date and time, to append to test result filename\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Note: set 6 minute (360s) timeout for each test\n",
        "Line" : 154,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#Set whether this is a statically or dynamically-linked build\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Some Chaste-specific #defines\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Ensure M_PI is always defined in cmath\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "################################\n\n#  FIND THIRD PARTY LIBRARIES  #\n\n################################\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check prereqs\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 219,
        "CharPositionInLine" : 13
      },
      "17" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 223,
        "CharPositionInLine" : 13
      },
      "18" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 227,
        "CharPositionInLine" : 13
      },
      "19" : {
        "Text" : "################################\n\n####  Gperftools\n\n################################\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#Gprof executable\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "################################\n\n####  Find Valgrind\n\n################################\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################\n\n####  Find Python\n\n################################\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#elseif (${subdir} MATCHES \".*petsc.*\" AND NOT ENV{PETSC_DIR})\n\n#    set(ENV{PETSC_DIR} \"${Chaste_DEPS_ROOT_DIR}/${subdir}\")\n\n#    set(PETSC_ARCH \"\")\n",
        "Line" : 283,
        "CharPositionInLine" : 16
      },
      "24" : {
        "Text" : "################################\n\n####  Find VTK\n\n################################\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# First pass will identify the version number\n",
        "Line" : 302,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Depending on the VTK version, we need different components. 5.x require the following\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# 6.0 and 6.1 require the following\n",
        "Line" : 309,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# 6.2 and up, up to and including 7.1, require the following\n",
        "Line" : 314,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "################################\n\n####  Find Boost\n\n################################\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "################################\n\n####  Find PETSc\n\n################################\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "################################\n\n####  Find HDF5\n\n################################\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This alters the order that CMake looks for h5pcc h5cc (parallel h5pcc first)\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# If we're using PETSc's HDF5 (ON by default, for more reliable MPI compatibility), we override HDF5_ROOT accordingly\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Find the HDF5_C_COMPILER_EXECUTABLE to help the find_package call (else the system HDF5 will always be found)\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Chaste requires a parallel HDF5 library\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# for some reason the CMake in Homebrew returns a NOTFOUND entry in the Hdf5 libraries\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# put petsc includes after hdf5 includes or else the hdf5 headers\n\n# in the petsc include dir will clobber those chosen on FindHdf5.cmake\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "################################\n\n####  Find MPI\n\n################################\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# MPIEXEC deprecated in newer FindMPI.cmake (#2967)\n",
        "Line" : 398,
        "CharPositionInLine" : 40
      },
      "40" : {
        "Text" : "################################\n\n####  Find ParMETIS and METIS\n\n################################\n\n# If we're using PETSc's ParMETIS (ON by default, for more reliable MPI compatibility), override PARMETIS_ROOT accordingly\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "################################\n\n####  Find Sundials\n\n################################\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#chaste_add_libraries(Chaste_LINK_LIBRARIES Chaste_THIRD_PARTY_STATIC_LIBRARIES Chaste_LINK_LIBRARIES)\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# ParMETIS and Sundials might need MPI, so add MPI libraries after these\n\n#chaste_add_libraries(MPI_CXX_LIBRARIES Chaste_THIRD_PARTY_STATIC_LIBRARIES Chaste_LINK_LIBRARIES)\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# make sure VTK libraries added after HDF5 so VTK's link with HDF5 isn't used\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "################################\n\n####  Find Xerces and XSD\n\n################################\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#MS Includes\n",
        "Line" : 489,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "###########################################\n\n# SETUP AVAILABLE COMPONENTS AND PROJECTS #\n\n###########################################\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# List the available Chaste components\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Find any projects\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# test for CMakeLists.txt file\n",
        "Line" : 533,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "####################################\n\n# setup tutorial generation target #\n\n####################################\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#################################################\n\n# setup test pack and component testing targets #\n\n#################################################\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# ${component} target will build library and tests\n",
        "Line" : 567,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# chaste_${component} is the actual library target\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# project_${project} target will build library and tests\n",
        "Line" : 574,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# chaste_project_${project} target is the actual library target\n",
        "Line" : 576,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Targets for making core components and core component libraries, respectively\n",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Targets for making all components and all component libraries, respectively\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#######################################################\n\n# SETUP COMPONENT DEPENDANCIES AND HEADER DIRECTORIES #\n\n#######################################################\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Specify which other components each depends on.\n\n# This information is used to set up CMake dependencies, include search paths and libraries to link against.\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# These custom targets depend on other components but are not components themselves\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Set dependencies for custom targets\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# for now, assume only heart has xsd files\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# generate include dirs\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#####################################\n\n#  SETUP CONFIG FOR IN-TREE BUILDS  #\n\n#####################################\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "####################\n\n# BUILD COMPONENTS #\n\n####################\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Build each component as a project\n",
        "Line" : 664,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# After components are built, add dependencies for the custom chaste_core and chaste_all_components libraries\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "####################\n\n#  BUILD MAIN APPS #\n\n####################\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#note, heart not supported in windows\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "####################\n\n# RUN PYTHON TESTS #\n\n####################\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "####################\n\n#  BUILD PROJECTS  #\n\n####################\n",
        "Line" : 694,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "########################################\n\n# EXPORT CONFIG FOR OUT-OF-TREE BUILDS #\n\n########################################\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#added in 2.8.12, need this?    EXPORT_LINK_INTERFACE_LIBRARIES\n",
        "Line" : 710,
        "CharPositionInLine" : 8
      },
      "75" : {
        "Text" : "# Configure file for install dir\n",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Configure file for build dir\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#    \"${Chaste_BINARY_DIR}/ChasteTargets.cmake\"\n",
        "Line" : 758,
        "CharPositionInLine" : 9
      },
      "78" : {
        "Text" : "# CxxTest folder\n",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Python folder\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# libraries\n",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#EXPORT_LINK_INTERFACE_LIBRARIES\n",
        "Line" : 784,
        "CharPositionInLine" : 9
      },
      "82" : {
        "Text" : "####################\n\n#    COVERAGE      #\n\n####################\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Run ctest with a low priority (+15)\n",
        "Line" : 795,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 803,
        "CharPositionInLine" : 23
      },
      "85" : {
        "Text" : "# Run tests\n",
        "Line" : 806,
        "CharPositionInLine" : 23
      },
      "86" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 810,
        "CharPositionInLine" : 23
      },
      "87" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 824,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "####################\n\n#    CLANG TIDY    #\n\n####################\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Find the executable; highest version number for preference\n",
        "Line" : 838,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Get a list of all source files we wish to process with clang_tidy\n",
        "Line" : 846,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# Every translation unit including HeartConfig.hpp will #include \"ChasteParameters_3_4.hpp\" which doesn't exist\n\n# until compilation. \\todo: how can we get around this, ideally without having to compile!\n",
        "Line" : 849,
        "CharPositionInLine" : 8
      },
      "92" : {
        "Text" : "# Get the cpp files recursively from this component\n",
        "Line" : 852,
        "CharPositionInLine" : 12
      },
      "93" : {
        "Text" : "# Check them for specific excludes\n",
        "Line" : 854,
        "CharPositionInLine" : 12
      },
      "94" : {
        "Text" : "# Add custom commands: one for each src file to process\n",
        "Line" : 863,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# Generate output file name from source file path\n",
        "Line" : 865,
        "CharPositionInLine" : 8
      },
      "96" : {
        "Text" : "# Generate path to input file\n",
        "Line" : 869,
        "CharPositionInLine" : 8
      },
      "97" : {
        "Text" : "# Custom command to do the processing\n",
        "Line" : 872,
        "CharPositionInLine" : 8
      },
      "98" : {
        "Text" : "# Finally set out_files for dependencies\n",
        "Line" : 879,
        "CharPositionInLine" : 8
      },
      "99" : {
        "Text" : "# Create a target that will run clang_tidy on each target\n",
        "Line" : 883,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "####################\n\n#     Doxygen      #\n\n####################\n",
        "Line" : 887,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "####################\n\n#  MEMORY TESTING  #\n\n####################\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Run ctest with a low priority (+15)\n",
        "Line" : 910,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "####################\n\n#     Profiling    #\n\n####################\n",
        "Line" : 922,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Run ctest with a neutral priority (0): buildbot doesn't have permission to set higher priorities\n",
        "Line" : 935,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "##############################\n\n#     Infrastructure Tests   #\n\n##############################\n",
        "Line" : 947,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "####################\n\n#    PACKAGING     #\n\n####################\n",
        "Line" : 962,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#set(CPACK_COMPONENT_${component}_tests_DEPENDS ${CPACK_COMPONENT_${component}_tests_DEPENDS} ${depend_component}_tests)\n",
        "Line" : 1024,
        "CharPositionInLine" : 8
      },
      "108" : {
        "Text" : "# This must always be last!\n",
        "Line" : 1036,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 109
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "b8d514fb2a63cf15fabf1f760a9261772adc594d",
      "LastModified" : "2015-09-24T15:12:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cell_based/CMakeLists.txt" : {
      "ObjectId" : "41a5e334e615933e3ff9b71f0ee4d736ed767bb8",
      "LastModified" : "2015-11-26T14:39:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#The compiler flag /bigobj deals with the \"fatal error C1128\": 'number of sections exceeded object file format limit'\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cell_based/test/CMakeLists.txt" : {
      "ObjectId" : "9cbb2149dcbb0de07babe598b2347c05f66f3323",
      "LastModified" : "2015-03-20T15:11:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(LINKER_FLAGS \"/NODEFAULTLIB:LIBCMT /NODEFAULTLIB:LIBCMTD /NODEFAULTLIB:LIBCPMT\")#unresolved externals getcwd etc.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CMakeLists.txt" : {
      "ObjectId" : "20c2eee2a9d89bad609eac3cde7ce85fd33853ea",
      "LastModified" : "2015-03-20T15:11:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This CMake build file automatically builds Chaste and its third party library dependencies as external projects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Build the third-party bilbraries as an external project\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Build Chaste as an external project\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Potentially shorten build path. Found out that MSVC does not like too deep build paths, which came up while building\n\n# the tests. MSVC 2010 has a limitation of around 260 characters, which was bumped up\n\n# to 400, I believe, in MSVC 2012 (and hence why I probably did not hit this previously).\n",
        "Line" : 53,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 4
    },
    "cmake/ConfigureComponentTesting.cmake" : {
      "ObjectId" : "52c3e9e6c4cd594c7bbaa107306feb2bdaa73e13",
      "LastModified" : "2015-03-20T15:11:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/ChasteBuildTypes.cmake" : {
      "ObjectId" : "d55586ec8ea0837b1e39f21c7c27d61d7b78e6c9",
      "LastModified" : "2017-06-10T11:22:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add new build types\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/ChasteCompilerFlags.cmake" : {
      "ObjectId" : "e8806c6440b082aa854c23b53a0066d8bd5eed3c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# default flags added to all compilers except MSVC\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the C++ Standard\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--coverage seems to be the preferred flag\n\n#set(default_flags \"${default_flags} -fprofile-arcs -ftest-coverage\")\n\n#set(default_exe_linker_flags \"${default_exe_linker_flags} -fprofile-arcs -ftest-coverage\")\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# See https://developers.redhat.com/blog/2017/03/10/wimplicit-fallthrough-in-gcc-7/\n",
        "Line" : 53,
        "CharPositionInLine" : 76
      },
      "4" : {
        "Text" : "# Not available on 10.0\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#2304: non-explicit constructor with single argument\n",
        "Line" : 70,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Switch these ones on for compatibility \n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#271: trailing comma is nonstandard\n",
        "Line" : 73,
        "CharPositionInLine" : 15
      },
      "8" : {
        "Text" : "#Following doesn't seem to play\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#810: conversion from \"double\" to \"unsigned int\" may lose significant bits\n",
        "Line" : 76,
        "CharPositionInLine" : 15
      },
      "10" : {
        "Text" : "# This is where the statement is unreachable in a particular instatiation of the template.  e.g. \"if (SPACE_DIM<3){return;}\" will complain that the SPACE_DIM=3 specific code is unreachable.\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#111: statement is unreachable (DUE TO INSTANTIATED TEMPLATES)\n",
        "Line" : 79,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : "# This is where the statement is unreachable in a particular instatiation of the template.  e.g. \"if (ELEMENT_DIM<SPACE_DIM){return;}\" will complain that the ELEMENT_DIM == SPACE_DIM dynamic initialization is unreachable.\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#185: dynamic initialization in unreachable code (DUE TO INSTANTIATED TEMPLATES)\n",
        "Line" : 82,
        "CharPositionInLine" : 15
      },
      "14" : {
        "Text" : "# This happens when a switch is based on an unsigned template parameter\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#280: selector expression is constant\n",
        "Line" : 85,
        "CharPositionInLine" : 15
      },
      "16" : {
        "Text" : "# This is seen when used templates to access the is_abstract base class definition\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#304: access control not specified (\"public\" by default)\n",
        "Line" : 88,
        "CharPositionInLine" : 15
      },
      "18" : {
        "Text" : "# This is when we pass an explict string to a std::string reference: e.g. FileFinder save_bidomain_dir(\"some_directory\", RelativeTo::ChasteSourceRoot);\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#383: value copied to temporary, reference to temporary used\n",
        "Line" : 91,
        "CharPositionInLine" : 15
      },
      "20" : {
        "Text" : "# Noncopyable doesn't have a virtual destructor.  The derived class should not have access to it either\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#444: destructor for base class \"boost::noncopyable_::noncopyable\" ... is not virtual\n",
        "Line" : 94,
        "CharPositionInLine" : 15
      },
      "22" : {
        "Text" : "# Most commonly seen in archiving where the \"version\" variable is often redundant\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#869: parameter \"...\" was never referenced\n",
        "Line" : 97,
        "CharPositionInLine" : 15
      },
      "24" : {
        "Text" : "# Triggered by macros such as TS_ASSERT_EQUALS(a,b)\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#981: operands are evaluated in unspecified order\n",
        "Line" : 100,
        "CharPositionInLine" : 15
      },
      "26" : {
        "Text" : "# We do this when we need to define templated functions in the header file\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "#1418: external function definition with no prior declaration\n",
        "Line" : 103,
        "CharPositionInLine" : 16
      },
      "28" : {
        "Text" : "# There are times when we want a local helper function (RecursiveCopy in FileFinder) or when we need to refer to KSPConvergedReasons\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "#1419: external declaration in primary source file\n",
        "Line" : 106,
        "CharPositionInLine" : 16
      },
      "30" : {
        "Text" : "# This one is potentially useful for telling us where we might want to use CompareDoubles::WithinRelativeTolerance, but in our core code (TimeStepper) the tests should ensure we aren't doing anything silly\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "#1572: floating-point equality and inequality comparisons are unreliable\n",
        "Line" : 109,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "#2289: proper signature for \"auto_ptr\" is \"Type(const Type&)\"\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "#2026: Effective C++ Item 14 Make sure base classes have virtual destructors\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "#2305: declaration of 'explicit' constructor without a single argument is redundant\n",
        "Line" : 115,
        "CharPositionInLine" : 9
      },
      "35" : {
        "Text" : "#For GUI configs. Change C, and CXX compiler flags dynamically to static, debug build.\n\n#The overrides.cmake include takes care of non GUI builds.\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# A bunch of compiler flags. Since we now propagate the compiler and linker flags to all external projects\n\n# this is one place to set all the flags.\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# => embed debugging info in library as opposed to using an external .pdb database\n\n# => disable insecure api warnings\n\n# => disable \"possible loss of data due to 'narrowing' conversion, e.g. size_t to int\"\n\n# => disable warning \"C++ exception specification ignored except to indicate a function is not __declspec(nothrow)\"\n\n# => 'identifier' : macro redefinition\n\n# => 'expression' : signed/unsigned mismatch\n\n# => 'argument' : conversion from 'type1' to 'type2', possible loss of data\n\n# => 'identifier' : unreferenced local variable\n\n# => 'identifier' : no suitable definition provided for explicit template instantiation request\n",
        "Line" : 137,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 38
    },
    "cmake/Modules/ChasteGenerateChasteBuildInfo.cmake" : {
      "ObjectId" : "6b849301074cbb7d9e77757364926987814eea7e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/ChasteGenerateVersionAndBuildInfo.cmake" : {
      "ObjectId" : "a37d2a9f1f3ec3b7e005952c82a57a820997a615",
      "LastModified" : "2018-05-29T16:12:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################\n\n#   Generate Version.cpp  #\n\n###########################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If ReleaseVersion.txt not found, obtain revision information from Git\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#string(TIMESTAMP build_time)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine project versions (either the git hash or svn revision number), and whether there are uncommited revisions\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Project is a git repo\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Determine the git hash as a string\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Determine whether there are uncommitted revisions\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Project is an svn repo\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Determine the svn revision number as a string\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Determine whether there are uncommitted revisions\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If it's not git or svn, we pass out some default values to indicate unknown version\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Strip trailing whitespace from project version\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##################################\n\n#  Generate ChasteBuildInfo.cpp  #\n\n##################################\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/Modules/ChasteHostOperatingSystem.cmake" : {
      "ObjectId" : "45a802c2a16b3c7c31162145cbbb667265ccadb7",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine the OS infomration and print it\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/ChasteMacros.cmake" : {
      "ObjectId" : "63e9e0ca18f3fc3b4910be529243d8308881d937",
      "LastModified" : "2018-12-11T16:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ChasteMacros.cmake\n\n#\n\n# A collection of macros useful for the Chaste project\n\n#\n\n# header_dirs(base_dir return_list) - recursivly finds Chaste header locations\n\n# cellml_dirs(base_dir return_list) - recursivly finds Chaste cellml locations\n\n# chaste_do_cellml(output_sources cellml_file dynamic) - convert cellml file to source files\n\n# chaste_add_test(_testTargetName) - add a new test\n\n# chaste_generate_test_name(test outTestName) - generate test name from source file\n\n# chaste_do_common(component) - process component, generating libraries, tests and apps\n\n# chaste_do_component(component) - wraps chaste_do_common for main Chaste components\n\n# chaste_do_project(component) - wraps chaste_do_common for Chaste projects\n\n# chaste_do_apps_common(app) - process app folder\n\n# chaste_do_apps_main() - wraps chaste_do_apps_common for main Chaste apps\n\n# chaste_do_apps_project(projectName) - wraps chaste_do_apps_common for project apps\n\n# chaste_do_test_common(component) - process test folder, generating test executables and targets\n\n# chaste_do_test_component(component) - wraps chaste_do_test_common for main Chaste components\n\n# chaste_do_test_project(projectName) - wraps chaste_do_test_common for Chaste projects\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################################\n\n# header_dirs\n\n# \n\n# A macro to recursively find Chaste header locations\n\n##########################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################\n\n# cellml_dirs\n\n# \n\n# A macro to recursively find Chaste cellml locations\n\n##########################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##########################################################\n\n# chaste_do_cellml \n\n# \n\n# convert cellml file to source files\n\n##########################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(BUILD_SHARED_LIBS)\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set depends on everything in python/pycml/* except for *.pyc and protocol.py\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "##########################################################\n\n# chaste_add_test\n\n# \n\n# Chaste Testing Macro. The predefined cxxtest_add_test is \n\n# not suitable because of little control over the test's \n\n# working directory\n\n##########################################################\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Note: \"${MPIEXEC} /np 1 master : subordinate\" means that we run one master process and n subordinate processes\n\n# on the local host with n+1 cores.\n\n# Here we are using the form ${MPIEXEC} /np 2 ${test}.\n\n# A figure-it-out-yourselfnstalled libvtk-java and libvtk5-qt4-dev form would be ${MPIEXEC} /np * ${test} which runs on all available cores\n\n# See http://technet.microsoft.com/en-us/library/cc947675%28v=ws.10%29.aspx\n\n# Note the underscore appended to the test name, to match with the RUN_TESTS block above, and ensure we don't\n\n# run more tests than intended!\n",
        "Line" : 165,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "##########################################################\n\n# chaste_generate_test_name\n\n# \n\n# returns the test name (in outTestName) from the source\n\n# hpp file (in test)\n\n##########################################################\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#####################\n\n# This functionality appends the path to each test: removed in #2906\n\n#####################\n\n#    string(REGEX REPLACE \"([a-zA-Z0-9_/]+)[.](hpp|py)\" \"\\\\1\" testName \"${test}\")\n\n#    string(REPLACE \"/\" \";\" testPath \"${testName}\")\n\n#    list(LENGTH testPath pathLength)\n\n#    if(${pathLength} EQUAL 1)\n\n#        set(testName ${testPath})\n\n#        set(testPath \"\")\n\n#        set(${outTestName} ${testName})\n\n#    else()\n\n#        math(EXPR index \"${pathLength} - 1\")\n\n#        list(GET testPath ${index} testName)\n\n#        list(REMOVE_AT testPath ${index})\n\n#        string(REPLACE \";\" \"_\" _testPath_ \"${testPath}\")\n\n#        string(REPLACE \";\" \"/\" testPath \"${testPath}\")\n\n#        set(${outTestName} \"${testName}_${_testPath_}_\")\n\n#    endif()\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##########################################################\n\n# chaste_do_common\n\n# \n\n# processes a component directory, generating libraries, \n\n# tests and apps according to the standard Chaste directory\n\n# layout\n\n##########################################################\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check if include dirs exists yet, and generate it if not\n",
        "Line" : 282,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# generate include dirs\n",
        "Line" : 288,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Find source files\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Generate additional source files from cellml\n",
        "Line" : 302,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add include directories\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Make component library, if component contains any source files\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# install component library\n",
        "Line" : 350,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# install component headers\n",
        "Line" : 356,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# install generated headers\n",
        "Line" : 363,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# Do testing if requested\n",
        "Line" : 380,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Build applications if present\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Do apps if requested\n",
        "Line" : 395,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "##########################################################\n\n# chaste_do_component and chaste_do_project\n\n# \n\n# wrapper for chaste_do_common for main Chaste components\n\n# and other project directories\n\n##########################################################\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# If project depends on heart, turn off XSD-related warnings about std::auto_ptr\n\n# TODO: remove this once we no longer support the oldest XSD version. #2811 #2934\n",
        "Line" : 417,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "##########################################################\n\n# chaste_do_apps_common\n\n# \n\n# process the apps folder\n\n##########################################################\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#set_target_properties(${appName} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/src)\n",
        "Line" : 452,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "##########################################################\n\n# chaste_do_apps_main and chaste_do_apps_project\n\n# \n\n# these wrap chaste_do_apps_common for both the main\n\n# Chaste apps directory and external project apps dirs\n\n##########################################################\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##########################################################\n\n# chaste_do_test_common\n\n# \n\n# process the tests directory, generating tests for all\n\n# enabled test packs.\n\n##########################################################\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Get the git revision (for tutorial tests)\n",
        "Line" : 529,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# make tutorial directories\n",
        "Line" : 532,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Figure out include path for tests\n",
        "Line" : 537,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Make test library if sources exist\n",
        "Line" : 542,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#set(COMPONENT_LIBRARIES ${COMPONENT_LIBRARIES} ${Chaste_DEPENDS_${component}})\n\n# Generate test suites\n",
        "Line" : 555,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#disable linker warnings 4217, 4049: locally-defined symbol imported in function ...\n",
        "Line" : 563,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "#message(\"Linker flags for project ${PROJECT_NAME} = ${LINKER_FLAGS}\")\n",
        "Line" : 565,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# remove python tests from windows builds\n",
        "Line" : 573,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# filename is a user tutorial\n",
        "Line" : 616,
        "CharPositionInLine" : 20
      },
      "38" : {
        "Text" : "# Get the git revision of last time this file was changed\n",
        "Line" : 618,
        "CharPositionInLine" : 24
      },
      "39" : {
        "Text" : "# filename is a paper tutorial\n",
        "Line" : 639,
        "CharPositionInLine" : 20
      },
      "40" : {
        "Text" : "# add dependencies to component and type targets. Do not include the python component or tests in Python files\n",
        "Line" : 651,
        "CharPositionInLine" : 16
      },
      "41" : {
        "Text" : "##########################################################\n\n# chaste_do_test_component and chaste_do_test_project\n\n# \n\n# wrapper for chaste_do_test_common for main Chaste tests\n\n# and external project tests\n\n##########################################################\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "cmake/Modules/ChasteRunCoverageTests.cmake" : {
      "ObjectId" : "fe930c2f3543b9ef986d952e8e56f62465c8b45e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/ChasteRunTestAndPostProcess.cmake" : {
      "ObjectId" : "84f077e3cbd7b0b782a78c2359164d688c4580a9",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# output_file contains the name of the output file the post_cmd will produce \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert the space-separated string to a list\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/ChasteUpdateBuildTime.cmake" : {
      "ObjectId" : "2876d645bfbce562392e88aa4234120d51541fcf",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/CorrectWindowsPaths.cmake" : {
      "ObjectId" : "5058282e74afcc55eeab22fe3d73f0d46c90869e",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CorrectWindowsPaths - this module defines one macro\n\n#\n\n# CONVERT_CYGWIN_PATH( PATH )\n\n#  This uses the command cygpath (provided by cygwin) to convert\n\n#  unix-style paths into paths useable by cmake on windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/EnsureOutOfSourceBuild.cmake" : {
      "ObjectId" : "98a859a7e45f4a82977d0cec3063443349f115b4",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindGit.cmake" : {
      "ObjectId" : "0adfff4b5073ad1170113b56e780414650c013c0",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n#  Program: 3D Slicer\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  See COPYRIGHT.txt\n\n#  or http://www.slicer.org/copyright/copyright.txt for details.\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n#  This file was originally developed by Jean-Christophe Fillion-Robin, Kitware Inc.\n\n#  and was partially funded by NIH grant 3P41RR013218-12S1\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The module defines the following variables:\n\n#   GIT_EXECUTABLE - path to git command line client\n\n#   GIT_FOUND - true if the command line client was found\n\n#\n\n# If the command line client executable is found the macro\n\n#  GIT_WC_INFO(<dir> <var-prefix>)\n\n# is defined to extract information of a git working copy at\n\n# a given location.\n\n#\n\n# The macro defines the following variables:\n\n#  <var-prefix>_WC_REVISION_HASH - Current SHA1 hash\n\n#  <var-prefix>_WC_REVISION - Current SHA1 hash\n\n#  <var-prefix>_WC_REVISION_NAME - Name associated with <var-prefix>_WC_REVISION_HASH\n\n#  <var-prefix>_WC_URL - output of command `git config --get remote.origin.url'\n\n#  <var-prefix>_WC_ROOT - Same value as working copy URL\n\n#  <var-prefix>_WC_LAST_CHANGED_DATE - date of last commit\n\n#  <var-prefix>_WC_GITSVN - Set to false\n\n#\n\n# ... and also the following ones if it's a git-svn repository:\n\n#  <var-prefix>_WC_GITSVN - Set to True if it is a\n\n#  <var-prefix>_WC_INFO - output of command `git svn info'\n\n#  <var-prefix>_WC_URL - url of the associated SVN repository\n\n#  <var-prefix>_WC_ROOT - root url of the associated SVN repository\n\n#  <var-prefix>_WC_REVISION - current SVN revision number\n\n#  <var-prefix>_WC_LAST_CHANGED_AUTHOR - author of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_DATE - date of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_REV - revision of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_LOG - last log of base revision\n\n#\n\n# Example usage:\n\n#   find_package(Git)\n\n#   if(GIT_FOUND)\n\n#    GIT_WC_INFO(${PROJECT_SOURCE_DIR} Project)\n\n#    message(\"Current revision is ${Project_WC_REVISION_HASH}\")\n\n#    message(\"git found: ${GIT_EXECUTABLE}\")\n\n#   endif()\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: Due to a bug in 'git.cmd' preventing it from returning the exit code of 'git',\n\n#       we excluded it from the list of executables to search.\n\n# See http://code.google.com/p/msysgit/issues/detail?id=428\n\n# TODO Check if 'git' exists, get the associated version, if the corresponding version\n\n#      is known to have a working version of 'git.cmd', use it.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check if this git is likely to be a git-svn repository\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# In case git-svn is used, attempt to extract svn info\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# If there is no 'remote.origin', default to \"NA\" value and print a warning message.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Determine if there are any modified (tracked) files\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/Modules/FindGperftools.cmake" : {
      "ObjectId" : "4fcfefe9bab6e6beebee20485fbfd9744d72c379",
      "LastModified" : "2017-06-10T11:22:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Acknowledgement: This file is based on the FindGperftools.cmake file from the GitHub repo https://github.com/mavam/vast (License below)\n\n# \n\n# Copyright (c) 2014, Matthias Vallentin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n#    contributors may be used to endorse or promote products derived from\n\n#    this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# Tries to find Gperftools.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Gperftools)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  Gperftools_ROOT_DIR  Set this variable to the root installation of\n\n#                       Gperftools if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  GPERFTOOLS_FOUND              System has Gperftools libs/headers\n\n#  GPERFTOOLS_LIBRARIES          The Gperftools libraries (tcmalloc & profiler)\n\n#  GPERFTOOLS_INCLUDE_DIR        The location of Gperftools headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindMETIS.cmake" : {
      "ObjectId" : "eb3576a80c6657cd8e131772097034585c0d3afb",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Accepts the following variables:\n\n#\n\n# METIS_ROOT: Prefix where METIS is installed.\n\n# METIS_LIB_NAME: Name of the METIS library (default: metis).\n\n# METIS_LIBRARY: Full path of the METIS library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sets the following variables:\n\n#\n\n# METIS_LIBRARY: Full path of the METIS library.\n\n# METIS_FOUND: True if ParMETIS was found.\n\n# METIS_LIBRARIES: List of all libraries needed for linking with METIS,\n\n#\n\n# Provides the following macros:\n\n#\n\n# find_package(METIS)\n\n#\n\n# Searches for METIS (See above)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# search metis header\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check metis header\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Save variables\n",
        "Line" : 33,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# search metis library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we need to check whether we need to link m, copy the lazy solution from FindBLAS and FindLAPACK here.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check metis library\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# behave like a CMake module is supposed to behave\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# if both headers and library are found, store results\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# log result\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# log errornous result\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#add all metis related flags to ALL_PKG_FLAGS, this must happen regardless of a target using add_dune_metis_flags\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/Modules/FindPETSc.cmake" : {
      "ObjectId" : "8e45bc975b05d6360f0a1ecda6732a0d7066279e",
      "LastModified" : "2018-12-11T16:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PETSc\n\n# Acknowledgement: This file is based on the FindPETSc.cmake file from the GitHub repo https://github.com/jedbrown/cmake-modules.git (BSD-2 License)\n\n# Once done this will define\n\n#\n\n#  PETSC_FOUND        - system has PETSc\n\n#  PETSC_INCLUDES     - the PETSc include directories\n\n#  PETSC_LIBRARIES    - Link these to use PETSc\n\n#  PETSC_COMPILER     - Compiler used by PETSc, helpful to find a compatible MPI\n\n#  PETSC_DEFINITIONS  - Compiler switches for using PETSc\n\n#  PETSC_MPIEXEC      - Executable for running MPI programs\n\n#  PETSC_VERSION      - Version string (MAJOR.MINOR.SUBMINOR)\n\n#\n\n#  Usage:\n\n#  find_package(PETSc COMPONENTS CXX)  - required if build --with-clanguage=C++ --with-c-support=0\n\n#  find_package(PETSc COMPONENTS C)    - standard behavior of checking build using a C compiler\n\n#  find_package(PETSc)                 - same as above\n\n#\n\n# Setting these changes the behavior of the search\n\n#  PETSC_DIR - directory in which PETSc resides\n\n#  PETSC_ARCH - build architecture\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Right now, this is designed for compatability with the --with-clanguage option, so\n\n# only allow one item in the components list.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This is a stub for allowing multiple components should that time ever come. Perhaps\n\n# to also test Fortran bindings?\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Find the file petscversion.h\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# break line into three fields (the first is always \"#define\")\n",
        "Line" : 62,
        "CharPositionInLine" : 53
      },
      "5" : {
        "Text" : "# Also in local scope so we have access below\n",
        "Line" : 66,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "# make dev version compare higher than any patch level of a released version\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "###############################################\n\n# Begin determining PETSC_DIR and PETSC_ARCH\n\n###############################################\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This will define PETSC_DIR and PETSC_ARCH if and only if they are defined in the corresponding environment variables\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If both variables are set, use them\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Look in the following hard-coded PETSc locations first\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If it's Linux...\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Hardcode default package locations for...\n\n# ... Ubuntu 14.04\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# ... Ubuntu 16.04\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# ... Ubuntu 16.10\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# ... Ubuntu 17.04\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# ... Ubuntu 17.10\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# ... Ubuntu 18.04\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# ... Anything else with dir /usr/lib/petscdir\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Find a petsc dir that ends in a.b.c\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# ... generic case.  Other Linux, perhaps\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# If it's Apple OS X or macOS\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# If it's Windows\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# In case we need a default case\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# If it's still not found, use the previous infrastructure to have a stab at it\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Homebrew\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Debian paths\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Ubuntu paths\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# MacPorts path\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# PETSc for Windows\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# If set, use environment variable first\n",
        "Line" : 215,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "#PETSc for Windows\n",
        "Line" : 216,
        "CharPositionInLine" : 34
      },
      "32" : {
        "Text" : "# Debian defaults\n",
        "Line" : 218,
        "CharPositionInLine" : 39
      },
      "33" : {
        "Text" : "###############################################\n\n# End determining PETSC_DIR and PETSC_ARCH\n\n###############################################\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#search for config file in ${PETSC_DIR}/${PETSC_ARCH}. if exists use this\n",
        "Line" : 252,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Find the `conf/rules` and `conf/variables` files, that will help define the installation\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Put variables into environment since they are needed to get\n\n# configuration (petscvariables) in the PETSc makefile\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# A temporary makefile to probe the PETSc configuration\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# We are done with the temporary Makefile, calling PETSC_GET_VARIABLE after this point is invalid!\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Extract include paths and libraries from compile command line\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#on windows we need to make sure we're linking against the right\n\n#runtime library\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Clear any stale value, if we got here, we need to find it again\n",
        "Line" : 342,
        "CharPositionInLine" : 76
      },
      "42" : {
        "Text" : "#windows expects \"libfoo\", linux expects \"foo\"\n",
        "Line" : 344,
        "CharPositionInLine" : 31
      },
      "43" : {
        "Text" : "# Look for petscvec first, if it doesn't exist, we must be using single-library\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# libpetscsys is called libpetsc prior to 3.1 (when single-library was introduced)\n",
        "Line" : 360,
        "CharPositionInLine" : 47
      },
      "45" : {
        "Text" : "# There is no libpetscvec\n",
        "Line" : 377,
        "CharPositionInLine" : 70
      },
      "46" : {
        "Text" : "# We do an out-of-source build so __FILE__ will be an absolute path, hence __INSDIR__ is superfluous\n",
        "Line" : 404,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Sometimes this can be used to assist FindMPI.cmake\n",
        "Line" : 410,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Note that we have forced values for all these choices.  If you\n\n# change these, you are telling the system to trust you that they\n\n# work.  It is likely that you will end up with a broken build.\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 49
    },
    "cmake/Modules/FindPackageMultipass.cmake" : {
      "ObjectId" : "ec4c9142ca5556c7a6c35452f0efc360bb2c4320",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Acknowledgement: This file is based on the FindPETSc.cmake file from the GitHub repo https://github.com/jedbrown/cmake-modules.git (BSD-2 License)\n\n# \n\n# PackageMultipass - this module defines two macros\n\n#\n\n# FIND_PACKAGE_MULTIPASS (Name CURRENT\n\n#  STATES VAR0 VAR1 ...\n\n#  DEPENDENTS DEP0 DEP1 ...)\n\n#\n\n#  This function creates a cache entry <UPPERCASED-Name>_CURRENT which\n\n#  the user can set to \"NO\" to trigger a reconfiguration of the package.\n\n#  The first time this function is called, the values of\n\n#  <UPPERCASED-Name>_VAR0, ... are saved.  If <UPPERCASED-Name>_CURRENT\n\n#  is false or if any STATE has changed since the last time\n\n#  FIND_PACKAGE_MULTIPASS() was called, then CURRENT will be set to \"NO\",\n\n#  otherwise CURRENT will be \"YES\".  IF not CURRENT, then\n\n#  <UPPERCASED-Name>_DEP0, ... will be FORCED to NOTFOUND.\n\n#  Example:\n\n#    find_path (FOO_DIR include/foo.h)\n\n#    FIND_PACKAGE_MULTIPASS (Foo foo_current\n\n#      STATES DIR\n\n#      DEPENDENTS INCLUDES LIBRARIES)\n\n#    if (NOT foo_current)\n\n#      # Make temporary files, run programs, etc, to determine FOO_INCLUDES and FOO_LIBRARIES\n\n#    endif (NOT foo_current)\n\n#\n\n# MULTIPASS_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS LANGUAGE)\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale. The LANGUAGE\n\n#  variable is either C or CXX indicating which compiler the test should\n\n#  use.\n\n# MULTIPASS_C_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS)\n\n#  DEPRECATED! This is only included for backwards compatability. Use\n\n#  the more general MULTIPASS_SOURCE_RUNS instead.\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The name of the stored value for the given state\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Clear all the dependent variables so that the module can reset them\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is a ridiculous hack.  CHECK_${language}_SOURCE_* thinks that if the\n\n# *name* of the return variable doesn't change, then the test does\n\n# not need to be re-run.  We keep an internal count which we\n\n# increment to guarantee that every test name is unique.  If we've\n\n# gotten here, then the configuration has changed enough that the\n\n# test *needs* to be rerun.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Why can't I add to a cache variable?\n",
        "Line" : 93,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindParMETIS.cmake" : {
      "ObjectId" : "bcf9def654cff81663b6cc778656a5230d1372dd",
      "LastModified" : "2017-08-15T09:38:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module that checks whether ParMETIS is available.\n\n#\n\n# Acknowledgement: This file is based on the FindParMETIS.cmake file from the GitHub repo https://github.com/dune-project/dune-common.git (GNU GPL license version 2)\n\n#\n\n# Accepts the following variables:\n\n#\n\n# PARMETIS_ROOT: Prefix where ParMETIS is installed.\n\n# METIS_LIB_NAME: Name of the METIS library (default: metis).\n\n# PARMETIS_LIB_NAME: Name of the ParMETIS library (default: parmetis).\n\n# METIS_LIBRARY: Full path of the METIS library.\n\n# PARMETIS_LIBRARY: Full path of the ParMETIS library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sets the following variables:\n\n#\n\n# METIS_LIBRARY: Full path of the METIS library.\n\n# PARMETIS_LIBRARY: Full path of the ParMETIS library.\n\n# PARMETIS_FOUND: True if ParMETIS was found.\n\n# PARMETIS_LIBRARIES: List of all libraries needed for linking with ParMETIS,\n\n#\n\n# Provides the following macros:\n\n#\n\n# find_package(ParMETIS)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check METIS and ParMETIS headers\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Save variables\n",
        "Line" : 43,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# search METIS library\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# search ParMETIS library\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# behave like a CMake module is supposed to behave\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#restore old values\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# log result\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cmake/Modules/FindSUNDIALS.cmake" : {
      "ObjectId" : "0e204b7557cdc0a3357084ef8a18daf7a45a7a7c",
      "LastModified" : "2018-12-11T16:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =============================================================================\n\n#  CADET - The Chromatography Analysis and Design Toolkit\n\n#  \n\n#  Copyright © 2008-2015: Eric von Lieres¹, Joel Andersson,\n\n#                         Andreas Puettmann¹, Sebastian Schnittert¹,\n\n#                         Samuel Leweke¹\n\n#                                      \n\n#    ¹ Forschungszentrum Juelich GmbH, IBG-1, Juelich, Germany.\n\n#  \n\n#  All rights reserved. This program and the accompanying materials\n\n#  are made available under the terms of the GNU Public License v3.0 (or, at\n\n#  your option, any later version) which accompanies this distribution, and\n\n#  is available at http://www.gnu.org/licenses/gpl.html\n\n# =============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find SUNDIALS, the SUite of Nonlinear and DIfferential/ALgebraic equation Solvers.\n\n#\n\n# The module will optionally accept the COMPONENTS argument.  If no COMPONENTS\n\n# are specified, then the find module will default to find all the SUNDIALS\n\n# libraries.  If one or more COMPONENTS are specified, the module will attempt to\n\n# find the specified components.\n\n#\n\n# On UNIX systems, this module will read the variable SUNDIALS_USE_STATIC_LIBRARIES\n\n# to determine whether or not to prefer a static link to a dynamic link for SUNDIALS\n\n# and all of it's dependencies.  To use this feature, make sure that the\n\n# SUNDIALS_USE_STATIC_LIBRARIES variable is set before the call to find_package.\n\n#\n\n# To provide the module with a hint about where to find your SUNDIALS installation,\n\n# you can set the environment variable SUNDIALS_ROOT. The FindSUNDIALS module will\n\n# then look in this path when searching for SUNDIALS paths and libraries.\n\n#\n\n# This module will define the following variables:\n\n#  SUNDIALS_INCLUDE_DIRS - Location of the SUNDIALS includes\n\n#  SUNDIALS_VERSION_MAJOR \n\n#  SUNDIALS_VERSION_MINOR\n\n#  SUNDIALS_VERSION_SUBMINOR\n\n#  SUNDIALS_FOUND - true if SUNDIALS was found on the system\n\n#  SUNDIALS_LIBRARIES - Required libraries for all requested components\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Option that allows users to specify custom SUNDIALS path\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#else ()\n\n#    message (STATUS \"No environment variable 'SUNDIALS_ROOT' found,\\n\\tyou may specify custom path in 'PATH_SUNDIALS_ROOT' cache variable\")\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if (NOT PATH_SUNDIALS_ROOT)\n\n#    set (PATH_SUNDIALS_ROOT \"\" CACHE STRING \"Optional path to the SUNDIALS lib and include direrctory\" FORCE)\n\n#else ()\n\n#    list (APPEND CMAKE_INCLUDE_PATH \"${PATH_SUNDIALS_ROOT}\")\n\n#    list (APPEND CMAKE_LIBRARY_PATH \"${PATH_SUNDIALS_ROOT}\")\n\n#endif ()\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List of user definable search paths\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#    ${PATH_SUNDIALS_ROOT}\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List of the valid SUNDIALS components\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add the extra specified components, ensuring that they are valid.\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# find the SUNDIALS include directories\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# get SUNDIALS version\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# find the SUNDIALS libraries\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# According to bug 1643 on the CMake bug tracker, this is the\n\n# preferred method for searching for a static library.\n\n# See http://www.cmake.org/Bug/view.php?id=1643.  We search\n\n# first for the full static library name, but fall back to a\n\n# generic search on the name if the static search fails.\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# find blas and lapack\n\n# (sundials on ubuntu 12.04 need to explicitly link against lapack)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/Modules/FindTextTest.cmake" : {
      "ObjectId" : "59cb0dd3ab279f5f570c1834c9f3fe0f6f4212d9",
      "LastModified" : "2017-06-10T11:22:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Attempt to find the texttest application in various places. If found, the full\n\n# path will be in TESTTEST_PY. Look in the usual locations, as well as in\n\n# the 'bin' directory in the path given in the TEXTTEST_ROOT environment variable.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# General CMake package configuration.\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindValgrind.cmake" : {
      "ObjectId" : "56a3fd4b1a6fdb4f7c84f3ccce1b287da1b9a8a0",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Valgrind\n\n#\n\n# Sets the following cmake variables\n\n#  VALGRIND_COMMAND, the valgrind executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindXSD.cmake" : {
      "ObjectId" : "9213d4d27daa0529fadeb6ea6e95c93a223e23a4",
      "LastModified" : "2018-12-11T16:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based on the FindXSD.cmake file:\n\n#     http://wiki.codesynthesis.com/uploads/8/86/FindXSD.cmake.gz\n\n# \n\n# Attempt to find the xsd application in various places. If found, the full\n\n# path will be in XSD_EXECUTABLE. Look in the usual locations, as well as in\n\n# the 'bin' directory in the path given in the XSD_ROOT environment variable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Mono also has a utility called xsd, so try to find xsdcxx first\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prefer $ENV{XSD_ROOT}\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now try other system paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Obtain the include directory that one can use with INCLUDE_DIRECTORIES() to\n\n# access the xsd include files.\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Idenfity the XSD version from the executable\n\n# Look for X.Y.Z in the result of xsd --version\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# General CMake package configuration.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Macro that attempts to generate C++ files from an XML schema. The NAME\n\n# argument is the name of the CMake variable to use to store paths to the\n\n# derived C++ source file. The FILE argument is the path of the schema file to\n\n# process. Additional arguments should be XSD command-line options.\n\n#\n\n# Example:\n\n#\n\n# XSD_SCHEMA( FOO_SRCS Foo.xsd --root-element-first --generate-serialization )\n\n#\n\n# On return, FOO_SRCS will contain Foo.cxx.\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make a full path from the soource directory\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# XSD will generate two or three C++ files (*.cxx,*.hxx,*.ixx). Get the\n\n# destination file path sans any extension and then build paths to the\n\n# generated files.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#SET( xs_IPP \"${xs_FILE_DIR}/${xs_FILE}.ipp\" )\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add the source files to the NAME variable, which presumably will be used to\n\n# define the source of another target.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Set up a generator for the output files from the given schema file using\n\n# the XSD cxx-tree command.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Don't fail if a generated file does not exist.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "cmake/Modules/FindXerces.cmake" : {
      "ObjectId" : "3835dacc662c1b338b579db1b54ae3d9aebbecd9",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Xerces-C\r\n\n# Once done this will define\r\n\n#\r\n\n# Acknowledgement: This file is based on the FindXerces.cmake file from the GitHub repo https://github.com/jklimke/libcitygml.git (GNU LGPL license version 2.1)\r\n\n#\r\n\n#  XERCESC_FOUND - system has Xerces-C\r\n\n#  XERCESC_INCLUDE - the Xerces-C include directory\r\n\n#  XERCESC_LIBRARY - Link these to use Xerces-C\r\n\n#  XERCESC_VERSION - Xerces-C found version\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/ResolveCompilerPaths.cmake" : {
      "ObjectId" : "3c269c5e140ceb5a46305916b5b94a834722ad9f",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ResolveCompilerPaths - this module defines two macros\n\n#\n\n# RESOLVE_LIBRARIES (XXX_LIBRARIES LINK_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compiler link line and resolves all libraries\n\n#  (-lfoo) using the library path contexts (-L/path) in scope.\n\n#  The result in XXX_LIBRARIES is the list of fully resolved libs.\n\n#  Example:\n\n#\n\n#    RESOLVE_LIBRARIES (FOO_LIBRARIES \"-L/A -la -L/B -lb -lc -ld\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_LIBRARIES:STRING=\"/A/liba.so;/B/libb.so;/A/libc.so;/usr/lib/libd.so\"\n\n#\n\n#  if the filesystem looks like\n\n#\n\n#    /A:       liba.so         libc.so\n\n#    /B:       liba.so libb.so\n\n#    /usr/lib: liba.so libb.so libc.so libd.so\n\n#\n\n#  and /usr/lib is a system directory.\n\n#\n\n#  Note: If RESOLVE_LIBRARIES() resolves a link line differently from\n\n#  the native linker, there is a bug in this macro (please report it).\n\n#\n\n# RESOLVE_INCLUDES (XXX_INCLUDES INCLUDE_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compile line and resolves all includes\n\n#  (-I/path/to/include) to a list of directories.  Other flags are ignored.\n\n#  Example:\n\n#\n\n#    RESOLVE_INCLUDES (FOO_INCLUDES \"-I/A -DBAR='\\\"irrelevant -I/string here\\\"' -I/B\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_INCLUDES:STRING=\"/A;/B\"\n\n#\n\n#  assuming both directories exist.\n\n#  Note: as currently implemented, the -I/string will be picked up mistakenly (cry, cry)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it's a library path, add it to the list\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# It's a library, resolve the path by looking in the list and then (by default) in system directories\n\n#if (WIN32) #windows expects \"libfoo\", linux expects \"foo\"\n\n#  string (REGEX REPLACE \"^-l\" \"lib\" token ${token})\n\n#else (WIN32)\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "#endif (WIN32)\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# We have an absolute path\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "#separate into a path and a library name:\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# only the LAST occurence of each library is required since there should be no circular dependencies\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/c_flag_overrides.cmake" : {
      "ObjectId" : "174b49c22686ab01bec90f40b8743743baf5d3eb",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Link statically\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Applies only to MSVC\n",
        "Line" : 2,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 3,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 3
    },
    "cmake/cxx_flag_overrides.cmake" : {
      "ObjectId" : "8f03a6a09f70c0ebf70bf871b70ae6e75da10188",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Link statically\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Applies only to MSVC\n",
        "Line" : 2,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 2
    },
    "cmake/definitions.cmake" : {
      "ObjectId" : "6736b3e13d6f2c001ef13b069159e9aeb2205bbe",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiler flag definitions common to Chaste & third party library builds\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Applies only to MSVC\n",
        "Line" : 4,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "#For GUI configs. Change C, and CXX compiler flags dynamically to static, debug build.\n\n#The overrides.cmake include takes care of non GUI builds.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A bunch of compiler flags. Since we now propagate the compiler and linker flags to all external projects\n\n# this is one place to set all the flags.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# => embed debugging info in library as opposed to using an external .pdb database\n\n# => disable insecure api warnings\n\n# => disable \"possible loss of data due to 'narrowing' conversion, e.g. size_t to int\"\n\n# => disable warning \"C++ exception specification ignored except to indicate a function is not __declspec(nothrow)\"\n\n# => 'identifier' : macro redefinition\n\n# => 'expression' : signed/unsigned mismatch\n\n# => 'argument' : conversion from 'type1' to 'type2', possible loss of data\n\n# => 'identifier' : unreferenced local variable\n\n# => 'identifier' : no suitable definition provided for explicit template instantiation request\n",
        "Line" : 18,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Some third party libaries need further suppressions\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#    -MTd    # => static debug build\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# => use precompiled headers: this prevents a linker warning: \"H5FDdirect.obj : warning LNK4221: This object\n\n# file does not define any previously undefined public symbols, so it will not be used by any link operation\n\n# that consumes this library\".\n\n# => possible operator precedence error warning\n\n# => truncation from type1 to type2\n\n# => 'type' : incompatible types - from 'type1' to 'type2'\n",
        "Line" : 34,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "#message(\"Set standard compiler flags.\")\n\n#message(\"  C: ${CMAKE_C_FLAGS}; debug: ${CMAKE_C_FLAGS_DEBUG}\")\n\n#message(\"  CXX: ${CMAKE_CXX_FLAGS}; debug: ${CMAKE_CXX_FLAGS_DEBUG}\")\n\n#message(\"  LINK: ${CMAKE_EXE_LINKER_FLAGS}; debug: ${CMAKE_EXE_LINKER_FLAGS_DEBUG}\")\n\n#get_directory_property(DirDefs DEFINITIONS)\n\n#message(\"  DEFS: ${DirDefs}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/overrides.cmake" : {
      "ObjectId" : "d66a8397635700f0433749d814de28a4f4c3acfe",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure consistent view of static/thread/debug settings.\n\n# See e.g. http://msdn.microsoft.com/en-us/library/2kzt1wy3.aspx\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/third_party_libs/CMakeLists.txt" : {
      "ObjectId" : "34b50da223e8f7c2f94994ab3c02cfb28a4322a5",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This CMake build file automatically builds Chaste's third-party libraries.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# used to prevent re-patching what we've already patched\n",
        "Line" : 27,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : "#Automatic install of Cygwin and the required software, if the user requests it.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Download Cygwin (an improvement would be to verify the binary signature before running it!)\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#gcc4-core and zlib seem to be optional Cygwin packages. I added them while hunting down the MS MPI PETSc integration failure\n\n#In the end, they don't seem to contribute to the solution. Keeping a record here for reference.\n\n#Openssh is needed for the automated testing platform for Chaste. It is not be needed if the intention is to just build PETSc.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#20 minutes max!\n",
        "Line" : 74,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "#============================= Locate Cygwin (Needed by PETSc)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Find Cygwin bash\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#fix an issue with python thinking it is not properly configured\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#remove leading and trailing whitespaces and newlines from url\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Unzip\n",
        "Line" : 157,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#Build the Boosts\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Boost's library naming convention\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#Check whether Boost has been previously configured.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#Configure Boost\n",
        "Line" : 190,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#unset(BJAM_${boost_basicname})\n",
        "Line" : 212,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#Patch Boost to enable MPI ...\n\n#Patch $BOOST_SRC/tools/build/v2/user-config.jam\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#check whether we have patched this already\n",
        "Line" : 219,
        "CharPositionInLine" : 10
      },
      "18" : {
        "Text" : "#not patched yet\n",
        "Line" : 221,
        "CharPositionInLine" : 28
      },
      "19" : {
        "Text" : "#Help boost find MS MPI\n",
        "Line" : 226,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "#check whether we have patched this already\n",
        "Line" : 228,
        "CharPositionInLine" : 10
      },
      "21" : {
        "Text" : "#not patched yet\n",
        "Line" : 230,
        "CharPositionInLine" : 28
      },
      "22" : {
        "Text" : "#Build Boost (Boost does not like too deep build paths)\n",
        "Line" : 242,
        "CharPositionInLine" : 10
      },
      "23" : {
        "Text" : "#Install Boost (if build succeeds)\n",
        "Line" : 263,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "#remove leading and trailing whitespaces and newlines from url\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#Download PETSc\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#Download corresponding parmetis\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#remove single quotes\n",
        "Line" : 314,
        "CharPositionInLine" : 63
      },
      "28" : {
        "Text" : "#remove single quotes\n",
        "Line" : 334,
        "CharPositionInLine" : 57
      },
      "29" : {
        "Text" : "#patch the PARMETIS CMakeLists.txt\n",
        "Line" : 346,
        "CharPositionInLine" : 10
      },
      "30" : {
        "Text" : "#check whether we have patched this already\n",
        "Line" : 349,
        "CharPositionInLine" : 10
      },
      "31" : {
        "Text" : "#not patched yet\n",
        "Line" : 351,
        "CharPositionInLine" : 28
      },
      "32" : {
        "Text" : "#End of replacement string\n",
        "Line" : 376,
        "CharPositionInLine" : 16
      },
      "33" : {
        "Text" : "#check whether patched\n",
        "Line" : 383,
        "CharPositionInLine" : 7
      },
      "34" : {
        "Text" : "#Patch METIS CMakeLists.txt\n",
        "Line" : 385,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "#check whether we have patched this already\n",
        "Line" : 387,
        "CharPositionInLine" : 10
      },
      "36" : {
        "Text" : "#not patched yet\n",
        "Line" : 389,
        "CharPositionInLine" : 28
      },
      "37" : {
        "Text" : "#check whether patched\n",
        "Line" : 401,
        "CharPositionInLine" : 17
      },
      "38" : {
        "Text" : "#Build METIS as an enternal project dependency\n",
        "Line" : 404,
        "CharPositionInLine" : 10
      },
      "39" : {
        "Text" : "#Build ParMETIS as an external project\n",
        "Line" : 431,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "#Don't forget to build a native Windows version of F2CBlas and Lapack!\n",
        "Line" : 458,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "#remove single quotes\n",
        "Line" : 466,
        "CharPositionInLine" : 53
      },
      "42" : {
        "Text" : "# Generate CMake build scripts for the libraries\n\n# We get some help on what sources to add from the makefiles in the directories\n",
        "Line" : 476,
        "CharPositionInLine" : 10
      },
      "43" : {
        "Text" : "#Build F2CBlasLapack as an external project\n",
        "Line" : 514,
        "CharPositionInLine" : 10
      },
      "44" : {
        "Text" : "#The original tmp directory on my platform was causing win32fe to fail\n\n#fix by explicitly setting the following environment variables.\n\n#Although, win32fe is no longer used, leave the following, as it is still useful to control this environment variable.\n",
        "Line" : 539,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "#ensure that msmpi library is available to and usable by i686-w64-mingw32-gcc\n",
        "Line" : 550,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Generate the msmpi.def file\n",
        "Line" : 555,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Fix an issue with calling convention mismatch\n",
        "Line" : 568,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# Generate libmsmpi.a\n",
        "Line" : 574,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "#The script that configures PETSc in Cygwin\n",
        "Line" : 599,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "#Delete CMake Cache generated by PETSc configuration.\n",
        "Line" : 639,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "#Patch and customise PETSc the configuration header file\n",
        "Line" : 646,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# PATCH generated PETSc CMake files to enable PARMETIS and set up library locations properly for\n\n# native Windows build\n",
        "Line" : 653,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "#check whether we have patched this already\n",
        "Line" : 669,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "#not patched yet\n",
        "Line" : 671,
        "CharPositionInLine" : 28
      },
      "55" : {
        "Text" : "# enable PARMETIS and other Windows-specific PETSc options\n",
        "Line" : 687,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "#Build PETSc itself!\n",
        "Line" : 699,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "#generate cmake config file for petsc\n",
        "Line" : 726,
        "CharPositionInLine" : 1
      },
      "58" : {
        "Text" : "#Delete an errant directory created by PETSc\n",
        "Line" : 730,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "#Restore TEMP directory to native WINDOWS format\n",
        "Line" : 736,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "#Build the HDF5s\n",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#Build HDF5 as an external project\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#Build the Sundials\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#Build sundials as an external project\n",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Build VTK as an external project\n",
        "Line" : 824,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#    file(GLOB_RECURSE VTK_INC ${CMAKE_INSTALL_PREFIX}/vtk_${vtk_basicname}/include/*)\n",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#    foreach(f ${VTK_INC})\n\n#        get_filename_component(p ${f} PATH)\n\n#        list(APPEND VTK_INC_DIRS ${p})\n\n#    endforeach()\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Write a file in the Chaste source tree containing include and link paths for all the libraries installed\n",
        "Line" : 875,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 68
    },
    "cmake/third_party_libs/ChasteThirdPartyLibs.cmake" : {
      "ObjectId" : "5f49320e6e29aa4ea8905a8dbf4c6b3e626bca8f",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#URLs to Third party libraries needed by Chaste\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the urls of the libraries you want to build separated by spaces and/or newlines, or as separate strings.\n\n# Note that the URLS of PARMETIS, METIS, F2CBLAS, F2CLAPACK are all automatically obtained from the\n\n# PETSc distribution once it has been downloaded and unzipped. So, there is no need to manually\n\n# specify the URLs for these libraries \n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\"http://kent.dl.sourceforge.net/project/boost/boost/1.52.0/boost_1_52_0.tar.gz\" \n",
        "Line" : 11,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 3
    },
    "continuum_mechanics/CMakeLists.txt" : {
      "ObjectId" : "b6e4666e0965ddf98198e45e3bce82ab1f380623",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "continuum_mechanics/test/CMakeLists.txt" : {
      "ObjectId" : "4ae7b9a89697f4c064a85c93fdb1efb6f7bd55b9",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "crypt/CMakeLists.txt" : {
      "ObjectId" : "ef6581e36e23cfe037e4227e682247477ba9cff8",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "crypt/test/CMakeLists.txt" : {
      "ObjectId" : "566654c8a58ac959a8bb4ca2efd7be7607a15d86",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cxxtest/sample/mock/Makefile" : {
      "ObjectId" : "709b7cbe95d70ef7e6f1b0bbdbeacfe4e3d44f02",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cxxtest/sample/msvc/Makefile" : {
      "ObjectId" : "cba6f5f0dbfce90203964d4e370afffd61eb1a7f",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Where to look for the tests\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Where the CxxTest distribution is unpacked\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check CXXTESTDIR\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cxxtestgen needs Perl or Python\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The arguments to pass to cxxtestgen\r\n\n#  - ParenPrinter is the way MSVC likes its compilation errors\r\n\n#  - --have-eh/--abort-on-fail are nice when you have them\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# How to generate the test runner, `runner.cpp'\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# How to run the tests, which should be in DIR\\runner.exe\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7,
      "Errorlog" : "line 2:21 token recognition error at: '\\g'\nline 8:24 token recognition error at: '\\c'\n"
    },
    "cxxtest/sample/winddk/Makefile" : {
      "ObjectId" : "8bf25333e8465d6605095fd8edad51085be665ed",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Standard DDK Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 2:21 token recognition error at: '\\m'\n"
    },
    "global/CMakeLists.txt" : {
      "ObjectId" : "fc1bf6fd91f759072811fa6317b10eba6a3376ab",
      "LastModified" : "2018-12-11T16:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#The generated timekeeper.cpp code below keeps track of build timestamp.\n\n#It is built and executed prior to starting a build and prints the timestamp\n\n#in a given format. This timestamp is used by Version.cpp, which is also auto-generated.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################################################\n\n#  Setup command to generate Version and BuildInfo at build-time  #\n\n###################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "global/test/CMakeLists.txt" : {
      "ObjectId" : "53f113a40106a2c74f2ff49479cdc798cf722d5d",
      "LastModified" : "2017-06-10T11:22:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "heart/CMakeLists.txt" : {
      "ObjectId" : "acd7924b0973efc378bab187fbcfae5459571dd1",
      "LastModified" : "2017-08-15T09:38:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XSD < 4.0.0 generates code with std::auto_ptr.  This is deprecated from C++11 (in favour of new standard smart\n\n# pointers). This code turns off the deprecation warnings so that Chaste compiles.\n\n# TODO: Once we drop Chaste support for XSD 3.3, this should be removed in favour of changing auto_ptr to unique_ptr\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make dynamic directory for dynamic cellml compilation\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make sure to link dl libraries\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile dynamic models\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set_target_properties(${dyn_source_name} PROPERTIES LINK_FLAGS \"-Wl,-undefined,dynamic_lookup\")\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#target_link_libraries(${dyn_source_name} LINK_PRIVATE \"-Wl,--undefined\")\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# add dynamic models to the heart_tests and Continuous targets\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "heart/test/CMakeLists.txt" : {
      "ObjectId" : "943cea3e265722bdb84129cfa6139515c801f831",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "io/CMakeLists.txt" : {
      "ObjectId" : "655c8168aafe0385b96ea33b1337169d31ae46a6",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "io/test/CMakeLists.txt" : {
      "ObjectId" : "f11e636770a62f539634cef751d7082eff588695",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "linalg/CMakeLists.txt" : {
      "ObjectId" : "b6cb92e832ea006ad6f208d049aca7737ef32124",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "linalg/test/CMakeLists.txt" : {
      "ObjectId" : "1cc13f386d5ccb68c6081da490f272e26c145609",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lung/CMakeLists.txt" : {
      "ObjectId" : "6760e067f40345693439ab5fbc98c865bfe56f52",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lung/test/CMakeLists.txt" : {
      "ObjectId" : "cf7147e01c1ec9ba5536fa4a6d5009f10663ea71",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mesh/CMakeLists.txt" : {
      "ObjectId" : "7699208b1d6f3ba5d03ace0f8b04cb6e65d4f40f",
      "LastModified" : "2017-06-10T11:22:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Define TETLIBRARY: prevents Tetgen from including main() method\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mesh/test/CMakeLists.txt" : {
      "ObjectId" : "6eb453dbf161b9f14f0c73caf3586558a3a12c2f",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#GKLib uses/does C-style structured exception handling, using longjmp,\n\n#which caused untold headaches -- with MSVC linker errors.\n\n#In the end the solution was to comment out the line\n\n#longjmp(gk_jbufs[gk_cur_jbufs], signum);\n\n#in the functions \"void gk_sigthrow(int signum)\" and \"void gk_NonLocalExit_Handler(int signum)\", \n\n#both of which are in the file \"error.c\" under the GKLib directory under the metis source directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# undefined __imp_longjmp - FIXED by description above\n",
        "Line" : 11,
        "CharPositionInLine" : 63
      },
      "2" : {
        "Text" : "#Various other combinations that didn't work\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:LIBCMT /NODEFAULTLIB:LIBCMTD\")#libcpmtd, oldnames -- unresolved externals\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:LIBCMT /NODEFAULTLIB:MSVCRTD /NODEFAULTLIB:MSVCRT\")# undefined __imp_longjmp\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:LIBCMT /NODEFAULTLIB:LIBCPMTD /NODEFAULTLIB:MSVCRT\")#MSVCRTD clashing with LIBCMTD\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:LIBCMT /NODEFAULTLIB:LIBCPMTD /NODEFAULTLIB:MSVCRTD\")# unresolved externals std::_Lockit\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:LIBCMT\")#MSVCRTD clashing with LIBCMTD\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:LIBCMTD\")#LIBCMT clashing with other libs\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:MSVCRTD\")#LIBCMT clashing with LIBCMTD\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:MSVCRT\")#MSVCRTD clashing with LIBCMTD\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:MSVCRT /NODEFAULTLIB:LIBCMTD /NODEFAULTLIB:LIBCMT\") unresolved externals atexit, operators new, delete etc.\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:MSVCRT /NODEFAULTLIB:MSVCRTD /NODEFAULTLIB:LIBCMTD\")#LIBCMT clashes with other libs\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:MSVCRT /NODEFAULTLIB:MSVCRTD /NODEFAULTLIB:LIBCMTD /NODEFAULTLIB:LIBCMT\")#unresolved externa; new\n\n#set(LINKER_FLAGS \"/NODEFAULTLIB:MSVCRTD /NODEFAULTLIB:LIBCMTD /NODEFAULTLIB:LIBCMT\")# unresolved externals new etc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ode/CMakeLists.txt" : {
      "ObjectId" : "aff6b1ec4911a89c4c747e3c01462007d8184c0c",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ode/test/CMakeLists.txt" : {
      "ObjectId" : "d599f006b8ad41e0187a295ae763ee3eaf52b034",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pde/CMakeLists.txt" : {
      "ObjectId" : "7ac0a79b62869fb15c8b805220d9e4d238655265",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pde/test/CMakeLists.txt" : {
      "ObjectId" : "eb1506343442d828dd71ab7315cd2b0837779855",
      "LastModified" : "2016-10-28T13:49:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/test/CMakeLists.txt" : {
      "ObjectId" : "b8b7b5f23c037198c5e9a1dacf0cb0776d9c3fee",
      "LastModified" : "2017-06-10T11:22:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 56,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 7114
}