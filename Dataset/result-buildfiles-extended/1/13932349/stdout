{
  "Repository" : "13932349",
  "Revision" : "HEAD",
  "ObjectId" : "3f44cece3931baccea9835b08bd5ad11aa59dab0",
  "CommitTime" : "2019-02-24T13:41:38Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "2ef88f9e902c7e614108ea9fcadb71354f89cc79",
      "LastModified" : "2019-02-09T00:56:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# MRustC - Rust Compiler\n\n# - By John Hodge (Mutabah/thePowersGang)\n\n#\n\n# Makefile\n\n#\n\n# - Compiles mrustc\n\n# - Downloads rustc source to test against\n\n# - Attempts to compile rust's libstd\n\n#\n\n# DEPENDENCIES\n\n# - zlib (-dev)\n\n# - curl (bin, for downloading libstd source)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Disable implicit rules\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# - Disable deleting intermediate files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# - Final stage for tests run as part of the rust_tests target.\n\n#  VALID OPTIONS: parse, expand, mir, ALL\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CXXFLAGS += -Wextra\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#CXXFLAGS += -Wno-unused-private-field\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# - Flags to pass to all mrustc invocations\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#RUSTC_SRC_TY ?= nightly\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: Handle non-nightly download\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MRUSTC-specific tests\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# \n\n# RUSTC TESTS\n\n# \n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# rust_tests-run-fail\n\n# rust_tests-compile-fail\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# \n\n# libstd tests\n\n# \n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#std\n",
        "Line" : 234,
        "CharPositionInLine" : 25
      },
      "14" : {
        "Text" : "#LIB_TESTS += rustc_data_structures\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#RUNTIME_ARGS_output/libcore-test := --test-threads 1\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Unbounded execution\n",
        "Line" : 245,
        "CharPositionInLine" : 82
      },
      "17" : {
        "Text" : "#\t# HACK: Work around gdb returning success even if the program crashed\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\t# HACK: Work around gdb returning success even if the program crashed\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\t# HACK: Work around gdb returning success even if the program crashed\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# \"hello, world\" test - Invoked by the `make test` target\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# TEST: Rust standard library and the \"hello, world\" run-pass test\n\n#\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# TEST: Attempt to compile rust_os (Tifflin) from ../rust_os\n\n#\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# -------------------------------\n\n# Compile rules for mrustc itself\n\n# -------------------------------\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# vim: noexpandtab ts=4\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25,
      "Errorlog" : "line 162:79 token recognition error at: '\\1'\n"
    },
    "bnf/Makefile" : {
      "ObjectId" : "4a3b34546580ee87112e07f56b40e92bc1e83838",
      "LastModified" : "2016-12-25T02:07:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# HACK: Bison emits duplicate entries in the union, remove those\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "run_rustc/Makefile" : {
      "ObjectId" : "e38e8181feb0d44572ade18d669a2791509a314a",
      "LastModified" : "2017-11-27T15:43:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile that builds libstd using the mrustc-built rustc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#$(LIBDIR)libstd.rlib-: $(RUSTC) $(BINDIR)cargo $(BINDIR)rustc\n\n#\t@mkdir -p ./build/libstd\n\n#\tcd $(RUST_SRC)libstd && CARGO_TARGET_DIR=$(abspath ./build/libstd) PATH=\"$(abspath $(BINDIR)):$$PATH\" cargo build\n\n#\tcp ./build/libstd/target/libstd.rlib $@\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/common/Makefile" : {
      "ObjectId" : "36251680f789df47e19a8716452e5991a07240a6",
      "LastModified" : "2018-04-01T06:02:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Mini version of cargo\n\n# - Interprets Cargo.toml files and emits makefiles\n\n# - Supports overriding build script output\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/minicargo/Makefile" : {
      "ObjectId" : "363ef4b9ec575e33cfa1112a953c3070553b57d0",
      "LastModified" : "2018-06-03T06:57:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Mini version of cargo\n\n# - Interprets Cargo.toml files and emits makefiles\n\n# - Supports overriding build script output\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/standalone_miri/Makefile" : {
      "ObjectId" : "f4dc0d0d10614886f327fae3af3042e50c64daec",
      "LastModified" : "2018-06-03T06:57:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Standalone MIR Interpreter\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Gets REALLY confused by the TU_ARM macro\n",
        "Line" : 19,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 2
    },
    "tools/testrunner/Makefile" : {
      "ObjectId" : "a81cd6b28342f4deae7e31d586fb3248412dfe5e",
      "LastModified" : "2018-06-03T06:57:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# - Include files from common (TODO: Be less hacky)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 7
  },
  "ElapsedTime" : 1956
}