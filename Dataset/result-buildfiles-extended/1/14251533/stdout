{
  "Repository" : "14251533",
  "Revision" : "HEAD",
  "ObjectId" : "a92d46b4c923e431bafb71cf55bc3abd3a9bb405",
  "CommitTime" : "2018-12-29T12:43:25Z",
  "Files" : {
    "CMake/Modules/FindGLIB2.cmake" : {
      "ObjectId" : "942b04530a2b0739e06e3600e205cd0dbf2e4632",
      "LastModified" : "2016-09-27T10:04:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLib2\n\n# Once done this will define\n\n#\n\n#  GLIB2_FOUND - system has GLib2\n\n#  GLIB2_INCLUDE_DIRS - the GLib2 include directory\n\n#  GLIB2_LIBRARIES - Link these to use GLib2\n\n#\n\n#  HAVE_GLIB_GREGEX_H  glib has gregex.h header and \n\n#                      supports g_regex_match_simple\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#  Copyright (c) 2006 Philippe Bernery <philippe.bernery@gmail.com>\n\n#  Copyright (c) 2007 Daniel Gollub <dgollub@suse.de>\n\n#  Copyright (c) 2007 Alban Browaeys <prahal@yahoo.com>\n\n#  Copyright (c) 2008 Michael Bell <michael.bell@web.de>\n\n#  Copyright (c) 2008 Bjoern Ricks <bjoern.ricks@googlemail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Glib\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Look for glib2 include dir and libraries w/o pkgconfig\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"Glib headers: ${_glib2_include_DIR}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Handle dependencies\n\n# libintl\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# libiconv\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "##\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# show the GLIB2_INCLUDE_DIRS and GLIB2_LIBRARIES variables only in the advanced view\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check if system has a newer version of glib\n\n# which supports g_regex_match_simple\n",
        "Line" : 210,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Reset CMAKE_REQUIRED_INCLUDES\n",
        "Line" : 215,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "CMake/Modules/FindLibnotify.cmake" : {
      "ObjectId" : "a34938ea0d3b3eb0d4742f3f75570fe7c900cc3a",
      "LastModified" : "2016-09-27T10:04:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Libnotify\n\n# Once done this will define\n\n#\n\n#  LIBNOTIFY_FOUND - system has Libnotify\n\n#  LIBNOTIFY_INCLUDE_DIR - the Libnotify include directory\n\n#  LIBNOTIFY_LIBRARIES - Link these to use Libnotify\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010, Ni Hui <shuizhuyuanluo@126.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# check whether we are using libnotify 0.4\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMakeLists.txt" : {
      "ObjectId" : "fac83ae1e50d18a54e11b299e302a8685b6d27d8",
      "LastModified" : "2018-07-17T11:50:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake --help-policy CMP0043\n",
        "Line" : 2,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "#use with clang\n",
        "Line" : 32,
        "CharPositionInLine" : 71
      },
      "2" : {
        "Text" : "#add CMake build info\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QT configuration\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add git version info\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for out of source build\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Directory structure\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Resource files\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# create translation files to include into resource file\n\n# remember to add new translations files there\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# WIN32\n",
        "Line" : 103,
        "CharPositionInLine" : 9
      },
      "11" : {
        "Text" : "# c/cpp sources\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#    ${SRCUIDIR}/securitydialog.cpp\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#        src/GUI/PasswordSafe.cpp src/GUI/PasswordSafe.h\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#INSTALL\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Freedesktop files\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Install Nitrokey udev rules\n\n# Removed - should be provided by libnitrokey\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Install autocompletion scripts\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# usual prefix is usr/local\n",
        "Line" : 172,
        "CharPositionInLine" : 80
      },
      "19" : {
        "Text" : "# NOT WIN32\n",
        "Line" : 180,
        "CharPositionInLine" : 9
      },
      "20" : {
        "Text" : "#    IF(NOT APPLE)\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#    endif()\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#  ${platform_specific_libs}\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# first try to find libnitrokey via pkg-config\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ... same for cppcodec\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Packaging\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Deb\n\n#execute_process(COMMAND dpkg --print-architecture OUTPUT_VARIABLE CPACK_PACKAGE_ARCHITECTURE)\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# We need to alter the architecture names as per distro rules\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Rpm\n\n#execute_process(COMMAND dpkg --print-architecture OUTPUT_VARIABLE CPACK_RPM_PACKAGE_ARCHITECTURE)\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Prevent RPM directory collisions by excluding those already provided by\n\n# package dependencies. AFAIK this can't be automated.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "i18n/CMakeLists.txt" : {
      "ObjectId" : "0bbcc922fc5ee79ae22a046b5bb91e2314a1fccf",
      "LastModified" : "2017-03-13T11:30:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nitrokey-app-qt5.pro" : {
      "ObjectId" : "f4597e619f22be8361600e9e4c9bcf143ee30aa7",
      "LastModified" : "2018-07-17T11:50:19Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# message(\"CONFIG: $${CONFIG}\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PLUGINS += iconengines/libqsvgicon.dylib\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#    QTPLUGIN += qsvgicon libqsvgicon\n\n#    CONFIG += import_plugins\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "QMAKE" : 1
  },
  "ElapsedTime" : 1145
}