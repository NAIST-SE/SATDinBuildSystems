{
  "Repository" : "3101658",
  "Revision" : "HEAD",
  "ObjectId" : "d2da67b14da2ad766a5906425d60d43a3b3e1270",
  "CommitTime" : "2018-05-30T16:15:48Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "d81d450ef4e4c4cc43418dd2330d53da9ea44461",
      "LastModified" : "2018-04-30T07:31:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Main Makefile for Sage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The default target (\"all\") builds Sage and the whole (HTML) documentation.\n\n#\n\n# Target \"build\" just builds Sage.\n\n#\n\n# See below for targets to build the documentation in other formats,\n\n# to run various types of test suites, and to remove parts of the build etc.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The --stop flag below is just a random flag to induce graceful\n\n# breakage with non-GNU versions of make.\n\n# See https://trac.sagemath.org/ticket/24617\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defer unknown targets to build/make/Makefile\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If configure was run before, rerun it with the old arguments.\n\n# Otherwise, run configure with argument $PREREQ_OPTIONS.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is used to monitor progress towards Python 3 and prevent\n\n# regressions. The target \"build\" should be upgraded to reflect the\n\n# level of Python 3 support that is known to work.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preemptively download all standard upstream source tarballs.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ssl: build Sage, and also install pyOpenSSL. This is necessary for\n\n# running the secure notebook. This make target requires internet\n\n# access. Note that this requires that your system have OpenSSL\n\n# libraries and headers installed. See README.txt for more\n\n# information.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Delete all auto-generated files which are distributed as part of the\n\n# source tarball\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Remove absolutely everything which isn't part of the git repo\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "build/pkgs/atlas/patches/ATLAS-lib/Makefile.am" : {
      "ObjectId" : "46abdb9e6e4ca21c701a4f8a6de18906a42bdcaf",
      "LastModified" : "2013-11-25T14:02:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Upstream doesn't version libraries, so this is kind of arbitrary\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You shouldn't have to customize anything from here on\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In presence of multiple definitions of thread related functions, use the ones from *_mut.o\n\n# Works with all nm output formats (BSD/POSIX/System V)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "build/pkgs/bzip2/patches/autotools/Makefile.am" : {
      "ObjectId" : "d113a8548bb5b4b09a36a8ef89024fcbed796611",
      "LastModified" : "2014-04-09T10:44:31Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "build/pkgs/topcom/patches/Makefile.am" : {
      "ObjectId" : "4997d0c271005ca81672f3243311e81bac417106",
      "LastModified" : "2014-04-09T10:44:31Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#### include these if you don't have the libraries installed\n\n#EXTRA_DIST   = external/Makefile\n\n#EXTRA_DIST  += external/gmp-4.3.0.tar.gz\n\n#EXTRA_DIST  += external/cddlib-0.94f-TOPCOM.tar.gz\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/doc/Makefile" : {
      "ObjectId" : "5160e35cc71167ae938a5acc7f644f0584ed510a",
      "LastModified" : "2016-02-10T08:17:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/mac-app/Makefile" : {
      "ObjectId" : "3f2dc226b82885f17111f758cc512cbdc756c111",
      "LastModified" : "2018-01-17T19:40:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building the Mac App\n\n#\n\n# This assumes that you have already built Sage. This Makefile then\n\n# compiles the Mac App UI and combines it with the existing Sage\n\n# install into a DMG file.\n\n#\n\n# The resulting DMG is as relocatable as the original Sage install,\n\n# that is, not at all by default. It will contain paths pointing to\n\n# the Sage tree that you started with (OK if you are only debugging\n\n# the Mac App, just don't delete the original Sage directory tree).\n\n#\n\n# To build a relocatable Sage binary you have to use\n\n# https://github.com/sagemath/binary-pkg\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Meaningful values, on Intel, are \"i386\" and \"x86_64\". To prepare a\n\n# 64-bit binary distribution on an older 64-bit OSX machine that boots\n\n# into a 32-bit system, one would set SAGE_APP_TARGET_ARCH=x86_64\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Display the variables\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the Mac App UI binary (not: Sage itself)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Info.plist is a binary plist, so convert it for processing with sed.\n\n# I would just change it to be an xml plist, but xcode changes it back.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Copy Sage into the App directory structure\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We touch the director here so that we don't keep rsyncing just\n\n# because $(APP) is newer than (the rsync preserves time)\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# The background image for the DMG.\n\n# It contains the arrow pointing from the .app to the Applications\n\n# folder.\n\n#\n\n# The background image should be at 72dpi. if a different resolution is\n\n# set in the metadata, Finder produces weird results.\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Link to Applications\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add the readme file\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The arrangement of the icons and the \"alias\" or \"bookmark\" for the\n\n# background image are stored in a .DS_Store file.\n\n# The .DS_Store file does not store the background image by relative path,\n\n# but by \"alias\" or \"bookmark\" which contains the volume name as well - so\n\n# we cannot just generate the .DS_Store once and for all and copy it from\n\n# version to version since the volume name contains the version.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# On some old Mac OS X, createDSStore fails when there already\n\n# is an existing file\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Dependencies need to be in that order because non_app_files\n\n# needs the directory created by $(APP)/Contents/Resources/sage\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n# Alternative method to create the .dmg\n\n# \n\n# The .DS_Store file created above with createDSStore doesn't display correctly\n\n# on some versions of Mac OS X (it appears the first releases of Mac OS 10.12),\n\n# see tickets 22739 and 23426.\n\n# The reason is that Finder introduced a new way (\"bookmark\") of storing the\n\n# location of the background image in the .DS_Store file and bugs in reading the\n\n# old format (\"alias\"), see https://bitbucket.org/al45tair/ds_store/issues/7 \n\n# which also describes how createDSStore could be updated to write a \"bookmark\"\n\n# as well.\n\n# \n\n# An alternative method is to use AppleScript. Unfortunately, this requires\n\n# generating a temporary read-write disk image, mounting it, then calling the\n\n# AppleScript to set the background image and finally compressing the disk\n\n# image.\n\n#\n\n# To experiment with the alternative method, call alt-$(DMG).\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The temporary read-write disk image.\n\n#\n\n# Dependencies need to be in that order because non_app_files\n\n# needs the directory created by $(APP)/Contents/Resources/sage\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create initial DMG\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Mount it so that we can run the Apple Script file on it\n\n# to arrange the icons and set the background image\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Compress the temporary DMG\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n#\n\n# End of alternative method\n\n###############################################################################\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/sage/libs/gap/test/Makefile" : {
      "ObjectId" : "a8b0f4365f485c4eedac9203fb8713f3e03a978c",
      "LastModified" : "2016-07-11T12:27:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# VALGRIND=valgrind --leak-check=full\n\n# VALGRIND=valgrind --db-attach=yes\n\n#VALGRIND=valgrind --suppressions=libgap.supp --gen-suppressions=yes\n\n#VALGRIND=valgrind --suppressions=libgap.supp --db-attach=yes\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 14858
}