{
  "Repository" : "13047579",
  "Revision" : "HEAD",
  "ObjectId" : "96c3e42991767934276335ec183cfe0270c0732e",
  "CommitTime" : "2015-07-08T20:00:31Z",
  "Files" : {
    "cpp/dnn_control/CMakeLists.txt" : {
      "ObjectId" : "694126581c65ef94e27ca58555ede71433f14a62",
      "LastModified" : "2015-04-22T14:43:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 1 - Preliminary checks and messages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2 - Setting compiler flags\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 3 - Set compiler warning flags\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Update if necessary\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# 4 - Find Third-party Libraries\n\n# GSL\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# PaGMO\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Boost\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MPI\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# 5 - Define mandatory libraries and include directories\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 6 - Define the target and linked libraries\n\n#OPTION(BUILD_WITH_LSPI \"BUILD WITH LSPI\" OFF)\n\n#MESSAGE(STATUS \"BUILD with LSPI: ${BUILD_WITH_LSPI}\")\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#IF(BUILD_WITH_LSPI)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#ELSE()\n\n#add_executable(main main.cpp asteroid.cpp pagmosimulation.cpp pagmosimulationneuralnetwork.cpp odesystem.cpp filewriter.cpp samplefactory.cpp sensordatagenerator.cpp neuralnetwork.cpp feedforwardneuralnetwork.cpp simplerecurrentneuralnetwork.cpp stackedautoencoder.cpp sensorsimulator.cpp controller.cpp controllerneuralnetwork.cpp controllerdeepneuralnetwork.cpp hoveringproblemneuralnetwork.cpp evolutionaryrobotics.cpp lspisimulator.cpp) \n\n#ENDIF()\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    }
  },
  "FileTypes" : {
    "CMAKE" : 1
  },
  "ElapsedTime" : 593
}