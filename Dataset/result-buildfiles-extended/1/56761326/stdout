{
  "Repository" : "56761326",
  "Revision" : "HEAD",
  "ObjectId" : "682417fc6d37acd0452d1cd5154b8a01e1b41bd3",
  "CommitTime" : "2019-04-17T05:54:28Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e983994ed3a3aa2c01879c917ef6efb09354f145",
      "LastModified" : "2017-04-27T06:18:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#add_subdirectory(graspingV4)\n\n#add_subdirectory(grasping_despot_box2D)\n\n#add_subdirectory(grasping_ros_mico)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(TARGETS \"${PROJECT_NAME}\"\n\n#  RUNTIME DESTINATION \"${BINARY_INSTALL_PATH}\"\n\n#)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "despot_ext/CMakeLists.txt" : {
      "ObjectId" : "fbe0cf9d6da8b1af3b9a12419e47aa8d5b174fc2",
      "LastModified" : "2019-03-07T11:21:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#src/DespotWithBeliefTracking.cpp\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#install(TARGETS \"${PROJECT_NAME}\"\n\n#  RUNTIME DESTINATION \"${BINARY_INSTALL_PATH}\"\n\n#)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "graspingV4/CMakeLists.txt" : {
      "ObjectId" : "aa9feb228b4606d2c2d6262ae2ea0c58aeeaae4f",
      "LastModified" : "2017-07-03T11:03:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#LDFLAGS = -O3 -std=c++0x -Wno-sign-compare\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_library(\"${PROJECT_NAME}_lib\" SHARED\n\n#  src/grasping_v4.cpp\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#target_link_libraries(\"${PROJECT_NAME}_lib\"\n\n#  \"${DESPOT_LIB}\"\n\n#  despot_ext\n\n#${YAML-CPP}\n\n#)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "grasping_despot_box2D/CMakeLists.txt" : {
      "ObjectId" : "1e2a09e36698b3b3f3adc57f8c80900956b382d7",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The FindBox2D.cmake script does not set BOX2D_LIBRARIES.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_library(Box2D_LIB NAMES Box2D HINTS \"${Box2D_HOME}/Build/Box2D\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#graspingV4_lib\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "grasping_despot_box2D/Makefile" : {
      "ObjectId" : "dd6eb94c138b334b3b94e874c24071ec1ae759b7",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -----------------------\n\n# Compiler/linker options\n\n# -----------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------\n\n# Directories\n\n# -----------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----\n\n# Files\n\n# -----\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -------\n\n# Targets\n\n# -------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "grasping_despot_box2D/build/CMakeFiles/2.8.12.2/CMakeCCompiler.cmake" : {
      "ObjectId" : "83254ce4912b80e2c7902a5452076bf87b3dea60",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save compiler ABI information.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "grasping_despot_box2D/build/CMakeFiles/2.8.12.2/CMakeCXXCompiler.cmake" : {
      "ObjectId" : "c4373d570c892e503ac679a97a7276a20eaa112d",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save compiler ABI information.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "grasping_despot_box2D/build/CMakeFiles/2.8.12.2/CMakeSystem.cmake" : {
      "ObjectId" : "0616b7c1eededb336f73dfce371e5f19fa3cf971",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "grasping_despot_box2D/build/CMakeFiles/CMakeDirectoryInformation.cmake" : {
      "ObjectId" : "d1ccc4add5aeb0bba91f372bffa323470a5cc5b7",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Relative path conversion top directories.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force unix paths in dependencies.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The C and CXX include file regular expressions for this directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "grasping_despot_box2D/build/CMakeFiles/Makefile.cmake" : {
      "ObjectId" : "cd98c08ee84532dfe70e21c5e20d386310fc5fcb",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The generator used is:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The top level Makefile was generated from the following files:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The corresponding makefile is:\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Byproducts of CMake generate step:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Dependency information for all targets:\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "grasping_despot_box2D/build/CMakeFiles/grasping_box2D.dir/DependInfo.cmake" : {
      "ObjectId" : "2336b86b6fd6fa78e85b9e5eb714dc7adf3c7d5c",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The set of languages for which implicit dependencies are needed:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The set of files for implicit dependencies of each language:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Targets to which this target links.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The include file search paths:\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "grasping_despot_box2D/build/CMakeFiles/grasping_box2D.dir/cmake_clean.cmake" : {
      "ObjectId" : "1a6f4fc07302c6592560d5ae8f31513f1d2154d5",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-language clean rules from dependency scanning.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "grasping_despot_box2D/build/Makefile" : {
      "ObjectId" : "d88a9dabde13f9c611a4b5b35019a0f6540e99a0",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Escaping for special characters.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The main all target\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The main clean target\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# The main clean target\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# clear depends\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named grasping_box2D\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# target to build an object file\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# target to build an object file\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Help Target\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "grasping_despot_box2D/build/cmake_install.cmake" : {
      "ObjectId" : "9b48435fbf87b26e0fb0a3769137d7bb917dc830",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install script for directory: /home/neha/WORK_FOLDER/phd2013/phdTopic/neha_github/autonomousGrasping/grasping_despot_box2D\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the install configuration name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the component getting installed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install shared libraries without execute permission?\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "grasping_despot_box2D/cmake/FindSFML.cmake" : {
      "ObjectId" : "41084414e2ed8f0fd86aff95312b76eacef31fbe",
      "LastModified" : "2016-11-30T09:44:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script locates the SFML library\n\n# ------------------------------------\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# When you try to locate the SFML libraries, you must specify which modules you want to use (system, window, graphics, network, audio, main).\n\n# If none is given, the SFML_LIBRARIES variable will be empty and you'll end up linking to nothing.\n\n# example:\n\n#   find_package(SFML COMPONENTS graphics window system) // find the graphics, window and system modules\n\n#\n\n# You can enforce a specific version, either MAJOR.MINOR or only MAJOR.\n\n# If nothing is specified, the version won't be checked (i.e. any version will be accepted).\n\n# example:\n\n#   find_package(SFML COMPONENTS ...)     // no specific version required\n\n#   find_package(SFML 2 COMPONENTS ...)   // any 2.x version\n\n#   find_package(SFML 2.4 COMPONENTS ...) // version 2.4 or greater\n\n#\n\n# By default, the dynamic libraries of SFML will be found. To find the static ones instead,\n\n# you must set the SFML_STATIC_LIBRARIES variable to TRUE before calling find_package(SFML ...).\n\n# Since you have to link yourself all the SFML dependencies when you link it statically, the following\n\n# additional variables are defined: SFML_XXX_DEPENDENCIES and SFML_DEPENDENCIES (see their detailed\n\n# description below).\n\n# In case of static linking, the SFML_STATIC macro will also be defined by this script.\n\n# example:\n\n#   set(SFML_STATIC_LIBRARIES TRUE)\n\n#   find_package(SFML 2 COMPONENTS network system)\n\n#\n\n# On Mac OS X if SFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that SFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If SFML is not installed in a standard path, you can use the SFML_ROOT CMake (or environment) variable\n\n# to tell CMake where SFML is.\n\n#\n\n# Output\n\n# ------\n\n#\n\n# This script defines the following variables:\n\n# - For each specified module XXX (system, window, graphics, network, audio, main):\n\n#   - SFML_XXX_LIBRARY_DEBUG:   the name of the debug library of the xxx module (set to SFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - SFML_XXX_LIBRARY_RELEASE: the name of the release library of the xxx module (set to SFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - SFML_XXX_LIBRARY:         the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - SFML_XXX_FOUND:           true if either the debug or release library of the xxx module is found\n\n#   - SFML_XXX_DEPENDENCIES:    the list of libraries the module depends on, in case of static linking\n\n# - SFML_LIBRARIES:    the list of all libraries corresponding to the required modules\n\n# - SFML_FOUND:        true if all the required modules are found\n\n# - SFML_INCLUDE_DIR:  the path where SFML headers are located (the directory containing the SFML/Config.hpp file)\n\n# - SFML_DEPENDENCIES: the list of libraries SFML depends on, in case of static linking\n\n#\n\n# example:\n\n#   find_package(SFML 2 COMPONENTS system window graphics audio REQUIRED)\n\n#   include_directories(${SFML_INCLUDE_DIR})\n\n#   add_executable(myapp ...)\n\n#   target_link_libraries(myapp ${SFML_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define the SFML_STATIC macro if static build was chosen\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define the list of search paths for headers and libraries\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the SFML include directory\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check the version number\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract the major and minor version numbers from SFML/Config.hpp\n\n# we have to handle framework a little bit differently:\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# compare them\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# SFML version is < 2.0\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# find the requested modules\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 119,
        "CharPositionInLine" : 21
      },
      "12" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# release library\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# debug library\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# static release library\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# static debug library\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# dynamic release library\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# dynamic debug library\n",
        "Line" : 157,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# choose the entries that fit the requested link type\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# library found\n",
        "Line" : 182,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# if both are found, set SFML_XXX_LIBRARY to contain both\n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 191,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# debug and not release\n",
        "Line" : 193,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# release and not debug\n",
        "Line" : 198,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# library not found\n",
        "Line" : 203,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# mark as advanced\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# in case of static linking, we must also define the list of all the dependencies of SFML libraries\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# detect the OS\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# start with an empty list\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# macro that searches for a 3rd-party library\n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# sfml-system\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# sfml-network\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# update the list -- these are only system libraries, no need to find them\n",
        "Line" : 271,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# sfml-window\n",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# find libraries\n",
        "Line" : 282,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# update the list\n",
        "Line" : 289,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# sfml-graphics\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# find libraries\n",
        "Line" : 309,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# update the list\n",
        "Line" : 314,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# sfml-audio\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# find libraries\n",
        "Line" : 323,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# update the list\n",
        "Line" : 327,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# handle errors\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# SFML version not ok\n",
        "Line" : 336,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# fatal error\n",
        "Line" : 348,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# error but continue\n",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# handle success\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 51
    },
    "grasping_ros_mico/CMakeLists.txt" : {
      "ObjectId" : "5171f5740f9b2be053a43b4611569703b5cd5d86",
      "LastModified" : "2019-03-07T11:21:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n\n#set(ROS_BUILD_TYPE RelWithDebInfo)\n\n#rosbuild_add_generated_msgs(Belief.msg)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(DESPOT_HOME \"../despot/\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#uncomment if you have defined messages\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#uncomment if you have defined services\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#create despot lib\n\n# search header files in those sub directories\n\n# Maybe a glob could be possible\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#src/despot/\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#msg_gen/cpp/include/despot_vrep_glue\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#FILE(GLOB LIBDESPOT_SRCS src/despot/*.cpp src/despot/util/*.cpp src/despot/util/pomdpx_parser/*.cpp src/despot/problems/*.cpp)\n\n#rosbuild_add_library(despot ${LIBDESPOT_SRCS})\n\n#rosbuild_add_compile_flags(despot ${PED_COMPILE_FLAGS})\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#common commands for building c++ executables and libraries\n\n#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n\n#rosbuild_add_boost_directories()\n\n#rosbuild_link_boost(${PROJECT_NAME} thread)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#rosbuild_add_compile_flags(mico_despot_planner ${PED_COMPILE_FLAGS})\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "pocman/CMakeLists.txt" : {
      "ObjectId" : "6fb200bd80a409dba4fd288fe1c0d03fd5b3815d",
      "LastModified" : "2019-03-07T11:21:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#LDFLAGS = -O3 -std=c++0x -Wno-sign-compare\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1729
}