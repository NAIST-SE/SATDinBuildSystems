{
  "Repository" : "7998365",
  "Revision" : "HEAD",
  "ObjectId" : "cc2c0423267cb9a3be9f4cedcbcc75c6c8688cbb",
  "CommitTime" : "2019-04-06T00:18:23Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "36b48b144933b0aad8eaf31eb79e1ee3ca6d39f0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/beast/CMakeLists.txt" : {
      "ObjectId" : "56c0fc882ba84b881be1bffc71957ad17bf1d830",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# large object file format\n\n# strict C++\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "#/wd4503      # decorated name length exceeded, name was truncated\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# enable all warnings\n\n# Multi-processor compilation\n",
        "Line" : 29,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "# for RelWithDebInfo builds, disable incremental linking\n\n# since CMake sets it ON by default for that build type and it\n\n# causes warnings\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Must come before Boost includes, otherwise the\n\n# IDE sees the wrong file due to boost/ symlinks.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Boost\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VFALCO I want static but \"b2 stage\" builds a minimal set which excludes static\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Some of the tests use deprecated APIs\n\n#add_definitions (-DBOOST_ASIO_NO_DEPRECATED=1)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# OpenSSL\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Tests and examples\n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/boost_1_67_0/libs/beast/example/CMakeLists.txt" : {
      "ObjectId" : "950c29db9bbd489d8d3b04b07d5ce0bd99715b15",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/advanced/CMakeLists.txt" : {
      "ObjectId" : "af83e043bab85fb75a962afe11a548e0ee539f71",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/advanced/server-flex/CMakeLists.txt" : {
      "ObjectId" : "21b5f9cbc2f1b5bbce27774883ce7dfa06d211a0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/advanced/server/CMakeLists.txt" : {
      "ObjectId" : "5d0b710cced47ab9fa0325192eff9268554091bc",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/echo-op/CMakeLists.txt" : {
      "ObjectId" : "2f01a60179c95123857fad9de17d5db451768382",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/CMakeLists.txt" : {
      "ObjectId" : "d38604dd0fa09ddba79f81e8546a5ba1c4c2a771",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/CMakeLists.txt" : {
      "ObjectId" : "a8c09df0d9621b59cf20ec4b7ebbe6fcf7446397",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "87eb2fedca86fa78ffacb09f0bffc149ec54373d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/async/CMakeLists.txt" : {
      "ObjectId" : "6bde0bf495fe2ffb1b82ad85db6d0e2ad99ada3c",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "3ff783601ed6c609e94ab3b8654549a7ec520f35",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/coro/CMakeLists.txt" : {
      "ObjectId" : "073cce5d70d7f137c595c066918c947b71a97044",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/crawl/CMakeLists.txt" : {
      "ObjectId" : "dc87484c72831acafa88ba7eb75ef309fb2dc497",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "9683e62d01a2df3392ee538a124f5e0bbbca9db5",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/client/sync/CMakeLists.txt" : {
      "ObjectId" : "399e61cee58038f6e144d361e56c351f736ba9c7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/CMakeLists.txt" : {
      "ObjectId" : "350b465a7bd2a91fe687e373d5fdbc29190301c1",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "130f45502031075ba5c9e3956f620a895ee4f93b",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/async/CMakeLists.txt" : {
      "ObjectId" : "dda889b7f3c3f82c13330f7254d9a76df46ac49d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "b578745931880fbf127efdb29f55283a94fd6ba7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/coro/CMakeLists.txt" : {
      "ObjectId" : "46d3c2356f86030f0100d8822f701195d81f5b7f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/fast/CMakeLists.txt" : {
      "ObjectId" : "f041eb404a355ce49c4f184a54ac68425696bb6a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/flex/CMakeLists.txt" : {
      "ObjectId" : "3011e6df97a2213d48a506bff45e21b6e1c6f811",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/small/CMakeLists.txt" : {
      "ObjectId" : "b6eb7f2550321a618f9b7ca63b4629a51f1e7dfe",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/stackless-ssl/CMakeLists.txt" : {
      "ObjectId" : "edf313388ed0f6c304a69596acb95ae854b84697",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/stackless/CMakeLists.txt" : {
      "ObjectId" : "c1ee6ecbf14861537bcbf0f90f2ea41679c9cab1",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "792cef82329718a40b5a638539d72a29c20df5c6",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/http/server/sync/CMakeLists.txt" : {
      "ObjectId" : "ced30da89b81f10a4a924047fa95f8431a1d40a1",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/CMakeLists.txt" : {
      "ObjectId" : "d38604dd0fa09ddba79f81e8546a5ba1c4c2a771",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/client/CMakeLists.txt" : {
      "ObjectId" : "5955ca18fd8fb30d10fed653c121faf724b489fe",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/client/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "c02f4d065ad502dcf36a2a957262d3438513f6a3",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/client/async/CMakeLists.txt" : {
      "ObjectId" : "73f2c07b5f0f627287edeb7effc3a6d7977dc327",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/client/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "7b9f167aff8e22353efe4f775da66e631b17e4e3",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/client/coro/CMakeLists.txt" : {
      "ObjectId" : "1bdcf6c671d62466513ebb88d60bcc72ceefa02e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/client/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "11c5f030c7df09a45005751c72465cbb57b9e1fa",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/client/sync/CMakeLists.txt" : {
      "ObjectId" : "8196f0da3c42c85054e3cfd2c313e2cf62d7bbaf",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/CMakeLists.txt" : {
      "ObjectId" : "23a8bdf1814f6ffd9a5c0c8f58a9078dc2202e50",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "09496800b1ee1915263a69dc7e469720a5aee550",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/async/CMakeLists.txt" : {
      "ObjectId" : "d9fb1093abbfe84fe0d55f6dbb19a6d01a9e0bac",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "2d9d7120d4dc58d8d01e657532b75cdf81f17020",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/coro/CMakeLists.txt" : {
      "ObjectId" : "bf4c5a363fa19669a74b9d6602c474c6e64d5d7e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/fast/CMakeLists.txt" : {
      "ObjectId" : "df44e5e92189013471817fe6bd606500eddec22d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/stackless-ssl/CMakeLists.txt" : {
      "ObjectId" : "bd0e882827de8da81554701b07779f328008a7ca",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/stackless/CMakeLists.txt" : {
      "ObjectId" : "b5f51b21e917ec5e8c72d0dbf4bd96ae9e0464d2",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "3a7e32fe584d226897ba3eddd4019ec02cdb6471",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/example/websocket/server/sync/CMakeLists.txt" : {
      "ObjectId" : "357a3b6a702e696dba9efae8adc4641a78bb4d1d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/CMakeLists.txt" : {
      "ObjectId" : "16cef92add979cf6016cb839500c0572947a71c0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/beast/CMakeLists.txt" : {
      "ObjectId" : "f6d1f5eb1b97fabef36597e9470f5fcc9c917f43",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/beast/core/CMakeLists.txt" : {
      "ObjectId" : "11d20ad6d1b0b5d08a1565f2a3cfb997084a16bd",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/beast/http/CMakeLists.txt" : {
      "ObjectId" : "8837355d6e7c277a0cca6137dabfe47f66d52fd0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/beast/websocket/CMakeLists.txt" : {
      "ObjectId" : "a9984897343f508bc8b8b9675063169c31adac29",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/beast/zlib/CMakeLists.txt" : {
      "ObjectId" : "31da3e5946dd671f2b2002ecdb1817f3d7e294c7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/bench/CMakeLists.txt" : {
      "ObjectId" : "849f032a9c492aebe8f5dd15dc0960fc67d3e1ed",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/bench/buffers/CMakeLists.txt" : {
      "ObjectId" : "7609b6ef633a05d278dc5051019de4e30ce47a5d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/bench/parser/CMakeLists.txt" : {
      "ObjectId" : "7141000af422276cb4f903fa8db79528daebd8a8",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/bench/utf8_checker/CMakeLists.txt" : {
      "ObjectId" : "6b0f27d358d3c6fa0b875c2cca91bccd22ef0e3a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/bench/wsload/CMakeLists.txt" : {
      "ObjectId" : "4976c2e2007695c94ebc55223328e49d4ed55784",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/bench/zlib/CMakeLists.txt" : {
      "ObjectId" : "802b06277f7c68a0e282b0fa36f2f919b26a9c28",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/doc/CMakeLists.txt" : {
      "ObjectId" : "e700b10623e2284885450bd94340e6f9b2156e7a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/example/CMakeLists.txt" : {
      "ObjectId" : "00d48e8ee7e79e33a01c8576bb60e28cb3ef3bd8",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/example/common/CMakeLists.txt" : {
      "ObjectId" : "2e3ee44718b8410a12c57942ea444af295f84b55",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/beast/test/extern/zlib-1.2.11/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "deps/boost_1_67_0/libs/callable_traits/CMakeLists.txt" : {
      "ObjectId" : "970dcf31d37362f88baf50dd1079f48b75c354ac",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Defaults to C++14 if not set:\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Setting up CMake options and compiler flags (more flags can be set on a per-target basis or in subdirectories)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable all warnings and treat them all as errors\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# MSVC/Clang-cl builds need -Qunused-arguments\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# for better template error debugging\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# enforce strict standards compliance\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use the most recent C++ standard available\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# transactional memory - currently only available in GCC 6 and later\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n#find_package(Doxygen)\n\n##find_package(Meta)\n\n#find_package(PythonInterp 2.7)\n\n#find_package(Ruby 2.1)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# callable_traits_target_name_for(<output variable> <source file> [ext])\n\n# Returns the target name associated to a source file. If the path of the\n\n# source file relative from the root of callable_traits is `path/to/source/file.ext`,\n\n# the target name associated to it will be `path.to.source.file`.\n\n#\n\n# The extension of the file should be specified as a last argument. If no\n\n# extension is specified, the `.cpp` extension is assumed.\n\n##############################################################################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# callable_traits_add_test(<name> <command> [<arg>...])\n\n# Creates a test called `name`, which runs the given `command` with the given args.\n\n##############################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Setup the `check` target to build and then run all the tests and examples.\n\n##############################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Setup the 'install' target and the package config file.\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "deps/boost_1_67_0/libs/callable_traits/example/CMakeLists.txt" : {
      "ObjectId" : "7e9266c1ff90728ff13d302cdb93033ba92c3fdf",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/callable_traits/test/CMakeLists.txt" : {
      "ObjectId" : "87360fb772af39cc29041ec2345ae6168880f68a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#   callable_traits_add_unit_test(<name> ...)\n\n#\n\n# Equivalent to `callable_traits_add_test`, except the test is also added as a\n\n# dependency of the `tests` target.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/boost_1_67_0/libs/compute/CMakeLists.txt" : {
      "ObjectId" : "71e7722e00eade7f50e76d9beb8c958744623955",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find OpenCL\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find Boost\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# optional support for c++11\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional support for offline-caching\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# thread-safety options\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# optional third-party libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional support for boost dynamic libraries\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for default use statis libs\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compiler options\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Visual Studio C++\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Not enough actual parameters for a BOOST_PP macro\n\n# Warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data\n\n# Warning C4305: 'initializing': truncation from 'double' to 'float'\n\n# Warning C4800: 'uint32_t' : forcing value to bool 'true' or 'false' (performance warning)\n\n# Warning C4838: conversion from 'double' to 'float' requires a narrowing conversion\n",
        "Line" : 92,
        "CharPositionInLine" : 52
      },
      "12" : {
        "Text" : "# configure cmake config file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# install cmake config file\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install header files\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "deps/boost_1_67_0/libs/compute/cmake/FindBolt.cmake" : {
      "ObjectId" : "0820de0d073aa8ac45e7842fe8722efa7749a5a5",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################                                                                                     \n\n#   © 2012,2014 Advanced Micro Devices, Inc. All rights reserved.                                     \n\n#                                                                                    \n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");   \n\n#   you may not use this file except in compliance with the License.                 \n\n#   You may obtain a copy of the License at                                          \n\n#                                                                                    \n\n#       http://www.apache.org/licenses/LICENSE-2.0                      \n\n#                                                                                    \n\n#   Unless required by applicable law or agreed to in writing, software              \n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,              \n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.         \n\n#   See the License for the specific language governing permissions and              \n\n#   limitations under the License.                                                   \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################                                                                                     \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Locate an BOLT implementation.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   BOLT_FOUND - Found an Bolt imlementation\n\n#\n\n# Also defines the library variables below as normal\n\n# variables.\n\n#\n\n#   BOLT_LIBRARIES - These contain debug/optimized keywords when a debugging library is found\n\n#   BOLT_INCLUDE_DIRS - All relevant Bolt include directories\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   BOLT_ROOT - (as a CMake or environment variable)\n\n#                The root directory of an BOLT installation\n\n#\n\n#   FIND_LIBRARY_USE_LIB64_PATHS - Global property that controls whether FindBOLT should search for \n\n#                              64bit or 32bit libs\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    find_package(BOLT REQUIRED)\n\n#    include_directories(${BOLT_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${BOLT_LIBRARIES})\n\n#\n\n#-----------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module helps to use BOLT_FIND_COMPONENTS, BOLT_FIND_REQUIRED, BOLT_FIND_QUIETLY\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for 64bit libs if FIND_LIBRARY_USE_LIB64_PATHS is set to true in the global environment, 32bit libs else\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Debug print statements\n\n#message( \"BOLT_LIBRARY_PATH_SUFFIXES: ${BOLT_LIBRARY_PATH_SUFFIXES}\" )\n\n#message( \"ENV{BOLT_ROOT}: $ENV{BOLT_ROOT}\" )\n\n#message( \"BOLT_FIND_COMPONENTS: ${BOLT_FIND_COMPONENTS}\" )\n\n#message( \"BOLT_FIND_REQUIRED: ${BOLT_FIND_REQUIRED}\" )\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the component to find if the user does not specify explicitely\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Eventually, Bolt may support multiple backends, but for now it only supports CL\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "deps/boost_1_67_0/libs/compute/cmake/FindEigen.cmake" : {
      "ObjectId" : "2cd3e12c0c243a6cc745bf787b7d765c3198ff59",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2013 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindEigen.cmake - Find Eigen library, version >= 3.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# EIGEN_FOUND: TRUE iff Eigen is found.\n\n# EIGEN_INCLUDE_DIRS: Include directories for Eigen.\n\n#\n\n# EIGEN_VERSION: Extracted from Eigen/src/Core/util/Macros.h\n\n# EIGEN_WORLD_VERSION: Equal to 3 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MAJOR_VERSION: Equal to 2 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MINOR_VERSION: Equal to 0 if EIGEN_VERSION = 3.2.0\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# EIGEN_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                          search for eigen includes, e.g: /timbuktu/eigen3.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# EIGEN_INCLUDE_DIR: Include directory for CXSparse, not including the\n\n#                    include directory of any dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find Eigen or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make results of search visible in the CMake GUI if Eigen has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n\n#\n\n# TODO: Add standard Windows search locations for Eigen.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Mac OS X\n",
        "Line" : 91,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 92,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mark internally as found, then verify. EIGEN_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Extract Eigen version from Eigen/src/Core/util/Macros.h\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 3.;2.;0 nonsense.\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments and version.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Only mark internal variables as advanced if we found Eigen, otherwise\n\n# leave it visible in the standard GUI for the user to set manually.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "deps/boost_1_67_0/libs/compute/cmake/FindTBB.cmake" : {
      "ObjectId" : "d299fd140487a450b6565a562f14bceb293336a6",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# FindTBB.cmake can be found at https://code.google.com/p/findtbb/\n\n# Written by Hannes Hofmann <hannes.hofmann _at_ informatik.uni-erlangen.de>\n\n# Improvements by Gino van den Bergen <gino _at_ dtecta.com>,\n\n#   Florian Uhlig <F.Uhlig _at_ gsi.de>,\n\n#   Jiri Marsik <jiri.marsik89 _at_ gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (c) 2011 Hannes Hofmann\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script `tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# GvdB: Mac OS X distribution places libraries directly in lib directory.\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_DEBUG_LIBRARY_DIRS, where to find libtbb_debug, libtbbmalloc_debug\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n\n# TBB_INTERFACE_VERSION, as defined in tbb/tbb_stddef.h\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8 em64t/vc9\n\n# has ia32/vc7.1 ia32/vc8 ia32/vc9\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Todo: add other Windows compilers such as ICL.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# default flavor on apple: ia32/cc4.0.1_os10.4.9\n\n# Jiri: There is no reason to presume there is only one flavor and\n\n#       that user's setting of variables should be ignored.\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21 em64t/cc3.3.3_libc2.3.3_kernel2.6.5 em64t/cc3.4.3_libc2.3.4_kernel2.6.9 em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Jiri: tbbvars now sets the CPATH environment variable to the directory\n\n#       containing the headers.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Jiri: This block isn't mutually exclusive with the previous one\n\n#       (hence no else), instead I test if the user really specified\n\n#       the variables in question.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Jiri: It doesn't hurt to look in more places, so I store the hints from\n\n#       ENV{TBB_ARCH_PLATFORM} and the TBB_ARCHITECTURE and TBB_COMPILER\n\n#       variables and search them both.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Jiri: No reason not to check the default paths. From recent versions,\n\n#       tbbvars has started exporting the LIBRARY_PATH and LD_LIBRARY_PATH\n\n#       variables, which now point to the directories of the lib files.\n\n#       It all makes more sense to use the ${_TBB_LIBRARY_DIR} as a HINTS\n\n#       argument instead of the implicit PATHS as it isn't hard-coded\n\n#       but computed by system introspection. Searching the LIBRARY_PATH\n\n#       and LD_LIBRARY_PATH environment variables is now even more important\n\n#       that tbbvars doesn't export TBB_ARCH_PLATFORM and it facilitates\n\n#       the use of TBB built from sources.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-- Look for debug libraries\n\n# Jiri: Changed the same way as for the release libraries.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n\n#       Extract path from TBB_LIBRARY_DEBUG name\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "deps/boost_1_67_0/libs/compute/cmake/opencl/FindOpenCL.cmake" : {
      "ObjectId" : "0a60e8d15eab2828fb7e9e18b380a9cd318bd097",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations.\n\n#\n\n# To set the paths manually, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OpenCL_FOUND         - system has OpenCL\n\n#  OpenCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OpenCL_LIBRARIES     - link these to use OpenCL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# for Mali GPUs, libmali must be linked\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "deps/boost_1_67_0/libs/compute/example/CMakeLists.txt" : {
      "ObjectId" : "a5708cb0cc86e588e14b0c397b5ae834749e21d6",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013-2014 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost library link dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add example program to list of tests (if testing is enabled)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# opencl test example\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen examples\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv examples\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# opengl/vtk examples\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# qt examples\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# build with Qt4\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# look for Qt5\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# build with Qt5\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# required by both versions\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# add examples\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "deps/boost_1_67_0/libs/compute/perf/CMakeLists.txt" : {
      "ObjectId" : "b04429e9d3c0dc4eed6583c2ff9d5c19ab49c7de",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# stl benchmarks (for comparison)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# stl benchmarks which require c++11\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cuda/thrust benchmarks (for comparison)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# intel tbb benchmarks (for comparison)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# bolt c++ template lib benchmarks (for comparison)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/boost_1_67_0/libs/compute/test/CMakeLists.txt" : {
      "ObjectId" : "a0ca0cf1b4100d3591316905a6a52b32d8ec9a35",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# allow tests to use C++11 features\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# enable automatic kernel compilation error messages for tests\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable code coverage generation (only with GCC for now)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add path to test data dir\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link with coverage library\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# miscellaneous tests\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extra tests (interop tests, linkage tests, etc.)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/boost_1_67_0/libs/compute/test/extra/CMakeLists.txt" : {
      "ObjectId" : "2fb58a2843dd65ee5d3d997fe81bd72619da2966",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2015 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n# \n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include local test headers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for linkage problems\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# link with coverage library\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen interop tests\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv interop tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# qt interop tests\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for Qt5\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# the opengl interop test depends on qt to create the opengl context\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# vtk interop tests\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "deps/boost_1_67_0/libs/fiber/examples/cuda/Makefile" : {
      "ObjectId" : "60a3098e88a642019fee0a48bf87f6f9de4bdb01",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/fiber/examples/hip/Makefile" : {
      "ObjectId" : "d40e8c1a5035a9607f64388bd2c509c384c96ed7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/fusion/test/compile_time/Makefile" : {
      "ObjectId" : "4887cf248e9c989fccd99d2515076f8bd2b1285e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2008 Dan Marsden\n\n#  \n\n#    Use modification and distribution are subject to the Boost Software \n\n#    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at\n\n#    http://www.boost.org/LICENSE_1_0.txt).\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/gil/example/Makefile" : {
      "ObjectId" : "ca3d3d790659d97dd06c90a6d07bcd6035763e97",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2008 Lubomir Bourdev and Hailin Jin\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX=/usr/local/gcc-411/bin/g++\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/boost_1_67_0/libs/gil/test/Makefile" : {
      "ObjectId" : "876f1f67939899343c049c6eec981f86b3a2f551",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2008 Lubomir Bourdev and Hailin Jin\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX=/usr/local/gcc4/bin/g++\n\n#CXX=/usr/local/gcc411/bin/g++\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CXX=g++\n\n#CXX='/cygdrive/c/Program Files/Intel/Compiler/C++/10.0.027/IA32/Bin/icl.exe'\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-DNDEBUG \n",
        "Line" : 14,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : "#-DNDEBUG \n",
        "Line" : 15,
        "CharPositionInLine" : 73
      },
      "5" : {
        "Text" : "#\t${CXX} ${CXX_FLAGS} ${BOOST_INCLUDE_PATH} ${LIBJPEG_INCLUDE_PATH} ${LIBTIFF_INCLUDE_PATH} ${LIBPNG_INCLUDE_PATH} -c $<\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/boost_1_67_0/libs/graph/doc/Makefile" : {
      "ObjectId" : "2aa2fef81f0cc30035d9bf23bae17439102908ac",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2002 Trustees of Indiana University\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#OPT\t\t= +K2 --display_error_number --diag_suppress=186\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#isomorphism-impl.dvi: $(EPS_GEN) $(WEBTEX)\n\n#isomorphism-impl.ps: isomorphism-impl.dvi\n\n#isomorphism-impl.pdf: $(EPS_GEN) $(PDFPICT) $(WEBTEX)\n\n#isomorphism.hpp: isomorphism-impl.w isomorphism-impl.tex\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/boost_1_67_0/libs/graph/doc/figs/Makefile" : {
      "ObjectId" : "7c63524e9637f27cdcc2f5503e5fea7539dc91dd",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -*- makefile -*-\n\n# Copyright (c) 2002 Trustees of Indiana University\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/hana/CMakeLists.txt" : {
      "ObjectId" : "1483020d835830ada7d70b5b1ecd59cb6d75669a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Setup CMake options\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Setup project\n\n#\n\n# We parse the canonical version number located in <boost/hana/version.hpp>.\n\n# This is done to allow the library to be used without requiring a proper\n\n# installation during which the version would be written to this header.\n\n##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Perform checks to make sure we support the current compiler\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Setup the 'hana' header-only library target, along with its install target\n\n# and exports.\n\n##############################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Export the `hana` library into a HanaConfig.cmake file\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Also install an optional pkg-config file\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# Function to setup common compiler flags on tests and examples\n\n##############################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GCC pretends to have the flag, but produces a \"unrecognized command line option\"\n\n# warning when we use it.\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "##############################################################################\n\n# Look for the rest of Boost, which is an optional dependency of some tests.\n\n##############################################################################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# Setup custom functions to ease the creation of targets\n\n##############################################################################\n\n#   boost_hana_target_name_for(<output variable> <source file> [ext])\n\n#\n\n# Return the target name associated to a source file. If the path of the\n\n# source file relative from the root of Hana is `path/to/source/file.ext`,\n\n# the target name associated to it will be `path.to.source.file`.\n\n#\n\n# The extension of the file should be specified as a last argument. If no\n\n# extension is specified, the `.cpp` extension is assumed.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# Setup the `check` target to build and then run all the tests and examples.\n\n##############################################################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Setup subdirectories and testing\n\n##############################################################################\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "deps/boost_1_67_0/libs/hana/benchmark/CMakeLists.txt" : {
      "ObjectId" : "212454563153f75086bde4bf6ad5a24423be286e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Required packages, gems and caveats\n\n##############################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for the 'ruby-progressbar' and 'tilt' gems\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some benchmarks depend on those libraries\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Configure the measure.rb script\n\n##############################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#input\n\n#output\n",
        "Line" : 36,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : "##############################################################################\n\n# Add the benchmarks\n\n##############################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/boost_1_67_0/libs/hana/cmake/CheckCxxCompilerSupport.cmake" : {
      "ObjectId" : "78f1b5fd462f2206c34fb502bbcd2815e3da220d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Copyright Markus J. Weber 2015\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module checks whether the current compiler is supported, and\n\n# provides friendly hints to the user.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/hana/cmake/FindMPL11.cmake" : {
      "ObjectId" : "5b8b3c4e0391a37b087b098f906dbdf504030167",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module finds the MPL11 include directory. This module sets the\n\n# following CMake variables:\n\n#\n\n# MPL11_FOUND\n\n#   Set to 1 when the MPL11 include directory is found, 0 otherwise.\n\n#\n\n# MPL11_INCLUDE_DIR\n\n#   If the MPL11 include directory is found, this is set to the path of that\n\n#   directory. Otherwise, this is not set.\n\n#\n\n#\n\n# The following variables can be used to customize the behavior of the module:\n\n#\n\n# MPL11_INCLUDE_DIR\n\n#   The path to the MPL11 include directory. When set, this will be used as-is.\n\n#\n\n# MPL11_CLONE_IF_MISSING\n\n#   If the MPL11 include directory can't be found and this is set to true,\n\n#   the MPL11 project will be cloned locally.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable build step\n\n# Disable install step\n\n# Disable test step\n",
        "Line" : 38,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 2
    },
    "deps/boost_1_67_0/libs/hana/cmake/FindMeta.cmake" : {
      "ObjectId" : "0a532062bb0fc3733f518c26105178399396fb02",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n# This file was adapted from FindMeta.cmake at https://github.com/ericniebler/meta.\n\n#\n\n#\n\n# This CMake module finds the Meta include directory. This module sets the\n\n# following CMake variables:\n\n#\n\n# Meta_FOUND\n\n#   Set to 1 when the Meta include directory is found, 0 otherwise.\n\n#\n\n# Meta_INCLUDE_DIR\n\n#   If the Meta include directory is found, this is set to the path of that\n\n#   directory. Otherwise, this is not set.\n\n#\n\n#\n\n# The following variables can be used to customize the behavior of the module:\n\n#\n\n# Meta_INCLUDE_DIR\n\n#   The path to the Meta include directory. When set, this will be used as-is.\n\n#\n\n# Meta_CLONE_IF_MISSING\n\n#   If the Meta include directory can't be found and this is set to true,\n\n#   the Meta project will be cloned locally.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable build step\n\n# Disable install step\n\n# Disable test step\n",
        "Line" : 40,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 2
    },
    "deps/boost_1_67_0/libs/hana/cmake/TestHeaders.cmake" : {
      "ObjectId" : "663c9f4e883b986b77a3796826ef6ef12fa83d28",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module provides a function generating a unit test to make sure\n\n# that every public header can be included on its own.\n\n#\n\n# When a C++ library or application has many header files, it can happen that\n\n# a header does not include all the other headers it depends on. When this is\n\n# the case, it can happen that including that header file on its own will\n\n# break the compilation. This CMake module generates a dummy executable\n\n# comprised of many .cpp files, each of which includes a header file that\n\n# is part of the public API. In other words, the executable is comprised\n\n# of .cpp files of the form:\n\n#\n\n#   #include <the/public/header.hpp>\n\n#\n\n# and then exactly one `main` function. If this succeeds to compile, it means\n\n# that the header can be included on its own, which is what clients expect.\n\n# Otherwise, you have a problem. Since writing these dumb unit tests by hand\n\n# is tedious and repetitive, you can use this CMake module to automate this\n\n# task.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   add_header_test(<target> [EXCLUDE_FROM_ALL] [EXCLUDE excludes...] HEADERS headers...)\n\n#\n\n# Generates header-inclusion unit tests for all the specified headers.\n\n#\n\n# This function creates a target which builds a dummy executable including\n\n# each specified header file individually. If this target builds successfully,\n\n# it means that all the specified header files can be included individually.\n\n#\n\n# Parameters\n\n# ----------\n\n# <target>:\n\n#   The name of the target to generate.\n\n#\n\n# HEADERS headers:\n\n#   A list of header files to generate the inclusion tests for. All headers\n\n#   in this list must be represented as relative paths from the root of the\n\n#   include directory added to the compiler's header search path. In other\n\n#   words, it should be possible to include all headers in this list as\n\n#\n\n#       #include <${header}>\n\n#\n\n#   For example, for a library with the following structure:\n\n#\n\n#       project/\n\n#           doc/\n\n#           test/\n\n#           ...\n\n#           include/\n\n#               boost/\n\n#                   hana.hpp\n\n#                   hana/\n\n#                       transform.hpp\n\n#                       tuple.hpp\n\n#                       pair.hpp\n\n#                       ...\n\n#\n\n#   When building the unit tests for that library, we'll add `-I project/include'\n\n#   to the compiler's arguments. The list of public headers should therefore contain\n\n#\n\n#       boost/hana.hpp\n\n#       boost/hana/transform.hpp\n\n#       boost/hana/tuple.hpp\n\n#       boost/hana/pair.hpp\n\n#       ...\n\n#\n\n#   Usually, all the 'public' header files of a library should be tested for\n\n#   standalone inclusion. A header is considered 'public' if a client should\n\n#   be able to include that header on its own.\n\n#\n\n# [EXCLUDE excludes]:\n\n#   An optional list of headers or regexes for which no unit test should be\n\n#   generated. Basically, any header in the list specified by the `HEADERS`\n\n#   argument that matches anything in `EXCLUDE` will be skipped.\n\n#\n\n# [EXCLUDE_FROM_ALL]:\n\n#   If provided, the generated target is excluded from the 'all' target.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options\n\n# 1 value args\n\n# multivalued args\n",
        "Line" : 83,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 3
    },
    "deps/boost_1_67_0/libs/hana/doc/CMakeLists.txt" : {
      "ObjectId" : "66406606cc98d0bc44ca62a67f70599b37745bf9",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/hana/example/CMakeLists.txt" : {
      "ObjectId" : "0464c0960d770d385ab465c047eec4c53b388590",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Take note of files that depend on Boost\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Caveats: Take note of examples that are not supported.\n\n##############################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# Add all the examples\n\n##############################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Several examples have unused parameters because the name of the parameters\n\n# are useful for illustration, even if the implementation is not actually\n\n# presented. We don't want to generate warnings for that or need to comment\n\n# out all unused parameter names.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/boost_1_67_0/libs/hana/example/cmake_integration/CMakeLists.txt" : {
      "ObjectId" : "000d03dd8a10f1f2a911a28ee50d6da0c57d1609",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# [snip]\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# [snip]\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/boost_1_67_0/libs/hana/test/CMakeLists.txt" : {
      "ObjectId" : "52ee6c4aa5b08b61eef46955d631914a50bd7547",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Take note of files that depend on Boost\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Caveats: Take note of public headers and tests that are not supported.\n\n##############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The experimental::type_name test is only supported on Clang >= 3.6 and\n\n# AppleClang >= 7.0\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Windows, Clang-cl emulates a MSVC bug that causes EBO not to be applied\n\n# properly. We disable the tests that check for EBO.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n\n# Generate tests that include each public header.\n\n# The headers that were excluded above due to caveats are ignored here.\n\n##############################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# Check for ODR violations when linking several translation units\n\n# (GitHub issue 75)\n\n##############################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# Add all the remaining unit tests\n\n##############################################################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Add the deployment test, which checks that we can indeed install `hana` and\n\n# then use the provided `HanaConfig.cmake` config file to use `hana` from an\n\n# external project.\n\n##############################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Disable test step\n\n# Disable source work-tree update\n",
        "Line" : 129,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 10
    },
    "deps/boost_1_67_0/libs/hana/test/deploy/CMakeLists.txt" : {
      "ObjectId" : "186d5def73951e4b3f312522ad53a3f80909f224",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/hof/CMakeLists.txt" : {
      "ObjectId" : "2ba06272e6d4bae9fc22e072d7bfc42028570279",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2017 Paul Fultz II\n\n#    CMakeLists.txt\n\n#    Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n#    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/hof/cmake/BCMTest.cmake" : {
      "ObjectId" : "a7215f9c0e0aff3065ee2a4406b4173f7ad7f85d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Check if name exists\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/hof/cmake/SphinxDoc.cmake" : {
      "ObjectId" : "6cedf77bbb74748b7982bb63e9eadca48c333895",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HTML output directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/boost_1_67_0/libs/hof/doc/Makefile" : {
      "ObjectId" : "2ccdfb5ad58b99f5fd3dc77be5622d3a4e26eda6",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2017 Paul Fultz II\n\n#    requirements.txt\n\n#    Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n#    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#==============================================================================\n\n# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/boost_1_67_0/libs/lambda/test/Makefile" : {
      "ObjectId" : "f25b5e4ffb984efce9640aa047b9be3d2d29ce9b",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CXX\t\t= KCC \n\n#EXTRAFLAGS \t= --strict --display_error_number --diag_suppress 450 --max_pending_instantiations 50\n\n#LIBS\t\t=\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create lists of object files from the source file lists.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 57:26 token recognition error at: '\\1'\n"
    },
    "deps/boost_1_67_0/libs/multiprecision/test/coverage/Makefile" : {
      "ObjectId" : "d3825ea7596a1a7b31dcb9d0a38daef314c66a12",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# copyright John Maddock 2012\n\n# Distributed under the Boost Software License, Version 1.0. \n\n# (See accompanying file LICENSE_1_0.txt or copy at \n\n# http://www.boost.org/LICENSE_1_0.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/numeric/odeint/examples/gmpxx/Makefile" : {
      "ObjectId" : "0a9f7cb014adc5f0a5c643804d69f1db330f36b6",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/odeint/examples/thrust/Makefile" : {
      "ObjectId" : "5a33bdb323862262e89084853f8cb9bce46f542f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2011-2014 Mario Mulansky\n\n# Copyright 2011-2012 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path to the cuda installation\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target architecture\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/boost_1_67_0/libs/numeric/odeint/performance/Makefile" : {
      "ObjectId" : "641cb0313d1fbe75fcea70f1e0d93dc6ec8f7d48",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2011-2014 Mario Mulansky\n\n# Copyright 2011-2014 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# disabling -ffast-math might give slightly better performance\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Possible options: -fp-model source -no-fma\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/boost_1_67_0/libs/numeric/odeint/performance/SIMD/Makefile" : {
      "ObjectId" : "811acd98822cc1df522eb8c341411869e4a57105",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2014 Mario Mulansky\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n\n# you also need NT2s SIMD libary available set the include path here:\n\n# SIMD_INCLUDE = /path/to/simd/include\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INTEL COMPILER\n\n# change this if you want to cross-compile\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ARCH = AVX\n\n# ARCH = SSE4.2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -ip\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GCC COMPILER\n\n# change this if you want to cross-compile\n\n# ARCH = native\n\n# # ARCH = core-avx-i\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CXX = g++\n\n# CC = g++\n\n# CXXFLAGS = -O3 -ffast-math -mtune=${ARCH} -march=${ARCH} -std=c++0x -DNDEBUG ${INCLUDES}\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/boost_1_67_0/libs/numeric/odeint/test_external/thrust/Makefile" : {
      "ObjectId" : "49d9cd71a2819a4fb5e0f9aeeb77ae99b0649d67",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2010-2014 Mario Mulansky\n\n# Copyright 2010-2012 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path to the cuda installation\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target architecture\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench1/bench1.pro" : {
      "ObjectId" : "685802b31800859c02cfea45be0d85d1959e0cb9",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench2/bench2.pro" : {
      "ObjectId" : "b667a3fd40000f39d51a1e2d8fe5f63c5d6a9f15",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench3/bench3.pro" : {
      "ObjectId" : "21f561fc68a14842a3a166ee42989db1150fc57f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench4/bench4.pro" : {
      "ObjectId" : "354bb478b900721558e7fb494e8b5a528bfff8fd",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench5/bench5.pro" : {
      "ObjectId" : "e450911f0c578cf4e1f6eab672e12ff035beb75d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/benchmarks.pro" : {
      "ObjectId" : "4acf2d6933796f2778f1d5b79e1ae77c5308822f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/configuration.pri" : {
      "ObjectId" : "07ffcae1c2f0c635caf10f82aaef4879a64f299e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# ublas include directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If ublas tests are build with boost source code then,\n\n# then boost headers and boost libraries should be used.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LIBS += -L../../../../../../../stage/lib\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/include/detail/detail.pri" : {
      "ObjectId" : "711972db4190df2ecb105dbbd7d179b11b292fba",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/include/experimental/experimental.pri" : {
      "ObjectId" : "41dc6c46b652fea26ad694903a5930ae3e53b7a4",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/include/include.pro" : {
      "ObjectId" : "5815a01fe838c154dd77797db3dafb36d44e07dd",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/include/operation/operation.pri" : {
      "ObjectId" : "519c4f4a6d454b70272873f85024babba79efff3",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/include/traits/traits.pri" : {
      "ObjectId" : "de327dc6822a7ed7679011333e9e3957610a1ca2",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/begin_end.pro" : {
      "ObjectId" : "03c4c6276517f2318fb706a595b3ede98754b9e3",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/comp_mat_erase.pro" : {
      "ObjectId" : "63960aefeb66ccfe23529cd56b934913118b7231",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/concepts.pro" : {
      "ObjectId" : "c4c0bca9fecf186be88a6402e595014f67a68705",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# INTERAL\n\n# SKIP_BAD\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/configuration.pri" : {
      "ObjectId" : "3fdb4aa528beaa77acce0f9df057c6262e58cfbe",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Create a directory for each test.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# USE_RANGE USE_SLICE        # Too complex for regression testing\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Visual age IBM\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ublas include and test directory are included\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If ublas tests are build with boost source code then,\n\n# then boost headers and boost libraries should be used.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Execute test once compiled.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/num_columns.pro" : {
      "ObjectId" : "8a28199c6dc3e0faefdc76115807042bb668b698",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/num_rows.pro" : {
      "ObjectId" : "dc0a2290467f1e78239820eaa45fe330364cc377",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/placement_new.pro" : {
      "ObjectId" : "d19a747436a752417749d1de41243d081384d490",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/size.pro" : {
      "ObjectId" : "59a04033424afb62bb250e33d048abd80c3c2d03",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/sparse_view_test.pro" : {
      "ObjectId" : "02b3eb089016efe5b84a01a63f7b6185c1bdd74f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test1.pro" : {
      "ObjectId" : "d1123c44e4176a0e4de36a7b310e3ca4672c1b85",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test2.pro" : {
      "ObjectId" : "00fb53f54446ff84bd6cd01efeb0a29e6758b988",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test3.pro" : {
      "ObjectId" : "f4fd021fa87e80e683d284e02aefaa5a6dd787db",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test3_coo.pro" : {
      "ObjectId" : "27e3ca384d3f88f16aad3315c865988c8a0a52fb",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test3_mvov.pro" : {
      "ObjectId" : "f0a46dcd28083715a4165513bb96b73f738adfdb",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test4.pro" : {
      "ObjectId" : "19da3f872c1ff25605faaa218808e866245fdaa0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test5.pro" : {
      "ObjectId" : "3f27384ec589806be163ef53203cae5a0ec82540",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test6.pro" : {
      "ObjectId" : "0664ce4548aee3ea3cb3e3d14d8d3e1ba06e68ba",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test7.pro" : {
      "ObjectId" : "5410184926c71d0cfc49cef83b988165d0cf81aa",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_assignment.pro" : {
      "ObjectId" : "1ad6ca391323deaadfb8f3b2fa41187c64ae301f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_banded_storage_layout.pro" : {
      "ObjectId" : "78a96dc42c8a7b55de6aee5df6e0bea6bc467cec",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_complex_norms.pro" : {
      "ObjectId" : "e7c431e4a84927197075e421c5422c27429d7c1c",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_always_do_full_sort.pro" : {
      "ObjectId" : "0c93dd04b8162659771dd99fcde31d86a821803a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_inplace_merge.pro" : {
      "ObjectId" : "0dee5eb39feaa6764ac87e7bbb844ee2cc3db866",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_sort.pro" : {
      "ObjectId" : "ea94561d1bb8a0646368de55ba136032dda97794",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_vector_inplace_merge.pro" : {
      "ObjectId" : "a86ce2aeb03b61bd035132f714fcba963fb91e6e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_fixed_containers.pro" : {
      "ObjectId" : "60127482fc76b7c90331e04c53fe3647d2fa213a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_basic.pro" : {
      "ObjectId" : "42bc3db6f760e416f581aaafea89146a5c0b9fe7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_mvov.pro" : {
      "ObjectId" : "a1d1316d62393861f9d976526d4f0095945deef0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_sparse.pro" : {
      "ObjectId" : "9f9a32a09b7861ea6064078f10de1f903dbdd6be",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_lu.pro" : {
      "ObjectId" : "0f203397187216447cecb65cc90699e6d8b611c5",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_matrix_vector.pro" : {
      "ObjectId" : "d61b70bfb02685855b3b480a1ce90b8cd1cd40bc",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_ticket7296.pro" : {
      "ObjectId" : "98752cf75fa966e44741bdf186e3db113cb960ab",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/test_triangular.pro" : {
      "ObjectId" : "15c8ce1102b56d466e134976b86282d69525e2ea",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/triangular_access.pro" : {
      "ObjectId" : "98a87063b7b810db541a4370d5d327af29bead12",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/test/triangular_layout.pro" : {
      "ObjectId" : "dcfd36f6f3ced95452e38468254018a689e08607",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/tests.pri" : {
      "ObjectId" : "6ece4acd55986a02cf3f71913f0c2b0a94f2f08a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/numeric/ublas/IDEs/qtcreator/ublas_develop.pro" : {
      "ObjectId" : "7364283a930db21c2865cd73c214a5021d2ca74f",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/python/doc/numpy/Makefile" : {
      "ObjectId" : "f0ffaaea5f9ae2937d494f6be771a9ce5421b4f7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/boost_1_67_0/libs/regex/test/profile/Makefile" : {
      "ObjectId" : "f1b3def7b37773c389b331af85e2a778708bc19a",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# copyright John Maddock 2003\n\n# Distributed under the Boost Software License, Version 1.0. \n\n# (See accompanying file LICENSE_1_0.txt or copy at \n\n# http://www.boost.org/LICENSE_1_0.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/boost_1_67_0/libs/serialization/CMake/CMakeLists.txt" : {
      "ObjectId" : "a6b14787bee62f566a02e5dac357635a970df9a9",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build control file for Serialization Library tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Compiler settings\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we use gcc to test for C++03 compatibility\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++98\")\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# IDE settings\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# note: it seems that bjam builds both address models in any case\n\n# so we can defer this decision to the IDE just as we do for debug/release\n\n# so we'll not use this now\n\n# set(Boost_ADDRESS_MODEL 64 CACHE INTEGER \"32/64 bits\")\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# Locate Project Prerequisites \n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Boost\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# note: we're assuming that boost has been built with:\n\n# ./b2 —-layout=versioned toolset=clang-darwin link=static,shared variant=debug,release stage\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########################\n\n# special notes for Xcode.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# these three should result in CMake setting the variables\n\n# Boost_SERIALIZATION_LIBRARY_DEBUG … to the correct values.  \n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# But my current version of CMake doesn't automatically set the library names\n\n# to point to the the libraries to be used.  The variables are created\n\n# but they are not initialized.  So be prepared to set these variables by hand.\n\n# If you want to use the static libraries - point to the boost libraries ending\n\n# in \".a\".  If you want to use the shared boost libraries - point to the libraries\n\n# ending in \".dylib\".\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# But wait - there's more.\n\n# if both lib.a and lib.dylib both exist in the library directory, Xcode will\n\n# automatically chose the *.dylib one - and there's nothing you can do to fix this.\n\n# So my recommendation is \n\n# a) to place the compiled libraries in two different directories\n\n#    - e.g. stage/lib-static/*.a and stage/lib-shared/*.dylib\n\n#    and set the CMake variable Boost_LIBRARY_DIR to point to one or the other\n\n# b) create two different CMake build directories - build-static and build-shared\n\n#    and switch between projects as desired.  I like to test both since\n\n#    there are things like dead code elimination and visibility which vary\n\n#    between the two environments.\n\n#\n\n#    caveat - as I write this, I've been unable to get the tests on the shared\n\n#    library to function. Problem is that one needs to either put the shared\n\n#    libraries in a special known place or set an environmental\n\n#    variable which points to the shared library directory.  I prefer the latter\n\n#    but I've been unable to figure out how to get Xcode to do on a global basis\n\n#    and it's not practical to do this for 247 test targets one at a time.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# c) The targets in the project will by default be built as universal 32/64 binaries\n\n#    I have yet to experiment with these yet so I just set the target to 64 bit.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# end special note for Xcode\n\n############################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include_directories(\"../include\" \"${Boost_INCLUDE_DIRS}\")\n\n#link_directories(\"${Boost_LIBRARY_DIRS}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "###########################\n\n# library builds\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# doesn't show up in \"Source Files\" in Xcode\"'\n",
        "Line" : 178,
        "CharPositionInLine" : 31
      },
      "18" : {
        "Text" : "# doesn't show up in \"Source Files\" in Xcode\"'\n",
        "Line" : 190,
        "CharPositionInLine" : 31
      },
      "19" : {
        "Text" : "# end library build\n\n###########################\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###########################\n\n# test targets\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# serialization(test_dll_simple dll_a_lib)\n\n# compile test_dll_plugin.cpp\n\n# Running the following test requires that the test know the directory \n\n# in which the dll is stored. I don't know how to extract this from bjam\n\n# serialization(test_dll_plugin : : dll_polymorphic_derived2_lib)\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# end test targets\n\n####################\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "####################\n\n# add headers in IDE\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# for serialisation\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# for wserialization\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#####################\n\n# add test project to run misc tests\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# end test project\n\n#####################\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "deps/boost_1_67_0/libs/spirit/doc/refcard/Makefile" : {
      "ObjectId" : "1034b2539d9c88bfa3227af5d4c8e9a643706568",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/libs/test/build/CMakeLists.txt" : {
      "ObjectId" : "ad2ebd02647226fe78a190623d989630f8afcdea",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014, Raffi Enficiaud\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use, modification, and distribution are subject to the\n\n# Boost Software License, Version 1.0. (See accompanying file\n\n# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# See http://www.boost.org/libs/test for the library home page.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build type, by default to release (with optimisations)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ctest sets BUILD_TESTING automatically, but does not seem to serve its purpose.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# c++11 options\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# global path\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# global include on boost\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# include globs\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# organize files\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####\n\n# Documentation files (files only, no target)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####\n\n# Unit tests\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# documentation tests\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# unit tests folder\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# datasets\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "####\n\n# TS writing-test-ts\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#get_filename_component(_v \"${_v}\" DIRECTORY)\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# test suite\n",
        "Line" : 203,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 19
    },
    "deps/boost_1_67_0/libs/test/doc/snippet/dataset_1/CMakeLists.txt" : {
      "ObjectId" : "ce21a40a579fad6093fc62a62b0886010ebe5f3e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  (C) Copyright Raffi Enficiaud 2014.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#  (See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n#  See http://www.boost.org/libs/test for the library home page.\n\n#\n\n#  trivial cmake script for running the dataset\n\n# ***************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not meant to be included in the documentation\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# creates the executable\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# indicates the include paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# indicates the link paths\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# declares a test with our executable\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/boost_1_67_0/tools/build/example/make/main_cpp.pro" : {
      "ObjectId" : "237c8ce181774d991a9dbdd8cacf1a5fb9f199f1",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "deps/boost_1_67_0/tools/build/src/engine/boehm_gc/Makefile.am" : {
      "ObjectId" : "e632864df2b7bf33a97469b112be0e104bc15b5e",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 1999-2001 by Red Hat, Inc. All rights reserved.\n\n# \n\n# THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED\n\n# OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.\n\n# \n\n# Permission is hereby granted to use or copy this program\n\n# for any purpose,  provided the above notices are retained on all copies.\n\n# Permission to modify the code and to distribute modified code is granted,\n\n# provided the above notices are retained, and a notice that the code was\n\n# modified is included with the above copyright notice.\n\n#\n\n# Original author: Tom Tromey\n\n# Severely truncated by Hans-J. Boehm\n\n# Modified by: Grzegorz Jakacki <jakacki at acm dot org>\n\n# Modified by: Petter Urkedal <petter.urkedal@nordita.dk> (2005-04)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## FIXME: `make distcheck' in this directory will not currently work.\n\n##     This is most likely to the explicit flags passed to submakes.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We currently use the source files directly from libatomic_ops, if we\n\n# use the internal version.  This is done since libatomic_ops doesn't\n\n# use libtool, since it has no real use for it.  But that seems to make\n\n# it hard to use either the resulting object files or libraries.\n\n# Thus there seems too be no real reason to recusively build in the\n\n# libatomic_ops directory.\n\n# if USE_INTERNAL_LIBATOMICS_OPS\n\n# SUBDIRS = @maybe_libatomic_ops@\n\n# else\n\n# SUBDIRS =\n\n# endif\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Initialize variables so that we can declare files locally.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C Library\n\n# ---------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C Library: Architecture Dependent\n\n# ---------------------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include THREADDLLIBS here to ensure that the correct versions of\n\n# linuxthread semaphore functions get linked:\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# C++ Interface\n\n# -------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# FIXME: If Visual C++ users use Makefile.am, this should go into\n\n# pkginclude_HEADERS with proper AM_CONDITIONALization.  Otherwise\n\n# delete this comment.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Misc\n\n# ----\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## FIXME: relies on internal code generated by automake.\n\n## FIXME: ./configure --enable-dependency-tracking should be used \n\n#all_objs = @addobjs@ $(libgc_la_OBJECTS)\n\n#$(all_objs) : include/private/gcconfig.h include/private/gc_priv.h \\\n#include/private/gc_hdrs.h include/gc.h include/gc_gcj.h \\\n#include/gc_pthread_redirects.h include/gc_config_macros.h \\\n#include/private/thread_local_alloc.h include/private_support.h \\\n#include/private/pthread_stop_world.h \\\n#include/gc_mark.h @addincludes@\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## FIXME: we shouldn't have to do this, but automake forces us to.\n\n## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\n\n## these.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## XLC neither requires nor tolerates the unnecessary assembler goop\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\n\n## these.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## We need to add DEFS to assembler flags\n\n## :FIXME: what if assembler does not accept -D... ?\n\n##     (use Autoconf to prepare ASDEFS ???)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## callprocs --- used by Makefile.{dj,direct}\n\n## configure.host --- used by Makefile.{am,dj,direct}\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# headers which are not installed\n\n# (see include/include.am for more)\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# documentation which is not installed\n\n#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# other makefiles\n\n# :GOTCHA: deliberately we do not include 'Makefile'\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# files used by makefiles other than Makefile.am\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The libatomic_ops library.  This is not ideal, since we pick up junk from\n\n# there.  The hard-coded version number should also go.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this is an auxiliary shell file used by Makefile and Makefile.direct\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# :FIXME: why do we distribute this one???\n\n#\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# :GOTCHA: GNU make rule for making .s out of .S is flawed, \n\n# it will not remove dest if building fails\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Putting these at the top causes cord to be built first, and not find libgc.a\n\n# on HP/UX.  There may be a better fix.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "deps/jansson-2.10/CMakeLists.txt" : {
      "ObjectId" : "b239333299f516faa53462593f4d01d9a18a210d",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Notes:\n\n#\n\n# Author: Paul Harris, June 2012\n\n# Additions: Joakim Soderberg, Febuary 2013\n\n#\n\n# Supports: building static/shared, release/debug/etc, can also build html docs\n\n# and some of the tests.\n\n# Note that its designed for out-of-tree builds, so it will not pollute your\n\n# source tree.\n\n#\n\n# TODO 1: Finish implementing tests. api tests are working, but the valgrind\n\n# variants are not flagging problems.\n\n#\n\n# TODO 2: There is a check_exports script that would try and incorporate.\n\n#\n\n# TODO 3: Consolidate version numbers, currently the version number is written\n\n# into: * cmake (here) * autotools (the configure) * source code header files.\n\n# Should not be written directly into header files, autotools/cmake can do\n\n# that job.\n\n#\n\n# Brief intro on how to use cmake:\n\n# > mkdir build (somewhere - we do out-of-tree builds)\n\n# > use cmake, ccmake, or cmake-gui to configure the project. for linux, you\n\n# can only choose one variant: release,debug,etc... and static or shared.\n\n# >> example:\n\n# >> cd build\n\n# >> ccmake -i ../path_to_jansson_dir\n\n# >>  inside, configure your options. press C until there are no lines\n\n#     with * next to them.\n\n# >>  note, I like to configure the 'install' path to ../install, so I get\n\n#     self-contained clean installs I can point other projects to.\n\n# >>  press G to 'generate' the project files.\n\n# >> make (to build the project)\n\n# >> make install\n\n# >> make test (to run the tests, if you enabled them)\n\n#\n\n# Brief description on how it works:\n\n# There is a small heirachy of CMakeLists.txt files which define how the\n\n# project is built.\n\n# Header file detection etc is done, and the results are written into config.h\n\n# and jansson_config.h, which are generated from the corresponding\n\n# config.h.cmake and jansson_config.h.cmake template files.\n\n# The generated header files end up in the build directory - not in\n\n# the source directory.\n\n# The rest is down to the usual make process.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# required for exports? cmake_minimum_required (VERSION 2.8.6)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Options\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This option must match the settings used in your program, in particular if you\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# are linking statically\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Set some nicer output dirs.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Give the debug version a different postfix for windows,\n\n# so both the debug and release version can be built in the\n\n# same build-tree on Windows (MSVC).\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is how I thought it should go\n\n# set (JANSSON_VERSION \"2.3.1\")\n\n# set (JANSSON_SOVERSION 2)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is what is required to match the same numbers as automake's\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for CheckFunctionKeywords\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Turn off Microsofts \"security\" warnings.\n",
        "Line" : 105,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Coverage only works with GCC for a debug build.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This adds coverage arguments to gcc/clang.\n",
        "Line" : 130,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# Check for the int-type includes\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check our 64 bit integer sizes\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check our 32 bit integer sizes\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for ssize_t and SSIZE_T existance.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check for all the variants of strtoll\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Figure out what variant we should use\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# fallback to strtol (32 bit)\n\n# this will set all the required variables\n",
        "Line" : 242,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# if we haven't defined JSON_INT_T, then we have a 64 bit conversion function.\n\n# detect what to use for the 64 bit type.\n\n# Note: I will prefer long long if I can get it, as that is what the automake system aimed for.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Apparently, Borland BCC and MSVC wants I64d,\n\n# Borland BCC could also accept LD\n\n# and gcc wants ldd,\n\n# I am not sure what cygwin will want, so I will assume I64d\n",
        "Line" : 263,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# matches both msvc and cygwin\n",
        "Line" : 268,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# If locale.h and localeconv() are available, define to 1, otherwise to 0.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# check if we have setlocale\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check what the inline keyword is.\n\n# Note that the original JSON_INLINE was always set to just 'inline', so this goes further.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# no inline on this platform\n",
        "Line" : 302,
        "CharPositionInLine" : 3
      },
      "27" : {
        "Text" : "# configure the public config file\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Copy the jansson.h file to the public include folder\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# configure the private config file\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# and tell the source code to include it\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add the lib sources.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# For building Documentation (uses Sphinx)\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 387,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 390,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# CMake could be used to build the conf.py file too,\n\n# eg it could automatically write the version of the program or change the theme.\n\n# if(NOT DEFINED SPHINX_THEME)\n\n#    set(SPHINX_THEME default)\n\n# endif()\n\n#\n\n# if(NOT DEFINED SPHINX_THEME_DIR)\n\n#    set(SPHINX_THEME_DIR)\n\n# endif()\n\n#\n\n# configure_file(\n\n#    \"${CMAKE_CURRENT_SOURCE_DIR}/conf.py.in\"\n\n#    \"${BINARY_BUILD_DIR}/conf.py\"\n\n#    @ONLY)\n",
        "Line" : 393,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# TODO: Add support for all sphinx builders: http://sphinx-doc.org/builders.html\n",
        "Line" : 408,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Add documentation targets.\n",
        "Line" : 410,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# The doc target will build all documentation targets.\n",
        "Line" : 436,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# -q   # Enable for quiet mode\n",
        "Line" : 442,
        "CharPositionInLine" : 12
      },
      "40" : {
        "Text" : "# -c \"${BINARY_BUILD_DIR}\" # enable if using cmake-generated conf.py\n",
        "Line" : 445,
        "CharPositionInLine" : 12
      },
      "41" : {
        "Text" : "# TODO: Add FindValgrind.cmake instead of having a hardcoded path.\n",
        "Line" : 466,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# enable valgrind\n",
        "Line" : 470,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "#\n\n# Test suites.\n\n#\n",
        "Line" : 480,
        "CharPositionInLine" : 3
      },
      "44" : {
        "Text" : "# Doing arithmetic on void pointers is not allowed by Microsofts compiler\n\n# such as secure_malloc and secure_free is doing, so exclude it for now.\n",
        "Line" : 501,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# Helper macro for building and linking a test program.\n",
        "Line" : 507,
        "CharPositionInLine" : 3
      },
      "46" : {
        "Text" : "# Create executables and tests/valgrind tests for API tests.\n",
        "Line" : 514,
        "CharPositionInLine" : 3
      },
      "47" : {
        "Text" : "# Test harness for the suites tests.\n",
        "Line" : 529,
        "CharPositionInLine" : 3
      },
      "48" : {
        "Text" : "# Coverage make target \"make coverage\".\n\n# Name of output directory.\n\n# Name of test runner executable.\n\n# Arguments to the test runner above (make test).\n",
        "Line" : 564,
        "CharPositionInLine" : 33
      },
      "49" : {
        "Text" : "# Enable using \"make check\" just like the autotools project.\n\n# By default cmake creates a target \"make test\"\n",
        "Line" : 575,
        "CharPositionInLine" : 3
      },
      "50" : {
        "Text" : "#\n\n# Installation preparation.\n\n#\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Allow the user to override installation directories.\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Create pkg-conf file.\n\n# (We use the same files as ./configure does, so we\n\n#  have to defined the same variables used there).\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Make sure the paths are absolute.\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Export targets (This is used for other CMake projects to easily find the libraries and include files).\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Generate the config file for the build-tree.\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Generate the config file for the installation tree.\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Calculate the relative directory from the Cmake dir.\n",
        "Line" : 634,
        "CharPositionInLine" : 38
      },
      "58" : {
        "Text" : "# Note the EVENT_CMAKE_DIR is defined in JanssonConfig.cmake.in, \n\n# we escape it here so it's evaluated when it is included instead\n\n# so that the include dirs are given relative to where the \n\n# config file is located.\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Generate version info for both build-tree and install-tree.\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define the public headers.\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#TODO: fix this.\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#\n\n# Install targets.\n\n#\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Windows DLLs\n",
        "Line" : 664,
        "CharPositionInLine" : 71
      },
      "64" : {
        "Text" : "# Install the pkg-config.\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Install the configs.\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Install exports for the install-tree.\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# For use when simply using add_library from a parent project to build jansson.\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 68
    },
    "deps/jansson-2.10/Makefile.am" : {
      "ObjectId" : "0de2ac16d93c2f3a47846a0e638f3c4af2be938c",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# \"make distcheck\" builds the dvi target, so use it to check that the\n\n# documentation is built correctly.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/jansson-2.10/cmake/CheckFunctionKeywords.cmake" : {
      "ObjectId" : "44601fd4e9fa15f0d9a26481d84ebf0662316131",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#      break()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/jansson-2.10/cmake/CodeCoverage.cmake" : {
      "ObjectId" : "402f6366c15d73ae9a6daf323e0e60a98b5dcf21",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Boost Software License - Version 1.0 - August 17th, 2003\n\n#\n\n# Permission is hereby granted, free of charge, to any person or organization\n\n# obtaining a copy of the software and accompanying documentation covered by\n\n# this license (the \"Software\") to use, reproduce, display, distribute,\n\n# execute, and transmit the Software, and to prepare derivative works of the\n\n# Software, and to permit third-parties to whom the Software is furnished to\n\n# do so, all subject to the following:\n\n# \n\n# The copyright notices in the Software and this entire statement, including\n\n# the above license grant, this restriction and the following disclaimer,\n\n# must be included in all copies of the Software, in whole or in part, and\n\n# all derivative works of the Software, unless such copies or derivative\n\n# works are solely in the form of machine-executable object code generated by\n\n# a source language processor.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\n\n# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\n\n# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage: \n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#  \n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors. \n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 97,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 101,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 128,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 139,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 143,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 162,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "deps/jansson-2.10/cmake/Coveralls.cmake" : {
      "ObjectId" : "29221c91739f9bfa6152913b4f069ea9c56a25c4",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 58,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 78,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "deps/jansson-2.10/cmake/CoverallsClear.cmake" : {
      "ObjectId" : "eb68695a2b1fce4ea197f5be588379d13e3c2fb7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/jansson-2.10/cmake/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "0c4c2b0c1569ea36dcec290ef227eac3408c3662",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd) \n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\" \n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Add these git things to the coveralls json.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Branch.\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# #path#to#project#root#subdir#the_file.c.gcov   \n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n# \n\n# Result should be:\n\n# GCOV_FILES = \n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# /path/to/project/root/subdir/the_file.c \n",
        "Line" : 208,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 214,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Loads the gcov file as a list of lines.\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimeter).\n",
        "Line" : 265,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 276,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 282,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 305,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# TODO: Look for LCOV_EXCL_LINE in SOURCE to get rid of false positives.\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 323,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 327,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 330,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 341,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 357,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 361,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "deps/jansson-2.10/cmake/FindSphinx.cmake" : {
      "ObjectId" : "55539d42c6462babd4fdf30691d613998a61a602",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PART B. DOWNLOADING AGREEMENT - LICENSE FROM SBIA WITH RIGHT TO SUBLICENSE (\"SOFTWARE LICENSE\").\n\n#  ------------------------------------------------------------------------------------------------\n\n#\n\n#  1. As used in this Software License, \"you\" means the individual downloading and/or\n\n#     using, reproducing, modifying, displaying and/or distributing the Software and\n\n#     the institution or entity which employs or is otherwise affiliated with such\n\n#     individual in connection therewith. The Section of Biomedical Image Analysis,\n\n#     Department of Radiology at the Universiy of Pennsylvania (\"SBIA\") hereby grants\n\n#     you, with right to sublicense, with respect to SBIA's rights in the software,\n\n#     and data, if any, which is the subject of this Software License (collectively,\n\n#     the \"Software\"), a royalty-free, non-exclusive license to use, reproduce, make\n\n#     derivative works of, display and distribute the Software, provided that:\n\n#     (a) you accept and adhere to all of the terms and conditions of this Software\n\n#     License; (b) in connection with any copy of or sublicense of all or any portion\n\n#     of the Software, all of the terms and conditions in this Software License shall\n\n#     appear in and shall apply to such copy and such sublicense, including without\n\n#     limitation all source and executable forms and on any user documentation,\n\n#     prefaced with the following words: \"All or portions of this licensed product\n\n#     (such portions are the \"Software\") have been obtained under license from the\n\n#     Section of Biomedical Image Analysis, Department of Radiology at the University\n\n#     of Pennsylvania and are subject to the following terms and conditions:\"\n\n#     (c) you preserve and maintain all applicable attributions, copyright notices\n\n#     and licenses included in or applicable to the Software; (d) modified versions\n\n#     of the Software must be clearly identified and marked as such, and must not\n\n#     be misrepresented as being the original Software; and (e) you consider making,\n\n#     but are under no obligation to make, the source code of any of your modifications\n\n#     to the Software freely available to others on an open source basis.\n\n#\n\n#  2. The license granted in this Software License includes without limitation the\n\n#     right to (i) incorporate the Software into proprietary programs (subject to\n\n#     any restrictions applicable to such programs), (ii) add your own copyright\n\n#     statement to your modifications of the Software, and (iii) provide additional\n\n#     or different license terms and conditions in your sublicenses of modifications\n\n#     of the Software; provided that in each case your use, reproduction or\n\n#     distribution of such modifications otherwise complies with the conditions\n\n#     stated in this Software License.\n\n#\n\n#  3. This Software License does not grant any rights with respect to third party\n\n#     software, except those rights that SBIA has been authorized by a third\n\n#     party to grant to you, and accordingly you are solely responsible for\n\n#     (i) obtaining any permissions from third parties that you need to use,\n\n#     reproduce, make derivative works of, display and distribute the Software,\n\n#     and (ii) informing your sublicensees, including without limitation your\n\n#     end-users, of their obligations to secure any such required permissions.\n\n#\n\n#  4. The Software has been designed for research purposes only and has not been\n\n#     reviewed or approved by the Food and Drug Administration or by any other\n\n#     agency. YOU ACKNOWLEDGE AND AGREE THAT CLINICAL APPLICATIONS ARE NEITHER\n\n#     RECOMMENDED NOR ADVISED. Any commercialization of the Software is at the\n\n#     sole risk of the party or parties engaged in such commercialization.\n\n#     You further agree to use, reproduce, make derivative works of, display\n\n#     and distribute the Software in compliance with all applicable governmental\n\n#     laws, regulations and orders, including without limitation those relating\n\n#     to export and import control.\n\n#\n\n#  5. The Software is provided \"AS IS\" and neither SBIA nor any contributor to\n\n#     the software (each a \"Contributor\") shall have any obligation to provide\n\n#     maintenance, support, updates, enhancements or modifications thereto.\n\n#     SBIA AND ALL CONTRIBUTORS SPECIFICALLY DISCLAIM ALL EXPRESS AND IMPLIED\n\n#     WARRANTIES OF ANY KIND INCLUDING, BUT NOT LIMITED TO, ANY WARRANTIES OF\n\n#     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.\n\n#     IN NO EVENT SHALL SBIA OR ANY CONTRIBUTOR BE LIABLE TO ANY PARTY FOR\n\n#     DIRECT, INDIRECT, SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES\n\n#     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY ARISING IN ANY WAY RELATED\n\n#     TO THE SOFTWARE, EVEN IF SBIA OR ANY CONTRIBUTOR HAS BEEN ADVISED OF THE\n\n#     POSSIBILITY OF SUCH DAMAGES. TO THE MAXIMUM EXTENT NOT PROHIBITED BY LAW OR\n\n#     REGULATION, YOU FURTHER ASSUME ALL LIABILITY FOR YOUR USE, REPRODUCTION,\n\n#     MAKING OF DERIVATIVE WORKS, DISPLAY, LICENSE OR DISTRIBUTION OF THE SOFTWARE\n\n#     AND AGREE TO INDEMNIFY AND HOLD HARMLESS SBIA AND ALL CONTRIBUTORS FROM\n\n#     AND AGAINST ANY AND ALL CLAIMS, SUITS, ACTIONS, DEMANDS AND JUDGMENTS ARISING\n\n#     THEREFROM.\n\n#\n\n#  6. None of the names, logos or trademarks of SBIA or any of SBIA's affiliates\n\n#     or any of the Contributors, or any funding agency, may be used to endorse\n\n#     or promote products produced in whole or in part by operation of the Software\n\n#     or derived from or based on the Software without specific prior written\n\n#     permission from the applicable party.\n\n#\n\n#  7. Any use, reproduction or distribution of the Software which is not in accordance\n\n#     with this Software License shall automatically revoke all rights granted to you\n\n#     under this Software License and render Paragraphs 1 and 2 of this Software\n\n#     License null and void.\n\n#\n\n#  8. This Software License does not grant any rights in or to any intellectual\n\n#     property owned by SBIA or any Contributor except those rights expressly\n\n#     granted hereunder.\n\n#\n\n#\n\n#  PART C. MISCELLANEOUS\n\n#  ---------------------\n\n#\n\n#  This Agreement shall be governed by and construed in accordance with the laws\n\n#  of The Commonwealth of Pennsylvania without regard to principles of conflicts\n\n#  of law. This Agreement shall supercede and replace any license terms that you\n\n#  may have agreed to previously with respect to Software from SBIA.\n\n#\n\n##############################################################################\n\n# @file  FindSphinx.cmake\n\n# @brief Find Sphinx documentation build tools.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_DIR @endtp\n\n#     <td>Installation directory of Sphinx tools. Can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_DIR @endtp\n\n#     <td>Alternative environment variable for @c Sphinx_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_FIND_COMPONENTS @endtp\n\n#     <td>Sphinx build tools to look for, i.e., 'apidoc' and/or 'build'.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_FOUND @endtp\n\n#     <td>Whether all or only the requested Sphinx build tools were found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_FOUND @endtp\n\n#     <td>Alias for @c Sphinx_FOUND.<td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_EXECUTABLE @endtp\n\n#     <td>Non-cached alias for @c Sphinx-build_EXECUTABLE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_EXECUTABLE @endtp\n\n#     <td>Python executable used to run sphinx-build. This is either the\n\n#         by default found Python interpreter or a specific version as\n\n#         specified by the shebang (#!) of the sphinx-build script.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_OPTIONS @endtp\n\n#     <td>A list of Python options extracted from the shebang (#!) of the\n\n#         sphinx-build script. The -E option is added by this module\n\n#         if the Python executable is not the system default to avoid\n\n#         problems with a differing setting of the @c PYTHONHOME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-build_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-build tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-apidoc_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-apidoc tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_STRING @endtp\n\n#     <td>Sphinx version found e.g. 1.1.2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MAJOR @endtp\n\n#     <td>Sphinx major version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MINOR @endtp\n\n#     <td>Sphinx minor version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_PATCH @endtp\n\n#     <td>Sphinx patch version found e.g. 2.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# default components to look for\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find components, i.e., build tools\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Python executable used by Sphinx\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract python executable from shebang of sphinx-build\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# does not match \"#!/usr/bin/env python\" !\n",
        "Line" : 225,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# this is done to avoid problems with multiple Python versions being installed\n\n# remember: CMake command if(STR EQUAL STR) is bad and may cause many troubles !\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Sphinx version\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# intentionally use invalid -h option here as the help that is shown then\n\n# will include the Sphinx version information\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The sphinx version can also contain a \"b\" instead of the last dot.\n\n# For example \"Sphinx v1.2b1\" so we cannot just split on \".\"\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# v1.2.0 -> v1.2\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# compatibility with FindPythonInterp.cmake and FindPerl.cmake\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set SPHINX_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  VERSION_VAR # This isn't available until CMake 2.8.8 so don't use it.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set Sphinx_DIR\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "deps/jansson-2.10/cmake/jansson_config.h.cmake" : {
      "ObjectId" : "f703dcb052178e84e457365e1a3fda165ef99896",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * Copyright (c) 2010-2016 Petri Lehtinen <petri@digip.org>\n *\n * Jansson is free software; you can redistribute it and/or modify\n * it under the terms of the MIT license. See LICENSE for details.\n *\n *\n * This file specifies a part of the site-specific configuration for\n * Jansson, namely those things that affect the public API in\n * jansson.h.\n *\n * The CMake system will generate the jansson_config.h file and\n * copy it to the build and install directories.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define this so that we can disable scattered automake configuration in source files */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Note: when using cmake, JSON_INTEGER_IS_LONG_LONG is not defined nor used,\n * as we will also check for __int64 etc types.\n * (the definition was used in the automake system) */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Bring in the cmake-detected defines */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Include our standard type header for the integer typedef */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* If your compiler supports the inline keyword in C, JSON_INLINE is\n   defined to `inline', otherwise empty. In C++, the inline is always\n   supported. */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* If locale.h and localeconv() are available, define to 1, otherwise to 0. */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Maximum recursion depth for parsing JSON input.\n   This limits the depth of e.g. array-within-array constructions. */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/jansson-2.10/cmake/jansson_private_config.h.cmake" : {
      "ObjectId" : "b7c4514974eaab0451a53e05d0bbe5bc78d48a6c",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "deps/jansson-2.10/doc/Makefile.am" : {
      "ObjectId" : "5069623fa39866121748b7d58f893daa269b6eb0",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson-2.10/src/Makefile.am" : {
      "ObjectId" : "5516927da3c3bda9e993e9f2556cad857203278c",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson-2.10/test/Makefile.am" : {
      "ObjectId" : "86d1614e06a88ed49c42678ca59745cd63022d11",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson-2.10/test/bin/Makefile.am" : {
      "ObjectId" : "63b6dce7e259f62ab5bf85be0c5165ef522886c9",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 4,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "deps/jansson-2.10/test/suites/Makefile.am" : {
      "ObjectId" : "a53eb07f13c81c52b6c73c1ba26b1be83ef61e38",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson-2.10/test/suites/api/Makefile.am" : {
      "ObjectId" : "1dbdd2b8968f9abb8d9a5c88c4b67bd2220299d7",
      "LastModified" : "2018-11-17T20:51:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 33,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 97,
    "CMAKESOURCE" : 2,
    "QMAKE" : 50,
    "MAKEFILE" : 24,
    "AUTOMAKE" : 10
  },
  "ElapsedTime" : 5111
}