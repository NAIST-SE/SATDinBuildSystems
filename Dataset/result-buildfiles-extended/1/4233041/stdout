{
  "Repository" : "4233041",
  "Revision" : "HEAD",
  "ObjectId" : "051771c38f801682c315b84fdd1d9ec8a3c71340",
  "CommitTime" : "2017-11-27T17:43:51Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "975b2f324db587a64b9de73cfc9d31ffd2c2899b",
      "LastModified" : "2015-02-27T03:59:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: Policies have to be repeated after every minimum cmake version declaration\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Accept new policy related to automatically linking Qt apps to qtmain.lib on Windows\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Accept policy to ignore COMPILE_DEFINITIONS_<CONFIG> properties of targets and directories\n\n# (Instead, use generator expressions for configuration-dependent compile definitions)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Accept policy: use rpath on Mac OS X by default\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Mac OS X: rpath handling\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If only building documentation, tell CMake\n\n# not to check for any language compilers.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "df4712e94c9064108d4462ba1e0ae7e488094ab7",
      "LastModified" : "2013-11-16T11:29:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake-modules/CMakeFindFrameworks.cmake" : {
      "ObjectId" : "22f737ef5fc5b11d9b003950254030ab396211a7",
      "LastModified" : "2010-01-24T20:52:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - helper module to find OSX frameworks\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake-modules/FindALSA.cmake" : {
      "ObjectId" : "50b99416bcdb24d65846bd34275951ce8bfd7b43",
      "LastModified" : "2008-08-12T06:31:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shamelessly copied from:\n\n# http://code.google.com/p/fqterm/source/browse/trunk/cmake/FindALSA.cmake?r=606\n\n#\n\n# Find ALSA for linux platforms\n\n# by etnlegent@newsmth\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake-modules/FindDirectX.cmake" : {
      "ObjectId" : "d0e64ebe82fca9044c70d2eeefe2c30addd77c1f",
      "LastModified" : "2013-09-27T06:27:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake-modules/FindGLUT.cmake" : {
      "ObjectId" : "12e8780fca734d653a91ac8d1120611907babc25",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find glut library and include files\n\n#  GLUT_INCLUDE_DIR, where to find GL/glut.h, etc.\n\n#  GLUT_LIBRARIES, the libraries to link against\n\n#  GLUT_FOUND, If false, do not try to use GLUT.\n\n# Also defined, but not for general use are:\n\n#  GLUT_glut_LIBRARY = the full path to the glut library.\n\n#  GLUT_Xmu_LIBRARY  = the full path to the Xmu library.\n\n#  GLUT_Xi_LIBRARY   = the full path to the Xi Library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These values for Apple could probably do with improvement.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindGLib.cmake" : {
      "ObjectId" : "4851c747284d927fba94aad4c091ce225de61dfa",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib-2.0 (with gobject)\n\n# Once done, this will define\n\n#\n\n#  Glib_FOUND - system has Glib\n\n#  Glib_INCLUDE_DIRS - the Glib include directories\n\n#  Glib_LIBRARIES - link these to use Glib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake-modules/FindGObject.cmake" : {
      "ObjectId" : "1ad834709438abbccdf28eb54a565db58afd99a1",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GObject\n\n# Once done this will define\n\n#\n\n#  GOBJECT_FOUND - system has GObject\n\n#  GOBJECT_INCLUDE_DIR - the GObject include directory\n\n#  GOBJECT_LIBRARIES - the libraries needed to use GObject\n\n#  GOBJECT_DEFINITIONS - Compiler switches required for using GObject\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Tim Beaulen <tbscope@gmail.com>\n\n# Copyright (c) 2008 Helio Chissini de Castro, <helio@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake-modules/FindGStreamer-App.cmake" : {
      "ObjectId" : "19b235f8bcb68cb1d77566effa469333db8d3b24",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GStreamer-App\n\n# Once done, this will define\n\n#\n\n#  GStreamer-App_FOUND - system has GStreamer\n\n#  GStreamer-App_INCLUDE_DIRS - the GStreamer include directories\n\n#  GStreamer-App_LIBRARIES - link these to use GStreamer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake-modules/FindGStreamer-Base.cmake" : {
      "ObjectId" : "2a008bbd7fdc3c9a151c571f75ca08cae2cd048f",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GStreamer-Base\n\n# Once done, this will define\n\n#\n\n#  GStreamer-Base_FOUND - system has GStreamer-Base\n\n#  GStreamer-Base_INCLUDE_DIRS - the GStreamer-Base include directories\n\n#  GStreamer-Base_LIBRARIES - link these to use GStreamer-Base\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake-modules/FindGStreamer.cmake" : {
      "ObjectId" : "bddda8eb31d19428069893f9fffc4d5858b8f726",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done, this will define\n\n#\n\n#  GStreamer_FOUND - system has GStreamer\n\n#  GStreamer_INCLUDE_DIRS - the GStreamer include directories\n\n#  GStreamer_LIBRARIES - link these to use GStreamer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake-modules/FindJack.cmake" : {
      "ObjectId" : "ddc88dc73ddb3b1e8d1665ed44444c5ea9f351b2",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find JACK\n\n# This will define the following variables:\n\n#\n\n#  JACK_FOUND - Whether Jack was found.\n\n#  JACK_INCLUDE_DIRS - Jack include directories.\n\n#  JACK_LIBRARIES - Jack libraries.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the JACK_INCLUDE_DIRS and JACK_LIBRARIES variables only in the advanced view\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake-modules/FindLibXml2.cmake" : {
      "ObjectId" : "d3d1b04eef20c0ae99d261f2997ffd6a9918d123",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the LibXml2 xml processing library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Once done this will define\n\n#\n\n#  LIBXML2_FOUND - System has LibXml2\n\n#  LIBXML2_INCLUDE_DIR - The LibXml2 include directory\n\n#  LIBXML2_LIBRARIES - The libraries needed to use LibXml2\n\n#  LIBXML2_DEFINITIONS - Compiler switches required for using LibXml2\n\n#  LIBXML2_XMLLINT_EXECUTABLE - The XML checking tool xmllint coming with LibXml2\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# for backwards compat. with KDE 4.0.x:\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBXML2_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "cmake-modules/FindMatlab.cmake" : {
      "ObjectId" : "633c4f7669ff2b0dcadacda37018da64fe875a96",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - this module looks for Matlab\n\n# Defines:\n\n#  MATLAB_INCLUDE_DIR: include path for mex.h, engine.h\n\n#  MATLAB_LIBRARIES:   required libraries: libmex, etc\n\n#  MATLAB_MEX_LIBRARY: path to libmex.lib\n\n#  MATLAB_MX_LIBRARY:  path to libmx.lib\n\n#  MATLAB_ENG_LIBRARY: path to libeng.lib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume people are generally using 7.1,\n\n# if using 7.0 need to link to: ../extern/lib/win32/microsoft/msvc70\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Same here, there are also: bcc50 and bcc51 directories\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#  FIND_LIBRARY(MATLAB_ICUDATA_LIBRARY\n\n#    icudata\n\n#\t\tPATHS\t${MATLAB_ROOT}\n\n#\t  NO_DEFAULT_PATH\n\n#\n\n#    )\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  FIND_LIBRARY(MATLAB_ICUUC_LIBRARY\n\n#    icuuc\n\n#\t\tPATHS\t${MATLAB_ROOT}\n\n#\t  NO_DEFAULT_PATH\n\n#\n\n#    )\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  FIND_LIBRARY(MATLAB_ICUI18N_LIBRARY\n\n#    icui18n\n\n#\t\tPATHS\t${MATLAB_ROOT}\n\n#\t  NO_DEFAULT_PATH\n\n#\n\n#    )\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  FIND_LIBRARY(MATLAB_ICUIO_LIBRARY\n\n#    icuio\n\n#\t\tPATHS\t${MATLAB_ROOT}\n\n#\t  NO_DEFAULT_PATH\n\n#\n\n#    )\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  FIND_LIBRARY(MATLAB_Z_LIBRARY\n\n#    z\n\n#\t\tPATHS\t${MATLAB_ROOT}\n\n#\t  NO_DEFAULT_PATH\n\n#\n\n#    )\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Regular x86\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# AMD64:\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is common to UNIX and Win32:\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# IF(MATLAB_INCLUDE_DIR AND MATLAB_LIBRARIES)\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ENDIF(MATLAB_INCLUDE_DIR AND MATLAB_LIBRARIES)\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake-modules/FindMaxSDK.cmake" : {
      "ObjectId" : "6d8d8e3fb96beb2a4fa5c6d0401ecd589e7caecd",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clean all variables first!!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Just to test if Max/MSP found!!\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find frameworks on MacOSX\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake-modules/FindOSS.cmake" : {
      "ObjectId" : "0779c9b46cdf6e26d9e18baaf5aa9f22cffcb7e1",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# shamelessly copied from:\n\n# http://code.google.com/p/fqterm/source/browse/trunk/cmake/FindOSS.cmake?r=606\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake-modules/FindOggVorbis.cmake" : {
      "ObjectId" : "021db11318f62b5416dfededcb12ac528cbcfbc0",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### shamelessly copied from:\n\n###  http://websvn.kde.org/*checkout*/trunk/KDE/kdelibs/cmake/modules/FindOggVorbis.cmake?revision=735587\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the OggVorbis libraries\n\n# Once done this will define\n\n#\n\n#  OGGVORBIS_FOUND - system has OggVorbis\n\n#  OGGVORBIS_VERSION - set either to 1 or 2\n\n#  OGG_INCLUDE_DIR - the OggVorbis include directory\n\n#  VORBIS_INCLUDE_DIR - the OggVorbis include directory\n\n#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis\n\n#  OGG_LIBRARY         - The Ogg library\n\n#  VORBIS_LIBRARY      - The Vorbis library\n\n#  VORBISFILE_LIBRARY  - The VorbisFile library\n\n#  VORBISENC_LIBRARY   - The VorbisEnc library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, Richard Laerkaeng, <richard@goteborg.utfors.se>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)\n\n#check_library_exists(ogg ogg_page_version \"\" HAVE_LIBOGG)\n\n#check_library_exists(vorbis vorbis_info_init \"\" HAVE_LIBVORBIS)\n\n#check_library_exists(vorbisfile ov_open \"\" HAVE_LIBVORBISFILE)\n\n#check_library_exists(vorbisenc vorbis_info_clear \"\" HAVE_LIBVORBISENC)\n\n#check_library_exists(vorbis vorbis_bitrate_addblock \"\" HAVE_LIBVORBISENC2)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis found\")\n\n#    set (VORBIS_LIBS \"-lvorbis -logg\")\n\n#    set (VORBISFILE_LIBS \"-lvorbisfile\")\n\n#    set (VORBISENC_LIBS \"-lvorbisenc\")\n\n#    set (OGGVORBIS_FOUND TRUE)\n\n#    if (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 2)\n\n#    else (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 1)\n\n#    endif (HAVE_LIBVORBISENC2)\n\n#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis not found\")\n\n#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake-modules/FindOpenGL.cmake" : {
      "ObjectId" : "23e5c58d35cb12f6fe08ad6a6de7f47b47bc5282",
      "LastModified" : "2013-11-16T11:29:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL\n\n# Once done this will define\n\n#  \n\n#  OPENGL_FOUND        - system has OpenGL\n\n#  OPENGL_XMESA_FOUND  - system has XMESA\n\n#  OPENGL_GLU_FOUND    - system has GLU\n\n#  OPENGL_INCLUDE_DIR  - the GL include directory\n\n#  OPENGL_LIBRARIES    - Link these to use OpenGL and GLU\n\n#   \n\n# If you want to use just GL you can use these values\n\n#  OPENGL_gl_LIBRARY   - Path to OpenGL Library\n\n#  OPENGL_glu_LIBRARY  - Path to GLU Library\n\n#  \n\n# On OSX default to using the framework version of opengl\n\n# People will have to change the cache values of OPENGL_glu_LIBRARY \n\n# and OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The first line below is to make sure that the proper headers\n\n# are used on a Linux machine with the NVidia drivers installed.\n\n# They replace Mesa with NVidia's own library but normally do not\n\n# install headers and that causes the linking to\n\n# fail since the compiler finds the Mesa headers but NVidia's library.\n\n# Make sure the NVIDIA directory comes BEFORE the others.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't \n\n# think this is always true.\n\n# It's not true on OSX.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake-modules/FindPNG.cmake" : {
      "ObjectId" : "d8c4d19edb2a33e78e7c289ead08ff48d0e9c889",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the native PNG includes and library\n\n#\n\n# This module defines\n\n#  PNG_INCLUDE_DIR, where to find png.h, etc.\n\n#  PNG_LIBRARIES, the libraries to link against to use PNG.\n\n#  PNG_DEFINITIONS - You should ADD_DEFINITONS(${PNG_DEFINITIONS}) before compiling code that includes png library files.\n\n#  PNG_FOUND, If false, do not try to use PNG. Aalso defined, but not for general use are\n\n#  PNG_LIBRARY, where to find the PNG library.\n\n#  None of the above will be defined unles zlib can be found.\n\n#  PNG depends on Zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find zlib\n\n# Find the native ZLIB includes and library\n\n#\n\n#  ZLIB_INCLUDE_DIR - where to find zlib.h, etc.\n\n#  ZLIB_LIBRARIES   - List of libraries when using zlib.\n\n#  ZLIB_FOUND       - True if zlib found.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# png.h includes zlib.h. Sigh.\n",
        "Line" : 61,
        "CharPositionInLine" : 7
      },
      "5" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#SET(PNG_INCLUDE_DIR \"/opt/local/include\" )\n",
        "Line" : 79,
        "CharPositionInLine" : 5
      },
      "7" : {
        "Text" : "#SET(PNG_LIBRARY_STATIC \"/opt/local/lib/libpng12.a\")\n",
        "Line" : 81,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 8
    },
    "cmake-modules/FindPd.cmake" : {
      "ObjectId" : "510eaf0b3fd179c912c890c01c15344c6447b542",
      "LastModified" : "2013-07-20T00:09:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#pd.lib is needed in Win32\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake-modules/FindPythonInterp.cmake" : {
      "ObjectId" : "b8dc9028f3e897cd3950bf4690c703abe6fc10c7",
      "LastModified" : "2013-11-16T11:29:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python interpreter\n\n# This module finds if Python interpreter is installed and determines where the\n\n# executables are. This code sets the following variables:\n\n#\n\n#  PythonInterp_FOUND - Was the Python executable found\n\n#  PythonInterp_EXECUTABLE - path to the Python interpreter\n\n#  PythonInterp_VERSION - version of the Python interpreter\n\n#\n\n#  PYTHON_EXECUTABLE  - Same as PythonInterp_EXECUTABLE, kept for compatibility\n\n#  PYTHONINTERP_FOUND - Same as PythonInterp_FOUND, kept for compatibility\n\n#  PYTHON_MODULES_DIR - Python modules installation directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Find default Python module installation directory.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindPythonLibs.cmake" : {
      "ObjectId" : "0fda26c9238851ca1a93e311e91ba9d666bc107e",
      "LastModified" : "2014-07-18T04:22:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#\n\n#  PYTHON_LIBRARIES     = path to the python library\n\n#  PYTHON_LIBRARIES_DEBUG = path to the python debug library\n\n#  PYTHON_INCLUDE_PATH  = path to where Python.h is found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PYTHON_VERSION\n",
        "Line" : 77,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : "# Python Should be built and installed as a Framework on OSX\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If a framework has been selected for the include path,\n\n# make sure \"-framework\" is used to link it.\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake-modules/FindSndfile.cmake" : {
      "ObjectId" : "f7e1fe80ab595c26ed1d989f614068af355a3f51",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake-modules/FindVamp.cmake" : {
      "ObjectId" : "70b60f1d7c1c217c0de2454552b98404dc650f8e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake-modules/FindZLIB.cmake" : {
      "ObjectId" : "23ea93726532fec2d6efb4413ce2830d1b18ee29",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find zlib\n\n# Find the native ZLIB includes and library\n\n#\n\n#  ZLIB_INCLUDE_DIR - where to find zlib.h, etc.\n\n#  ZLIB_LIBRARIES   - List of libraries when using zlib.\n\n#  ZLIB_FOUND       - True if zlib found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake-modules/Findlame.cmake" : {
      "ObjectId" : "528c8dfbc1fb7139c9b282402adafea3e80594e4",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake-modules/Findmad.cmake" : {
      "ObjectId" : "dcfc1a81a51781d1a0563ed21863666d782cdd31",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake-modules/LibFindMacros.cmake" : {
      "ObjectId" : "ff9233a6c821be3f8dedf63632d1284951df5d7c",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake-modules/marsyas-bundle.cmake" : {
      "ObjectId" : "331bb47774d00cae60ac3cbabfc5f3b159985d08",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake-modules/marsyas-detect.cmake" : {
      "ObjectId" : "43fdb5bcd52e57bc053b2ea8c304c4932e69ab59",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# If you add a #define for .cpp code, make sure you modify\n\n#    src/config.h.in\n\n# as well!\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### DETECT MAIN PACKAGES\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### DETECT OPTIONAL PACKAGES\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# workaround for broken FindMatlab.cmake\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TODO\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# TODO\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# TODO\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# find_package(png REQUIRED)\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake-modules/marsyas-includes.cmake" : {
      "ObjectId" : "4bfeb203fdd56d323091b726f9d3c38dc489f5af",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## OS-specific\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The preprocessor definitions like \"__MACOSX_CORE__\" or \"__LINUX_JACK__\"\n\n# are required for building RtAudio\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## setup Marsyas includes\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## from user options\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## basic library includes\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#include_directories(${CMAKE_SOURCE_DIR}/src/otherlibs/liblinear/)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake-modules/marsyas-options.cmake" : {
      "ObjectId" : "bd6f6ff290e90c7820841828769f215afc7a7c8f",
      "LastModified" : "2016-01-22T00:16:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# If you add a #define for .cpp code, make sure you modify\n\n#    src/config.h.in\n\n# as well!\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\n\n# SET( CMAKE_BUILD_TYPE \"\" CACHE STRING\n\n#     \"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel Profile.\"\n\n#     FORCE )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tSET(CMAKE_CXX_FLAGS \"-Wall -D_GLIBCXX_DEBUG\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### USER OPTIONS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Detect whether compiler version supports C++11\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Apple has own derived Clang, with different versioning\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "## OPTIONAL CODE\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## CODE MESSAGES\n\n#mark_as_advanced (MARSYAS_PROFILING)\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## STL DEBUGGING\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## logging stuff\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## using other software\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#option(WITH_QGL \"Enable qglviewer (Qt-based OpenGL viewer)\" OFF)\n\n#option(WITH_READLINE \"Readline functionality for Marsyas Scripting\n\n#Language (MSL)\" OFF)\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## SWIG sub-options\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set(MARSYAS_ASSERTS ON CACHE BOOL \"\" FORCE)\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check option compatibility\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake-modules/marsyas-oslibs.cmake" : {
      "ObjectId" : "076f9841857eb1e489b0cbac531d2a6558723a57",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## setup OS_LIBS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No libraries for OSS\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: insert ASIO library here!\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "cmake-modules/marsyas-package.cmake" : {
      "ObjectId" : "0eab48433432dc25e9666132daf0c9090a8c514e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(CPACK_PACKAGE_DESCRIPTION_FILE\n\n#\"${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#configure_file(\"${CMAKE_SOURCE_DIR}/COPYING\" \"licence.txt\" COPYONLY)\n\n#set(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_BINARY_DIR}/licence.txt\")\n\n#SET(CPACK_GENERATOR \"WIX\")\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake-modules/marsyas-testing.cmake" : {
      "ObjectId" : "c631dacad6097b882b99d6d010362736f292a9d0",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module helps writing CTest scripts for Marsyas.\n\n#\n\n# Instructions for use in a CTest script:\n\n#\n\n# 1. Set global parameters by setting CTest variables:\n\n#    CTEST_SITE = The name of the machine. Will appear on CDash.\n\n#    CTEST_SOURCE_DIRECTORY = Marsyas source directory.\n\n#    CTEST_BINARY_DIRECTORY = Desired build directory.\n\n#    CTEST_CMAKE_GENERATOR = CMake generator (e.g. \"Unix Makefiles\", \"Visual Studio 12 Win64\")\n\n#    CTEST_CONFIGURATION_TYPE = CMake configuration (e.g. \"Debug\")\n\n#\n\n# 2. Include this module\n\n#\n\n# 3. Use the marsyas_test_experimental function for each test\n\n#    using a different set of CMake options:\n\n#\n\n#    marsyas_test_experimental(name branch options)\n\n#    * name = Test name. Will appear on CDash\n\n#    * branch = Git branch to test (does not work yet, always uses current branch)\n\n#    * options = A list of CMake options, e.g. \"-DMARSYAS_AUDIOIO=OFF\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make directories absolute, else it can confuse some commands:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/utilities.cmake" : {
      "ObjectId" : "1af3fb56d1aa1bc423ed0d89cd3efe94ba36a124",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "662b67b070b446e6ea3c1d2756acddfb7d8b633c",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## find required programs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## prep\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ugly, but works\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ugly, but works\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## build docs\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doc/examples/Qt4-tutorial/tutorial.pro" : {
      "ObjectId" : "d06bc56d9cd30ed68b0ae55a474eaae4934f78ee",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "###  your files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### if running inside the source tree\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### if installed elsewhere\n\n#MARSYAS_INSTALL_DIR = /usr/local\n\n#MARSYAS_INSTALL_DIR = ${HOME}/usr/\n\n#INCLUDEPATH += $$MARSYAS_INSTALL_DIR/marsyas/\n\n#LIBPATH += $$MARSYAS_INSTALL_DIR/lib/\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### basic OS stuff; do not change!\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "3c53feec777911944ac076e2a2aed2f97e80b621",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## basic CMAKE vars\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## find OS\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for testing\n\n#MESSAGE( STATUS \"CMAKE_SYSTEM: \" ${CMAKE_SYSTEM} )\n\n#MESSAGE( STATUS \"MARSYAS_OPERATION_SYSTEM: LINUX \" ${MARSYAS_LINUX})\n\n#MESSAGE( STATUS \"MARSYAS_OPERATION_SYSTEM: OSX \" ${MARSYAS_MACOSX})\n\n#MESSAGE( STATUS \"MARSYAS_OPERATION_SYSTEM: WIN32 \" ${MARSYAS_WIN32})\n\n#MESSAGE( STATUS \"MARSYAS_OPERATION_SYSTEM: MINGW \" ${MARSYAS_MINGW})\n\n#MESSAGE( STATUS \"MARSYAS_OPERATION_SYSTEM: CYGWIN \" ${MARSYAS_CYGWIN})\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## user options\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## detect packages\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## general setup\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include current directory, so that include paths of form <marsyas/...>\n\n# work just like when installed.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## CONFIG.H\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## oops, don't install this!  -gp\n\n#install(FILES ${CMAKE_BINARY_DIR}/config.h DESTINATION include/marsyas)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## setup includes\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## setup oslibs\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## next level\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add_subdirectory(mvamp) # Currently does not compile.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "## tests, for verification\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## bundling\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## 'fixup_bundle' only needs one executable in a directory to fix up all the siblings.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "## packaging\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/Qt4Apps/CMakeLists.txt" : {
      "ObjectId" : "f5845000ba029df8ae02ab9ac0b670c22d117909",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## global includes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## define macro for Qt4 apps\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not install on Mac OS because of absolute paths to Qt dependencies\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## build static lib and apps\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/Qt4Apps/MarGrid/CMakeLists.txt" : {
      "ObjectId" : "d0b9b9f5a9c224cf56455ab167df30b3e499c3aa",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/CMakeLists.txt" : {
      "ObjectId" : "16f3bf5cbd8da39d05f2af0bef888f5d1c3df476",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## BUILD MACRO\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## build apps\n\n## in docs -gp\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_subdirectory(msl) # NOT MULTIPLARTFORM (only UNIX)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## EVALUATION PROJECTS\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disabled due to use of deprecated functionality of Delta MarSystem:\n\n#add_subdirectory(mirex2009_tsunoo)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## not in docs; must edit tools.texi   -gp\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/apps/WHaSp/CMakeLists.txt" : {
      "ObjectId" : "64812829e2d53449f8a7ef79876c5453761aaf42",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/aim/CMakeLists.txt" : {
      "ObjectId" : "32f5f4c6233759a1f745b935683c44dd9d2557ae",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/audioCompare/CMakeLists.txt" : {
      "ObjectId" : "38ffbf5d1b23ba709a2e82b4db3f9a214922a43e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/bextract/CMakeLists.txt" : {
      "ObjectId" : "27baaeb5f4c091c3e7d68f6177fb2cd77190fc32",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/carfac/CMakeLists.txt" : {
      "ObjectId" : "2ed7d64b6fa2e8e5838d40037dbab9ce0fe5454d",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/debugger/CMakeLists.txt" : {
      "ObjectId" : "76045b03778252e1551b44714249c23c3fab9482",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/helloWorld/CMakeLists.txt" : {
      "ObjectId" : "52c7cd5fcc9e5c09aab7e95e08d62c3327abe6d9",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/helloglut/CMakeLists.txt" : {
      "ObjectId" : "a20d164c45118d50fac381476de91e8c01a5e41f",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/ibt/CMakeLists.txt" : {
      "ObjectId" : "0cc67d882a109e7be2f09a633de5bbcf4247b8dd",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/info/CMakeLists.txt" : {
      "ObjectId" : "9b46d5832c112650766c5ba4a08f2cf27591d9d9",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/kea/CMakeLists.txt" : {
      "ObjectId" : "e74867b2ed282e649d1bacf583d4511d5b38b518",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/latency/CMakeLists.txt" : {
      "ObjectId" : "4ed0ece1a4606662339ed63c908bba442a251a51",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/mirex2008/CMakeLists.txt" : {
      "ObjectId" : "d8e847ff4c5bb84d0a93cc45f89f4e060f849276",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/mirex2009_tsunoo/CMakeLists.txt" : {
      "ObjectId" : "bcbd9a44d19936c08e884c5b52a4b744e74c813f",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/mirex2010/CMakeLists.txt" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/mkcollection/CMakeLists.txt" : {
      "ObjectId" : "8ca16519857482f5b02efed0fa228471960efd0e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/msl/CMakeLists.txt" : {
      "ObjectId" : "0d84f5f221d132f643d85d4857b3d739f33fd13e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/mudbox/CMakeLists.txt" : {
      "ObjectId" : "6cd7e8c82ba5fc56598af2b721f8649205ba47ee",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/nextract/CMakeLists.txt" : {
      "ObjectId" : "322d9d8a37cc7396edcec3b957be0673ee43552f",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/onsets/CMakeLists.txt" : {
      "ObjectId" : "76cd2f7847f59d04b0df2b91b4363cb81776c7a4",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/openmir/CMakeLists.txt" : {
      "ObjectId" : "ec57a7c182391700237ef539701c6d767aaae8a0",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/orcarecord/CMakeLists.txt" : {
      "ObjectId" : "f1228616aa8d07cf47bc145bf768c8a804707d32",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/peakClustering/CMakeLists.txt" : {
      "ObjectId" : "fe8d0579bce09bd574c508230a2dcb1e77a6f16a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/peakClustering2/CMakeLists.txt" : {
      "ObjectId" : "796dcc26f7b8bd3d14e45a596755dcf91c1c715e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/peakClusteringEval/CMakeLists.txt" : {
      "ObjectId" : "c84a172335a538418908d900ff5ec87d030461b3",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/peakSynth/CMakeLists.txt" : {
      "ObjectId" : "aebf490e849aa4f75940163ede7c2add2604cd01",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/phasevocoder/CMakeLists.txt" : {
      "ObjectId" : "fdb968100512338435c9b2c20f39f33c0f945b35",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/pitchdtw/CMakeLists.txt" : {
      "ObjectId" : "b6e7bce4a768af5fd92287568a253cd1646b53e5",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/pitchextract/CMakeLists.txt" : {
      "ObjectId" : "3b33ee4c18ff5c53e74c4ddeb4cb2bf8af2ab0ad",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/record/CMakeLists.txt" : {
      "ObjectId" : "334f0850852b72efc30d5d2db880d94968e9c38a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/rhythmMap/CMakeLists.txt" : {
      "ObjectId" : "64ab40958b0a81ec76d255907d786aede1a6d07e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/runner/CMakeLists.txt" : {
      "ObjectId" : "3f55c8a29bc4e5010d55307e0261cb53c3659225",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/script_tools/CMakeLists.txt" : {
      "ObjectId" : "0f2c8a9ef1fc8eda502a3afe326a015bb31e7e7e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/sfinfo/CMakeLists.txt" : {
      "ObjectId" : "8c95f4a7211fa0027d230bb91cf7b83c193aa380",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/sfplay/CMakeLists.txt" : {
      "ObjectId" : "ad770d05dc1bfd2ac1a75a38656717fd7f1bc313",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/sfplugin/CMakeLists.txt" : {
      "ObjectId" : "23fd2463f38e40fbf9ebf98fd0c968dc7661e655",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/sound2png/CMakeLists.txt" : {
      "ObjectId" : "382bde1e29b1bcbdcb0fc3df96bf7e7d67630ee2",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/sound2sound/CMakeLists.txt" : {
      "ObjectId" : "e155521555bb094e74d411819a1921451702ce6a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/speakerSeg/CMakeLists.txt" : {
      "ObjectId" : "63ab06669bebfb223cacd31396db97fbc879a01a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/tempo/CMakeLists.txt" : {
      "ObjectId" : "72aec7990c61a573fdb48a4f65a3fdef50e0e838",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/virtualsensor/CMakeLists.txt" : {
      "ObjectId" : "c304b51085dee488ca73ba2ff32abecf8e5f477e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/wreckBeach/CMakeLists.txt" : {
      "ObjectId" : "e433c0f4344e5580626de602d72ebc94add5607f",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/django/birdsong/public_html/src/Makefile" : {
      "ObjectId" : "a41f7339a802f621ba5358b33b996bbe101d0d2c",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/marsyas/CMakeLists.txt" : {
      "ObjectId" : "561d5bd557edccac174607988cccf9f5abcaba08",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## OTHERLIBS\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tlist(APPEND Marsyas_SOURCES MATLABengine.cpp)\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## DEFINE TARGET\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## LINK\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## INSTALL\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXME: Install headers for MarSystem subclasses\n\n# after they are cleaned-up and good for public.\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/marsyas_max-msp/CMakeLists.txt" : {
      "ObjectId" : "f1379a7e4b64d35a3428a8aced7e22cc439678f4",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Can't define target with ~ in MacOSX -> Best alternative \"ibt~ \"#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Windows we need to include module definition (.def) file as well\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (for now) only works on the static version of Marsyas\n\n# we need to link to that specific archive library. \n\n# Also linking some additional libs/frameworks\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TESTED ON MAC/OSX (10.5.8) -> FOR XCODE ONLY!!! (tested on Xcode3.0) -> FOR i386arch (32bits) ONLY (Max/MSP only runs at 32bits, despite the OS architecture)\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#include_directories(/Developer/Headers/FlatCarbon)\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#link static Marsyas lib\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#link audio/midi and XCode carbon frameworks\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Pre-processor defines\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "## LINKING with MaxSDK libs\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Max/MSP External specifications for XCode ONLY\n\n# Define Mach-O Type to Bundle\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Define external extension as .mxo\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# TESTED ON WINDOWS (Windows7_64bits) -> FOR i386arch (32bits) ONLY (Max/MSP only runs at 32bits, despite the OS architecture)\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#Pre-processor defines\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Define external extension as .mxe\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## LINKING with MaxSDK libs\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#display warning if Marsyas not in STATIC mode (only works if statically linked to Marsyas lib)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/marsyas_pd/CMakeLists.txt" : {
      "ObjectId" : "02eb7f68c006aaa96abe8fcc2f28ce77c5a015f4",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include for all platforms\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In case we build the static version of Marsyas, we need to link\n\n# to that specific archive library. Also linking some additional libs/frameworks\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cmake knows the location of the libraries it builds\n\n# the search path to the dynamic lib will automatically be added\n\n# maryas will result in  a \"-lmarsyas\" linker option.\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "## LINKING AND DEFINITIONS\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#define -undefined dynamic_lookup\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#define dylib extension as .pd_darwin in MacOSX \n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#define --export-dynamic -shared\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#define so extension as .pd_linux in Linux \n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#also link pd.lib\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#active Debug info in Release mode - for some reason when compiling with MSVC this is needed\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#add /export:ibt_pd_setup to export setup function from the dll\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#Add MSW preprocessor definition\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#no lib prefix\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/mvamp/CMakeLists.txt" : {
      "ObjectId" : "a163c43dfec7b3f0f163ce4c08896fda8608a5c3",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In case we build the static version of Marsyas, we need to link\n\n# to that specific archive library. Also linking some additional libs/frameworks\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cmake knows the location of the libraries it builds\n\n# the search path to the dynamic lib will automatically be added\n\n# maryas will result in  a \"-lmarsyas\" linker option.\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "## LINKING\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# take lib prefix out\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add/EXPORT:vampGetPluginDescriptor to Visual Studio project (as referred in http://vamp-plugins.org/wiki/mtp2)\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "src/otherlibs/ANN/CMakeLists.txt" : {
      "ObjectId" : "36eacd57f6fff4df170d0cd36f1d33043e7a5bac",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#PROJECT(ANN)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for ANN\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_LIBRARY(ANN STATIC ${ANN_SRCS})\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/otherlibs/ANN/Makefile" : {
      "ObjectId" : "1c8ec2731d7557615ef7ff8521de87214d547a1b",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Makefile for ANN library\n\n#----------------------------------------------------------------------\n\n# Copyright (c) 1997-2005 University of Maryland and Sunil Arya and\n\n# David Mount.  All Rights Reserved.\n\n# \n\n# This software and related documentation is part of the Approximate\n\n# Nearest Neighbor Library (ANN).  This software is provided under\n\n# the provisions of the Lesser GNU Public License (LGPL).  See the\n\n# file ../ReadMe.txt for further information.\n\n# \n\n# The University of Maryland (U.M.) and the authors make no\n\n# representations about the suitability or fitness of this software for\n\n# any purpose.  It is provided \"as is\" without express or implied\n\n# warranty.\n\n#----------------------------------------------------------------------\n\n# History:\n\n#\tRevision 0.1  03/04/98\n\n#\t\tInitial release\n\n#\tRevision 1.0  04/01/05\n\n#\t\tRenamed files from .cc to .cpp for Microsoft Visual C++\n\n#\t\tAdded kd_dump.cpp\n\n#\tRevision 1.1  05/03/05\n\n#\t\tAdded kd_fix_rad_search.cpp and bd_fix_rad_search.cpp\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Some basic definitions:\n\n#\t\tBASEDIR\t\twhere include, src, lib, ... are\n\n#\t\tINCLIB\t\tinclude directory\n\n#\t\tLIBLIB\t\tlibrary directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Make the library\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Make object files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configuration definitions\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Cleaning\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/otherlibs/CMakeLists.txt" : {
      "ObjectId" : "f6eb647443ec045cf442e20335f02035353fc823",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(MARSYAS_AUDIOIO)\n\n#        add_subdirectory(RtAudio)\n\n# endif(MARSYAS_AUDIOIO)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if(MARSYAS_MIDIIO)\n\n#        add_subdirectory(RtMidi)\n\n# endif(MARSYAS_MIDIIO)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/otherlibs/RtAudio/CMakeLists.txt" : {
      "ObjectId" : "4bb134646da9a63e3dcf4fed5e738cacb0d2df2a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/otherlibs/RtMidi/CMakeLists.txt" : {
      "ObjectId" : "ab059cd50c19c7908af6931543466841f1f44745",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/otherlibs/json++/CMakeLists.txt" : {
      "ObjectId" : "042853397b3fa9ffd28dbdb68ab27c3d7ccd149e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/otherlibs/liblinear/blas/Makefile" : {
      "ObjectId" : "895fd244cdbc7d5cb517f6b6a39ba5d80582aa03",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/otherlibs/libpng-1.2.35/CMakeFiles/CMakeCCompiler.cmake" : {
      "ObjectId" : "b348d33d64164c22ff175ca2d9bae2f3541fa2d3",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save compiler ABI information.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/libpng-1.2.35/CMakeFiles/CMakeCXXCompiler.cmake" : {
      "ObjectId" : "8513cba5d5c7c28a3b996ac06b1115dab1f451ac",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save compiler ABI information.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/libpng-1.2.35/CMakeFiles/CMakeSystem.cmake" : {
      "ObjectId" : "1f5f4fc54a3ed3c72063ac6c1b38ad4bc58a55f6",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/otherlibs/libpng-1.2.35/CMakeLists.txt" : {
      "ObjectId" : "d2ab4b50960b5d070d488402ee36bf496f07cebd",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007 Glenn Randers-Pehrson\n\n# For conditions of distribution and use, see copyright notice in png.h\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needed packages\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# not needed on windows\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TODO:\n\n# PNG_CONSOLE_IO_SUPPORTED\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# maybe needs improving, but currently I don't know when we can enable what :)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this env var is normally only set on win64\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# SET LIBNAME\n\n# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  add_test(pngtest ${PNG_SOURCE_DIR}/pngtest.png)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# that's uncool on win32 - it overwrites our static import lib...\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# INSTALL\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# what's with libpng.txt and all the extra files?\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/otherlibs/libpng-1.2.35/Makefile.am" : {
      "ObjectId" : "2ec5b8e377ff1d0dc3e3e2ab39e0fb54ed5fa9d4",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n\n# Makefile.am need only be changed on a major version number\n\n# change (e.g. libpng12 --> libpng13).  In that case seach\n\n# this file for every instance of the old base name (libpng12)\n\n# and change to the new one (libpng13), then change the\n\n# -version-number settings below so that the new values have\n\n# the correct major part (first field).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libpng does not follow GNU file name conventions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# man pages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MAJOR UPGRADE: the version-number settings below must be changed.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -rpath is needed as automake doesn't know the directory\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Versioned symbols and restricted exports\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Only restricted exports when possible\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Avoid depending upon Character Ranges.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#extra source distribution files.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install the .../include headers as links to the new ones\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# do evil things to libpng to cause libpng12 to be used\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16,
      "Errorlog" : "line 107:65 token recognition error at: '\\1'\nline 108:64 token recognition error at: '\\1'\n"
    },
    "src/otherlibs/libpng-1.2.35/scripts/CMakeLists.txt" : {
      "ObjectId" : "6c735a93af4b99d519d7dc9d71e84caa331fa67a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007 Glenn Randers-Pehrson\n\n# For conditions of distribution and use, see copyright notice in png.h\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# needed packages\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# not needed on windows\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TODO:\n\n# PNG_CONSOLE_IO_SUPPORTED\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# maybe needs improving, but currently I don't know when we can enable what :)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this env var is normally only set on win64\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# SET LIBNAME\n\n# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  add_test(pngtest ${PNG_SOURCE_DIR}/pngtest.png)\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#    VERSION 0.${PNGLIB_RELEASE}.1.2.35\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# that's uncool on win32 - it overwrites our static import lib...\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# INSTALL\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# what's with libpng.txt and all the extra files?\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "src/otherlibs/oscpack/CMakeLists.txt" : {
      "ObjectId" : "672b1ca894d4b80532cf0777737ae14cd0fcfdd6",
      "LastModified" : "2017-10-08T19:05:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# separate versions of NetworkingUtils.cpp and UdpSocket.cpp are provided for Win32 and POSIX\n\n# the IpSystemTypePath selects the correct ones based on the current platform\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/oscpack/Makefile" : {
      "ObjectId" : "7e62f07d2d66d5036337619d8096925c23e67bf8",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# oscpack makefile\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the source code should auto-detect endianess for most systems\r\n\n# (see osc/OscHostEndianness.h)\r\n\n# otherwise you need to explicitly set ENDIANESS below\r\n\n# to either OSC_HOST_BIG_ENDIAN or OSC_HOST_LITTLE_ENDIAN\r\n\n# Apple Mac OS X (PowerPC): OSC_HOST_BIG_ENDIAN\r\n\n# Apple Mac OS X (Intel): OSC_HOST_LITTLE_ENDIAN\r\n\n# Win32: OSC_HOST_LITTLE_ENDIAN\r\n\n# i386 GNU/Linux: OSC_HOST_LITTLE_ENDIAN\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#source code will detect using preprocessor\r\n",
        "Line" : 12,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "#ENDIANESS=OSC_HOST_LITTLE_ENDIAN\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Name definitions\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Common source groups\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test source\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Example source\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Library objects\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build rule and common dependencies for all programs\r\n\n# | specifies an order-only dependency so changes to bin dir modified date don't trigger recompile\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Additional dependencies for each program (make accumulates dependencies from multiple declarations)\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Mac OS X case\r\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#GNU/Linux case\r\n",
        "Line" : 113,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#Installs the library on a system global location\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Installs the include/lib structure locally\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "src/otherlibs/pngwriter/Makefile" : {
      "ObjectId" : "17fee9916e8f2fc41d96574c85cb153974f27da1",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "############ PARTIAL MAKEFILE FOR PNGWRITER ######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#       Website: Main:             http://pngwriter.sourceforge.net/\n\n#       Author:                    Paul Blackburn\n\n#       Email:                     individual61@users.sourceforge.net\n\n#       Version:                   0.5.3   (24 / I / 2005)\n\n#       License:                   GNU General Public License\n\n#                                  � 2002, 2003, 2004, 2005 Paul Blackburn\n\n#\n\n##################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/otherlibs/qwt/CMakeLists.txt" : {
      "ObjectId" : "5e59c05b9115dbf882269f01aaa777cd74f626f2",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Plot:\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Plot:\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#qt5_wrap_cpp( MOC_SOURCES ${HEADERS})\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/CMakeCCompiler.cmake" : {
      "ObjectId" : "b348d33d64164c22ff175ca2d9bae2f3541fa2d3",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save compiler ABI information.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/CMakeCXXCompiler.cmake" : {
      "ObjectId" : "8513cba5d5c7c28a3b996ac06b1115dab1f451ac",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save compiler ABI information.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/CMakeDirectoryInformation.cmake" : {
      "ObjectId" : "559ec46fbe1578fcbb3b644b70a80c469d148bc3",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.6\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Relative path conversion top directories.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force unix paths in dependencies.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The C and CXX include file search paths:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The C and CXX include file regular expressions for this directory.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/CMakeSystem.cmake" : {
      "ObjectId" : "1f5f4fc54a3ed3c72063ac6c1b38ad4bc58a55f6",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/Makefile.cmake" : {
      "ObjectId" : "7f0e95c2a787a70e9e88292a151cb18bc72b1e37",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.6\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The generator used is:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The top level Makefile was generated from the following files:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The corresponding makefile is:\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Dependency information for all targets:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/example.dir/DependInfo.cmake" : {
      "ObjectId" : "f24f062fe6742d51ebcd5d10f6cff767b7b6da3e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The set of languages for which implicit dependencies are needed:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The set of files for implicit dependencies of each language:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Targets to which this target links.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/example.dir/cmake_clean.cmake" : {
      "ObjectId" : "55692ad12376b7701e75b5248ae555206c8a305f",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-language clean rules from dependency scanning.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/zlib.dir/DependInfo.cmake" : {
      "ObjectId" : "5a6058fa13b350951d1d2dd5bc6f1190cec88fdc",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The set of languages for which implicit dependencies are needed:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The set of files for implicit dependencies of each language:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Targets to which this target links.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/zlib.dir/cmake_clean.cmake" : {
      "ObjectId" : "f81abca8a33285a8fd05af23734892cbdebc2f6d",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-language clean rules from dependency scanning.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/zlib-1.2.3/CMakeFiles/zlib.dir/cmake_clean_target.cmake" : {
      "ObjectId" : "056e3ad342dfe5392ce4980b2be45240255c5b58",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/otherlibs/zlib-1.2.3/CMakeLists.txt" : {
      "ObjectId" : "45729237caabc7136891688a291db3112a144221",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# source files for zlib\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/otherlibs/zlib-1.2.3/Makefile" : {
      "ObjectId" : "9055b621e4167235c9f37e5b67703453aece82bb",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.6\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable implicit rules so canoncical targets will work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The program to use to edit the cache.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The main all target\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The main clean target\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The main clean target\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# clear depends\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#=============================================================================\n\n# Target rules for targets named zlib\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Build rule for target.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# target to build an object file\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# target to build an object file\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# target to build an object file\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# target to build an object file\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# target to build an object file\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# target to build an object file\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# target to build an object file\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# target to build an object file\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# target to build an object file\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# target to build an object file\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# target to build an object file\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# target to build an object file\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# target to build an object file\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# target to build an object file\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Help Target\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 73
    },
    "src/otherlibs/zlib-1.2.3/cmake_install.cmake" : {
      "ObjectId" : "1d278fcd0c653dd763a3b6127e3d898ce1550b7d",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install script for directory: /Users/gtzan/src/cxx/marsyas-0.2.19/src/otherlibs/zlib-1.2.3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the install configuration name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the component getting installed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/otherlibs/zlib-1.2.3/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/otherlibs/zlib-1.2.3/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/otherlibs/zlib-1.2.3/contrib/puff/Makefile" : {
      "ObjectId" : "b6b69404c7453bd3707f1c258ac238fe93dac867",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/otherlibs/zlib-1.2.3/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/qt5apps/CMakeLists.txt" : {
      "ObjectId" : "e39fcb3c537e934abdbca20dfd09c78374077d81",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not install on Mac OS because of absolute paths to Qt dependencies\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/qt5apps/MarCorrelogram/CMakeLists.txt" : {
      "ObjectId" : "882f823963b5e0ac8e5dc82da8d4d88efdf8346c",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/qt5apps/MarGrid2/CMakeLists.txt" : {
      "ObjectId" : "ecf58595a6b7873e58d00044c4fda154e402cfb2",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/qt5apps/MarLpc/CMakeLists.txt" : {
      "ObjectId" : "015deb3be89fb0dc42c9f699217a1ccb0504217a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/qt5apps/MarPanning/CMakeLists.txt" : {
      "ObjectId" : "1a5a416b517eaa8d61e954309af50178c9ea454a",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#APPLE",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/qt5apps/MarPhasevocoder/CMakeLists.txt" : {
      "ObjectId" : "69ce622640c8a3239c7f3b6399637f03c1246518",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/qt5apps/MarPlayer/CMakeLists.txt" : {
      "ObjectId" : "1f8ff215a629a06b520fbc7fd5a459a7da89285c",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for UI headers\n",
        "Line" : 30,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 1
    },
    "src/qt5apps/MarSndPeek/CMakeLists.txt" : {
      "ObjectId" : "0b92f413cbb500d9c4a3f4410d77c2f526b87b8e",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/qt5apps/common/CMakeLists.txt" : {
      "ObjectId" : "b7b14c4ba852a14d76a1396e1e8663fa4b9e59f6",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/qt5apps/inspector/CMakeLists.txt" : {
      "ObjectId" : "544527c7e8f593798aaa94562a7d0d48fd2eb0de",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/swig/CMakeLists.txt" : {
      "ObjectId" : "64effc914bbcfd462a3d6d6bb503410c5e10cdf3",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# setup OS_LIBS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# global swig stuff\n\n#find_package(SWIG REQUIRED)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## build apps\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/swig/python/CMakeLists.txt" : {
      "ObjectId" : "432a5728bcfc7f0ce9948da18a13d6859b467e1f",
      "LastModified" : "2017-10-08T19:05:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/swig/python/modules/CMakeLists.txt" : {
      "ObjectId" : "cb0125d7681c4d6248635e73f939ebb92db62aaf",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/swig/python/scripts/CMakeLists.txt" : {
      "ObjectId" : "12b95e620780b9ff21d09e9ef5d899bf9ca04db8",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "c7f99c3a115efc4976c3e41ee83e061cfe91fc62",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/black_box/CMakeLists.txt" : {
      "ObjectId" : "39062877e6003c0537b1d6b47125f22d505c1388",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## BASIC SETUP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## TESTING MACRO\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# otherwise the command-line args get all screwed up.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  Can't get this to work.  :(\n\n#add_custom_command( OUTPUT ${REG_NAME}.au\n\n#\tCOMMAND \"${REG_COMMAND} ${REG_INPUT}\"\n\n#)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## actual tests\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we don't need the TEST_TEMPDIR for the kea commands\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "### bextract + kea tests\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/tests/black_box/test-peakClustering-peaks.cmake" : {
      "ObjectId" : "f8deee8646122f9035f48871d6515d1192613fc2",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/unit_tests/CMakeLists.txt" : {
      "ObjectId" : "41393a67883ab7a06fab0a656b6111edfaff3705",
      "LastModified" : "2016-01-12T17:39:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## BASIC SETUP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## BUILD MACRO\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## ACTUAL UNIT TESTS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy the files needed to run the tests\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 129,
    "QMAKE" : 1,
    "MAKEFILE" : 10,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 3332
}