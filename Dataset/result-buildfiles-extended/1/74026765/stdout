{
  "Repository" : "74026765",
  "Revision" : "HEAD",
  "ObjectId" : "a748a272fb4edd140f5a35f64d558f5a980a27dd",
  "CommitTime" : "2018-11-01T16:07:02Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "4337c13c22a2d8037f3a48854a869cda229496ed",
      "LastModified" : "2018-11-01T16:07:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTE: This defaults the container image version to the branch that's active\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python packages to install only from source (not from binary wheels)\n\n# Comma separated list\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine appropriate shasum command\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the branch information from git\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TAR build parameters\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI flag files\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove ui build artifacts\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove temporary build files, compiled Python files.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# convenience target to assert environment variables are defined\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Install third-party requirements needed for AWX's environment.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#$(VENV_BASE)/awx/bin/pip uninstall --yes -r requirements/requirements_tower_uninstall.txt\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# \"Install\" awx package in development mode.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Do any one-time init tasks.\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Refresh development environment after pulling new code.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create Django superuser.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create database tables and apply any new migrations.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Run after making changes to the models to create a new migration.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# access database shell, asks for password\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Use with iterm2's native tmux protocol support\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Alternate approach to tmux to run all development tasks specified in\n\n# Procfile.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Run the built-in development webserver (by default on http://localhost:8013).\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Run to start the background task dispatcher for development.\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Run to start the zeromq callback receiver\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# pyflakes pylint\n",
        "Line" : 347,
        "CharPositionInLine" : 19
      },
      "24" : {
        "Text" : "# Run all API unit tests.\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Run all API unit tests with coverage enabled.\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Output test coverage as HTML (into htmlcov directory).\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Run API unit tests across multiple Python/Django versions with Tox.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Make fake data\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# l10n TASKS\n\n# --------------------------------------\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# check for UI po files\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Should be 'Language: zh-CN' but not 'Language: zh_CN' in zh_CN.po\n",
        "Line" : 408,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# generate UI .pot\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# generate django .pot .po\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# generate l10n .json .mo\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# End l10n TASKS\n\n# --------------------------------------\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# UI TASKS\n\n# --------------------------------------\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Native docker. Builds UI and raises BrowserSync & filesystem polling.\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Builds UI with development UI without raising browser-sync or filesystem polling.\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# A standard go-to target for API developers to use building the frontend\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#ui-test-ci\n",
        "Line" : 494,
        "CharPositionInLine" : 34
      },
      "41" : {
        "Text" : "# END UI TASKS\n\n# --------------------------------------\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Build a pip-installable package into dist/ with a timestamped version number.\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Build a pip-installable package into dist/ with the release version number.\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Build setup bundle tarball\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Docker isolated rampart\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Docker Compose Development environment\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Base development image build\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#docker push $(DEV_DOCKER_TAG_BASE)/awx_devel:$(COMPOSE_TAG)\n",
        "Line" : 577,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# For use when developing on \"isolated\" AWX deployments\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#docker push $(DEV_DOCKER_TAG_BASE)/awx_isolated:$(COMPOSE_TAG)\n",
        "Line" : 583,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# Docker Development Environment with Elastic Stack Connected\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2171
}