{
  "Repository" : "17986683",
  "Revision" : "HEAD",
  "ObjectId" : "0b98c1ff8d87ba2fd5dbc8255d11fe37e72cb38a",
  "CommitTime" : "2019-04-03T11:16:16Z",
  "Files" : {
    "CMake/FindDCMTK.cmake" : {
      "ObjectId" : "5fd53d7542d26e7a357c91ee3f1bcaa5ef3bf4d9",
      "LastModified" : "2013-09-20T22:03:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find DCMTK libraries and applications\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  DCMTK_INCLUDE_DIRS   - Directories to include to use DCMTK\n\n#  DCMTK_LIBRARIES     - Files to link against to use DCMTK\n\n#  DCMTK_FOUND         - If false, don't try to use DCMTK\n\n#  DCMTK_DIR           - (optional) Source directory for DCMTK\n\n#\n\n# DCMTK_DIR can be used to make it simpler to find the various include\n\n# directories and compiled libraries if you've just compiled it in the\n\n# source tree. Just set it to the root of the tree where you extracted\n\n# the source (default to /usr/include/dcmtk/)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n# Copyright 2010 Thomas Sondergaard <ts@medical-insight.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Written for VXL by Amitha Perera.\n\n# Upgraded for GDCM by Mathieu Malaterre.\n\n# Modified for EasyViz by Thomas Sondergaard.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compatibility: This variable is deprecated\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/FindEigen.cmake" : {
      "ObjectId" : "126f4a0ec6a9b869823d81f774f2e2764fbba2a8",
      "LastModified" : "2014-07-16T11:03:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN_FOUND - system has eigen lib with correct version\n\n#  EIGEN_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/FindOpenCL.cmake" : {
      "ObjectId" : "56baf94ceb7b8de4199b11d30f0fcf1854bef7eb",
      "LastModified" : "2014-07-16T11:03:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Thanks to git://gitorious.org/findopencl/findopencl.git\n\n## Used by SSC, but not created or owned by SSC.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations, but should work, too.\n\n#\n\n# To set manually the paths, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OPENCL_FOUND        - system has OpenCL\n\n#  OPENCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OPENCL_LIBRARIES    - link these to use OpenCL\n\n#\n\n# WIN32 should work, but is untested\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The AMD SDK and Nvidias CUDA currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#64bit\n",
        "Line" : 37,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "#amd\n",
        "Line" : 39,
        "CharPositionInLine" : 60
      },
      "5" : {
        "Text" : "#nvidia\n",
        "Line" : 41,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : "#32bit\n",
        "Line" : 43,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "#amd\n",
        "Line" : 45,
        "CharPositionInLine" : 57
      },
      "8" : {
        "Text" : "#nvidia\n",
        "Line" : 47,
        "CharPositionInLine" : 52
      },
      "9" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#================================================================================\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Code for determining OpenCL version found:\n\n# https://github.com/bkloppenborg/simtoi/blob/master/CMakeModules/FindOpenCL.cmake\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#================================================================================\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "CMake/cxBundleUtilities.cmake" : {
      "ObjectId" : "b1302bee7b04c7a9add1790b7c26f0ef05802a4c",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# cxBundleUtilities\n\n# ---------------\n\n#\n\n# Functions to help assemble a standalone bundle application.\n\n#\n\n# Depends upon and is an enhancement of the vanilla BundleUtilities.cmake,\n\n#\n\n#\n\n# The following functions are provided by this module:\n\n#\n\n# ::\n\n#\n\n#    cx_fixup_bundle\n\n#    cx_get_bundle_keys\n\n#\n\n# ::\n\n#\n\n#   CX_FIXUP_BUNDLE(<app> <libs> <dirs>)\n\n#\n\n# Fix up a bundle in-place and make it standalone, such that it can be\n\n# drag-n-drop copied to another machine and run on that machine as long\n\n# as all of the system libraries are compatible.\n\n#\n\n# If you pass plugins to fixup_bundle as the libs parameter, you should\n\n# install them or copy them into the bundle before calling fixup_bundle.\n\n# The \"libs\" parameter is a list of libraries that must be fixed up, but\n\n# that cannot be determined by otool output analysis.  (i.e., plugins)\n\n#\n\n# Gather all the keys for all the executables and libraries in a bundle,\n\n# and then, for each key, copy each prerequisite into the bundle.  Then\n\n# fix each one up according to its own list of prerequisites.\n\n#\n\n# Then clear all the keys and call verify_app on the final bundle to\n\n# ensure that it is truly standalone.\n\n#\n\n# As an optional parameter (IGNORE_ITEM) a list of file names can be passed,\n\n# which are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n#\n\n# ::\n\n#\n\n#   CX_GET_BUNDLE_KEYS(<app> <libs> <dirs> <keys_var>)\n\n#\n\n# Loop over all the executable and library files within the bundle (and\n\n# given as extra <libs>) and accumulate a list of keys representing\n\n# them.  Set values associated with each key such that we can loop over\n\n# all of them and copy prerequisite libs into the bundle and then do\n\n# appropriate install_name_tool fixups.\n\n#\n\n# As an optional parameter (IGNORE_ITEM) a list of file names can be passed,\n\n# which are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Inject feature into GetPrerequisites: \n\n#   Tag GStreamer framework as SYSTEM, thus keeping it out of the bundle,\n\n#   and requiring the user to install GStreamer on his Mac.\n\n#\n\n# This is a workaround for not being able to install the whole of GStreamer\n\n# into the bundle - gst plugins dont load properly.\n\n# \n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Clean /./ - like structures from a path list\n\n#\n\n## Input variables:\n\n#    INPUT_PATH : List of paths to file.\n\n#\n\n## Output variables:\n\n#    RESULT_PATH : List of cleaned paths to files\n\n###############################################################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#######################################################################\n\n#\n\n# get_new_prerequisites()\n\n#\n\n# Given a top_binary, search recursively for prerequisites in dirs,\n\n# return prereqs in found_binaries.\n\n#\n\n# Ignore binaries that are already present in found_binaries\n\n#\n\n#######################################################################\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# debug\n",
        "Line" : 125,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : "# look for target in found_binaries. \n\n# If already present: return\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#      message(STATUS \"    get_new_prerequisites: target found in list, returning... \"${target_key})\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#        cx_get_new_prerequisites(\"${context}\" \"${pr}\" \"${exepath}\" \"${dirs}\" \n\n#                                 \"${found_binaries}\" found_binaries \"${MY_MESSAGE_INDENT}\" \"${rpaths}\")\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Propagate values to caller's scope:\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Modified version of the vanilla get_bundle_keys,\n\n# - Uses cx_get_new_prerequisites() to find prereqs,\n\n# - Treats all binaries (libs and exes) similarly, thus assuming\n\n#   that the RPATH settings are the same for all. This assumption is \n\n#   used because all binaries are copied into the same folder, thus\n\n#   possibly overwriting each other, thus should be the same.\n\n#\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Always use the exepath of the main bundle executable for @executable_path\n\n# replacements:\n\n#\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# But do fixups on all executables in the bundle:\n\n#\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Set keys for main executable first:\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Get rpaths specified by main executable:\n\n#\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# --begin optimize code\n\n# Loop over all libs and exes, assemble list of \n\n# prerequisites in found_binaries\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#      list(LENGTH found_binaries found_binaries_length)\n\n#      message(STATUS \"    completed, found preqs: \" ${found_binaries_length})\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set key values for all found binaries\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# --end optimize code\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Propagate values to caller's scope:\n\n#\n",
        "Line" : 274,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Based on the vanilla version (3.6.2),\n\n# EXCEPT: - cx_get_bundle_keys() is called instead of get_bundle_keys()\n\n#         - binaries are chmoded to writable prior to fixup (BU_CHMOD_BUNDLE_ITEMS=ON)\n\n#\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "CMake/cxCatchUtilities.cmake" : {
      "ObjectId" : "2002edd72c78dd41cdba47bacee36d1ed7994bf2",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Create the Catch executable\n\n#\n\n# NOTE: Should only be called once.\n\n#\n\n###############################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Clear the internal Catch cache\n\n#\n\n# NOTE: Should only be called once, before adding tests to Catch\n\n#\n\n###############################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Add shared library with tests to Catch\n\n#\n\n# Usage: cx_add_tests_to_catch(cxtestShareLibrary)\n\n#\n\n###############################################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/cxDocumentation.cmake" : {
      "ObjectId" : "e7cf339167a2d660a20bac9c621421ea69b4cc76",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#\n\n# Converts a CMake list to a string containing elements separated by spaces\n\n#\n\n# http://opensource.apple.com/source/curl/curl-83.1.2/curl/CMake/Utilities.cmake\n\n###############################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n#\n\n# Add a string VALUE_TO_APPEND to a global property PROPERTY_NAME.\n\n#\n\n###############################################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# Add a folder containing documentation files.\n\n#\n\n#\n\n###############################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n#\n\n# Define documentation for a plugin.\n\n#\n\n# Call this once for each plugin that contains a documentation folder,\n\n# typically in ${CMAKE_CURRENT_SOURCE_DIR}/doc.\n\n#\n\n###############################################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/cxGetVersion.cmake" : {
      "ObjectId" : "e4ab4503ad59777fa487d9901079a1ddd7eb5e8d",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Get a bool telling if git is on a tag or not\n\n#\n\n###############################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Get a description of the current build from git.\n\n#\n\n# http://stackoverflow.com/questions/1435953/how-can-i-pass-git-sha1-to-compiler-as-definition-using-cmake\n\n# use the entire output of git describe here instead.\n\n#\n\n###############################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# remove first character - should always be a \"v\" as first in f.ex. \"v3.5.3\"\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# make filename-friendly\n",
        "Line" : 57,
        "CharPositionInLine" : 42
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Get a description of the current build from git.\n\n#\n\n# http://stackoverflow.com/questions/1435953/how-can-i-pass-git-sha1-to-compiler-as-definition-using-cmake\n\n# use the entire output of git describe here instead.\n\n#\n\n###############################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# make filename-friendly\n",
        "Line" : 79,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : "###############################################################################\n\n# Get a description of the current branch from git.\n\n#\n\n###############################################################################\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# make filename-friendly\n",
        "Line" : 97,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "###############################################################################\n\n#\n\n# Define the variables\n\n#\n\n#\t${PROJECT_NAME}_VERSION_MAJOR\n\n#\t${PROJECT_NAME}_VERSION_MINOR\n\n#\t${PROJECT_NAME}_VERSION_PATCH\n\n#\t${PROJECT_NAME}_VERSION_STRING\n\n#\n\n###############################################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n#\n\n# Set the CustusX version based on the current git tag.\n\n#\n\n# git describe --tags is used to get a string interpreted as\n\n#    v<major>.<minor>.<patch>\n\n#\n\n#\n\n###############################################################################\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# GIT_DESCRIBE is a dot-separated string: Interpret the first two elements\n\n# as minor, major, and the rest as patch\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "###############################################################################\n\n#\n\n# Set the CustusX version based on the current date and git SHA.\n\n#\n\n# Format based on rules from http://semver.org/\n\n# The format is YYYY.MM.DD-dev+GIT_BRANCH.GIT_SHA\n\n#\n\n#\n\n###############################################################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# truncate branch name - this is encoded into the exename and should be\n\n# kept within reasonable size (think windows filepath restrictions)\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "###############################################################################\n\n#\n\n# Define the variables\n\n#\n\n#\t${PROJECT_NAME}_VERSION_MAJOR\n\n#\t${PROJECT_NAME}_VERSION_MINOR\n\n#\t${PROJECT_NAME}_VERSION_PATCH\n\n#\t${PROJECT_NAME}_VERSION_STRING\n\n#\n\n# Based on the git tag. If not on a git tag, generate development\n\n# values based on date and SHA.\n\n#\n\n#\n\n###############################################################################\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###############################################################################\n\n# DISABLED\n\n#\n\n# Define variables for the current version.\n\n# Input (major, minor, patch) define the version,\n\n# while the type determines additional info:\n\n#\n\n# type==ALPHA:\n\n#   add detailed information to the postfix, such as git sha and date.\n\n# type==RELEASE:\n\n#   add no extra information.\n\n# type==<other>:\n\n#   the postfix is set to <other>\n\n#\n\n# The following variables are defined:\n\n#\n\n#\t${PROJECT_NAME}_VERSION_MAJOR\n\n#\t${PROJECT_NAME}_VERSION_MINOR\n\n#\t${PROJECT_NAME}_VERSION_PATCH\n\n#\t${PROJECT_NAME}_VERSION_POSTFIX\n\n#\t${PROJECT_NAME}_VERSION_STRING\n\n#\n\n###############################################################################\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#on windows this string contains newlines and whitespaces that needs to be removed\n",
        "Line" : 273,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 17
    },
    "CMake/cxInitializeLibraries.cmake" : {
      "ObjectId" : "67aad9ebdca150502bb4138635ed5f1d7e4d6041",
      "LastModified" : "2018-08-20T09:19:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Initialize cppunit library\n\n#\n\n# Define variables:\n\n#     CPPUNIT_FOUND\n\n#     CPPUNIT_INCLUDE_DIR\n\n#     CPPUNIT_LIBRARY\n\n#     CPPUNIT_LIBRARIES\n\n#     CPPUNIT_DEBUG_LIBRARIES\n\n#\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CPP_UNIT not used on Windows\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Initialize openCV library\n\n#\n\n# Define variables:\n\n#    CX_USE_OpenCV : cache option\n\n#\n\n###############################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Initialize openCL library\n\n#\n\n# Define variables:\n\n#    SSC_USE_OpenCL : cache option\n\n#\n\n###############################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Initialize FAST library\n\n# Find the package and run the include USE file.\n\n###############################################################################\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Initialize OpenCLUtilityLibrary\n\n#\n\n# Find the package and run the include USE file.\n\n#\n\n# Define variables:\n\n#    CX_USE_OPENCL_UTILITY : cache option\n\n#\n\n###############################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# Initialize Boost library\n\n# Find the package.\n\n###############################################################################\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Initialize Qt library\n\n# Find the package and run the include USE file.\n\n###############################################################################\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# attempt to remove warning in cmake\n",
        "Line" : 150,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "# attempt to remove warning in cmake\n",
        "Line" : 158,
        "CharPositionInLine" : 41
      },
      "11" : {
        "Text" : "###############################################################################\n\n# Initialize VTK library\n\n# Find the package and run the include USE file.\n\n###############################################################################\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this path add should be automatic, but fails at least on ca/macosx10.8\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# vtk consist of (as of 6.1) 120 libs. This explicit inclusion brings is down to about half.\n\n# gives about 15% compile speed increase\n\n#\n\n# See http://www.vtk.org/Wiki/VTK/Build_System_Migration\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#    find_package(VTK REQUIRED) # import all libs - try this for debugging lib includes\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###############################################################################\n\n# Initialize ITK library\n\n# Find the package and run the include USE file.\n\n###############################################################################\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# we use only a small part of ITK. Adding only a few libs reduces cmd-line-\n\n# length problems on Win, and reduces built time:\n",
        "Line" : 203,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#find_package(ITK REQUIRED) # import all libs - try this for debugging lib includes\n",
        "Line" : 212,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "###############################################################################\n\n# Initialize OpenIGTLink library\n\n# Find the package and run the include USE file.\n\n###############################################################################\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n# Initialize OpenIGTLinkIO library\n\n# Find the package.\n\n###############################################################################\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n# Initialize IGSTK library\n\n# Find the package and run the include USE file.\n\n###############################################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###############################################################################\n\n# Initialize CTK library\n\n# Find the package and run the include USE file.\n\n###############################################################################\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# override internal settings from CTK - otherwise the plugins will appear within ctk-named folders.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###############################################################################\n\n# Initialize Code coverage\n\n#\n\n# Add option SSC_USE_GCOV and generate variable SSC_GCOV_LIBRARY containing\n\n# lib to link.\n\n###############################################################################\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# code coverage\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# needed on apple\n",
        "Line" : 269,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# needed on linux\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "###############################################################################\n\n# Initialize eigen library\n\n# Find the package and include folders\n\n###############################################################################\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "CMake/cxInstallCustusX.cmake" : {
      "ObjectId" : "315b2717ef4bbebd0df332cbdea45b6ab100dfc9",
      "LastModified" : "2018-08-20T09:19:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#\n\n# Installation script.\n\n# Run this after all other actions. Requires that the bundle has been created.\n\n#\n\n###############################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    find_package(XCTest)\n\n#    message(STATUS \"xctest libs: \" ${XCTest_LIBRARIES})\n\n#    message(STATUS \"CMAKE_SYSTEM_FRAMEWORK_PATH: \" ${CMAKE_SYSTEM_FRAMEWORK_PATH})\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    message(STATUS \"CMAKE_SYSTEM_FRAMEWORK_PATH: \" $ENV{DEVELOPER_FRAMEWORKS_DIR})\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------------------\n\n# Bundle utilities\n\n#--------------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#remove?\n",
        "Line" : 48,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "#remove?\n",
        "Line" : 49,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : "#    ${OpenCV_LIB_DIR} # This is empty for OpenCV 3.2\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(STATUS \"QT_LIB: \"   ${QT_LIBRARY_DIRS}) - empty\n\n#message(STATUS \"QT_BIN: \"   ${QT_BINARY_DIR}) - empty\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#hiding packages created by ctk: we install the plugins ourselves\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "CMake/cxInstallUtilities.cmake" : {
      "ObjectId" : "0c103fa0284a8b3f6f63d3c8286f2062b7a459c5",
      "LastModified" : "2018-06-21T09:30:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Utitily variable for setting permissions with install(FILE) or install(DIRECTORY)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utitily variable for setting permissions with install(FILE) or install(DIRECTORY)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# Define which generators to use, i.e what kind of installers to create\n\n#\n\n###############################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# keep only packagemaker\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\t\toption (CPACK_BINARY_STGZ \"Enable to build STGZ packages\" OFF)\n\n#\t\toption (CPACK_BINARY_TGZ \"Enable to build TGZ packages\" OFF)\n\n#\t\toption (CPACK_SOURCE_TBZ2 \"Enable to build TBZ2 source packages\" OFF)\n\n#\t\toption (CPACK_SOURCE_TGZ \"Enable to build TGZ source packages\" OFF)\n\n#\t\tset(CPACK_GENERATOR \"PackageMaker\")\n\n#                set(CPACK_GENERATOR \"Bundle\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# looks like NSIS is the default\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize a few properties to be used during package generation.\n\n#\n\n# These properties can be overriden anywhere in the system, and will\n\n# be converted to normal variable prior to package generation.\n\n#\n\n# Matched by cx_install_apply_customizable_properties()\n\n#\n\n###############################################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize a few properties to be used during package generation.\n\n#\n\n# These properties can be overriden anywhere in the system, and will\n\n# be converted to normal variable prior to package generation.\n\n#\n\n###############################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n#\n\n# Make sure that binaries can use paths relative to itself when looking up\n\n# libraries. This enables packaging of libs and exes without depending on\n\n# system locations.\n\n#\n\n###############################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable relative paths in Linux:\n\n# http://www.cmake.org/Wiki/CMake_RPATH_handling\n\n# http://www.cmake.org/pipermail/cmake/2008-January/019329.html\n\n# Mac handles this differently\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add support for Frameworks installed into the bundle:\n\n# http://cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 131,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "###############################################################################\n\n#\n\n# Define variable CPACK_PACKAGE_FILE_NAME which sets the name of the installer file.\n\n#\n\n###############################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# append build type to name if not Release:\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# append system info if linux:\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "###############################################################################\n\n#\n\n# Set version info in CPACK\n\n#\n\n###############################################################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n#\n\n# Setup a folder structure for the installed system.\n\n#\n\n# Structure on linux:\n\n#\n\n#   bundle/bin/bundle\n\n#              binary*\n\n#              lib*.so\n\n#              qt.conf\n\n#              liborg_plugin*.so\n\n#   bundle/doc/something.txt\n\n#   bundle/config/...\n\n#\n\n# Structure on mac:\n\n#\n\n#   bundle/bundle.app/Contents/MacOS/bundle\n\n#                                    binary*\n\n#                                    lib*.so\n\n#                                    liborg_plugin*.so\n\n#   bundle/bundle.app/Contents/Resources/qt.conf\n\n#   bundle/bundle.app/doc/something.txt\n\n#   bundle/bundle.app/config/...\n\n#\n\n# Structure on windows:\n\n#\n\n#  bundle/bin/*.exe\n\n#             *.dll\n\n#             plugins/\n\n#  bundle/config/...\n\n#  bundle/doc/...\n\n#  bundle/documentation/...\n\n#  bundle/include/...\n\n#\n\n#\n\n#  Creates the following variables:\n\n#    CX_BUNDLE_NAME          Name used to identify bundle.\n\n#    CX_INSTALL_ROOT_DIR     Base folder for installation, relative to CMAKE_INSTALL_PREFIX\n\n#                            All files are installed into this location.\n\n#    CX_INSTALL_BINARY_DIR   Location of binaries\n\n#    CX_INSTALL_CONFIG_DIR   Location of config stuff... (qt.conf fex)\n\n#    CX_INSTALL_PLUGIN_DIR   Location of runtime plugins\n\n#\n\n###############################################################################\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#                set(CPACK_BUNDLE_NAME ${CX_BUNDLE_NAME})\n\n#                set(CPACK_BUNDLE_PLIST \"Info.plist\")\n\n#                set(CPACK_BUNDLE_ICON \"${PROJECT_SOURCE_DIR}/source/gui/icons/CustusX/CustusX.ico\")\n\n#                set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY TRUE)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#                set(CPACK_PACKAGING_INSTALL_PREFIX \"/\")\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#set(CX_INSTALL_ROOT_DIR \"Applications/${CX_SYSTEM_BASE_NAME}\") - NA when creating dragndrop\n",
        "Line" : 229,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "#                set(CPACK_PACKAGING_INSTALL_PREFIX \"/\")\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#            set(CPACK_PACKAGING_INSTALL_PREFIX \"/\")\n\n#            set(CX_INSTALL_ROOT_DIR \".\")\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Turn off installation of CTK plugins. We do this ourselves using fixup_bundle\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#file(TO_CMAKE_PATH ${CX_INSTALL_BINARY_DIR} CX_INSTALL_BINARY_DIR)\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#message(\"-----------------CX_INSTALL_BINARY_DIR: \" ${CX_INSTALL_ROOT_DIR})\n\n#message(\"-----------------CX_INSTALL_BINARY_DIR: \" ${CX_INSTALL_BINARY_DIR})\n\n#message(\"-----------------CX_BUNDLE_NAME: \" ${CX_BUNDLE_NAME})\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\tset(CX_INSTALL_PLUGIN_DIR \"${CX_INSTALL_BINARY_DIR}/plugins\") - did not work: get into trouble with relative paths and fixup_bundle\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "###############################################################################\n\n#\n\n# Needed to make sure all users get write permissions on the folder CustusX is installed in\n\n#\n\n# Note: might not be necessary any more as settings have been moved to ~/cx_settings folder.\n\n#\n\n###############################################################################\n\n#macro(cx_install_root_directory_full_permissions)\n\n#\tset(TEMP_INSTALL_ROOT_DIR_SOURCE ${CMAKE_CURRENT_BINARY_DIR}/tmp/${CX_SYSTEM_BASE_NAME})\n\n#\tfile(MAKE_DIRECTORY ${TEMP_INSTALL_ROOT_DIR_SOURCE})\n\n#\tinstall(DIRECTORY ${TEMP_INSTALL_ROOT_DIR_SOURCE}\n\n#\t\tDESTINATION ${CX_INSTALL_ROOT_DIR}/..\n\n#\t\tDIRECTORY_PERMISSIONS ${CX_FULL_PERMISSIONS}\n\n#\t\t)\n\n#endmacro()\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "###############################################################################\n\n#\n\n# Set variables used throughout the build.\n\n# Call first, in root dir!\n\n#\n\n###############################################################################\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\tcx_install_root_directory_full_permissions()\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# used as a global variable: clear at start of run\n",
        "Line" : 314,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "###############################################################################\n\n#\n\n# Add library directories that should be parsed for libs during the install/fixup_bundle step.\n\n#\n\n###############################################################################\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\tmessage(STATUS \"adding: \"${ARGV})\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "###############################################################################\n\n#\n\n# Install one target to the default location.\n\n#\n\n# If the platform is APPLE, the target is stored in a variable for later\n\n# copying into the bundle. This copy should be done by the bundle code.\n\n# Why: fixup_bundle doesnt work properly on CX_APPLE with the normal install(TARGET...),\n\n# while the opposite is true on CX_LINUX.\n\n#\n\n###############################################################################\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#message(STATUS \"########### Already present: \" ${PREEXISTING})\n",
        "Line" : 362,
        "CharPositionInLine" : 3
      },
      "34" : {
        "Text" : "#message(STATUS \"########### List content: \" ${CX_APPLE_TARGETS_TO_COPY})\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "###############################################################################\n\n#\n\n# Install all the targets in CX_APPLE_TARGETS_TO_COPY to the BUNDLE_BINARY_DIR.\n\n# See cx_install_target() for more.\n\n#\n\n###############################################################################\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#message(STATUS \"############################## All exes: \" ${CX_APPLE_TARGETS_TO_COPY})\n",
        "Line" : 380,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# NA: cx_install_target() does all the work.\n",
        "Line" : 397,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "###############################################################################\n\n#\n\n# Install all configuration files required by CustusX\n\n#\n\n###############################################################################\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###############################################################################\n\n#\n\n# Installing required run time libs for Windows, msv*.dll\n\n#\n\n###############################################################################\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#OpenMP is required by FAST\n",
        "Line" : 439,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "###############################################################################\n\n# wrapper around the fixup_bundle function.\n\n#   - will add qtplugins to bundle automatically.\n\n#\n\n#\n\n# Input Variables:\n\n#    APPS_LOCAL                      : Name of executable to base bundle on, with full path\n\n#                                      relative to CMAKE_INSTALL_PREFIX\n\n#    INSTALL_BINARY_DIR              : where to put binaries\n\n#    INSTALL_CONFIG_DIR              : where to put configuration\n\n#    INSTALL_LIBRARIES_PATTERN_LOCAL : List of names of additional libs/plugins to add,\n\n#                                      path relative to CMAKE_INSTALL_PREFIX\n\n#    DIRS_LOCAL                      : List of all paths where libraries can be found.\n\n#                                      This is pretty much the entire application source.\n\n#\n\n# See\n\n#     http://www.itk.org/Wiki/BundleUtilitiesExample\n\n# for example on how to use bundle utilities.\n\n#\n\n# More info on Mac+Qt, plugins, and pitfalls related to this:\n\n#     http://lists.trolltech.com/qt-interest/2008-09/thread00258-0.html\n\n#     http://doc.qt.nokia.com/4.7-snapshot/qt-conf.html\n\n#\n\n# How to debug install: cpack --debug --verbose\n\n#  ( from http://www.cmake.org/Wiki/CMake:Packaging_With_CPack)\n\n#\n\n###############################################################################\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#Add Qt libraries (frameworks for Apple) to fixup_bundle search path\n",
        "Line" : 488,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Install plugins in the default location as given by http://qt-project.org/doc/qt-4.8/qt-conf.html\n",
        "Line" : 491,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# Install .so and versioned .so.x.y\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Install needed Qt plugins by copying directories from the qt installation\n\n# Only install one sql driver (libqsqlite), as the other ones need additional packages installed to work\n",
        "Line" : 540,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# Install Qt qml by copying all files in the qml directory\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# install runtime plugins\n",
        "Line" : 565,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# trailing slash copies contents, not plugin folder\n",
        "Line" : 570,
        "CharPositionInLine" : 79
      },
      "49" : {
        "Text" : "# explicitly tell which executables that should be fixed up.\n",
        "Line" : 574,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# why: fixup_bundle seems to fail to assemble exes in some cases.\n",
        "Line" : 575,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# collect all installations here. They will be used by fixup_bundle to collect dependencies.\n\n# this is a sum of the input pattern (if any) and the qtplugins\n",
        "Line" : 586,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# install a qt.conf file\n\n# this inserts some cmake code into the install script to write the file\n\n# This is a requirement to get qt plugins in a relative path working!\n",
        "Line" : 595,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# create a code snippet : Search for the files in pattern,\n\n#                         add files to PLUGINS\n",
        "Line" : 603,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "#On Windows verify_app fails if path contains a .\n",
        "Line" : 619,
        "CharPositionInLine" : 12
      },
      "55" : {
        "Text" : "# fixup_bundle resets link paths for all targets within the bundle.\n\n# this code appears in cmake_install.cmake in the CURRENT_BINARY_DIR. Check there when changing.\n",
        "Line" : 628,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "###############################################################################\n\n# Create a text string describing essential build information\n\n# for CustusX, such as library versions, built modules etc.\n\n#\n\n# The result is provided as the variable CX_CONFIGURATION_DESCRIPTION\n\n#\n\n###############################################################################\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# skip the \":\" between name and value in because this spams console with one issue per line in QtCreator...\n",
        "Line" : 675,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 58
    },
    "CMake/cxPlugins.cmake" : {
      "ObjectId" : "3d793326943634b419cac649cbe3a4de96b1bc4b",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#\n\n# This macro is required by CTK.\n\n# It defines plugin names internal to the project.\n\n#\n\n# Extract all library names starting with org_mydomain_\n\n#\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n#\n\n# Given a PLUGINS_LIST of plugin name:VAL pairs,\n\n# insert the NEW_PLUGIN with NEW_PLUGIN_VALUE\n\n# if it is not already present in the list\n\n#\n\n# PLUGINS_VARIABLE: variable containing <pluginname>:<val> pairs\n\n#\n\n###############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# Given a list of plugin name:VAL pairs, look for other plugins not defined in the list.\n\n# Undefined plugins are added with the default value of OFF.\n\n#\n\n# PLUGINS_VARIABLE: variable containing <pluginname>:<val> pairs\n\n# PLUGIN_BUILD_OPTION_PREFIX: prefix used by ctkMacroSetupPlugins to generate build variables\n\n#\n\n###############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all variables prefixed with CX_EXTERNAL_PLUGIN_,\n\n# then add them as plugins.\n\n# Add paths to external plugins this way, i.e plugins not defined within CustusX.\n\n#\n\n# Usage:\n\n#  When calling cmake from the command line, add\n\n#      -DCX_EXTERNAL_PLUGIN_<plugin_name>=<full/path/to/plugin>\n\n#\n\n# PLUGINS_VARIABLE: return variable containing <pluginname>:<val> pairs, only ADD to this var\n\n#\n\n###############################################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# define local copy of input\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#fixing the paths on windows\n",
        "Line" : 99,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : "#message(STATUS \"REL_NAME \" ${REL_NAME})\n\n#message(STATUS \"  FULL_NAME \" ${FULL_NAME})\n\n#message(STATUS \"  FOUND_DOTDOT \" ${FOUND_DOTDOT})\n",
        "Line" : 100,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# copy modified input back as retval\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all previously defined plugins, add them to CX_PLUGINS\n\n#\n\n# PLUGINS_VARIABLE: return variable containing <pluginname>:<val> pairs, only ADD to this var\n\n# PLUGIN_BUILD_OPTION_PREFIX: prefix used by ctkMacroSetupPlugins to generate build variables\n\n#\n\n###############################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# define local copy of input\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Find all previously defined plugins, add them to CX_PLUGINS\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# is this a bug? referring CX_PLUGINS directly in here makes it a local var...\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\t\t\tcx_insert_plugin_if_not_in_list(plugins_list ${plugin_name} \"OFF\" ${PLUGIN_BUILD_OPTION_PREFIX})\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# copy modified input back as retval\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "CMake/cxTestMacros.cmake" : {
      "ObjectId" : "78b9a4ee2d4074f7a97e6aa03f76ee2c1198a262",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of SSC,\n\n# a C++ Library supporting Image Guided Therapy Applications.\n\n#\n\n# Copyright (C) 2008- SINTEF Medical Technology\n\n# Copyright (C) 2008- Sonowand AS\n\n#\n\n# SSC is owned by SINTEF Medical Technology and Sonowand AS,\n\n# hereafter named the owners. Each particular piece of code\n\n# is owned by the part that added it to the library.\n\n# SSC source code and binaries can only be used by the owners\n\n# and those with explicit permission from the owners.\n\n# SSC shall not be distributed to anyone else.\n\n#\n\n# SSC is distributed WITHOUT ANY WARRANTY; without even\n\n# the implied warranty of MERCHANTABILITY or FITNESS FOR\n\n# A PARTICULAR PURPOSE.\n\n#\n\n# See sscLicense.txt for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Macro for defining a cppunit suite as both a standalone executable and\n\n# a ctest-compatible set of tests.\n\n#\n\n# Controlled by\n\n#   SSC_BUILD_PURE_CPPUNIT_TESTS : build the standalone exe (dont do this if doing coverage testing)\n\n#   BUILD_TESTING : Turn off all generation\n\n#\n\n# Input:\n\n#   TEST_NAME : Name of resulting cppunit executable. The corresponding ctest version will have a postfix.\n\n#   CPPUNIT_MAIN : Name of the main function file of the classical cppunit project.\n\n#   SOURCE_FILES : List of all source files. Remember to ad it in hyphens when calling function ( \"${SOURCE_FILES}\" )\n\n#   LIBRARIES : List of all libraries. Remember to ad it in hyphens when calling function ( \"${LIBRARIES}\" )\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tmessage(\"Test name:\" ${TEST_NAME})\n\n#\tmessage(\"CPPUNIT_MAIN:\" ${CPPUNIT_MAIN})\n\n#\tmessage(\"SOURCE_FILES:\" ${SOURCE_FILES})\n\n#\tmessage(\"LIBRARIES:\" ${LIBRARIES})\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build the standalone cppunit executable:\n",
        "Line" : 41,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# --------------- -------------------------------\n\n# -- CppUnit - CTest integration. ---------------\n\n# --   Use CISST_ADD_TESTS() to convert each CppUnit test to a CTest test.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Initialize cisst routines\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#add_subdirectory(cisst_code)\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# link all CppUnit tests to the cisstTestsMain library\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Generate a CTest list of tests\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# -- finished CppUnit - CTest integration. ------\n\n# -----------------------------------------------\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/cxUtilities.cmake" : {
      "ObjectId" : "12fc807f2cda8361f9852270502cd0d9982494f6",
      "LastModified" : "2018-06-15T13:21:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Adding compiler flags to the CMAKE_CXX_FLAGS variable\n\n#\n\n###############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Make file path absolute if needed. Assuming\n\n#\n\n## Input variables:\n\n#    INPUT_PATH : Path to file.\n\n#\n\n## Output variables:\n\n#    RESULT_PATH : Absolute path to file.\n\n###############################################################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Clean /./ - like structures from a path list\n\n#\n\n## Input variables:\n\n#    INPUT_PATH : List of paths to file.\n\n#\n\n## Output variables:\n\n#    RESULT_PATH : List of cleaned paths to files\n\n###############################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Assert that the input variable exists.\n\n# Use to check prerequisites in code.\n\n###############################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    if( ${ARGC} EQUAL 0)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(STATUS \"FOUND VARIABLE [${ARGC}]  [${ARGV}]\")\n",
        "Line" : 80,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "###############################################################################\n\n# wrapper for option() with a convenience boolean setter for the value.\n\n#\n\n# Input arguments:\n\n#\n\n# NAME          : Name of option.\n\n# DESCRIPTION   : Description of option\n\n# BOOLEAN_VALUE : Value convertible to boolean that is used to set the value\n\n#                 of option. No value means false.\n\n#\n\n###############################################################################\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Define the following Operating System identifiers both in cmake and cpp:\n\n#    CX_WINDOWS    for all windows\n\n#    CX_WIN64      for 64 bit windows\n\n#    CX_WIN32      for 32 bit windows\n\n#    CX_LINUX\n\n#    CX_APPLE\n\n#\n\n#  Additionally, the\n\n#    __APPLE__\n\n#  is defined for mac\n\n###############################################################################\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#for cmake\n",
        "Line" : 122,
        "CharPositionInLine" : 26
      },
      "10" : {
        "Text" : "#for compiler\n",
        "Line" : 123,
        "CharPositionInLine" : 38
      },
      "11" : {
        "Text" : "#  -because they are needed at moc'ing time\n",
        "Line" : 125,
        "CharPositionInLine" : 37
      },
      "12" : {
        "Text" : "#for cmake\n",
        "Line" : 127,
        "CharPositionInLine" : 28
      },
      "13" : {
        "Text" : "#for compiler\n",
        "Line" : 128,
        "CharPositionInLine" : 40
      },
      "14" : {
        "Text" : "#for cmake\n",
        "Line" : 131,
        "CharPositionInLine" : 28
      },
      "15" : {
        "Text" : "#for compiler\n",
        "Line" : 132,
        "CharPositionInLine" : 40
      },
      "16" : {
        "Text" : "# define LINUX convenience variable\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#for compiler\n",
        "Line" : 145,
        "CharPositionInLine" : 36
      },
      "18" : {
        "Text" : "###############################################################################\n\n# Find date for latest cmake rebuild, in ISO 8601 format\n\n#\n\n###############################################################################\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n# Print a cmake list to stdout using lots of wrap.\n\n#\n\n# Usage: print_list_verbose(LIST_VAR \"Header text\")\n\n###############################################################################\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n# private\n\n###############################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###############################################################################\n\n# private\n\n###############################################################################\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "###############################################################################\n\n# private\n\n###############################################################################\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# set retval\n",
        "Line" : 212,
        "CharPositionInLine" : 86
      },
      "24" : {
        "Text" : "###############################################################################\n\n# Add classes and files to SOURCE_FILES.\n\n#\n\n# First argument:  List to populate with generated files.\n\n# Other arguments: Classes/files to add to list. Classes will expand to a h and cpp file.\n\n#                  Either input class names or file names, prepended with folder.\n\n#\n\n# Usage: add_class(SOURCE_FILES class1 class2 folder/class3 file1.h ...)\n\n###############################################################################\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###############################################################################\n\n# Add Qt moc classes and files to SOURCE_FILES.\n\n#\n\n# As add_class(), but the class is run through the Qt Moc system as well.\n\n###############################################################################\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# optimized: QT5_WRAP_CPP has large overhead: call once.\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "###############################################################################\n\n# Determin OpenGL Version\n\n#\n\n# INFO: does not work on windows\n\n###############################################################################\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###############################################################################\n\n#\n\n# Get a list of all variables with _prefix, return in _varResult\n\n#\n\n###############################################################################\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###############################################################################\n\n# Borrowed from\n\n#          https://github.com/lxde/lxqt-qtplugin/blob/master/qt5/CMakeLists.txt\n\n#\n\n# quote:\n\n#   there is no standard way to get the plugin dir of Qt5 with cmake\n\n#   The best way is get_target_property(QT_PLUGINS_DIR Qt5::QGtk2ThemePlugin LOCATION).\n\n#   This directly returns the platformthemes dir. However, this does not work\n\n#   in some distros, such as ubuntu.\n\n#   Finally, I came up with a more reliable way by using qmake.\n\n###############################################################################\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# execute the command \"qmake -query QT_INSTALL_PLUGINS\" to get the path of plugins dir.\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "###############################################################################\n\n#\n\n# Find the location of qts bin folder\n\n#\n\n###############################################################################\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "###############################################################################\n\n#\n\n# Find the location of qts qml folder\n\n#\n\n###############################################################################\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# execute the command \"qmake -query QT_INSTALL_QML\" to get the path of qml dir.\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###############################################################################\n\n#\n\n#Find Qt libraries directory (Qt frameworks directory for APPLE)\n\n#\n\n###############################################################################\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###############################################################################\n\n#\n\n# Create a list of all subdirs in curdir. \n\n# Return as list of paths relative to curdir. \n\n#\n\n###############################################################################\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#message(STATUS \"children: \" ${children})\n",
        "Line" : 378,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "###############################################################################\n\n#\n\n# Utility for printing all variables known to CMake at a given point.\n\n#\n\n###############################################################################\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "###############################################################################\n\n#\n\n# Creates a export header.\n\n#\n\n# MY_LIBRARY_NAME: Prefix for the export header name\n\n# OUT_EXPORT_HEADER: Path to the prefix header\n\n#\n\n###############################################################################\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###############################################################################\n\n#\n\n# Removes duplicate include directories.\n\n#\n\n# Confirmed on Windows:\n\n# 1. Speeds up the configuration step significantly when generating a target.\n\n# 2. Slightly speeds up mocing if used before QT5_WRAP_CPP, because duplicate include\n\n# directories are removed and thus not added to moc_<filename>.cpp_parameters (the -IC: tags)\n\n#\n\n###############################################################################\n\n#macro(cx_remove_duplicate_include_directories)\n\n#    get_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)\n\n#    list(REMOVE_DUPLICATES dirs)\n\n#    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES ${dirs})\n\n#endmacro()\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###############################################################################\n\n#\n\n# http://stackoverflow.com/questions/148570/using-pre-compiled-headers-with-cmake\n\n#\n\n###############################################################################\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 457,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "###############################################################################\n\n#\n\n# Define the option CX_APP_${APP_NAME}, default value ON\n\n# If the option is ON, add the subdirectory APP_NAME.\n\n#\n\n###############################################################################\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "###############################################################################\n\n#\n\n# Set some default values for the MACOSX_BUNDLE variable family\n\n# Customize for each application,\n\n# in particular the icon, which must have the resource installed int\n\n#\n\n###############################################################################\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# For Apple set the icns file containing icons\n",
        "Line" : 485,
        "CharPositionInLine" : 11
      },
      "45" : {
        "Text" : "# set how it shows up in the Info.plist file\n",
        "Line" : 486,
        "CharPositionInLine" : 46
      },
      "46" : {
        "Text" : "###############################################################################\n\n#\n\n# Add a non-source file to the project file.\n\n#\n\n# Call this for each file that sould be added to the project for easy edit\n\n# access from an IDE (VS, XCode, QtCreator)\n\n#\n\n# See also http://public.kitware.com/Bug/view.php?id=7835\n\n#\n\n###############################################################################\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "###############################################################################\n\n#\n\n# Add all non-source files to the project file.\n\n# (Files that shall not be compiled with this project file.)\n\n##\n\n###############################################################################\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "###############################################################################\n\n#\n\n# Set Retina display resolution on the input TARGET\n\n#\n\n#   http://blog.qt.io/blog/2013/04/25/retina-display-support-for-mac-os-ios-and-x11/\n\n#   http://mpiannucci.com/view/cmakeretina\n\n#   https://blog.inventic.eu/2013/02/problem-with-qt-application-on-macos-retina-display/\n\n#\n\n# Must be combined with disabling retina on VTK/GL windows, as described in\n\n#   http://public.kitware.com/pipermail/vtkusers/2015-February/090117.html\n\n#\n\n##\n\n###############################################################################\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#        set(MACOSX_BUNDLE_INFO_PLIST ${CustusX_SOURCE_DIR}/CMake/MacOSXBundleInfo_cx_custom.plist.in)\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "CMakeGraphVizOptions.cmake" : {
      "ObjectId" : "ba2866adc9c576871467898500c5e4eb8847b049",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(GRAPHVIZ_EXECUTABLES OFF)\n\n#set(GRAPHVIZ_STATIC_LIBS OFF)\n\n#set(GRAPHVIZ_SHARED_LIBS OFF)\n\n#set(GRAPHVIZ_MODULE_LIBS OFF)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(GRAPHVIZ_IGNORE_TARGETS_REGEX \"*Test*\")",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeLists.txt" : {
      "ObjectId" : "f44ca70acc7af3baa0686e2f027ac23c7058a529",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               CustusX project\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Enable C++11\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# kill warning about mixing full and partial paths in libs:\n\n# http://www.cmake.org/cmake/help/v2.8.10/cmake.html#policy%3aCMP0003\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add some compiler flags (preprocessor definitions)\n\n#------------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# _USE_MATH_DEFINES Must be defined before math.h is included\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# required to compile some eigen code on at least Ubuntu\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Set CustusX version\n\n#------------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Includes\n\n#------------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add subdirectories\n\n#------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# after plugins - uses global properties set there\n",
        "Line" : 92,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# CTest\n\n#------------------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add non-source files\n\n#------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "6abf1267dbd67739078dc5e788c61cbded435894",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Build the USER and DEVELOPER documentation\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CLEAR means not advanced\n",
        "Line" : 16,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : "###############################################################################\n\n#\n\n# Install all documentation files for CustusX\n\n#\n\n# The qt help collection files are sufficient for in-app help.\n\n# Other help is available on the web site.\n\n#\n\n###############################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# Generate plugin page cx_user_doc_plugins.md \n\n# based on info about active plugins.\n\n#\n\n###############################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate PLUGIN_SUBPAGES_TEXT containing \\subpage refs to all documented plugins\n\n# ready to insert into markdown.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(STATUS \"PLUGIN_SUBPAGES_TEXT : \" ${PLUGIN_SUBPAGES_TEXT})\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Generate ALL_ACTIVE_PLUGIN_NAMES containing all plugins found in the system\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#message(STATUS \"ALL_PLUGINS: \" )\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(STATUS \"ON    \" \"${_var}\" )\n",
        "Line" : 62,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "#message(STATUS \"  plugin_name: \" ${plugin_name})\n",
        "Line" : 66,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#message(STATUS \"OFF    \" \"${_var}\" )\n",
        "Line" : 69,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Generate UNDOCUMENTED_PLUGIN_NAMES containing all plugins not documented\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#message(STATUS \"UNDOCUMENTED_PLUGIN_NAMES: \" )\n\n#foreach(_var ${UNDOCUMENTED_PLUGIN_NAMES})\n\n#    message(STATUS UNDOCUMENTED_PLUGIN_NAMES \"${_var}\" )\n\n#endforeach()\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Generate UNDOCUMENTED_PLUGINS_TEXT containing \\list of all undocumented plugins,\n\n# ready to insert into markdown.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#message(STATUS \"UNDOCUMENTED_PLUGINS_TEXT : \" ${UNDOCUMENTED_PLUGINS_TEXT})\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#PLUGIN_SUBPAGES_TEXT\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "###############################################################################\n\n#\n\n# Set common defines\n\n# for user doc.\n\n#\n\n###############################################################################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set image folders\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# set input files\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# remove the default mainpage if an override is defined:\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# tweaks that remove source code stuff\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# when NO this one disables lots of std::stuff in the TOC.\n",
        "Line" : 151,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# end tweaks\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "###############################################################################\n\n#\n\n# Generate CustusX user documentation on Qt QHP format.\n\n#\n\n###############################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# tweaks that make pages more fitting in the internal help system\n",
        "Line" : 171,
        "CharPositionInLine" : 5
      },
      "25" : {
        "Text" : "# end tweaks\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# works on mac\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# required on ubuntu\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# .. not tested on win\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "###############################################################################\n\n#\n\n# Generate CustusX user documentation on HTML format.\n\n#\n\n###############################################################################\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "###############################################################################\n\n#\n\n# Generate CustusX developer documentation on html format\n\n#\n\n###############################################################################\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ?????\n",
        "Line" : 259,
        "CharPositionInLine" : 38
      },
      "32" : {
        "Text" : "# tweaks that make pages more fitting in the internal help system\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# when NO this one disables lots of std::stuff in the TOC.\n",
        "Line" : 290,
        "CharPositionInLine" : 43
      },
      "34" : {
        "Text" : "# end tweaks\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#\tSET(CX_DOXYGEN_INPUT \"${CX_DOC_INPUT_DIRECTORY} ${CustusX_SOURCE_DIR}/doc/doxygen\")\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "###############################################################################\n\n#\n\n# Generate CustusX documentation\n\n#\n\n###############################################################################\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "62defdf4679d86f48aabb368867910c6bcf61404",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               CustusX source\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External libraries\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#cx_initialize_FAST()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add subdirectories\n\n#------------------------------------------------------------------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Testing for CustusX\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Applications: add last\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# perform global installation tasks last, such as install bundle (must be in subdir to ensure correct calling order)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "source/ThirdParty/CMakeLists.txt" : {
      "ObjectId" : "001250f8ed59fc802f73cd91ea75699efe306b25",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               ThirdParty\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/ThirdParty/VTKMultiVolume/CMakeLists.txt" : {
      "ObjectId" : "c1848134918528f3560c5cf23ee10f10aa69a4c1",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# vtkMultiVolRen\n\n#\n\n# Description: vtkMultiVolRen demo\n\n#\n\n# Author: xXx <xXX>, (C) 2010\n\n#\n\n# Copyright: See COPYING file that comes with this distribution\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# off until stable\n",
        "Line" : 14,
        "CharPositionInLine" : 93
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure OpenGL support (copied from VTK main CMakeLists.txt).\n\n# At the moment CMake's FindOpenGL considers OpenGL should be found\n\n# in the framework version on OSX. This is a reasonable assumption for\n\n# few people are going to use X. The module warns that if X is to be\n\n# used, one has to set the libs and include dir manually, which is\n\n# exactly what we are going to do below.\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#  ${KIT}.cxx\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Create custom commands to encode each glsl file into a C string literal\n\n# in a header file\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Needs vtkEncodeString, VTK_ENCODESTRING_EXE\n\n# should work ...\n\n# VTK_VOLUMERENDERING_EXPORT is the flag associated to the library, should be adapted\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "## TODO\n",
        "Line" : 91,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 7
    },
    "source/ThirdParty/iir1/Makefile.am" : {
      "ObjectId" : "78ff46c3bfad2fdb6e22f94d492137549318479b",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "source/apps/CMakeLists.txt" : {
      "ObjectId" : "9195ad8862be018e6e1ae7f373329145b73f33e1",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/apps/CustusX/CMakeLists.txt" : {
      "ObjectId" : "ce8106bc5a153ff23349fcb2b4ff93af0d189bac",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##\n\n##               CustusX Application\n\n##                  Public version\n\n##\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CX_COPYRIGHT_TEXT \"Copyright SINTEF Medical Technology. BSD licence\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# additions to defaults from cx_initialize_macosx_bundle()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For Apple set the icns file containing icons\n",
        "Line" : 15,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "# set how it shows up in the Info.plist file\n",
        "Line" : 16,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "# set where in the bundle to put the icns file\n",
        "Line" : 18,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# include the icns file in the target\n",
        "Line" : 19,
        "CharPositionInLine" : 86
      },
      "7" : {
        "Text" : "#\tset(MACOSX_BUNDLE_INFO_STRING ${CX_SYSTEM_DEFAULT_APPLICATION})\n\n#\tset(MACOSX_BUNDLE_BUNDLE_NAME ${CX_SYSTEM_DEFAULT_APPLICATION})\n\n#\tset(MACOSX_BUNDLE_BUNDLE_VERSION \"${CustusX_VERSION_STRING}\")\n\n#\tset(MACOSX_BUNDLE_SHORT_VERSION_STRING \"${MACOSX_BUNDLE_BUNDLE_VERSION}\")\n\n#\tset(MACOSX_BUNDLE_LONG_VERSION_STRING \"${CX_SYSTEM_DEFAULT_APPLICATION} ${MACOSX_BUNDLE_BUNDLE_VERSION}\")\n\n#\tset(MACOSX_BUNDLE_COPYRIGHT ${CX_COPYRIGHT_TEXT})\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Executable\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#APPLE\n",
        "Line" : 32,
        "CharPositionInLine" : 54
      },
      "10" : {
        "Text" : "#WINDOWS\n",
        "Line" : 35,
        "CharPositionInLine" : 54
      },
      "11" : {
        "Text" : "#LINUX\n",
        "Line" : 38,
        "CharPositionInLine" : 44
      },
      "12" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Linking\n\n#------------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\tcxPluginCalibration\n\n#\tcxPluginAlgorithm\n\n#\torg_custusx_usreconstruction\n\n#\torg_custusx_acquisition\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Install CustusX\n\n#------------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "source/apps/LogConsole/CMakeLists.txt" : {
      "ObjectId" : "c068c55265971c5fdcb9b0409702995d7a9912df",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================\n\n# app for reading sonowand recorder position files \n\n# =========================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Variables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Include\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To be removed when all old modules have been converted to plugins\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#\tcxPluginCalibration\n\n#\tcxPluginAlgorithm\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#cx_remove_duplicate_include_directories()\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "source/apps/MemoryTester/CMakeLists.txt" : {
      "ObjectId" : "9a39e1839af3c133363579fc27228ce884cf344c",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================\n\n# CX C++ Test App for Qt fun stuff \n\n# =========================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/apps/OpenGLTestApplication/CMakeLists.txt" : {
      "ObjectId" : "24360a34d23fa778467c006cb4b3dcd11fbc0191",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#project(OpenGLTestApplication)\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "source/apps/OpenIGTLinkServer/CMakeLists.txt" : {
      "ObjectId" : "7ab3d2c96c2f3ab802f8515a1185f734235ef460",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# windows 32 bit version is made for ultrasonix communication\n",
        "Line" : 3,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 1
    },
    "source/apps/PositionFileReader/CMakeLists.txt" : {
      "ObjectId" : "2e461c07cb262c2a8b4ce3c878a597a0efbe5324",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================\n\n# app for reading sonowand recorder position files \n\n# =========================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/apps/tests/CMakeLists.txt" : {
      "ObjectId" : "233d6ba64676a7a47fd1ae8193079986368a3221",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/gui/CMakeLists.txt" : {
      "ObjectId" : "dda11500ac91f9fc1b206d6d7c8de44fcaf0fc3b",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Gui library\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#----------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#----------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#----------------------\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#----------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#----------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#----------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#----------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#----------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#----------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#----------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# generate rules for building source files from the resources\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "source/gui/testing/CMakeLists.txt" : {
      "ObjectId" : "04b0b6fd3c362e1f4061fc8d1722e04178e75490",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/installation/CMakeLists.txt" : {
      "ObjectId" : "e065ad1df1514fe0f7fa3b24c251993128fa3065",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               CustusX source\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Perform full install of package, including config and docs:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/logic/CMakeLists.txt" : {
      "ObjectId" : "0ea7f82dad009a91dd32c6133a267c366becee86",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Logic Layer\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/logic/testing/CMakeLists.txt" : {
      "ObjectId" : "c9a39cd1b9155d379545a20fd4b255a37b6d7095",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/CMakeLists.txt" : {
      "ObjectId" : "c233e0f1a122e229a3b79d3ce6797a5b9024a688",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a list of available plug-ins and make them known to the build system\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add plugins defined externally, i.e defined outside CustusX core.\n\n# Why: Enables enabling of external plugins,\n\n#      possibly outside current folder.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parse current folder, assume each subfolder is a plugin, add those not already present.\n\n# Why: This ensures plugins added to current folder but not enabled in cmake is available\n\n#      as a cmake option.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find all previously defined plugins, add those not already present.\n\n# Why: This keeps knowledge of external plugins defined\n\n#      on the cmake command line between runs\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#foreach(var ${CX_PLUGINS})\n\n#  message(\"==plugin: \" ${var})\n\n#endforeach()\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CTK requires QT_QMAKE_EXECUTABLE to be set on Windows.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.acquisition/CMakeLists.txt" : {
      "ObjectId" : "f7bac8b45f614e81623b2232a3f6db27fce5622d",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Acquisition Plugin\n\n##\n\n##               Plugin\n\n##\n\n##  Description: Acquisition of tracking and image data, in particular ultrasound recordings.\n\n##\n\n##\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#cxLogicManager\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "source/plugins/org.custusx.acquisition/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.acquisition/testing/CMakeLists.txt" : {
      "ObjectId" : "c74c27471340805f9b5a9fe86babc7b7248b1cbb",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.calibration/CMakeLists.txt" : {
      "ObjectId" : "bb02046fd138648ff7c6e808493d24d5b96e0d68",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.calibration/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.calibration/testing/CMakeLists.txt" : {
      "ObjectId" : "b7a7e8a2214e07dd6c153e58ad909cb9c6de99e9",
      "LastModified" : "2018-03-14T18:35:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#qt5_wrap_cpp(CX_TEST_MOC_SOURCE_FILES ${CX_TEST_MOC_SOURCE_FILES})\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.ceetron/CMakeLists.txt" : {
      "ObjectId" : "d9c9c7cc21cda79bd968a12600b48963a0a59173",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.ceetron/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.ceetron/testing/CMakeLists.txt" : {
      "ObjectId" : "66e46344dd1253ac829c5a1220d6e9b474d9212c",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.core.filemanager/CMakeLists.txt" : {
      "ObjectId" : "e2252d339b6087fb250cd3edacf395ee60cd34c1",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               FileManager Plugin\n\n##\n\n##               Plugin\n\n##\n\n##  Description: Managing reading and writing of files in CustusX\n\n##\n\n##\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.core.filemanager/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.filemanager/testing/CMakeLists.txt" : {
      "ObjectId" : "24809f240e5ba55b042b06ab7f98191fb934f43c",
      "LastModified" : "2018-12-12T11:57:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.core.openigtlink3/CMakeLists.txt" : {
      "ObjectId" : "5a69482445e8daefea5fd790da34bdda2f62e89c",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.core.openigtlink3/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.openigtlink3/testing/CMakeLists.txt" : {
      "ObjectId" : "6b1baa07a04618df4b17304fa6e81745f1078825",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.core.patientmodel/CMakeLists.txt" : {
      "ObjectId" : "d951bbdcd36aa18ff31499cd66142c7746de5060",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.core.patientmodel/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.patientmodel/testing/CMakeLists.txt" : {
      "ObjectId" : "65723d0a1f458c2d1f0b7c806985f68388152070",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.core.state/CMakeLists.txt" : {
      "ObjectId" : "29cec6df27ceb6c65e4b446e23862ec8f85a723d",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               State Service\n\n##\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.core.state/manifest_headers.cmake" : {
      "ObjectId" : "b11a70befed7b01dddbe0083df8b50eb28af9d88",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Require-Plugin )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(Plugin-ContactAddress \"\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/plugins/org.custusx.core.state/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.tracking.system.igstk/CMakeLists.txt" : {
      "ObjectId" : "e1f32abe610d99c65d8b08fef84a012e45ca0f55",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.core.tracking.system.igstk/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.tracking.system.igstk/testing/CMakeLists.txt" : {
      "ObjectId" : "16ea56581facd4ab66ba5a1d56304c53cc4fa0dd",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.core.tracking/CMakeLists.txt" : {
      "ObjectId" : "070421107f76d5307bf02fd49f4fda5a6832ae15",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.core.tracking/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.tracking/testing/CMakeLists.txt" : {
      "ObjectId" : "d981c0f34365eb604faf14ab202f16d31a279bd1",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.core.video/CMakeLists.txt" : {
      "ObjectId" : "1bcabcd2529eb2172b4c149a5a03ceb270a6031e",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.core.video/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.video/testing/CMakeLists.txt" : {
      "ObjectId" : "e2010f8a5381be7901dd7e19c3254eb2bf72b9a8",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.core.view/CMakeLists.txt" : {
      "ObjectId" : "92be729c281646a7b8387daa98a859744cd38186",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.core.view/manifest_headers.cmake" : {
      "ObjectId" : "ce098a4da7f3c75e80f21477d7253d7ef0db53b9",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Plugin-ContactAddress \"\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.view/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.core.view/testing/CMakeLists.txt" : {
      "ObjectId" : "cc746c03a49dfee57d75ea576e921e2add1dd568",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.dicom/CMakeLists.txt" : {
      "ObjectId" : "1c7fe4e8a14b104277ec0b2ac0ed601f71bd91f7",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed on windows to where <windows.h> is included\n\n# http://qt-project.org/forums/viewthread/22133\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#find_package(CTKDICOMCore)\n\n#message(STATUS \"**** IMPORTED_LINK_INTERFACE_LIBRARIES_${CMAKE_BUILD_TYPE}\" )\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE: ${TEST_VALUE}\")\n\n#foreach (var ${TEST_VALUE})\n\n#\tmessage(STATUS \"    \" ${var})\n\n#endforeach()\n\n#IMPORTED_LOCATION_RELEASE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# These two lines are needed with latest CTK. See cha: 50a0e60f708f3bf4b0913d073b25ef3d90c81bf1\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "source/plugins/org.custusx.dicom/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.dicom/testing/CMakeLists.txt" : {
      "ObjectId" : "fc751e7d2377282c70b2844f7be8069ef2a00471",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.example/CMakeLists.txt" : {
      "ObjectId" : "6f32a64157c4e2ebe44e9bc88715f3f789395d02",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#cxLogicManager\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.example/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.example/testing/CMakeLists.txt" : {
      "ObjectId" : "3c292238019f0157c8717d8d180bf329175f34c6",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.filter.accusurf/CMakeLists.txt" : {
      "ObjectId" : "3f15caadca1ba021bc84eb1b482aab4d6be6e20b",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cxPluginAlgorithm\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.filter.accusurf/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.filter.accusurf/testing/CMakeLists.txt" : {
      "ObjectId" : "f85a5c0cabbfc60c67dae99848f0825f35d6a856",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################\n\n#               cxPluginAlgorithm Tests\n\n###########################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/plugins/org.custusx.filter.airways/CMakeLists.txt" : {
      "ObjectId" : "c6e97f5c1c8be28c5afc1261141b0554cecd2468",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### Enable C++11\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure OpenCL kernel files are copied to the installer\n\n# Install OpenCL kernels\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Z lib comes with many names, needed for FAST atm\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "source/plugins/org.custusx.filter.airways/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.filter.airways/testing/CMakeLists.txt" : {
      "ObjectId" : "5a923f875d18a90f4c2718837fec60c8f090f096",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.filter.airwaysfromcenterline/CMakeLists.txt" : {
      "ObjectId" : "a19f9cacf521f5848081d0af70f4f021d89cbd6a",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cxPluginAlgorithm\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.filter.airwaysfromcenterline/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.filter.airwaysfromcenterline/testing/CMakeLists.txt" : {
      "ObjectId" : "14f9373cbecf974180b2f4d1761dd2a38580ae74",
      "LastModified" : "2018-12-12T11:57:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################\n\n#               cxPluginAlgorithm Tests\n\n###########################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/plugins/org.custusx.filter.routetotarget/CMakeLists.txt" : {
      "ObjectId" : "22167a5b63430ce92a7de69ec464276ddf2ea510",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cxPluginAlgorithm\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.filter.routetotarget/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.help/CMakeLists.txt" : {
      "ObjectId" : "0c6904f46f4edfe3b0db5c9a7a95211ec149a51e",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.help/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.help/testing/CMakeLists.txt" : {
      "ObjectId" : "720894b37ca9e0ca87b0647d0470cd3245002838",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.registration.gui/CMakeLists.txt" : {
      "ObjectId" : "ed0822ed2f6df638827362ffb78ae3d9c9764ded",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test\n",
        "Line" : 39,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.gui/manifest_headers.cmake" : {
      "ObjectId" : "bcdd4532d5f7d7b0fac70dc9cff266c89388f26e",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Plugin-ContactAddress \"\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.gui/target_libraries.cmake" : {
      "ObjectId" : "c7778ff269eb3ae6f012509d5452948b1f2f161a",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#org_custusx_registration\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "source/plugins/org.custusx.registration.method.bronchoscopy/CMakeLists.txt" : {
      "ObjectId" : "bb942ecae0ae521d36a6935ba486dcb9882eea12",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.bronchoscopy/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.bronchoscopy/testing/CMakeLists.txt" : {
      "ObjectId" : "f5a4789fbb85e1ebd9bda07ce4464381b5387183",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.registration.method.centerline/CMakeLists.txt" : {
      "ObjectId" : "e8d79e533de3420e637d58730e40fb1f5f04b325",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.centerline/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.centerline/testing/CMakeLists.txt" : {
      "ObjectId" : "3b224ff6487a6a381c60bf6020182ff382560516",
      "LastModified" : "2018-12-12T11:57:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################\n\n#               cxPluginAlgorithm Tests\n\n###########################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/plugins/org.custusx.registration.method.commandline/CMakeLists.txt" : {
      "ObjectId" : "b5b4a8109d0925ae3b02224cb29f1e6eaef6b1cb",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.commandline/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.commandline/testing/CMakeLists.txt" : {
      "ObjectId" : "bd51fca4a47258b7d9525e50496fe363372e2655",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.registration.method.landmark/CMakeLists.txt" : {
      "ObjectId" : "a1dd682e68ee60973703e8a2114d2cac31b6c7c4",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.landmark/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.landmark/testing/CMakeLists.txt" : {
      "ObjectId" : "59824b86912bbf5e8cc0198b79bcda66e33dfc48",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.registration.method.manual/CMakeLists.txt" : {
      "ObjectId" : "fc8959f433b8edfbbb726be196c33bb4fc47b306",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.manual/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.manual/testing/CMakeLists.txt" : {
      "ObjectId" : "080c568ad27b07cc00a1b4d55a66440991472192",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.registration.method.plate/CMakeLists.txt" : {
      "ObjectId" : "473b676bedfd005231078400cc1ea9fa9d9de8ff",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.plate/manifest_headers.cmake" : {
      "ObjectId" : "594a20af42c6ac06f9d247a0a47987cb1802a505",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Plugin-ContactAddress \"\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.plate/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.pointcloud/CMakeLists.txt" : {
      "ObjectId" : "7af2904158b27037776b32cb7ce129b2ac7af0c2",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.pointcloud/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration.method.vessel/CMakeLists.txt" : {
      "ObjectId" : "ad153d417fbcc5d9c98efa6e91cebe6b26835fb0",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "source/plugins/org.custusx.registration.method.vessel/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration/CMakeLists.txt" : {
      "ObjectId" : "94f5357c6aac45a258337ce81280cd20866eaba1",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TODO: Remove these dependencies\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.registration/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.registration/testing/CMakeLists.txt" : {
      "ObjectId" : "dd294f759293528b8b5f854e24ec8921f551b34b",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.training/CMakeLists.txt" : {
      "ObjectId" : "ba8a908ca43126a0c7482b36839a3d2cc86062d3",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#add_subdirectory(testing)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#cx_add_non_source_file(\"doc/org_custusx_training.h\")\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "source/plugins/org.custusx.training/manifest_headers.cmake" : {
      "ObjectId" : "8ac680179c05a57661eaf929647d03150b0a1417",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Plugin-ContactAddress \"\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.training/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.usreconstruction.pnn/CMakeLists.txt" : {
      "ObjectId" : "e4b3fab17c05fef785751a8ebc8e33c120db9ac9",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "source/plugins/org.custusx.usreconstruction.pnn/manifest_headers.cmake" : {
      "ObjectId" : "baf6cb3885c9c513cddf168c7c86e1173ccbec35",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.usreconstruction.pnn/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.usreconstruction.pnn/testing/CMakeLists.txt" : {
      "ObjectId" : "140bcd99a113adcc950d36238c2ead471ae293e6",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.usreconstruction.vnncl/CMakeLists.txt" : {
      "ObjectId" : "297a5b40c55285420e4b0b352ca754e9f958f54c",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install OpenCL kernels into bundle\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.usreconstruction.vnncl/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.usreconstruction.vnncl/testing/CMakeLists.txt" : {
      "ObjectId" : "9159f73eeac1ebc9cfb95edfe6bf82e9f651737b",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.usreconstruction/CMakeLists.txt" : {
      "ObjectId" : "fc14fc779d93f5513f7505e644558720c549fcb2",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   cxReconstructionManager.h\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.usreconstruction/manifest_headers.cmake" : {
      "ObjectId" : "5185a77cde54ba30023b56995088e30807689f67",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.usreconstruction/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.usreconstruction/testing/CMakeLists.txt" : {
      "ObjectId" : "3019458e7f3d8637b32f84553c22bbd7dc9f2d49",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/plugins/org.custusx.virtualbronchoscopy/CMakeLists.txt" : {
      "ObjectId" : "b98b5ffd2a88d28c385e16b81b49091e3f38e9fb",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#cx_add_non_source_file(\"doc/org.custusx.virtualbronchoscopy.h\")\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_subdirectory(testing)\n\n#add_subdirectory(testApp)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "source/plugins/org.custusx.virtualbronchoscopy/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.webserver/CMakeLists.txt" : {
      "ObjectId" : "da1e09b2ed631d6cdeae4d293f7751a1f68dd1a8",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(STATUS \"qhttpserver: \" ${qhttpserver_DIR} \", \" ${qhttpserver_FOUND})\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#on windows we want dlls to be placed with the executables\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "source/plugins/org.custusx.webserver/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/plugins/org.custusx.webserver/testing/CMakeLists.txt" : {
      "ObjectId" : "08f4438ac30e4e6dc47e956e151c3419dcfe5119",
      "LastModified" : "2018-12-12T11:57:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/resource/CMakeLists.txt" : {
      "ObjectId" : "f854af1fa56fd30e45a5afff5d8a5ce3244844ee",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Resource Layer\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/resource/GUIExtender/CMakeLists.txt" : {
      "ObjectId" : "61c7c9ab1498d5e4f4ee51748cfe1c05a67af2cd",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/resource/OpenIGTLinkUtilities/CMakeLists.txt" : {
      "ObjectId" : "67bf375c9d8c4194250efb10a400a9ad4ee9a229",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/resource/OpenIGTLinkUtilities/testing/CMakeLists.txt" : {
      "ObjectId" : "f434ff4d2f2cd936edf53be36788ef6b8b2d5e1b",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#qt5_wrap_cpp(CXTEST_SOURCES_TO_MOC ${CXTEST_SOURCES_TO_MOC})\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "source/resource/core/CMakeLists.txt" : {
      "ObjectId" : "b8913d2c592b5a8627203f4ed0955cd625c9283b",
      "LastModified" : "2019-01-21T09:02:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Resource Core library\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the default SSC_DATA_ROOT for the location of SSCData.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extra definitions:\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add gcov LAST in the link sequence! (http://stackoverflow.com/questions/566472/where-are-the-gcov-symbols)\n",
        "Line" : 343,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "source/resource/core/settings/CMakeLists.txt" : {
      "ObjectId" : "7d757a05042a6d525f1e40b1b1e4c198a2e79265",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##\n\n##               Settings Library\n\n## \n\n##               Resource Layer\n\n##\n\n##  Global defines and settings files     \n\n##\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Select the installed location of configuration files, relative to executable. \n\n# MUST match the values in CPack install for CustusX!!\n\n#if (APPLE)\n\n#    set(CX_CONFIG_ROOT_RELATIVE_INSTALLED ./config)\n\n#else (APPLE) # Windows and Linux\n\n#    set(CX_CONFIG_ROOT_RELATIVE_INSTALLED ../config)\n\n#endif (APPLE)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message( STATUS \"VTK_RENDERING_BACKEND: \" ${VTK_RENDERING_BACKEND} )\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#        message( STATUS \"VTK_RENDERING_BACKEND == OpenGL2. setting CX_VTK_OPENGL2\" )\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# location of configuration files during development (in the source tree)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# hack: the internal project CustusXSetup need a way to inject its own config for use \n\n# when running from build location. This might be interesting for others as well. \n\n# TODO: generalize.\n\n#set (CX_OPTIONAL_CONFIG_ROOT ${CustusX_SOURCE_DIR}/../../CustusXSetup/CustusXSetup/config)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# location of documentation files during compilation\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# location of documentation files after install, relative to executable\n\n#if (APPLE)\n\n#    set(CX_DOC_ROOT_RELATIVE_INSTALLED ./doc)\n\n#else (APPLE) # Windows and Linux\n\n#    set(CX_DOC_ROOT_RELATIVE_INSTALLED ../doc)\n\n#endif (APPLE)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "source/resource/core/testing/CMakeLists.txt" : {
      "ObjectId" : "3a50056d65df66d745aad5da33b43bb9b857fa70",
      "LastModified" : "2019-01-21T09:02:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cxtestDataReaderWriter.cpp\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "source/resource/core/usReconstructionTypes/testing/CMakeLists.txt" : {
      "ObjectId" : "204c1a24d0de9151a02033bd5ba2013e14a733d1",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/resource/filter/CMakeLists.txt" : {
      "ObjectId" : "356b920d6e5e393d463c035a127bc73c47bebb49",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Resource filter library\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/resource/filter/testing/CMakeLists.txt" : {
      "ObjectId" : "0a3e794e54ab646e7213d677880bd1df70a0d276",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/resource/pluginUtilities/CMakeLists.txt" : {
      "ObjectId" : "20b0b0ce993c07273845eaca7a32e17ede4894ec",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Resource plugin utilities\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/resource/testUtilities/CMakeLists.txt" : {
      "ObjectId" : "ee822aecbc24bfb4fce8f4a83081b51ca408feb7",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================================\n\n# This file is part of CustusX, an Image Guided Therapy Application.\n\n#\n\n# Copyright (c) SINTEF Department of Medical Technology.\n\n# All rights reserved.\n\n#\n\n# CustusX is released under a BSD 3-Clause license.\n\n#\n\n# See Lisence.txt (https://github.com/SINTEFMedtek/CustusX/blob/master/License.txt) for details.\n\n# =========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################\n\n#               cxTestUtilities\n\n#\n\n# Utilities library for testing.\n\n# Contains the catch unit test framework.\n\n# Add all system-wide test utilities here.\n\n###########################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/resource/testUtilities/cisst_code/CMakeLists.txt" : {
      "ObjectId" : "c8ba8dfc946979e8e1ea0ece13a90195de4b41b3",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# $Id: CMakeLists.txt,v 1.27 2007/04/26 20:12:05 anton Exp $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# (C) Copyright 2003-2007 Johns Hopkins University (JHU), All Rights\n\n# Reserved.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- begin cisst license - do not edit ---\n\n# \n\n# This software is provided \"as is\" under an open source license, with\n\n# no warranty.  The complete license can be found in license.txt and\n\n# http://www.cisst.org/cisst/license.txt.\n\n# \n\n# --- end cisst license ---\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clipped from cisst/tests/CMakeLists.txt\n\n# Create the main library\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "source/resource/testUtilities/cisst_code/cisstMacros.cmake" : {
      "ObjectId" : "da2d243109abd78899b9eaa8f7b67d5ea128532b",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# $Id: cisstMacros.cmake,v 1.17 2007/04/26 19:33:56 anton Exp $\n\n#\n\n# Author(s):  Anton Deguet\n\n# Created on: 2004-01-22\n\n#\n\n# (C) Copyright 2004-2007 Johns Hopkins University (JHU), All Rights\n\n# Reserved.\n\n#\n\n# --- begin cisst license - do not edit ---\n\n# \n\n# This software is provided \"as is\" under an open source license, with\n\n# no warranty.  The complete license can be found in license.txt and\n\n# http://www.cisst.org/cisst/license.txt.\n\n# \n\n# --- end cisst license ---\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The macro adds a library to a CISST-related project by processing the \n\n# externally defined variables listed below:\n\n#\n\n# - LIBRARY is the name of the library, e.g. cisstVector\n\n# - DEPENDENCIES is a list of dependencies, for cisstVector, set it to cisstCommon\n\n# - SOURCE_FILES is a list of files, without any path (absolute or relative)\n\n# - HEADER_FILES is a list of files, without any path (absolute or relative)\n\n#\n\n#\n\n# Invoke this macro from within a library's CMakeLists.txt to add that library\n\n# to a larger project.  The name of the project is given as a macro argument.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The macro performs the following:\n\n# -- create the source and header lists of files with the right path\n\n# -- check the dependencies\n\n# -- add the link options based on the dependencies\n\n# -- add the library \n\n# -- create the install targets for the headers as well as the library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure this lib should be compiled\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build source list with full path\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Build header list with full path and generate a main header file for the library\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Add the library\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add dependencies for linking, also check BUILD_xxx for dependencies\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Check that dependencies are build\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set the link flags\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Keep a trace of dependencies for main CMake level\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Install all header files\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Macro used to compare required libraries for a given target with\n\n# libraries actually compiled.  This macro adds the required link\n\n# options.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# First test that all libraries should have been compiled\n",
        "Line" : 119,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# Second, create a list of libraries in the right order\n",
        "Line" : 126,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# Link with the required libraries\n",
        "Line" : 132,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# Macro to add all the available tests\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Once the test program is compiled, run it to create a list of available tests\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#COMMAND ${EXECUTABLE_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/${testProgram}\n",
        "Line" : 142,
        "CharPositionInLine" : 21
      },
      "19" : {
        "Text" : "# Add the custom build list\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#\n\n# $Log: cisstMacros.cmake,v $\n\n# Revision 1.17  2007/04/26 19:33:56  anton\n\n# All files in libraries: Applied new license text, separate copyright and\n\n# updated dates, added standard header where missing.\n\n#\n\n# Revision 1.16  2006/11/20 20:33:19  anton\n\n# Licensing: Applied new license to cisstCommon, cisstVector, cisstNumerical,\n\n# cisstInteractive, cisstImage and cisstOSAbstraction.\n\n#\n\n# Revision 1.15  2006/05/13 19:33:01  anton\n\n# CMake configuration: Preliminary support for directory names with spaces.\n\n# See ticket #226\n\n#\n\n# Revision 1.14  2006/03/30 19:08:27  anton\n\n# cisstMacros.cmake: Updated so that cisstXyz.h is not changed everytime\n\n# CMake runs (i.e. at each compilation).\n\n#\n\n# Revision 1.13  2005/11/02 14:58:45  anton\n\n# cisstMacros.cmake: Bug in dependency check.  Flags to compile libraries\n\n# are now BUILD_LIBS_xyz (used to be BUILD_xyz).\n\n#\n\n# Revision 1.12  2005/09/06 02:08:14  anton\n\n# CMake configuration: Created a main CMakeLists.txt for the libs, tests and\n\n# examples.  A lot of code has been \"factorized\" in the ./CMakeLists.txt.\n\n# Known problems: \"doc\" is not working yet. Dependencies on SWIG projects don't\n\n# work for parallel builds. If a lib is selected and then unselected, the tests\n\n# still appear ...\n\n#\n\n# Revision 1.11  2005/05/19 19:29:00  anton\n\n# cisst libs: Added the license to cisstCommon and cisstVector\n\n#\n\n# Revision 1.10  2005/01/18 15:43:21  anton\n\n# cisstMacros.cmake: Yet another attempt to circumvent a CMake internal error\n\n# while creating the main header files.  This time, I use only one WRITE and\n\n# avoid the APPEND.  It seems to work ... for now.\n\n#\n\n# Revision 1.9  2005/01/10 19:17:45  anton\n\n# cisstMacros.cmake:  Use WRITE(FILE ...) and WRITE(APPEND ...) instead of\n\n# FILE_WRITE which seems deprecated.  This will hopefully solve the write\n\n# issues with .net.\n\n#\n\n# Revision 1.8  2004/10/27 14:40:35  anton\n\n# CMake configuration: Added code to compile netlib and reorganized the way\n\n# new header files are created/copied.\n\n#\n\n# Revision 1.7  2004/08/20 20:07:28  anton\n\n# CMake Config: Update the config files to force the use of CMake 2.0.x or\n\n# more (see #40) and cleaned-up the SWIG wrapping process thanks to the new\n\n# CMake macros (see #55).\n\n#\n\n# Revision 1.6  2004/05/04 14:09:16  anton\n\n# Save each library dependencies in the cache for future use\n\n#\n\n# Revision 1.5  2004/03/29 21:20:19  anton\n\n# Added code for SWIG\n\n#\n\n# Revision 1.4  2004/01/30 20:11:56  ofri\n\n# Fixing bug by replacing cisst with ${PROJECT_NAME}\n\n#\n\n# Revision 1.3  2004/01/30 18:59:57  ofri\n\n# Fix syntax error in END of macro\n\n#\n\n# Revision 1.2  2004/01/30 18:53:19  ofri\n\n# Rename the macro and pass a parameter specifying the name of the project to\n\n# which the target is added.\n\n# + Documentation update.\n\n#\n\n# Revision 1.1  2004/01/22 21:55:54  anton\n\n# cmake/cisstMacros.cmake\n\n#\n\n#\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "source/resource/videoServer/CMakeLists.txt" : {
      "ObjectId" : "ee2d21ede9e829659935b4c66202fc24483d6b72",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------\n\n# Linking\n\n#-------------------------------\n\n# link to ulterius only on when building 32 bit\n\n# - ulterius lib is only available on windows as 32 bit\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------\n\n# Qt -moccing\n\n#-------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------\n\n# Creating the executable\n\n#-------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/resource/videoServer/testing/CMakeLists.txt" : {
      "ObjectId" : "84e661af5207869ec8b7194f3945ffe0d653acf9",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/resource/view/CMakeLists.txt" : {
      "ObjectId" : "45b877872a8b7083483beda4e6756a39fd2ff065",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Resource Visualization Library\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    Primitives/cxTextureSlicePainter\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    ${GLEW_LIBRARY}\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/resource/view/testing/CMakeLists.txt" : {
      "ObjectId" : "45a60108ab03e8326783376cbc89a35c3cc24ca3",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/resource/widgets/CMakeLists.txt" : {
      "ObjectId" : "c4213de130048fa37c6b37f4fb7a988f38d1e36c",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n##               Resource Core library\n\n###########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/resource/widgets/testing/CMakeLists.txt" : {
      "ObjectId" : "13d260894c8657336a2cee042ff38f2a4f73130c",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/testing/CMakeLists.txt" : {
      "ObjectId" : "002906217fe7c64cff5699ad50457849be345e83",
      "LastModified" : "2018-10-25T12:20:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================\n\n# Custus unit test folder.\n\n#\n\n# Contains the main catch executable\n\n# =========================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 155,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 8429
}