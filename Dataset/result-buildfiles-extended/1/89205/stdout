{
  "Repository" : "89205",
  "Revision" : "HEAD",
  "ObjectId" : "e435e30756f3c30ca825dfe9554a78b9a0fc12e7",
  "CommitTime" : "2019-04-07T19:48:08Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ca4c17cfd891957a0c73a1188e764db9a3d1fd3a",
      "LastModified" : "2019-01-16T04:04:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_BUILD_TYPE RelWithDebInfo)\n",
        "Line" : 17,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# using Clang\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 30,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# using GCC\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Intel C\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 54,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -pedantic\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# using Clang\n",
        "Line" : 65,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 67,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# using GCC\n",
        "Line" : 71,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 73,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -vec-report3\")\n",
        "Line" : 83,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 91,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -fno-alias -restrict -opt_report\")\n\n#set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -std=c++11 -pedantic -Wc++11-long-long -Wno-overlength-strings\")\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -march=native -mtune=native -Wa,-q\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native -mtune=native -Wa,-q\")\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -march=native -mtune=native\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native -mtune=native\")\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#  OpenCL_FOUND          - True if OpenCL was found\n\n#  OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#  OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#  OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#  OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#  OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "#if(OPENMP_FOUND)\n\n#   message(\"OPENMP FOUND ${OpenMP_C_FLAGS}\")\n\n#else (OPENMP_FOUND)\n\n#   message(\"OPENMP NOT FOUND\")\n\n#endif(OPENMP_FOUND)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#find_package(ImageMagick COMPONENTS MagickCore MagickWand)\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#   ImageMagick_FOUND                    - TRUE if all components are found.\n\n#   ImageMagick_INCLUDE_DIRS             - Full paths to all include dirs.\n\n#   ImageMagick_LIBRARIES                - Full paths to all libraries.\n\n#   ImageMagick_<component>_FOUND        - TRUE if <component> is found.\n\n#   ImageMagick_<component>_INCLUDE_DIRS - Full path to <component> include dirs.\n\n#   ImageMagick_<component>_LIBRARIES    - Full path to <component> libraries.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#     add_definitions(-DMAGICKCORE_HDRI_ENABLE=0)\n\n#     add_definitions(-DMAGICKCORE_QUANTUM_DEPTH=16)\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#   message(\"ImageMagick_FOUND                   ${ImageMagick_FOUND}\")\n\n#   message(\"ImageMagick_INCLUDE_DIRS            ${ImageMagick_INCLUDE_DIRS}\")\n\n#   message(\"ImageMagick_LIBRARIES               ${ImageMagick_LIBRARIES}\")\n\n##  message(\"ImageMagick_MagickCore_FOUND        ${ImageMagick_MagickCore_FOUND}\")\n\n##  message(\"ImageMagick_MagickCore_INCLUDE_DIRS ${ImageMagick_MagickCore_INCLUDE_DIRS}\")\n\n##  message(\"ImageMagick_MagickCore_LIBRARIES    ${ImageMagick_MagickCore_LIBRARIES}\")\n\n#   message(\"ImageMagick_MagickWand_FOUND        ${ImageMagick_MagickWand_FOUND}\")\n\n#   message(\"ImageMagick_MagickWand_INCLUDE_DIRS ${ImageMagick_MagickWand_INCLUDE_DIRS}\")\n\n#   message(\"ImageMagick_MagickWand_LIBRARIES    ${ImageMagick_MagickWand_LIBRARIES}\")\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# HDF5 support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# check for single binary package\n",
        "Line" : 197,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Legacy find\n",
        "Line" : 218,
        "CharPositionInLine" : 60
      },
      "30" : {
        "Text" : "# HDF5 was build with autotools\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# This project is being called from within another and HDF5 is already configured\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use Shared/Static libs, default is static\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# If autodetect does not work try setting MPEHOME or\n\n# MPE_INCLUDE_DIR and MPE_LIBRARIES\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#message(\"MPI_LIBRARIES ${MPI_LIBRARIES}\")\n\n#message(\"MPI_INCLUDE_PATH ${MPI_INCLUDE_PATH}\")\n\n#message(\"GRAPHICS_TYPE is ${GRAPHICS_TYPE}\")\n\n#message(\"MPE_INCLUDE is ${MPE_INCLUDE_DIR}\")\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#if(DEFINED ENV{QUO_HOME})\n\n#   if(EXISTS \"$ENV{QUO_HOME}/include/\")\n\n#      message(STATUS \"QUO Detected\")\n\n#      set (QUO_FOUND on)\n\n#      include_directories($ENV{QUO_HOME}/include)\n\n#   endif (EXISTS \"$ENV{QUO_HOME}/include/\")\n\n#endif (DEFINED ENV{QUO_HOME})\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#if(DEFINED ENV{REPROBLAS_HOME})\n\n#   if(EXISTS \"$ENV{REPROBLAS_HOME}/include/rblas.h\")\n\n#      message(STATUS \"reproBlas Detected\")\n\n#      set (REPROBLAS_FOUND on)\n\n#      set (HAVE_REPROBLAS ON)\n\n#      include_directories($ENV{REPROBLAS_HOME}/include)\n\n#      set (REPROBLAS_LIBRARIES -L$ENV{REPROBLAS_HOME}/libs -lreproblas_mpi -lreproblas_seq -liblas -lmpindexedfp -lindexedfp)\n\n#   endif (EXISTS \"$ENV{REPROBLAS_HOME}/include/rblas.h\")\n\n#endif (DEFINED ENV{REPROBLAS_HOME})\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#if(DEFINED ENV{LTTRACE_HOME})\n\n#   if(EXISTS \"$ENV{LTTRACE_HOME}/lib/liblttrace.a\")\n\n#      message(STATUS \"LTTRACE Detected\")\n\n#      include_directories($ENV{LTTRACE_HOME}/include)\n\n#      set (LTTRACE_FOUND on)\n\n#      set (HAVE_LTTRACE ON)\n\n#      set (LTTRACE_LIBRARIES -L$ENV{LTTRACE_HOME}/lib -llttrace -lz -luuid -Wl,-rpath -Wl,$ENV{LTTRACE_HOME}/lib)\n\n#   endif (EXISTS \"$ENV{LTTRACE_HOME}/lib/liblttrace.a\")\n\n#endif (DEFINED ENV{LTTRACE_HOME})\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#if (DEFINED ENV{LD_LIBRARY_PATH})\n\n#   set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath -Wl,$ENV{LD_LIBRARY_PATH}\")\n\n#   message(\"CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS}\")\n\n#   #string (REPLACE \":\" \";\" LDPATH_TMP $ENV{LD_LIBRARY_PATH})\n\n#   #foreach(LDPATH ${LDPATH_TMP})\n\n#   #   set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath -Wl,${LDPATH}\")\n\n#   #   message(\"CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS}\")\n\n#   #endforeach(LDPATH)\n\n#endif (DEFINED ENV{LD_LIBRARY_PATH})\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# search for Boost\n\n# this min version isn't correct -- FIXME\n\n#set (BOOST_MIN_VER \"1.45.0\")\n\n#find_package(Boost ${BOOST_MIN_VER})\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#message(\"MPE_LIBRARIES ${MPE_LIBRARIES}\")\n\n#message(\"MPE_LIBS ${MPE_LIBS}\")\n\n#message(\"MPE_NOMPI_LIBS ${MPE_NOMPI_LIBS}\")\n\n#message(\"OPENGL_LIBRARIES ${OPENGL_LIBRARIES}\")\n\n#message(\"GLUT_LIBRARIES ${GLUT_LIBRARIES}\")\n\n#message(\"X11_LIBRARIES ${X11_LIBRARIES}\")\n\n#message(\"X11_LIBS ${X11_LIBS}\")\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# add the binary tree to the search path for include files\n\n# so that we will find config.h\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#ADDING TESTS CODE####\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "########### embed source target ###############\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "########### clamr target ###############\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "########### clamr_cpuonly target ###############\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#target_link_libraries(clamr_cpuonly ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES})\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "########### clamr_gpuonly target ###############\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "########### clamr_mpionly target ###############\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "########### clamr_openmponly target ###############\n\n# This shares the clamr_cpuonly.cpp source file\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "########### clamr_mpiopenmponly target ###############\n\n# This uses the clamr_mpionly driver with the OpenMP compile flag set\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "########### clamr_quo target ###############\n\n# only build this thing if we have QUO, MPI, and OpenMP\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# doing this way because we only want j7 if doing quo (for now)\n\n# this only enables experimental software if the user has all the things\n",
        "Line" : 656,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# these sets HAVE_J7 and HAVE_QUO in config.h\n",
        "Line" : 669,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# XXX add load imbalance code here for now\n",
        "Line" : 695,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "########### clamr_gpucheck target ###############\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "########### clamr_mpicheck target ###############\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "########### clamr_checkall target ###############\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "########### install files ###############\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#make CLAMR_doc       &&\n",
        "Line" : 790,
        "CharPositionInLine" : 23
      },
      "60" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#add_custom_target(CLAMR_doc\n\n#                  DEPENDS CLAMR_pdfdoc CLAMR_htmldoc CLAMR_singlehtmldoc)\n\n#set_target_properties(CLAMR_doc PROPERTIES EXCLUDE_FROM_ALL TRUE)\n\n#\n\n#add_custom_command(OUTPUT _build/latex/CLAMR.pdf\n\n#                   COMMAND make -C docs latexpdf >& pdfdoc.out\n\n#                   DEPENDS ${PDFDOC_SRCS})\n\n#add_custom_target(CLAMR_pdfdoc DEPENDS _build/latex/CLAMR.pdf)\n\n#set_target_properties(CLAMR_pdfdoc PROPERTIES EXCLUDE_FROM_ALL TRUE)\n\n#\n\n#add_custom_command(OUTPUT _build/html/UsersGuide.html\n\n#                   COMMAND make -C docs html >& htmldoc.out\n\n#                   DEPENDS ${DOC_SRCS})\n\n#add_custom_target(CLAMR_htmldoc DEPENDS _build/html/UsersGuide.html)\n\n#set_target_properties(CLAMR_htmldoc PROPERTIES EXCLUDE_FROM_ALL TRUE)\n\n#\n\n#add_custom_command(OUTPUT _build/singlehtml/index.html\n\n#                   COMMAND make -C docs singlehtml >& singlehtmldoc.out\n\n#                   DEPENDS ${DOC_SRCS})\n\n#add_custom_target(CLAMR_singlehtmldoc DEPENDS _build/singlehtml/index.html)\n\n#set_target_properties(CLAMR_singlehtmldoc PROPERTIES EXCLUDE_FROM_ALL TRUE)\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "########### configure config.h ################\n\n# configure a header file to pass some of the CMake settings\n\n# to the source code\n\n# at bottom because we set things that change config above\n",
        "Line" : 829,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "########### clean files ################\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 64
    },
    "MallocPlus/CMakeLists.txt" : {
      "ObjectId" : "316c8aead171f264ed7e083ca6bd65ea62c6aa6c",
      "LastModified" : "2018-04-18T23:07:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 42,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -vec-report3\")\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 53,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#  OpenCL_FOUND          - True if OpenCL was found\n\n#  OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#  OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#  OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#  OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#  OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n",
        "Line" : 65,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "########### global settings ###############\n\n#set(H_SRCS CMallocPlus.h MallocPlus.h)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#set(C_SRCS CMallocPlus.c)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########### MallocPlus target ###############\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#install(TARGETS MallocPlus DESTINATION lib)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########### pMallocPlus target ###############\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#   install(TARGETS pMallocPlus DESTINATION lib)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########### mpMallocPlus target ###############\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#   install(TARGETS mpMallocPlus DESTINATION lib)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########### pmpMallocPlus target ###############\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#   install(TARGETS pmpMallocPlus DESTINATION lib)\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########### dMallocPlus target ###############\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#if (Boost_FOUND AND MPI_FOUND)\n\n#   message(STATUS \"Adding j7 support ot MallocPlus\")\n\n#   target_link_libraries(dMallocPlus j7)\n\n#endif()\n",
        "Line" : 165,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "#   install(TARGETS dMallocPlus DESTINATION lib)\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "########### dpMallocPlus target ###############\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#if (Boost_FOUND AND MPI_FOUND)\n\n#   message(STATUS \"Adding j7 support ot MallocPlus\")\n\n#   target_link_libraries(dMallocPlus j7)\n\n#endif()\n",
        "Line" : 184,
        "CharPositionInLine" : 3
      },
      "26" : {
        "Text" : "#   install(TARGETS dpMallocPlus DESTINATION lib)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "########### install files ###############\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#install(FILES  MallocPlus.h DESTINATION include/MallocPlus)\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "########### clean files ################\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "MallocPlus/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2014-10-30T05:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "MallocPlus/cmake/Modules/CheckCXXSourceCompiles.cmake" : {
      "ObjectId" : "c69ea4077ccea954702dccfc2e06c6fe279caae4",
      "LastModified" : "2014-10-30T05:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C++ source compiles and links into an executable\n\n# CHECK_CXX_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "MallocPlus/cmake/Modules/FindOpenMP.cmake" : {
      "ObjectId" : "40a4a13a84a1effdd0074d6ba549f961f8e18e41",
      "LastModified" : "2014-10-30T05:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Updated FindOpenMP file such that the failure of finding OpenMP is cached.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.  \n\n#\n\n# The following variables are set:\n\n#   OpenMP_C_FLAGS - flags to add to the C compiler for OpenMP support\n\n#   OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#   OPENMP_FOUND - true if openmp is detected\n\n#\n\n# Supported compilers can be found at http://openmp.org/wp/openmp-compilers/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 AndrÃ© Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMAKE_CURRENT_LIST_DIR only from cmake 2.8.3.\n",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Do not try to find OpenMP if we know that it cannot be found.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Gnu\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#Intel\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Portland Group\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Intel windows\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Sun\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#HP\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use the same source for CXX as C for now\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if these are set then do not try to find them again,\n\n# by avoiding any try_compiles for the flags\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check c compiler\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check cxx compiler\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# handle the standard arguments for find_package\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "MallocPlus/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2014-10-30T05:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "MallocPlus/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2014-10-30T05:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "MallocPlus/docs/Makefile" : {
      "ObjectId" : "7ca9caca5d038c5211eae4d65a5b5cba48e69568",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "MallocPlus/tests/CMakeLists.txt" : {
      "ObjectId" : "cce74ccaaaf7e7df99dde9fa14103f2a49dd4364",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### MallocPlusTest target ###############\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################# check/test ##################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test(MallocPlusTest MallocPlusTest)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########### clean files ################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "PowerParser/CMakeLists.txt" : {
      "ObjectId" : "d17314a5d135182c6d8a5226508a4758a3c37c58",
      "LastModified" : "2018-04-18T23:07:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  FFLAGS depend on the compiler\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# using Clang\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# using GCC\n",
        "Line" : 35,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 37,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -vec-report3\")\n",
        "Line" : 39,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 42,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# set (CMAKE_Fortran_FLAGS \"-cpp\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set (CMAKE_Fortran_FLAGS \"-fpp -f77rtl\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set (CMAKE_Fortran_FLAGS \"-cpp\")\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set (CMAKE_Fortran_FLAGS \"-cpp\")\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#if(DEFINED ENV{FC})\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#endif(DEFINED ENV{FC})\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### PowerParser target ###############\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########### pPowerParser target ###############\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "########### install files ###############\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "########### clean files ################\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "PowerParser/cmake/Modules/CheckCXXSourceCompiles.cmake" : {
      "ObjectId" : "c69ea4077ccea954702dccfc2e06c6fe279caae4",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C++ source compiles and links into an executable\n\n# CHECK_CXX_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "PowerParser/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "PowerParser/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "70d6184a5d057f4f0654c9f63c995aa69a3b5c01",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "PowerParser/docs/Makefile" : {
      "ObjectId" : "544c7d141c7176f7ef79868c01f9e79d36d40e0f",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "PowerParser/tests/CMakeLists.txt" : {
      "ObjectId" : "1fbfc62001394c9c1b0e0031c1089b9e0475c72e",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### ParserTest target ###############\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"GENMALLOC directory is ${GENMALLOC_LIBRARY}\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### FParserTest target ###############\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"GENMALLOC directory is ${GENMALLOC_LIBRARY}\")\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########### install files ###############\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################# check/test ##################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_test(ParserTest ParserTest)\n\n#add_test(FParserTest FParserTest)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########### clean files ################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Modules/FindLibrt.cmake" : {
      "ObjectId" : "a75f4e129474ed8483b415389e2d75a4e414226f",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# You may redistribute this program and/or modify it under the terms of\n\n# the GNU General Public License as published by the Free Software Foundation,\n\n# either version 3 of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindMPE.cmake" : {
      "ObjectId" : "42fb63c844c1c6a5295f7820153728951334e904",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Multi-Processing Environment (MPE) module.\n\n#\n\n# The Multi-Processing Environment (MPE) is an extention to MPI that\n\n# provides programmers with a suite of performance analysis tools for\n\n# their MPI programs.  These tools include a set of profiling libraries,\n\n# a set of utility programs, and a set of graphical tools.  This module\n\n# helps you find the libraries and includes.\n\n#\n\n# This module will set the following variables:\n\n# MPE_FOUND             TRUE if we have found MPE\n\n# MPE_COMPILE_FLAGS Compilation flags for MPI logging with MPE.\n\n# MPE_INCLUDE_DIR  Include path(s) for MPI logging with MPE.\n\n# MPE_LINK_FLAGS    Linking flags for MPI logging with MPE.\n\n# MPE_LIBRARIES     Libraries to link against for MPI logging with MPE.\n\n# MPE_NOMPI_LIBRARIES     Libraries to link against for MPI logging with MPE.\n\n#\n\n# This module will auto-detect these setting by looking for the clog2alog\n\n# utility and use the path to discover the include and library locations\n\n#\n\n# Note that this module does not attempt to ensure that the version\n\n# of MPE you are using is compatible with the version of MPI that\n\n# you are using (or even that you are using MPI at all).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Copyright 2011 Sandia Coporation\n\n## Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,\n\n## the U.S. Government retains certain rights in this software.\n\n##\n\n## This source code is released under the New BSD License.\n\n#\n\n#  This file changed substantially by Bob Robey Los Alamos National Laboratory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do nothing: we already have the necessary options.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Extract compile flags from the compile command line.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set up all of the appropriate cache entries\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "d91cfa52ed806cad0e8f5a0e5a014c1faeb0ebe6",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "crux/CMakeLists.txt" : {
      "ObjectId" : "b99aa5cbbeba782ccc9040965666160dd84242d7",
      "LastModified" : "2018-04-18T23:07:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -vec-report3\")\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# using Clang\n",
        "Line" : 54,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 56,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# using GCC\n",
        "Line" : 60,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -vec-report3\")\n",
        "Line" : 66,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########### crux target ###############\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##set_target_properties(crux PROPERTIES VERSION ${CRUX_VERSION} SOVERSION ${CRUX_VERSION_MAJOR} COMPILE_DEFINITIONS \"HAVE_MPI\")\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### pcrux target ###############\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########### dcrux target ###############\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#if (OpenCL_FOUND)\n\n#   add_library(dcrux STATIC ${crux_LIB_SRCS})\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#   set_target_properties(dcrux PROPERTIES VERSION ${CRUX_VERSION} SOVERSION ${CRUX_VERSION_MAJOR})\n\n#   set_target_properties(dcrux PROPERTIES COMPILE_DEFINITIONS \"HAVE_OPENCL\")\n\n#   install(TARGETS dcrux DESTINATION lib)\n\n#   add_dependencies(dcrux cruxlib_source_kernel_source)\n\n#   add_dependencies(dcrux cruxlib_kernel_source)\n\n#endif(OpenCL_FOUND)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "########### install files ###############\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "########### clean files ################\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "crux/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "crux/cmake/Modules/CheckCXXSourceCompiles.cmake" : {
      "ObjectId" : "c69ea4077ccea954702dccfc2e06c6fe279caae4",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C++ source compiles and links into an executable\n\n# CHECK_CXX_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "crux/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "crux/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "crux/docs/Makefile" : {
      "ObjectId" : "a4cc5cd9a17ac7887081491056a5170ebaf60ede",
      "LastModified" : "2014-11-25T03:03:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "docs/Makefile" : {
      "ObjectId" : "858d1ef089875080ab399ac7e79f1e1f386f9e69",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ezcl/CMakeLists.txt" : {
      "ObjectId" : "264249e07002bb193a09676ddb8d6b6622a8ae1a",
      "LastModified" : "2018-04-18T23:07:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -vec-report3\")\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#  OpenCL_FOUND          - True if OpenCL was found\n\n#  OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#  OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#  OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#  OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#  OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########### ezcl target ###############\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########### pezcl target ###############\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########### install files ###############\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########### clean files ################\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "ezcl/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "ezcl/cmake/Modules/FindOpenMP.cmake" : {
      "ObjectId" : "40a4a13a84a1effdd0074d6ba549f961f8e18e41",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Updated FindOpenMP file such that the failure of finding OpenMP is cached.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.  \n\n#\n\n# The following variables are set:\n\n#   OpenMP_C_FLAGS - flags to add to the C compiler for OpenMP support\n\n#   OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#   OPENMP_FOUND - true if openmp is detected\n\n#\n\n# Supported compilers can be found at http://openmp.org/wp/openmp-compilers/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 AndrÃ© Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMAKE_CURRENT_LIST_DIR only from cmake 2.8.3.\n",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Do not try to find OpenMP if we know that it cannot be found.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Gnu\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#Intel\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Portland Group\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Intel windows\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Sun\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#HP\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use the same source for CXX as C for now\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if these are set then do not try to find them again,\n\n# by avoiding any try_compiles for the flags\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check c compiler\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check cxx compiler\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# handle the standard arguments for find_package\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "ezcl/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ezcl/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ezcl/docs/Makefile" : {
      "ObjectId" : "564a340811bcc09e217e8c7b260b7570e67fc21f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ezcl/tests/CMakeLists.txt" : {
      "ObjectId" : "75eb0ed5d69d88a7703433bc98379f3a573c1708",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### ezclTest target ###############\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################# check/test ##################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test(ezclTest ezclTest)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########### clean files ################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "genmalloc/CMakeLists.txt" : {
      "ObjectId" : "892e75d2a567286e7bb6387411864b05858526ad",
      "LastModified" : "2018-04-18T23:07:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# using GCC\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using Intel C++\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########### genmalloc target ###############\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########### install files ###############\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########### clean files ################\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "genmalloc/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "genmalloc/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "genmalloc/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "6358c3b323f379bae277701f2a65ada493756ea0",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "genmalloc/docs/Makefile" : {
      "ObjectId" : "28ff765e58b54d6c77cf3b3e611dc6f3b82ca899",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "graphics/CMakeLists.txt" : {
      "ObjectId" : "4e382e2d346288cac5b51c7a6a7df7aca2856b2a",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -vec-report3\")\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 43,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -march=native -mtune=native -Wa,-q\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -march=native -mtune=native\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -pedantic\")\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  OpenCL_FOUND          - True if OpenCL was found\n\n#  OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#  OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#  OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#  OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#  OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# If autodetect does not work try setting MPEHOME or\n\n# MPE_INCLUDE_DIR and MPE_LIBRARIES\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#message(\"MPI_LIBRARIES ${MPI_LIBRARIES}\")\n\n#message(\"MPI_INCLUDE_PATH ${MPI_INCLUDE_PATH}\")\n\n#message(\"GRAPHICS_TYPE is ${GRAPHICS_TYPE}\")\n\n#message(\"MPE_INCLUDE is ${MPE_INCLUDE_DIR}\")\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########### graphics target ###############\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### pgraphics target ###############\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########### install files ###############\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########### clean files ################\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "graphics/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "graphics/cmake/Modules/FindMPE.cmake" : {
      "ObjectId" : "42fb63c844c1c6a5295f7820153728951334e904",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Multi-Processing Environment (MPE) module.\n\n#\n\n# The Multi-Processing Environment (MPE) is an extention to MPI that\n\n# provides programmers with a suite of performance analysis tools for\n\n# their MPI programs.  These tools include a set of profiling libraries,\n\n# a set of utility programs, and a set of graphical tools.  This module\n\n# helps you find the libraries and includes.\n\n#\n\n# This module will set the following variables:\n\n# MPE_FOUND             TRUE if we have found MPE\n\n# MPE_COMPILE_FLAGS Compilation flags for MPI logging with MPE.\n\n# MPE_INCLUDE_DIR  Include path(s) for MPI logging with MPE.\n\n# MPE_LINK_FLAGS    Linking flags for MPI logging with MPE.\n\n# MPE_LIBRARIES     Libraries to link against for MPI logging with MPE.\n\n# MPE_NOMPI_LIBRARIES     Libraries to link against for MPI logging with MPE.\n\n#\n\n# This module will auto-detect these setting by looking for the clog2alog\n\n# utility and use the path to discover the include and library locations\n\n#\n\n# Note that this module does not attempt to ensure that the version\n\n# of MPE you are using is compatible with the version of MPI that\n\n# you are using (or even that you are using MPI at all).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Copyright 2011 Sandia Coporation\n\n## Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,\n\n## the U.S. Government retains certain rights in this software.\n\n##\n\n## This source code is released under the New BSD License.\n\n#\n\n#  This file changed substantially by Bob Robey Los Alamos National Laboratory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do nothing: we already have the necessary options.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Extract compile flags from the compile command line.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set up all of the appropriate cache entries\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "graphics/cmake/Modules/FindOpenMP.cmake" : {
      "ObjectId" : "40a4a13a84a1effdd0074d6ba549f961f8e18e41",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Updated FindOpenMP file such that the failure of finding OpenMP is cached.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.  \n\n#\n\n# The following variables are set:\n\n#   OpenMP_C_FLAGS - flags to add to the C compiler for OpenMP support\n\n#   OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#   OPENMP_FOUND - true if openmp is detected\n\n#\n\n# Supported compilers can be found at http://openmp.org/wp/openmp-compilers/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 AndrÃ© Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMAKE_CURRENT_LIST_DIR only from cmake 2.8.3.\n",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Do not try to find OpenMP if we know that it cannot be found.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Gnu\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#Intel\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Portland Group\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Intel windows\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Sun\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#HP\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use the same source for CXX as C for now\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if these are set then do not try to find them again,\n\n# by avoiding any try_compiles for the flags\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check c compiler\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check cxx compiler\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# handle the standard arguments for find_package\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "graphics/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graphics/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graphics/docs/Makefile" : {
      "ObjectId" : "4f19ef6e10a4759e05514324e5d9f93ef1c6b142",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "hash/CMakeLists.txt" : {
      "ObjectId" : "8036315fac2beaca95b65ca2116bc344b2d9a7db",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -vec-report3\")\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 47,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#  OpenCL_FOUND          - True if OpenCL was found\n\n#  OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#  OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#  OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#  OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#  OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n",
        "Line" : 58,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########### embed source target ###############\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########### hash target ###############\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########### mphash target ###############\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########### dhash target ###############\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########### install files ###############\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### clean files ################\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "hash/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "hash/cmake/Modules/FindOpenMP.cmake" : {
      "ObjectId" : "40a4a13a84a1effdd0074d6ba549f961f8e18e41",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Updated FindOpenMP file such that the failure of finding OpenMP is cached.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.  \n\n#\n\n# The following variables are set:\n\n#   OpenMP_C_FLAGS - flags to add to the C compiler for OpenMP support\n\n#   OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#   OPENMP_FOUND - true if openmp is detected\n\n#\n\n# Supported compilers can be found at http://openmp.org/wp/openmp-compilers/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 AndrÃ© Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMAKE_CURRENT_LIST_DIR only from cmake 2.8.3.\n",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Do not try to find OpenMP if we know that it cannot be found.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Gnu\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#Intel\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Portland Group\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Intel windows\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Sun\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#HP\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use the same source for CXX as C for now\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if these are set then do not try to find them again,\n\n# by avoiding any try_compiles for the flags\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check c compiler\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check cxx compiler\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# handle the standard arguments for find_package\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "hash/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hash/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hash/docs/Makefile" : {
      "ObjectId" : "4f713a7c069f729bc99b6afa8141050a72541b16",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "j7/CMakeLists.txt" : {
      "ObjectId" : "786eead89335cbfc8665af2d97c6966eab260171",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we use Boost magic in j7, so make sure we have Boost (top-level does it)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME - we should detect if we need librt\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "## j7-test0\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "l7/CMakeLists.txt" : {
      "ObjectId" : "c03098d77f98a978a6a5f8fb5ce2cb84267e06da",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -vec-report3\")\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 47,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#  OpenCL_FOUND          - True if OpenCL was found\n\n#  OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#  OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#  OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#  OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#  OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########### embed source target ###############\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########### l7 target ###############\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########### mpl7 target ###############\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########### dl7 target ###############\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########### install files ###############\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### clean files ################\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "l7/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "l7/cmake/Modules/CheckCXXSourceCompiles.cmake" : {
      "ObjectId" : "c69ea4077ccea954702dccfc2e06c6fe279caae4",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C++ source compiles and links into an executable\n\n# CHECK_CXX_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "l7/cmake/Modules/FindOpenMP.cmake" : {
      "ObjectId" : "40a4a13a84a1effdd0074d6ba549f961f8e18e41",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Updated FindOpenMP file such that the failure of finding OpenMP is cached.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.  \n\n#\n\n# The following variables are set:\n\n#   OpenMP_C_FLAGS - flags to add to the C compiler for OpenMP support\n\n#   OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#   OPENMP_FOUND - true if openmp is detected\n\n#\n\n# Supported compilers can be found at http://openmp.org/wp/openmp-compilers/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 AndrÃ© Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMAKE_CURRENT_LIST_DIR only from cmake 2.8.3.\n",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Do not try to find OpenMP if we know that it cannot be found.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Gnu\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#Intel\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Portland Group\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Intel windows\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Sun\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#HP\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use the same source for CXX as C for now\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if these are set then do not try to find them again,\n\n# by avoiding any try_compiles for the flags\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check c compiler\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check cxx compiler\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# handle the standard arguments for find_package\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "l7/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "l7/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "l7/docs/Makefile" : {
      "ObjectId" : "f0338be026ef667a527c003a8a1f69a3f2f52f82",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "l7/tests/CMakeLists.txt" : {
      "ObjectId" : "738ff77dcd7cc1a1c16fcb1c128b9a11dc06aeac",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### L7Test target ###############\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################# check/test ##################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test(L7Test mpirun -n 2 L7Test)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########### clean files ################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "memstats/CMakeLists.txt" : {
      "ObjectId" : "d5a9ec98ea460fd1012b939bd444f7b6f8773c03",
      "LastModified" : "2018-04-18T23:07:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# using GCC\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using Intel C++\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########### memstats target ###############\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########### install files ###############\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########### clean files ################\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "memstats/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "memstats/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "memstats/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "memstats/docs/Makefile" : {
      "ObjectId" : "3daeb0520c3e854a056ad1849a9cc2f81853731c",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "mesh/CMakeLists.txt" : {
      "ObjectId" : "19e339828f028114a0a92e6bcf7975de8cbd31fc",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 34,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -vec-report3\")\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 47,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# using Clang\n",
        "Line" : 57,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# using GCC\n",
        "Line" : 63,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftree-vectorize -ftree-vectorizer-verbose=5\")\n",
        "Line" : 65,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# using Intel C++\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -vec-report3\")\n",
        "Line" : 69,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 78,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -fno-alias -restrict -opt_report\")\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#     OpenCL_FOUND          - True if OpenCL was found\n\n#     OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#     OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#     OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#     OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#     OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########### embed source target ###############\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "########### mesh target ###############\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########### mpmesh target ###############\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "########### pmesh target ###############\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "########### pmpmesh target ###############\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "########### dmesh target ###############\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "########### dpmesh target ###############\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "########### install files ###############\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "########### clean files ################\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "mesh/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "mesh/cmake/Modules/CheckCXXSourceCompiles.cmake" : {
      "ObjectId" : "c69ea4077ccea954702dccfc2e06c6fe279caae4",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C++ source compiles and links into an executable\n\n# CHECK_CXX_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "mesh/cmake/Modules/FindOpenMP.cmake" : {
      "ObjectId" : "40a4a13a84a1effdd0074d6ba549f961f8e18e41",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Updated FindOpenMP file such that the failure of finding OpenMP is cached.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.  \n\n#\n\n# The following variables are set:\n\n#   OpenMP_C_FLAGS - flags to add to the C compiler for OpenMP support\n\n#   OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#   OPENMP_FOUND - true if openmp is detected\n\n#\n\n# Supported compilers can be found at http://openmp.org/wp/openmp-compilers/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 AndrÃ© Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMAKE_CURRENT_LIST_DIR only from cmake 2.8.3.\n",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Do not try to find OpenMP if we know that it cannot be found.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Gnu\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#Intel\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Portland Group\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Intel windows\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Sun\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#HP\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# use the same source for CXX as C for now\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if these are set then do not try to find them again,\n\n# by avoiding any try_compiles for the flags\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check c compiler\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check cxx compiler\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# handle the standard arguments for find_package\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "mesh/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mesh/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "0f69c5317957f5545f509ac6e81f1ca609212147",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mesh/docs/Makefile" : {
      "ObjectId" : "73f9c94ac152dfeb99815e264bd1ba191fbb9f03",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "mesh/hsfc/CMakeLists.txt" : {
      "ObjectId" : "116746e6865f5264d2cf3af7c8dfe1928f82a14c",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### hsfc target ###############\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install(FILES  hsfc.h DESTINATION include)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#========== original Makefile.am contents follow ===========\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#default: libhsfc.la\n\n#all: libhsfc.la\n\n#\n\n#AM_MAKEFLAGS = -j 4\n\n#\n\n#DEFAULT_INCLUDES=-I. -I..\n\n#\n\n#lib_LTLIBRARIES = libhsfc.la\n\n#include_HEADERS = hsfc.h\n\n#\n\n#H_SRCS = hsfc.h\n\n#\n\n#C_SRCS = hsfc2part.c hsfc.c hsfcsort.c\n\n#\n\n#libhsfc_la_SOURCES = ${C_SRCS} ${H_SRCS}\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "mesh/kdtree/CMakeLists.txt" : {
      "ObjectId" : "eadb0c9d741700d5751694cef753762b7a948377",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### kdtree target ###############\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install(FILES  KDTree.h DESTINATION include)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#========== original Makefile.am contents follow ===========\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#original Makefile.am contents follow:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#default: libkdtree.la\n\n#all: libkdtree.la\n\n#\n\n#AM_MAKEFLAGS = -j 4\n\n#\n\n#DEFAULT_INCLUDES=-I. -I..\n\n#\n\n#lib_LTLIBRARIES = libkdtree.la\n\n#include_HEADERS = KDTree.h\n\n#\n\n#libkdtree_la_SOURCES = ${C_SRCS} ${H_SRCS}\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "mesh/tests/CMakeLists.txt" : {
      "ObjectId" : "c9bb252abc90c592185d4aefb8b44cbb89a95003",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### L7Test target ###############\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################# check/test ##################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test(NAME mesh_mpi_test COMMAND mpirun -n 3 ./mesh_mpi_test)\n\n#add_test(mesh_mpi_test mpirun -n 3 ./mesh_mpi_test)\n\n#add_test(face_test ./face_test)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########### clean files ################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "mesh/zorder/CMakeLists.txt" : {
      "ObjectId" : "9fcd0b50dac00d6091a33690d1690528adf2e34a",
      "LastModified" : "2018-04-05T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### zorder target ###############\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install(FILES  zorder.h DESTINATION include)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#========== original Makefile.am contents follow ===========\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#default: libzorder.la\n\n#all: libzorder.la\n\n#\n\n#AM_MAKEFLAGS = -j 4\n\n#\n\n#DEFAULT_INCLUDES=-I. -I..\n\n#\n\n#lib_LTLIBRARIES = libzorder.la\n\n#include_HEADERS = zorder.h\n\n#\n\n#H_SRCS = zorder.h\n\n#\n\n#C_SRCS = zorder.c\n\n#\n\n#libzorder_la_SOURCES = ${C_SRCS} ${H_SRCS}\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "powerstats/CMakeLists.txt" : {
      "ObjectId" : "f70e1a2f2f4c80e3531c2a57e9b54e126307d2c8",
      "LastModified" : "2019-01-17T03:54:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# using GCC\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using Intel C++\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "########### global settings ###############\n\n#if (\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"linux\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#endif (\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"linux\")\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########### powerstats target ###############\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########### install files ###############\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########### doc targets ################\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########### clean files ################\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "powerstats/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "powerstats/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "powerstats/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "s7/CMakeLists.txt" : {
      "ObjectId" : "a3efd678e479d95ded73b0f974069db933c68b93",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# using Clang\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# using GCC\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using Intel C++\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########### s7 target ###############\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########### install files ###############\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "s7/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "s7/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "s7/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "5182b5a03e0c61c1c924e75778566e5a767d8ce3",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_test(clamr_tests clamr_tests)\n\n#add_test(scaling_tests scaling_tests)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\"DEBUG : add_test(${TESTFILE} working directory ${TEST_DIR} testdriver ${CMAKE_CURRENT_SOURCE_DIR}/${TESTFILE})\")\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tests/cts/html/Makefile.am" : {
      "ObjectId" : "a0b910540362e0212922bf78c6f488dfb4f01aa6",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/cts/lib/Makefile.am" : {
      "ObjectId" : "c25e97924a4d8713dd48e352dd61317602ddd6c0",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "timer/CMakeLists.txt" : {
      "ObjectId" : "d547cd175812710b706ecb029ede160e0a7be67d",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- custom targets: ---\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable @rpath in the install name for any shared library being built\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The version number.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment to build debug\n\n#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -std=c99\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# using Clang\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# using GCC\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# using Intel C++\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "########### global settings ###############\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########### timer target ###############\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########### mptimer target ###############\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########### install files ###############\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "timer/cmake/Modules/CheckCSourceCompiles.cmake" : {
      "ObjectId" : "839ddc2bb66451a1a17663ce687cfae5bb29ebd2",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if given C source compiles and links into an executable\n\n# CHECK_C_SOURCE_COMPILES(<code> <var> [FAIL_REGEX <fail-regex>])\n\n# <code> - source code to try to compile, must define 'main'\n\n# <var> - variable to store whether the source code compiled\n\n# <fail-regex> - fail if test output matches this regex\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n# CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n# CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n# CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Success\")\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#message(STATUS \"Performing Test ${VAR} - Failed\")\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "timer/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "43ee4b84e767be4a8182f5313d366223ba8ba08f",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "timer/cmake/Modules/TargetDistclean.cmake" : {
      "ObjectId" : "c25f9b69bc8c4d6659935521b5df1aa993fb7ff0",
      "LastModified" : "2019-01-15T19:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add custom target distclean\n\n# cleans and removes cmake generated files etc.\n\n# Jan Woetzel 04/2003\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 77,
    "MAKEFILE" : 11,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1857
}