{
  "Repository" : "5465",
  "Revision" : "HEAD",
  "ObjectId" : "980369141ae2e6197a5f8ae3ba2ff9418d8720e6",
  "CommitTime" : "2014-07-16T20:38:22Z",
  "Files" : {
    "Android/OpenCV-2.4.5-android-sdk/sdk/native/jni/OpenCVConfig-version.cmake" : {
      "ObjectId" : "ec9c7b02ab1382f3d916e4435e6d257096485f3f",
      "LastModified" : "2013-08-14T14:14:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Android/OpenCV-2.4.5-android-sdk/sdk/native/jni/OpenCVConfig.cmake" : {
      "ObjectId" : "87637216b99b82508b31ee7f84c1d4a94f72784e",
      "LastModified" : "2013-08-14T14:14:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===================================================================================\n\n#  The OpenCV CMake configuration file\n\n#\n\n#             ** File generated automatically, do not modify **\n\n#\n\n#  Usage from an external project:\n\n#    In your CMakeLists.txt, add these lines:\n\n#\n\n#    FIND_PACKAGE(OpenCV REQUIRED)\n\n#    TARGET_LINK_LIBRARIES(MY_TARGET_NAME ${OpenCV_LIBS})\n\n#\n\n#    Or you can search for specific OpenCV modules:\n\n#\n\n#    FIND_PACKAGE(OpenCV REQUIRED core highgui)\n\n#\n\n#    If the module is found then OPENCV_<MODULE>_FOUND is set to TRUE.\n\n#\n\n#    This file will define the following variables:\n\n#      - OpenCV_LIBS                     : The list of libraries to links against.\n\n#      - OpenCV_LIB_DIR                  : The directory(es) where lib files are. Calling LINK_DIRECTORIES\n\n#                                          with this path is NOT needed.\n\n#      - OpenCV_INCLUDE_DIRS             : The OpenCV include directories.\n\n#      - OpenCV_COMPUTE_CAPABILITIES     : The version of compute capability\n\n#      - OpenCV_ANDROID_NATIVE_API_LEVEL : Minimum required level of Android API\n\n#      - OpenCV_VERSION                  : The version of this OpenCV build: \"2.4.5\"\n\n#      - OpenCV_VERSION_MAJOR            : Major version part of OpenCV_VERSION: \"2\"\n\n#      - OpenCV_VERSION_MINOR            : Minor version part of OpenCV_VERSION: \"4\"\n\n#      - OpenCV_VERSION_PATCH            : Patch version part of OpenCV_VERSION: \"5\"\n\n#      - OpenCV_VERSION_TWEAK            : Tweak version part of OpenCV_VERSION: \"0\"\n\n#\n\n#    Advanced variables:\n\n#      - OpenCV_SHARED\n\n#      - OpenCV_CONFIG_PATH\n\n#      - OpenCV_INSTALL_PATH  (not set on Windows)\n\n#      - OpenCV_LIB_COMPONENTS\n\n#      - OpenCV_USE_MANGLED_PATHS\n\n#      - OpenCV_HAVE_ANDROID_CAMERA\n\n#\n\n# ===================================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version Compute Capability from which OpenCV has been compiled is remembered\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Android API level from which OpenCV has been compiled is remembered\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some additional settings are required if OpenCV is built as static libs\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enables mangled install paths, that help with side by side installs\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extract the directory where *this* file has been installed (determined at cmake run-time)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the absolute path with no ../.. relative marks, to eliminate implicit linker warnings\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Presence of Android native camera wrappers\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ======================================================\n\n# Include directories to add to the user project:\n\n# ======================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Provide the include directories to the caller\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ======================================================\n\n# Link directories to add to the user project:\n\n# ======================================================\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Provide the libs directories to the caller\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ======================================================\n\n#  Version variables:\n\n# ======================================================\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ====================================================================\n\n# Link libraries: e.g.   libopencv_core.so, opencv_imgproc220d.lib, etc...\n\n# ====================================================================\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ==============================================================\n\n#  Extra include directories, needed by OpenCV 2 new structure\n\n# ==============================================================\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ==============================================================\n\n#  Check OpenCV availability\n\n# ==============================================================\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#always FATAL_ERROR because we can't say to the caller that OpenCV is not found\n\n#http://www.mail-archive.com/cmake@cmake.org/msg37831.html\n",
        "Line" : 276,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#Android toolchain requires CMake > 2.6\n",
        "Line" : 284,
        "CharPositionInLine" : 10
      },
      "18" : {
        "Text" : "# ==============================================================\n\n#  Form list of modules (components) to find\n\n# ==============================================================\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# expand short module names and see if requested components exist\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#requested component is not found...\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#indicate that module is NOT found\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#indicate that module is found\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# ==============================================================\n\n#  Resolve dependencies\n\n# ==============================================================\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#indicate that this module is also found\n",
        "Line" : 340,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#TODO: duplicates are annoying but they should not be the problem\n",
        "Line" : 359,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# CUDA\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# CMake>=2.6 supports the notation \"debug XXd optimized XX\"\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Modern CMake:\n",
        "Line" : 402,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Old CMake:\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ==============================================================\n\n#  Android camera helper macro\n\n# ==============================================================\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ==============================================================\n\n# Compatibility stuff\n\n# ==============================================================\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "Android/OpenCV-2.4.5-android-sdk/sdk/native/jni/android.toolchain.cmake" : {
      "ObjectId" : "0f7e340678638cb6a77eabda053c5a904cc53024",
      "LastModified" : "2013-08-14T14:14:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2013, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  The name of the copyright holders may be used to endorse or promote\n\n#     products derived from this software without specific prior written\n\n#     permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r8\n\n#  Requires cmake 2.6.3 or newer (2.8.5 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  The file is mantained by the OpenCV project. The latest version can be get at\n\n#  http://code.opencv.org/projects/opencv/repository/revisions/master/changes/android/android.toolchain.cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (or newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the\n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16).\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP.\n\n#        \"x86\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"mips\" - matches to the NDK ABI with the same name\n\n#            (It is not tested on real devices by the authos of this toolchain)\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.6 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r8c the possible values are:\n\n#\n\n#        * arm-linux-androideabi-4.4.3\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-clang3.1\n\n#        * mipsel-linux-android-4.4.3\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-clang3.1\n\n#        * x86-4.4.3\n\n#        * x86-4.6\n\n#        * x86-clang3.1\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (is forced to be ON) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - if set, then toolchain defines some\n\n#      obsolete variables which were used by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS will be set true, mutually\n\n#    exclusive. NEON option will be set true if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n#  Change Log:\n\n#   - initial version December 2010\n\n#   - April 2011\n\n#     [+] added possibility to build with NDK (without standalone toolchain)\n\n#     [+] support cross-compilation on Windows (native, no cygwin support)\n\n#     [+] added compiler option to force \"char\" type to be signed\n\n#     [+] added toolchain option to compile to 32-bit ARM instructions\n\n#     [+] added toolchain option to disable SWIG search\n\n#     [+] added platform \"armeabi-v7a with VFPV3\"\n\n#     [~] ARM_TARGETS renamed to ARM_TARGET\n\n#     [+] EXECUTABLE_OUTPUT_PATH is set by toolchain (required on Windows)\n\n#     [~] Fixed bug with ANDROID_API_LEVEL variable\n\n#     [~] turn off SWIG search if it is not found first time\n\n#   - May 2011\n\n#     [~] ANDROID_LEVEL is renamed to ANDROID_API_LEVEL\n\n#     [+] ANDROID_API_LEVEL is detected by toolchain if not specified\n\n#     [~] added guard to prevent changing of output directories on the first\n\n#         cmake pass\n\n#     [~] toolchain exits with error if ARM_TARGET is not recognized\n\n#   - June 2011\n\n#     [~] default NDK path is updated for version r5c\n\n#     [+] variable CMAKE_SYSTEM_PROCESSOR is set based on ARM_TARGET\n\n#     [~] toolchain install directory is added to linker paths\n\n#     [-] removed SWIG-related stuff from toolchain\n\n#     [+] added macro find_host_package, find_host_program to search\n\n#         packages/programs on the host system\n\n#     [~] fixed path to STL library\n\n#   - July 2011\n\n#     [~] fixed options caching\n\n#     [~] search for all supported NDK versions\n\n#     [~] allowed spaces in NDK path\n\n#   - September 2011\n\n#     [~] updated for NDK r6b\n\n#   - November 2011\n\n#     [*] rewritten for NDK r7\n\n#     [+] x86 toolchain support (experimental)\n\n#     [+] added \"armeabi-v6 with VFP\" ABI for ARMv6 processors.\n\n#     [~] improved compiler and linker flags management\n\n#     [+] support different build flags for Release and Debug configurations\n\n#     [~] by default compiler flags the same as used by ndk-build (but only\n\n#         where reasonable)\n\n#     [~] ANDROID_NDK_TOOLCHAIN_ROOT is splitted to ANDROID_STANDALONE_TOOLCHAIN\n\n#         and ANDROID_TOOLCHAIN_ROOT\n\n#     [~] ARM_TARGET is renamed to ANDROID_ABI\n\n#     [~] ARMEABI_NDK_NAME is renamed to ANDROID_NDK_ABI_NAME\n\n#     [~] ANDROID_API_LEVEL is renamed to ANDROID_NATIVE_API_LEVEL\n\n#   - January 2012\n\n#     [+] added stlport_static support (experimental)\n\n#     [+] added special check for cygwin\n\n#     [+] filtered out hidden files (starting with .) while globbing inside NDK\n\n#     [+] automatically applied GLESv2 linkage fix for NDK revisions 5-6\n\n#     [+] added ANDROID_GET_ABI_RAWNAME to get NDK ABI names by CMake flags\n\n#   - February 2012\n\n#     [+] updated for NDK r7b\n\n#     [~] fixed cmake try_compile() command\n\n#     [~] Fix for missing install_name_tool on OS X\n\n#   - March 2012\n\n#     [~] fixed incorrect C compiler flags\n\n#     [~] fixed CMAKE_SYSTEM_PROCESSOR change on ANDROID_ABI change\n\n#     [+] improved toolchain loading speed\n\n#     [+] added assembler language support (.S)\n\n#     [+] allowed preset search paths and extra search suffixes\n\n#   - April 2012\n\n#     [+] updated for NDK r7c\n\n#     [~] fixed most of problems with compiler/linker flags and caching\n\n#     [+] added option ANDROID_FUNCTION_LEVEL_LINKING\n\n#   - May 2012\n\n#     [+] updated for NDK r8\n\n#     [+] added mips architecture support\n\n#   - August 2012\n\n#     [+] updated for NDK r8b\n\n#     [~] all intermediate files generated by toolchain are moved to CMakeFiles\n\n#     [~] libstdc++ and libsupc are removed from explicit link libraries\n\n#     [+] added CCache support (via NDK_CCACHE environment or cmake variable)\n\n#     [+] added gold linker support for NDK r8b\n\n#     [~] fixed mips linker flags for NDK r8b\n\n#   - September 2012\n\n#     [+] added NDK release name detection (see ANDROID_NDK_RELEASE)\n\n#     [+] added support for all C++ runtimes from NDK\n\n#         (system, gabi++, stlport, gnustl)\n\n#     [+] improved warnings on known issues of NDKs\n\n#     [~] use gold linker as default if available (NDK r8b)\n\n#     [~] globally turned off rpath\n\n#     [~] compiler options are aligned with NDK r8b\n\n#   - October 2012\n\n#     [~] fixed C++ linking: explicitly link with math library (OpenCV #2426)\n\n#   - November 2012\n\n#     [+] updated for NDK r8c\n\n#     [+] added support for clang compiler\n\n#   - December 2012\n\n#     [+] suppress warning about unused CMAKE_TOOLCHAIN_FILE variable\n\n#     [+] adjust API level to closest compatible as NDK does\n\n#     [~] fixed ccache full path search\n\n#     [+] updated for NDK r8d\n\n#     [~] compiler options are aligned with NDK r8d\n\n#   - March 2013\n\n#     [+] updated for NDK r8e (x86 version)\n\n#     [+] support x86_64 version of NDK\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 297,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable only to suppress \"unused variable\" warning\n",
        "Line" : 302,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# this one is important\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one not so much\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rpath makes low sence for Android\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# detect current host platform\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 491,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 495,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 509,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# remember found paths\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# try to detect change\n",
        "Line" : 522,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# try to detect change\n",
        "Line" : 539,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 619,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 632,
        "CharPositionInLine" : 39
      },
      "21" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# choose target ABI\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 664,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# set target ABI options\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 703,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 734,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# choose toolchain\n",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# choose native API level\n",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# adjust API level\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# validate\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# remember target ABI\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# honor legacy ANDROID_USE_STLPORT\n",
        "Line" : 841,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 916,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 931,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# clang\n",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 990,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# do nothing\n",
        "Line" : 996,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1031,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1049,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# r8b\n",
        "Line" : 1051,
        "CharPositionInLine" : 44
      },
      "42" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1075,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ccache support\n",
        "Line" : 1090,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1103,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1146,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1165,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1173,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# quotes will break try_compile and compiler identification\n",
        "Line" : 1180,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# NDK flags\n",
        "Line" : 1187,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1197,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1226,
        "CharPositionInLine" : 62
      },
      "52" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1233,
        "CharPositionInLine" : 72
      },
      "53" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1236,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1247,
        "CharPositionInLine" : 91
      },
      "55" : {
        "Text" : "# STL\n",
        "Line" : 1252,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# workaround \"undefined reference to `__dso_handle'\" problem\n",
        "Line" : 1264,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# C objects:\n",
        "Line" : 1277,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1292,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1294,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# linker flags\n",
        "Line" : 1314,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1318,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# version 4.6\n",
        "Line" : 1347,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# cache flags\n",
        "Line" : 1375,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1386,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# finish flags\n",
        "Line" : 1392,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# configure rtti\n",
        "Line" : 1409,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1418,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1429,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# setup output directories\n",
        "Line" : 1433,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1446,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1453,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1459,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1481,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1518,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 1551,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   NDK_CCACHE : <path to your ccache executable>\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_USE_STLPORT : superseded by ANDROID_STL=stlport_static\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   MIPS : TRUE if configured for mips\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\" or \"mips\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : one of r5, r5b, r5c, r6, r6b, r7, r7b, r7c, r8, r8b, r8c, r8d, r8e; set only for NDK\n\n#   ANDROID_ARCH_NAME : \"arm\" or \"x86\" or \"mips\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1561,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 78
    },
    "Hardware/PINCushion/GoldenEye_v1/build.xml" : {
      "ObjectId" : "fcf4b0c13fdc1dbb304742a7f901e3a13caa3faa",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"GoldenEye_v1-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "Hardware/PINCushion/PPT_API/build.xml" : {
      "ObjectId" : "ee13273c0e036600fd09a278223b81fb992ed1e8",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"PPT_API-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "Hardware/PINCushion/RAAC/RAC/build.xml" : {
      "ObjectId" : "62c2cf5527285f04075a77a02de3bc3f5afc0846",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"RAAC-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "Hardware/PINPoint External Sensor Board/v1.0 -5v to +5v/v1.0.pro" : {
      "ObjectId" : "3475e07609460b62baa50cefce16208144c8619c",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Hardware/PINPoint External Sensor Board/v1.0/v1.0.pro" : {
      "ObjectId" : "3475e07609460b62baa50cefce16208144c8619c",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Hardware/PINPointFirmware/Bootloader/Makefile" : {
      "ObjectId" : "5ae226c9be2d764db7cd8dd24e2ae81813adb81f",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L../avr_lib\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# testing_interface.o sensor_interface.o \n\n## Objects explicitly added by the user\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "Hardware/PINPointFirmware/ISENSE2/Makefile" : {
      "ObjectId" : "e10c9aecd5f4c3dad6e652eb43e8194f51b15a81",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L../avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# testing_interface.o sensor_interface.o \n\n## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "Hardware/PINPointFirmware/ISENSE2_RiverMonitor/Debug/Makefile" : {
      "ObjectId" : "29408524e0ce8661128448c331463e8f780f8e3c",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n# Automatically-generated file. Do not edit!\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 210:211 token recognition error at: '\"\\n\\t@echo Finished building: $<\\n\\n\\n\\n# AVR/GNU Assembler\\n\\n\\n\\n\\nifneq ($(MAKECMDGOALS),clean)\\nifneq ($(strip $(C_DEPS)),)\\n-include $(C_DEPS)\\nendif\\nendif\\n\\n# Add inputs and outputs from these tool invocations to the build variables \\n\\n# All Target\\nall: $(OUTPUT_FILE_PATH) $(ADDITIONAL_DEPENDENCIES)\\n\\n# AVR/GNU C/C++ Linker\\n$(OUTPUT_FILE_PATH): $(OBJS) $(USER_OBJS) $(OUTPUT_FILE_DEP)\\n\\t@echo Building target: $@\\n\\t@echo Invoking: AVR/GNU C/C++ Linker\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-gcc.exe$(QUOTE)  -mmcu=atmega324p  -Wl,-Map=$(MAP_FILE_PATH_AS_ARGS) -o$(OUTPUT_FILE_PATH_AS_ARGS) $(OBJS_AS_ARGS) $(USER_OBJS) $(LIBS)\\n\\t@echo Finished building target: $@\\n\\n\\n\\n$(HEX_FLASH_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -O ihex -R .eeprom -R .fuse -R .lock -R .signature  $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE)\\n\\n$(HEX_EEPROM_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t-$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -j .eeprom --set-section-flags=.eeprom=alloc,load --change-section-lma .eeprom=0 --no-change-warnings -O ihex $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE) || exit 0\\n\\n$(LSS_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objdump.exe$(QUOTE) -h -S $(QUOTE)$<$(QUOTE) > $(QUOTE)$@$(QUOTE)\\n\\nsize: $(OUTPUT_FILE_PATH)\\n\\t@$(QUOTE)$(AVR_APP_PATH)avr-size.exe$(QUOTE) -C --mcu=atmega324p $(OUTPUT_FILE_PATH_AS_ARGS)\\n\\n# Other Targets\\nclean:\\n\\t-$(RM) $(OBJS_AS_ARGS)$(C_DEPS_AS_ARGS) $(EXECUTABLES) $(LIB_AS_ARGS) $(HEX_FLASH_FILE_PATH_AS_ARGS) $(HEX_EEPROM_FILE_PATH_AS_ARGS) $(LSS_FILE_PATH_AS_ARGS) $(MAP_FILE_PATH_AS_ARGS)\\n\\n\u0000'\n"
    },
    "Hardware/PINPointFirmware/ISENSE2_RiverMonitor/Makefile" : {
      "ObjectId" : "e10c9aecd5f4c3dad6e652eb43e8194f51b15a81",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L../avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# testing_interface.o sensor_interface.o \n\n## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "Hardware/PINPointFirmware/ISENSE2_RiverMonitor/Release/Makefile" : {
      "ObjectId" : "7efd399a36bdb0b8fb48c49b3e1745fcb6766b3f",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n# Automatically-generated file. Do not edit!\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 217:207 token recognition error at: '\"\\n\\t@echo Finished building: $<\\n\\n\\n\\n# AVR/GNU Assembler\\n\\n\\n\\n\\nifneq ($(MAKECMDGOALS),clean)\\nifneq ($(strip $(C_DEPS)),)\\n-include $(C_DEPS)\\nendif\\nendif\\n\\n# Add inputs and outputs from these tool invocations to the build variables \\n\\n# All Target\\nall: $(OUTPUT_FILE_PATH) $(ADDITIONAL_DEPENDENCIES)\\n\\n# AVR/GNU C/C++ Linker\\n$(OUTPUT_FILE_PATH): $(OBJS) $(USER_OBJS) $(OUTPUT_FILE_DEP)\\n\\t@echo Building target: $@\\n\\t@echo Invoking: AVR/GNU C/C++ Linker\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-gcc.exe$(QUOTE) -Wl,--gc-sections  -mmcu=atmega324p  -Wl,-Map=$(MAP_FILE_PATH_AS_ARGS) -o$(OUTPUT_FILE_PATH_AS_ARGS) $(OBJS_AS_ARGS) $(USER_OBJS) $(LIBS)\\n\\t@echo Finished building target: $@\\n\\n\\n\\n$(HEX_FLASH_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -O ihex -R .eeprom -R .fuse -R .lock -R .signature  $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE)\\n\\n$(HEX_EEPROM_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t-$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -j .eeprom --set-section-flags=.eeprom=alloc,load --change-section-lma .eeprom=0 --no-change-warnings -O ihex $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE) || exit 0\\n\\n$(LSS_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objdump.exe$(QUOTE) -h -S $(QUOTE)$<$(QUOTE) > $(QUOTE)$@$(QUOTE)\\n\\nsize: $(OUTPUT_FILE_PATH)\\n\\t@$(QUOTE)$(AVR_APP_PATH)avr-size.exe$(QUOTE) -C --mcu=atmega324p $(OUTPUT_FILE_PATH_AS_ARGS)\\n\\n# Other Targets\\nclean:\\n\\t-$(RM) $(OBJS_AS_ARGS)$(C_DEPS_AS_ARGS) $(EXECUTABLES) $(LIB_AS_ARGS) $(HEX_FLASH_FILE_PATH_AS_ARGS) $(HEX_EEPROM_FILE_PATH_AS_ARGS) $(LSS_FILE_PATH_AS_ARGS) $(MAP_FILE_PATH_AS_ARGS)\\n\\n\u0000'\n"
    },
    "Hardware/PINPointFirmware/Makefile" : {
      "ObjectId" : "1d68a74a3680fea88328cf1ce71dba54d55f9586",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Integration Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Define MCU\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Define Programmer bitclock\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## List of Executables\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Hardware/PINPointFirmware/V4TestProceedure/ButtonTest/Makefile" : {
      "ObjectId" : "526885195fa5e7732cc75b5e44e95745ea57805f",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 -l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "Hardware/PINPointSchematics/PPT4_Mosquito(Rev 1)/Board_Schematic/ppt4.pro" : {
      "ObjectId" : "60dd2742dd279ec3764619f943386286e1e79c7e",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Hardware/PINPointSchematics/PPT4_Mosquito(Rev 1)/TestProceedure/ButtonTest/Makefile" : {
      "ObjectId" : "5f04a350448a02eee724263d656d5578affa2621",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 -l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "Hardware/PINPointSchematics/PPT4_Mosquito(Rev 2)/Board_Schematic/ppt4.pro" : {
      "ObjectId" : "7a0326ac9dc7cec5738129ee72c72f8989e7cc2c",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Hardware/PINPointSchematics/PPT4_Mosquito(Rev 2)/TestProceedure/ButtonTest/Makefile" : {
      "ObjectId" : "5f04a350448a02eee724263d656d5578affa2621",
      "LastModified" : "2014-07-11T07:55:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 -l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "iOS/Hardware/PINCushion/GoldenEye_v1/build.xml" : {
      "ObjectId" : "fcf4b0c13fdc1dbb304742a7f901e3a13caa3faa",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"GoldenEye_v1-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "iOS/Hardware/PINCushion/PPT_API/build.xml" : {
      "ObjectId" : "ee13273c0e036600fd09a278223b81fb992ed1e8",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"PPT_API-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "iOS/Hardware/PINCushion/RAAC/RAC/build.xml" : {
      "ObjectId" : "62c2cf5527285f04075a77a02de3bc3f5afc0846",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"RAAC-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "iOS/Hardware/PINPoint External Sensor Board/v1.0 -5v to +5v/v1.0.pro" : {
      "ObjectId" : "3475e07609460b62baa50cefce16208144c8619c",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "iOS/Hardware/PINPoint External Sensor Board/v1.0/v1.0.pro" : {
      "ObjectId" : "3475e07609460b62baa50cefce16208144c8619c",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "iOS/Hardware/PINPointFirmware/Bootloader/Makefile" : {
      "ObjectId" : "5ae226c9be2d764db7cd8dd24e2ae81813adb81f",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L../avr_lib\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# testing_interface.o sensor_interface.o \n\n## Objects explicitly added by the user\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "iOS/Hardware/PINPointFirmware/ISENSE2/Makefile" : {
      "ObjectId" : "e10c9aecd5f4c3dad6e652eb43e8194f51b15a81",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L../avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# testing_interface.o sensor_interface.o \n\n## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "iOS/Hardware/PINPointFirmware/ISENSE2_RiverMonitor/Debug/Makefile" : {
      "ObjectId" : "29408524e0ce8661128448c331463e8f780f8e3c",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n# Automatically-generated file. Do not edit!\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 210:211 token recognition error at: '\"\\n\\t@echo Finished building: $<\\n\\n\\n\\n# AVR/GNU Assembler\\n\\n\\n\\n\\nifneq ($(MAKECMDGOALS),clean)\\nifneq ($(strip $(C_DEPS)),)\\n-include $(C_DEPS)\\nendif\\nendif\\n\\n# Add inputs and outputs from these tool invocations to the build variables \\n\\n# All Target\\nall: $(OUTPUT_FILE_PATH) $(ADDITIONAL_DEPENDENCIES)\\n\\n# AVR/GNU C/C++ Linker\\n$(OUTPUT_FILE_PATH): $(OBJS) $(USER_OBJS) $(OUTPUT_FILE_DEP)\\n\\t@echo Building target: $@\\n\\t@echo Invoking: AVR/GNU C/C++ Linker\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-gcc.exe$(QUOTE)  -mmcu=atmega324p  -Wl,-Map=$(MAP_FILE_PATH_AS_ARGS) -o$(OUTPUT_FILE_PATH_AS_ARGS) $(OBJS_AS_ARGS) $(USER_OBJS) $(LIBS)\\n\\t@echo Finished building target: $@\\n\\n\\n\\n$(HEX_FLASH_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -O ihex -R .eeprom -R .fuse -R .lock -R .signature  $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE)\\n\\n$(HEX_EEPROM_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t-$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -j .eeprom --set-section-flags=.eeprom=alloc,load --change-section-lma .eeprom=0 --no-change-warnings -O ihex $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE) || exit 0\\n\\n$(LSS_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objdump.exe$(QUOTE) -h -S $(QUOTE)$<$(QUOTE) > $(QUOTE)$@$(QUOTE)\\n\\nsize: $(OUTPUT_FILE_PATH)\\n\\t@$(QUOTE)$(AVR_APP_PATH)avr-size.exe$(QUOTE) -C --mcu=atmega324p $(OUTPUT_FILE_PATH_AS_ARGS)\\n\\n# Other Targets\\nclean:\\n\\t-$(RM) $(OBJS_AS_ARGS)$(C_DEPS_AS_ARGS) $(EXECUTABLES) $(LIB_AS_ARGS) $(HEX_FLASH_FILE_PATH_AS_ARGS) $(HEX_EEPROM_FILE_PATH_AS_ARGS) $(LSS_FILE_PATH_AS_ARGS) $(MAP_FILE_PATH_AS_ARGS)\\n\\n\u0000'\n"
    },
    "iOS/Hardware/PINPointFirmware/ISENSE2_RiverMonitor/Makefile" : {
      "ObjectId" : "e10c9aecd5f4c3dad6e652eb43e8194f51b15a81",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L../avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# testing_interface.o sensor_interface.o \n\n## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "iOS/Hardware/PINPointFirmware/ISENSE2_RiverMonitor/Release/Makefile" : {
      "ObjectId" : "7efd399a36bdb0b8fb48c49b3e1745fcb6766b3f",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n# Automatically-generated file. Do not edit!\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 217:207 token recognition error at: '\"\\n\\t@echo Finished building: $<\\n\\n\\n\\n# AVR/GNU Assembler\\n\\n\\n\\n\\nifneq ($(MAKECMDGOALS),clean)\\nifneq ($(strip $(C_DEPS)),)\\n-include $(C_DEPS)\\nendif\\nendif\\n\\n# Add inputs and outputs from these tool invocations to the build variables \\n\\n# All Target\\nall: $(OUTPUT_FILE_PATH) $(ADDITIONAL_DEPENDENCIES)\\n\\n# AVR/GNU C/C++ Linker\\n$(OUTPUT_FILE_PATH): $(OBJS) $(USER_OBJS) $(OUTPUT_FILE_DEP)\\n\\t@echo Building target: $@\\n\\t@echo Invoking: AVR/GNU C/C++ Linker\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-gcc.exe$(QUOTE) -Wl,--gc-sections  -mmcu=atmega324p  -Wl,-Map=$(MAP_FILE_PATH_AS_ARGS) -o$(OUTPUT_FILE_PATH_AS_ARGS) $(OBJS_AS_ARGS) $(USER_OBJS) $(LIBS)\\n\\t@echo Finished building target: $@\\n\\n\\n\\n$(HEX_FLASH_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -O ihex -R .eeprom -R .fuse -R .lock -R .signature  $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE)\\n\\n$(HEX_EEPROM_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t-$(QUOTE)$(AVR_APP_PATH)avr-objcopy.exe$(QUOTE) -j .eeprom --set-section-flags=.eeprom=alloc,load --change-section-lma .eeprom=0 --no-change-warnings -O ihex $(QUOTE)$<$(QUOTE) $(QUOTE)$@$(QUOTE) || exit 0\\n\\n$(LSS_FILE_PATH): $(OUTPUT_FILE_PATH)\\n\\t$(QUOTE)$(AVR_APP_PATH)avr-objdump.exe$(QUOTE) -h -S $(QUOTE)$<$(QUOTE) > $(QUOTE)$@$(QUOTE)\\n\\nsize: $(OUTPUT_FILE_PATH)\\n\\t@$(QUOTE)$(AVR_APP_PATH)avr-size.exe$(QUOTE) -C --mcu=atmega324p $(OUTPUT_FILE_PATH_AS_ARGS)\\n\\n# Other Targets\\nclean:\\n\\t-$(RM) $(OBJS_AS_ARGS)$(C_DEPS_AS_ARGS) $(EXECUTABLES) $(LIB_AS_ARGS) $(HEX_FLASH_FILE_PATH_AS_ARGS) $(HEX_EEPROM_FILE_PATH_AS_ARGS) $(LSS_FILE_PATH_AS_ARGS) $(MAP_FILE_PATH_AS_ARGS)\\n\\n\u0000'\n"
    },
    "iOS/Hardware/PINPointFirmware/Makefile" : {
      "ObjectId" : "1d68a74a3680fea88328cf1ce71dba54d55f9586",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Integration Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Define MCU\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Define Programmer bitclock\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## List of Executables\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "iOS/Hardware/PINPointFirmware/V4TestProceedure/ButtonTest/Makefile" : {
      "ObjectId" : "526885195fa5e7732cc75b5e44e95745ea57805f",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 -l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "iOS/Hardware/PINPointSchematics/PPT4_Mosquito(Rev 1)/Board_Schematic/ppt4.pro" : {
      "ObjectId" : "60dd2742dd279ec3764619f943386286e1e79c7e",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "iOS/Hardware/PINPointSchematics/PPT4_Mosquito(Rev 1)/TestProceedure/ButtonTest/Makefile" : {
      "ObjectId" : "5f04a350448a02eee724263d656d5578affa2621",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 -l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "iOS/Hardware/PINPointSchematics/PPT4_Mosquito(Rev 2)/Board_Schematic/ppt4.pro" : {
      "ObjectId" : "7a0326ac9dc7cec5738129ee72c72f8989e7cc2c",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "iOS/Hardware/PINPointSchematics/PPT4_Mosquito(Rev 2)/TestProceedure/ButtonTest/Makefile" : {
      "ObjectId" : "5f04a350448a02eee724263d656d5578affa2621",
      "LastModified" : "2014-05-29T20:06:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################################\n\n# Machine Science Makefile template # \n\n#####################################\n\n##Fuse Settings for bootloader\n\n#w efuse 0 0xf8\n\n#w hfuse 0 0xdf\n\n#w lfuse 0 0xe2\n\n#d efuse to view settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Name of project\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Define MCU\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define Programmer MCU\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Define Programmer ID\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#PROGRAMMER_ID = stk500v2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Define Programmer port\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#PROGRAMMER_PORT = /dev/ttyS1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Define Programmer bitclock\n\n#PROGRAMMER_BC = 250\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## List of Executables\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile for MCU\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Define Debugging format\n\n# stabs or dwarf-2\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Define Optimization level \n\n# Possible leveles are [0, 1, 2, 3, s]\n\n# 0 = turn off optimization. s = optimize for size.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define C Standard level\n\n# c89\t- \"ANSI\" C\n\n# gnu89\t- c89 plus GCC extenstions\n\n# c99\t- ISO C99 standard (not yet full implemented)\n\n# gnu99\t- c99 plus GCC extentions\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Set all compile options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#CFLAGS += -g$(DEBUG)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define Print libaries\n\n# Not defined\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Minimalistic printf version\n\n# PRINTF_LIB = -Wl,-u,vfprintf -lprintf_min\n\n# Floating point printf version (requires MATH_LIB = -lm below)\n\n#PRINTF_LIB = -Wl,-u,vfprintf -lprintf_flt\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Additional Math lib\n\n#MATH_LIB = -lm\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Linker flags\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Intel Hex file production flags\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Include Directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#INCLUDES = -I../avr_inc \n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Library Directories\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-L avr_lib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LIBS = -llcd -lpins -lusart -lmp3 -lheart -l595 -l8usart -l8delay -l8adc -l8lcd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Objects that must be built in order to link\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Objects explicitly added by the user\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Build\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Compile\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##Link (LDFLADS, specifcally -lm MUST go last!)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Clean PROJECT\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "QMAKE" : 8,
    "MAKEFILE" : 18,
    "ANT" : 6
  },
  "ElapsedTime" : 14429
}