{
  "Repository" : "21317048",
  "Revision" : "HEAD",
  "ObjectId" : "8e929446630cf8b81655de89921590f6b19bf509",
  "CommitTime" : "2019-03-08T17:50:17Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "178624cc59cbab2fea1c10efcddab44e0437a480",
      "LastModified" : "2019-03-08T17:50:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# At build-time, the PA2X package generates the file\n\n# $PARSE_DIR/parse-inc/config-structs.h (where environment-var\n\n# $PARSE_DIR points to the PA2X installation).  At run-time, the PA2X\n\n# parser loads \"./parse-inc/config-structs.h\", but at run-time there\n\n# might not be any PA2X installation.  So, the build will now copy\n\n# that header-file to include/parse-inc/config-structs.h, under the\n\n# install-dir.  Thus, you need to build with '--prefix=' a destination\n\n# that will also exist at run-time, but you no longer need the PA2X\n\n# install at run-time.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AM_CPPFLAGS = -Icommon/configuration/src -Icommon/log/src -I$(AWS4C)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# automake requires '=' before '+=', even for these built-in vars\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# DEBUG>1  turn on S3 transaction logging (only affects libcurl interactions)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if PIPETOOL\n\n#bin_PROGRAMS = marfs_pipe\n\n#marfs_pipe_SOURCES = marfs_pipe_main.c\n\n#endif\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#$(AWS4C)/libaws4c.a $(AWS4C)/libaws4c_extra.a\n",
        "Line" : 89,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# Use our own polite spin locks\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# added individually, below\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- additions for multi-component builds\n\n#  Configure has already added the -lne flag and verified that libne is in our path\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#  AM_CPPFLAGS += -I$(LIBNE)/include -DUSE_MC=1\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  AM_LDFLAGS  += -L$(LIBNE)/lib\n\n#  LDADD       += -L$(LIBNE)/lib -lne -lft\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ............................................................................\n\n# Tools\n\n# ............................................................................\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generally we will always want to build the config tester program.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# allows debugging script (fuse/scripts/separate_log_threads) to be more efficient\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  bin_PROGRAMS += rebuilder\n\n#  # rebuilder_CC      = mpicc\n\n#  # rebuilder_CXX     = mpicc\n\n#  rebuilder_COMPILE = mpicc\n\n#  rebuilder_SOURCES = utilities/multi-component/rebuilder.c\n\n#  rebuilder_LDFLAGS = $(AM_LDFLAGS) $(MC_SOCKET_LD_FLAGS)\n\n#\n\n# build rebuilder by hand, because it needs mpicc\n\n# (see https://stackoverflow.com/questions/25972150/automake-per-target-compiler)\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The PA2X_interface needs to look in additional places for its #include files.\n\n#common/configuration/src/PA2X_interface.o: common/configuration/src/PA2X_interface.c common/configuration/src/PA2X_interface.h\n\n#  $(COMPILE) -I$(PARSE_DIR) -DPARSE_DIR=$(PARSE_DIR) $(AM_CPPFLAGS) -o $@ -c $<\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOTE: we could build marfs_config just from marfs_config.c and add\n\n#       the necessary objects with LDADD like so:\n\n# marfs_config_LDADD = marfs_configuration.o PA2X_Interface.o $(PARSE_OBJ)\n\n#\n\n# Of just link libmarfs:\n\n#\n\n# marfs_config_SOURCES = fuse/src/marfs_config.c\n\n# marfs_config_LDADD = libmarfs.a\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ............................................................................\n\n# FUSE\n\n# ............................................................................\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ............................................................................\n\n# GPFS Utilities\n\n# ............................................................................\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ............................................................................\n\n# Parser\n\n# ............................................................................\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This generates a 'datapars' in PARSE_DIR, using the BLUEPRINT config.\n\n# This parser should then be able to parse MarFS configs that are\n\n# consistent with the blueprint.\n\n#\n\n# NOTE: If you get errors about \"redefining struct namespace\",\n\n#     You probably have a mistake in the tags in your config.\n\n#\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# $(MAKE) -C $(PARSE_DIR) confpars-d\n",
        "Line" : 325,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# (cd $(PARSE_DIR); ./confpars $(BLUEPRINT); echo 0 )\n",
        "Line" : 329,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# $(MAKE) -C $(PARSE_DIR) datapars-d   [fails]\n",
        "Line" : 333,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# NOTE: This is the only time PA2X's Makefile will honor our CFLAGS settings.\n",
        "Line" : 339,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "#\t@ echo; echo \"#-- making a symlink to $(PARSE_H)\"\n\n#\tln -fs $(PARSE_H) $(PARSE_H_file)\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# a super nasty way to make sure that parser is always built first.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "### include_HEADERS += $(PARSE_H)\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ............................................................................\n\n# Various Testing\n\n# ............................................................................\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# test_lock test_lock2 test_lock2b\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ............................................................................\n\n# Useful development targets\n\n# ............................................................................\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\t@ exec gdb marfs_fuse `ps -elf | egrep 'marfs_fuse(.*)/marfs' | grep -v grep | awk '{print $$4}'`\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# make turns \"$$\" into \"$\".\n",
        "Line" : 389,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# fusectl filesystem.  Under the fusectl mount-point, each existing\n\n# connection has a numbered subdirectory.  There's a special file named\n\n# \"abort\" there.  Writing anything to that file aborts the connection.\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#run-%: %\n\n#\tRUN $* $(MNT)/test00\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# NOTE: NFS-exporting (v3 or v4) a fuse-mount mounted with 'direct_io'\n\n#       causes all reads received at fuse to have size=4K.  Without\n\n#       direct_io, read sizes in this scenario are 128K.\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ifeq ($(DEBUG),2)\n\n#\tFUSE_FLAGS += -d -f\n\n# endif\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# convenience targets for fuse.\n\n# TODO: re-introduce the old EXEC, which allowed e.g. gprof, valgrind, etc.\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# make turns \"$$\" into \"$\".\n",
        "Line" : 435,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 39
    }
  },
  "FileTypes" : {
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 890
}