{
  "Repository" : "3594083",
  "Revision" : "HEAD",
  "ObjectId" : "4570d46b7837d0dbdb7b5f9ffb1e77ea7068c316",
  "CommitTime" : "2019-04-01T09:22:17Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ee5d3d6623c6bbe22548ce361c1e5c430f0f9620",
      "LastModified" : "2018-11-26T14:57:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add path with own cmake modules\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find necessary libraries\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add include dirs\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# rpm:\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# rpmio:\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SuSE/Mageia/Mandriva legacy weak deps support\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# drpm\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# option to enable/disable python support\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Threaded XZ Compression\n\n# Note: This option is disabled by default, because Createrepo_c\n\n# parallelize a lot of tasks (including compression) by default, this\n\n# only adds extra threads on XZ library level which causes thread bloat\n\n# and for most usecases doesn't bring any performance boost.\n\n# On regular hardware (e.g. less-or-equal 4 cores) this option may even\n\n# cause degradation of performance.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Get package version\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Default python version\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Other files\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Gen manpage\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#message(\"Gen manpage\")\n\n#execute_process(COMMAND bash gen_manpage.sh src/cmd_parser.c ../doc/ WORKING_DIRECTORY utils/)\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add custom target for tests\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Subdirs\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "VERSION.cmake" : {
      "ObjectId" : "5103dc926fa2843dfbc3c0da9b32db6fc5a5623d",
      "LastModified" : "2019-03-11T06:59:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindGLIB2.cmake" : {
      "ObjectId" : "87bf6ec7ed38a6203b65d97ed34433b2a09ffb5e",
      "LastModified" : "2012-03-13T14:23:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLib2\n\n# Once done this will define\n\n#\n\n#  GLIB2_FOUND - system has GLib2\n\n#  GLIB2_INCLUDE_DIRS - the GLib2 include directory\n\n#  GLIB2_LIBRARIES - Link these to use GLib2\n\n#\n\n#  HAVE_GLIB_GREGEX_H  glib has gregex.h header and \n\n#                      supports g_regex_match_simple\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#  Copyright (c) 2006 Philippe Bernery <philippe.bernery@gmail.com>\n\n#  Copyright (c) 2007 Daniel Gollub <gollub@b1-systems.de>\n\n#  Copyright (c) 2007 Alban Browaeys <prahal@yahoo.com>\n\n#  Copyright (c) 2008 Michael Bell <michael.bell@web.de>\n\n#  Copyright (c) 2008-2009 Bjoern Ricks <bjoern.ricks@googlemail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Glib\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Look for glib2 include dir and libraries w/o pkgconfig\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"Glib headers: ${_glib2_include_DIR}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Handle dependencies\n\n# libintl\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# libiconv\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "##\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# show the GLIB2_INCLUDE_DIRS and GLIB2_LIBRARIES variables only in the advanced view\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# include libiconv for win32\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Check if system has a newer version of glib\n\n# which supports g_regex_match_simple\n",
        "Line" : 227,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Reset CMAKE_REQUIRED_INCLUDES\n",
        "Line" : 233,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "cmake/Modules/FindGTHREAD2.cmake" : {
      "ObjectId" : "1618fd38fa39e4216bf87083d84ae76e809ca969",
      "LastModified" : "2012-03-13T14:23:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GThread2 \n\n# Find GThread headers, libraries and the answer to all questions.\n\n#\n\n#  GTHREAD2_FOUND               True if GTHREAD2 got found\n\n#  GTHREAD2_INCLUDE_DIRS        Location of GTHREAD2 headers \n\n#  GTHREAD2_LIBRARIES           List of libraries to use GTHREAD2 \n\n#\n\n#  Copyright (c) 2008 Bjoern Ricks <bjoern.ricks@googlemail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE( STATUS \"Gthread headers: ${GTHREAD2_INCLUDE_DIRS}\" )\n\n#MESSAGE( STATUS \"Gthread libs: ${GTHREAD2_LIBRARIES}\" )\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Report results\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindLZMA.cmake" : {
      "ObjectId" : "1d065c4abcc7433c05b07b02147d69b505c0243c",
      "LastModified" : "2012-06-11T14:45:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find lzma and lzmadec\n\n# Find the native LZMA includes and library\n\n#\n\n#  LZMA_INCLUDE_DIR    - where to find lzma.h, etc.\n\n#  LZMA_LIBRARIES      - List of libraries when using liblzma.\n\n#  LZMA_FOUND          - True if liblzma found.\n\n#  LZMADEC_INCLUDE_DIR - where to find lzmadec.h, etc.\n\n#  LZMADEC_LIBRARIES   - List of libraries when using liblzmadec.\n\n#  LZMADEC_FOUND       - True if liblzmadec found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LZMA_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LZMADEC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindLibmagic.cmake" : {
      "ObjectId" : "557d6383378bf29e6407a0610c6dcbb32dedaaa6",
      "LastModified" : "2012-06-11T14:45:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find libmagic.so (part of the 'file' package)\n\n# (C) 2009 by Lorenzo Villani. Licensed under LGPL license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include dir\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindSqlite3.cmake" : {
      "ObjectId" : "0eccec2252e3bfadcd0eb5061219935fb1f61786",
      "LastModified" : "2012-06-26T11:24:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find Sqlite 3\n\n# SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)\n\n# SQLITE3_LIBRARIES - Sqlite 3 libraries\n\n# SQLITE3_LIBRARY_RELEASE - Where the release library is\n\n# SQLITE3_LIBRARY_DEBUG - Where the debug library is\n\n# SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and executable)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/Modules/LibFindMacros.cmake" : {
      "ObjectId" : "795d6b71137f05c74378f2dba858dbf5899b2a05",
      "LastModified" : "2012-06-26T11:24:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Damn CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "6b2ef5e0593757c7b977cd5d228b7774b4f45641",
      "LastModified" : "2018-11-19T15:17:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/python/CMakeLists.txt" : {
      "ObjectId" : "90036fc42e17f99d12099e65c83a812ba3b92fae",
      "LastModified" : "2014-09-30T09:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "a3728c5d1b695f81f6dbf4ebf76e181a5d05a426",
      "LastModified" : "2018-11-26T14:57:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/createrepo_c.pc.cmake" : {
      "ObjectId" : "ef33f6e2db8c8b6becda7f3024610bfd383d5100",
      "LastModified" : "2013-03-04T10:21:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/CMakeLists.txt" : {
      "ObjectId" : "dbd9330e279c31c0cebbf0c744cbb94a97407622",
      "LastModified" : "2019-03-11T06:59:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "2abc37264d77f83836d6b6acc37d65e9a7d21f3c",
      "LastModified" : "2019-03-11T06:59:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/python/CMakeLists.txt" : {
      "ObjectId" : "64ccc72249cd6e4602be007b3b794d81f1bcb539",
      "LastModified" : "2013-05-06T12:04:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/python/tests/CMakeLists.txt" : {
      "ObjectId" : "3c1fdb7aa5538b33a9d442dd98d745c165fd7933",
      "LastModified" : "2019-03-11T06:59:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect nosetest version suffix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 16
  },
  "ElapsedTime" : 1941
}