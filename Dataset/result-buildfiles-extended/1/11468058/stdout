{
  "Repository" : "11468058",
  "Revision" : "HEAD",
  "ObjectId" : "8ec9ad70c4ab5355f5d06de67ba724830372a365",
  "CommitTime" : "2016-06-05T09:54:37Z",
  "Files" : {
    "libraries/libffi/Makefile.am" : {
      "ObjectId" : "4a855d742a19e7c92ce643c72bcbf47acf3f7977",
      "LastModified" : "2014-08-18T04:51:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## ################################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n## This section is for make and multilib madness.\n\n##\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Work around what appears to be a GNU make bug handling MAKEFLAGS\n\n# values defined in terms of make variables, as is the case for CC and\n\n# friends when we are called from the top level Makefile.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build debug. Define FFI_DEBUG on the commandline so that, when building with\n\n# MSVC, it can link against the debug CRT.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# No install-html or install-pdf support in automake yet\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "libraries/libffi/include/Makefile.am" : {
      "ObjectId" : "fd28024973191098d27dd6afdf566d38ada7e525",
      "LastModified" : "2014-08-18T04:51:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/libffi/man/Makefile.am" : {
      "ObjectId" : "afcbfb69f1d3de0cce6c171f357c5927972db76b",
      "LastModified" : "2014-08-18T04:51:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/libffi/testsuite/Makefile.am" : {
      "ObjectId" : "146fdf9ed4a8a3eae6cb8c993b6c3eaf0ccf540f",
      "LastModified" : "2014-08-18T04:51:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setup the testing framework, if you have one\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libraries/pthreads-win32/Makefile" : {
      "ObjectId" : "f1789976f76828cc8ae81b0d51737c5ace7740c7",
      "LastModified" : "2014-08-18T04:54:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile is compatible with MS nmake and can be used as a\n\n# replacement for buildlib.bat. I've changed the target from an ordinary dll\n\n# (/LD) to a debugging dll (/LDd).\n\n# \n\n# The variables $DLLDEST and $LIBDEST hold the destination directories for the\n\n# dll and the lib, respectively. Probably all that needs to change is $DEVROOT.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DLL_VER:\n\n# See pthread.h and README - This number is computed as 'current - age'\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this if config.h defines RETAIN_WSALASTERROR\n\n#XLIBS = wsock32.lib\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default cleanup style\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ Exceptions\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Structured Exceptions\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#C cleanup code\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Aggregate modules for inlinability\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Separate modules for minimising the size of statically linked images\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# The so-called inlined DLL is just a single translation unit with\n\n# inlining optimisation turned on.\n\n#\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10,
      "Errorlog" : "line 14:12 token recognition error at: '\\p'\nline 16:20 token recognition error at: '\\d'\nline 17:20 token recognition error at: '\\l'\nline 18:20 token recognition error at: '\\i'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 2558
}