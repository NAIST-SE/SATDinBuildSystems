{
  "Repository" : "22212828",
  "Revision" : "HEAD",
  "ObjectId" : "5b4b48d74fb31178db0a6903d5812a86e4b1baac",
  "CommitTime" : "2019-04-12T11:59:52Z",
  "Files" : {
    "eea/climateadapt/browser/resources/SimilarAreasTool-portlet/js/proj4js/build/build.xml" : {
      "ObjectId" : "42bf40e69daee1c67aecc6c566709b3b795a3f27",
      "LastModified" : "2016-01-15T09:48:28Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "*************************************************************************\nFilename        :   build.xml\nProject         :   proj4js\nDocument Type   :   XML\nPurpose         :   build file for ant tool\n\nAuthor     Date            Description\nM.Adair    17-Dec-2001     initial version copied from mapbuilder\n\n$Id: build.xml 2955 2007-07-09 12:12:27Z steven $\n***************************************************************************",
        "Line" : 12,
        "CharPositionInLine" : 79
      },
      "1" : {
        "Text" : "\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : " A \"project\" describes a set of targets that may be requested\n     when Ant is executed.  The \"default\" attribute defines the\n     target which is executed if no specific target is requested,\n     and the \"basedir\" attribute defines the current working directory\n     from which Ant executes the requested task.  This is normally\n     set to the current working directory.\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : " ===================== Property Definitions =========================== ",
        "Line" : 23,
        "CharPositionInLine" : 80
      },
      "4" : {
        "Text" : "\n  Each of the following properties are used in the build script.\n  Values for these properties are set by the first place they are\n  defined, from the following list:\n\n  * Definitions on the \"ant\" command line (ant -Dfoo=bar compile).\n\n  * Definitions from a \"build.properties\" file in the top level\n    source directory of this application.\n\n  * Definitions from a \"build.properties\" file in the developer's\n    home directory.\n\n  * Default definitions in this build.xml file.\n\n  You will note below that property values can be composed based on the\n  contents of previously defined properties.  This is a powerful technique\n  that helps you minimize the number of changes required when your development\n  environment is modified.  Note that property composition is allowed within\n  \"build.properties\" files as well as in the \"build.xml\" script.\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : " ==================== File and Directory Names ======================== ",
        "Line" : 49,
        "CharPositionInLine" : 80
      },
      "6" : {
        "Text" : "\n\n  These properties generally define file and directory names (or paths) that\n  affect where the build process stores its outputs.\n\n  app.name             Base name of this application, used to\n                       construct filenames and directories.\n                       Defaults to \"myapp\".\n\n  app.path             Context path to which this application should be\n                       deployed (defaults to \"/\" plus the value of the\n                       \"app.name\" property).\n\n  app.version          Version number of this iteration of the application.\n\n  build.home           The directory into which the \"prepare\" and\n                       \"compile\" targets will generate their output.\n                       Defaults to \"build\".\n\n  dist.home            The name of the base directory in which\n                       distribution files are created.\n                       Defaults to \"dist\".\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : " ==================== Prepare Target ================================== ",
        "Line" : 83,
        "CharPositionInLine" : 80
      },
      "8" : {
        "Text" : "\n  The \"prepare\" target is used to create the \"build\" destination directory,\n  and copy the static contents of your web application to it.  If you need\n  to copy static files from external dependencies, you can customize the\n  contents of this task.\n\n  Normally, this task is executed indirectly when needed.\n\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : " Create build directories as needed ",
        "Line" : 95,
        "CharPositionInLine" : 48
      },
      "10" : {
        "Text" : " Copy static content of the mapbuilder project  ",
        "Line" : 97,
        "CharPositionInLine" : 60
      },
      "11" : {
        "Text" : " ==================== Clean Target ==================================== ",
        "Line" : 115,
        "CharPositionInLine" : 80
      },
      "12" : {
        "Text" : "\n\n  The \"clean\" target deletes any previous \"build\" and \"dist\" directory,\n  so that you can be ensured the application can be built from scratch.\n\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : " ==================== Documentation =================================== ",
        "Line" : 129,
        "CharPositionInLine" : 80
      },
      "14" : {
        "Text" : " ==================== Dist Target ===================================== ",
        "Line" : 143,
        "CharPositionInLine" : 80
      },
      "15" : {
        "Text" : "\n  The \"dist\" target creates the zip file distribution for the Apache/PHP\n  environment.\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : " Create application zip file ",
        "Line" : 152,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 17
    },
    "eea/climateadapt/skins/cca_overrides_templates/bower_components/es5-shim/Makefile" : {
      "ObjectId" : "5afc70dc3a57a209645642d0726058858116188e",
      "LastModified" : "2018-11-06T07:28:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n     npm run minify; \\\n     replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n     replace \"blob/master\" \"blob/v$$new_ver\" -- *.min.js && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGES && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "eea/climateadapt/skins/cca_overrides_templates/bower_components/expect/Makefile" : {
      "ObjectId" : "fa831713ae7c96f2dad7c16888f0b3b85f727261",
      "LastModified" : "2018-11-06T07:28:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "eea/climateadapt/skins/cca_overrides_templates/bower_components/marked/Makefile" : {
      "ObjectId" : "d9349f07996d34f50e3af4d4b4eae9d921b4e3c8",
      "LastModified" : "2018-11-06T07:28:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0,
      "Errorlog" : "line 3:28 token recognition error at: '\\0'\nline 3:44 token recognition error at: '\\0'\n"
    },
    "eea/climateadapt/skins/cca_overrides_templates/bower_components/patternslib/Makefile" : {
      "ObjectId" : "8f013dfd04fa567ebf1a0193d378bbafa02c823c",
      "LastModified" : "2018-11-06T07:28:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "########################################################################\n\n## Install dependencies\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n## Tests\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n## Builds\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4,
    "ANT" : 1
  },
  "ElapsedTime" : 2960
}