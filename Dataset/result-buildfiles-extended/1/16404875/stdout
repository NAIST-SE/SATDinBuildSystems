{
  "Repository" : "16404875",
  "Revision" : "HEAD",
  "ObjectId" : "8bdb484917b147e53e1b4a2b7defbf201200043a",
  "CommitTime" : "2016-12-04T14:59:04Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a1ce2edb42641193b2ca5297e24df0008379a025",
      "LastModified" : "2016-10-03T12:20:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Makelist script starts here\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create variable for engine root folder\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reset\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Undefine install, we don't want install targets.\n\n#MACRO (install targets...)\n\n#ENDMACRO()\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Output all runtime files to the bin folder on build.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Put all configurations into the same folder\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disables the \"ZERO_CHECK\" target, and trying to regenerate on build. (We want to manually regenerate)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable debug symbols for debug build.\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Enable C++11\n\n# -fPIC : Position independent code (needed for shared libs on UNIX based OS).\n\n# -fexceptions -pthread : exeptions and threading.\n\n# -lrt : Links to the librt.so library, see: http://stackoverflow.com/questions/2418157/ubuntu-linux-c-error-undefined-reference-to-clock-gettime-and-clock-settim\n\n# -lX11 -lXt: Links to the X11 window system library\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Test 32/64 bits\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Enable folders in the solution\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# First do thirdparty\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Then engine\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Then editor\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Then modules\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Then projects\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Editor/CMakeLists.txt" : {
      "ObjectId" : "8e26c2f8d211281306cd86caf1ca552b5efcf4b2",
      "LastModified" : "2016-09-16T22:28:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Editor/Source/CMakeLists.txt" : {
      "ObjectId" : "8b294a721275b5ba44acc4d7c4f834636e6b341c",
      "LastModified" : "2016-10-09T16:45:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure to only create editor project if Qt has been found.\n",
        "Line" : 1,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "#Set application icon on windows\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "Engine/CMakeLists.txt" : {
      "ObjectId" : "0ec51e5a8d2746372fdbf27d7fb4051dd14a4818",
      "LastModified" : "2016-09-16T22:28:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Engine/Source/Core/CMakeLists.txt" : {
      "ObjectId" : "4cca12cb7924a97874b7cd5d19f0fe1406e9db4f",
      "LastModified" : "2016-09-16T22:28:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Engine/Source/Foundation/CMakeLists.txt" : {
      "ObjectId" : "46d74abf805f902b236ebf4a8556a08f08f809df",
      "LastModified" : "2016-10-03T12:20:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Engine/Source/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "89915866457fc565cfb5bb5224fa0570dcc68654",
      "LastModified" : "2016-09-16T22:28:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CMakeLists.txt" : {
      "ObjectId" : "df6294f534f4ae5bbc81805361241a214042c059",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Physics2D/CMakeLists.txt" : {
      "ObjectId" : "4c4ce5e13dd09b4d5c2f28d17006174b2aac1598",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Renderer2D/CMakeLists.txt" : {
      "ObjectId" : "36cc368b7cfc9cb0eb8af61dd9353b49e6732da8",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Resources/CMakeLists.txt" : {
      "ObjectId" : "6afca1e664909b81c277fc22054029ed1f208a3c",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/VanguardSDL/CMakeLists.txt" : {
      "ObjectId" : "bd103a96f0c0e51a94e75599a446e494dd6b7a87",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/BrickBreaker/Source/CMakeLists.txt" : {
      "ObjectId" : "0d0df6c1f34766a91dec7eb4ce8dbe5788e6d1b9",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/CMakeLists.txt" : {
      "ObjectId" : "aba3390432e26b4e3f9a03486b647d5ac09b392e",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/EmptyProject/Source/CMakeLists.txt" : {
      "ObjectId" : "399df95e3edc9b3d99f4529a0342dd7d18a80721",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Projects/Sandbox2D/Source/CMakeLists.txt" : {
      "ObjectId" : "1bc434f196de43776a909db048b42faa7a76b8cc",
      "LastModified" : "2016-11-27T17:49:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VanguardFunctions.cmake" : {
      "ObjectId" : "b75374a9a49b90031830a7c1b1b1a35894c9e1f8",
      "LastModified" : "2016-11-27T17:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro that returns a list of all the directories that contain the specified files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Decode a string saved as \"Project=Dependency\" to two seperate strings.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Check to make sure target exists\n",
        "Line" : 21,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Put us in a IDE folder to match the disk folder relative to root cmake file.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Remove \"source\" from path, since it's implied.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Recursively find all \"CMakeLists.txt\" files. Only finds \"top level\" files, so recursion stops when it finds one.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find first level of subdirectories\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Recursively find all \"CMakeLists.txt\" files. Only finds \"top level\" files, so recursion stops when it finds one.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find all sub directories containting CMakeLists.txt files\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Make sure we're not adding our own (root) directory\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Run CmakeLists.txt scripts for each project.\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Recursively searches the specified folder for \"CMakeLists.txt\" files. Recursion stops when it finds one.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Append newly found variables\n",
        "Line" : 88,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Same as IMPLEMENT_PROJECT, but .h and .cpp are found automatically by scanning sub-directories.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Atm, just assume all non-deferred projects are thirdparty. This might need to be changed.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#Thirdparty libs link privately.\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#Could be linking directly to lib file.\n",
        "Line" : 144,
        "CharPositionInLine" : 23
      },
      "17" : {
        "Text" : "# Macro to easily implement a project. Automatically includes all code files, and writes dependencies to \"recordedProjectDependencies\" for linking later.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Ensure source files are absolute\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# If not specified as a console project, set subsystem to windows (will not spawn console window)\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Project path is a public include directory, so other modules can access it's headers\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#On Unix, link libraries needed for dynamic links.\n",
        "Line" : 187,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "#SUPER HACKY\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Group source files in the same way that they are found in the folders\n",
        "Line" : 196,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Make relative to CMakeLists\n\n# Get folder path\n",
        "Line" : 198,
        "CharPositionInLine" : 62
      },
      "25" : {
        "Text" : "# On windows the dir_path will have forward slashes and subgroups use backslashes, so convert them.\n",
        "Line" : 200,
        "CharPositionInLine" : 48
      },
      "26" : {
        "Text" : "# Put in group\n",
        "Line" : 201,
        "CharPositionInLine" : 41
      },
      "27" : {
        "Text" : "#Now link us to our dependencies\n",
        "Line" : 206,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# set to empty string\n",
        "Line" : 220,
        "CharPositionInLine" : 20
      },
      "29" : {
        "Text" : "# a space to cleanly separate from existing content\n",
        "Line" : 222,
        "CharPositionInLine" : 32
      },
      "30" : {
        "Text" : "# Macro for implementing modules\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#IMPLEMENT_PROJECT_AUTOFINDSOURCES(\"MODULE\" \"${moduleName}\" \"${dependencies}\")\n\n#Shared libraries behave the same as actual modules, but also allow dependencies.\n",
        "Line" : 236,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Macro for implementing static libraries\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Macro for implementing static libraries\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Macro for implementing executables\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Add this project to the list of projects.\n",
        "Line" : 275,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Insert a macro so we know which project we're launching at runtime\n",
        "Line" : 302,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 37
    }
  },
  "FileTypes" : {
    "CMAKE" : 17
  },
  "ElapsedTime" : 907
}