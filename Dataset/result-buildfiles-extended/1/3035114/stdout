{
  "Repository" : "3035114",
  "Revision" : "HEAD",
  "ObjectId" : "47bac513f23e67b8d81efc28c45daade79cb04c0",
  "CommitTime" : "2019-03-10T02:34:09Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "8f00156f7f8e255d2d9485eae703788ddce9f80c",
      "LastModified" : "2019-03-02T00:22:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Project settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For some reason, when building against win xp, WINVER and _WIN32_WINNT needs to be defined\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MSVC2013 conflicts std::min/std::max by including minwindef.h. To avoid that, we can define NOMINMAX\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If the project is not built in the source directory, we copy needed data. Note that we do not create links because we assume\n\n# that if one do not use the source directory to build, he doesn't want to have the generated files in his source either.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Projects we want to build\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## We check for dependencies\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# hints to the find_package calls\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Packages\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -std=c++11 is bugged on cygwin/mingw\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n# game\n\n###############################################################################\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# game is a shared library\n",
        "Line" : 277,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# we want the target library to be game.xxx and not libgame.xxx\n",
        "Line" : 280,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 287,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 289,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "###############################################################################\n\n# ufo2map\n\n###############################################################################\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# plateform specific sources\n",
        "Line" : 355,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# ufo2map is executable\n",
        "Line" : 380,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 383,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 385,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "###############################################################################\n\n# ufoded\n\n###############################################################################\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# plateform specific sources\n",
        "Line" : 486,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# ufoded is executable\n",
        "Line" : 522,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 525,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 527,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "# since we embed our manifest, we should not generate a default one\n",
        "Line" : 533,
        "CharPositionInLine" : 3
      },
      "26" : {
        "Text" : "###############################################################################\n\n# ufo\n\n###############################################################################\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# plateform specific sources\n",
        "Line" : 949,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# ufo is executable\n",
        "Line" : 985,
        "CharPositionInLine" : 3
      },
      "29" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 988,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 990,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "# since we embed our manifest, we should not generate a default one\n",
        "Line" : 996,
        "CharPositionInLine" : 3
      },
      "32" : {
        "Text" : "###############################################################################\n\n# ufomodel\n\n###############################################################################\n",
        "Line" : 1082,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# plateform specific sources\n",
        "Line" : 1112,
        "CharPositionInLine" : 3
      },
      "34" : {
        "Text" : "# ufomodel is executable\n",
        "Line" : 1137,
        "CharPositionInLine" : 3
      },
      "35" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 1140,
        "CharPositionInLine" : 3
      },
      "36" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 1142,
        "CharPositionInLine" : 3
      },
      "37" : {
        "Text" : "###############################################################################\n\n# ufoslicer\n\n###############################################################################\n",
        "Line" : 1185,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# plateform specific sources\n",
        "Line" : 1211,
        "CharPositionInLine" : 3
      },
      "39" : {
        "Text" : "# ufoslicer is executable\n",
        "Line" : 1236,
        "CharPositionInLine" : 3
      },
      "40" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 1239,
        "CharPositionInLine" : 3
      },
      "41" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 1241,
        "CharPositionInLine" : 3
      },
      "42" : {
        "Text" : "###############################################################################\n\n# uforadiant\n\n###############################################################################\n",
        "Line" : 1284,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# plateform specific sources\n",
        "Line" : 1593,
        "CharPositionInLine" : 3
      },
      "44" : {
        "Text" : "# uforadiant is executable\n",
        "Line" : 1600,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 1603,
        "CharPositionInLine" : 3
      },
      "46" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 1605,
        "CharPositionInLine" : 3
      },
      "47" : {
        "Text" : "###############################################################################\n\n# ufotestall\n\n###############################################################################\n",
        "Line" : 1664,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# plateform specific sources\n",
        "Line" : 2085,
        "CharPositionInLine" : 3
      },
      "49" : {
        "Text" : "# ufotestall is executable\n",
        "Line" : 2115,
        "CharPositionInLine" : 3
      },
      "50" : {
        "Text" : "# For generic no-config case (e.g. with mingw, gcc, ...)\n",
        "Line" : 2118,
        "CharPositionInLine" : 3
      },
      "51" : {
        "Text" : "# For multi-config builds like msvc\n",
        "Line" : 2120,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 52
    },
    "Makefile" : {
      "ObjectId" : "552523393cf9ab8e45448e175f32b43e1a889b23",
      "LastModified" : "2017-10-26T03:15:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\tMakefile remaking should take care of this\n\n#\t$(Q)$(MAKE) $(MAKECMDGOALS)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if the target filename differs:\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if this target is ignored, just do nothing\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "android-project/build.xml" : {
      "ObjectId" : "572de00f2cffb2df0ed12296c4e4b6ecdf2450bc",
      "LastModified" : "2013-08-08T18:11:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "cmake/macros.cmake" : {
      "ObjectId" : "40dfbc08fe446b889f3e1ca3bf1a3e5fedea7b11",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# put a variable into the global namespace\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add external dependency. It will trigger a find_package and use the system wide install if found, otherwise the bundled version\n\n# If you set USE_BUILTIN the system wide is ignored.\n\n#\n\n# parameters:\n\n# LIB:\n\n# CFLAGS:\n\n# LINKERFLAGS:\n\n# SRCS: the list of source files for the bundled lib\n\n# DEFINES: a list of defines (without -D or /D)\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(${PREFIX}_COMPILERFLAGS \"${_ADDLIB_DEFINES} ${_ADDLIB_CFLAGS}\")\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# macro for the FindLibName.cmake files. If USE_BUILTIN is set we don't search for system wide installs at all.\n\n#\n\n# parameters:\n\n# LIB: the library we are trying to find\n\n# HEADER: the header we are trying to find\n\n# SUFFIX: suffix for the include dir\n\n#\n\n# Example: ufo_find(SDL2_image SDL_image.h include/SDL2)\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 90,
        "CharPositionInLine" : 7
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 91,
        "CharPositionInLine" : 14
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 92,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "#\n\n# Specify libraries or flags to use when linking a given target\n\n#\n\n# Example:\n\n# ufo_target_link_libraries(TARGET ufoded LIBS shared common some_external_lib)\n\n# Note: This automatically resolved all dependencies for you. If e.g. common would rely on\n\n# shared, you don't have to specify shared here if you don't directly depend on it.\n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# set up the binary for the application. This will also set up platform specific stuff for you\n\n#\n\n# Example: ufo_add_executable(TARGET SomeTargetName SRCS Source.cpp Main.cpp WINDOWED VERSION 1.0)\n\n#\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "016da0c97890ac097999173fe0c98040bb851dc9",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can then continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 100,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 102,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindCURL.cmake" : {
      "ObjectId" : "0fb8f45d4fe0d6f80fd1258e8928dc0d53eba51b",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find curl\n\n# Find the native CURL headers and libraries.\n\n#\n\n#  CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#  CURL_LIBRARIES      - List of libraries when using curl.\n\n#  CURL_FOUND          - True if curl found.\n\n#  CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CURL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindGTK.cmake" : {
      "ObjectId" : "2261abcdb4caca6d397fa1baa42332598ce94c85",
      "LastModified" : "2018-03-13T23:23:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find GTK, glib and all GTK related modules required for compiling UFOAI\n\n#  GTK_INCLUDE_DIRS   - Directories to include to use GTK\n\n#  GTK_LIBRARIES     - Files to link against to use GTK\n\n#  GTK_FOUND         - GTK was found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# glibconfig.h may be in a different directory than gtk/glib\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gdkconfig.h may be in a different directory than gtk/glib\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# gdkglext-config.h may be in a different directory than gtk/glib\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If gtk, glib and GDK were found we assume the rest is also found\n",
        "Line" : 249,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindJPEG.cmake" : {
      "ObjectId" : "8f61742420f86fb20b911940dc47312cabe89137",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JPEG\n\n# Find the native JPEG includes and library\n\n# This module defines\n\n#  JPEG_INCLUDE_DIR, where to find jpeglib.h, etc.\n\n#  JPEG_LIBRARIES, the libraries needed to use JPEG.\n\n#  JPEG_FOUND, If false, do not try to use JPEG.\n\n# also defined, but not for general use are\n\n#  JPEG_LIBRARY, where to find the JPEG library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JPEG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindLibIntl.cmake" : {
      "ObjectId" : "2bdb20f5369ca1c9b10586e2cc2d0b615e43ad35",
      "LastModified" : "2018-03-13T23:23:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find LIBINTL includes and library\n\n# This module defines\n\n#  LIBINTL_INCLUDE_DIR, where to find LIBINTL headers.\n\n#  LIBINTL_LIBRARIES, the libraries needed to use LIBINTL.\n\n#  LIBINTL_FOUND, If false, do not try to use LIBINTL.\n\n# also defined, but not for general use are\n\n#  LIBINTL_LIBRARY, where to find the LIBINTL library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBINTL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOGG.cmake" : {
      "ObjectId" : "fbb7d5b25eb666c74922d6628b1ef8390deaa38c",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find OGG includes and library\n\n# This module defines\n\n#  OGG_INCLUDE_DIR, where to find OGG headers.\n\n#  OGG_LIBRARIES, the libraries needed to use OGG.\n\n#  OGG_FOUND, If false, do not try to use OGG.\n\n# also defined, but not for general use are\n\n#  OGG_LIBRARY, where to find the OGG library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OGG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOpenAL.cmake" : {
      "ObjectId" : "60eaf1adf86c80d18a903be029a47697f16cbf7b",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find OPENAL includes and library\n\n# This module defines\n\n#  OPENAL_INCLUDE_DIR, where to find OPENAL headers.\n\n#  OPENAL_LIBRARIES, the libraries needed to use OPENAL.\n\n#  OPENAL_FOUND, If false, do not try to use OPENAL.\n\n# also defined, but not for general use are\n\n#  OPENAL_LIBRARY, where to find the OPENAL library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 23,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 24,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENAL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindPNG.cmake" : {
      "ObjectId" : "a2577d26b012ebbd70a6d2707ab58739afcf2bbd",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the native PNG includes and library\n\n#\n\n# This module searches libpng, the library for working with PNG images.\n\n#\n\n# It defines the following variables\n\n#  PNG_INCLUDE_DIRS, where to find png.h, etc.\n\n#  PNG_LIBRARIES, the libraries to link against to use PNG.\n\n#  PNG_DEFINITIONS - You should add_definitons(${PNG_DEFINITIONS}) before compiling code that includes png library files.\n\n#  PNG_FOUND, If false, do not try to use PNG.\n\n#  PNG_VERSION_STRING - the version of the PNG library found (since CMake 2.8.8)\n\n# Also defined, but not for general use are\n\n#  PNG_LIBRARY, where to find the PNG library.\n\n# For backward compatiblity the variable PNG_INCLUDE_DIR is also set. It has the same value as PNG_INCLUDE_DIRS.\n\n#\n\n# Since PNG depends on the ZLib compression library, none of the above will be\n\n# defined unless ZLib can be found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenBSD\n",
        "Line" : 38,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "# For compatiblity with versions prior to this multi-config search, honor\n\n# any PNG_LIBRARY that is already specified and skip the search.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Set by select_library_configurations(), but we want the one from\n\n# find_package_handle_standard_args() below.\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# png.h includes zlib.h. Sigh.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 81,
        "CharPositionInLine" : 48
      },
      "7" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\n",
        "Line" : 86,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PNG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "70423a7e432199d5ab32c84ffb8dd69660894cea",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to find_package().\n\n# It also sets the <packagename>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [FOUND_VAR <resultVar>]\n\n#                                           [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# In this mode, the name of the result-variable can be set either to either\n\n# <UPPERCASED_NAME>_FOUND or <OriginalCase_Name>_FOUND using the FOUND_VAR option.\n\n# Other names for the result-variable are not allowed.\n\n# So for a Find-module named FindFooBar.cmake, the two possible names are\n\n# FooBar_FOUND and FOOBAR_FOUND. It is recommended to use the original case version.\n\n# If the FOUND_VAR option is not used, the default is <UPPERCASED_NAME>_FOUND.\n\n#\n\n# As in the simple mode, if <var1> through <varN> are all valid,\n\n# <packagename>_FOUND will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <packagename>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    find_package_handle_standard_args(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    find_package_handle_standard_args(LibXslt FOUND_VAR LibXslt_FOUND\n\n#                                             REQUIRED_VARS LibXslt_LIBRARIES LibXslt_INCLUDE_DIRS\n\n#                                             VERSION_VAR LibXslt_VERSION_STRING)\n\n# In this case, LibXslt is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. LibXslt_LIBRARIES and LibXslt_INCLUDE_DIRS\n\n# in this case. The result will then be stored in LibXslt_FOUND .\n\n# Also the version of LibXslt will be checked by using the version contained\n\n# in LibXslt_VERSION_STRING.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# Here the result will be stored in AUTOMOC4_FOUND.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 264,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 272,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 283,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake/modules/FindPackageMessage.cmake" : {
      "ObjectId" : "5cea43e352283d0f343045fd5261c82858ba4cf8",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It will print a message once for each unique find result.\n\n# This is useful for telling the user where a package was found.\n\n# The first argument specifies the name (XXX) of the package.\n\n# The second argument specifies the message to display.\n\n# The third argument lists details about the find result so that\n\n# if they change the message will be displayed again.\n\n# The macro also obeys the QUIET argument to the find_package command.\n\n#\n\n# Example:\n\n#\n\n#  if(X11_FOUND)\n\n#    FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#      \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#  else()\n\n#   ...\n\n#  endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindSDL.cmake" : {
      "ObjectId" : "5df9c119723bededff7d904089e747a81088ea75",
      "LastModified" : "2019-02-14T00:53:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate SDL library\n\n# This module defines\n\n#  SDL_LIBRARY, the name of the library to link against\n\n#  SDL_FOUND, if false, do not try to link to SDL\n\n#  SDL_INCLUDE_DIR, where to find SDL.h\n\n#  SDL_VERSION_STRING, human-readable string containing the version of SDL\n\n#\n\n# This module responds to the the flag:\n\n#  SDL_BUILDING_LIBRARY\n\n#    If this is defined, then no SDL_main will be linked in because\n\n#    only applications need main().\n\n#    Otherwise, it is assumed you are building an application and this\n\n#    module will attempt to locate and set the the proper link flags\n\n#    as part of the returned SDL_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDLmain which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL_LIBRARY_TEMP in your configuration\n\n# and no SDL_LIBRARY, it means CMake did not find your SDL library\n\n# (SDL.dll, libsdl.so, SDL.framework, etc).\n\n# Set SDL_LIBRARY_TEMP to point to your SDL library, and configure again.\n\n# Similarly, if you see an empty SDL_LIBRARY_MAIN, you should set this value\n\n# as appropriate. These values are used to generate the final SDL_LIBRARY\n\n# variable, but when these values are unset, SDL_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR\n\n# used in building SDL.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDLmain which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SDL-1.1 is the name used by FreeBSD ports...\n\n# don't confuse it for the version number.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDLmain. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDLmain for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# SDL may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDLmain -lSDL -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For SDLmain\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For OS X, SDL uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For MinGW library\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/modules/FindSDL_mixer.cmake" : {
      "ObjectId" : "80cc87d8d35c2108d69a39ef3174c7a787300b44",
      "LastModified" : "2019-02-14T00:53:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate SDL_mixer library\n\n# This module defines:\n\n#  SDL_MIXER_LIBRARIES, the name of the library to link against\n\n#  SDL_MIXER_INCLUDE_DIRS, where to find the headers\n\n#  SDL_MIXER_FOUND, if false, do not try to link against\n\n#  SDL_MIXER_VERSION_STRING - human-readable string containing the version of SDL_mixer\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#  SDLMIXER_LIBRARY (same value as SDL_MIXER_LIBRARIES)\n\n#  SDLMIXER_INCLUDE_DIR (same value as SDL_MIXER_INCLUDE_DIRS)\n\n#  SDLMIXER_FOUND (same value as SDL_MIXER_FOUND)\n\n#\n\n# $SDLDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR\n\n# used in building SDL.\n\n#\n\n# Created by Eric Wing. This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindSDL_ttf.cmake" : {
      "ObjectId" : "313409937958ffadd968315fe5eed12e2605c0a7",
      "LastModified" : "2019-02-14T00:53:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate SDL_ttf library\n\n# This module defines:\n\n#  SDL_TTF_LIBRARIES, the name of the library to link against\n\n#  SDL_TTF_INCLUDE_DIRS, where to find the headers\n\n#  SDL_TTF_FOUND, if false, do not try to link against\n\n#  SDL_TTF_VERSION_STRING - human-readable string containing the version of SDL_ttf\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#  SDLTTF_LIBRARY (same value as SDL_TTF_LIBRARIES)\n\n#  SDLTTF_INCLUDE_DIR (same value as SDL_TTF_INCLUDE_DIRS)\n\n#  SDLTTF_FOUND (same value as SDL_TTF_FOUND)\n\n#\n\n# $SDLDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR\n\n# used in building SDL.\n\n#\n\n# Created by Eric Wing. This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for backward compatiblity\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindVORBIS.cmake" : {
      "ObjectId" : "12dad0b1ebfa10a21fe3f32ab6aedeedefd85758",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find VORBIS includes and library\n\n# This module defines\n\n#  VORBIS_INCLUDE_DIR, where to find VORBIS headers.\n\n#  VORBIS_LIBRARIES, the libraries needed to use VORBIS.\n\n#  VORBIS_FOUND, If false, do not try to use VORBIS.\n\n#  VORBIS_LIBRARY, where to find the VORBIS library.\n\n#  VORBIS_LIBRARY_FILE, where to find the VORBIS file library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set VORBIS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindZLIB.cmake" : {
      "ObjectId" : "00b9c64dac605da78c2c3eb511320c1548a08952",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find zlib\n\n# Find the native ZLIB includes and library.\n\n# Once done this will define\n\n#\n\n#  ZLIB_INCLUDE_DIRS   - where to find zlib.h, etc.\n\n#  ZLIB_LIBRARIES      - List of libraries when using zlib.\n\n#  ZLIB_FOUND          - True if zlib found.\n\n#\n\n#  ZLIB_VERSION_STRING - The version of zlib found (x.y.z)\n\n#  ZLIB_VERSION_MAJOR  - The major version of zlib\n\n#  ZLIB_VERSION_MINOR  - The minor version of zlib\n\n#  ZLIB_VERSION_PATCH  - The patch version of zlib\n\n#  ZLIB_VERSION_TWEAK  - The tweak version of zlib\n\n#\n\n# The following variable are provided for backward compatibility\n\n#\n\n#  ZLIB_MAJOR_VERSION  - The major version of zlib\n\n#  ZLIB_MINOR_VERSION  - The minor version of zlib\n\n#  ZLIB_PATCH_VERSION  - The patch version of zlib\n\n#\n\n# An includer may set ZLIB_ROOT to a zlib installation root to tell\n\n# this module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search ZLIB_ROOT first if it is set.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normal search.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try each search configuration.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# only append a TWEAK version if it exists:\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "297e1d3bd4d11929a9393308528fa05caf7b9a7e",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY will be set to the\n\n# release value, and basename_LIBRARY_DEBUG will be set to\n\n# basename_LIBRARY_DEBUG-NOTFOUND.  If only basename_LIBRARY_DEBUG is defined,\n\n# then basename_LIBRARY will take the debug value, and basename_LIBRARY_RELEASE\n\n# will be set to basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release value, or\n\n# the debug value if the release one is not set.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "src/docs/tex/Makefile" : {
      "ObjectId" : "d65fe5be4b25331f7668ab8df91a2540f9ce1c69",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/libs/SDL/include/SDL_config.h.cmake" : {
      "ObjectId" : "2c9ce6c6cad609a1a4bc9125a4f3b6af815ce99f",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2014 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* !!! FIXME: in configure script version, missing here: */",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system power support */",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "src/po/Makefile" : {
      "ObjectId" : "96c2942eae0ba292392db328eae8cd739d400879",
      "LastModified" : "2015-09-27T18:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for PO directory in any package using GNU gettext.\n\n# Copyright (C) 1995-1997, 2000-2005 by Ulrich Drepper <drepper@gnu.ai.mit.edu>\n\n#\n\n# This file can be copied and used freely without restrictions.  It can\n\n# be used in projects which are not available under the GNU General Public\n\n# License but which still want to provide support for the GNU gettext\n\n# functionality.\n\n# Please note that the actual code of GNU gettext is covered by the GNU\n\n# General Public License and is *not* in the public domain.\n\n#\n\n# Origin: gettext-0.14.4\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the copyright holder that gets inserted into the header of the\n\n# $(DOMAIN).pot file.  Set this to the copyright holder of the surrounding\n\n# package.  (Note that the msgstr strings, extracted from the package's\n\n# sources, belong to the copyright holder of the package.)  Translators are\n\n# expected to transfer the copyright for their translations to this person\n\n# or entity, or to disclaim their copyright.  The empty string stands for\n\n# the public domain; in this case the translators are expected to disclaim\n\n# their copyright.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These options get passed to xgettext.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This target rebuilds $(DOMAIN).pot; it is an expensive operation.\n\n# Note that $(DOMAIN).pot is not touched if it doesn't need to be changed.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General rule for updating PO files.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tell versions [3.59,3.63) of GNU make not to export all variables.\n\n# Otherwise a system limit (for SysV at least) may be exceeded.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 3,
    "ANT" : 1
  },
  "ElapsedTime" : 50145
}