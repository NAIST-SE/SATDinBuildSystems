{
  "Repository" : "6327261",
  "Revision" : "HEAD",
  "ObjectId" : "6364f1eae21b5562e893581d621104dcc68f3b37",
  "CommitTime" : "2015-10-17T01:01:30Z",
  "Files" : {
    "BasisProject.cmake" : {
      "ObjectId" : "32c7d747a756e4cfcb5bb88829001576d81afa50",
      "LastModified" : "2015-10-16T21:04:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Carnegie Mellon University\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Sets basic information about a BASIS Project and calls basis_project().\n\n#\n\n# This file defines basic information about a project by calling \n\n# the basis_project() function. This basic information, also known as metadata, \n\n# is used by BASIS to setup the project. Moreover, if the project is a module \n\n# of another BASIS project, the dependencies to other modules have to be specified \n\n# here such that the top-level project can analyze the inter-module dependencies.\n\n#\n\n# @sa http://opensource.andreasschuh.com/cmake-basis/standard/modules.html\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Example:\n\n# @code\n\n# basis_project (\n\n#   # ------------------------------------------------------------------------\n\n#   # meta-data\n\n#   NAME              MyProject\n\n#   PACKAGE_VENDOR    shortvname  # Note: Part of default CMAKE_INSTALL_PREFIX\n\n#   VERSION           1.1.5\n\n#   DESCRIPTION       \"This is the description of the project, which is useful for this\"\n\n#                     \" important thing and that important thing.\"\n\n#                     \" MyProject follows the BASIS implementation standard.\"\n\n#   AUTHOR            \"Ima Nauthor\"\n\n#   PROVIDER_NAME     \"Great Product Co\"\n\n#   PROVIDER_WEBSITE  \"http://www.greatproductcompany.com\"\n\n#   PROVIDER_LOGO     \"${PROJECT_SOURCE_DIR}/doc/logo.png\"\n\n#   DIVISION_NAME     \"Awesome App Division\"\n\n#   DIVISION_WEBSITE  \"http://www.awesomeapp.greatproductcompany.com\"\n\n#   DIVISION_LOGO     \"\"${PROJECT_SOURCE_DIR}/doc/division_logo.png\"\"\n\n#   COPYRIGHT         \"Copyright (c) 2014 Great Product Co\"\n\n#   LICENSE           \"See COPYING file.\"\n\n#   CONTACT           \"Contact <info@greatproductcompany.com>\"\n\n#   # ------------------------------------------------------------------------\n\n#   # dependencies\n\n#   DEPENDS          \n\n#      NiftiCLib \n\n#      PythonInterp\n\n#   OPTIONAL_DEPENDS \n\n#     PythonInterp\n\n#     JythonInterp\n\n#     Perl\n\n#     MATLAB{matlab}\n\n#     BASH\n\n#     Doxygen\n\n#     Sphinx{build}\n\n#   TEST_DEPENDS     \n\n#      Perl\n\n#   OPTIONAL_TEST_DEPENDS\n\n#     MATLAB{mex}\n\n#     MATLAB{mcc}\n\n# )\n\n# @endcode\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: The #<*dependency> patterns are required by the basisproject tool\n\n#       and should be kept on a separate line as last commented argument of\n\n#       the corresponding options of the basis_project() command.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# meta-data\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# dependencies\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#<dependency>\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# enables support for Python if package found\n\n# enables support for Jython if package found\n\n# enables support for Perl   if package found\n\n# enabled support for MATLAB if package found\n\n# enables support for Bash   if package found\n\n# required to generate PDF manual using Sphinx\n\n# required to generate API documentation\n\n# requierd to generate web pages and user manual\n\n# optionally used by basistest-driver, TODO: get rid of this dependency\n",
        "Line" : 103,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# enables test of MEX-file generation\n\n# enables test of MATLAB .m file compilation\n",
        "Line" : 116,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "CMakeLists.txt" : {
      "ObjectId" : "7c0482cf54247aa765bc33aab9e2cc4b55371ed7",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# This is the root build configuration of the BASIS package. As can be noted\n\n# does BASIS make use of exactly the standard it advocates and hence also the\n\n# CMake modules which implement this standard. Therefore, these modules are\n\n# considered the cornerstone of BASIS.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# There is a bug in CMake version 2.8.2 which prevents the following command\n\n# to execute correctly:\n\n#\n\n#   cmake \"-DCOMMAND=CFLAGS=-Wall [...]\" -P ExecuteProcess.cmake\n\n#\n\n# because of the occurrence of an equal sign (=) within the value assigned to\n\n# variable COMMAND. This bug was apparently fixed in CMake version 2.8.4.\n\n# A command such as the one above is required to build MEX-files using the\n\n# MEX script and MATLAB Compiler targets.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The following variables would be set by the BASISConfig.cmake file if\n\n# this is a project that uses BASIS.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "157c022de16b128ba3060d0ef16eb16524ae90f6",
      "LastModified" : "2014-01-15T19:32:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CTestConfig.cmake\n\n# @brief Dashboard configuration file.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set CTest/CDash project name\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# start time of Nightly test model\n\n#\n\n# All Nightly tests which are executed within a time window of 24 hours\n\n# starting at the specified start time, will replace previous submissions\n\n# made within the same time frame such that for each time frame of 24 hours\n\n# only one result of test executions is present on the dashboard.\n\n# The execution of the Nightly tests is usually triggered automatically\n\n# via a scheduled cron job that is run once every 24 hours.\n\n#\n\n# Use the Continuous or Experimental test models if you want to execute\n\n# tests manually.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# dashboard submission to SBIA CDash server\n\n#\n\n# Note: By default, CTest does not support HTTPS as submission method.\n\n#       In order to enable it, CTest (and hence CMake) has to be build\n\n#       manually with the option CMAKE_USE_OPENSSL enabled.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# launchers\n\n#\n\n# See documentation of CTest.cmake module.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "config/ConfigSettings.cmake" : {
      "ObjectId" : "e1f2d4a2284da19f5eada917d069b8386ba82098",
      "LastModified" : "2014-01-15T19:32:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  ConfigSettings.cmake\n\n# @brief Sets variables used in CMake package configuration.\n\n#\n\n# It is suggested to use @c _CONFIG as suffix for variable names that are to\n\n# be substituted in the Config.cmake.in template file in order to distinguish\n\n# these variables from the build configuration.\n\n#\n\n# @note The default BasisConfigSettings.cmake file which is part of the BASIS\n\n#       installation is included prior to this file. Hence, the variables are\n\n#       valid even if a custom project-specific configuration is used and\n\n#       default values can further be overwritten in this file.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# common settings\n\n# ============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## @brief List of enabled BASIS utilities.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the following set() statements are simply used to document the variables\n\n# note that this documentation is included in the Doxygen generated documentation\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## @brief Name of BASIS utilities library for C++.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## @brief Name of BASIS utilities library for Python.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## @brief Name of BASIS utilities library for Jython.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## @brief Name of BASIS utilities library for Perl.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## @brief Name of BASIS utilities library for MATLAB.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @brief Name of BASIS utilities library for Bash.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## @brief Name of C++ unit testing library.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## @brief Name of C++ unit testing library with definition of main() function.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ============================================================================\n\n# build tree configuration settings\n\n# ============================================================================\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# CMake module path\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# project template\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# paths to template files of BASIS utilities\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Sphinx\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# ============================================================================\n\n# installation configuration settings\n\n# ============================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## @brief Directory of BASIS CMake modules.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## @brief Dirctory of project template.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# paths to templates files of utilities\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Sphinx\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "config/Package.cmake" : {
      "ObjectId" : "8c5552dfb1b9decabac281765a7526555a504df5",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  Package.cmake\n\n# @brief Package configuration.\n\n#\n\n# This file is included by the BasisPack module prior to the CPack module.\n\n# It can be used to overwrite or extend the default package configuration.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# package information/general settings\n\n# ============================================================================\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# overwrite default package information here.\n\n#\n\n# See http://www.vtk.org/Wiki/CMake:Packaging_With_CPack\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# source package\n\n# ============================================================================\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pattern of files in the source tree that will not be packaged when building\n\n# a source package. This is a list of patterns, e.g., \"/CVS/\", \"/\\\\.svn/\",\n\n# \".swp$\", \".#\", \"/#\", \"*~\", and \"cscope*\", which are ignored by default.\n\n# Moreover, the directory PROJECT_TESTING_DIR/internal/ is excluded.\n\n# Ignore additional patterns by appending to CPACK_SOURCE_IGNORE_FILE.\n\n#\n\n# Example: list (APPEND CPACK_SOURCE_IGNORE_FILE \"<exclude_regex>\")\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "config/Settings.cmake" : {
      "ObjectId" : "492982a23b63c76d442055c1f873cd7110e13468",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  Settings.cmake\n\n# @brief Non-default project settings.\n\n#\n\n# This file is included by basis_project_impl() after it looked for the\n\n# required and optional dependencies and the CMake variables related to the\n\n# project directory structure were defined (see BASISDirectories.cmake file\n\n# in @c PROJECT_BINARY_DIR, where BASIS is here the name of the project).\n\n# It is also included before the BasisSettings.cmake file.\n\n#\n\n# In particular, build options should be added in this file using CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:option\">\n\n# option()</a> command. Further, any common settings related to using a found\n\n# dependency can be set here if the basis_use_package() command was enable\n\n# to import the required configuration of a particular external package.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# directories\n\n# ============================================================================\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# change default installation directory as name of BASIS package has changed\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# installation directory of CMake modules\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# installation directory of utilities template files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# common prefix of Sphinx extensions\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation directory of Sphinx themes\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ============================================================================\n\n# project template\n\n# ============================================================================\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# options\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# force default template to be set\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# disable installation of templates if no destination specified\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# mark cache entires as advanced if unused\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# make default template path absolute\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# split default template path into parts\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# install default project template\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# ============================================================================\n\n# utilities\n\n# ============================================================================\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# system checks\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check if type long long is supported\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# check for presence of sstream header\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# check if tr/tuple header file is available\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# check for availibility of pthreads library\n\n# defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# list of enabled utilities\n\n# in case of other projects defined by BASISConfig.cmake\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# configure all BASIS utilities such that they are included in API\n\n# documentation even if BASIS does not use them itself\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# target UIDs of BASIS libraries; these would be set by the package configuration\n\n# file if this BASIS project would not be BASIS itself\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ============================================================================\n\n# configure public header files\n\n# ============================================================================\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "e1ef85a36ec57b4a102a5c893f66750603f87def",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of auxiliary data files.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/CMakeLists.txt" : {
      "ObjectId" : "419d69cd187bf516bcf229c6127505c750406e19",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of basic project templates.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/basis/1.0/BasisProject.cmake" : {
      "ObjectId" : "a618feadd2af9d9b9c530e6f274daeb3c5a96e5b",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ===============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Sets basic information about a BASIS Project and calls basis_project().\n\n#\n\n# This file defines basic information about a project by calling \n\n# the basis_project() function. This basic information, also known as metadata, \n\n# is used by BASIS to setup the project. Moreover, if the project is a module \n\n# of another BASIS project, the dependencies to other modules have to be specified \n\n# here such that the top-level project can analyze the inter-module dependencies.\n\n#\n\n# @sa http://opensource.andreasschuh.com/cmake-basis/standard/modules.html\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Example:\n\n# @code\n\n# basis_project (\n\n#   # ------------------------------------------------------------------------\n\n#   # meta-data\n\n#   NAME              MyProject\n\n#   PACKAGE_VENDOR    shortvname     # Note: PACKAGE_VENDOR will also be part of the default installation path\n\n#   VERSION           1.1.5\n\n#   DESCRIPTION       \"This is the description of the project, which is useful for this\"\n\n#                     \" important thing and that important thing.\"\n\n#                     \" MyProject follows the BASIS implementation standard.\"\n\n#   AUTHOR            \"Ima Nauthor\"\n\n#   PROVIDER_NAME     \"Great Product Co\"\n\n#   PROVIDER_WEBSITE  \"http://www.greatproductcompany.com\"\n\n#   PROVIDER_LOGO     \"${PROJECT_SOURCE_DIR}/doc/logo.png\"\n\n#   DIVISION_NAME     \"Awesome App Division\"\n\n#   DIVISION_WEBSITE  \"http://www.awesomeapp.greatproductcompany.com\"\n\n#   DIVISION_LOGO     \"\"${PROJECT_SOURCE_DIR}/doc/division_logo.png\"\"\n\n#   COPYRIGHT         \"Copyright (c) 2013 Great Product Co\"\n\n#   LICENSE           \"See COPYING file.\"\n\n#   CONTACT           \"Contact <info@greatproductcompany.com>\"\n\n#   # ------------------------------------------------------------------------\n\n#   # dependencies\n\n#   DEPENDS          \n\n#      NiftiCLib \n\n#      PythonInterp\n\n#   OPTIONAL_DEPENDS \n\n#     PythonInterp\n\n#     JythonInterp\n\n#     Perl\n\n#     MATLAB{matlab}\n\n#     BASH\n\n#     Doxygen\n\n#     Sphinx{build}\n\n#     ITK # TODO required by basistest-driver, get rid of this dependency\n\n#   TEST_DEPENDS     \n\n#      Perl\n\n#   OPTIONAL_TEST_DEPENDS\n\n#     MATLAB{mex}\n\n#     MATLAB{mcc}\n\n# )\n\n# @endcode\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: The #<*> dependency patterns are required by the basisproject tool and\n\n#       should be kept on a separate line as last commented argument of the\n\n#       corresponding options of the basis_project() command. The TEMPLATE\n\n#       option and set argument are also required by this tool and should not\n\n#       be changed manually. The argument is updated by basisproject --update.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# meta-data\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#<project>\n",
        "Line" : 85,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "#<author>\n\n#<description>\n",
        "Line" : 87,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : "# Note: VENDOR will also be part of the default installation path\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#<vendor>\n\n#<provider-name>\n\n#<provider-logo>\n\n#<provider-website>\n\n#<division-name>\n\n#<division-logo>\n\n#<division-website>\n\n#<copyright>\n\n#<license>\n\n#<contact>\n\n#<template>\n",
        "Line" : 90,
        "CharPositionInLine" : 19
      },
      "8" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# dependencies\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#<dependency>\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "data/templates/basis/1.0/CMakeLists.txt" : {
      "ObjectId" : "a52555bcbed09a89c1682201bc4a39887f296746",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# moreover, users tend to specify the installation prefix instead of the\n\n# actual directory containing the package configuration file\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if BASIS is not found, set CMAKE_INSTALL_PREFIX to invalid value if not\n\n# set explicitly at the command-line such that BASIS will still initialize\n\n# it to its defaults even though already cached\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "data/templates/basis/1.0/CTestConfig.cmake" : {
      "ObjectId" : "e9284756de18d8d9f6337f21b82c33bb8dfaaa6a",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CTestConfig.cmake\n\n# @brief Dashboard configuration file.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set CTest/CDash project name\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# start time of Nightly test model\n\n#\n\n# All Nightly tests which are executed within a time window of 24 hours\n\n# starting at the specified start time, will replace previous submissions\n\n# made within the same time frame such that for each time frame of 24 hours\n\n# only one result of test executions is present on the dashboard.\n\n# The execution of the Nightly tests is usually triggered automatically\n\n# via a scheduled cron job that is run once every 24 hours.\n\n#\n\n# Use the Continuous or Experimental test models if you want to execute\n\n# tests manually.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# dashboard submission to <project-name> CDash server\n\n#\n\n# Note: By default, CTest does not support HTTPS as submission method.\n\n#       In order to enable it, CTest (and hence CMake) has to be build\n\n#       manually with the option CMAKE_USE_OPENSSL enabled.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# launchers\n\n#\n\n# See CTest.cmake module.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "data/templates/basis/1.0/config/Components.cmake" : {
      "ObjectId" : "0d6cbba2c367783b2bc6416f178a2afda32ab673",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  Components.cmake\n\n# @brief Configuration of component-based installers.\n\n#\n\n# This file is included by the BasisPack.cmake module if found in the\n\n# @c PROJECT_CONFIG_DIR after the CPack module was included. It is used to\n\n# configure component-based installers.\n\n#\n\n# Use the functions basis_add_component() and basis_add_component_group()\n\n# to add a component or component group, respectively. See documentation of\n\n# these functions for details.\n\n#\n\n# @sa basis_add_component()\n\n# @sa basis_add_component_group()\n\n#\n\n# For CPack generators which generate several packages, the default behavior\n\n# is to generate one package per component group. However, one can modify this\n\n# default behavior by setting CPACK_COMPONENTS_GROUPING to one of the\n\n# following values:\n\n#\n\n#   - ALL_GROUPS_IN_ONE       Generate separate package for each component group.\n\n#   - IGNORE                  Generate separate package for each component.\n\n#   - ALL_COMPONENTS_IN_ONE   Generate single package for all components.\n\n#\n\n# @sa http://www.vtk.org/Wiki/CMake:Component_Install_With_CPack#Controlling_Differents_Ways_of_packaging_components\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/basis/1.0/config/ConfigSettings.cmake" : {
      "ObjectId" : "6c23a074816cba30bbac8c23548d4412486564c3",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  ConfigSettings.cmake\n\n# @brief Sets variables used in CMake package configuration.\n\n#\n\n# It is suggested to use @c _CONFIG as suffix for variable names that are to\n\n# be substituted in the Config.cmake.in template file in order to distinguish\n\n# these variables from the build configuration.\n\n#\n\n# @note The default BasisConfigSettings.cmake file which is part of the BASIS\n\n#       installation is included prior to this file. Hence, the variables are\n\n#       valid even if a custom project-specific configuration is used and\n\n#       default values can further be overwritten in this file.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# build tree configuration settings\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# installation configuration settings\n\n# ============================================================================\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "data/templates/basis/1.0/config/Depends.cmake" : {
      "ObjectId" : "3eb316e84eefe0c2cbb0dc93738f8f476ce641de",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  Depends.cmake\n\n# @brief Find additional dependencies.\n\n#\n\n# This file is included by basis_project_impl() after it included the\n\n# BasisProject.cmake file of the project and collected information about its\n\n# modules. Furthermore, it is included before it looks for the packages\n\n# specified as arguments to the basis_project() command. At this point, the\n\n# CMake project is not initialized yet and most BASIS variables are not set.\n\n#\n\n# Use this file to find additional dependencies or dependencies which are\n\n# only required by a project if certain modules are enabled.\n\n#\n\n# Use case: If this project has a module which is a Slicer Extension\n\n# and the project itself shall be build as Slicer Extension only if the\n\n# module is enabled, the Slicer package configuration file has to be\n\n# included here such that the Slicer settings are imported before any\n\n# module is configured. This is done by using the command\n\n#\n\n# Another use case would be that you want to specify advanced options to\n\n# the basis_find_package() function which you cannot specify as part of\n\n# the dependencies arguments of the basis_project() function.\n\n#\n\n# Example:\n\n# @code\n\n# if (SlicerExtension_ENABLED)\n\n#   # requires Slicer if the SlicerExtension module is enabled\n\n#   basis_find_package (Slicer REQUIRED)\n\n#   basis_use_package (Slicer)\n\n# endif ()\n\n# @endcode\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/basis/1.0/config/Package.cmake" : {
      "ObjectId" : "5e095b70f16dc93f8a02b7d895507a4cacab7f13",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  Package.cmake\n\n# @brief Package configuration.\n\n#\n\n# This file is included by the BasisPack module prior to the CPack module.\n\n# It can be used to overwrite or extend the default package configuration.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# package information/general settings\n\n# ============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# overwrite default package information here.\n\n#\n\n# See http://www.vtk.org/Wiki/CMake:Packaging_With_CPack\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# source package\n\n# ============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pattern of files in the source tree that will not be packaged when building\n\n# a source package. This is a list of patterns, e.g., \"/CVS/\", \"/\\\\.svn/\",\n\n# \".swp$\", \".#\", \"/#\", \"*~\", and \"cscope*\", which are ignored by default.\n\n# Moreover, the directory PROJECT_TESTING_DIR/internal/ is excluded.\n\n# Ignore additional patterns by appending to CPACK_SOURCE_IGNORE_FILE.\n\n#\n\n# Example: list (APPEND CPACK_SOURCE_IGNORE_FILE \"<exclude_regex>\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "data/templates/basis/1.0/config/Settings.cmake" : {
      "ObjectId" : "165e4e98a44ba83b05cf2e9f0c4fddc5355640d4",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  Settings.cmake\n\n# @brief Non-default project settings.\n\n#\n\n# This file is included by basis_project_impl(), after it looked for the\n\n# required and optional dependencies and the CMake variables related to the\n\n# project directory structure were defined (see Directories.cmake file in\n\n# @c BINARY_CONFIG_DIR). It is also included before the BasisSettings.cmake\n\n# file.\n\n#\n\n# In particular build options should be added in this file using CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:option\">\n\n# option()</a> command. Further, any common settings related to using a found\n\n# dependency can be set here if the basis_use_package() command was enable\n\n# to import the required configuration of a particular external package.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/basis/1.0/data/CMakeLists.txt" : {
      "ObjectId" : "e8ae8fc2aff3caa2949ebb7c75c0f29536071d84",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of auxiliary data files.\n\n#\n\n# The data within this folder is required to execute the software tools of\n\n# this project. Example data which is only required for an example run of\n\n# the software are, on the other side, available in the example folder.\n\n#\n\n# By default, all content of this directory is simply installed in the\n\n# @c INSTALL_DATA_DIR directory of the installation tree. To group data files,\n\n# place them in proper subdirectories which will be copied to the\n\n# @c DESTINATION directory of the basis_install() function.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/basis/1.0/doc/CMakeLists.txt" : {
      "ObjectId" : "47d541ac42744afdc2edbb3db549979152a77457",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# generic targets\n\n# ============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create custom targets so \"make site\" and \"make manual\" always work\n\n# note that the \"doc\" target is added automatically which will trigger\n\n# the build of the complete documentation unless the EXCLUDE_FROM_ALL\n\n# option is passed to basis_add_doc\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build HTML pages\n\n# build PDF manual\n",
        "Line" : 34,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# ============================================================================\n\n# API reference (Doxygen-style in-source code comments)\n\n# ============================================================================\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# documentation build target name\n\n# select Doxygen as the generator\n\n# output location of html documentation\n\n# custom top of page with CMake substitutions to fit with Sphinx\n\n# custom bottom of page with CMake substitutions to fit with Sphinx\n\n# custom formatting to fit in with the Sphinx docs\n\n# request output in HTML for websites and XML for reprocessing,\n\n# such as with the breathe Sphinx extension in particular\n",
        "Line" : 42,
        "CharPositionInLine" : 64
      },
      "7" : {
        "Text" : "# ============================================================================\n\n# Software manual\n\n# ============================================================================\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add build target for the generation of the web pages and PDF manual from\n\n# the same set of reStructuredText input source files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# documenation build target name\n\n# select Sphinx as the generator\n\n# selected Sphinx output formats\n\n# http://en.wikipedia.org/wiki/Man_page#Manual_sections\n\n# select the Sphinx layout theme\n\n# logo to use at heading of documentation\n\n# sidebar options to use\n\n# output directory for completed documentation\n\n# sidebar width in pixels\n\n# .rst file to start with when generating HTML\n\n# .rst file to start with when generating LaTeX/PDF\n\n# title within LaTeX/PDF documents\n\n# general output file name, e.g., LaTeX/PDF files\n\n# Doxygen generator build target for integrated API reference\n\n# location of Doxygen output files\n\n# disable currently unused index page\n",
        "Line" : 62,
        "CharPositionInLine" : 58
      },
      "10" : {
        "Text" : "# the Sphinx :download: link directive requires the download file to\n\n# be present in the source tree; thus copy generated PDF to source tree\n\n# if it contains modifications since last time\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# add dependency such that PDF is re-generated before copied to source tree if it differs\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# before building the HTML documentation, ensure that source tree version of manual is up-to-date\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# so \"make site\"   builds softwaremanual_html\n\n# so \"make manual\" builds softwaremanual_pdf\n",
        "Line" : 94,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 14
    },
    "data/templates/basis/1.0/example/CMakeLists.txt" : {
      "ObjectId" : "d80f2cc61b2f9dd6ff1c2094a85afd156028c560",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of example application of software.\n\n#\n\n# By default, all content of the example folder is simply copied to the\n\n# example directory of the installation tree.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/basis/1.0/src/CMakeLists.txt" : {
      "ObjectId" : "11808bcabaa3887581fc191183cbb331a32492bb",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# library target(s)\n\n# ============================================================================\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add library target for each library using basis_add_library().\n\n#\n\n# This command can not only be used to build libraries from C/C++, but also source\n\n# code written in other programming languages such as Java, Python, Perl,\n\n# MATLAB, and Bash. Note that here we consider modules written in a scripting\n\n# language which are no executables but to be included by other scripts written\n\n# in the particular language as libraries.\n\n#\n\n# Note: Public modules written in a scripting language such as Python, Perl,\n\n#       MATLAB, or Bash which are intended for use by other packages should\n\n#       be placed in the lib/[<lang>/]<project>/ directory,\n\n#       where <lang> is the language name in lowercase and is optional.\n\n#       BASIS will automatically add a library build target for these modules.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# executable target(s)\n\n# ============================================================================\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add executable target for each executable program using basis_add_executable().\n\n#\n\n# This command can not only be used to build executables from C/C++, but also\n\n# source code written in other programming languages such as Java, Python, Perl,\n\n# MATLAB, and Bash.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "data/templates/basis/1.0/test/CMakeLists.txt" : {
      "ObjectId" : "a7b40ecf664882f893aed0dd513c5a287572c5d3",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software testing.\n\n#\n\n# Unit tests test only single functions, classes, and modules of the software.\n\n# System tests, on the other side, execute the programs of this package with\n\n# given test input data and compare the output of the programs to the expected\n\n# results. For the definition of system tests which perform image regression\n\n# tests, i.e., compare the images written by the test to given baseline images,\n\n# the basis.testdriver executable target imported from BASIS can be used to\n\n# execute the executable to test and perform the regression tests.\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_test (\n\n#  COMMAND basis.testdriver -v\n\n#    --intensity-tolerance 2\n\n#    --compare \"t1_bc.nii.gz\"\n\n#              \"${PROJECT_TESTING_DIR}/baseline/t1_bc.nii.gz\"\n\n#    --\n\n#    $<TARGET_FILE:biascorrect>\n\n#      \"${PROJECT_TESTING_DIR}/input/t1.nii.gz\"\n\n#      t1_bc.nii.gz\n\n# )\n\n# @endcode\n\n#\n\n# If the tests are implemented in C/C++ as supported by CMake's\n\n# create_test_sourcelist() function, a custom test driver can be generated\n\n# using the basis_add_test_driver() function and this test driver then be used\n\n# to execute the tests and perform the regression tests.\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_test_driver (testdriver test1.cxx test2.cxx test3.cxx)\n\n#\n\n# basis_add_test (\n\n#   COMMAND testdriver -v\n\n#     --intensity-tolerance 2\n\n#     --compare \"t1_bc.nii.gz\"\n\n#               \"${PROJECT_TESTING_DIR}/baseline/t1_bc.nii.gz\"\n\n#     --\n\n#     biascorrect # test1.cxx defines int biascorrect(int argc, char* argv[])\n\n#      \"${PROJECT_TESTING_DIR}/input/t1.nii.gz\"\n\n#      t1_bc.nii.gz\n\n# )\n\n#\n\n# # ...\n\n# @endcode\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:create_test_sourcelist\n\n#\n\n# The built test executables can be found in @c TESTING_RUNTIME_DIR.\n\n# The test output shall be written to @c TESTING_OUTPUT_DIR. In most cases,\n\n# a subdirectory for each test should be created under this output directory.\n\n# Therefore, the basis_add_test() function creates such subdirectory and sets\n\n# the working directory of the test to this output directory.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# internal tests\n\n# ============================================================================\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# public tests\n\n# ============================================================================\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "data/templates/basis/1.0/test/internal/CMakeLists.txt" : {
      "ObjectId" : "47f828d50247b2367cb8cc644bd5a82291cc2b3c",
      "LastModified" : "2014-01-15T20:56:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of internal software tests.\n\n#\n\n# The tests defined by this build configuration file are intended for internal\n\n# use only. They are excluded from the public distribution package which is\n\n# generated by CPack. Reasons for excluding these tests are to reduce the\n\n# size of the distribution package and to avoid reports about failing tests,\n\n# where it is known that the tests will only run successfully within the\n\n# environment of the package provider.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "data/templates/basis/1.1/BasisBootstrapping.cmake" : {
      "ObjectId" : "241e835ca509e24eed77939c2ae8d35415875ae2",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisBootstrapping.cmake\n\n# @brief Auxiliary function to bootstrap the build of CMake BASIS.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Boostrap build of CMake BASIS during configuration of project.\n\n#\n\n# This function downloads, configures, and builds CMake BASIS. If the (cached)\n\n# variable @c BASIS_INSTALL_PREFIX is set, it also installs BASIS into the\n\n# specified directory. This is only required if the project uses the\n\n# BASIS Utilities. Otherwise, the BASIS build tree can be used directly to\n\n# build the software project which bootstrapped BASIS. It is not required\n\n# during runtime of the software.\n\n#\n\n# @param[in] ARGN The list of arguments is parsed as follows:\n\n# @par\n\n# <table border=0>\n\n#  <tr>\n\n#    @tp @b VERSION major.minor.patch @endtp\n\n#    <td>Version of CMake BASIS to download.</td>\n\n#  </tr>\n\n#  <tr>\n\n#    @tp @b DOWNLOAD_URL url @endtp\n\n#    <td>URL from which to download the CMake BASIS source distribution package.\n\n#        The given URL can be either a complete download URL which includes the\n\n#        package name (which must end with .tar.gz or .zip) or the path of\n\n#        a remote directory which contains the CMake BASIS packages named\n\n#        cmake-basis-version.zip (for Windows) and cmake-basis-version.tar.gz (for Unix).\n\n#        (default: http://opensource.andreasschuh.com/cmake-basis/_downloads)</td>\n\n#  </tr>\n\n#  <tr>\n\n#    @tp @b INFORM_USER @endtp\n\n#    <td>This option causes this function to abort the initial configure step\n\n#        of CMake. It informs the user that this project required BASIS for\n\n#        the build configuration and that it upon the next configure run it\n\n#        will attempt to download and build BASIS automatically. It further\n\n#        notes that the user can set the @c BASIS_DIR variable prior to the\n\n#        next configure run in order to use an existing BASIS installation.\n\n#        (default: off)</td>\n\n#  </tr>\n\n#  <tr>\n\n#     @tp @b BASIS_VARIABLE_NAME value @endtp\n\n#     <td>Adds a build configuration to the CMake command used to configure\n\n#         the build of CMake BASIS using the -D option of @c cmake. The\n\n#         @c BASIS_VARIABLE_NAME can be any CMake option or variable that\n\n#         is normally used to configure a BASIS build using CMake. For example,\n\n#         USE_PythonInterp, USE_BASH, USE_DOXYGEN.</td>\n\n#  </tr>\n\n# </table>\n\n#\n\n# @returns Sets the @c BASIS_DIR variable to the bootstrapped BASIS build.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# parse arguments -- unparsed arguments are passed on to CMake using -D\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# abort the first time to give users a chance to specify where their\n\n# CMake BASIS installation is located by setting BASIS_DIR in the GUI\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# bootstrap BASIS build/installation only if not done before\n\n# or when BASIS_INSTALL_PREFIX has changed\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# download and extract source code if not done before\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# download source code distribution package\n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# extract source package\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# configure\n\n# TODO: Does this work on Windows as well ? Do we need \"-G${CMAKE_GENERATOR}\" ?\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# do not register this BASIS build/installation\n\n# as it should only be used by this project\n",
        "Line" : 142,
        "CharPositionInLine" : 54
      },
      "11" : {
        "Text" : "# build\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# install\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# remember in which directory BASIS was installed to avoid re-running\n\n# the bootstrapping every time the project needs to be re-configured\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "data/templates/basis/1.1/CMakeLists.txt" : {
      "ObjectId" : "30e34be962189bc41d5d696f9f4dc344f1a6ed69",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# @note This package utilizes <a href=\"http://opensource.andreasschuh.com/cmake-basis\">CMake BASIS</a>.\n\n#\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# users tend to specify the directory where BASIS was installed\n\n# rather than the directory containing a BASISConfig.cmake,\n\n# so add a workaround to allow that to work as well\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# look for an existing CMake BASIS installation and use it if found\n\n# otherwise, attempt to download and install it locally\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# download and install BASIS in build tree of project\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# CMake BASIS version to download\n\n# Enable/disable Matlab support\n\n# Enable/disable Python support\n\n# Enable/disable Jython support\n\n# Enable/disalbe Perl   support\n\n# Enable/disable Bash   support\n\n# Enable/disable documentation generation using Doxygen\n\n# Enable/disable documentation generation using Sphinx\n\n# Enable/disable image processing regression testing\n\n# Inform user during first configure step\n\n# that BASIS needs to be bootstrapped or installed manually\n",
        "Line" : 51,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : "# look for local installation\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# raise error if project uses the BASIS Utilities,\n\n# but BASIS was not installed as part of the bootstrapping\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "data/templates/basis/1.2/BasisBootstrapping.cmake" : {
      "ObjectId" : "112d83bd66dfe54bf133f03fb27e8da9209d783a",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2014 <provider-name>\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisBootstrapping.cmake\n\n# @brief Auxiliary function to bootstrap the build of CMake BASIS.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Boostrap build of CMake BASIS during configuration of project.\n\n#\n\n# This function downloads, configures, and builds CMake BASIS. If the (cached)\n\n# variable @c BASIS_INSTALL_PREFIX is set, it also installs BASIS into the\n\n# specified directory. This is only required if the project uses the\n\n# BASIS Utilities. Otherwise, the BASIS build tree can be used directly to\n\n# build the software project which bootstrapped BASIS. It is not required\n\n# during runtime of the software.\n\n#\n\n# @param[in] ARGN The list of arguments is parsed as follows:\n\n# @par\n\n# <table border=0>\n\n#  <tr>\n\n#    @tp @b VERSION major.minor.patch|commit @endtp\n\n#    <td>Release, commit, or branch of CMake BASIS to download.</td>\n\n#  </tr>\n\n#  <tr>\n\n#    @tp @b DOWNLOAD_URL url @endtp\n\n#    <td>URL from which to download the CMake BASIS source distribution package.\n\n#        The given URL can be either a complete download URL which includes the\n\n#        package name (which must end with .tar.gz or .zip), the path of\n\n#        a remote directory which contains the CMake BASIS packages named\n\n#        cmake-basis-version.zip (for Windows) and cmake-basis-version.tar.gz\n\n#        (for Unix), or the URL of a Git repository.\n\n#        (default: http://opensource.andreasschuh.com/cmake-basis/_downloads\n\n#                  or git@github.com:schuhschuh/cmake-basis.git)</td>\n\n#  </tr>\n\n#  <tr>\n\n#    @tp @b INFORM_USER @endtp\n\n#    <td>This option causes this function to abort the initial configure step\n\n#        of CMake. It informs the user that this project required BASIS for\n\n#        the build configuration and that it upon the next configure run it\n\n#        will attempt to download and build BASIS automatically. It further\n\n#        notes that the user can set the @c BASIS_DIR variable prior to the\n\n#        next configure run in order to use an existing BASIS installation.\n\n#        (default: off)</td>\n\n#  </tr>\n\n#  <tr>\n\n#     @tp @b BASIS_VARIABLE_NAME value @endtp\n\n#     <td>Adds a build configuration to the CMake command used to configure\n\n#         the build of CMake BASIS using the -D option of @c cmake. The\n\n#         @c BASIS_VARIABLE_NAME can be any CMake option or variable that\n\n#         is normally used to configure a BASIS build using CMake. For example,\n\n#         USE_PythonInterp, USE_BASH, USE_DOXYGEN.</td>\n\n#  </tr>\n\n# </table>\n\n#\n\n# @returns Sets the @c BASIS_DIR variable to the bootstrapped BASIS build.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# parse arguments -- unparsed arguments are passed on to CMake using -D\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# abort the first time to give users a chance to specify where their\n\n# CMake BASIS installation is located by setting BASIS_DIR in the GUI\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# bootstrap BASIS build/installation only if not done before\n\n# or when BASIS_INSTALL_PREFIX has changed\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# download and extract source code if not done before\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# clone Git repository and checkout specified commit/branch\n",
        "Line" : 119,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# download source code distribution package\n",
        "Line" : 157,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# extract source package\n",
        "Line" : 173,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# configure\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# do not register this BASIS build/installation\n\n# as it should only be used by this project\n",
        "Line" : 188,
        "CharPositionInLine" : 54
      },
      "12" : {
        "Text" : "# build\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# install\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# remember in which directory BASIS was installed to avoid re-running\n\n# the bootstrapping every time the project needs to be re-configured\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "data/templates/basis/1.3/BasisBootstrapping.cmake" : {
      "ObjectId" : "a74806aef1cf24b63c24a6e129b57037c068faab",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2014 <provider-name>\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisBootstrapping.cmake\n\n# @brief Auxiliary function to bootstrap the build of CMake BASIS.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Boostrap build of CMake BASIS during configuration of project.\n\n#\n\n# This function downloads, configures, and builds CMake BASIS. If the (cached)\n\n# variable @c BASIS_INSTALL_PREFIX is set, it also installs BASIS into the\n\n# specified directory. This is only required if the project uses the\n\n# BASIS Utilities. Otherwise, the BASIS build tree can be used directly to\n\n# build the software project which bootstrapped BASIS. It is not required\n\n# during runtime of the software.\n\n#\n\n# @param[in] ARGN The list of arguments is parsed as follows:\n\n# @par\n\n# <table border=0>\n\n#  <tr>\n\n#    @tp @b VERSION major.minor.patch|commit @endtp\n\n#    <td>Release, commit, or branch of CMake BASIS to download.</td>\n\n#  </tr>\n\n#  <tr>\n\n#    @tp @b DOWNLOAD_URL url @endtp\n\n#    <td>URL from which to download the CMake BASIS source distribution package.\n\n#        The given URL can be either a complete download URL which includes the\n\n#        package name (which must end with .tar.gz or .zip), the path of\n\n#        a remote directory which contains the CMake BASIS packages named\n\n#        cmake-basis-version.zip (for Windows) and cmake-basis-version.tar.gz\n\n#        (for Unix), or the URL of a Git repository.\n\n#        (default: http://opensource.andreasschuh.com/cmake-basis/_downloads\n\n#                  or git@github.com:schuhschuh/cmake-basis.git)</td>\n\n#  </tr>\n\n#  <tr>\n\n#    @tp @b INFORM_USER @endtp\n\n#    <td>This option causes this function to abort the initial configure step\n\n#        of CMake. It informs the user that this project required BASIS for\n\n#        the build configuration and that it upon the next configure run it\n\n#        will attempt to download and build BASIS automatically. It further\n\n#        notes that the user can set the @c BASIS_DIR variable prior to the\n\n#        next configure run in order to use an existing BASIS installation.\n\n#        (default: off)</td>\n\n#  </tr>\n\n#  <tr>\n\n#     @tp @b BASIS_VARIABLE_NAME value @endtp\n\n#     <td>Adds a build configuration to the CMake command used to configure\n\n#         the build of CMake BASIS using the -D option of @c cmake. The\n\n#         @c BASIS_VARIABLE_NAME can be any CMake option or variable that\n\n#         is normally used to configure a BASIS build using CMake. For example,\n\n#         USE_PythonInterp, USE_BASH, USE_DOXYGEN.</td>\n\n#  </tr>\n\n# </table>\n\n#\n\n# @returns Sets the @c BASIS_DIR variable to the bootstrapped BASIS build.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# parse arguments -- unparsed arguments are passed on to CMake using -D\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# abort the first time to give users a chance to specify where their\n\n# CMake BASIS installation is located by setting BASIS_DIR in the GUI\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# bootstrap BASIS build/installation only if not done before\n\n# or when BASIS_INSTALL_PREFIX has changed\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# download and extract source code if not done before\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# clone Git repository and checkout specified commit/branch\n",
        "Line" : 119,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# download source code distribution package\n",
        "Line" : 157,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# extract source package\n",
        "Line" : 173,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# configure\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# do not register this BASIS build/installation\n\n# as it should only be used by this project\n",
        "Line" : 188,
        "CharPositionInLine" : 54
      },
      "12" : {
        "Text" : "# build\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# install\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# remember in which directory BASIS was installed to avoid re-running\n\n# the bootstrapping every time the project needs to be re-configured\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# update BASIS_DIR cache entry and mark it as advanced variable\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "data/templates/basis/1.3/BasisProject.cmake" : {
      "ObjectId" : "3af31ae7af532299df43e4020db3049f9aeff45c",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ===============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Sets basic information about a BASIS Project and calls basis_project().\n\n#\n\n# This file defines basic information about a project by calling \n\n# the basis_project() function. This basic information, also known as metadata, \n\n# is used by BASIS to setup the project. Moreover, if the project is a module \n\n# of another BASIS project, the dependencies to other modules have to be specified \n\n# here such that the top-level project can analyze the inter-module dependencies.\n\n#\n\n# @sa http://opensource.andreasschuh.com/cmake-basis/standard/modules.html\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Example:\n\n# @code\n\n# basis_project (\n\n#   # ------------------------------------------------------------------------\n\n#   # meta-data\n\n#   NAME              MyProject\n\n#   PACKAGE_VENDOR    shortvname     # Note: PACKAGE_VENDOR will also be part of the default installation path\n\n#   VERSION           1.1.5\n\n#   DESCRIPTION       \"This is the description of the project, which is useful for this\"\n\n#                     \" important thing and that important thing.\"\n\n#                     \" MyProject follows the BASIS implementation standard.\"\n\n#   AUTHOR            \"Ima Nauthor\"\n\n#   PROVIDER_NAME     \"Great Product Co\"\n\n#   PROVIDER_WEBSITE  \"http://www.greatproductcompany.com\"\n\n#   PROVIDER_LOGO     \"${PROJECT_SOURCE_DIR}/doc/logo.png\"\n\n#   DIVISION_NAME     \"Awesome App Division\"\n\n#   DIVISION_WEBSITE  \"http://www.awesomeapp.greatproductcompany.com\"\n\n#   DIVISION_LOGO     \"\"${PROJECT_SOURCE_DIR}/doc/division_logo.png\"\"\n\n#   COPYRIGHT         \"Copyright (c) 2013 Great Product Co\"\n\n#   LICENSE           \"See COPYING file.\"\n\n#   CONTACT           \"Contact <info@greatproductcompany.com>\"\n\n#   # ------------------------------------------------------------------------\n\n#   # dependencies\n\n#   DEPENDS          \n\n#      NiftiCLib \n\n#      PythonInterp\n\n#   OPTIONAL_DEPENDS \n\n#     PythonInterp\n\n#     JythonInterp\n\n#     Perl\n\n#     MATLAB{matlab}\n\n#     BASH\n\n#     Doxygen\n\n#     Sphinx{build}\n\n#     ITK # TODO required by basistest-driver, get rid of this dependency\n\n#   TEST_DEPENDS     \n\n#      Perl\n\n#   OPTIONAL_TEST_DEPENDS\n\n#     MATLAB{mex}\n\n#     MATLAB{mcc}\n\n# )\n\n# @endcode\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: The #<*> dependency patterns are required by the basisproject tool and\n\n#       should be kept on a separate line as last commented argument of the\n\n#       corresponding options of the basis_project() command. The TEMPLATE\n\n#       option and set argument are also required by this tool and should not\n\n#       be changed manually. The argument is updated by basisproject --update.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# meta-data\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#<project>\n",
        "Line" : 85,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "#<author>\n\n#<description>\n",
        "Line" : 87,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : "# Note: VENDOR will also be part of the default installation path\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#<vendor>\n\n#<provider-name>\n\n#<provider-logo>\n\n#<provider-website>\n\n#<division-name>\n\n#<division-logo>\n\n#<division-website>\n\n#<copyright>\n\n#<license>\n\n#<contact>\n\n#<template>\n",
        "Line" : 90,
        "CharPositionInLine" : 19
      },
      "8" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# dependencies\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#<dependency>\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# required to generate PDF manual using Sphinx\n\n# required to generate API documentation\n\n# requierd to generate web pages and user manual\n",
        "Line" : 107,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "data/templates/basis/1.3/CMakeLists.txt" : {
      "ObjectId" : "90dd8fb7f3b8acad60f4f3eb37a70d338d8d7bb1",
      "LastModified" : "2015-10-17T01:00:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# @note This package utilizes <a href=\"http://opensource.andreasschuh.com/cmake-basis\">CMake BASIS</a>.\n\n#\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# users tend to specify the directory where BASIS was installed\n\n# rather than the directory containing a BASISConfig.cmake,\n\n# so add a workaround to allow that to work as well\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# look for an existing CMake BASIS installation and use it if found\n\n# otherwise, attempt to download and install it locally\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# download and install BASIS in build tree of project\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# CMake BASIS version to download\n\n# Enable/disable Matlab support\n\n# Enable/disable Python support\n\n# Enable/disable Jython support\n\n# Enable/disalbe Perl   support\n\n# Enable/disable Bash   support\n\n# Enable/disable documentation generation using Doxygen\n\n# Enable/disable documentation generation using Sphinx\n\n# Enable/disable image processing regression testing\n\n# Inform user during first configure step\n\n# that BASIS needs to be bootstrapped or installed manually\n",
        "Line" : 51,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : "# look for local installation\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# raise error if project uses the BASIS Utilities,\n\n# but BASIS was not installed as part of the bootstrapping\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "data/templates/basis/1.3/doc/CMakeLists.txt" : {
      "ObjectId" : "06ad894206399be9c097427aec5a9740c0a98ed9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) <copyright>\n\n# All rights reserved.\n\n#\n\n# <license>\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# generic targets\n\n# ============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create custom targets so \"make site\" and \"make manual\" always work\n\n# note that the \"doc\" target is added automatically which will trigger\n\n# the build of the complete documentation unless the EXCLUDE_FROM_ALL\n\n# option is passed to basis_add_doc\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build HTML pages\n\n# build PDF manual\n",
        "Line" : 34,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# ============================================================================\n\n# API reference (Doxygen-style in-source code comments)\n\n# ============================================================================\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# documentation build target name\n\n# select Doxygen as the generator\n\n# output location of html documentation\n\n# custom top of page with CMake substitutions to fit with Sphinx\n\n# custom bottom of page with CMake substitutions to fit with Sphinx\n\n# custom formatting to fit in with the Sphinx docs\n\n# request output in HTML for websites and XML for reprocessing,\n\n# such as with the breathe Sphinx extension in particular\n",
        "Line" : 42,
        "CharPositionInLine" : 64
      },
      "7" : {
        "Text" : "# ============================================================================\n\n# Software manual\n\n# ============================================================================\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LATEX_PDFLATEX_FOUND not defined by older FindLATEX.cmake modules\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# obey USE_LATEX setting of user\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# option to auto-update PDF manual in source tree\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# software manual output formats\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add build target for the generation of the web pages and PDF manual from\n\n# the same set of reStructuredText input source files\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# documenation build target name\n\n# select Sphinx as the generator\n\n# selected Sphinx output formats\n\n# http://en.wikipedia.org/wiki/Man_page#Manual_sections\n\n# select the Sphinx layout theme\n\n# logo to use at heading of documentation\n\n# sidebar options to use\n\n# output directory for completed documentation\n\n# sidebar width in pixels\n\n# .rst file to start with when generating HTML\n\n# .rst file to start with when generating LaTeX/PDF\n\n# title within LaTeX/PDF documents\n\n# general output file name, e.g., LaTeX/PDF files\n\n# Doxygen generator build target for integrated API reference\n\n# location of Doxygen output files\n\n# disable currently unused index page\n\n# .rst files explicitly included only\n",
        "Line" : 96,
        "CharPositionInLine" : 58
      },
      "14" : {
        "Text" : "# the Sphinx :download: link directive requires the download file to\n\n# be present in the source tree; thus copy generated PDF to source tree\n\n# if it contains modifications since last time\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# add dependency such that PDF is re-generated before copied to source tree if it differs\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# before building the HTML documentation, ensure that source tree version of manual is up-to-date\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 17
    },
    "data/templates/sbia/1.0/BasisProject.cmake" : {
      "ObjectId" : "eca1d1f653de856d49566e47c4df450a377058df",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Meta-data of this BASIS project.\n\n#\n\n# This file defines project meta-data by calling the basis_project() function.\n\n# This meta-data is used by BASIS to setup the project. Moreover, if the\n\n# project is a module of another BASIS project, the dependencies to other\n\n# modules have to be specified here such that the top-level project can analyze\n\n# the inter-module dependencies\n\n# (see page Project Modularization of BASIS documentation).\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#<dependency>\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.0/CMakeLists.txt" : {
      "ObjectId" : "9a1915f7424690e9d8bf0623b52a94d5f2445440",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# version of BASIS template used by this project\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "data/templates/sbia/1.0/CTestConfig.cmake" : {
      "ObjectId" : "205b59193053744a8ff31b5a933f363f2b9f5d82",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CTestConfig.cmake\n\n# @brief Dashboard configuration file.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set CTest/CDash project name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# start time of Nightly test model\n\n#\n\n# All Nightly tests which are executed within a time window of 24 hours\n\n# starting at the specified start time, will replace previous submissions\n\n# made within the same time frame such that for each time frame of 24 hours\n\n# only one result of test executions is present on the dashboard.\n\n# The execution of the Nightly tests is usually triggered automatically\n\n# via a scheduled cron job that is run once every 24 hours.\n\n#\n\n# Use the Continuous or Experimental test models if you want to execute\n\n# tests manually.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# dashboard submission to SBIA CDash server\n\n#\n\n# Note: By default, CTest does not support HTTPS as submission method.\n\n#       In order to enable it, CTest (and hence CMake) has to be build\n\n#       manually with the option CMAKE_USE_OPENSSL enabled.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# launchers\n\n#\n\n# See CTest.cmake module.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.0/config/Components.cmake" : {
      "ObjectId" : "9f0d63212bc6e99c32cf5ba68667c0f1bc329a3a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Components.cmake\n\n# @brief Configuration of component-based installers.\n\n#\n\n# This file is included by the BasisPack.cmake module if found in the\n\n# @c PROJECT_CONFIG_DIR after the CPack module was included. It is used to\n\n# configure component-based installers.\n\n#\n\n# Use the functions basis_add_component() and basis_add_component_group()\n\n# to add a component or component group, respectively. See documentation of\n\n# these functions for details.\n\n#\n\n# @sa basis_add_component()\n\n# @sa basis_add_component_group()\n\n#\n\n# For CPack generators which generate several packages, the default behavior\n\n# is to generate one package per component group. However, one can modify this\n\n# default behavior by setting CPACK_COMPONENTS_GROUPING to one of the\n\n# following values:\n\n#\n\n#   - ALL_GROUPS_IN_ONE       Generate separate package for each component group.\n\n#   - IGNORE                  Generate separate package for each component.\n\n#   - ALL_COMPONENTS_IN_ONE   Generate single package for all components.\n\n#\n\n# @sa http://www.vtk.org/Wiki/CMake:Component_Install_With_CPack#Controlling_Differents_Ways_of_packaging_components\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.0/config/ConfigSettings.cmake" : {
      "ObjectId" : "7e24e0ec5962e1c2d00803867633424071167c8b",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  ConfigSettings.cmake\n\n# @brief Sets variables used in CMake package configuration.\n\n#\n\n# It is suggested to use @c _CONFIG as suffix for variable names that are to\n\n# be substituted in the Config.cmake.in template file in order to distinguish\n\n# these variables from the build configuration.\n\n#\n\n# @note The default BasisConfigSettings.cmake file which is part of the BASIS\n\n#       installation is included prior to this file. Hence, the variables are\n\n#       valid even if a custom project-specific configuration is used and\n\n#       default values can further be overwritten in this file.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# build tree configuration settings\n\n# ============================================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# installation configuration settings\n\n# ============================================================================\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "data/templates/sbia/1.0/config/Depends.cmake" : {
      "ObjectId" : "553ccd8c4152f83d752e607eb53c7cff04fefb5a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Depends.cmake\n\n# @brief Find additional dependencies.\n\n#\n\n# This file is included by basis_project_impl() after it included the\n\n# BasisProject.cmake file of the project and collected information about its\n\n# modules. Furthermore, it is included before it looks for the packages\n\n# specified as arguments to the basis_project() command. At this point, the\n\n# CMake project is not initialized yet and most BASIS variables are not set.\n\n#\n\n# Use this file to find additional dependencies or dependencies which are\n\n# only required by a project if certain modules are enabled.\n\n#\n\n# Use case: If this project has a module which is a Slicer Extension\n\n# and the project itself shall be build as Slicer Extension only if the\n\n# module is enabled, the Slicer package configuration file has to be\n\n# included here such that the Slicer settings are imported before any\n\n# module is configured. This is done by using the command\n\n#\n\n# Another use case would be that you want to specify advanced options to\n\n# the basis_find_package() function which you cannot specify as part of\n\n# the dependencies arguments of the basis_project() function.\n\n#\n\n# Example:\n\n# @code\n\n# if (SlicerExtension_ENABLED)\n\n#   # requires Slicer if the SlicerExtension module is enabled\n\n#   basis_find_package (Slicer REQUIRED)\n\n#   basis_use_package (Slicer)\n\n# endif ()\n\n# @endcode\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.0/config/Package.cmake" : {
      "ObjectId" : "9f26e540fda68a9047b39e132031f26144326c6d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Package.cmake\n\n# @brief Package configuration.\n\n#\n\n# This file is included by the BasisPack module prior to the CPack module.\n\n# It can be used to overwrite or extend the default package configuration.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# package information/general settings\n\n# ============================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# overwrite default package information here.\n\n#\n\n# See http://www.vtk.org/Wiki/CMake:Packaging_With_CPack\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# source package\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Pattern of files in the source tree that will not be packaged when building\n\n# a source package. This is a list of patterns, e.g., \"/CVS/\", \"/\\\\.svn/\",\n\n# \".swp$\", \".#\", \"/#\", \"*~\", and \"cscope*\", which are ignored by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# default ignore patterns\n",
        "Line" : 34,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# add further ignore patterns here\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "data/templates/sbia/1.0/config/Settings.cmake" : {
      "ObjectId" : "d7b56a4a72c9b085eede1d966ec80fef31193606",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Settings.cmake\n\n# @brief Non-default project settings.\n\n#\n\n# This file is included by basis_project_impl() after it looked for the\n\n# required and optional dependencies and the CMake variables related to the\n\n# project directory structure were defined (see\n\n# &lt;Project&gt;Directories.cmake file in @c PROJECT_BINARY_DIR, where\n\n# &lt;Project&gt; is the name of this project).\n\n# It is also included before the BasisSettings.cmake file.\n\n#\n\n# In particular, build options should be added in this file using CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:option\">\n\n# option()</a> command. Further, any common settings related to using a found\n\n# dependency can be set here if the basis_use_package() command was enable\n\n# to import the required configuration of a particular external package.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.0/data/CMakeLists.txt" : {
      "ObjectId" : "542cee8ed48c73e5aac0819cc74f41b0c19a16c7",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of auxiliary data files.\n\n#\n\n# The data within this folder is required to execute the software tools of\n\n# this project. Example data which is only required for an example run of\n\n# the software are, on the other side, available in the example folder.\n\n#\n\n# By default, all content of this directory is simply installed in the\n\n# @c INSTALL_DATA_DIR directory of the installation tree. To group data files,\n\n# place them in proper subdirectories which will be copied to the\n\n# @c DESTINATION directory of the basis_install() function.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.0/doc/CMakeLists.txt" : {
      "ObjectId" : "beb63a7f86c2de6033e9045037f26abb0a9001d4",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (user manual) and developer documentation (developer manual). For\n\n# developers, the documentation of the API is of particular interest,\n\n# where developers who are responsible for maintaining the software\n\n# may be provided with even more detailed documentation of the implementation.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# API documentation\n\n# ============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following CMake code adds an API documentation to the 'doc' target which\n\n# is automatically generated by Doxygen from the in-source code comments.\n\n# Please refer to the documentation of basis_add_doc() for details.\n\n#\n\n# See basis_add_doc()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# manuals\n\n# ============================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add documentation files in the current directory and/or install these files\n\n# using the macro basis_add_doc().\n\n#\n\n# See basis_add_doc()\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.0/example/CMakeLists.txt" : {
      "ObjectId" : "efeffd8bf2a9da9153783b216779f52b755d8613",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of example application of software.\n\n#\n\n# By default, all content of the example folder is simply copied to the\n\n# example directory of the installation tree.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.0/src/CMakeLists.txt" : {
      "ObjectId" : "1424324e4753f594faee2c876e5e9f3c7c3963e0",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# library target(s)\n\n# ============================================================================\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add library target for each library using basis_add_library().\n\n#\n\n# This command can not only be used to build libraries from C/C++, but also source\n\n# code written in other programming languages such as Java, Python, Perl, BASH,\n\n# and MATLAB. Note that here we consider modules written in a scripting language\n\n# which are no executables but to be included by other scripts written in the\n\n# particular language as libraries.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# executable target(s)\n\n# ============================================================================\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add executable target for each executable program using basis_add_executable().\n\n#\n\n# This command can not only be used to build executables from C/C++, but also\n\n# source code written in other programming languages such as Java, Python, Perl,\n\n# BASH, and MATLAB.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.0/test/CMakeLists.txt" : {
      "ObjectId" : "c4a4f87f7ebffbf07ee7dcbd165cdbeadacdc563",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software testing.\n\n#\n\n# Unit tests test only single functions, classes, and modules of the software.\n\n# System tests, on the other side, execute the programs of this package with\n\n# given test input data and compare the output of the programs to the expected\n\n# results.\n\n#\n\n# The built test executables can be found in @c TESTING_RUNTIME_DIR.\n\n# The test output shall be written to @c TESTING_OUTPUT_DIR. In most cases,\n\n# a subdirectory for each test should be created under this output directory.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.1/doc/CMakeLists.txt" : {
      "ObjectId" : "d44dda9c0317fedbece49c9e5efb5b41c88ab825",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (user manual) and developer documentation (developer manual). For\n\n# developers, the documentation of the API is of particular interest,\n\n# where developers who are responsible for maintaining the software\n\n# may be provided with even more detailed documentation of the implementation.\n\n#\n\n# Copyright (c) <year>, University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# API documentation\n\n# ============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following CMake code adds an API documentation to the 'doc' target which\n\n# is automatically generated by Doxygen from the in-source code comments.\n\n# Please refer to the documentation of basis_add_doc() for details.\n\n#\n\n# See basis_add_doc()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# manuals\n\n# ============================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add documentation files in the current directory and/or install these files\n\n# using the macro basis_add_doc().\n\n#\n\n# See basis_add_doc()\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.3/BasisProject.cmake" : {
      "ObjectId" : "8b55f35d2c930ea29f094174cb479e0836f702d8",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Meta-data of this BASIS project.\n\n#\n\n# This file defines project meta-data by calling the basis_project() function.\n\n# This meta-data is used by BASIS to setup the project. Moreover, if the\n\n# project is a module of another BASIS project, the dependencies to other\n\n# modules have to be specified here such that the top-level project can analyze\n\n# the inter-module dependencies (see @ref ProjectModules).\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Example:\n\n# @code\n\n# basis_project (\n\n#   NAME\n\n#     \"MyProject\"\n\n#   VERSION\n\n#     1.1.5\n\n#   DESCRIPTION\n\n#     \"This is the description of the project named\"\n\n#     \" MyProject which follows BASIS.\"\n\n#   DEPENDS\n\n#     NiftiCLib\n\n#     Python\n\n#   OPTIONAL_DEPENDS\n\n#     MPI\n\n#   TEST_DEPENDS\n\n#     Perl\n\n# )\n\n# @endcode\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: The #<*dependency> patterns are required by the basisproject tool\n\n#       and should be kept on a separate line as last commented argument of\n\n#       the corresponding options of the basis_project() command.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#<dependency>\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "data/templates/sbia/1.3/CMakeLists.txt" : {
      "ObjectId" : "74e8535892e1399d9b12ff62754d44ea0b172ebe",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# version of BASIS template used by this project\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "data/templates/sbia/1.3/CTestConfig.cmake" : {
      "ObjectId" : "7e7c83032a6e80a383aa39aec1759785464f73d6",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CTestConfig.cmake\n\n# @brief Dashboard configuration file.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set CTest/CDash project name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# start time of Nightly test model\n\n#\n\n# All Nightly tests which are executed within a time window of 24 hours\n\n# starting at the specified start time, will replace previous submissions\n\n# made within the same time frame such that for each time frame of 24 hours\n\n# only one result of test executions is present on the dashboard.\n\n# The execution of the Nightly tests is usually triggered automatically\n\n# via a scheduled cron job that is run once every 24 hours.\n\n#\n\n# Use the Continuous or Experimental test models if you want to execute\n\n# tests manually.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# dashboard submission to SBIA CDash server\n\n#\n\n# Note: By default, CTest does not support HTTPS as submission method.\n\n#       In order to enable it, CTest (and hence CMake) has to be build\n\n#       manually with the option CMAKE_USE_OPENSSL enabled.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# launchers\n\n#\n\n# See CTest.cmake module.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.3/config/Components.cmake" : {
      "ObjectId" : "caafd1a01b0c7be7dcd943b1434731e9ff29c026",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Components.cmake\n\n# @brief Configuration of component-based installers.\n\n#\n\n# This file is included by the BasisPack.cmake module if found in the\n\n# @c PROJECT_CONFIG_DIR after the CPack module was included. It is used to\n\n# configure component-based installers.\n\n#\n\n# Use the functions basis_add_component() and basis_add_component_group()\n\n# to add a component or component group, respectively. See documentation of\n\n# these functions for details.\n\n#\n\n# @sa basis_add_component()\n\n# @sa basis_add_component_group()\n\n#\n\n# For CPack generators which generate several packages, the default behavior\n\n# is to generate one package per component group. However, one can modify this\n\n# default behavior by setting CPACK_COMPONENTS_GROUPING to one of the\n\n# following values:\n\n#\n\n#   - ALL_GROUPS_IN_ONE       Generate separate package for each component group.\n\n#   - IGNORE                  Generate separate package for each component.\n\n#   - ALL_COMPONENTS_IN_ONE   Generate single package for all components.\n\n#\n\n# @sa http://www.vtk.org/Wiki/CMake:Component_Install_With_CPack#Controlling_Differents_Ways_of_packaging_components\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.3/config/ConfigSettings.cmake" : {
      "ObjectId" : "6ff240f36777047079c298c57aebfb2607b31b3f",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  ConfigSettings.cmake\n\n# @brief Sets variables used in CMake package configuration.\n\n#\n\n# It is suggested to use @c _CONFIG as suffix for variable names that are to\n\n# be substituted in the Config.cmake.in template file in order to distinguish\n\n# these variables from the build configuration.\n\n#\n\n# @note The default BasisConfigSettings.cmake file which is part of the BASIS\n\n#       installation is included prior to this file. Hence, the variables are\n\n#       valid even if a custom project-specific configuration is used and\n\n#       default values can further be overwritten in this file.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# build tree configuration settings\n\n# ============================================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# installation configuration settings\n\n# ============================================================================\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "data/templates/sbia/1.3/config/Depends.cmake" : {
      "ObjectId" : "64faa8692b35c32ff051278b98068b347ea4e0e8",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Depends.cmake\n\n# @brief Find additional dependencies.\n\n#\n\n# This file is included by basis_project_impl() after it included the\n\n# BasisProject.cmake file of the project and collected information about its\n\n# modules. Furthermore, it is included before it looks for the packages\n\n# specified as arguments to the basis_project() command. At this point, the\n\n# CMake project is not initialized yet and most BASIS variables are not set.\n\n#\n\n# Use this file to find additional dependencies or dependencies which are\n\n# only required by a project if certain modules are enabled.\n\n#\n\n# Use case: If this project has a module which is a Slicer Extension\n\n# and the project itself shall be build as Slicer Extension only if the\n\n# module is enabled, the Slicer package configuration file has to be\n\n# included here such that the Slicer settings are imported before any\n\n# module is configured. This is done by using the command\n\n#\n\n# Another use case would be that you want to specify advanced options to\n\n# the basis_find_package() function which you cannot specify as part of\n\n# the dependencies arguments of the basis_project() function.\n\n#\n\n# Example:\n\n# @code\n\n# if (SlicerExtension_ENABLED)\n\n#   # requires Slicer if the SlicerExtension module is enabled\n\n#   basis_find_package (Slicer REQUIRED)\n\n#   basis_use_package (Slicer)\n\n# endif ()\n\n# @endcode\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.3/config/Package.cmake" : {
      "ObjectId" : "2863c2d6f5033529aa985f906ff4ef6bc4f87463",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Package.cmake\n\n# @brief Package configuration.\n\n#\n\n# This file is included by the BasisPack module prior to the CPack module.\n\n# It can be used to overwrite or extend the default package configuration.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# package information/general settings\n\n# ============================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# overwrite default package information here.\n\n#\n\n# See http://www.vtk.org/Wiki/CMake:Packaging_With_CPack\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# source package\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Pattern of files in the source tree that will not be packaged when building\n\n# a source package. This is a list of patterns, e.g., \"/CVS/\", \"/\\\\.svn/\",\n\n# \".swp$\", \".#\", \"/#\", \"*~\", and \"cscope*\", which are ignored by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# default ignore patterns\n",
        "Line" : 34,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# add further ignore patterns here\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "data/templates/sbia/1.3/config/Settings.cmake" : {
      "ObjectId" : "1449cb99d5b8a247016c4f9d7b4c9dfb53e733b2",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Settings.cmake\n\n# @brief Non-default project settings.\n\n#\n\n# This file is included by basis_project_impl() after it looked for the\n\n# required and optional dependencies and the CMake variables related to the\n\n# project directory structure were defined (see\n\n# &lt;Project&gt;Directories.cmake file in @c PROJECT_BINARY_DIR, where\n\n# &lt;Project&gt; is the name of this project).\n\n# It is also included before the BasisSettings.cmake file.\n\n#\n\n# In particular, build options should be added in this file using CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:option\">\n\n# option()</a> command. Further, any common settings related to using a found\n\n# dependency can be set here if the basis_use_package() command was enable\n\n# to import the required configuration of a particular external package.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.3/data/CMakeLists.txt" : {
      "ObjectId" : "a359e837574c3b340de1a28be9707da045dd167d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of auxiliary data files.\n\n#\n\n# The data within this folder is required to execute the software tools of\n\n# this project. Example data which is only required for an example run of\n\n# the software are, on the other side, available in the example folder.\n\n#\n\n# By default, all content of this directory is simply installed in the\n\n# @c INSTALL_DATA_DIR directory of the installation tree. To group data files,\n\n# place them in proper subdirectories which will be copied to the\n\n# @c DESTINATION directory of the basis_install() function.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.3/doc/CMakeLists.txt" : {
      "ObjectId" : "72f6829ff73666c1b9e1d2d2a10d1014dcfb39f1",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (user manual) and developer documentation (developer manual). For\n\n# developers, the documentation of the API is of particular interest,\n\n# where developers who are responsible for maintaining the software\n\n# may be provided with even more detailed documentation of the implementation.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# API documentation\n\n# ============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following CMake code adds an API documentation to the 'doc' target which\n\n# is automatically generated by Doxygen from the in-source code comments.\n\n# Please refer to the documentation of basis_add_doc() for details.\n\n#\n\n# See basis_add_doc()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# manuals\n\n# ============================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add documentation files in the current directory and/or install these files\n\n# using the macro basis_add_doc().\n\n#\n\n# See basis_add_doc()\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.3/example/CMakeLists.txt" : {
      "ObjectId" : "c11959059346463e19d1cc8d422f0fae19655c0a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of example application of software.\n\n#\n\n# By default, all content of the example folder is simply copied to the\n\n# example directory of the installation tree.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.3/src/CMakeLists.txt" : {
      "ObjectId" : "db3d2b3fa0da3ac223e98b7578ba960e91c39e2f",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# library target(s)\n\n# ============================================================================\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add library target for each library using basis_add_library().\n\n#\n\n# This command can not only be used to build libraries from C/C++, but also source\n\n# code written in other programming languages such as Java, Python, Perl, BASH,\n\n# and MATLAB. Note that here we consider modules written in a scripting language\n\n# which are no executables but to be included by other scripts written in the\n\n# particular language as libraries.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# executable target(s)\n\n# ============================================================================\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add executable target for each executable program using basis_add_executable().\n\n#\n\n# This command can not only be used to build executables from C/C++, but also\n\n# source code written in other programming languages such as Java, Python, Perl,\n\n# BASH, and MATLAB.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.3/test/CMakeLists.txt" : {
      "ObjectId" : "58ff988e58e64eef522292d5b7edb6f0a8972a32",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software testing.\n\n#\n\n# Unit tests test only single functions, classes, and modules of the software.\n\n# System tests, on the other side, execute the programs of this package with\n\n# given test input data and compare the output of the programs to the expected\n\n# results. For the definition of system tests which perform image regression\n\n# tests, i.e., compare the images written by the test to given baseline images,\n\n# the basis.testdriver executable target imported from BASIS can be used to\n\n# execute the executable to test and perform the regression tests.\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_test (\n\n#  COMMAND basis.testdriver -v\n\n#    --intensity-tolerance 2\n\n#    --compare \"t1_bc.nii.gz\"\n\n#              \"${PROJECT_TESTING_DIR}/baseline/t1_bc.nii.gz\"\n\n#    --\n\n#    $<TARGET_FILE:biascorrect>\n\n#      \"${PROJECT_TESTING_DIR}/input/t1.nii.gz\"\n\n#      t1_bc.nii.gz\n\n# )\n\n# @endcode\n\n#\n\n# If the tests are implemented in C/C++ as supported by CMake's\n\n# create_test_sourcelist() function, a custom test driver can be generated\n\n# using the basis_add_test_driver() function and this test driver then be used\n\n# to execute the tests and perform the regression tests.\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_test_driver (testdriver test1.cxx test2.cxx test3.cxx)\n\n#\n\n# basis_add_test (\n\n#   COMMAND testdriver -v\n\n#     --intensity-tolerance 2\n\n#     --compare \"t1_bc.nii.gz\"\n\n#               \"${PROJECT_TESTING_DIR}/baseline/t1_bc.nii.gz\"\n\n#     --\n\n#     biascorrect # test1.cxx defines int biascorrect(int argc, char* argv[])\n\n#      \"${PROJECT_TESTING_DIR}/input/t1.nii.gz\"\n\n#      t1_bc.nii.gz\n\n# )\n\n#\n\n# # ...\n\n# @endcode\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:create_test_sourcelist\n\n#\n\n# The built test executables can be found in @c TESTING_RUNTIME_DIR.\n\n# The test output shall be written to @c TESTING_OUTPUT_DIR. In most cases,\n\n# a subdirectory for each test should be created under this output directory.\n\n# Therefore, the basis_add_test() function creates such subdirectory and sets\n\n# the working directory of the test to this output directory.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.4/BasisProject.cmake" : {
      "ObjectId" : "ab7a5072882c171b3573fde2dc99868b08f97670",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Meta-data of this BASIS project.\n\n#\n\n# This file defines project meta-data by calling the basis_project() function.\n\n# This meta-data is used by BASIS to setup the project. Moreover, if the\n\n# project is a module of another BASIS project, the dependencies to other\n\n# modules have to be specified here such that the top-level project can analyze\n\n# the inter-module dependencies.\n\n#\n\n# @sa http://www.rad.upenn.edu/sbia/software/basis/standard/modules/\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Example:\n\n# @code\n\n# basis_project (\n\n#   NAME\n\n#     \"MyProject\"\n\n#   VERSION\n\n#     1.1.5\n\n#   DESCRIPTION\n\n#     \"This is the description of the project named\"\n\n#     \" MyProject which follows BASIS.\"\n\n#   DEPENDS\n\n#     NiftiCLib\n\n#     Python\n\n#   OPTIONAL_DEPENDS\n\n#     MPI\n\n#   TEST_DEPENDS\n\n#     Perl\n\n# )\n\n# @endcode\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: The #<*dependency> patterns are required by the basisproject tool\n\n#       and should be kept on a separate line as last commented argument of\n\n#       the corresponding options of the basis_project() command.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#<dependency>\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "data/templates/sbia/1.4/CMakeLists.txt" : {
      "ObjectId" : "81706e1c8f30e4bdf2c4b708c6ecf7a9620a4757",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# version of BASIS template used by this project\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# moreover, users tend to specify the installation prefix instead of the\n\n# actual directory containing the package configuration file\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "data/templates/sbia/1.4/config/Package.cmake" : {
      "ObjectId" : "0158d445394aad4d155c3a75a5930a74f6da222f",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Package.cmake\n\n# @brief Package configuration.\n\n#\n\n# This file is included by the BasisPack module prior to the CPack module.\n\n# It can be used to overwrite or extend the default package configuration.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# package information/general settings\n\n# ============================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# overwrite default package information here.\n\n#\n\n# See http://www.vtk.org/Wiki/CMake:Packaging_With_CPack\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# source package\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Pattern of files in the source tree that will not be packaged when building\n\n# a source package. This is a list of patterns, e.g., \"/CVS/\", \"/\\\\.svn/\",\n\n# \".swp$\", \".#\", \"/#\", \"*~\", and \"cscope*\", which are ignored by default.\n\n# Moreover, the directory PROJECT_TESTING_DIR/internal/ is excluded.\n\n# Ignore additional patterns by appending to CPACK_SOURCE_IGNORE_FILE.\n\n#\n\n# Example: list (APPEND CPACK_SOURCE_IGNORE_FILE \"<exclude_regex>\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.4/doc/CMakeLists.txt" : {
      "ObjectId" : "f38262d4a49a39d206f3b594034db60fac4848d6",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# API documentation (in-source code comments)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# software manual\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# developer's guide (optional)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# web site (optional)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.4/test/CMakeLists.txt" : {
      "ObjectId" : "67cc7640865af062c20ba698cd7d971789c7e03a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software testing.\n\n#\n\n# Unit tests test only single functions, classes, and modules of the software.\n\n# System tests, on the other side, execute the programs of this package with\n\n# given test input data and compare the output of the programs to the expected\n\n# results. For the definition of system tests which perform image regression\n\n# tests, i.e., compare the images written by the test to given baseline images,\n\n# the basis.testdriver executable target imported from BASIS can be used to\n\n# execute the executable to test and perform the regression tests.\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_test (\n\n#  COMMAND basis.testdriver -v\n\n#    --intensity-tolerance 2\n\n#    --compare \"t1_bc.nii.gz\"\n\n#              \"${PROJECT_TESTING_DIR}/baseline/t1_bc.nii.gz\"\n\n#    --\n\n#    $<TARGET_FILE:biascorrect>\n\n#      \"${PROJECT_TESTING_DIR}/input/t1.nii.gz\"\n\n#      t1_bc.nii.gz\n\n# )\n\n# @endcode\n\n#\n\n# If the tests are implemented in C/C++ as supported by CMake's\n\n# create_test_sourcelist() function, a custom test driver can be generated\n\n# using the basis_add_test_driver() function and this test driver then be used\n\n# to execute the tests and perform the regression tests.\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_test_driver (testdriver test1.cxx test2.cxx test3.cxx)\n\n#\n\n# basis_add_test (\n\n#   COMMAND testdriver -v\n\n#     --intensity-tolerance 2\n\n#     --compare \"t1_bc.nii.gz\"\n\n#               \"${PROJECT_TESTING_DIR}/baseline/t1_bc.nii.gz\"\n\n#     --\n\n#     biascorrect # test1.cxx defines int biascorrect(int argc, char* argv[])\n\n#      \"${PROJECT_TESTING_DIR}/input/t1.nii.gz\"\n\n#      t1_bc.nii.gz\n\n# )\n\n#\n\n# # ...\n\n# @endcode\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:create_test_sourcelist\n\n#\n\n# The built test executables can be found in @c TESTING_RUNTIME_DIR.\n\n# The test output shall be written to @c TESTING_OUTPUT_DIR. In most cases,\n\n# a subdirectory for each test should be created under this output directory.\n\n# Therefore, the basis_add_test() function creates such subdirectory and sets\n\n# the working directory of the test to this output directory.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# internal tests\n\n# ============================================================================\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# public tests\n\n# ============================================================================\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "data/templates/sbia/1.5/BasisProject.cmake" : {
      "ObjectId" : "5071d61b24802348abf6ec964a70bc48946a34ce",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Meta-data of this BASIS project.\n\n#\n\n# This file defines project meta-data by calling the basis_project() function.\n\n# This meta-data is used by BASIS to setup the project. Moreover, if the\n\n# project is a module of another BASIS project, the dependencies to other\n\n# modules have to be specified here such that the top-level project can analyze\n\n# the inter-module dependencies.\n\n#\n\n# @sa http://www.rad.upenn.edu/sbia/software/basis/standard/modules/\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Example:\n\n# @code\n\n# basis_project (\n\n#   # ------------------------------------------------------------------------\n\n#   # meta-data\n\n#   NAME             MyProject\n\n#   PROVIDER         PackageProvider\n\n#   VERSION          1.1.5\n\n#   DESCRIPTION      \"This is the description of the project named\"\n\n#                    \" MyProject which follows BASIS.\"\n\n#   AUTHOR           \"Max Muster\"\n\n#   COPYRIGHT        \"2012 University of Pennsylvania\"\n\n#   LICENSE          \"See COPYING file.\"\n\n#   CONTACT          \"SBIA Group <sbia-software at uphs.upenn.edu>\"\n\n#   # ------------------------------------------------------------------------\n\n#   # dependencies\n\n#   DEPENDS          NiftiCLib PythonInterp\n\n#   OPTIONAL_DEPENDS MPI\n\n#   TEST_DEPENDS     Perl\n\n# )\n\n# @endcode\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: The #<*> patterns are required by the basisproject tool and should be\n\n#       kept on a separate line as last commented argument of the corresponding\n\n#       options of the basis_project() command.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# meta-data\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#<project>\n",
        "Line" : 60,
        "CharPositionInLine" : 14
      },
      "4" : {
        "Text" : "#<description>\n\n#<author>\n",
        "Line" : 62,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# dependencies\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#<dependency>\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "data/templates/sbia/1.5/CMakeLists.txt" : {
      "ObjectId" : "453fb31d6016a68bd0d85ee894cf5a1e47501055",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# version of BASIS template used by this project\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# moreover, users tend to specify the installation prefix instead of the\n\n# actual directory containing the package configuration file\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if BASIS is not found, set CMAKE_INSTALL_PREFIX to invalid value if not\n\n# set explicitly at the command-line such that BASIS will still initialize\n\n# it to its defaults even though already cached\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "data/templates/sbia/1.5/config/Settings.cmake" : {
      "ObjectId" : "48989609ebeaee83a43482c92710ba6ce4d1665d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  Settings.cmake\n\n# @brief Non-default project settings.\n\n#\n\n# This file is included by basis_project_impl(), after it looked for the\n\n# required and optional dependencies and the CMake variables related to the\n\n# project directory structure were defined (see Directories.cmake file in\n\n# @c BINARY_CONFIG_DIR). It is also included before the BasisSettings.cmake\n\n# file.\n\n#\n\n# In particular build options should be added in this file using CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:option\">\n\n# option()</a> command. Further, any common settings related to using a found\n\n# dependency can be set here if the basis_use_package() command was enable\n\n# to import the required configuration of a particular external package.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.5/doc/CMakeLists.txt" : {
      "ObjectId" : "f2cfdd9558aa4c1a87e4736f5c50af2e79a41499",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# API documentation (in-source code comments)\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# pre-generated API documentation\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Doxygen\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# condensed software manual (e.g., excluding download and installation)\n\n# ============================================================================\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# pre-generated PDF\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# pre-generated PDF which is included with web site for download\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# other pre-generated PDF found in the current source directory\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# generate software manual from reStructuredText sources\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ============================================================================\n\n# developer's guide (optional)\n\n# ============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# pre-generated PDF\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pre-generated PDF which is included with web site for download\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# other pre-generated PDF found in the current source directory\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# generate developer's guide from reStructuredText sources\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ============================================================================\n\n# web site (optional)\n\n# ============================================================================\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# pre-generated site PDF for download\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# web site\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# ============================================================================\n\n# comprehensive manual (may contain all of the above)\n\n# ============================================================================\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# pre-generated PDF\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# comprehensive software manual\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# condensed manual\n\n# developer's guide\n\n# web site\n",
        "Line" : 179,
        "CharPositionInLine" : 35
      },
      "21" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add dummy 'site' target(s)\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add dummy 'manual' target\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "data/templates/sbia/1.5/src/CMakeLists.txt" : {
      "ObjectId" : "3c0e598617e81b71d3bbac22feb137f1b708e370",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# library target(s)\n\n# ============================================================================\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add library target for each library using basis_add_library().\n\n#\n\n# This command can not only be used to build libraries from C/C++, but also source\n\n# code written in other programming languages such as Java, Python, Perl,\n\n# MATLAB, and Bash. Note that here we consider modules written in a scripting\n\n# language which are no executables but to be included by other scripts written\n\n# in the particular language as libraries.\n\n#\n\n# Note: Public modules written in a scripting language such as Python, Perl,\n\n#       MATLAB, or Bash which are intended for use by other packages should\n\n#       be placed in the lib/[<lang>/]<project>/ directory,\n\n#       where <lang> is the language name in lowercase and is optional.\n\n#       BASIS will automatically add a library build target for these modules.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# executable target(s)\n\n# ============================================================================\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add executable target for each executable program using basis_add_executable().\n\n#\n\n# This command can not only be used to build executables from C/C++, but also\n\n# source code written in other programming languages such as Java, Python, Perl,\n\n# MATLAB, and Bash.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "data/templates/sbia/1.5/test/internal/CMakeLists.txt" : {
      "ObjectId" : "5b0cdec83cc2bb52bb57236aaca54eb12f46bdca",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of internal software tests.\n\n#\n\n# The tests defined by this build configuration file are intended for internal\n\n# use only. They are excluded from the public distribution package which is\n\n# generated by CPack. Reasons for excluding these tests are to reduce the\n\n# size of the distribution package and to avoid reports about failing tests,\n\n# where it is known that the tests will only run successfully within the\n\n# environment of the package provider.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/templates/sbia/1.6/doc/CMakeLists.txt" : {
      "ObjectId" : "ea50feae0e9c1605c98498f11c6ca03f5dce41ba",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# API documentation (in-source code comments)\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# pre-generated API documentation\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Doxygen\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# condensed software manual (e.g., excluding download and installation)\n\n# ============================================================================\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# pre-generated PDF\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# pre-generated PDF which is included with web site for download\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# other pre-generated PDF found in the current source directory\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# generate software manual from reStructuredText sources\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ============================================================================\n\n# developer's guide (optional)\n\n# ============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# pre-generated PDF\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pre-generated PDF which is included with web site for download\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# other pre-generated PDF found in the current source directory\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# generate developer's guide from reStructuredText sources\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ============================================================================\n\n# web site (optional)\n\n# ============================================================================\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# pre-generated site PDF for download\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# web site\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# ============================================================================\n\n# comprehensive manual (may contain all of the above)\n\n# ============================================================================\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# pre-generated PDF\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# comprehensive software manual\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# condensed manual\n\n# developer's guide\n\n# web site\n",
        "Line" : 167,
        "CharPositionInLine" : 35
      },
      "21" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add dummy 'site' target(s)\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add dummy 'manual' target\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "data/templates/sbia/1.7/doc/CMakeLists.txt" : {
      "ObjectId" : "33b248f700fc23d37a5485c80a5a38cfd3f6bde7",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# settings\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# output names of PDF's generated from reStructuredText sources (excl. extension)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in particular, EXCLUDE_FROM_DOC will be added if pre-generated files exist\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# pre-generated output files\n\n# ============================================================================\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# API documentation\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# web site\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# software manual\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# developer's guide\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ============================================================================\n\n# API documentation (in-source code comments)\n\n# ============================================================================\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ============================================================================\n\n# comprehensive manual\n\n# ============================================================================\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ============================================================================\n\n# separate web site and manual\n\n# ============================================================================\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# web site\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# software manual\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# ============================================================================\n\n# developer's guide\n\n# ============================================================================\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "data/templates/sbia/1.8/BasisProject.cmake" : {
      "ObjectId" : "83d327070c8b8964726a4efa8bca85e56cec1797",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################################################\n\n# @file  BasisProject.cmake\n\n# @brief Sets basic information about a BASIS Project and calls basis_project().\n\n#\n\n# This file defines basic information about a project (metadata), by calling \n\n# the basis_project() function. This meta-data is used by BASIS to setup the \n\n# project. Moreover, if the project is a module of another BASIS project, \n\n# the dependencies to other modules have to be specified here such that the \n\n# top-level project can analyze the inter-module dependencies.\n\n#\n\n# @sa http://opensource.andreasschuh.com/cmake-basis/standard/modules.html\n\n#\n\n# However, not only dependencies to other modules can be specified here,\n\n# but also dependencies on external packages. A more flexible alternative to\n\n# resolve external dependencies is to add the corresponding basis_find_package()\n\n# statements to the Depends.cmake file. This should, however, only be done\n\n# if specifying the dependencies as arguments to the basis_project() function\n\n# cannot be used to resolve the dependencies properly. If you only need to\n\n# make use of additional variables set by the package configuration file\n\n# of the external package or the corresponding Find<Package>.cmake module,\n\n# add the related CMake code to the Settings.cmake file instead.\n\n#\n\n# Example:\n\n# @code\n\n# basis_project (\n\n#   # ------------------------------------------------------------------------\n\n#   # meta-data\n\n#   NAME             MyProject\n\n#   PACKAGE_VENDOR   sbia       # Note: PACKAGE_VENDOR will also be part of the default installation path\n\n#   PROVIDER_NAME    University of Pennsylvania\n\n#   DIVISION_NAME    Section of Biomedical Image Analysis\n\n#   VERSION          1.1.5\n\n#   DESCRIPTION      \"This is the description of the project named\"\n\n#                    \" MyProject which follows BASIS.\"\n\n#   AUTHOR           \"Max Muster\"\n\n#   COPYRIGHT        \"2012 University of Pennsylvania\"\n\n#   LICENSE          \"See COPYING file.\"\n\n#   CONTACT          \"SBIA Group <sbia-software at uphs.upenn.edu>\"\n\n#   # ------------------------------------------------------------------------\n\n#   # dependencies\n\n#   DEPENDS          NiftiCLib PythonInterp\n\n#   OPTIONAL_DEPENDS MPI\n\n#   TEST_DEPENDS     Perl\n\n# )\n\n# @endcode\n\n#\n\n# Copyright (c) 2011, 2012 University of Pennsylvania, 2013 Andreas Schuh.<br />\n\n# All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: The #<*dependency> patterns are required by the basisproject tool\n\n#       and should be kept on a separate line as last commented argument of\n\n#       the corresponding options of the basis_project() command.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# meta-data\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#<project>\n",
        "Line" : 63,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : "#<author>\n\n#<description>\n\n#<vendor>\n\n#<provider-name>\n\n#<provider-logo>\n\n#<provider-website>\n\n#<division-name>\n\n#<division-logo>\n\n#<division-website>\n\n#<copyright>\n\n#<license>\n\n#<contact>\n\n#<template>\n",
        "Line" : 65,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# dependencies\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#<dependency>\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#<optional-dependency>\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#<test-dependency>\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#<optional-test-dependency>\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "data/templates/sbia/1.8/CMakeLists.txt" : {
      "ObjectId" : "9f93439b83e8104d30a9d2e6f1dd998c46ab2361",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Root build configuration file.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# minimum required CMake version\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include BASIS policies, settings, macros, and functions\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# moreover, users tend to specify the installation prefix instead of the\n\n# actual directory containing the package configuration file\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if BASIS is not found, set CMAKE_INSTALL_PREFIX to invalid value if not\n\n# set explicitly at the command-line such that BASIS will still initialize\n\n# it to its defaults even though already cached\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure build system\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "data/templates/sbia/1.8/doc/CMakeLists.txt" : {
      "ObjectId" : "632d351cad24df1078141deec8412ae87e5d2930",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n#\n\n# Copyright (c) <year> University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# settings\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# output names of PDF's generated from reStructuredText sources (excl. extension)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in particular, EXCLUDE_FROM_DOC will be added if pre-generated files exist\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Select sphinx documentation tool theme if it is available, \n\n# you can remove these lines to go with the default set by  \n\n# BASIS_SPHINX_HTML_THEME_PATH and BASIS_SPHINX_HTML_THEME \n\n# in BasisSettings.cmake and the root build configuration \n\n# CMakeLists.txt file, or change the selection here to modify \n\n# the selected default \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ============================================================================\n\n# pre-generated output files\n\n# ============================================================================\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# API documentation\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# web site\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# software manual\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# developer's guide\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ============================================================================\n\n# API documentation (in-source code comments)\n\n# ============================================================================\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ============================================================================\n\n# comprehensive manual\n\n# ============================================================================\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ============================================================================\n\n# separate web site and manual\n\n# ============================================================================\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# web site\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# software manual\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ============================================================================\n\n# developer's guide\n\n# ============================================================================\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "a0c7080ba0f70373c0c07842143cd765e32a7dd2",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Carnegie Mellon University\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software documentation.\n\n#\n\n# This build configuration builds and/or installs the documentation of the\n\n# software package. The documentation can be divided into user documentation\n\n# (e.g., software manual) and developer documentation (e.g., developer's guide).\n\n# For developers, both those using a library provided by this package and the\n\n# package maintainers, the documentation of the API is of particular interest.\n\n# Developers who are responsible for maintaining this software may be provided\n\n# with even more detailed documentation of the implementation in the so-called\n\n# developer's guide.\n\n#\n\n# See the basis_add_doc() command for details on the documentation build tools\n\n# supported by BASIS for the generation of documentation from plain text files\n\n# and in-source code comments.\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# generic targets\n\n# ============================================================================\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create custom targets so \"make site\" and \"make manual\" always work\n\n# note that the \"doc\" target is added automatically which will trigger\n\n# the build of the complete documentation unless the EXCLUDE_FROM_ALL\n\n# option is passed to basis_add_doc\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build HTML pages\n\n# build PDF manual\n",
        "Line" : 37,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# ============================================================================\n\n# API reference (in-source code comments)\n\n# ============================================================================\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# replace < year|contact|copyright|license > pattern in template file which\n\n# shall be included in documentation to avoid unrecognized xml/html tag warning\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# External libraries packaged with BASIS to exclude from final documentation\n",
        "Line" : 65,
        "CharPositionInLine" : 24
      },
      "8" : {
        "Text" : "# Google Mock\n\n# Google Test\n\n# TCLAP library\n\n# Sphinx extension\n\n# Sphinx extension\n\n# Python Argh\n\n# Google Mock and Test\n\n# main() of unit tests based on GMock\n\n# testdriver which includes *.inc files\n",
        "Line" : 66,
        "CharPositionInLine" : 47
      },
      "9" : {
        "Text" : "# ============================================================================\n\n# software manual\n\n# ============================================================================\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# i.e., USE_LATEX set to OFF by user\n",
        "Line" : 86,
        "CharPositionInLine" : 21
      },
      "11" : {
        "Text" : "# option to auto-update PDF manual in source tree\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# software manual output formats\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# add build target for the generation of the web pages and PDF manual from\n\n# the same set of reStructuredText input source files\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# documenation build target name\n\n# select Sphinx as the generator\n\n# selected Sphinx output formats\n\n# http://en.wikipedia.org/wiki/Man_page#Manual_sections\n\n# select the Sphinx layout theme\n\n# logo to use at heading of documentation\n\n# icon for bookmark and tab title\n\n# sidebar options to use\n\n# output directory for completed documentation\n\n# sidebar width in pixels\n\n# .rst file to start with when generating HTML\n\n# .rst file to start with when generating LaTeX/PDF\n\n# title within LaTeX/PDF documents\n\n# general output file name, e.g., LaTeX/PDF files\n\n# Doxygen generator build target for integrated API reference\n\n# location of Doxygen output files\n\n# disable currently unused index page\n\n# .rst files explicitly included only\n",
        "Line" : 116,
        "CharPositionInLine" : 58
      },
      "15" : {
        "Text" : "# the Sphinx :download: link directive requires the download file to\n\n# be present in the source tree; thus copy generated PDF to source tree\n\n# if it contains modifications since last time\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# add dependency such that PDF is re-generated before copied to source tree if it differs\n",
        "Line" : 150,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# before building the HTML documentation, ensure that source tree version of manual is up-to-date\n",
        "Line" : 153,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 18
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "25f806b41d1bd05487db2f4044651a5a99bc1d0e",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of example application of software.\n\n#\n\n# By default, all content of the example folder is simply copied to the\n\n# example directory of the installation tree.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "example/doxygen/DoxygenExample.cmake" : {
      "ObjectId" : "5424c9b063a498942fcc4c985910ecfef1684f06",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  DoxygenExample.cmake\n\n# @brief Example CMake file documented with Doxygen comments.\n\n#\n\n# This file is processed by the doxyfilter command using the\n\n# SBIA::Doxygen::CMakeFilter in order to convert it into pseudo C code that is\n\n# understood by Doxgyen. From this converted pseudo C code, Doxygen generates\n\n# a documentation in either one of the selected output formats, i.e., HTML in\n\n# most cases.\n\n#\n\n# The code is intentionally uncommonly formatted to test whether the Doxygen\n\n# filter correctly handles these cases. Do not adapt this obfuscating code\n\n# formatting for your own CMake code!\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## @addtogroup CMakeExample\n\n# @{\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @brief Option available to user.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## @brief Option on multiple lines.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## @brief Some uncached constant value.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## @brief A more complicated uncached example defined over multiple lines.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## @brief Uncached constant with value and closing parentheses on separate lines.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## @brief Uncached constant with name and value on separate line.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## @brief Uncached constant with all parts of set() on separate lines.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## @brief Example set() with parentheses in value.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @brief Some cached constant value.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# only the if-then block considered by Doxygen filter\n",
        "Line" : 65,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "## @brief A more complicated cached example defined over multiple lines.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## @brief Cached constant with value and closing parentheses on separate lines.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## @brief Cached constant with name and value on separate line.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## @brief Cached constant with all parts of set() on separate lines.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## @brief Example function with only one parameter.\n\n#\n\n# @param [out] ARG Name of variable which is set to the string \"Hello!\".\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## @brief Example macro with a variable number of arguments.\n\n#\n\n# @param ARGN Arbitrary number of arguments.\n\n#\n\n# @retval BAR_STR Set to a space delimited string of the input arguments @p ARGN.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## @brief Function definition with arguments declared on separate lines.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## @}\n\n# end of Doxygen comment\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "630974dccb2c6e7667f38c8d423b18119faff710",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# library target(s)\n\n# ============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add library target for each library using basis_add_library ().\n\n#\n\n# This command can not only be used to build libraries from C/C++, but also source\n\n# code written in other programming languages such as Java, Python, Perl, BASH,\n\n# and MATLAB. Note that here we consider modules written in a scripting language\n\n# which are no executables but to be included by other scripts written in the\n\n# particular language as libraries.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake modules\n\n# implementation utilities\n",
        "Line" : 27,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# Sphinx extensions and themes\n",
        "Line" : 31,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "# ============================================================================\n\n# executable target(s)\n\n# ============================================================================\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add executable target for each executable program using basis_add_executable().\n\n#\n\n# This command can not only be used to build executables from C/C++, but also\n\n# source code written in other programming languages such as Java, Python, Perl,\n\n# BASH, and MATLAB.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/BasisConfigSettings.cmake" : {
      "ObjectId" : "e4f81947de75d935611bb7ad9d72711b4606524a",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisConfigSettings.cmake\n\n# @brief Sets basic variables used in CMake package configuration.\n\n#\n\n# It is suggested to use @c _CONFIG as suffix for variable names that are to be\n\n# substituted in the Config.cmake.in template file in order to distinguish\n\n# these variables from the build configuration.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# common configuration settings\n\n# ============================================================================\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## @brief Include directories of dependencies.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## @brief Directories of libraries this package depends on.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## @brief Code to set cached &lt;Pkg&gt;_DIR variables in package configuration.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ============================================================================\n\n# build tree configuration settings\n\n# ============================================================================\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ============================================================================\n\n# installation configuration settings\n\n# ============================================================================\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## @brief Installation prefix.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## @brief Directory of example files.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @brief Include directories.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## @brief Directory where libraries are located.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## @brief Directory of Python modules.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## @brief Directory of Jython modules.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## @brief Directory of Perl modules.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## @brief Directory of MATLAB modules.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## @brief Directory of Bash modules.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## @brief Directory of CMake package configuration files of project modules.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/cmake/BasisPack.cmake" : {
      "ObjectId" : "9ef248de3632f8350eaed8c87701768b07cfa3ac",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisPack.cmake\n\n# @brief CPack configuration. Include this module instead of CPack.\n\n#\n\n# @note This module is included by basis_project_finalize().\n\n#\n\n# This module implements the packaging of BASIS projects.\n\n#\n\n# Overwrite the package information set by this module either in a file\n\n# Package.cmake or a file Package.cmake.in located in the directory\n\n# specified by PROJECT_CONFIG_DIR. The latter is configured and copied to the\n\n# binary tree before included by this module. Further, to enable a\n\n# component-based installation, provide either a file Components.cmake or\n\n# Components.cmake.in again in the directory specified by PROJECT_CONFIG_DIR.\n\n# Also in this case, the latter is configured via CMake's configure_file()\n\n# before use. This file is referred to as components definition (file).\n\n#\n\n# Components can be added in the components definition using the command\n\n# basis_add_component(). Several components can be grouped together and a\n\n# group description be added using the command basis_add_component_group().\n\n# Different pre-configured install types which define a certain selection of\n\n# components to install can be added using basis_add_install_type().\n\n# Note that all these BASIS functions are wrappers around the corresponding\n\n# CPack functions.\n\n#\n\n# @sa CPack.cmake\n\n# @sa http://www.vtk.org/Wiki/CMake:Component_Install_With_CPack#Component-Based_Installers_with_CPack\n\n#\n\n# @ingroup CMakeAPI\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# local variables\n\n# ============================================================================\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# system libraries\n\n# ============================================================================\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find required runtime libraries\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include system runtime libraries in the installation\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ============================================================================\n\n# package information\n\n# ============================================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# general information\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# system name\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# binary package\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# source package\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# TODO The proper values for the following options still need to be\n\n#      figured. For the moment, just ignore these settings. NSIS might\n\n#      anyways not be supported in the near future.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# There is a bug in NSI that does not handle full unix paths properly. Make\n\n# sure there is at least one set of four (4) backlasshes.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#  set (CPACK_PACKAGE_ICON             \"${CMake_SOURCE_DIR}/Utilities/Release\\\\\\\\InstallIcon.bmp\")\n\n#  set (CPACK_NSIS_INSTALLED_ICON_NAME \"bin\\\\\\\\MyExecutable.exe\")\n\n#  set (CPACK_NSIS_DISPLAY_NAME        \"${CPACK_PACKAGE_INSTALL_DIRECTORY} ${PROJECT_NAME}\")\n\n#  set (CPACK_NSIS_HELP_LINK           \"http:\\\\\\\\\\\\\\\\www.my-project-home-page.org\")\n\n#  set (CPACK_NSIS_URL_INFO_ABOUT      \"http:\\\\\\\\\\\\\\\\www.my-personal-home-page.com\")\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  set (CPACK_STRIP_FILES        \"bin/MyExecutable\")\n\n#  set (CPACK_SOURCE_STRIP_FILES \"\")\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ============================================================================\n\n# source package\n\n# ============================================================================\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## @brief Patterns to be ignored when creating source package.\n\n# @ingroup BasisSettings\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# exclude disabled modules from source package\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ============================================================================\n\n# include project package information\n\n# ============================================================================\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ============================================================================\n\n# build package\n\n# ============================================================================\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ============================================================================\n\n# components\n\n# ============================================================================\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# utilities\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## @addtogroup CMakeAPI\n\n#  @{\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add component group.\n\n#\n\n# @attention This functionality is not yet entirely implemented.\n\n# @todo Come up and implement components concept which fits into superproject concept.\n\n#\n\n# @param [in] GRPNAME Name of the component group.\n\n# @param [in] ARGN    Further arguments passed to cpack_add_component_group().\n\n#\n\n# @returns Adds the component group @p GRPNAME.\n\n#\n\n# @sa http://www.cmake.org/pipermail/cmake/2008-August/023336.html\n\n# @sa cpack_add_component_group()\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add component.\n\n#\n\n# @attention This functionality is not yet entirely implemented.\n\n# @todo Come up and implement components concept which fits into superproject concept.\n\n#\n\n# @param [in] COMPNAME Name of the component.\n\n# @param [in] ARGN     Further arguments passed to cpack_add_component().\n\n#\n\n# @returns Adds the component named @p COMPNAME.\n\n#\n\n# @sa http://www.cmake.org/pipermail/cmake/2008-August/023336.html\n\n# @sa cpack_add_component()\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add pre-configured install type.\n\n#\n\n# @param [in] ARGN Arguments for cpack_add_install_type().\n\n#\n\n# @returns Adds a pre-configured installation type.\n\n#\n\n# @sa CPack.cmake\n\n# @sa cpack_add_install_type ()\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Configure installation-time downloads of selected components.\n\n#\n\n# @param [in] ARGN Arguments for cpack_configure_downloads().\n\n#\n\n# @returns Nothing.\n\n#\n\n# @sa CPack.cmake\n\n# @sa cpack_configure_downloads()\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include components definition\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ============================================================================\n\n# clean up\n\n# ============================================================================\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "src/cmake/BasisSettings.cmake" : {
      "ObjectId" : "776ba9d356a11e6ca8294423ea24599b2d2661c6",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisSettings.cmake\n\n# @brief Default project-independent settings.\n\n#\n\n# This module defines global CMake constants and variables which are used\n\n# by the BASIS CMake functions and macros. Hence, these values can be used\n\n# to configure the behavior of these functions to some extent without the\n\n# need to modify the functions themselves.\n\n#\n\n# @note As this file also sets the CMake policies to be used, it has to\n\n#       be included using the @c NO_POLICY_SCOPE in order for these policies\n\n#       to take effect also in the including file and its subdirectories.\n\n#\n\n# @attention Be careful when caching any of the variables. Usually, this\n\n#            file is included in the root CMake configuration file of the\n\n#            project which may also be a module of another project and hence\n\n#            may overwrite this project's settings.\n\n#\n\n# @attention Keep in mind that this file is included before any other\n\n#            BASIS module. Further, project-specific information such as\n\n#            the project name are not defined yet.\n\n#\n\n# @ingroup BasisSettings\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @addtogroup BasisSettings\n\n# @{\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# CMake version and policies\n\n# ============================================================================\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add policies introduced with CMake versions newer than the one specified\n\n# above. These policies would otherwise trigger a policy not set warning by\n\n# newer CMake versions.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ============================================================================\n\n# required modules\n\n# ============================================================================\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ============================================================================\n\n# generator expressions\n\n# ============================================================================\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## @brief Name of build configuration (\"$<CONFIG>\") generator expression\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ============================================================================\n\n# meta-data lists\n\n# ============================================================================\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## @brief Names of project meta-data switches.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @brief Names of project meta-data with only one argument.\n\n#  @see basis_project() in ProjectTools.cmake\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# short alias for PACKAGE_NAME\n\n# short alias for PACKAGE_WEBSITE\n\n# short alias for PACKAGE_VENDOR\n\n# short alias for PACKAGE_VENDOR (not PROVIDER_NAME, see basis_project!)\n",
        "Line" : 96,
        "CharPositionInLine" : 19
      },
      "12" : {
        "Text" : "# package vendor ID used for installation path\n",
        "Line" : 101,
        "CharPositionInLine" : 19
      },
      "13" : {
        "Text" : "# used by basisproject tool\n\n# alias for INCLUDE_DIRS\n\n# alias for CODE_DIRS\n\n# single directory containing multiple modules, see also MODULE_DIRS\n\n# directory containing the CMake/BASIS configuration\n\n# directory containing the auxiliary program data\n\n# directory containing the documentation\n\n# directory containing the ressource files such as a project logo\n\n# directory containing some example files\n\n# directory containing script libraries such as Perl or Python modules\n\n# directory containing the source code and data of the software tests\n",
        "Line" : 114,
        "CharPositionInLine" : 19
      },
      "14" : {
        "Text" : "## @brief Names of project meta-data with multiple arguments.\n\n#  @see basis_project() in ProjectTools.cmake\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list of directories containing public header files\n\n# list of directories containing source code files, see also CODE_DIR\n\n# list of separate module directories, see also MODULES_DIR\n\n# list of additional (generic) project subdirectories\n",
        "Line" : 137,
        "CharPositionInLine" : 19
      },
      "16" : {
        "Text" : "## @brief Names of project meta-data.\n\n#  @see basis_project() in ProjectTools.cmake\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## @brief Names of additional meta-data for Slicer modules with only one argument.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## @brief Names of additional meta-data for Slicer modules with multiple arguments.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## @brief Names of additional meta-data for Slicer modules.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ============================================================================\n\n# constants and global settings\n\n# ============================================================================\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## @brief List of name patterns used for special purpose targets.\n\n#\n\n# Contains a list of target name patterns that are used by the BASIS functions\n\n# for special purposes and are hence not to be used for project targets.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## @brief Names of recognized properties on targets.\n\n#\n\n# Unfortunately, the @c ARGV and @c ARGN arguments of a CMake function()\n\n# or macro() does not preserve values which themselves are lists. Therefore,\n\n# it is not possible to distinguish between property names and their values\n\n# in the arguments passed to set_target_properties() or\n\n# basis_set_target_properties(). To overcome this problem, this list specifies\n\n# all the possible property names. Everything else is considered to be a\n\n# property value except the first argument follwing right after the\n\n# @c PROPERTIES keyword. Alternatively, basis_set_property() can be used\n\n# as here no disambiguity exists.\n\n#\n\n# @note Placeholders such as &lt;CONFIG&gt; are allowed. These are treated\n\n#       as the regular expression \"[^ ]+\". See basis_list_to_regex().\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#section_PropertiesonTargets\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# CMake\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# BASIS\n",
        "Line" : 325,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# include directories\n\n# link directories\n\n# link libraries\n\n# BASIS type of target\n\n# whether BASIS utilities are used by this target\n\n# whether target belongs to same bundle/superbuild\n\n# script configuration code\n\n# script configuration file\n\n# language of source files\n\n# enable/disable compilation of script\n\n# whether to export target\n\n# whether the target is an auxiliary executable\n\n# whether the target is a test\n\n# documentation file of MEX-file\n\n# package component of build target\n\n# package component of the library component\n\n# package component of the runtime component\n\n# installation directory of library\n\n# output directory of generated header files\n\n# installation directory of library\n\n# installation directory of runtime\n\n# output directory for generated files\n\n# installation directory for generated files\n\n# Doxygen/Sphinx HTML output directory\n\n# Doxygen/Sphinx HTML installation directory\n\n# Sphinx HTML output directory\n\n# Sphinx HTML installation directory\n\n# Sphinx HTML output directory\n\n# Sphinx HTML installation directory\n\n# Sphinx linkcheck output directory\n\n# Sphinx linkcheck installation directory\n\n# Doxygen XML output directory\n\n# Doxygen XML installation directory\n\n# Doxygen/Sphinx MAN output directory\n\n# Doxygen/Sphinx MAN installation directory\n\n# Sphinx text output directory\n\n# Sphinx text installation directory\n\n# Sphinx Texinfo output directory\n\n# Sphinx Texinfo installation directory\n\n# Doxygen/Sphinx LaTeX output directory\n\n# Doxygen/Sphinx LaTeX installation directory\n\n# Doxygen/Sphinx PDF output directory\n\n# Doxygen/Sphinx PDF installation directory\n\n# Doxygen RTF output directory\n\n# Doxygen RTF installation directory\n\n# Doxygen configuration file\n\n# Doxygen output formats\n\n# Doxygen tag file\n\n# CMakeFiles build directory of target\n\n# Sphinx configuration directory\n\n# CMake build tree directory\n\n# CMake or Sphinx source directory\n\n# Sphinx builders\n",
        "Line" : 326,
        "CharPositionInLine" : 31
      },
      "26" : {
        "Text" : "# convert list of property names into regular expression\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## @brief Whether BASIS shall use target UIDs.\n\n#\n\n# If this option is OFF, target UIDs are idential to the target names\n\n# given as arguments to the \"basis_add_*\" functions.\n\n#\n\n# The target UIDs ensure that no name conflict between the targets\n\n# of this project and those of an external library which are imported\n\n# occurs. Another reason for using these target UIDs is to avoid\n\n# target name conflicts between modules or subprojects which may\n\n# be developed by different teams.\n\n#\n\n# The downside of using target UIDs is, however, a slower configuration\n\n# of the build system because every target name must be mapped to its\n\n# target UID and possibly vice versa. Moreover, the use of target UIDs\n\n# is less intuitive for those new to BASIS but experienced with CMake.\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## @brief Whether BASIS shall use fully-qualified target UIDs.\n\n#\n\n# If this option is OFF, the namespace of the top-level BASIS project is\n\n# not prepended to the actual CMake build target names.\n\n#\n\n# For example, instead of the fully-qualified target UID\n\n# \"@PROJECT_NAME_L@.target\", the CMake target name will simply\n\n# be \"target\". Only when the target is referenced from another project,\n\n# the fully-qualified target UID is usually required.\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## @brief Default component used for library targets when no component is specified.\n\n#\n\n# The default component a library target and its auxiliary files\n\n# are associated with if no component was specified, explicitly.\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## @brief Default component used for executables when no component is specified.\n\n#\n\n# The default component an executable target and its auxiliary files\n\n# are associated with if no component was specified, explicitly.\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## @brief Enable the automatic detection of the use of the BASIS utilities.\n\n#\n\n# If @c TRUE, the basis_add_executable() and basis_add_library() commands will try to\n\n# automatically detect whether a given executable or library makes use of the\n\n# BASIS utilities. If so, it configures the utilities for this project and adds\n\n# a respective library build target as well as a link dependency on this target.\n\n# This was the default until BASIS v3.1. Since this version, it is recommended\n\n# to either use the @c USE_BASIS_UTILITIES option of basis_add_executable() and\n\n# basis_add_library() or to add a link dependency on \"basis\" (recommended):\n\n#\n\n# @code\n\n# basis_add_executable(foo.cxx)\n\n# basis_target_link_libraries(foo basis)\n\n# @endcode\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## @brief Whether to always build the BASIS C++ utilities even if not required by any target\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## @brief Whether to always build the BASIS Python utilities even if not required by any target\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## @brief Whether to always build the BASIS Perl utilities even if not required by any target\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "## @brief Whether to always build the BASIS Bash utilities even if not required by any target\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "## @brief Whether to export targets by default.\n\n#\n\n# This global variable specifies the default for the export of build targets if the\n\n# @c EXPORT or @c NO_EXPORT options of the basis_add_executable and basis_add_library\n\n# commands are not given.\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "## @brief Whether to create \"<Package>Exports.cmake\" file so other projects can import the exported targets.\n\n#\n\n# @sa GenerateConfig.cmake, ExportTools.cmake, http://www.cmake.org/cmake/help/v2.8.12/cmake.html#command:export\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "## @brief Disable use of the revision information obtained from the revision\n\n#         control software such as Subversion or Git.\n\n#\n\n# If this option is @c TRUE, the revision information is not included in the\n\n# @c PROJECT_RELEASE information.\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "## @brief Enable compilation of scripts if supported by the language.\n\n#\n\n# In particular, Python modules are compiled if this option is enabled and\n\n# only the compiled modules are installed.\n\n#\n\n# @sa basis_add_script_target()\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "## @brief Enable the installation of scripted modules in site specific default directories.\n\n#\n\n# If this option is @c ON, scripted modules such as Python and Perl modules, in particular,\n\n# are installed in the default installation directories for site packages of the respective\n\n# interpreter. This means that these modules may be installed outside the installation\n\n# root directory as specified by the @c CMAKE_INSTALL_PREFIX. When this option is set to\n\n# @c OFF, all modules are installed in subdirectories of the @c CMAKE_INSTALL_PREFIX.\n\n# These directories may have to be added to the search path for modules manually as they\n\n# might not be in the default search path of the respective interpreter.\n\n#\n\n# The installation directories for public modules which are intended for external use\n\n# can further be set using the -D option of CMake or be modified by editing the respective\n\n# advanced CMake cache variables named <tt>INSTALL_&lt;LANG%gt;_SITE_DIR</tt>.\n\n#\n\n# @note Even though it is more convenient for the user of a package to have the modules\n\n#       being installed in the default directories, this option is set to @c OFF by default.\n\n#       The reasons are that it is in first place expected that the installation will copy\n\n#       files only to directories within the @c CMAKE_INSTALL_PREFIX. Moreover, it is not\n\n#       guaranteed that the user has write permissions for the default site packages directories.\n\n#       Last but not least, when installing public modules located in the @c PROJECT_LIBRARY_DIR\n\n#       source directory, BASIS does not set a default module @c PREFIX which reduces the risk\n\n#       of overwriting existing modules of other packages. If the developer of a BASIS package\n\n#       was not thorough enough and did not follow the guidelines, setting this option to @c ON\n\n#       has the potential risk of overwriting other packages' modules. Therefore,\n\n#       modules are only installed in system default locations if explicitly requested.\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "## @brief Script used to execute a process in CMake script mode.\n\n#\n\n# In order to be able to assign a timeout to the execution of a custom command\n\n# and to add some error message parsing, this script is used by some build\n\n# rules to actually perform the build step. See for example, the build of\n\n# executables using the MATLAB Compiler.\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "## @brief File used by default as <tt>--authors</tt> file to <tt>svn2cl</tt>.\n\n#\n\n# This file lists all Subversion users at SBIA and is used by default for\n\n# the mapping of Subversion user names to real names during the generation\n\n# of changelogs.\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "## @brief Force installation of public header files of BASIS C++ utilities.\n\n#\n\n# If this variable is set to FALSE, each header file in the @c PROJECT_INCLUDE_DIR\n\n# is scanned for an include statement which includes one of the public header\n\n# files of the BASIS C++ utilities. If such include statement was found in\n\n# a public header file of the project, the public header files of the BASIS\n\n# C++ utilities are also installed as the project's public header files depend\n\n# on them. You can set this variable to TRUE in the Settings.cmake file of your\n\n# project to force the installation of the public header files of the\n\n# project-specific BASIS C++ utilities.\n\n#\n\n# @sa basis_install_public_headers()\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "## @brief Whether BASIS should configure any public header file with the .in file name suffix.\n\n#\n\n# If a project does not contain any such public header file (typically one named config.h.in),\n\n# this option can be set to @c FALSE in the @c \"config/Settings.cmake\" file of the project.\n\n# For better performance, if only one header file needs to be configured, this can be done\n\n# manually by adding a corresponding configure_file() call to the root CMakeLists.txt file\n\n# right after basis_project_begin(). The configured files should be written to the\n\n# @c BINARY_INCLUDE_DIR which is located in the build tree of the project.\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "## @brief Whether basis_project_begin() should support the configuration of Slicer modules.\n\n#\n\n# This option must be set to @c TRUE in @c \"config/Settings.cmake\" of a project\n\n# which either itself or one of its modules is a 3D Slicer Extension.\n\n#\n\n# @sa http://www.slicer.org\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "## @brief Enable/disable registration of installed package in CMake registry.\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "## @brief EXPERIMENTAL - Build project modules as separate external projects.\n\n#\n\n# This may improve performance of the initial configure step but comes with the caveats\n\n# inherent to the superbuild approach as implemented by the ExternalProject module.\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# ============================================================================\n\n# programming language specific settings\n\n# ============================================================================\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "## @brief List of programming languages explicitly supported by BASIS.\n\n#\n\n# @todo Add full support for Java.\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# namespace delimiters\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "## @brief Namespace delimiter used in CMake.\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "## @brief Namespace delimiter used in C++.\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "## @brief Namespace delimiter used in Python.\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "## @brief Namespace delimiter used in Jython.\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "## @brief Namespace delimiter used in Perl.\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "## @brief Namespace delimiter used in MATLAB.\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "## @brief Namespace delimiter used in Bash.\n\n#\n\n# @note Bash itself has no concept of namespaces. This namespace delimiter is\n\n#       used by the import() function of the BASIS Utilities for Bash.\n\n#\n\n# @sa BasisBashUtilities\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# public libraries of script modules\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "## @brief Name of library target which builds Python modules in @c PROJECT_LIBRARY_DIR.\n\n#\n\n# This variable is used by basis_configure_script_libraries() which is called\n\n# by basis_project_begin() to add a library target of the given name for the\n\n# build of the Python modules found in the @c PROJECT_LIBRARY_DIR.\n\n#\n\n# @note The given target name is argument to the basis_add_library() command.\n\n#       Overwrite default value in Settings.cmake file of project if desired.\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "## @brief Name of library target which builds Jython modules in @c PROJECT_LIBRARY_DIR.\n\n#\n\n# This variable is used by basis_configure_script_libraries() which is called\n\n# by basis_project_begin() to add a library target of the given name for the\n\n# build of the Jython modules found in the @c PROJECT_LIBRARY_DIR.\n\n#\n\n# @note The given target name is argument to the basis_add_library() command.\n\n#       Overwrite default value in Settings.cmake file of project if desired.\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "## @brief Name of library target which builds Perl modules in @c PROJECT_LIBRARY_DIR.\n\n#\n\n# This variable is used by basis_configure_script_libraries() which is called\n\n# by basis_project_begin() to add a library target of the given name for the\n\n# build of the Perl modules found in the @c PROJECT_LIBRARY_DIR.\n\n#\n\n# @note The given target name is argument to the basis_add_library() command.\n\n#       Overwrite default value in Settings.cmake file of project if desired.\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "## @brief Name of library target which builds MATLAB modules in @c PROJECT_LIBRARY_DIR.\n\n#\n\n# This variable is used by basis_configure_script_libraries() which is called\n\n# by basis_project_begin() to add a library target of the given name for the\n\n# build of the MATLAB modules found in the @c PROJECT_LIBRARY_DIR.\n\n#\n\n# @note The given target name is argument to the basis_add_library() command.\n\n#       Overwrite default value in Settings.cmake file of project if desired.\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "## @brief Name of library target which builds Bash modules in @c PROJECT_LIBRARY_DIR.\n\n#\n\n# This variable is used by basis_configure_script_libraries() which is called\n\n# by basis_project_begin() to add a library target of the given name for the\n\n# build of the Bash modules found in the @c PROJECT_LIBRARY_DIR.\n\n#\n\n# @note The given target name is argument to the basis_add_library() command.\n\n#       Overwrite default value in Settings.cmake file of project if desired.\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# ============================================================================\n\n# documentation\n\n# ============================================================================\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "## @brief Advanced option to request build of documentation targets as part of ALL target.\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "## @brief Default Doxygen configuration.\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "## @brief Default Sphinx configuration.\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "## @brief Default Sphinx theme.\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "## @brief Default Sphinx theme options.\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#SHOW_RELBAR2   false\n\n#ROOT_RELLINKS  \"[('home', 'index')]\"\n",
        "Line" : 683,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# ============================================================================\n\n# common options\n\n# ============================================================================\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "## @brief Request verbose messages from BASIS functions.\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "## @brief Request debugging messages from BASIS functions.\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "## @brief Request configuration of software build only, skipping steps related to packaging and installation.\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# ============================================================================\n\n# build configuration\n\n# ============================================================================\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# the following Mac OS specific variables are yet not further used\n\n# hide them from the normal user, as they are usually not required (yet)\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "## @brief Whether to have BASIS set the RPATH of binaries rather than CMake\n\n#\n\n# @sa http://www.cmake.org/Wiki/CMake_RPATH_handling for details on how CMake\n\n#     itself handles the RPATH setting of executables and shared libraries.\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# use INSTALL_RPATH set by BASIS instead of CMake\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# use RPATH for installed project own binaries\n\n# do not add directories outside project to RPATH\n",
        "Line" : 736,
        "CharPositionInLine" : 48
      },
      "80" : {
        "Text" : "# use RPATH for project own binaries\n\n# use different RPATH for build tree executables\n",
        "Line" : 739,
        "CharPositionInLine" : 48
      },
      "81" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 82
    },
    "src/cmake/BasisTest.cmake" : {
      "ObjectId" : "db74a6b153a01ec447c061a2a573a20b2f24dda2",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisTest.cmake\n\n# @brief CTest configuration. Include this module instead of CTest.\n\n#\n\n# @note This module is included by basis_project_initialize().\n\n#\n\n# @ingroup CMakeAPI\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# configuration\n\n# ============================================================================\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## @brief Request build of tests.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include CTest module which enables testing, but prevent it from generating\n\n# any configuration file or adding targets yet as we want to adjust the\n\n# default CTest settings--in particular the site name--before\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# mark timeout option as advanced\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# custom CTest configuration\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# to avoid a Doxygen warning, we need to replace certain patterns used by\n\n# the basisproject tool to replace them with project related information\n\n#\n\n# Note: Do this only on the first pass, otherwise configure_file() will\n\n#       retrigger CMake every time b/c the modification timestamp of the\n\n#       source file is newer than the previously configured file.\n\n#       The use of the \"cmake -E copy_if_different\" command could be used\n\n#       here instead, but as we do not expect the CTestCustom.cmake.in\n\n#       file of the BASIS project template to change, it is sufficient\n\n#       to only check if we copied the template file already.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# configure the modified template file\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# ============================================================================\n\n# constants\n\n# ============================================================================\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @brief Names of recognized properties on tests.\n\n#\n\n# Unfortunately, the @c ARGV and @c ARGN arguments of a CMake function()\n\n# or macro() does not preserve values which themselves are lists. Therefore,\n\n# it is not possible to distinguish between property names and their values\n\n# in the arguments passed to basis_set_tests_properties().\n\n# To overcome this problem, this list specifies all the possible property names.\n\n# Everything else is considered to be a property value except the first argument\n\n# follwing right after the @c PROPERTIES keyword. Alternatively,\n\n# basis_set_property() can be used as here no disambiguity exists.\n\n#\n\n# @note Placeholders such as &lt;CONFIG&gt; are allowed. These are treated\n\n#       as the regular expression \"[^ ]+\". See basis_list_to_regex().\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#section_PropertiesonTests\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# convert list into regular expression\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ============================================================================\n\n# utilities\n\n# ============================================================================\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Disable testing if project does not implement any tests.\n\n#\n\n# This function checks if there are test/ subdirectories in the project and\n\n# disables and hides the BUILD_TESTING option if none are found.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set a property of the tests.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_tests_properties\">\n\n# set_tests_properties()</a> command.\n\n#\n\n# @note Due to a bug in CMake (http://www.cmake.org/Bug/view.php?id=12303),\n\n#       except of the first property given directly after the @c PROPERTIES keyword,\n\n#       only properties listed in @c BASIS_PROPERTIES_ON_TESTS can be set.\n\n#\n\n# @param [in] ARGN List of arguments for\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_tests_properties\">\n\n#                  set_tests_properties()</a>.\n\n#\n\n# @returns Sets the given properties of the specified test.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_tests_properties\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# convert test names to UIDs\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# remove PROPERTIES keyword\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# set tests properties\n\n#\n\n# Note: By iterating over the properties, the empty property values\n\n#       are correctly passed on to CMake's set_tests_properties()\n\n#       command, while\n\n#       set_tests_properties(${TEST_UIDS} PROPERTIES ${ARGN})\n\n#       (erroneously) discards the empty elements in ARGN.\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The following loop is only required b/c CMake's ARGV and ARGN\n\n# lists do not support arguments which are themselves lists.\n\n# Therefore, we need a way to decide when the list of values for a\n\n# property is terminated. Hence, we only allow known properties\n\n# to be set, except for the first property where the name follows\n\n# directly after the PROPERTIES keyword.\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# check property name\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# map test names to test UIDs\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# set target property\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# make sure that every property had a corresponding value\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get a property of the test.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_test_property\">\n\n# get_test_property()</a> command.\n\n#\n\n# @param [out] VAR       Property value.\n\n# @param [in]  TEST_NAME Name of test.\n\n# @param [in]  ARGN      Remaining arguments of\n\n#                        <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_test_property\">\n\n#                        get_test_property()</a>.\n\n#\n\n# @returns Sets @p VAR to the value of the requested property.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_test_property\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Create and add a test driver executable.\n\n#\n\n# @param [in] TESTDRIVER_NAME Name of the test driver.\n\n# @param [in] ARGN            List of source files implementing tests.\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# parse arguments\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# choose test driver implementation depending on which packages are available\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# create test driver source code\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# add test driver executable\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add test.\n\n#\n\n# This command is used similar to CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_test\">\n\n# add_test()</a> command. It adds a test to the\n\n# <a href=\"http://www.cmake.org/cmake/help/ctest-2-8-docs.html\">CTest</a>-based\n\n# testing system. Unlike CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_test\">\n\n# add_test()</a>, this command can, for convenience, implicitly add\n\n# the necessary executable build target to the build system. Therefore,\n\n# instead of the name of the executable command, specify the sources of the\n\n# test implementation. An executable build target is then added by this\n\n# function using basis_add_executable(), and the built executable is used\n\n# as test command. If the @p UNITTEST option is given, the necessary unit\n\n# testing libraries which are part of the BASIS installation are added as\n\n# link dependencies as well as the default implementation of the main()\n\n# function if none of the specified source files has the suffix\n\n# <tt>-main</tt> or <tt>_main</tt> in the file name.\n\n#\n\n# Generator expressions as supported by CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_test\">\n\n# add_test()</a> command are also supported by basis_add_test() as arguments of\n\n# the test command. For the argument specifying the test command itself, however,\n\n# only the generator expression $<TARGET_FILE:tgt> is allowed. Alternatively,\n\n# for this special argument, the name of the executable target can be supplied\n\n# directly without the use of the $<TARGET_FILE:tgt> generator expression.\n\n# See documentation of basis_process_generator_expressions() for details on\n\n# the supported generator expressions.\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_test (COMMAND $<TARGET_FILE:basis.testdriver> $<TARGET_FILE:myexe> ...)\n\n# basis_add_test (COMMAND basis.testdriver $<TARGET_FILE:myexe> ...)\n\n# @endcode\n\n#\n\n# @param [in] TEST_NAME Name of the test. If a source file is given\n\n#                       as first argument, the test name is derived\n\n#                       from the name of this source file and the source\n\n#                       file is added to the list of sources which implement\n\n#                       the test command.\n\n# @param [in] ARGN      The following parameters are parsed:\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b COMMAND cmd [arg1 [arg2 ...]] @endtp\n\n#     <td>The command to execute and optionally its arguments. The command\n\n#         can be the name of an executable target (including imported targets),\n\n#         or the name or path of an executable. Alternatively,\n\n#         a test can be build from sources and the build executable\n\n#         used as command. In this case, specify the sources using the\n\n#         @p SOURCES argument. The command name @c cmd if given is used as\n\n#         output name of the built executable. If you do not want to\n\n#         specify the name of the output executable explicitly, but have\n\n#         it derived from the @p TEST_NAME, do not specify the @p COMMAND\n\n#         option and use the @p ARGS option instead to only specify the\n\n#         arguments of the test command.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b ARGS arg1 [arg2 ...] @endtp\n\n#     <td>Arguments of the test command. If this option is given, the\n\n#         specified arguments are appended to the arguments specified\n\n#         already as part of the @p COMMAND option, if any.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b WORKING_DIRECTORY dir @endtp\n\n#     <td>The working directory of the test command. The generator expression\n\n#         $<TARGET_FILE_DIR:tgt> can be used to specify a working directory\n\n#         which corresponds to the output directory of a given target file.\n\n#         Default: @c TESTING_OUTPUT_DIR / @p TEST_NAME. </td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b CONFIGURATIONS @endtp\n\n#     <td>If a CONFIGURATIONS option is given then the test will be executed\n\n#         only when testing under one of the named configurations.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SOURCES file1 [file2 ...] @endtp\n\n#     <td>The source files of the test. Use the @p UNITTEST option to specify\n\n#         that the sources are an implementation of a unit test. In this case,\n\n#         the default implementation of the main() function is added to the\n\n#         build of the test executable. However, if this list contains a\n\n#         file with the suffix <tt>-main</tt> or <tt>_main</tt> in the name,\n\n#         the default implementation of the main() function is not used.\n\n#         See the documentation of the @p UNITTEST option for further details.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LINK_DEPENDS file1|target1 [file2|target2 ...] @endtp\n\n#     <td>Link dependencies of test executable build from sources.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_DEFAULT_MAIN @endtp\n\n#     <td>Force that the implementation of the default main() function\n\n#         is not added to unit tests even if neither of the given source\n\n#         files has the suffix <tt>-main</tt> or <tt>_main</tt> in the\n\n#         file name.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b UNITTEST @endtp\n\n#     <td>Specifies that the test is a unit test. In this case, the test\n\n#         implementation is linked to the default unit testing framework\n\n#         for the used programming language which is part of the BASIS\n\n#         installation.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b WITH_EXT @endtp\n\n#     <td>Do not strip extension if test name is derived from source file name.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b ARGN @endtp\n\n#     <td>All other arguments are passed on to basis_add_executable() if\n\n#         an executable target for the test is added.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds build target for test executable if test source files\n\n#          are given and/or adds a CTest test which executes the given\n\n#          test command.\n\n#\n\n# @sa basis_process_generator_expressions()\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_test\n\n#\n\n# @todo Make use of ExternalData module to fetch remote test data.\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# parse arguments\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# test name\n",
        "Line" : 498,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# pass on to basis_add_executable()\n",
        "Line" : 504,
        "CharPositionInLine" : 53
      },
      "34" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# build test executable\n",
        "Line" : 521,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add test\n",
        "Line" : 561,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# especially in case of C++ unit tests, if the linkage of the tests is done\n\n# incorrectly, no tests are actually run and the unit test passes\n\n# therefore, add this fail regular expression to identify such issues\n",
        "Line" : 613,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add tests of default options for given executable.\n\n#\n\n# @par Default options:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp <b>--helpshort</b> @endtp\n\n#     <td>Short help. The output has to match the regular expression\n\n#         \"[Uu]sage:\\n\\s*\\<executable name\\>\", where \\<executable name\\>\n\n#         is the name of the tested executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b>--help, -h</b> @endtp\n\n#     <td>Help screen. Simply tests if the option is accepted.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b>--version</b> @endtp\n\n#     <td>Version information. Output has to include the project version string.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b>--verbose, -v</b> @endtp\n\n#     <td>Increase verbosity of output messages. Simply tests if the option is accepted.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @param [in] TARGET_NAME Name of executable or script target.\n\n#\n\n# @returns Adds tests for the default options of the specified executable.\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# get executable name\n",
        "Line" : 658,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# get absolute path to executable\n",
        "Line" : 673,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# executable command\n",
        "Line" : 676,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# test option: -v\n",
        "Line" : 679,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# test option: --version\n",
        "Line" : 688,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# test option: -h\n",
        "Line" : 697,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# test option: --help\n",
        "Line" : 700,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# test option: --helpshort\n",
        "Line" : 703,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "src/cmake/BasisTools.cmake" : {
      "ObjectId" : "8fc5e29595b5f3b88489186c7ec56656c4ea9c6d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  BasisTools.cmake\n\n# @brief Definition of functions and macros used by BASIS project.\n\n#\n\n# This is the main module that is included by BASIS projects. Most of the other\n\n# BASIS CMake modules are included by this main module and hence do not need\n\n# to be included separately. In particular, all CMake modules which are part\n\n# of BASIS and whose name does not include the prefix \"Basis\" are not\n\n# supposed to be included directly by a project that makes use of BASIS.\n\n# Only the modules with the prefix \"Basis\" should be included directly.\n\n#\n\n# @ingroup CMakeAPI\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include guard\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# append CMake module path of BASIS to CMAKE_MODULE_PATH\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# externally developed modules\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ExternalData.cmake module - yet only part of ITK, not CMake\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# the module for the topological sort of modules according to their\n\n# inter-dependencies was copied from the ITK v4 project\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# BASIS modules\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/CMakeLists.txt" : {
      "ObjectId" : "4d3217dd1075e1c7a9af6e67baab71be1d38ed34",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of CMake modules and utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# modules\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# main modules\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# packaging, wraps CPack\n\n# definition of macros and functions\n\n# testing, wraps CTest\n\n# default project-independent settings\n",
        "Line" : 20,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "# submodules included by BasisTools.cmake or on demand, respectively\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# common functions/macros\n\n# project directory structure\n\n# documentation generation\n\n# exporting targets\n\n# storing data externally\n\n# config of ExternalData.cmake module\n\n# importing targets\n\n# script interpreter tools\n\n# software installation\n\n# MATLAB support\n\n# main project/module helpers\n\n# revision control system support\n\n# support build of Slicer Extensions\n\n# super-build related functions\n\n# addition of build target\n\n# topological sorting of build dependencies\n\n# generation/configuration of utilities\n",
        "Line" : 25,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# auxiliary files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# API documentation\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# default Doxygen configuration template\n\n# documentation of BASIS modules groups\n\n# documentation of BASIS Utilities group\n\n# documentation of C++ Utilities group\n\n# documentation of Java Utilities group\n\n# documentation of Python Utilities group\n\n# documentation of Perl Utilities group\n\n# documentation of BASH Utilities group\n\n# documentation of MATLAB Utilities group\n",
        "Line" : 49,
        "CharPositionInLine" : 42
      },
      "10" : {
        "Text" : "# package configuration\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# default <Pkg>Config.cmake template\n\n# default <Pkg>Config.cmake template for modules\n\n# settings for default <Pkg>Config.cmake\n\n# default <Pkg>ConfigVersion.cmake template\n\n# default <Pkg>Use.cmake template\n\n# default <Pkg>Use.cmake template for modules\n\n# generation/configuration of <Pkg>Config.cmake et al.\n",
        "Line" : 59,
        "CharPositionInLine" : 42
      },
      "12" : {
        "Text" : "# documentation generation\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# default HTML header of Doxygen documentation\n\n# default HTML footer of Doxygen documentation\n\n# default HTML extra stylesheet of Doxygen documentation\n\n# default Sphinx configuration\n\n# custom \"make\" script for PDF generation\n",
        "Line" : 67,
        "CharPositionInLine" : 42
      },
      "14" : {
        "Text" : "# other\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# get build timestamp on Windows\n\n# check if header files were added/removed\n\n# uninstall script\n\n# used to configure (\"build\") script files\n\n# used to configure public header files\n\n# documents project directory structure\n\n# wraps Doxygen filter command on Windows\n\n# wraps CMake's execute_process() function\n\n# build command for alternative build of MCC targets\n\n# auxiliary script to determine site-packages directory\n\n# used to glob for source files\n\n# default script configuration file\n\n# used to postprocess generated ChangeLog\n\n# default project-dependent settings\n\n# helper used by BasisUpdate.cmake module\n",
        "Line" : 73,
        "CharPositionInLine" : 42
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Find<Pkg>.cmake modules\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# install files\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Attention: DO NOT add the uninstall subdirectory here! Instead, the\n\n#            CMakeLists.txt file is installed in a separate directory.\n\n#            This directory is added to the build configuration of each\n\n#            BASIS project (including BASIS) at the end of basis_project_end().\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# make sure that we did not forget to install a file... very easy to forget!\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "src/cmake/CheckPublicHeaders.cmake" : {
      "ObjectId" : "ceff6a838a6ead33b1811f44cde0c93ce0c50a0d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CheckPublicHeaders.cmake\n\n# @brief CMake script used to check whether public headers were added/removed.\n\n#\n\n# This script removes the deprecated public headers from the build tree and\n\n# then throws a fatal error if public header files were added or removed to\n\n# the project.\n\n#\n\n# @ingroup CMakeUtilities\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# check arguments\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# compare files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# remove obsolete public headers\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: this hard coded /include path may break for custom include directories\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# remove files if different\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# fatal error if files added/removed\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/CommonTools.cmake" : {
      "ObjectId" : "3b311e86e8228a6488227fabb54b5e637c05d764",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Carnegie Mellon University\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CommonTools.cmake\n\n# @brief Definition of common CMake functions.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# find other packages\n\n# ============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Overloaded find_package() command.\n\n#\n\n# This macro calls CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:find_package\">\n\n# find_package()</a> command and converts obsolete all uppercase \"<PKG>_<VAR>\"\n\n# variables to case-sensitive \"<Pkg>_<VAR>\" variables.\n\n# It further ensures that the global variables CMAKE_FIND_LIBRARY_SUFFIXES\n\n# and CMAKE_FIND_EXECUTABLE_SUFFIX are reset to the values they had before\n\n# the call to find_package(). This is required if the \"Find<Pkg>.cmake\" module\n\n# has modified these variables, but not restored their initial value.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# attention: find_package() can be recursive. Hence, use \"stack\" to keep\n\n#            track of library suffixes. Further note that we need to\n\n#            maintain a list of lists, which is not supported by CMake.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# map obsolete <PKG>_* variables to case-sensitive <Pkg>_*\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# restore CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# restore CMAKE_FIND_EXECUTABLE_SUFFIX\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Tokenize dependency specification.\n\n#\n\n# This function parses a dependency specification such as\n\n# \"ITK-4.1{TestKernel,IO}\" into the package name, i.e., ITK, the requested\n\n# (minimum) package version, i.e., 4.1, and a list of package components, i.e.,\n\n# TestKernel and IO. A valid dependency specification must specify the package\n\n# name of the dependency (case-sensitive). The version and components\n\n# specification are optional. Note that the components specification may\n\n# be separated by an arbitrary number of whitespace characters including\n\n# newlines. The same applies to the specification of the components themselves.\n\n# This allows one to format the dependency specification as follows, for example:\n\n# @code\n\n# ITK {\n\n#   TestKernel,\n\n#   IO\n\n# }\n\n# @endcode\n\n#\n\n# @param [in]  DEP Dependency specification, i.e., \"<Pkg>[-<version>][{<Component1>[,...]}]\".\n\n# @param [out] PKG Package name.\n\n# @param [out] VER Package version.\n\n# @param [out] CMP List of package components.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Find external software package or other project module.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:find_package\">\n\n# find_package()</a> command and extends its functionality.\n\n# In particular, if the given package name is the name of another module\n\n# of this project (the top-level project), it ensures that this module is\n\n# found instead of an external package.\n\n#\n\n# If the package is found, but only optionally used, i.e., the @c REQUIRED\n\n# argument was not given to this macro, a <tt>USE_&lt;Pkg&gt;</tt> option is\n\n# added by this macro which is by default @c ON. This option can be set to\n\n# @c OFF by the user in order to force the <tt>&lt;Pkg&gt;_FOUND</tt> variable\n\n# to be set to @c FALSE again even if the package was found. This allows the\n\n# user to specify which of the optional dependencies should actually not be\n\n# used for the build of the software even though these packages are installed\n\n# on their system.\n\n#\n\n# @param [in] PACKAGE Name of other package. Optionally, the package name\n\n#                     can include a version specification as suffix which\n\n#                     is separated by the package name using a dash (-), i.e.,\n\n#                     &lt;Package&gt;[-major[.minor[.patch[.tweak]]]].\n\n#                     If a version specification is given, it is passed on as\n\n#                     @c version argument to CMake's\n\n#                     <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:find_package\">\n\n#                     find_package()</a> command.\n\n# @param [in] ARGN    Advanced arguments for\n\n#                     <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:find_package\">\n\n#                     find_package()</a>.\n\n#\n\n# @retval <PACKAGE>_FOUND Whether the given package was found.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:find_package\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# parse arguments\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# tokenize dependency specification\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# preserve <PKG>_DIR variable which might get reset if different versions\n\n# of the package are searched or if package is optional and deselected\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# some debugging output\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# find other modules of same project\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# allow modules to specify top-level project as dependency\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# look for other module of top-level project\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# find bundled packages\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# otherwise, look for external package\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# make <PKG>_DIR variable visible in GUI by caching it if not done yet\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# determine if additional components of found package should be discovered\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# look for external package if not found or additional components needed\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# used to decide what the intersection of\n\n# of multiple find invocations for the same\n\n# package with different components will be\n",
        "Line" : 283,
        "CharPositionInLine" : 44
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# reset other <PKG>[_-]* variables if <PKG>_DIR changed\n",
        "Line" : 286,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# internal _<PKG>_DIR cache entry set below\n",
        "Line" : 288,
        "CharPositionInLine" : 38
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# hide or show already defined <PKG>_DIR cache entry\n",
        "Line" : 313,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# find external packages\n",
        "Line" : 322,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# circumvent issue with CMake's find_package() interpreting these variables\n\n# relative to the current binary directory instead of the top-level directory\n",
        "Line" : 327,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# moreover, users tend to specify the installation prefix instead of the\n\n# actual directory containing the package configuration file\n",
        "Line" : 333,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# now look for the package\n",
        "Line" : 338,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# if Find<Pkg>.cmake prints status message, don't do it here\n",
        "Line" : 352,
        "CharPositionInLine" : 10
      },
      "32" : {
        "Text" : "# set common <Pkg>_VERSION_STRING variable if possible and not set\n",
        "Line" : 368,
        "CharPositionInLine" : 10
      },
      "33" : {
        "Text" : "# verbose output of information about found package\n",
        "Line" : 386,
        "CharPositionInLine" : 10
      },
      "34" : {
        "Text" : "# remember which components where found already\n",
        "Line" : 402,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# if previously components of this package where found and the additional\n\n# components are only optional, set <PKG>_FOUND to TRUE again\n",
        "Line" : 410,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# reset <PKG>_DIR variable for possible search of different package version\n",
        "Line" : 416,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# remember current/previous <PKG>_DIR\n\n# (used above to reset other <PKG>_* variables whenever <PKG>_DIR changed)\n",
        "Line" : 421,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# provide option which allows users to disable use of optional packages\n",
        "Line" : 428,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# unset locally used variables\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Use found package.\n\n#\n\n# This macro includes the package's use file if the variable @c &lt;Pkg&gt;_USE_FILE\n\n# is defined. Otherwise, it adds the include directories to the search path\n\n# for include paths if possible. Therefore, the corresponding package\n\n# configuration file has to set the proper CMake variables, i.e.,\n\n# either @c &lt;Pkg&gt;_INCLUDES, @c &lt;Pkg&gt;_INCLUDE_DIRS, or @c &lt;Pkg&gt;_INCLUDE_DIR.\n\n#\n\n# If the given package name is the name of another module of this project\n\n# (the top-level project), this function includes the use file of the specified\n\n# module.\n\n#\n\n# @note As some packages still use all captial variables instead of ones\n\n#       prefixed by a string that follows the same capitalization as the\n\n#       package's name, this function also considers these if defined instead.\n\n#       Hence, if @c &lt;PKG&gt;_INCLUDES is defined, but not @c &lt;Pkg&gt;_INCLUDES, it\n\n#       is used in place of the latter.\n\n#\n\n# @note According to an email on the CMake mailing list, it is not a good idea\n\n#       to use basis_link_directories() any more given that the arguments to\n\n#       basis_target_link_libraries() are absolute paths to the library files.\n\n#       Therefore, this code is commented and not used. It remains here as a\n\n#       reminder only.\n\n#\n\n# @param [in] PACKAGE Name of other package. Optionally, the package name\n\n#                     can include a version specification as suffix which\n\n#                     is separated by the package name using a dash (-), i.e.,\n\n#                     &lt;Package&gt;[-major[.minor[.patch[.tweak]]]].\n\n#                     A version specification is simply ignored by this macro.\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# tokenize package specification\n",
        "Line" : 483,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# use package\n",
        "Line" : 485,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# ignore BASIS as module dependency\n\n# important if BASIS itself is a project module\n",
        "Line" : 492,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# allow modules to specify top-level project as dependency\n",
        "Line" : 499,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# instead of return()\n",
        "Line" : 504,
        "CharPositionInLine" : 17
      },
      "46" : {
        "Text" : "# use other module of top-level project\n",
        "Line" : 505,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "# instead of return()\n",
        "Line" : 514,
        "CharPositionInLine" : 21
      },
      "48" : {
        "Text" : "# if this package is an external project, i.e., a project build as part\n\n# of the same superbuild as this project, set BUNDLE_PROJECT to TRUE.\n\n# it is used by (basis_)link_directories() and add_library() to mark\n\n# the imported link directories and target as belonging to the same\n\n# installation. this is in particular important for the RPATH settings.\n\n# whether this package is an external project or not, is decided by the\n\n# BUNDLE_PROJECTS variable which must be set using the -D option of\n\n# cmake to a list naming all the other packages which are part of the\n\n# superbuild.\n",
        "Line" : 523,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# use external package\n",
        "Line" : 541,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# use package only if basis_use_package() not invoked before\n",
        "Line" : 543,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# OpenCV\n",
        "Line" : 563,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# the cv.h may be found as part of PerlLibs, the include path of\n\n# which is added at first by BASISConfig.cmake\n",
        "Line" : 565,
        "CharPositionInLine" : 10
      },
      "53" : {
        "Text" : "# generic\n",
        "Line" : 572,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# reset switch that identifies currently imported targets and link directories\n\n# as belonging to an external project which is part of the same superbuild\n",
        "Line" : 592,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# ============================================================================\n\n# basis_get_filename_component / basis_get_relative_path\n\n# ============================================================================\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Fixes CMake's\n\n#         <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_filename_component\">\n\n#         get_filename_component()</a> command.\n\n#\n\n# The get_filename_component() command of CMake returns the entire portion\n\n# after the first period (.) [including the period] as extension. However,\n\n# only the component following the last period (.) [including the period]\n\n# should be considered to be the extension.\n\n#\n\n# @note Consider the use of the basis_get_filename_component() macro as\n\n#       an alias to emphasize that this function is different from CMake's\n\n#       <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_filename_component\">\n\n#       get_filename_component()</a> command.\n\n#\n\n# @todo Fix issue http://public.kitware.com/Bug/view.php?id=15743 which\n\n#       affects also basis_get_relative_path.\n\n#\n\n# @param [in,out] ARGN Arguments as accepted by get_filename_component().\n\n#\n\n# @returns Sets the variable named by the first argument to the requested\n\n#          component of the given file path.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_filename_component\n\n# @sa basis_get_filename_component()\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Alias for the overwritten get_filename_component() function.\n\n#\n\n# @sa get_filename_component()\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get path relative to a given base directory.\n\n#\n\n# Unlike the file(RELATIVE_PATH ...) command of CMake which if @p PATH and\n\n# @p BASE are the same directory returns an empty string, this function\n\n# returns a dot (.) in this case instead.\n\n#\n\n# @param [out] REL  @c PATH relative to @c BASE.\n\n# @param [in]  BASE Path of base directory. If a relative path is given, it\n\n#                   is made absolute using basis_get_filename_component()\n\n#                   with ABSOLUTE as last argument.\n\n# @param [in]  PATH Absolute or relative path. If a relative path is given\n\n#                   it is made absolute using basis_get_filename_component()\n\n#                   with ABSOLUTE as last argument.\n\n#\n\n# @returns Sets the variable named by the first argument to the relative path.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:file\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Attention: http://public.kitware.com/Bug/view.php?id=15743\n",
        "Line" : 698,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "## @brief Create a string from a list of variables indicating if they are defined and their values.\n\n#\n\n# Useful for debug and user errors, for example:\n\n# @code\n\n# set(VAR1 \"I'm a string\")\n\n# set(VAR2 2)\n\n# basis_variable_value_status(VAR_INFO_STRING VAR1 VAR2 VAR3)\n\n# message(STATUS ${VAR_INFO_STRING})\n\n# @endcode\n\n#\n\n# @param[out] VAR_INFO_STRING The output string variable that will set with the debug string.\n\n# @param[in]  ARGN            List of variables to be put into a string along with their value.\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "## @brief Checks for a list of variables required later in the script.\n\n#\n\n# Produces a clear error message explaining the problem and how to fix it if they are not present.\n\n#\n\n# @code\n\n# basis_variable_check(\n\n#    REQUIRED\n\n#       LIBRARY1_INCLUDE_DIRS\n\n#       LIBRARY2_INCLUDE_DIRS\n\n#       LIBRARY2_LIBRARIES\n\n#    OPTIONAL\n\n#       LIBRARY3_INCLUDE_DIRS\n\n#       LIBRARY3_LIBRARIES\n\n#    OPTIONAL_PATH\n\n#       \n\n# )\n\n# @endcode\n\n#\n\n# @param [in] ARGN This argument list is parsed and the following\n\n#                  arguments are extracted.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b REQUIRED var... @endtp\n\n#     <td>List of variables that MUST be set to run this script correctly. \n\n#         Will produce a FATAL_ERROR message explaining which variables \n\n#         are misisng and exit the cmake script.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OPTIONAL var... @endtp\n\n#     <td>List of variables need not be set to run this script correctly.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PATH_EXISTS var... @endtp\n\n#     <td>List of path variables that MUST be set to a location that exists.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OPTIONAL_PATH_EXISTS var... @endtp\n\n#     <td>List of path variables that are optional, but once set must be empty\n\n#         or provide a path to location that exists.</td>\n\n#   </tr>\n\n# </table>\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# currently none\n",
        "Line" : 782,
        "CharPositionInLine" : 16
      },
      "63" : {
        "Text" : "# currently none\n",
        "Line" : 783,
        "CharPositionInLine" : 21
      },
      "64" : {
        "Text" : "#-------------------------------------------\n\n# Create the error strings for missing REQUIRED variables\n",
        "Line" : 788,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "#-------------------------------------------\n\n# Create and print the warning strings for missing OPTIONAL variables\n",
        "Line" : 802,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "#-------------------------------------------\n\n# Create the error strings for missing or nonexistant REQUIRED PATH variables\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "#-------------------------------------------\n\n# Create the error strings for missing or nonexistant OPTIONAL PATH variables\n",
        "Line" : 833,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# add VARIABLE_NAME to error list if a nonempty path is defined, but does not point to a real location\n",
        "Line" : 838,
        "CharPositionInLine" : 7
      },
      "69" : {
        "Text" : "#debug:\n\n#message(STATUS \"MISSING_OPTIONAL_PATH_EXISTS: ${MISSING_OPTIONAL_PATH_EXISTS}\")\n\n#message(STATUS \"MISSING_OPTIONAL_PATH_EXISTS_STATUS: ${MISSING_OPTIONAL_PATH_EXISTS_STATUS}\")\n",
        "Line" : 844,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "#-------------------------------------------\n\n# Print all fatal errors at once, because the script will halt\n",
        "Line" : 850,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# ============================================================================\n\n# name / version\n\n# ============================================================================\n",
        "Line" : 860,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Convert string to lowercase only or mixed case.\n\n#\n\n# Strings in all uppercase or all lowercase are converted to all lowercase\n\n# letters because these are usually used for acronymns. All other strings\n\n# are returned unmodified with the one exception that the first letter has\n\n# to be uppercase for mixed case strings.\n\n#\n\n# This function is in particular used to normalize the project name for use\n\n# in installation directory paths and namespaces.\n\n#\n\n# @param [out] OUT String in CamelCase.\n\n# @param [in]  STR String.\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# strings in all uppercase or all lowercase such as acronymns are an\n\n# exception and shall be converted to all lowercase instead\n",
        "Line" : 878,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# change first letter to uppercase\n",
        "Line" : 884,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Extract version numbers from version string.\n\n#\n\n# @param [in]  VERSION Version string in the format \"MAJOR[.MINOR[.PATCH]]\".\n\n# @param [out] MAJOR   Major version number if given or 0.\n\n# @param [out] MINOR   Minor version number if given or 0.\n\n# @param [out] PATCH   Patch number if given or 0.\n\n#\n\n# @returns See @c [out] parameters.\n",
        "Line" : 892,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# ============================================================================\n\n# set\n\n# ============================================================================\n",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set flag given mutually exclusive\n\n#         ARGN_&lt;FLAG&gt; and ARGN_NO&lt;FLAG&gt; function arguments.\n\n#\n\n# @param [in]  PREFIX  Prefix of function arguments. Set to the first argument\n\n#                      of the CMAKE_PARSE_ARGUMENTS() command.\n\n# @param [out] FLAG    Name of flag.\n\n# @param [in]  DEFAULT Default flag value if neither <tt>ARGN_&lt;FLAG;gt;</tt>\n\n#                      nor <tt>ARGN_NO&lt;FLAG;gt;</tt> evaluates to true.\n",
        "Line" : 934,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Determine if cache entry exists.\n\n#\n\n# @param [out] VAR   Name of boolean result variable.\n\n# @param [in]  ENTRY Name of cache entry.\n",
        "Line" : 956,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set type of variable.\n\n#\n\n# If the variable is cached, the type is updated, otherwise, a cache entry\n\n# of the given type with the current value of the variable is added.\n\n#\n\n# @param [in] VAR  Name of variable.\n\n# @param [in] TYPE Desired type of variable.\n\n# @param [in] ARGN Optional DOC string used if variable was not cached before.\n",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Change type of cached variable.\n\n#\n\n# If the variable is not cached, nothing is done.\n",
        "Line" : 988,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set variable value.\n\n#\n\n# If the variable is cached, this function will update the cache value,\n\n# otherwise, it simply sets the CMake variable uncached to the given value(s).\n",
        "Line" : 1000,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Update cache variable.\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set value of variable only if variable is not set already.\n\n#\n\n# @param [out] VAR  Name of variable.\n\n# @param [in]  ARGN Arguments to set() command excluding variable name.\n\n#\n\n# @returns Sets @p VAR if its value was not valid before.\n",
        "Line" : 1029,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set value of variable only if variable is not defined yet.\n\n#\n\n# @param [out] VAR  Name of variable.\n\n# @param [in]  ARGN Arguments to set() command excluding variable name.\n\n#\n\n# @returns Sets @p VAR if it was not defined before.\n",
        "Line" : 1042,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set path relative to script file.\n\n#\n\n# This function can be used in script configurations. It takes a variable\n\n# name and a path as input arguments. If the given path is relative, it makes\n\n# it first absolute using @c PROJECT_SOURCE_DIR. Then the path is made\n\n# relative to the directory of the built script file. A CMake variable of the\n\n# given name is set to the specified relative path. Optionally, a third\n\n# argument, the path used for building the script for the install tree\n\n# can be passed as well. If a relative path is given as this argument,\n\n# it is made absolute by prefixing it with @c CMAKE_INSTALL_PREFIX instead.\n\n#\n\n# @note This function may only be used in script configurations such as\n\n#       in particular the ScriptConfig.cmake.in file. It requires that the\n\n#       variables @c __DIR__ and @c BUILD_INSTALL_SCRIPT are set properly.\n\n#       These variables are set by the configure_script() function.\n\n#       Moreover, it makes use of the global @c CMAKE_INSTALL_PREFIX and\n\n#       @c PROJECT_SOURCE_DIR variables.\n\n#\n\n# @param [out] VAR   Name of the variable.\n\n# @param [in]  PATH  Path to directory or file.\n\n# @param [in]  ARGV3 Path to directory or file inside install tree.\n\n#                    If this argument is not given, PATH is used for both\n\n#                    the build and install tree version of the script.\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 1055,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# ============================================================================\n\n# set/get any property\n\n# ============================================================================\n",
        "Line" : 1107,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Convert list into regular expression.\n\n#\n\n# This function is in particular used to convert a list of property names\n\n# such as &lt;CONFIG&gt;_OUTPUT_NAME, e.g., the list @c BASIS_PROPERTIES_ON_TARGETS,\n\n# into a regular expression which can be used in pattern matches.\n\n#\n\n# @param [out] REGEX Name of variable for resulting regular expression.\n\n# @param [in]  ARGN  List of patterns which may contain placeholders in the\n\n#                    form of \"<this is a placeholder>\". These are replaced\n\n#                    by the regular expression \"[^ ]+\".\n",
        "Line" : 1111,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Output current CMake variables to file.\n",
        "Line" : 1128,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# sanitize value for use in set() command\n",
        "Line" : 1136,
        "CharPositionInLine" : 6
      },
      "90" : {
        "Text" : "# escape backspaces\n\n# escape double quotes\n",
        "Line" : 1137,
        "CharPositionInLine" : 52
      },
      "91" : {
        "Text" : "# Escape ${VAR} by \\${VAR} such that CMake does not evaluate it.\n\n# Escape $STR{VAR} by \\$STR{VAR} such that CMake does not report a\n\n# syntax error b/c it expects either ${VAR}, $ENV{VAR}, or $CACHE{VAR}.\n\n# Escape @VAR@ by \\@VAR\\@ such that CMake does not evaluate it.\n",
        "Line" : 1139,
        "CharPositionInLine" : 6
      },
      "92" : {
        "Text" : "# append variable to output file\n",
        "Line" : 1145,
        "CharPositionInLine" : 6
      },
      "93" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Write CMake script file which sets the named variable to the\n\n#         specified (list of) values.\n",
        "Line" : 1152,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set a named property in a given scope.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_property\">\n\n# set_property()</a> command.\n\n#\n\n# @param [in] SCOPE The argument for the @p SCOPE parameter of\n\n#                   <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_property\">\n\n#                   set_property()</a>.\n\n# @param [in] ARGN  Arguments as accepted by.\n\n#                   <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_property\">\n\n#                   set_property()</a>.\n\n#\n\n# @returns Sets the specified property.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_property\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# map target/test names to UIDs\n",
        "Line" : 1185,
        "CharPositionInLine" : 6
      },
      "96" : {
        "Text" : "# after insert to avoid index out of range\n",
        "Line" : 1211,
        "CharPositionInLine" : 39
      },
      "97" : {
        "Text" : "# property name matches DEPENDS\n",
        "Line" : 1219,
        "CharPositionInLine" : 6
      },
      "98" : {
        "Text" : "# after insert to avoid index out of range\n",
        "Line" : 1231,
        "CharPositionInLine" : 39
      },
      "99" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get a property.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_property\">\n\n# get_property()</a> command.\n\n#\n\n# @param [out] VAR     Property value.\n\n# @param [in]  SCOPE   The argument for the @p SCOPE argument of\n\n#                      <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_property\">\n\n#                      get_property()</a>.\n\n# @param [in]  ELEMENT The argument for the @p ELEMENT argument of\n\n#                      <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_property\">\n\n#                      get_property()</a>.\n\n# @param [in]  ARGN    Arguments as accepted by\n\n#                      <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_property\">\n\n#                      get_property()</a>.\n\n#\n\n# @returns Sets @p VAR to the value of the requested property.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_property\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 1248,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set project-global property.\n\n#\n\n# Set property associated with current project/module. The property is in\n\n# fact just a cached variable whose name is prefixed by the project's name.\n",
        "Line" : 1287,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# remove property name from values\n",
        "Line" : 1309,
        "CharPositionInLine" : 35
      },
      "102" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get project-global property value.\n\n#\n\n# Example:\n\n# @code\n\n# basis_get_project_property(TARGETS)\n\n# basis_get_project_property(TARGETS ${PROJECT_NAME})\n\n# basis_get_project_property(TARGETS ${PROJECT_NAME} TARGETS)\n\n# basis_get_project_property(TARGETS PROPERTY TARGETS)\n\n# @endcode\n\n#\n\n# @param [out] VARIABLE Name of result variable.\n\n# @param [in]  ARGN     See the example uses. The optional second argument\n\n#                       is either the name of the project similar to CMake's\n\n#                       get_target_property() command or the keyword PROPERTY\n\n#                       followed by the name of the property.\n",
        "Line" : 1327,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# ============================================================================\n\n# list / string manipulations\n\n# ============================================================================\n",
        "Line" : 1367,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Sanitize string variable for use in regular expression.\n\n#\n\n# @note This function may not work for all cases, but is used in particular\n\n#       to sanitize project names, target names, namespace identifiers,...\n\n#\n\n#       This takes all of the dollar signs, and other special characters and\n\n#       adds escape characters such as backslash as necessary.\n\n#\n\n# @param [out] OUT String that can be used in regular expression.\n\n# @param [in]  STR String to sanitize.\n",
        "Line" : 1371,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Concatenates all list elements into a single string.\n\n#\n\n# The list elements are concatenated without any delimiter in between.\n\n# Use basis_list_to_delimited_string() to specify a delimiter such as a\n\n# whitespace character or comma (,) as delimiter.\n\n#\n\n# @param [out] STR  Output string.\n\n# @param [in]  ARGN Input list.\n\n#\n\n# @returns Sets @p STR to the resulting string.\n\n#\n\n# @sa basis_list_to_delimited_string()\n",
        "Line" : 1386,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Concatenates all list elements into a single delimited string.\n\n#\n\n# @param [out] STR   Output string.\n\n# @param [in]  DELIM Delimiter used to separate list elements.\n\n#                    Each element which contains the delimiter as substring\n\n#                    is surrounded by double quotes (\") in the output string.\n\n# @param [in]  ARGN  Input list. If this list starts with the argument\n\n#                    @c NOAUTOQUOTE, the automatic quoting of list elements\n\n#                    which contain the delimiter is disabled.\n\n#\n\n# @returns Sets @p STR to the resulting string.\n\n#\n\n# @see basis_join\n\n#\n\n# @todo consider replacing basis_list_to_delimited_string with basis_join\n",
        "Line" : 1407,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Concatenates all list elements into a single delimited string.\n\n#\n\n# @param [in]  VALUES       Input list string.\n\n# @param [in]  DELIMITER    Delimiter glue used to separate list elements.\n\n#                           Each element which contains the delimiter as substring\n\n#                           is surrounded by double quotes (\") in the output string.\n\n# @param [out] OUTPUT       Output string variable name.\n\n#\n\n# @code\n\n#   set( letters \"\" \"\\;a\" b c \"d\\;d\" )\n\n#   basis_join(\"${letters}\" \":\" output)\n\n#   message(\"${output}\") # :;a:b:c:d;d\n\n# @endcode\n\n#\n\n# @returns Sets @p OUTPUT to the resulting string.\n\n#\n\n# @see basis_list_to_delimited_string\n",
        "Line" : 1447,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#fixes escaping\n",
        "Line" : 1467,
        "CharPositionInLine" : 64
      },
      "109" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Splits a string at space characters into a list.\n\n#\n\n# @todo Probably this can be done in a better way...\n\n#       Difficulty is, that string(REPLACE) does always replace all\n\n#       occurrences. Therefore, we need a regular expression which matches\n\n#       the entire string. More sophisticated regular expressions should do\n\n#       a better job, though.\n\n#\n\n# @param [out] LST  Output list.\n\n# @param [in]  STR  Input string.\n\n#\n\n# @returns Sets @p LST to the resulting CMake list.\n",
        "Line" : 1471,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# 1. extract elements such as \"a string with spaces\"\n",
        "Line" : 1487,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# 2. extract other elements separated by spaces (excluding first and last)\n",
        "Line" : 1496,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# 3. extract first and last elements (if not done yet)\n",
        "Line" : 1505,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# return resulting list\n",
        "Line" : 1512,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Compare two lists.\n\n#\n\n# @param [out] RESULT Result of comparison.\n\n# @param [in]  LIST1  Name of variable holding the first list.\n\n# @param [in]  LIST2  Name of varaible holding the second list.\n\n#\n\n# @retval 0 The two lists are not identical.\n\n# @retval 1 Both lists have identical elements (not necessarily in the same order).\n",
        "Line" : 1516,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# ============================================================================\n\n# name <=> UID\n\n# ============================================================================\n",
        "Line" : 1539,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Derive target name from source file name.\n\n#\n\n# @param [out] TARGET_NAME Target name.\n\n# @param [in]  SOURCE_FILE Source file.\n\n# @param [in]  ARGN        Third argument to get_filename_component().\n\n#                          If not specified, the given path is only sanitized.\n\n#\n\n# @returns Target name derived from @p SOURCE_FILE.\n",
        "Line" : 1543,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# remove \".in\" suffix from file name\n",
        "Line" : 1553,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# get name component\n",
        "Line" : 1555,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# replace special characters\n",
        "Line" : 1559,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# return\n",
        "Line" : 1561,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Strip of top-level package name from target UID if present.\n\n#\n\n# If @c BASIS_USE_FULLY_QUALIFIED_TARGET_UID is @c ON, the top-level package\n\n# name is always preserved and this operation does nothing.\n\n#\n\n# @param[in,out] TARGET_UID \"Global\" target name, i.e., actual CMake target name.\n\n#\n\n# @returns Sets @p TARGET_UID to the (stripped) UID.\n",
        "Line" : 1565,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Make target UID from given target name.\n\n#\n\n# This function is intended for internal use only.\n\n#\n\n# @param [out] TARGET_UID  \"Global\" target name, i.e., actual CMake target name.\n\n# @param [in]  TARGET_NAME Target name used as argument to BASIS CMake functions.\n\n#\n\n# @returns Sets @p TARGET_UID to the UID of the build target @p TARGET_NAME.\n\n#\n\n# @sa basis_make_target_uid()\n",
        "Line" : 1582,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Make target UID from given target name.\n\n#\n\n# This function is intended for use by the basis_add_*() functions only.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TARGET_UID to the given @p TARGET_NAME.\n\n#\n\n# @param [out] TARGET_UID  \"Global\" target name, i.e., actual CMake target name.\n\n# @param [in]  TARGET_NAME Target name used as argument to BASIS CMake functions.\n\n#\n\n# @returns Sets @p TARGET_UID to the UID of the build target @p TARGET_NAME.\n\n#\n\n# @sa basis_get_target_uid()\n",
        "Line" : 1603,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get \"global\" target name, i.e., actual CMake target name.\n\n#\n\n# In order to ensure that CMake target names are unique across modules of\n\n# a BASIS project, the target name given to the BASIS CMake functions is\n\n# converted by basis_make_target_uid() into a so-called target UID which is\n\n# used as actual CMake target name. This function can be used to get for a\n\n# given target name or UID the closest match of a known target UID.\n\n#\n\n# The individual parts of the target UID, i.e, package name,\n\n# module name, and target name are separated by a dot (.).\n\n# If @c BASIS_USE_FULLY_QUALIFIED_UIDS is set to @c OFF, the common part of\n\n# all target UIDs is removed by this function from the target UID.\n\n# When the target is exported, however, this common part will be\n\n# prefixed again. This is done by the basis_export_targets() function.\n\n#\n\n# Note that names of imported targets are not prefixed in any case.\n\n#\n\n# The counterpart basis_get_target_name() can be used to convert the target UID\n\n# back to the target name without namespace prefix.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TARGET_UID to the given @p TARGET_NAME.\n\n#\n\n# @note At the moment, BASIS does not support modules which themselves have\n\n#       modules again. This would require a more nested namespace hierarchy\n\n#       and makes things unnecessarily complicated.\n\n#\n\n# @param [out] TARGET_UID  \"Global\" target name, i.e., actual CMake target name.\n\n# @param [in]  TARGET_NAME Target name used as argument to BASIS CMake functions.\n\n#\n\n# @returns Sets @p TARGET_UID to the UID of the build target @p TARGET_NAME.\n\n#\n\n# @sa basis_get_target_name()\n",
        "Line" : 1632,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# in case of a leading namespace separator, do not modify target name\n",
        "Line" : 1668,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# otherwise,\n",
        "Line" : 1671,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "# try prepending namespace or parts of it until target is known,\n\n# first assuming the simplified UIDs without the common prefix\n\n# of this package which applies to targets of this package\n",
        "Line" : 1675,
        "CharPositionInLine" : 6
      },
      "128" : {
        "Text" : "# and then with the fully qualified UIDs for imported targets\n",
        "Line" : 1693,
        "CharPositionInLine" : 6
      },
      "129" : {
        "Text" : "# strip off top-level namespace part (optional)\n",
        "Line" : 1710,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# return\n",
        "Line" : 1714,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get fully-qualified target name.\n\n#\n\n# This function always returns a fully-qualified target UID, no matter if\n\n# the option @c BASIS_USE_TARGET_UIDS or @c BASIS_USE_FULLY_QUALIFIED_UIDS\n\n# is @c OFF. Note that if @c BASIS_USE_FULLY_QUALIFIED_UIDS is @c ON, the\n\n# returned target UID may not be the actual name of a CMake target.\n\n#\n\n# @param [out] TARGET_UID  Fully-qualified target UID.\n\n# @param [in]  TARGET_NAME Target name used as argument to BASIS CMake functions.\n\n#\n\n# @sa basis_get_target_uid()\n",
        "Line" : 1727,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get namespace of build target without check of UID.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TARGET_NS to an empty string.\n\n#\n\n# @param [out] TARGET_NS  Namespace part of target UID.\n\n# @param [in]  TARGET_UID Target UID.\n",
        "Line" : 1767,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get namespace of build target.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TARGET_NS to an empty string.\n\n#\n\n# @param [out] TARGET_NS  Namespace part of target UID.\n\n# @param [in]  TARGET_UID Target UID/name.\n",
        "Line" : 1789,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get \"local\" target name, i.e., BASIS target name without check of UID.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TARGET_NAME to the given @p TARGET_UID.\n\n#\n\n# @param [out] TARGET_NAME Target name used as argument to BASIS functions.\n\n# @param [in]  TARGET_UID  \"Global\" target name, i.e., actual CMake target name.\n\n#\n\n# @returns Sets @p TARGET_NAME to the name of the build target with UID @p TARGET_UID.\n\n#\n\n# @sa basis_get_target_name(), basis_get_target_uid()\n",
        "Line" : 1809,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# strip off namespace of current project\n",
        "Line" : 1823,
        "CharPositionInLine" : 4
      },
      "136" : {
        "Text" : "# return\n",
        "Line" : 1826,
        "CharPositionInLine" : 4
      },
      "137" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get \"local\" target name, i.e., BASIS target name.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TARGET_NAME to the given @p TARGET_UID.\n\n#\n\n# @param [out] TARGET_NAME Target name used as argument to BASIS functions.\n\n# @param [in]  TARGET_UID  \"Global\" target name, i.e., actual CMake target name.\n\n#\n\n# @returns Sets @p TARGET_NAME to the name of the build target with UID @p TARGET_UID.\n\n#\n\n# @sa basis_get_target_uid()\n",
        "Line" : 1835,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Checks whether a given name is a valid target name.\n\n#\n\n# Displays fatal error message when target name is invalid.\n\n#\n\n# @param [in] TARGET_NAME Desired target name.\n\n#\n\n# @returns Nothing.\n",
        "Line" : 1859,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# reserved target name ?\n",
        "Line" : 1868,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "# invalid target name ?\n",
        "Line" : 1874,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# unique ?\n",
        "Line" : 1883,
        "CharPositionInLine" : 2
      },
      "142" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Make test UID from given test name.\n\n#\n\n# This function is intended for use by the basis_add_test() only.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TEST_UID to the given @p TEST_NAME.\n\n#\n\n# @param [out] TEST_UID  \"Global\" test name, i.e., actual CTest test name.\n\n# @param [in]  TEST_NAME Test name used as argument to BASIS CMake functions.\n\n#\n\n# @returns Sets @p TEST_UID to the UID of the test @p TEST_NAME.\n\n#\n\n# @sa basis_get_test_uid()\n",
        "Line" : 1891,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get \"global\" test name, i.e., actual CTest test name.\n\n#\n\n# In order to ensure that CTest test names are unique across BASIS projects,\n\n# the test name used by a developer of a BASIS project is converted by this\n\n# function into another test name which is used as actual CTest test name.\n\n#\n\n# The function basis_get_test_name() can be used to convert the unique test\n\n# name, the test UID, back to the original test name passed to this function.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TEST_UID to the given @p TEST_NAME.\n\n#\n\n# @param [out] TEST_UID  \"Global\" test name, i.e., actual CTest test name.\n\n# @param [in]  TEST_NAME Test name used as argument to BASIS CMake functions.\n\n#\n\n# @returns Sets @p TEST_UID to the UID of the test @p TEST_NAME.\n\n#\n\n# @sa basis_get_test_name()\n",
        "Line" : 1910,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get \"global\" test name, i.e., actual CTest test name.\n\n#\n\n# This function always returns a fully-qualified test UID, no matter if\n\n# the option @c BASIS_USE_FULLY_QUALIFIED_UIDS is @c OFF. Note that\n\n# if this option is @c ON, the returned test UID may not be the\n\n# actual name of a CMake test.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TEST_UID to the given @p TEST_NAME.\n\n#\n\n# @param [out] TEST_UID  Fully-qualified test UID.\n\n# @param [in]  TEST_NAME Test name used as argument to BASIS CMake functions.\n\n#\n\n# @sa basis_get_test_uid()\n",
        "Line" : 1949,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get namespace of test.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TEST_NS to an empty string.\n\n#\n\n# @param [out] TEST_NS  Namespace part of test UID. If @p TEST_UID is\n\n#                       no UID, i.e., does not contain a namespace part,\n\n#                       the namespace of this project is returned.\n\n# @param [in]  TEST_UID Test UID/name.\n",
        "Line" : 1982,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get \"local\" test name, i.e., BASIS test name.\n\n#\n\n# If @c BASIS_USE_TARGET_UIDS is set to @c OFF, this operation\n\n# always just sets the @p TEST_NAME to the given @p TEST_UID.\n\n#\n\n# @param [out] TEST_NAME Test name used as argument to BASIS functions.\n\n# @param [in]  TEST_UID  \"Global\" test name, i.e., actual CTest test name.\n\n#\n\n# @returns Sets @p TEST_NAME to the name of the test with UID @p TEST_UID.\n\n#\n\n# @sa basis_get_test_uid()\n",
        "Line" : 2006,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Checks whether a given name is a valid test name.\n\n#\n\n# Displays fatal error message when test name is invalid.\n\n#\n\n# @param [in] TEST_NAME Desired test name.\n\n#\n\n# @returns Nothing.\n",
        "Line" : 2032,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# reserved test name ?\n",
        "Line" : 2041,
        "CharPositionInLine" : 2
      },
      "149" : {
        "Text" : "# invalid test name ?\n",
        "Line" : 2047,
        "CharPositionInLine" : 2
      },
      "150" : {
        "Text" : "# ============================================================================\n\n# common target tools\n\n# ============================================================================\n",
        "Line" : 2055,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Whether a given target exists.\n\n#\n\n# This function should be used instead of the if(TARGET) command of CMake\n\n# because target names are mapped by BASIS to target UIDs.\n\n#\n\n# @param [out] RESULT_VARIABLE Boolean result variable.\n\n# @param [in]  TARGET_NAME     Name which to check whether it is a target.\n\n#\n\n# @sa basis_make_target_uid()\n\n# @sa basis_get_target_uid()\n",
        "Line" : 2059,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get default subdirectory prefix of scripted library modules.\n\n#\n\n# @param [out] PREFIX   Name of variable which is set to the default library\n\n#                       prefix, i.e., subdirectory relative to the library\n\n#                       root directory as used for the @c PREFIX property of\n\n#                       scripted module libraries (see basis_add_script_library())\n\n#                       or relative to the include directory in case of C++.\n\n#                       Note that this prefix includes a trailing slash to\n\n#                       indicate that the prefix is a subdirectory.\n\n# @param [in]  LANGUAGE Programming language (case-insenitive), e.g.,\n\n#                       @c CXX, @c Python, @c Matlab...\n",
        "Line" : 2080,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get file name of compiled script.\n\n#\n\n# @param [out] CFILE  File path of compiled script file.\n\n# @param [in]  SOURCE Script source file.\n\n# @param [in]  ARGV2  Language of script file. If not specified, the language\n\n#                     is derived from the file name extension and shebang of\n\n#                     the script source file.\n",
        "Line" : 2107,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get file path of Jython file compiled from the given Python module.\n\n#\n\n# Python modules are also compiled using Jython. This macro returns the file\n\n# path of the compiled Jython file in the build tree which corresponds to the\n\n# specified Python module.\n\n#\n\n# @param [out] CFILE  Path of corresponding compiled Jython file.\n\n# @param [in]  MODULE Path of input Python module in build tree.\n",
        "Line" : 2133,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Whether to compile Python modules for Jython interpreter.\n\n#\n\n# This macro returns a boolean value stating whether Python modules shall also\n\n# be compiled for use by Jython interpreter if BASIS_COMPILE_SCRIPTS is ON.\n\n#\n\n# @param [out] FLAG Set to either TRUE or FALSE depending on whether Python\n\n#                   modules shall be compiled using Jython or not.\n",
        "Line" : 2156,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Glob source files.\n\n#\n\n# This function gets a list of source files and globbing expressions, evaluates\n\n# the globbing expression, and replaces these by the found source files such\n\n# that the resulting list of source files contains only absolute paths of\n\n# source files. It is used by basis_add_executable() and basis_add_library()\n\n# to get a list of all source files. The syntax for the glob expressions\n\n# corresponds to the one used by CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/v2.8.8/cmake.html#command:file\">\n\n# file(GLOB)</a> command. Additionally, if the pattern <tt>**</tt> is found\n\n# in a glob expression, it is replaced by a single <tt>*</tt> and the\n\n# recursive version, i.e., <tt>file(GLOB_RECURSE)</tt>, is used instead.\n\n#\n\n# @param [in]  TARGET_UID UID of build target which builds the globbed source files.\n\n#                         The custom target which re-globs the source files\n\n#                         before each build of this target is named after this\n\n#                         build target with two leading underscores (__).\n\n# @param [out] SOURCES    List of absolute source paths.\n\n# @param [in]  ARGN       Input file paths and/or globbing expressions.\n\n#\n\n# @sa basis_add_executable()\n\n# @sa basis_add_library()\n",
        "Line" : 2175,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "# prepare globbing expressions\n\n# make paths absolute and turn directories into recursive globbing expressions\n",
        "Line" : 2199,
        "CharPositionInLine" : 2
      },
      "158" : {
        "Text" : "# prefer configured/generated files in the build tree, but disallow\n\n# globbing within the build tree; glob only files in source tree\n",
        "Line" : 2204,
        "CharPositionInLine" : 6
      },
      "159" : {
        "Text" : "# only if at least one globbing expression is given we need to go through this hassle\n",
        "Line" : 2219,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# get initial list of source files\n",
        "Line" : 2223,
        "CharPositionInLine" : 4
      },
      "161" : {
        "Text" : "# note that including this file here, which is modified whenever a\n\n# source file is added or removed, triggers a re-configuration of the\n\n# build system which is required to re-execute this function.\n",
        "Line" : 2235,
        "CharPositionInLine" : 4
      },
      "162" : {
        "Text" : "# add custom target to re-glob files before each build\n",
        "Line" : 2240,
        "CharPositionInLine" : 4
      },
      "163" : {
        "Text" : "# otherwise, just return the given absolute source file paths\n",
        "Line" : 2259,
        "CharPositionInLine" : 2
      },
      "164" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Detect programming language of given source code files.\n\n#\n\n# This function determines the programming language in which the given source\n\n# code files are written. If no common programming language could be determined,\n\n# \"AMBIGUOUS\" is returned. If none of the following programming languages\n\n# could be determined, \"UNKNOWN\" is returned: CXX (i.e., C++), JAVA, MATLAB,\n\n# PYTHON, JYTHON, PERL, BASH, BATCH.\n\n#\n\n# @param [out] LANGUAGE Detected programming language.\n\n# @param [in]  ARGN     List of source code files.\n",
        "Line" : 2265,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "# iterate over source files\n",
        "Line" : 2278,
        "CharPositionInLine" : 2
      },
      "166" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# determine language based on extension for those without shebang\n",
        "Line" : 2289,
        "CharPositionInLine" : 6
      },
      "167" : {
        "Text" : "# C++\n",
        "Line" : 2292,
        "CharPositionInLine" : 6
      },
      "168" : {
        "Text" : "# Java\n",
        "Line" : 2295,
        "CharPositionInLine" : 6
      },
      "169" : {
        "Text" : "# MATLAB\n",
        "Line" : 2298,
        "CharPositionInLine" : 6
      },
      "170" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# determine language from shebang directive\n\n#\n\n# Note that some scripting languages may use identical file name extensions.\n\n# This is in particular the case for Python and Jython. The only way we\n\n# can distinguish these two is by looking at the shebang directive.\n",
        "Line" : 2303,
        "CharPositionInLine" : 6
      },
      "171" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# determine language from further known extensions\n",
        "Line" : 2332,
        "CharPositionInLine" : 6
      },
      "172" : {
        "Text" : "# Python\n",
        "Line" : 2335,
        "CharPositionInLine" : 8
      },
      "173" : {
        "Text" : "# Perl\n",
        "Line" : 2338,
        "CharPositionInLine" : 8
      },
      "174" : {
        "Text" : "# BASH\n",
        "Line" : 2341,
        "CharPositionInLine" : 8
      },
      "175" : {
        "Text" : "# Batch\n",
        "Line" : 2344,
        "CharPositionInLine" : 8
      },
      "176" : {
        "Text" : "# unknown\n",
        "Line" : 2347,
        "CharPositionInLine" : 8
      },
      "177" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# detect ambiguity\n",
        "Line" : 2354,
        "CharPositionInLine" : 6
      },
      "178" : {
        "Text" : "# MATLAB Compiler can handle this...\n",
        "Line" : 2358,
        "CharPositionInLine" : 10
      },
      "179" : {
        "Text" : "# language stays MATLAB\n",
        "Line" : 2360,
        "CharPositionInLine" : 30
      },
      "180" : {
        "Text" : "# Jython can deal with Python scripts/modules\n",
        "Line" : 2362,
        "CharPositionInLine" : 10
      },
      "181" : {
        "Text" : "# language stays JYTHON\n",
        "Line" : 2364,
        "CharPositionInLine" : 30
      },
      "182" : {
        "Text" : "# ambiguity\n",
        "Line" : 2366,
        "CharPositionInLine" : 10
      },
      "183" : {
        "Text" : "# update current language\n",
        "Line" : 2372,
        "CharPositionInLine" : 6
      },
      "184" : {
        "Text" : "# return\n",
        "Line" : 2376,
        "CharPositionInLine" : 2
      },
      "185" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Configure .in source files.\n\n#\n\n# This function configures each source file in the given argument list with\n\n# a .in file name suffix and stores the configured file in the build tree\n\n# with the same relative directory as the template source file itself.\n\n# The first argument names the CMake variable of the list of configured\n\n# source files where each list item is the absolute file path of the\n\n# corresponding (configured) source file.\n\n#\n\n# @param [out] LIST_NAME Name of output list.\n\n# @param [in]  ARGN      These arguments are parsed and the following\n\n#                        options recognized. All remaining arguments are\n\n#                        considered to be source file paths.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b BINARY_DIRECTORY @endtp\n\n#     <td>Explicitly specify directory in build tree where configured\n\n#         source files should be written to.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b KEEP_DOT_IN_SUFFIX @endtp\n\n#     <td>By default, after a source file with the .in extension has been\n\n#         configured, the .in suffix is removed from the file name.\n\n#         This can be omitted by giving this option.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Nothing.\n",
        "Line" : 2384,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "# parse arguments\n",
        "Line" : 2415,
        "CharPositionInLine" : 2
      },
      "187" : {
        "Text" : "# ensure that specified BINARY_DIRECTORY is inside build tree of project\n",
        "Line" : 2418,
        "CharPositionInLine" : 2
      },
      "188" : {
        "Text" : "# configure source files\n",
        "Line" : 2429,
        "CharPositionInLine" : 2
      },
      "189" : {
        "Text" : "# The .in suffix is optional, add it here if a .in file exists for this\n\n# source file, but only if the source file itself does not name an actually\n\n# existing source file.\n\n#\n\n# If the source file path is relative, prefer possibly already configured\n\n# sources in build tree such as the test driver source file created by\n\n# create_test_sourcelist() or a manual use of configure_file().\n\n#\n\n# Note: Make path absolute, otherwise EXISTS check will not work!\n",
        "Line" : 2432,
        "CharPositionInLine" : 4
      },
      "190" : {
        "Text" : "# configure source file if filename ends in .in suffix\n",
        "Line" : 2456,
        "CharPositionInLine" : 4
      },
      "191" : {
        "Text" : "# if binary directory was given explicitly, use it\n",
        "Line" : 2458,
        "CharPositionInLine" : 6
      },
      "192" : {
        "Text" : "# otherwise,\n",
        "Line" : 2465,
        "CharPositionInLine" : 6
      },
      "193" : {
        "Text" : "# if source is in project's source tree use relative binary directory\n",
        "Line" : 2467,
        "CharPositionInLine" : 8
      },
      "194" : {
        "Text" : "# otherwise, use current binary directory\n",
        "Line" : 2474,
        "CharPositionInLine" : 8
      },
      "195" : {
        "Text" : "# configure source file\n",
        "Line" : 2483,
        "CharPositionInLine" : 6
      },
      "196" : {
        "Text" : "# otherwise, skip configuration of this source file\n",
        "Line" : 2488,
        "CharPositionInLine" : 4
      },
      "197" : {
        "Text" : "# return\n",
        "Line" : 2501,
        "CharPositionInLine" : 2
      },
      "198" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Remove one blank line from top of string\n",
        "Line" : 2505,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Configure and optionally compile script file.\n\n#\n\n# This function is used to configure script files during the build. It is\n\n# called by the build script generated by basis_add_script_target() for each script\n\n# target. It is also used to configure the modules of the packages\n\n# implemented in supported scripting languages which are located in the\n\n# @c PROJECT_LIBRARY_DIR of the source tree.\n\n#\n\n# In case of executable scripts, this function automatically prepends the\n\n# module search paths such that the modules of this software package are found\n\n# (and preferred in case of potential name conflicts with other packages).\n\n# Moreover, it adds (or replaces) the shebang directive on Unix such that the\n\n# configured interpreter version is used. On Windows, it converts the executable\n\n# script into a Windows Command instead which executes the proper interpreter\n\n# with the code section of the input script.\n\n#\n\n# @param [in] INPUT  Input script file.\n\n# @param [in] OUTPUT Configured output script file.\n\n# @param [in] ARGN   Optional arguments:\n\n# @par\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b COMPILE @endtp\n\n#     <td>Whether to compile module scripts if suitable, i.e., an intermediate\n\n#         format exists for the specific scripting language. For example,\n\n#         Python modules can be compiled.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COPYONLY @endtp\n\n#     <td>Whether to only copy the script file without replacing CMake variables\n\n#         within the file. This option is passed on to CMake's configure_file()\n\n#         command used to configure the script file. By default, the option\n\n#         \\@ONLY is used instead.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b EXECUTABLE @endtp\n\n#     <td>Specifies that the given script file is an executable script and not a\n\n#         module script. Otherwise, if this option is not given and the output\n\n#         file name contains a file name extension, the given script file is\n\n#         configured as module script. A script file with an output file name\n\n#         that has no extension, is always considered to be an executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory for configured script. If this option is given,\n\n#         the @c BUILD_INSTALL_SCRIPT variable is set to @c TRUE before including\n\n#         any specified script configuration files (see @p CONFIG_FILE option).\n\n#         Moreover, the @c __DIR__ variable is set to the specified directory.\n\n#         Otherwise, if this option is omitted, the @c BUILD_INSTALL_SCRIPT variable\n\n#         is set to @c FALSE instead and @c __DIR__ is set to the directory of\n\n#         the configured @p OUTPUT file. Note that the @c BUILD_INSTALL_SCRIPT and\n\n#         @c __DIR__ variables are in particular used by basis_set_script_path()\n\n#         to convert the given paths to paths relative to the location of the\n\n#         configured/installed script.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b CACHE_FILE file1 [file2...] @endtp\n\n#     <td>List of CMake files with dump of variables which should be included\n\n#         before configuring the script. The cache files can be generated using\n\n#         the basis_dump_variables() function.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b CONFIG_FILE file1 [file2...] @endtp\n\n#     <td>List of script configuration files to include before the configuration\n\n#         of the script. See also the documentation of the @p DESTINATION option.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LINK_DEPENDS dep1 [dep2...] @endtp\n\n#     <td>List of \"link\" dependencies, i.e., modules and script/module libraries\n\n#         required by this script. For executable scripts, the paths to these\n\n#         modules/packages is added to the module search path. If the prefix\n\n#         \"relative \" is given before a file path, it is made relative to the\n\n#         output/installation directory of the script file. All given input paths\n\n#         must be absolute, however, as the relative location depends on\n\n#         whether the script will be installed, i.e., the @c DESTINATION\n\n#         is specified, or not.</td>\n\n#   </tr>\n\n# </table>\n",
        "Line" : 2513,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "# rename arguments to avoid conflict with script configuration\n",
        "Line" : 2593,
        "CharPositionInLine" : 2
      },
      "201" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# parse arguments\n",
        "Line" : 2596,
        "CharPositionInLine" : 2
      },
      "202" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# include cache files\n",
        "Line" : 2611,
        "CharPositionInLine" : 2
      },
      "203" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# set general variables for use in scripts\n",
        "Line" : 2620,
        "CharPositionInLine" : 2
      },
      "204" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# variables mainly intended for use in script configurations, in particular,\n\n# these are used by basis_set_script_path() to make absolute paths relative\n",
        "Line" : 2624,
        "CharPositionInLine" : 2
      },
      "205" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# include script configuration files\n",
        "Line" : 2637,
        "CharPositionInLine" : 2
      },
      "206" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# configure executable script\n",
        "Line" : 2646,
        "CharPositionInLine" : 2
      },
      "207" : {
        "Text" : "# Attention: Every line of code added/removed will introduce a mismatch\n\n#            between error messages of the interpreter and the original\n\n#            source file. To not confuse/mislead developers too much,\n\n#            keep number of lines added/removed at a minimum or at least\n\n#            try to balance the number of lines added and removed.\n\n#            Moreover, blank lines can be used to insert code without\n\n#            changing the number of source code lines.\n",
        "Line" : 2649,
        "CharPositionInLine" : 4
      },
      "208" : {
        "Text" : "# (temporarily) remove existing shebang directive\n",
        "Line" : 2657,
        "CharPositionInLine" : 4
      },
      "209" : {
        "Text" : "# replace CMake variables used in script\n",
        "Line" : 2664,
        "CharPositionInLine" : 4
      },
      "210" : {
        "Text" : "# add code to set module search path\n",
        "Line" : 2668,
        "CharPositionInLine" : 4
      },
      "211" : {
        "Text" : "# insert extra Python code near top, but after any future statement\n\n# (http://docs.python.org/2/reference/simple_stmts.html#future)\n",
        "Line" : 2686,
        "CharPositionInLine" : 8
      },
      "212" : {
        "Text" : "# remove a blank line therefore\n",
        "Line" : 2693,
        "CharPositionInLine" : 41
      },
      "213" : {
        "Text" : "# remove a blank line therefore\n",
        "Line" : 2712,
        "CharPositionInLine" : 41
      },
      "214" : {
        "Text" : "# In case of Bash, set BASIS_BASH_UTILITIES which is required to first source the\n\n# BASIS utilities modules (in particular core.sh). This variable should be set to\n\n# the utilities.sh module of BASIS by default as part of the BASIS installation\n\n# (environment variable) and is here set to the project-specific basis.sh module.\n\n#\n\n# Note that folks at SBIA may submit a Bash script directly to a batch queuing\n\n# system such as the Oracle Grid Engine (SGE) instead of writing a separate submit\n\n# script. To avoid not finding the BASIS utilities in this case only because the\n\n# Bash file was copied by SGE to a temporary file, consider the <PROJECT>_DIR\n\n# environment variable as an alternative.\n",
        "Line" : 2717,
        "CharPositionInLine" : 6
      },
      "215" : {
        "Text" : "# Note: Code formatted such that it can be on single line. Use no comments within!\n",
        "Line" : 2728,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "# set BASHPATH which is used by import() function provided by core.sh module of BASIS\n",
        "Line" : 2747,
        "CharPositionInLine" : 6
      },
      "217" : {
        "Text" : "# remove a blank line therefore\n",
        "Line" : 2768,
        "CharPositionInLine" : 39
      },
      "218" : {
        "Text" : "# replace shebang directive\n",
        "Line" : 2771,
        "CharPositionInLine" : 4
      },
      "219" : {
        "Text" : "# Attention: It is IMPORTANT to not use \"#! <interpreter>\" even if the <interpreter>\n\n#            is given as full path in case of jython. Otherwise, the Jython executable\n\n#            fails to execute from within a Python script using the os.system(),\n\n#            subprocess.popen(), subprocess.call() or similar function!\n\n#            Don't ask me for an explanation, but possibly the used shell otherwise does\n\n#            not recognize the shebang as being valid. Using /usr/bin/env helps out here,\n\n#            -schuha\n",
        "Line" : 2782,
        "CharPositionInLine" : 8
      },
      "220" : {
        "Text" : "# add (modified) shebang directive again\n",
        "Line" : 2801,
        "CharPositionInLine" : 4
      },
      "221" : {
        "Text" : "# write configured script\n",
        "Line" : 2805,
        "CharPositionInLine" : 4
      },
      "222" : {
        "Text" : "# make script executable on Unix\n",
        "Line" : 2807,
        "CharPositionInLine" : 4
      },
      "223" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# configure module script\n",
        "Line" : 2811,
        "CharPositionInLine" : 2
      },
      "224" : {
        "Text" : "# configure module - do not use configure_file() as it will not update the\n\n#                    file if nothing has changed. the update of the modification\n\n#                    time is however in particular required for the\n\n#                    configure_script.cmake build command which uses this\n\n#                    function to build script targets. otherwise, the custom\n\n#                    build command is reexecuted only because the output files\n\n#                    never appear to be more recent than the dependencies\n",
        "Line" : 2814,
        "CharPositionInLine" : 4
      },
      "225" : {
        "Text" : "# compile module if requested\n",
        "Line" : 2826,
        "CharPositionInLine" : 4
      },
      "226" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get type name of target.\n\n#\n\n# @param [out] TYPE       The target's type name or NOTFOUND.\n\n# @param [in]  TARGET_UID The UID of the target.\n",
        "Line" : 2846,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get type name of target.\n\n#\n\n# @param [out] TYPE        The target's type name or NOTFOUND.\n\n# @param [in]  TARGET_NAME The name of the target.\n",
        "Line" : 2864,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get location of build target output file(s).\n\n#\n\n# This convenience function can be used to get the full path of the output\n\n# file(s) generated by a given build target. It is similar to the read-only\n\n# @c LOCATION property of CMake targets and should be used instead of\n\n# reading this porperty. In case of scripted libraries, this function returns\n\n# the path of the root directory of the library that has to be added to the\n\n# module search path.\n\n#\n\n# @note If the target is a binary built from C++ source files and the CMake\n\n#       generator is an IDE such as Visual Studio or Xcode, the absolute\n\n#       directory of the target location ends with the generator expression\n\n#       \"/$<${BASIS_GE_CONFIG}>\" which is to be substituted by the respective\n\n#       build configuration.\n\n#\n\n# @param [out] VAR         Path of build target output file.\n\n# @param [in]  TARGET_NAME Name of build target.\n\n# @param [in]  PART        Which file name component of the @c LOCATION\n\n#                          property to return. See get_filename_component().\n\n#                          If POST_INSTALL_RELATIVE is given as argument,\n\n#                          @p VAR is set to the path of the installed file\n\n#                          relative to the installation prefix. Similarly,\n\n#                          POST_INSTALL sets @p VAR to the absolute path\n\n#                          of the installed file post installation.\n\n#\n\n# @returns Path of output file similar to @c LOCATION property of CMake targets.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#prop_tgt:LOCATION\n",
        "Line" : 2879,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# imported targets\n\n#\n\n# Note: This might not be required though as even custom executable\n\n#       and library targets can be imported using CMake's\n\n#       add_executable(<NAME> IMPORTED) and add_library(<NAME> <TYPE> IMPORTED)\n\n#       commands. Such executable can, for example, also be a BASH\n\n#       script built by basis_add_script().\n",
        "Line" : 2914,
        "CharPositionInLine" : 4
      },
      "230" : {
        "Text" : "# 1. Try IMPORTED_LOCATION_<CMAKE_BUILD_TYPE>\n",
        "Line" : 2923,
        "CharPositionInLine" : 6
      },
      "231" : {
        "Text" : "# 2. Try IMPORTED_LOCATION\n",
        "Line" : 2930,
        "CharPositionInLine" : 6
      },
      "232" : {
        "Text" : "# 3. Prefer Release over all other configurations\n",
        "Line" : 2934,
        "CharPositionInLine" : 6
      },
      "233" : {
        "Text" : "# 4. Just use any of the imported configurations\n",
        "Line" : 2938,
        "CharPositionInLine" : 6
      },
      "234" : {
        "Text" : "# make path relative to CMAKE_INSTALL_PREFIX if POST_CMAKE_INSTALL_PREFIX given\n",
        "Line" : 2949,
        "CharPositionInLine" : 6
      },
      "235" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# non-imported targets\n",
        "Line" : 2953,
        "CharPositionInLine" : 4
      },
      "236" : {
        "Text" : "# Attention: The order of the matches/if cases matters here!\n\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# scripts\n",
        "Line" : 2956,
        "CharPositionInLine" : 6
      },
      "237" : {
        "Text" : "# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# libraries\n",
        "Line" : 2966,
        "CharPositionInLine" : 6
      },
      "238" : {
        "Text" : "# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# executables\n",
        "Line" : 2984,
        "CharPositionInLine" : 6
      },
      "239" : {
        "Text" : "# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# get output name of built file (if applicable)\n",
        "Line" : 3001,
        "CharPositionInLine" : 8
      },
      "240" : {
        "Text" : "# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# prepend $<CONFIG> \"generator expression\" for non-custom binaries\n\n# when built with an IDE such as Visual Studio or Xcode\n",
        "Line" : 3023,
        "CharPositionInLine" : 8
      },
      "241" : {
        "Text" : "# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# assemble final path\n",
        "Line" : 3033,
        "CharPositionInLine" : 8
      },
      "242" : {
        "Text" : "# get filename component\n",
        "Line" : 3056,
        "CharPositionInLine" : 4
      },
      "243" : {
        "Text" : "# return\n",
        "Line" : 3063,
        "CharPositionInLine" : 2
      },
      "244" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get link libraries/dependencies of (imported) target.\n\n#\n\n# This function recursively adds the dependencies of the dependencies as well\n\n# and returns them together with the list of the direct link dependencies.\n\n# Moreover, for script targets, if any of the dependencies uses the BASIS\n\n# utilities for the given language (@c BASIS_UTILITIES property), the\n\n# corresponding utilities library is added to the list of dependencies.\n\n# Note that therefore the BASIS utilities targets have to be added already,\n\n# which is only the case during the finalization of script targets.\n\n#\n\n# @param [out] LINK_DEPENDS List of all link dependencies. In case of scripts,\n\n#                           the dependencies are the required modules or\n\n#                           paths to required packages, respectively.\n\n# @param [in]  TARGET_NAME  Name of the target.\n",
        "Line" : 3067,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "# get type of target\n",
        "Line" : 3092,
        "CharPositionInLine" : 2
      },
      "246" : {
        "Text" : "# get direct link dependencies of target\n",
        "Line" : 3094,
        "CharPositionInLine" : 2
      },
      "247" : {
        "Text" : "# 1. Try IMPORTED_LINK_INTERFACE_LIBRARIES_<CMAKE_BUILD_TYPE>\n",
        "Line" : 3097,
        "CharPositionInLine" : 4
      },
      "248" : {
        "Text" : "# 2. Try IMPORTED_LINK_INTERFACE_LIBRARIES\n",
        "Line" : 3104,
        "CharPositionInLine" : 4
      },
      "249" : {
        "Text" : "# 3. Prefer Release over all other configurations\n",
        "Line" : 3108,
        "CharPositionInLine" : 4
      },
      "250" : {
        "Text" : "# 4. Just use any of the imported configurations\n",
        "Line" : 3112,
        "CharPositionInLine" : 4
      },
      "251" : {
        "Text" : "# otherwise, get LINK_DEPENDS property value\n",
        "Line" : 3122,
        "CharPositionInLine" : 2
      },
      "252" : {
        "Text" : "# prepend BASIS utilities if used (and added)\n",
        "Line" : 3131,
        "CharPositionInLine" : 2
      },
      "253" : {
        "Text" : "# convert target names to UIDs\n",
        "Line" : 3160,
        "CharPositionInLine" : 2
      },
      "254" : {
        "Text" : "# recursively add link dependencies of dependencies\n\n# TODO implement it non-recursively for better performance\n",
        "Line" : 3172,
        "CharPositionInLine" : 2
      },
      "255" : {
        "Text" : "# avoid recursive loop\n",
        "Line" : 3176,
        "CharPositionInLine" : 36
      },
      "256" : {
        "Text" : "# remove duplicate entries\n",
        "Line" : 3183,
        "CharPositionInLine" : 2
      },
      "257" : {
        "Text" : "# return\n",
        "Line" : 3187,
        "CharPositionInLine" : 2
      },
      "258" : {
        "Text" : "# ============================================================================\n\n# generator expressions\n\n# ============================================================================\n",
        "Line" : 3191,
        "CharPositionInLine" : 0
      },
      "259" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Process generator expressions in arguments.\n\n#\n\n# This command evaluates the $&lt;TARGET_FILE:tgt&gt; and related generator\n\n# expressions also for custom targets such as scripts and MATLAB Compiler\n\n# targets. For other generator expressions whose argument is a target name,\n\n# this function replaces the target name by the target UID, i.e., the actual\n\n# CMake target name such that the expression can be evaluated by CMake.\n\n# The following generator expressions are directly evaluated by this function:\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp <b><tt>$&lt;TARGET_FILE:tgt&gt;</tt></b> @endtp\n\n#     <td>Absolute file path of built target.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b><tt>$&lt;TARGET_FILE_POST_INSTALL:tgt&gt;</tt></b> @endtp\n\n#     <td>Absolute path of target file after installation using the\n\n#         current @c CMAKE_INSTALL_PREFIX.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b><tt>$&lt;TARGET_FILE_POST_INSTALL_RELATIVE:tgt&gt;</tt></b> @endtp\n\n#     <td>Path of target file after installation relative to @c CMAKE_INSTALL_PREFIX.</td>\n\n#   </tr>\n\n# </table>\n\n# Additionally, the suffix <tt>_NAME</tt> or <tt>_DIR</tt> can be appended\n\n# to the name of each of these generator expressions to get only the basename\n\n# of the target file including the extension or the corresponding directory\n\n# path, respectively.\n\n#\n\n# Generator expressions are in particular supported by basis_add_test().\n\n#\n\n# @param [out] ARGS Name of output list variable.\n\n# @param [in]  ARGN List of arguments to process.\n\n#\n\n# @sa basis_add_test()\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_test\n",
        "Line" : 3195,
        "CharPositionInLine" : 0
      },
      "260" : {
        "Text" : "# TARGET_FILE* expression, including custom targets\n",
        "Line" : 3239,
        "CharPositionInLine" : 8
      },
      "261" : {
        "Text" : "# other generator expression supported by CMake\n\n# only replace target name, but do not evaluate expression\n",
        "Line" : 3246,
        "CharPositionInLine" : 8
      },
      "262" : {
        "Text" : "##\n\n#  @brief basis_append_to_each takes an input list and appends a single element to each item in that list and appends it to the output list.\n\n#                For example, this is useful for adding relative paths to the end of a list of paths.\n\n#\n\n#  @param OUTPUT_LIST Name of list that will be filled with appended names.\n\n#  @param INPUT_LIST  Name of list that contains items to have text appended.\n\n#  @param ITEM_TO_APPEND text to append to each item in the input list.\n\n#\n",
        "Line" : 3267,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 3286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 264
    },
    "src/cmake/ConfigureIncludeFiles.cmake" : {
      "ObjectId" : "7fc05a53dffe69ba1fcc0463a717653c14dce1a1",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  ConfigureIncludeFiles.cmake\n\n# @brief CMake script used to configure and copy the public header files.\n\n#\n\n# Besides configuring the files, this script optionally copies the header\n\n# files to the build tree using the final relative path as used for the\n\n# installation. This could be done directly during the configure step of\n\n# CMake by code executed as part of the CMakeLists.txt files, but then\n\n# whenever a header file is modified, CMake reconfigures the build system.\n\n# Instead, this script is executed using execute_process() during the\n\n# configure step of CMake and a custom build target is added which rebuilds\n\n# whenever a header file was modified. Thus, only this script is re-executed,\n\n# but not the entire build system re-configured.\n\n#\n\n# The relative path of each configured input header file in the source tree\n\n# is appended to the output log file. This file can be used to determine\n\n# whether a new header was added to the source tree and thus this script has\n\n# to be re-executed.\n\n#\n\n# @ingroup CMakeUtilities\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# requires bug fixed get_filename_component() of BASIS tools\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# check arguments\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include file which defines CMake variables for use in .h.in files\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure header files\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# write CMake script with list of public header files\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# deterministic order\n",
        "Line" : 85,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 8
    },
    "src/cmake/DirectoriesSettings.cmake" : {
      "ObjectId" : "83aa093344dc56ef9f6554acc3a63e13d041cbdc",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  DirectoriesSettings.cmake\n\n# @brief CMake variables of project directories.\n\n#\n\n# This file configures the project directory structure as defined by the\n\n# Filesystem Hierarchy Standard for BASIS packages.\n\n#\n\n# @sa http://opensource.andreasschuh.com/cmake-basis/standard/fhs/\n\n#\n\n# The project must follow the directory structure as defined by the\n\n# <tt>PROJECT_&lt;*&gt;_DIR</tt> variables.\n\n#\n\n# Ideally, when changing the name of one of these directories, only the\n\n# directory structure of the template needs to be updated. The BASIS CMake\n\n# functions should not be required to change as they are supposed to use these\n\n# variables instead of the actual names. Any change of the project directory\n\n# structure has to be made with care, however, and backwards compatibility to\n\n# previous releases of BASIS shall be maintained. Consider the use of the\n\n# @c TEMPLATE_VERSION if required.\n\n#\n\n# @note The documentation of the variables can be found in Directories.cmake.in.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# root directories of top-level project\n\n# ============================================================================\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# local variables\n\n# ============================================================================\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# directories of site packages of script interpreters\n\n# ============================================================================\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Perl\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ============================================================================\n\n# testing tree\n\n# ============================================================================\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ============================================================================\n\n# build tree\n\n# ============================================================================\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set directories corresponding to the source tree directories\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set default CMake variables which are, however, not used by BASIS\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ============================================================================\n\n# install tree\n\n# ============================================================================\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Attention: In order for CPack to work correctly, the destination paths have\n\n#            to be given relative to CMAKE_INSTALL_PREFIX. Therefore, this\n\n#            prefix must be excluded from the following paths!\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# default installation prefix\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# change default installation prefix used by CMake\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# <ProgramFilesDir>/<Vendor>/<Package>[-<version>]\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# /opt/<vendor>/<package>[-<version>]\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# installation scheme - non-cached, can be preset using -D option of CMake\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# e.g. /opt/<package>[-<version>]\n",
        "Line" : 196,
        "CharPositionInLine" : 139
      },
      "20" : {
        "Text" : "# e.g. /opt/<bundle>[-<version>]\n",
        "Line" : 198,
        "CharPositionInLine" : 135
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# installation directories\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# e.g., CMAKE_INSTALL_PREFIX := <ProgramFilesDir>/<Vendor>/<Package>\n",
        "Line" : 215,
        "CharPositionInLine" : 40
      },
      "23" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# bundled dependency\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# package configuration\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# executables\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# libraries\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# shared data\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# documentation\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# main package\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# package configuration\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# executables\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# libraries\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# shared data\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# documentation\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# e.g., CMAKE_INSTALL_PREFIX := /usr/local\n",
        "Line" : 259,
        "CharPositionInLine" : 44
      },
      "36" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# bundled dependency\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# package configuration\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# executables\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# libraries\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# shared data\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# documentation\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# main package\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# package configuration\n",
        "Line" : 284,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# executables\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# libraries\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# shared data\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# documentation\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# e.g., CMAKE_INSTALL_PREFIX := /opt/<vendor>/<package>\n",
        "Line" : 303,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# bundled dependency\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# package configuration\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# executables\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# libraries\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# shared data\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# documentation\n",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# package configuration\n",
        "Line" : 326,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# executables\n",
        "Line" : 328,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# libraries\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# shared data\n",
        "Line" : 335,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# documentation\n",
        "Line" : 339,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# private script libraries\n\n#\n\n# The modules of script libraries which are only intended for use by this\n\n# package itself are installed within the package own installation\n\n# prefix/subdirectories.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# opt\n",
        "Line" : 393,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# public script libraries\n\n#\n\n# The modules of script libraries which are intended for use by external packages\n\n# are installed in the respective installation directories of the particular\n\n# interpreter. For example, in case of Python, the public Python modules are\n\n# installed in the site-packages directory of the found PYTHON_EXECUTABLE.\n\n# In particular the modules in the PROJECT_LIBRARY_DIR are intended for use\n\n# by external packages. Other modules added using the basis_add_script_library()\n\n# and basis_add_script() CMake functions are by default considered to be intended\n\n# for internal use by the other modules and executable scripts.\n\n#\n\n# Note: For those interpreters of scripting languages which by themselves do\n\n#       not define a common installation directory for site packages, the\n\n#       installation directory for public modules may be identical to the\n\n#       one for private modules. Moreover, the user has the option to disable\n\n#       the installation of public modules in the system default site directories\n\n#       in order to prevent the installation of files outside the CMAKE_INSTALL_PREFIX.\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# reset directories if BASIS_INSTALL_SITE_PACKAGES option has been changed\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# do not reset if BASIS_INSTALL_SITE_PACKAGES is OFF and path is already relative\n",
        "Line" : 441,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# try to determine default installation directories\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Python\n",
        "Line" : 453,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# Jython\n",
        "Line" : 457,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# Perl\n",
        "Line" : 461,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# if it failed to determine the default installation directories by executing some\n\n# code or command, use the directories used for private libraries instead\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# cache directories - also so users can edit them\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# ============================================================================\n\n# top-level references\n\n# ============================================================================\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# build tree\n",
        "Line" : 487,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# installation\n",
        "Line" : 494,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# ============================================================================\n\n# clean up\n\n# ============================================================================\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 76
    },
    "src/cmake/DocTools.cmake" : {
      "ObjectId" : "47eb82d3fc3c7c5dd3e037353c9f08bbe81e5c77",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Carnegie Mellon University\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  DocTools.cmake\n\n# @brief Tools related to gnerating or adding software documentation.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# adding / generating documentation\n\n# ============================================================================\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add documentation target.\n\n#\n\n# This function is used to add a software documentation files to the project\n\n# which are either just copied to the installation or generated from input\n\n# files such as in particular source code files and documentation files\n\n# marked up using one of the supported lightweight markup languages.\n\n#\n\n# The supported generators are:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b None @endtp\n\n#     <td>This generator simply installs the given file or all files within\n\n#         the specified directory.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Doxygen @endtp\n\n#     <td>Used to generate API documentation from in-source code comments and\n\n#         other related files marked up using Doxygen comments. See\n\n#         basis_add_doxygen_doc() for more details.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx @endtp\n\n#     <td>Used to generate documentation such as a web site from reStructuredText.\n\n#         See basis_add_sphinx_doc() for more details.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @param [in] TARGET_NAME Name of the documentation target or file.\n\n# @param [in] ARGN        Documentation generator as \"GENERATOR generator\" option\n\n#                         and additional arguments for the particular generator.\n\n#                         The case of the generator name is ignored, i.e.,\n\n#                         @c Doxygen, @c DOXYGEN, @c doxYgen are all valid arguments\n\n#                         which select the @c Doxygen generator. The default generator\n\n#                         is the @c None generator.</td>\n\n#\n\n# @returns Adds a custom target @p TARGET_NAME for the generation of the\n\n#          documentation.\n\n#\n\n# @sa basis_install_doc()\n\n# @sa basis_add_doxygen_doc()\n\n# @sa basis_add_sphinx_doc()\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Install documentation file(s).\n\n#\n\n# This function either adds an installation rule for a single documentation\n\n# file or a directory containing multiple documentation files.\n\n#\n\n# Example:\n\n# @code\n\n# basis_install_doc (\"User Manual.pdf\" OUTPUT_NAME \"BASIS User Manual.pdf\")\n\n# basis_install_doc (DeveloperManual.docx COMPONENT dev)\n\n# basis_install_doc (SourceManual.html    COMPONENT src)\n\n# @endcode\n\n#\n\n# @param [in] SOURCE Documentation file or directory to install.\n\n# @param [in] ARGN   List of optional arguments. Valid arguments are:\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b COMPONENT component @endtp\n\n#     <td>Name of the component this documentation belongs to.\n\n#         Defaults to @c BASIS_RUNTIME_COMPONENT.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory prefix. Defaults to @c INSTALL_DOC_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OUTPUT_NAME name @endtp\n\n#     <td>Name of file or directory after installation.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @sa basis_add_doc()\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add documentation to be generated by Doxygen.\n\n#\n\n# This function adds a build target to generate documentation from in-source\n\n# code comments and other related project pages using\n\n# <a href=\"http://www.stack.nl/~dimitri/doxygen/index.html\">Doxygen</a>.\n\n#\n\n# @param [in] TARGET_NAME Name of the documentation target.\n\n# @param [in] ARGN        List of arguments. The valid arguments are:\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b EXCLUDE_FROM_DOC @endtp\n\n#     <td>By default, the specified target is build as part of the global\n\n#         @c doc target. If this option is given, however, the added\n\n#         documentation will not be build as part of this target.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPONENT component @endtp\n\n#     <td>Name of the component this documentation belongs to.\n\n#         Defaults to @c BASIS_LIBRARY_COMPONENT.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory prefix. Defaults to\n\n#         @c BASIS_INSTALL_&ltTARGET&gt;_DIR in case of HTML output if set.\n\n#         Otherwise, the generated HTML files are not installed.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOXYFILE file @endtp\n\n#     <td>Name of the template Doxyfile.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROJECT_NAME name @endtp\n\n#     <td>Value for Doxygen's @c PROJECT_NAME tag which is used to\n\n#         specify the project name.@n\n\n#         Default: @c PROJECT_NAME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROJECT_NUMBER version @endtp\n\n#     <td>Value for Doxygen's @c PROJECT_NUMBER tag which is used\n\n#         to specify the project version number.@n\n\n#         Default: @c PROJECT_RELEASE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROJECT_WEBSITE url @endtp\n\n#     <td>Used for links to project website.@n\n\n#         Default: @c PROJECT_PACKAGE_WEBSITE </td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b INPUT path1 [path2 ...] @endtp\n\n#     <td>Value for Doxygen's @c INPUT tag which is used to specify input\n\n#         directories/files. Any given input path is added to the default\n\n#         input paths.@n\n\n#         Default: @c PROJECT_CODE_DIRS, @c BINARY_CODE_DIR,\n\n#                  @c PROJECT_INCLUDE_DIRS, @c BINARY_INCLUDE_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b INPUT_FILTER filter @endtp\n\n#     <td>\n\n#       Value for Doxygen's @c INPUT_FILTER tag which can be used to\n\n#       specify a default filter for all input files.@n\n\n#       Default: @c doxyfilter of BASIS.\n\n#     </td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b FILTER_PATTERNS pattern1 [pattern2...] @endtp\n\n#     <td>Value for Doxygen's @c FILTER_PATTERNS tag which can be used to\n\n#         specify filters on a per file pattern basis.@n\n\n#         Default: None.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b INCLUDE_PATH path1 [path2...] @endtp\n\n#     <td>Doxygen's @c INCLUDE_PATH tag can be used to specify one or more\n\n#         directories that contain include files that are not input files\n\n#         but should be processed by the preprocessor. Any given directories\n\n#         are appended to the default include path considered.\n\n#         Default: Directories added by basis_include_directories().</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b EXCLUDE_PATTERNS pattern1 [pattern2 ...] @endtp\n\n#     <td>Additional patterns used for Doxygen's @c EXCLUDE_PATTERNS tag\n\n#         which can be used to specify files and/or directories that\n\n#         should be excluded from the INPUT source files.@n\n\n#         Default: No exclude patterns.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OUTPUT fmt @endtp\n\n#     <td>Specify output formats in which to generate the documentation.\n\n#         Currently, only @c html and @c xml are supported.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OUTPUT_DIRECTORY dir @endtp\n\n#     <td>Value for Doxygen's @c OUTPUT_DIRECTORY tag which can be used to\n\n#         specify the output directory. The output files are written to\n\n#         subdirectories named \"html\", \"latex\", \"rtf\", and \"man\".@n\n\n#         Default: <tt>CMAKE_CURRENT_BINARY_DIR/TARGET_NAME</tt>.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COLS_IN_ALPHA_INDEX n @endtp\n\n#     <td>Number of columns in alphabetical index. Default: 3.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b IGNORE_PREFIX prefix1 [prefix2...] @endtp\n\n#     <td>In case all classes in a project start with a common prefix, all \n\n#         classes will be put under the same header in the alphabetical index. \n\n#         The IGNORE_PREFIX tag can be used to specify one or more prefixes that \n\n#         should be ignored while generating the index headers.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROVIDER_NAME name @endtp\n\n#     <td>Value for provider name, such as a company name,  \n\n#         that will be used for pages in the doxygen output.@n\n\n#         Default: @c PROJECT_PROVIDER_NAME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROVIDER_WEBSITE url @endtp\n\n#     <td>Value for provider website, such as a company website,  \n\n#         that will be used for pages in the doxygen output.@n\n\n#         Default: @c PROJECT_PROVIDER_WEBSITE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROVIDER_LOGO image_file @endtp\n\n#     <td>Value for provider logo file, such as a company logo,  \n\n#         that will be used for pages in the doxygen output.@n\n\n#         Default: @c PROJECT_PROVIDER_LOGO.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DIVISION_NAME name @endtp\n\n#     <td>Value for division name, such as a company division name,  \n\n#         that will be used for pages in the doxygen output.@n\n\n#         Default: @c PROJECT_DIVISION_NAME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DIVISION_WEBSITE url @endtp\n\n#     <td>Value for division website, such as a company division website,  \n\n#         that will be used for pages in the doxygen output.@n\n\n#         Default: @c PROJECT_DIVISION_WEBSITE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DIVISION_LOGO image_file @endtp\n\n#     <td>Value for division logo file, such as a company division logo,  \n\n#         that will be used for pages in the doxygen output.@n\n\n#         Default: @c PROJECT_DIVISION_LOGO.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b ENABLED_SECTIONS section1 [section2 ...] @endtp\n\n#     <td>The ENABLED_SECTIONS tag can be used to enable conditional  \n\n#         documentation sections, marked by \"\\if sectionname ... \\endif\".</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_HEADER html_file @endtp\n\n#     <td>The HTML_HEADER tag can be used to specify a personal HTML header for \n\n#         each generated HTML page. If none specified, the\n\n#         @c \"PROJECT_SOURCE_DIR/doc/doxygen_header.html(.in)?\" file is used if present.\n\n#         Otherwise, a default header is used. Specify the value @c Doxygen to use the\n\n#         standard header generated by Doxygen instead.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_FOOTER html_file @endtp\n\n#     <td>The HTML_FOOTER tag can be used to specify a personal HTML footer for \n\n#         each generated HTML page. If none specified, the\n\n#         @c \"PROJECT_SOURCE_DIR/doc/doxygen_footer.html(.in)?\" file is used if present.\n\n#         Otherwise, a default footer is used. Specify the value @c Doxygen to use the\n\n#         standard footer generated by Doxygen instead.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_EXTRA_STYLESHEET css_file @endtp\n\n#     <td>The HTML_EXTRA_STYLESHEET tag can be used to specify a user-defined cascading \n\n#         style sheet that is used by each HTML page. It can be used to \n\n#         fine-tune the look of the HTML output. If none specified, the\n\n#         @c \"PROJECT_SOURCE_DIR/doc/doxygen_extra.css(.in)?\" file is used if present.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_EXTRA_FILES file1 [file2...] @endtp\n\n#     <td>The HTML_EXTRA_FILES tag can be used to specify additional files needed\n\n#         for the HTML output of the API documentation.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DISABLE_PROJECT_NAME_DISPLAY@endtp\n\n#     <td>The DISABLE_PROJECT_NAME_DISPLAY option causes Doxygen's \n\n#         @c PROJECT_NAME text not to be displayed in the header.\n\n#         Use this if the project name is already part of the logo \n\n#         so it won't be there twice in the logo image and title text.</td>\n\n#   </tr>\n\n# </table>\n\n# @n\n\n# See <a href=\"http://www.stack.nl/~dimitri/doxygen/manual/config.html\">here</a> for a\n\n# documentation of the Doxygen tags.\n\n# @n@n\n\n# Example:\n\n# @code\n\n# basis_add_doxygen_doc (\n\n#   apidoc\n\n#   DOXYFILE        \"Doxyfile.in\"\n\n#   PROJECT_NAME    \"${PROJECT_NAME}\"\n\n#   PROJECT_VERSION \"${PROJECT_VERSION}\"\n\n#   COMPONENT       dev\n\n# )\n\n# @endcode\n\n#\n\n# @sa basis_add_doc()\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check target name\n",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# verbose output\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# find Doxygen\n",
        "Line" : 378,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# parse arguments\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# handle special arguments\n",
        "Line" : 423,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# make file paths absolute and check if files exist\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# default component\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# configuration file\n",
        "Line" : 462,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# default project attributes and logos\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# set visibility property of project logos\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# allow the user to disable the text header if desired\n",
        "Line" : 518,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# standard input files\n",
        "Line" : 524,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# package configuration files - only exist *after* this function executed\n",
        "Line" : 558,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# input directories\n",
        "Line" : 562,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# in case of scripts, have Doxygen process the configured versions for the\n\n# installation which are further located in proper subdirectories instead\n\n# of the original source files\n",
        "Line" : 575,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# CMake <3.1 stores path to internal build directory here\n",
        "Line" : 585,
        "CharPositionInLine" : 39
      },
      "22" : {
        "Text" : "# add .dox files as input\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# alphabetic order\n",
        "Line" : 599,
        "CharPositionInLine" : 24
      },
      "24" : {
        "Text" : "# add .dox files of BASIS modules\n",
        "Line" : 601,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# add .dox files of used BASIS utilities\n",
        "Line" : 603,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# include path - Disabled as this increases the runtime of Doxygen but\n\n#                generally the source of third-party packages are not\n\n#                really referenced. Only the source files of this\n\n#                project have to be considered. This code is kept as it\n\n#                might be used again at a later point once it is figured\n\n#                how Doxygen can be only rerun if necessary.\n\n#basis_get_project_property (INCLUDE_DIRS PROPERTY PROJECT_INCLUDE_DIRS)\n\n#foreach (D IN LISTS INCLUDE_DIRS)\n\n#  list (FIND DOXYGEN_INPUT \"${D}\" IDX)\n\n#  if (IDX EQUAL -1)\n\n#    list (APPEND DOXYGEN_INCLUDE_PATH \"${D}\")\n\n#  endif ()\n\n#endforeach ()\n\n#basis_list_to_delimited_string (\n\n#  DOXYGEN_INCLUDE_PATH \"\\\"\\nINCLUDE_PATH          += \\\"\" ${DOXYGEN_INCLUDE_PATH}\n\n#)\n\n#set (DOXYGEN_INCLUDE_PATH \"\\\"${DOXYGEN_INCLUDE_PATH}\\\"\")\n\n# make string from DOXYGEN_INPUT - after include path was set\n",
        "Line" : 617,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# outputs\n",
        "Line" : 639,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# enable generation of this output\n\n# relative output directory\n",
        "Line" : 659,
        "CharPositionInLine" : 37
      },
      "29" : {
        "Text" : "# input filters\n",
        "Line" : 662,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Doxygen on Windows (XP, 32-bit) (at least up to version 1.8.0) seems\n\n# to have a problem of not calling filters which have a space character\n\n# in their file path correctly. The doxyfilter.bat Batch program is used\n\n# as a wrapper for the actual filter which is part of the BASIS build.\n\n# As this file is in the working directory of Doxygen, it can be\n\n# referenced relative to this working directory, i.e., without file paths.\n\n# The Batch program itself then calls the actual Doxygen filter with proper\n\n# quotes to ensure that spaces in the file path are handled correctly.\n\n# The file extension .bat shall distinguish this wrapper script from the actual\n\n# doxyfilter.cmd which is generated by BASIS on Windows.\n",
        "Line" : 678,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# exclude patterns\n",
        "Line" : 698,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# section for man pages\n",
        "Line" : 705,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# other settings\n",
        "Line" : 709,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# click & jump in emacs and Visual Studio\n",
        "Line" : 714,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# installation directories\n",
        "Line" : 720,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# user setting\n",
        "Line" : 726,
        "CharPositionInLine" : 77
      },
      "37" : {
        "Text" : "# common destination\n",
        "Line" : 730,
        "CharPositionInLine" : 64
      },
      "38" : {
        "Text" : "# default for manual pages\n",
        "Line" : 733,
        "CharPositionInLine" : 87
      },
      "39" : {
        "Text" : "# do not install excludes by default\n",
        "Line" : 735,
        "CharPositionInLine" : 36
      },
      "40" : {
        "Text" : "# default destination\n",
        "Line" : 736,
        "CharPositionInLine" : 60
      },
      "41" : {
        "Text" : "# determine tool to generate pdf documentation, see USE_PDFLATEX in Doxyfile.in\n",
        "Line" : 740,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# use default custom HTML files if available and none explicitly specified\n",
        "Line" : 748,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# configure/copy custom HTML ressource files\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# list of enabled Doxygen comment sections\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# configure Doxygen configuration file\n",
        "Line" : 831,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# add build target\n",
        "Line" : 834,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# memorize certain settings which might be useful to know by other functions\n\n# in particular, in case of the use of the XML output by other documentation\n\n# build tools such as Sphinx, the function that wants to make use of this\n\n# output can check if the Doxygen target has been configured properly and\n\n# further requires to know the location of the XML output\n",
        "Line" : 845,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# The Doxygen filter, if a build target of this project, has to be build\n\n# before the documentation can be generated.\n",
        "Line" : 882,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# The public header files shall be configured/copied before.\n",
        "Line" : 887,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# The documentation shall be build after all other executable and library\n\n# targets have been build. For example, a .py.in script file shall first\n\n# be \"build\", i.e., configured before the documentation is being generated\n\n# from the configured .py file.\n",
        "Line" : 891,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# add general \"doc\" target\n",
        "Line" : 902,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# install documentation\n",
        "Line" : 909,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# done\n",
        "Line" : 984,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add documentation target to be generated by Sphinx (sphinx-build).\n\n#\n\n# This function adds a build target to generate documentation from\n\n# <a href=\"http://docutils.sourceforge.net/rst.html\">reStructuredText</a>\n\n# (.rst files) using <a href=\"http://sphinx.pocoo.org/\">Sphinx</a>.\n\n#\n\n# @param [in] TARGET_NAME Name of the documentation target.\n\n# @param [in] ARGN        List of arguments. The valid arguments are:\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b EXCLUDE_FROM_DOC @endtp\n\n#     <td>By default, the specified target is build as part of the global\n\n#         @c doc target. If this option is given, however, the added\n\n#         documentation will not be build as part of this target.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BUILDER(S) builder... @endtp\n\n#     <td>Sphinx builders to use. For each named builder, a build target\n\n#         named &lt;TARGET_NAME&gt;_&lt;builder&gt; is added.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DEFAULT_BUILDER builder @endtp\n\n#     <td>Default Sphinx builder to associated with the @c TARGET_NAME\n\n#         build target. Defaults to the first builder named by @c BUILDERS.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b AUTHOR(S) name @endtp\n\n#     <td>Names of authors who wrote this documentation.\n\n#         (default: @c PROJECT_AUTHORS)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COPYRIGHT text @endtp\n\n#     <td>Copyright statement for generated files. (default: @c PROJECT_COPYRIGHT)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPONENT component @endtp\n\n#     <td>Name of the component this documentation belongs to.\n\n#         Defaults to @c BASIS_RUNTIME_COMPONENT.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory prefix. Used whenever there is no specific\n\n#         destination specified for a particular Sphinx builder. Defaults to\n\n#         @c BASIS_INSTALL_&ltTARGET&gt;_DIR in case of HTML output if set.\n\n#         Otherwise, the generated HTML files are not installed.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b &lt;BUILDER&gt;_DESTINATION dir @endtp\n\n#     <td>Installation directory for files generated by the specific builder.<td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b EXTENSIONS ext... @endtp\n\n#     <td>Names of Sphinx extensions to enable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BREATHE target... @endtp\n\n#     <td>Adds a project for the breathe extension which allows the\n\n#         inclusion of in-source code documentation extracted by Doxygen.\n\n#         For this to work, the specified Doxygen target has to be\n\n#         configured with the XML output enabled.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOXYLINK target... @endtp\n\n#     <td>Adds a role for the doxylink Sphinx extension which allows to cross-reference\n\n#         generated HTML API documentation generated by Doxygen.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOXYLINK_URL url @endtp\n\n#     <td>URL to Doxygen documentation. Use DOXYLINK_PREFIX and/or DOXYLINK_SUFFIX\n\n#         instead if you use multiple Doxygen targets, where the target name is\n\n#         part of the URL.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOXYLINK_PREFIX url @endtp\n\n#     <td>Prefix to use for links to Doxygen generated documentation pages\n\n#         as generated by the doxylink Sphinx extension. If this prefix does\n\n#         not start with a protocol such as http:// or https://, it is prefixed\n\n#         to the default path determined by this function relative to the build\n\n#         or installed Doxygen documentation.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOXYLINK_SUFFIX suffix @endtp\n\n#     <td>Suffix for links to Doxygen generated documentation pages as generated\n\n#         by the doxylink Sphinx extension.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOXYDOC target... @endtp\n\n#     <td>Alias for both @c BREATHE and @c DOXYLINK options.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b CONFIG_FILE file @endtp\n\n#     <td>Sphinx configuration file. Defaults to @c BASIS_SPHINX_CONFIG.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SOURCE_DIRECTORY @endtp\n\n#     <td>Root directory of Sphinx source files.\n\n#         Defaults to the current source directory or, if a subdirectory\n\n#         named @c TARGET_NAME in lowercase only exists, to this subdirectory.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OUTPUT_NAME @endtp\n\n#     <td>Output name for generated documentation such as PDF document or MAN page.\n\n#         Defaults to @c PROJECT_NAME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OUTPUT_DIRECTORY @endtp\n\n#     <td>Root output directory for generated files. Defaults to the binary\n\n#         directory corresponding to the set @c SOURCE_DIRECTORY.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b TAG tag @endtp\n\n#     <td>Tag argument of <tt>sphinx-build</tt>.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b TEMPLATES_PATH @endtp\n\n#     <td>Path to template files. Defaults to <tt>SOURCE_DIRECTORY/templates/</tt>.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MASTER_DOC name @endtp\n\n#     <td>Name of master document. Defaults to <tt>index</tt>.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b EXCLUDE_PATTERN pattern @endtp\n\n#     <td>A glob-style pattern that should be excluded when looking for source files.\n\n#         Specify this option more than once to specify multiple exclude patterns.\n\n#         They are matched against the source file names relative to the source directory,\n\n#         using slashes as directory separators on all platforms.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_TITLE title @endtp\n\n#     <td>Title of HTML web site.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_THEME theme @endtp\n\n#     <td>Name of HTML theme. Defaults to the @c sbia theme included with BASIS.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_THEME_PATH dir @endtp\n\n#     <td>Directory of HTML theme. Defaults to @c BASIS_SPHINX_HTML_THEME_PATH.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_LOGO file @endtp\n\n#     <td>Logo to display in sidebar of HTML pages.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_FAVICON file @endtp\n\n#     <td>Favorite square icon often displayed by browsers in the tab bar.\n\n#         Should be a @c .ico file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_STATIC_PATH dir @endtp\n\n#     <td>Directory for static files of HTML pages. Defaults to <tt>SOURCE_DIRECTORY/static/</tt>.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_STYLE css @endtp\n\n#     <td>The style sheet to use for HTML pages. A file of that name must exist either in Sphinx'\n\n#         default static/ path or the specified @c HTML_STATIC_PATH. Default is the stylesheet\n\n#         given by the selected theme. If you only want to add or override a few things compared\n\n#         to the theme’s stylesheet, use CSS \\@import to import the theme’s stylesheet.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HTML_SIDEBARS name... @endtp\n\n#     <td>Names of HTML template files for sidebar(s). Defaults to none if not specified.\n\n#         Valid default templates are @c localtoc, @c globaltoc, @c searchbox, @c relations,\n\n#         @c sourcelink. See <a href=\"http://sphinx.pocoo.org/config.html#confval-html_sidebars\">\n\n#         Shinx documentation of html_sidebars option</a>. Custom templates can be used as\n\n#         well by copying the template <tt>.html</tt> file to the @c TEMPLATES_PATH directory.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_HTML_DOMAIN_INDICES @endtp\n\n#     <td>Set Sphinx configuration option @c html_domain_indices to @c False. (Default: @c True)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_HTML_MODINDEX @endtp\n\n#     <td>Set Sphinx configuration option @c html_use_modindex to @c False. (Default: @c True)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_HTML_INDEX @endtp\n\n#     <td>Set Sphinx configuration option @c html_use_index to @c False. (Default: @c True)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LATEX_MASTER_DOC name @endtp\n\n#     <td>Name of master document for LaTeX builder. Defaults to <tt>MASTER_DOC</tt>.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LATEX_TITLE title @endtp\n\n#     <td>Title for LaTeX/PDF output. Defaults to title of <tt>index.rst</tt>.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LATEX_LOGO file @endtp\n\n#     <td>Logo to display above title in generated LaTeX/PDF output.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LATEX_DOCUMENT_CLASS howto|manual @endtp\n\n#     <td>Document class to use by @c latex builder.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LATEX_SHOW_URLS @endtp\n\n#     <td>See Sphinx documentation of the\n\n#         <a href=\"http://sphinx.pocoo.org/config.html#confval-latex_show_urls\">latex_show_urls</a> option.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LATEX_SHOW_PAGEREFS @endtp\n\n#     <td>See Sphinx documentation of the\n\n#         <a href=\"\">latex_show_pagerefs</a> option.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MAN_SECTION num @endtp\n\n#     <td>Section number for manual pages generated by @c man builder.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @sa basis_add_doc()\n",
        "Line" : 988,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# check target name\n",
        "Line" : 1204,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# verbose output\n",
        "Line" : 1209,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# parse arguments\n",
        "Line" : 1211,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# note that additional multiple value arguments are parsed later on below\n\n# this is necessary b/c all unparsed arguments are considered to be options\n\n# of the used HTML theme\n",
        "Line" : 1224,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# source directory\n",
        "Line" : 1233,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# component\n",
        "Line" : 1243,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# find Sphinx\n",
        "Line" : 1250,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# parse remaining arguments\n",
        "Line" : 1268,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# SPHINX_HTML_THEME_OPTIONS\n",
        "Line" : 1285,
        "CharPositionInLine" : 6
      },
      "64" : {
        "Text" : "# name of next option\n",
        "Line" : 1297,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# BUILDER option\n",
        "Line" : 1301,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# AUTHORS option\n",
        "Line" : 1307,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# EXTENSIONS option\n",
        "Line" : 1310,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# built-in extension\n",
        "Line" : 1312,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# map originial name of extensions included with BASIS\n",
        "Line" : 1315,
        "CharPositionInLine" : 6
      },
      "70" : {
        "Text" : "# DOXYDOC\n",
        "Line" : 1320,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# BREATHE\n",
        "Line" : 1324,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# DOXYLINK\n",
        "Line" : 1327,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# HTML_SIDEBARS\n",
        "Line" : 1330,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# TEMPLATES_PATH\n",
        "Line" : 1336,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# HTML_STATIC_PATH\n",
        "Line" : 1342,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# EXCLUDE_PATTERN\n",
        "Line" : 1348,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# value of theme option\n",
        "Line" : 1351,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# append parsed option setting to SPHINX_HTML_THEME_OPTIONS\n",
        "Line" : 1362,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# authors\n",
        "Line" : 1374,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# default builders\n",
        "Line" : 1383,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# output directories\n",
        "Line" : 1395,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# configuration directory\n",
        "Line" : 1422,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# build configuration\n",
        "Line" : 1425,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# installation directories\n",
        "Line" : 1450,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# user setting\n",
        "Line" : 1456,
        "CharPositionInLine" : 76
      },
      "86" : {
        "Text" : "# common destination\n",
        "Line" : 1460,
        "CharPositionInLine" : 55
      },
      "87" : {
        "Text" : "# default for manual pages\n",
        "Line" : 1465,
        "CharPositionInLine" : 86
      },
      "88" : {
        "Text" : "# default for Texinfo files\n",
        "Line" : 1469,
        "CharPositionInLine" : 65
      },
      "89" : {
        "Text" : "# do not install excludes by default\n",
        "Line" : 1471,
        "CharPositionInLine" : 36
      },
      "90" : {
        "Text" : "# default location\n",
        "Line" : 1472,
        "CharPositionInLine" : 59
      },
      "91" : {
        "Text" : "# enable required extension\n",
        "Line" : 1486,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# doxylink configuration\n",
        "Line" : 1493,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# safe fall back\n",
        "Line" : 1530,
        "CharPositionInLine" : 40
      },
      "94" : {
        "Text" : "# breathe configuration\n",
        "Line" : 1537,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# HTML output options\n",
        "Line" : 1557,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# LaTeX output options\n",
        "Line" : 1573,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# turn html_logo, html_favicon, and latex_logo into absolute file path\n",
        "Line" : 1582,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# turn CMake lists into Python lists\n",
        "Line" : 1598,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# configuration file\n",
        "Line" : 1608,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# add target to build documentation\n",
        "Line" : 1620,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# target to run all builders\n",
        "Line" : 1628,
        "CharPositionInLine" : 40
      },
      "102" : {
        "Text" : "# cleanup on \"make clean\"\n",
        "Line" : 1685,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# add general target which depends on default builder only\n",
        "Line" : 1693,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# add general \"doc\" target\n",
        "Line" : 1700,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# memorize important target properties\n",
        "Line" : 1707,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# cleanup on \"make clean\"\n",
        "Line" : 1721,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# install documentation\n",
        "Line" : 1728,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# done\n",
        "Line" : 1838,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# ============================================================================\n\n# change log\n\n# ============================================================================\n",
        "Line" : 1842,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add target for generation of ChangeLog file.\n\n#\n\n# The ChangeLog is either generated from the Subversion or Git log depending\n\n# on which revision control system is used by the project. Moreover, the\n\n# project's source directory must be either a Subversion working copy or\n\n# the root of a Git repository, respectively. In case of Subversion, if the\n\n# command-line tool svn2cl(.sh) is installed, it is used to output a nicer\n\n# formatted change log.\n",
        "Line" : 1846,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# generate ChangeLog from Subversion history\n",
        "Line" : 1872,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# using svn2cl command\n",
        "Line" : 1889,
        "CharPositionInLine" : 6
      },
      "113" : {
        "Text" : "# otherwise, use svn log output directly\n",
        "Line" : 1913,
        "CharPositionInLine" : 6
      },
      "114" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# generate ChangeLog from Git log\n",
        "Line" : 1938,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# neither SVN nor Git repository\n",
        "Line" : 1966,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# disable changelog target\n",
        "Line" : 1976,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# cleanup on \"make clean\"\n",
        "Line" : 1984,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# install ChangeLog\n",
        "Line" : 1988,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 119
    },
    "src/cmake/ExecuteProcess.cmake" : {
      "ObjectId" : "c23f52951428167913eff0531769ce7d51b434fc",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  ExecuteProcess.cmake\n\n# @brief Execute process using CMake script mode.\n\n#\n\n# This CMake script can be used as argument for the -P option of cmake, when\n\n# another command shall be executed by CMake, for example, as custom build\n\n# command. The advantage of using this script is that all options of the\n\n# CMake command execute_process() can be used, i.e., a timeout can be\n\n# specified.\n\n#\n\n# The arguments of the execute_process() command have to be specified via\n\n# the -D option on the command line of cmake before the -P \\<this script\\>\n\n# option is given. The name of the CMake variables must be equal the\n\n# name of the arguments to the execute_process() command.\n\n#\n\n# Arguments of execute_process() which are considered:\n\n#\n\n# - @b COMMAND\n\n# - @b WORKING_DIRECTORY\n\n# - @b TIMEOUT\n\n# - @b OUTPUT_FILE\n\n# - @b ERROR_FILE\n\n# - @b OUTPUT_QUIET\n\n# - @b ERROR_QUIET\n\n# - @b OUTPUT_STRIP_TRAILING_WHITESPACE\n\n# - @b ERROR_STRIP_TRAILING_WHITESPACE\n\n#\n\n# Additionally, matching expressions (separated by ';') to identify error messages\n\n# in the output streams stdout and stderr can be specified by the input argument\n\n# ERROR_EXPRESSION. When the output of the executed command matches one of\n\n# the error expressions, a fatal error message is displayed causing CMake to\n\n# return the exit code 1.\n\n#\n\n# Setting VERBOSE to true enables verbose output messages.\n\n#\n\n# When the input argument LOG_ARGS evaluates to true, the values of COMMAND,\n\n# WORKING_DIRECTORY, and TIMEOUT are added to the top of the output files\n\n# specified by OUTPUT_FILE and ERROR_FILE.\n\n#\n\n# The arguments ARGS and ARGS_FILE can be used to specify (additional) command\n\n# arguments. The content of the text file ARGS_FILE is read when it this file\n\n# exists. Separate lines of this file are considered single arguments.\n\n# The arguments specified by ARGS and ARGS_FILE are concatenated where the\n\n# arguments given by ARGS follow after the ones read from the ARGS_FILE.\n\n# All occurences of the string 'ARGS' in the COMMAND are replaced by these\n\n# arguments. If no such string is present, the arguments are simply passed\n\n# to the execute_process() command as its ARGS argument.\n\n# The argument ARGS_SEPARATOR specifies the separator used to separate the\n\n# arguments given by ARGS and ARGS_FILE when the 'ARGS' string in COMMAND\n\n# is replaced. By default, it is set to ';'.\n\n#\n\n# Example:\n\n# @code\n\n# cmake -DCOMMAND='ls;-l' -DWORKING_DIRECTORY='/' -DTIMEOUT=60\n\n#       -P ExecuteProcess.cmake\n\n# @endcode\n\n#\n\n# The output of the executed process can further be searched for error expressions\n\n# specified by the ERROR_EXPRESSION variable. If the process output matches\n\n# this expression, a fatal CMake error is raised.\n\n#\n\n# Certain errors may be temporary such as in particular a license checkout\n\n# error of the MATLAB Compiler. Such errors can be filtered out using the\n\n# RETRY_EXPRESSION variable. If such error is detected, this script sleeps for\n\n# RETRY_DELAY seconds and then executes the process again. This is done\n\n# at maximum RETRY_ATTEMPTS times. If the retry attempts are exceeded, a\n\n# fatal CMake error is raised instead.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake2.6docs.html#command:execute_process\n\n#\n\n# @ingroup CMakeUtilities\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# unset environment variables that may cause problems otherwise\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize arguments\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# verbose message of command to execute\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# execute command\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# execute process at least once\n",
        "Line" : 199,
        "CharPositionInLine" : 17
      },
      "7" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# whether retry is required is decided upon after process execution\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# execute process\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# read in output from log files\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# parse output for recoverable errors\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# retry\n",
        "Line" : 225,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# no retries left\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# sleep for given amount of seconds before retrying to execute process\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# use sleep command if available, i.e., on Unix and also on Windows\n\n# if the Windows 2003 Resource Kit is installed\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# work-around using ping command if sleep command not available, i.e.,\n\n# on Windows where the Windows 2003 Resource Kit is not installed\n\n# See http://malektips.com/dos0017.html\n",
        "Line" : 249,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# usually not required as sleep command should be available\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# parse output for errors\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# give some hints for known error messages\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# MATLAB Compiler\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# append hints to output\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# prepand command to log file\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# print error message (and exit with exit code 1) on error\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# print error\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "src/cmake/ExportTools.cmake" : {
      "ObjectId" : "fc2066ee593b857630fdd2767cc70fcaf0d0a7a9",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  ExportTools.cmake\n\n# @brief Functions and macros for the export of targets.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add target to export set.\n\n#\n\n# Targets of a subproject are added to the export set named after the subproject\n\n# itself. All other targets, including in particular those of other modules,\n\n# are added to the export set named after the top-level project.\n\n#\n\n# @param[out] EXPORT_OPTION Export option for install() command including\n\n#                           the EXPORT option name. Set to an empty string\n\n#                           if target is not installed.\n\n# @param[in]  TARGET_UID    UID of target to be exported.\n\n# @param[in]  IS_TEST       Whether given target is a test executable or library.\n\n# @param[in]  ARGN          Optional installation destinations.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add target to custom export set.\n\n#\n\n# Targets of a subproject are added to the export set named after the subproject\n\n# itself. All other targets, including in particular those of other modules,\n\n# are added to the export set named after the top-level project.\n\n#\n\n# @param[in]  TARGET_UID UID of target to add to the export set.\n\n# @param[in]  IS_TEST    Whether given target is a test executable or library.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get soname of object file.\n\n#\n\n# This function extracts the soname from object files in the ELF format on\n\n# systems where the objdump command is available. On all other systems,\n\n# an empty string is returned.\n\n#\n\n# @param [out] SONAME  The soname of the object file.\n\n# @param [in]  OBJFILE Object file in ELF format.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# get absolute path of object file\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# usually CMake did this already\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# run objdump and extract soname\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# return\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Generate header of exports file.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add code to compute prefix relative to @c INSTALL_CONFIG_DIR.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add code to add import targets.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add code to set properties of imported targets for build tree.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add code to set properties of imported targets for installation.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add footer of exports file.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Export all targets added by basis_add_* commands.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# parse arguments\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# export non-custom targets\n",
        "Line" : 276,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# export custom targets and/or test targets\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# write exports for build tree\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# write exports for installation - excluding test targets\n",
        "Line" : 320,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/cmake/ExternalData.cmake" : {
      "ObjectId" : "5873a75bd47783be4147e2a1ffbb203e7384b72d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  ExternalData.cmake\n\n# @brief Manage data files stored outside the source tree.\n\n#\n\n# Copyright 2010-2011 Kitware, Inc. All rights reserved.\n\n# File modified by Andreas Schuh.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Manage data files stored outside source tree\n\n# Use this module to unambiguously reference data files stored outside the\n\n# source tree and fetch them at build time from arbitrary local and remote\n\n# content-addressed locations.  Functions provided by this module recognize\n\n# arguments with the syntax \"DATA{<name>}\" as references to external data,\n\n# replace them with full paths to local copies of those data, and create build\n\n# rules to fetch and update the local copies.\n\n#\n\n# The DATA{} syntax is literal and the <name> is a full or relative path\n\n# within the source tree.  The source tree must contain either a real data\n\n# file at <name> or a \"content link\" at <name><ext> containing a hash of the\n\n# real file using a hash algorithm corresponding to <ext>.  For example, the\n\n# argument \"DATA{img.png}\" may be satisfied by either a real \"img.png\" file in\n\n# the current source directory or a \"img.png.md5\" file containing its MD5 sum.\n\n#\n\n# The 'ExternalData_Expand_Arguments' function evaluates DATA{} references\n\n# in its arguments and constructs a new list of arguments:\n\n#  ExternalData_Expand_Arguments(\n\n#    <target>   # Name of data management target\n\n#    <outVar>   # Output variable\n\n#    [args...]  # Input arguments, DATA{} allowed\n\n#    )\n\n# It replaces each DATA{} reference argument with the full path of a real\n\n# data file on disk that will exist after the <target> builds.\n\n#\n\n# The 'ExternalData_Add_Test' function wraps around the CMake add_test()\n\n# command but supports DATA{} reference arguments:\n\n#  ExternalData_Add_Test(\n\n#    <target>   # Name of data management target\n\n#    ...        # Arguments of add_test(), DATA{} allowed\n\n#    )\n\n# It passes its arguments through ExternalData_Expand_Arguments and then\n\n# invokes add_test() using the results.\n\n#\n\n# The 'ExternalData_Add_Target' function creates a custom target to manage\n\n# local instances of data files stored externally:\n\n#  ExternalData_Add_Target(\n\n#    <target>   # Name of data management target\n\n#    )\n\n# It creates custom commands in the target as necessary to make data files\n\n# available for each DATA{} reference previously evaluated by other functions\n\n# provided by this module.  A list of URL templates must be provided in the\n\n# variable ExternalData_URL_TEMPLATES using the placeholders \"%(algo)\" and\n\n# \"%(hash)\" in each template.  Data fetch rules try each URL template in order\n\n# by substituting the hash algorithm name for \"%(algo)\" and the hash value for\n\n# \"%(hash)\".\n\n#\n\n# The following hash algorithms are supported:\n\n#    %(algo)     <ext>     Description\n\n#    -------     -----     -----------\n\n#    MD5         .md5      Message-Digest Algorithm 5, RFC 1321\n\n# Note that the hashes are used only for unique data identification and\n\n# download verification.  This is not security software.\n\n#\n\n# Example usage:\n\n#   include(ExternalData)\n\n#   set(ExternalData_URL_TEMPLATES \"file:///local/%(algo)/%(hash)\"\n\n#                                  \"http://data.org/%(algo)/%(hash)\")\n\n#   ExternalData_Add_Test(MyData\n\n#     NAME MyTest\n\n#     COMMAND MyExe DATA{MyInput.png}\n\n#     )\n\n#   ExternalData_Add_Target(MyData)\n\n# When test \"MyTest\" runs the \"DATA{MyInput.png}\" argument will be replaced by\n\n# the full path to a real instance of the data file \"MyInput.png\" on disk.  If\n\n# the source tree contains a content link such as \"MyInput.png.md5\" then the\n\n# \"MyData\" target creates a real \"MyInput.png\" in the build tree.\n\n#\n\n# The DATA{} syntax can automatically recognize and fetch a file series.  If\n\n# the source tree contains a group of files or content links named like a\n\n# series then a DATA{} reference to one member adds rules to fetch all of\n\n# them.  Although all members of a series are fetched, only the file\n\n# originally named by the DATA{} argument is substituted for it.  Two\n\n# variables configure recognition of a series from DATA{<name>}.  First,\n\n# ExternalData_SERIES_PARSE is a regex of the form \"^(...)(...)(...)$\" to\n\n# parse <prefix>, <number>, and <suffix> parts from <name>.  Second,\n\n# ExternalData_SERIES_MATCH is a regex matching the <number> part of series\n\n# members named <prefix><number><suffix>.  Note that the <suffix> of a series\n\n# does not include a hash-algorithm extension.  Both series configuration\n\n# variables have default values that work well for common cases.\n\n#\n\n# The variable ExternalData_LINK_CONTENT may be set to the name of a supported\n\n# hash algorithm to enable automatic conversion of real data files referenced\n\n# by the DATA{} syntax into content links.  For each such <file> a content\n\n# link named \"<file><ext>\" is created.  The original file is renamed to the\n\n# form \".ExternalData_<algo>_<hash>\" to stage it for future transmission to\n\n# one of the locations in the list of URL templates (by means outside the\n\n# scope of this module).  The data fetch rule created for the content link\n\n# will use the staged object if it cannot be found using any URL template.\n\n#\n\n# The variable ExternalData_SOURCE_ROOT may be set to the highest source\n\n# directory containing any path named by a DATA{} reference.  The default is\n\n# CMAKE_SOURCE_DIR.  ExternalData_SOURCE_ROOT and CMAKE_SOURCE_DIR must refer\n\n# to directories within a single source distribution (e.g. they come together\n\n# in one tarball).\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2011 Kitware, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# @brief @todo Document function.\n\n#\n\n# @param [in] target Name of the test.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# @brief @todo Document funtion.\n\n#\n\n# @param [in] target Name of the external data target.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set \"_ExternalData_FILE_${file}\" for each output file to avoid duplicate\n\n# rules.  Use local data first to prefer real files over content links.\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Custom commands to copy or link local data.\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Custom commands to fetch remote data.\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Users care about the data file, so hide the hash/timestamp file.\n",
        "Line" : 199,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# The hash/timestamp file is the output from the build perspective.\n\n# List the real file as a second output in case it is a broken link.\n\n# The files must be listed in this order so CMake can hide from the\n\n# make tool that a symlink target may not be newer than the input.\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Run the data fetch/update script.\n",
        "Line" : 206,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Update whenever the object hash changes.\n",
        "Line" : 213,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Custom target to drive all update commands.\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##############################################################################\n\n# @brief Replace DATA{} references with real arguments.\n\n#\n\n# @param [in]  target     Name of the external data target.\n\n# @param [out] outArgsVar List of expanded arguments.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Replace DATA{} references with real arguments.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Private helper interface\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# TODO: Errors\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# TODO: Other hashes.\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Convert to full path.\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# TODO: If ${data} does not start in \"./\" or \"../\" then use search path?\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Convert to relative path under the source tree.\n",
        "Line" : 301,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# TODO: .../${target} ?\n",
        "Line" : 313,
        "CharPositionInLine" : 50
      },
      "22" : {
        "Text" : "# Configure series parsing and matching.\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Parse the base, number, and extension components of the series.\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Glob files that might match the series.\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Match base, number, and extension perhaps followed by a hash ext.\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Entries external to the source tree.\n\n# Entries internal to the source tree.\n",
        "Line" : 357,
        "CharPositionInLine" : 19
      },
      "27" : {
        "Text" : "# Make the series available in the build tree.\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# The whole series is in the source tree.\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Private script mode interface\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Create a temporary file first.\n",
        "Line" : 418,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Create a symbolic link.\n",
        "Line" : 424,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Use relative path if files are close enough.\n",
        "Line" : 427,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Create a copy.\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Atomically create/replace the real destination.\n",
        "Line" : 445,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# TODO: timeout\n",
        "Line" : 465,
        "CharPositionInLine" : 65
      },
      "36" : {
        "Text" : "# Verify downloaded object.\n",
        "Line" : 472,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Check if file already corresponds to the object.\n",
        "Line" : 518,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#message(STATUS \"File already corresponds to object\")\n",
        "Line" : 524,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Touch the file to convince the build system it is up to date.\n",
        "Line" : 530,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Atomically update the hash/timestamp file to record the object referenced.\n",
        "Line" : 536,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 41
    },
    "src/cmake/FindAFNI.cmake" : {
      "ObjectId" : "fbdbc7a95b9301a85e4c95899e9eb18097d03cc5",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindAFNI.cmake\n\n# @brief Find programs of the AFNI package.\n\n#\n\n# @sa http://afni.nimh.nih.gov/afni/\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b AFNI_DIR @endtp\n\n#     <td>The AFNI package files are searched under the specified root\n\n#         directory. If they are not found there, the default search paths\n\n#         are considered. This variable can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b AFNI_FIND_COMPONENTS @endtp\n\n#     <td>List of components, i.e., AFNI programs, to look for.\n\n#         Specify using COMPONENTS argument of find_package() command.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b AFNI_FIND_OPTIONAL_COMPONENTS @endtp\n\n#     <td>List of optional components, i.e., AFNI programs, to look for.\n\n#         Specify using OPTIONAL_COMPONENTS argument of find_package() command.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b AFNI_FOUND @endtp\n\n#     <td>Whether all required programs of the AFNI package were found. If only\n\n#         optional programs were searched, this variable is set to @c TRUE if\n\n#         all named programs were found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b AFNI_&lt;tool&gt;_EXECUTABLE @endtp\n\n#     <td>Absolute path of the corresponding found AFNI program, e.g., @c AFNI_3dcalc_EXECUTABLE.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# private helper macro to look for a particular required or optional AFNI program\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# looking either only for required components or for both optional and\n\n# and required components; in this case, let AFNI_FOUND reflect only\n\n# whether all required components were found, but ignore the optional ones;\n\n# the caller can still check AFNI_<tool>_EXECUTABLE explicitly for these\n\n# optional components to see whether or not a particular AFNI programs was found\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# looking only for optional components anyway, so let AFNI_FOUND reflect\n\n# if all of these optional components were found instead\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find AFNI program(s)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set AFNI_DIR\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/cmake/FindBASH.cmake" : {
      "ObjectId" : "0df8710f5a91d8b00ed7e501b25d6c7af31a71d1",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindBASH.cmake\n\n# @brief Find BASH interpreter.\n\n#\n\n# Sets the CMake variables @c BASH_FOUND, @c BASH_EXECUTABLE,\n\n# @c BASH_VERSION_STRING, @c BASH_VERSION_MAJOR, @c BASH_VERSION_MINOR, and\n\n# @c BASH_VERSION_PATCH.\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find BASH executable\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# get version of found BASH executable\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/cmake/FindBLAS.cmake" : {
      "ObjectId" : "f0f1b5e185ad9da6198fbaf89c8ee946b84c838f",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#  notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#  notice, this list of conditions and the following disclaimer in the\n\n#  documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#  nor the names of their contributors may be used to endorse or promote\n\n#  products derived from this software without specific prior written\n\n#  permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindBLAS.cmake\n\n# @brief Find BLAS library.\n\n#\n\n# This module finds an installed fortran library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# Modified by Andreas Schuh to enable the use at SBIA, where an ATLAS C library\n\n# is installed which contains the symbols without trailing _ character, i.e.,\n\n# instead of checking the existence of the cblas_dgemm_ function, the\n\n# existence of the cblas_dgemm function has to be checked. Moreover, added\n\n# code to mark variable as advanced and only show them to the user if\n\n# no required library was found. If the found library is cblas, the corresponding\n\n# header file cblas.h is searched as well. Therefore, added the BLAS_INCLUDE_DIR\n\n# variable which is only defined if required.\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use BLAS\n\n#  BLAS_INCLUDE_DIR - uncached list of include directories for C libraries\n\n#  BLAS95_LIBRARIES - uncached list of libraries (using full path name)\n\n#    to link against to use BLAS95 interface\n\n#  BLAS95_FOUND - set to true if a library implementing the BLAS f95 interface\n\n#    is found\n\n#  BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#  BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#     all the possibilities\n\n#  BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n#\n\n# List of vendors (BLA_VENDOR) valid in this module\n\n# ATLAS, PhiPACK,CXML,DXML,SunPerf,SCSL,SGIMATH,IBMESSL,Intel10_32 (intel mkl v10 32 bit),Intel10_64lp (intel mkl v10 64 bit,lp thread model, lp64 model),\n\n# Intel( older versions of mkl 32 and 64 bit), ACML,ACML_MP,Apple, NAS, Generic\n\n# C/CXX should be enabled to use Intel mkl\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set by check_fortran_libraries() to a list of\n\n# variable names of each searched library such\n\n# that these libraries can be made non-advanced\n\n# in case no library was found\n",
        "Line" : 78,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# Check the language being used\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# the patch from Chuck Atkins:\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# 32 bit builds not supported on Open64 but for code simplicity\n\n# We'll just use the same directory twice\n",
        "Line" : 336,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#if( CMAKE_Fortran_COMPILER_ID STREQUAL \"GNU\" )\n",
        "Line" : 343,
        "CharPositionInLine" : 10
      },
      "21" : {
        "Text" : "#if( _BLAS_VENDOR STREQUAL \"ACML\" )\n",
        "Line" : 352,
        "CharPositionInLine" : 10
      },
      "22" : {
        "Text" : "#if( _BLAS_VENDOR STREQUAL \"ACML\" )\n",
        "Line" : 367,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Either acml or acml_mp should be in LD_LIBRARY_PATH but not both\n",
        "Line" : 376,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# ACML\n",
        "Line" : 397,
        "CharPositionInLine" : 9
      },
      "25" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Generic BLAS library?\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#older vesions of intel mkl libs\n\n# BLAS in intel mkl library? (shared)\n",
        "Line" : 527,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#BLAS in intel mkl library? (static, 32bit)\n",
        "Line" : 539,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#BLAS in intel mkl library? (static, em64t 64bit)\n",
        "Line" : 550,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "src/cmake/FindBoostNumericBindings.cmake" : {
      "ObjectId" : "9d113005cdec7aeee9a4c13488b3ddffd01d14cf",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindBoostNumericBindings.cmake\n\n# @brief Find Boost Numeric Bindings package.\n\n#\n\n# This module looks for an installation of the Boost Numeric Bindings package,\n\n# a bindings library for Boost.Ublas\n\n# (see http://mathema.tician.de/software/boost-numeric-bindings). Note that\n\n# you will also need Boost.Ublas in order to use this headers-only library.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b BoostNumericBindings_DIR @endtp\n\n#     <td>The Boost Numeric Bindings package files are searched under the\n\n#         specified root directory. This variable can also be set as environment\n\n#         variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BOOSTNUMERICBINDINGS_DIR @endtp\n\n#     <td>Alternative environment variable for @p BoostNumericBindings_DIR.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b BoostNumericBindings_FOUND @endtp\n\n#     <td>Whether the Boost Numeric Bindings package was found and the following\n\n#         CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BoostNumericBindings_INCLUDE_DIR @endtp\n\n#     <td>Cached include directory/ies.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BoostNumericBindings_INCLUDE_DIRS @endtp\n\n#     <td>Alias for @p BoostNumericBindings_INCLUDE_DIR (not cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BoostNumericBindings_INCLUDES @endtp\n\n#     <td>Alias for @p BoostNumericBindings_INCLUDE_DIR (not cached).</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find paths/files\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# aliases / backwards compatibility\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set BoostNumericBindings_DIR\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/FindGMock.cmake" : {
      "ObjectId" : "414b7339ab292fb452858c8f6536f972f1c2200b",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindGMock.cmake\n\n# @brief Find Google Mock package.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b GMock_DIR @endtp\n\n#     <td>The Google Mock package files are searched under the specified\n\n#         root directory. If they are not found there, the default search\n\n#         paths are considered. This variable can also be set as environment\n\n#         variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GMOCK_DIR @endtp\n\n#     <td>Alternative environment variable for @p GMock_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GMock_SHARED_LIBRARIES @endtp\n\n#     <td>Forces this module to search for shared libraries.\n\n#         Otherwise, static libraries are preferred.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b GMock_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GMock_INCLUDE_DIR @endtp\n\n#     <td>Package include directories.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GMock_INCLUDES @endtp\n\n#     <td>Include directories including prerequisite libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GMock_LIBRARY @endtp\n\n#     <td>Package libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GMock_LIBRARIES @endtp\n\n#     <td>Package ibraries and prerequisite libraries.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find paths/files\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# prerequisite libraries\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# reset CMake variables\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# aliases / backwards compatibility\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set GMock_DIR\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/cmake/FindGTest.cmake" : {
      "ObjectId" : "f3c89a60d8cc92f10d90a7ade0f86cb7400b84a2",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindGTest.cmake\n\n# @brief Find Google Test package.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b GTest_DIR @endtp\n\n#     <td>The Google Test package files are searched under the specified\n\n#         root directory. If they are not found there, the default search\n\n#         paths are considered.\n\n#         This variable can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GTEST_DIR @endtp\n\n#     <td>Alternative environment variable for @p GTest_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GTest_SHARED_LIBRARIES @endtp\n\n#     <td>Forces this module to search for shared libraries.\n\n#         Otherwise, static libraries are preferred.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b GTest_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GTest_INCLUDE_DIR @endtp\n\n#     <td>Package include directories.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GTest_INCLUDES @endtp\n\n#     <td>Include directories including prerequisite libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GTest_LIBRARY @endtp\n\n#     <td>Path of @c gtest library.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GTest_main_LIBRARY @endtp\n\n#     <td>Path of @c gtest_main library (optional).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b GTest_LIBRARIES @endtp\n\n#     <td>Package libraries and prerequisite libraries.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find paths/files\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# add prerequisites\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# reset CMake variables\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# aliases / backwards compatibility\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set GTest_DIR\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/cmake/FindITK.cmake" : {
      "ObjectId" : "e2059124f1e584fccd36a62d5523a1313a87d71c",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# ----------------------------------------------------------------------------\n\n#\n\n# The above copyright and license notice applies to distributions of\n\n# CMake in source and binary form.  Some source files contain additional\n\n# notices of original copyright by their contributors; see each source\n\n# for details.  Third-party software packages supplied with CMake under\n\n# compatible licenses provide their own copyright notices documented in\n\n# corresponding subdirectories.\n\n#\n\n# ----------------------------------------------------------------------------\n\n#\n\n# CMake was initially developed by Kitware with the following sponsorship:\n\n#\n\n# * National Library of Medicine at the National Institutes of Health\n\n#   as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n#\n\n# * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#   Visualization Initiative.\n\n#\n\n# * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#   National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#   Grant U54 EB005149.\n\n#\n\n# * Kitware, Inc.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindITK.cmake\n\n# @brief Find an ITK installation or build tree.\n\n#\n\n# When ITK is found, the ITKConfig.cmake file is sourced to setup the\n\n# location and configuration of ITK.  Please read this file, or\n\n# ITKConfig.cmake.in from the ITK source tree for the full list of\n\n# definitions.  Of particular interest is ITK_USE_FILE, a CMake source file\n\n# that can be included to set the include directories, library directories,\n\n# and preprocessor macros.  In addition to the variables read from\n\n# ITKConfig.cmake, this find module also defines\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b ITK_DIR @endtp\n\n#     <td>The directory containing ITKConfig.cmake.  \n\n#         This is either the root of the build tree, \n\n#         or the lib/InsightToolkit directory.  \n\n#         This is the only cache entry.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b ITK_FOUND @endtp\n\n#     <td>Whether ITK was found.  If this is true, @c ITK_DIR is okay.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_ITK_FILE @endtp\n\n#     <td>The full path to the <tt>UseITK.cmake</tt> file.  \n\n#         This is provided for backward \n\n#         compatability. Use @c ITK_USE_FILE instead.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Config mode of the find_package() command to find ITKConfig.\n\n# If this succeeds (possibly because ITK_DIR is already set), the\n\n# command will have already loaded ITKConfig.cmake and set ITK_FOUND.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set USE_ITK_FILE for backward-compatability.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "src/cmake/FindJythonInterp.cmake" : {
      "ObjectId" : "1986aa60f86d5cb2ced17d627626488597364da7",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindJythonInterp.cmake\n\n# @brief Find Jython interpreter.\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b JythonInterp_FOUND @endtp\n\n#     <td>Whether the Jython executable was found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b JYTHON_EXECUTABLE @endtp\n\n#     <td>Path to the Jython interpreter.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b JYTHON_VERSION_STRING @endtp\n\n#     <td>Jython version found, e.g. 2.5.2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b JYTHON_VERSION_MAJOR @endtp\n\n#     <td>Jython major version found, e.g. 2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b JYTHON_VERSION_MINOR @endtp\n\n#     <td>Jython minor version found, e.g. 5.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b JYTHON_VERSION_PATCH @endtp\n\n#     <td>Jython patch version found, e.g. 2.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find jython executable\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# determine jython version string\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# it's called \"Jython 2.5\", not \"2.5.0\"\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# sys.version predates sys.version_info, so use that\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set Jython_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/FindLIBLINEAR.cmake" : {
      "ObjectId" : "c44f65b91efef88f2a7f919eedbd01365110b4ea",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindLIBLINEAR.cmake\n\n# @brief Find LIBLINEAR package.\n\n#\n\n# @par Input varibales:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b LIBLINEAR_DIR @endtp\n\n#     <td>The LIBLINEAR package files are searched primarily under the specified\n\n#         root directory. This variable can be alternatively set as environment\n\n#         variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MEX_EXT @endtp\n\n#     <td>The extension of MEX-files. If this variable is not set and the\n\n#         basis_mexext command is available, it is invoked to determine the\n\n#         extension automatically. Otherwise, the MEX extension defaults to\n\n#         \"mexa64\".</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b LIBLINEAR_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBLINEAR_libsvmwrite_MEX @endtp\n\n#     <td>The libsvmwrite MEX-file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBLINEAR_libsvmread_MEX @endtp\n\n#     <td>The libsvmread MEX-file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBLINEAR_predict_MEX @endtp\n\n#     <td>The predict MEX-file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBLINEAR_train_MEX @endtp\n\n#     <td>The train MEX-file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBLINEAR_MEX_FILES @endtp\n\n#     <td>List of MEX-files (non-cached).</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------\n\n# find paths/files\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MESSAGE\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# VARIABLES\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set LIBLINEAR_DIR\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/FindMATLAB.cmake" : {
      "ObjectId" : "b5c9f05f68324dd437699118568e7aecf3dbe31e",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindMATLAB.cmake\n\n# @brief Find MATLAB installation.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MATLAB_DIR @endtp\n\n#     <td>The installation directory of MATLAB.\n\n#         Can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLABDIR @endtp\n\n#     <td>Alternative environment variable for @p MATLAB_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_FIND_COMPONENTS @endtp\n\n#     <td>The @c COMPONENTS argument(s) of the find_package() command can\n\n#         be used to only look for specific MATLAB executables and libraries.\n\n#         Valid component values are \"matlab\", \"mcc\", \"mexext\", \"mex\",\n\n#         \"libmex\", \"mx\" or \"libmx\", \"eng\" or \"libeng\",\n\n#         \"libmwmclmcr\" or \"mwmclmcr\", and \"libmwmclmcrrt\" or \"mwmclmcrrt\".</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_FIND_OPTIONAL_COMPONENTS @endtp\n\n#     <td>The @c OPTIONAL_COMPONENTS argument(s) of the find_package() command.\n\n#         See @c MATLAB_FIND_COMPONENTS.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_PATH_SUFFIXES @endtp\n\n#     <td>Path suffixes which are used to find the proper MATLAB libraries.\n\n#         By default, this find module tries to determine the path suffix\n\n#         from the CMake variables which describe the system. For example,\n\n#         on 64-bit Unix-based systems, the libraries are searched in\n\n#         @p MATLAB_DIR/bin/glnxa64. Set this variable before the\n\n#         find_package() command if this find module fails to\n\n#         determine the correct location of the MATLAB libraries within\n\n#         the root directory.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MATLAB_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake\n\n#         variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found matlab executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_VERSION_STRING @endtp\n\n#     <td>Version of the found matlab executable (e.g., 7.14.0).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_VERSION_MAJOR @endtp\n\n#     <td>Major version of the found matlab executable (e.g., 7).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_VERSION_MINOR @endtp\n\n#     <td>Minor version of the found matlab executable (e.g., 14).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_VERSION_PATCH @endtp\n\n#     <td>Patch of the found matlab executable (e.g., 0).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_RELEASE @endtp\n\n#     <td>Release version of the found matlab executable (e.g., R2012a).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_MCC_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found MATLAB Compiler (mcc) executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_MEX_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found MEX script (mex) executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_MEXEXT_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found mexext script executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_INCLUDE_DIR @endtp\n\n#     <td>Package include directories.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_INCLUDES @endtp\n\n#     <td>Include directories including prerequisite libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_LIBRARY_DIR @endtp\n\n#     <td>Directory containing the MATLAB libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_mex_LIBRARY @endtp\n\n#     <td>The MEX library of MATLAB.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_mx_LIBRARY @endtp\n\n#     <td>The @c mx library of MATLAB.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_eng_LIBRARY @endtp\n\n#     <td>The MATLAB engine library.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_mwmclmcr_LIBRARY @endtp\n\n#     <td>The MATLAB Compiler library.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_mwmclmcrrt_LIBRARY @endtp\n\n#     <td>The MATLAB Compiler runtime library.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_LIBRARY @endtp\n\n#     <td>All MATLAB libraries excluding @c mwmclmcrrt.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_LIBRARIES @endtp\n\n#     <td>Package libraries and prerequisite libraries.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# assume people are generally using 7.1,\n\n# if using 7.0 need to link to: extern/lib/win32/microsoft/msvc70\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# assume people are generally using 5.4\n\n# if using 5.0 need to link to: ../extern/lib/win32/microsoft/bcc50\n\n# if using 5.1 need to link to: ../extern/lib/win32/microsoft/bcc51\n",
        "Line" : 162,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find MATLAB executables\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set MATLAB_DIR\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine MATLAB version\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find paths/files\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# mark variables as advanced\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# list of all libraries\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# prerequisite libraries\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# aliases / backwards compatibility\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set MATLAB_DIR\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set MATLAB_LIBRARY_DIR\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# MESSAGE\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# VARIABLES\n",
        "Line" : 392,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# for status message \"Found MATLAB: ...\"\n",
        "Line" : 393,
        "CharPositionInLine" : 17
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# unset private variables\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "src/cmake/FindMOSEK.cmake" : {
      "ObjectId" : "df7018cfa69b4bd0bbc416c7d82668bc70f419c1",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindMOSEK.cmake\n\n# @brief Find MOSEK (http://www.mosek.com) package.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MOSEK_DIR @endtp\n\n#     <td>The MOSEK package files are searched under the specified root\n\n#         directory. If they are not found there, the default search paths\n\n#         are considered. This variable can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_NO_OMP @endtp\n\n#     <td>Whether to use the link libraries build without OpenMP, i.e.,\n\n#         multi-threading, enabled. By default, the multi-threaded libraries\n\n#         are used.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_FIND_COMPONENTS @endtp\n\n#     <td>The @c COMPONENTS argument(s) of the find_package() command can\n\n#         be used to also look for optional MOSEK components.\n\n#         Valid component values are \"mex\", \"jar\", and \"pypkg\".</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_TOOLS_SUFFIX @endtp\n\n#     <td>Platform specific path suffix for tools, i.e., \"tools/platform/linux64x86\"\n\n#         on 64-bit Linux systems. If not specified, this module determines the\n\n#         right suffix depending on the CMake system variables.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_RELEASE @endtp\n\n#     <td>Release of MATLAB installation. Set to the 'Release' return value of\n\n#         the \"ver ('MATLAB')\" command of MATLAB without brackets. If this\n\n#         variable is not set and the basis_get_matlab_release() command is\n\n#         available, it is invoked to determine the release version automatically.\n\n#         Otherwise, an error is raised if the \"mex\" component is searched.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MEX_EXT @endtp\n\n#     <td>The extension of MEX-files. If this variable is not set and the\n\n#         basis_mexext() command is available, it is invoked to determine the\n\n#         extension automatically. Otherwise, the MEX extension defaults to \"mexa64\".</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_VERSION_MAJOR @endtp\n\n#     <td>Major version of Python installation as determined by FindPythonInterp.cmake module.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MOSEK_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_<component>_FOUND @endtp\n\n#     <td>Whether the component requested by @c MOSEK_FIND_COMPONENTS was found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_INCLUDE_DIR @endtp\n\n#     <td>Package include directories.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_INCLUDES @endtp\n\n#     <td>Include directories including prerequisite libraries (non-cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_LIBRARY @endtp\n\n#     <td>Package libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_LIBRARIES @endtp\n\n#     <td>Package libraries and prerequisite libraries (non-cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_mosekopt_MEX @endtp\n\n#     <td>Package mosekopt MEX-file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_MEX_FILES @endtp\n\n#     <td>List of MEX-files (non-cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_mosek_JAR @endtp\n\n#     <td>Package mosek Java library (.jar file).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_CLASSPATH @endtp\n\n#     <td>List of Java package libraries and prerequisite libraries (non-cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MOSEK_PYTHONPATH @endtp\n\n#     <td>Path to Python modules of this package.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# optional components to look for\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# remember CMAKE_FIND_LIBRARY_SUFFIXES to be able to restore it\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# versions - library suffixes\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# known MOSEK versions, all entries have to be specified in descending order!\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# get a full list of particular versions (<major>.<minor>) to look for\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MATLAB components\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MATLAB version\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# search path for MOSEK MATLAB toolbox\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# extension of MEX-files\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Python components\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# library name\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# append/set library version suffixes\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# search path for MOSEK tools\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------\n\n# find include files and library\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# try twice in case MOSEK_DIR\n\n# was not set, but known in\n\n# second iteration\n",
        "Line" : 309,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "# find files\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# derive MOSEK_DIR\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# skip second iteration if both found already\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MATLAB components\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Java components\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Python components\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# prerequisite libraries\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# aliases / backwards compatibility\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# debugging\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# MESSAGE\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# VARIABLES\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "src/cmake/FindMatlabNiftiTools.cmake" : {
      "ObjectId" : "bdf4d96250e21aa066db3b1f5c4ed0bfeeced217",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindMatlabNiftiTools.cmake\n\n# @brief Find MATLAB Central package \"Tools for NIfTI and ANALYZE Image\" (#8797).\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MatlabNiftiTools_DIR @endtp\n\n#     <td>The MATLAB Central package files are searched under the specified\n\n#         root directory. If they are not found there, the default search\n\n#         paths are considered. This variable can also be set as\n\n#         environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLABNIFTITOOLS_DIR @endtp\n\n#     <td>Alternative environment variable for @p MatlabNiftiTools_DIR.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MatlabNiftiTools_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MatlabNiftiTools_INCLUDE_DIR @endtp\n\n#     <td>Cached include directory/ies only related to the searched package.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MatlabNiftiTools_INCLUDE_DIRS @endtp\n\n#     <td>Include directory/ies of searched and dependent packages (not cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#      @tp @b MatlabNiftiTools_INCLUDES @endtp\n\n#      <td>Alias for MatlabNiftiTools_INCLUDE_DIRS (not cached).</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find paths / files\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# append paths / libraries of packages this package depends on\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set MatlabNiftiTools_DIR\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/FindNiftiCLib.cmake" : {
      "ObjectId" : "9b866d8ff5f9169b30804bf2c357252af372b305",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindNiftiCLib.cmake\n\n# @brief Find nifticlib package.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b NiftiCLib_DIR @endtp\n\n#     <td>The nifticlib package files are searched under the specified root\n\n#         directory. If they are not found there, the default search paths\n\n#         are considered. This variable can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NIFTICLIB_DIR @endtp\n\n#     <td>Alternative environment variable for @p NiftiCLib_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NiftiCLib_USE_STATIC_LIB @endtp\n\n#     <td>Forces this module to search for the static library. Otherwise,\n\n#         the shared library is preferred.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp  @b NiftiCLib_FOUND @endtp\n\n#     <td>Whether the nifticlib package was found and the following CMake\n\n#         variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NiftiCLib_INCLUDE_DIR @endtp\n\n#     <td>Cached include directory/ies.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NiftiCLib_INCLUDE_DIRS @endtp\n\n#     <td>Alias for @p NiftiCLib_INCLUDE_DIR (not cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NiftiCLib_INCLUDES @endtp\n\n#     <td>Alias for @p NiftiCLib_INCLUDE_DIR (not cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NiftiCLib_LIBRARY @endtp\n\n#     <td>Path of @c niftiio library.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NiftiCLib_LIB @endtp\n\n#     <td>Alias for @p NiftiCLib_LIBRARY (not cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NiftiCLib_LIBRARIES @endtp\n\n#     <td>Path of @c niftiio library and prerequisite libraries.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Imported targets:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b niftiio @endtp\n\n#     <td>The library target of the @c nifticlib library.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find paths/files\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# prerequisites\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# import targets\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# aliases / backwards compatibility\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# reset CMake variables\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set NiftiCLib_DIR\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/cmake/FindOpenCV.cmake" : {
      "ObjectId" : "43931a329fe4deccbe52722361ea0bd0cb6a5ec6",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  FindOpenCV.cmake\n\n# @brief Find OpenCV Library (http://sourceforge.net/projects/opencvlibrary/)\n\n#\n\n# @par 1. Setup\n\n#\n\n# The following variables are optionally searched for defaults\n\n#  OpenCV_DIR:            Base directory of OpenCv tree to use.\n\n#\n\n# @par 2. Variable\n\n#\n\n# The following are set after configuration is done: \n\n# - OpenCV_FOUND\n\n# - OpenCV_LIBS\n\n# - OpenCV_INCLUDE_DIR\n\n# - OpenCV_VERSION (OpenCV_VERSION_MAJOR, OpenCV_VERSION_MINOR, OpenCV_VERSION_PATCH)\n\n#\n\n#\n\n# The following variables are used to maintain compatibility with other\n\n# Find<Pkg>.cmake modules, including the FindOpenCV.cmake module of\n\n# Jan Woetzel (2006/09, www.mip.informatik.uni-kiel.de/~jw):\n\n# - OpenCV_INCLUDE_DIRS\n\n# - OpenCV_LIBRARIES\n\n# - OpenCV_LINK_DIRECTORIES\n\n# \n\n# @par 3. Version\n\n#\n\n# 2012/10/22 Andreas Schuh, Find OpenCV 2 also if OpenCVConfig.cmake missing.\n\n# 2012/02/28 Andreas Schuh, Reimplemented module to work also for OpenCV 1.x.\n\n# 2010/04/07 Benoit Rat, Correct a bug when OpenCVConfig.cmake is not found.\n\n# 2010/03/24 Benoit Rat, Add compatibility for when OpenCVConfig.cmake is not found.\n\n# 2010/03/22 Benoit Rat, Creation of the script.\n\n#\n\n#\n\n# tested with:\n\n# - OpenCV 2.1:  MinGW, MSVC2008\n\n# - OpenCV 2.0:  MinGW, MSVC2008, GCC4\n\n#\n\n# @par 4. Licence\n\n#\n\n# LGPL 2.1 : GNU Lesser General Public License Usage\n\n# Alternatively, this file may be used under the terms of the GNU Lesser\n\n#\n\n# General Public License version 2.1 as published by the Free Software\n\n# Foundation and appearing in the file LICENSE.LGPL included in the\n\n# packaging of this file.  Please review the following information to\n\n# ensure the GNU Lesser General Public License version 2.1 requirements\n\n# will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 1. set OpenCV_DIR from environment variables\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 2. otherwise, try to derive it from include path\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# a) look for include path which might be easily found using system default\n\n#    paths such as C_INCLUDE_PATH or CXX_INCLUDE_PATH\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# b) derive OpenCV_DIR from include path\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Mac OS Framework\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# OpenCV 1\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# OpenCV >= 2\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# cache it such that users can view/correct it\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# found libraries\n\n# requested components\n\n# found components\n\n# found version\n",
        "Line" : 90,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find headers and libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# OpenCV 2\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Note that OpenCV 2.0.0 does only call the command include_directories()\n\n# but does not set OpenCV_INCLUDE_DIRS. This variable was added to\n\n# OpenCVConfig.cmake since version 2.1.0 of OpenCV.\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# OpenCV 1 (or OpenCV 2 with missing OpenCVConfig.cmake file)\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# will be adjusted on Unix to find the correct library version\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# find include directory\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# should not be done by Find module, but OpenCVConfig.cmake does it\n\n# as well, unfortunately...\n",
        "Line" : 144,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# extract version information from header file\n",
        "Line" : 147,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# file name suffixes\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# for the 1.1pre1 version, the suffix of the libraries is by default .2.0.0 instead of .1.1.0\n\n# thus consider these library files as well, assuming that the suffix has not been corrected\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# library components\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# find libraries of components\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# debug build\n",
        "Line" : 210,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# release build\n",
        "Line" : 218,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# both debug/release\n",
        "Line" : 238,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# only debug\n",
        "Line" : 241,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# only release\n",
        "Line" : 244,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# not found\n",
        "Line" : 247,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# add to list of found libraries\n",
        "Line" : 252,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# restore library suffixes\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# compatibility with OpenCV 2\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# set OpenCV_INCLUDE_DIRS - required for OpenCV before version 2.1.0\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# (backward) compatibility\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 35
    },
    "src/cmake/FindPerl.cmake" : {
      "ObjectId" : "60b01bb3aa901299c244605a5c059af696fd9e7d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  FindPerl.cmake\n\n# @brief Find Perl interpreter.\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Perl_FOUND @endtp\n\n#     <td>Was the Python executable found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PERL_FOUND @endtp\n\n#     <td>Alias for @b Perl_FOUND for backwards compatibility.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PERL_EXECUTABLE @endtp\n\n#     <td>Path to the Perl interpreter.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PERL_VERSION_STRING @endtp\n\n#     <td>Perl version found e.g. 5.12.4.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PERL_VERSION_MAJOR @endtp\n\n#     <td>Perl major version found e.g. 5.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PERL_VERSION_MINOR @endtp\n\n#     <td>Perl minor version found e.g. 12.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PERL_VERSION_PATCH @endtp\n\n#     <td>Perl patch version found e.g. 4.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @note This module has been copied from CMake 2.8.5 and modified to also\n\n#       obtain the version information of the found Perl interpreter.\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/FindPerlLibs.cmake" : {
      "ObjectId" : "4bc2de78d67c6f26d968740199d4dd4f7ec92a59",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindPerlLibs.cmake\n\n# @brief Find Perl libraries. Fixes issue with CMake's default FindPerlLibs.\n\n#\n\n# @sa http://www.cmake.org/pipermail/cmake/2008-July/022638.html\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# use CMake's FindPerlLibs.cmake module\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# try to fix any issues\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# try to fix failure in PERL_INCLUDE_PATH\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# try to fix failure in PERL_LIBRARY\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/FindPythonInterp.cmake" : {
      "ObjectId" : "d8c574d23fe98d82ad20791978385a52fc9f1395",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  FindPythonInterp.cmake\n\n# @brief Find Python interpreter.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Python_ADDITIONAL_VERSIONS @endtp\n\n#     <td>List of version numbers that should be taken into account when\n\n#         searching for Python.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b PYTHONINTERP_FOUND @endtp\n\n#     <td>Was the Python executable found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_EXECUTABLE @endtp\n\n#     <td>Path to the Python interpreter.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_VERSION_STRING @endtp\n\n#     <td>Python version found e.g. 2.5.2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_VERSION_MAJOR @endtp\n\n#     <td>Python major version found e.g. 2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_VERSION_MINOR @endtp\n\n#     <td>Python minor version found e.g. 5.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_VERSION_PATCH @endtp\n\n#     <td>Python patch version found e.g. 2.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @note This module has been copied from the Git repository of CMake on\n\n#       4/12/2012, i.e., before the release of CMake 2.8.8. Once CMake 2.8.8\n\n#       or any version is available for all major platforms, consider to\n\n#       remove this module from the BASIS package.\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2010 Kitware, Inc.\n\n# Copyright 2011 Bjoern Ricks <bjoern.ricks@gmail.com>\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for the current active python version first\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for newest python version if python executable isn't found\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# determine python version string\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# just to make sure as some programs (i.e. pydoc) do not return a non-zero\n\n# exit code even though called with unknown option. This happened by mistake\n\n# once when pydoc was specified instead of python as PYTHON_EXECUTABLE\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# it's called \"Python 2.7\", not \"2.7.0\"\n",
        "Line" : 166,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# sys.version predates sys.version_info, so use that\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# sys.version was first documented for Python 1.5, so assume\n\n# this is older.\n",
        "Line" : 185,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PYTHONINTERP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/cmake/FindPythonModules.cmake" : {
      "ObjectId" : "e5d768aabc1991ea6372503206f33dce5a166d9f",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindPythonModules.cmake\n\n# @brief Find Python modules.\n\n#\n\n# @par Input/Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b PythonModules_DIR @endtp\n\n#     <td>List of directories where Python modules are installed.</td>\n\n#   </tr>\n\n# </table>\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b PythonModules_FIND_COMPONENTS @endtp\n\n#     <td>The @c COMPONENTS argument(s) of the find_package() command specifies\n\n#         the names of the Python modules to look for.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PythonModules_FIND_OPTIONAL_COMPONENTS @endtp\n\n#     <td>The @c OPTIONAL_COMPONENTS argument(s) of the find_package() command\n\n#         specifies the names of the Python modules which are not necessarily\n\n#         required, but should be searched as well.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_EXECUTABLE @endtp\n\n#     <td>Path to the Python interpreter. Should be set by first looking\n\n#         for the Python interpreter, i.e., find_packages(PythonInterp).\n\n#         If set, this module first tries to execute the Python interpreter,\n\n#         import the respective Python module, and then derive the search path\n\n#         from the @c __file__ attribute of the loaded Python module.\n\n#         Otherwise, or if this fails, it looks either for a package\n\n#         @c __init__.py file inside a subdirectory named after the specified\n\n#         Python module or a @c .py module file in each directory listed in\n\n#         the @c PYTHONPATH.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHONPATH @endtp\n\n#     <td>Search path for Python modules. If this CMake variable is undefined,\n\n#         the corresponding environment variable is used instead if set.\n\n#         Only absolute paths in the @c PYTHONPATH are considered.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b PythonModules_FOUND @endtp\n\n#     <td>Whether all specified Python modules were found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PythonModules_&lt;module&gt;_FOUND @endtp\n\n#     <td>Whether the Python module &lt;module%gt; was found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PythonModules_&lt;module&gt;_PATH @endtp\n\n#     <td>Absolute path of the directory containing the Python module named &lt;module%gt;.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PythonModules_&lt;module&gt; @endtp\n\n#     <td>Import target for module named &lt;module&gt;. The location of the\n\n#         target is @c PythonModules_&lt;module&gt_PATH.</tr>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PythonModules_PYTHONPATH @endtp\n\n#     <td>The @c PYTHONPATH setting required for the found Python module(s), i.e.,\n\n#         The directories that have to be added to the Python search path.\n\n#         To support the use of this CMake module more than once with different\n\n#         arguments to the find_package() command, e.g., with and without the\n\n#         @c REQUIRED argument, the directories containing the found Python\n\n#         modules are appended to any existing directories in\n\n#         @c PythonModules_PYTHONPATH if not already listed.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Find Python module.\n\n#\n\n# If the @c PYTHON_EXECUTABLE variable is set, this function at first tries\n\n# to launch the Python interpreter, import the named Python module, and then\n\n# determines the search path for the Python module from the @c __file__\n\n# attribute of the loaded module. Otherwise, or if this fails, it looks for\n\n# the Python module in the directories listed in the @c PYTHONPATH variable\n\n# if defined. If this variable is not defined, the @c PYTHONPATH environment\n\n# variable is used instead.\n\n#\n\n# @param [in] CACHEVAR Name of CMake cache variable which stores path of\n\n#                      directory of the Python module. If not set or if\n\n#                      the cache entry contains space characters only or\n\n#                      ends in the string NOTFOUND, this function looks for\n\n#                      the specified Python module. Otherwise, it does nothing\n\n#                      and leaves the cache entry unmodified.\n\n# @param [in] ARGN     The remaining arguments are parsed and the following\n\n#                      options extract:\n\n# @par\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b NAME module @endtp\n\n#     <td>Name of the Python module.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PYTHON_EXECUTABLE python @endtp\n\n#     <td>Full path of the Python interpreter executable. If not specified\n\n#         the global PYTHON_EXECUTABLE CMake variable/cache entry is used.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PATH dir1 [dir2...] @endtp\n\n#     <td>Directories where to look for Python module.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_PYTHONPATH @endtp\n\n#     <td>Do not consider the @c PYTHONPATH environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_DEFAULT_PATH @endtp\n\n#     <td>Do not look in any default path such as the directories listed by the\n\n#         @c PYTHONPATH environment variable.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Sets the named cache variable of type @c PATH to the absolute path\n\n#          of the directory containing the specified Python @p MODULE if found,\n\n#          or the string \"&lt;MODULE%gt;-NOTFOUND\" otherwise.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# do nothing if path of module already known from previous run\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# parse arguments\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set initial value of cache entry\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# 1. search specified paths\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ignore empty entries\n",
        "Line" : 172,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : "# 2. get __file__ attribute of module loaded in Python\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# 2a. try it with -E option -- the preferred way to run Python\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# 2b. try it without -E option\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# 3. search PYTHONPATH\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ignore empty entries\n",
        "Line" : 244,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find Python modules\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# PYTHONPATH of all found modules\n",
        "Line" : 262,
        "CharPositionInLine" : 33
      },
      "16" : {
        "Text" : "# helper macro\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# optional first, as PythonModules_FOUND shall be reset to TRUE afterwards\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# remove duplicate paths in PYTHONPATH\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle standard QUIET and REQUIRED arguments\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# list of modules that were not found\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# hint on how to help finding the Python modules\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# error message\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# common <Pkg>_DIR variable\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# clean up\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "src/cmake/FindSVMTorch.cmake" : {
      "ObjectId" : "ac610836dbd7958a0a4341a8da5a707408299fcd",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindSVMTorch.cmake\n\n# @brief Find SVMTorch II package.\n\n#\n\n# @par Input varibales:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b SVMTorch_DIR @endtp\n\n#     <td>The SVMTorch package files are searched primarily under the specified\n\n#         root directory. This variable can be alternatively set as environment\n\n#         variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SVMTorch_FIND_COMPONENTS @endtp\n\n#     <td>@c COMPONENTS of SVMTorch to look for: @c train, @c test, @c lib. (default: @c train, @c test)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SVMTorch_FIND_OPTIONAL_COMPONENTS @endtp\n\n#     <td>@c OPTIONAL_COMPONENTS of SVMTorch to look for: @c train, @c test, @c lib. (default: @c lib)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b SVMTorch_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SVMTorch_INCLUDE_DIR @endtp\n\n#     <td>The directory containing the include files.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SVMTorch_LIBRARY @endtp\n\n#     <td>Found object files (.o).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SVMTorch_train_EXECUTABLE @endtp\n\n#     <td>Absolute path of found @c SVMTorch executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SVMTorch_test_EXECUTABLE @endtp\n\n#     <td>Absolute path of found @c SVMTest executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b svmtorch.SVMTorch @endtp\n\n#     <td>Import target of @c SVMTorch executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b svmtorch.SVMTest @endtp\n\n#     <td>Import target of @c SVMTest executable.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------\n\n# find executables\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------\n\n# derive SVMTorch_DIR if not set yet\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#--------------------------------------------------------------\n\n# find header files and built object files\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/FindSparseBayes.cmake" : {
      "ObjectId" : "8eb89245022b52f99cba8f4f7c29f993100dc65d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindSparseBayes.cmake\n\n# @brief Find SparseBayes package from Vector Anomaly Limited.\n\n#\n\n# @sa http://www.vectoranomaly.com/downloads/downloads.htm\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/FindSphinx.cmake" : {
      "ObjectId" : "3350ed5699f7569f258bea89c0b9c28c458848c6",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindSphinx.cmake\n\n# @brief Find Sphinx documentation build tools.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_DIR @endtp\n\n#     <td>Installation directory of Sphinx tools. Can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_DIR @endtp\n\n#     <td>Alternative environment variable for @c Sphinx_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_FIND_COMPONENTS @endtp\n\n#     <td>Sphinx build tools to look for, i.e., 'apidoc' and/or 'build'.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_FOUND @endtp\n\n#     <td>Whether all or only the requested Sphinx build tools were found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_FOUND @endtp\n\n#     <td>Alias for @c Sphinx_FOUND.<td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_EXECUTABLE @endtp\n\n#     <td>Non-cached alias for @c Sphinx-build_EXECUTABLE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_EXECUTABLE @endtp\n\n#     <td>Python executable used to run sphinx-build. This is either the\n\n#         by default found Python interpreter or a specific version as\n\n#         specified by the shebang (#!) of the sphinx-build script.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_OPTIONS @endtp\n\n#     <td>A list of Python options extracted from the shebang (#!) of the\n\n#         sphinx-build script. The -E option is added by this module\n\n#         if the Python executable is not the system default to avoid\n\n#         problems with a differing setting of the @c PYTHONHOME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-build_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-build tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-apidoc_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-apidoc tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_STRING @endtp\n\n#     <td>Sphinx version found e.g. 1.1.2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MAJOR @endtp\n\n#     <td>Sphinx major version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MINOR @endtp\n\n#     <td>Sphinx minor version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_PATCH @endtp\n\n#     <td>Sphinx patch version found e.g. 2.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# default components to look for\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find components, i.e., build tools\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Python executable used by Sphinx\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract python executable from shebang of sphinx-build\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# does not match \"#!/usr/bin/env python\" !\n",
        "Line" : 137,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : "# this is done to avoid problems with multiple Python versions being installed\n\n# remember: CMake command if(STR EQUAL STR) is bad and may cause many troubles !\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Sphinx version\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# intentionally use invalid -h option here as the help that is shown then\n\n# will include the Sphinx version information\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# compatibility with FindPythonInterp.cmake and FindPerl.cmake\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set SPHINX_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set Sphinx_DIR\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/cmake/FindWeka.cmake" : {
      "ObjectId" : "8bedbba719d57ee4b6f5a3df05f8fe8f39ad942a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  FindWeka.cmake\n\n# @brief Find Weka (http://www.cs.waikato.ac.nz/ml/weka/) package.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Weka_DIR @endtp\n\n#     <td>The Weka package files are searched under the specified root\n\n#         directory. If they are not found there, the default search paths\n\n#         are considered. This variable can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b WEKA_DIR @endtp\n\n#     <td>Alternative environment variable for @c Weka_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_PACKAGES_DIR @endtp\n\n#     <td>Directory where additional Weka packages are installed. If they are\n\n#         not found there or if this variable is not set, this module will look\n\n#         in the standard installation directories. This variable can also be set\n\n#         as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b WEKA_PACKAGES_DIR @endtp\n\n#     <td>Alternative environment variable for @c Weka_PACKAGES_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b>Weka_&lt;package&gt;_DIR</b> @endtp\n\n#     <td>The path of the given Weka package, i.e., the directory containing the\n\n#         <tt>&lt;package&gt;.jar</tt> file or a subdirectory named <tt>weka</tt>\n\n#         with the uncompressed <tt>.class</tt> files of the package.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_FIND_COMPONENTS @endtp\n\n#     <td>The @c COMPONENTS argument(s) of the find_package() command can\n\n#         be used to also look for additionally installed Weka packages.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_FIND_OPTIONAL_COMPONENTS @endtp\n\n#     <td>The @c OPTIONAL_COMPONENTS argument(s) of the find_package() command can\n\n#         be used to also look for additionally installed Weka packages.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_ADDITIONAL_VERSIONS @endtp\n\n#     <td>List of version numbers that should be taken into account when\n\n#         searching for Weka.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Weka_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_HAS_PACKAGE_MANAGER @endtp\n\n#     <td>Whether the found version of Weka has a package manager.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_CLASSPATH @endtp\n\n#     <td>The path of the found <tt>weka.jar</tt> file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_PACKAGES_CLASSPATH @endtp\n\n#     <td>The @c CLASSPATH of all found additional Weka packages (non-cached).</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Weka_CLASSPATHS @endtp\n\n#     <td>Combination of both @c Weka_CLASSPATH and @c Weka_PACKAGES_CLASSPATH.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# helpers\n\n# ============================================================================\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# @brief Determine if this Weka version has a package manager.\n\n#\n\n# @returns This macro sets the Weka_HAS_PACKAGE_MANAGER variable.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get list of Weka packages.\n\n#\n\n# @param [out] PACKAGES Name of variable storing the list of packages.\n\n# @param [in]  WHICH    Argument to -list-packages option of Weka package\n\n#                       manager, i.e., \"all\", \"available\", or \"installed\".\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ignore case of argument\n",
        "Line" : 120,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get Weka version.\n\n#\n\n# @param [out] VERSION Version string of Weka or 0.0.0.\n\n# @param [out] MAJOR   Major version of Weka or 0.\n\n# @param [out] MINOR   Minor version of Weka or 0.\n\n# @param [out] PATCH   Patch number of Weka or 0.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ============================================================================\n\n# main\n\n# ============================================================================\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO seach /Applications/weka-3-7-6.app/Contents and\n\n#      $ENV{HOME}/Applications/weka-3-7-6.app/Contents\n\n#      directories for all requested/known Weka versions\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# find weka.jar\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# weka.jar is in weka/ subdirectory\n",
        "Line" : 270,
        "CharPositionInLine" : 48
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------\n\n# determine Weka version\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-------------------------------------------------------------\n\n# find Weka packages\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Weka_CLASSPATHS\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# debugging\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/cmake/GenerateConfig.cmake" : {
      "ObjectId" : "3894e71fdefca7c937a1ad3d0479a60a76333c04",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  GenerateConfig.cmake\n\n# @brief Generates package configuration files.\n\n#\n\n# This CMake script configures the \\<package\\>Config.cmake et al. files,\n\n# once for the build tree and once for the install tree. Variables with a\n\n# _CONFIG suffix are replaced in the default template file by either the\n\n# value for the build or the install tree, respectively.\n\n#\n\n# If present, this script includes the @c PROJECT_CONFIG_DIR/ConfigBuild.cmake\n\n# and/or @c PROJECT_CONFIG_DIR/ConfigInstall.cmake file before configuring the\n\n# Config.cmake.in template. If a file @c PROJECT_CONFIG_DIR/Config.cmake.in\n\n# exists, it is used as template. Otherwise, the default template file is used.\n\n#\n\n# Similarly, if the file @c PROJECT_CONFIG_DIR/ConfigVersion.cmake.in exists,\n\n# it is used as template for the \\<package\\>ConfigVersion.cmake file. The same\n\n# applies to ConfigUse.cmake.in.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# names of output files\n\n# ============================================================================\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Attention: This has to be done before configuring any files such that these\n\n#            variables can be used by the template files.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## @brief Package name.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## @brief Name of the CMake package configuration file.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## @brief Name of the CMake package version file.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## @brief Name of the CMake package use file.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## @brief Name of the CMake target exports file.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @brief Name of the CMake target exports file for custom targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ============================================================================\n\n# export build targets\n\n# ============================================================================\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ============================================================================\n\n# namespace\n\n# ============================================================================\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# code used at top of packing configuration and use files to set package\n\n# namespace prefix used for configuration variables\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ============================================================================\n\n# project configuration file\n\n# ============================================================================\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# choose template\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# provide code of BASIS config file as variable\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# remove file header\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# build tree related configuration\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure project configuration file for build tree\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# install tree related configuration\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# configure project configuration file for install tree\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# install project configuration file\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# ============================================================================\n\n# project version file\n\n# ============================================================================\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# choose template\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure project configuration version file\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# install project configuration version file\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ============================================================================\n\n# project use file\n\n# ============================================================================\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# choose template\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# backwards compatibility to version <= 0.1.8 of BASIS\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# provide code of BASIS use file as variable\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# remove file header\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure project use file\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# install project use file\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "src/cmake/ImportTools.cmake" : {
      "ObjectId" : "2d1a114a7c4d1c5ad36f05e402d3bc6be8625c2f",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  ImportTools.cmake\n\n# @brief Functions and macros for the import of targets.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set target property.\n\n#\n\n# This function is overwritten by BASIS in order to update the information\n\n# about imported build targets.\n\n#\n\n# @note Do not use this function in your CMakeLists.txt configuration files.\n\n#       Use basis_set_target_properties() instead.\n\n#\n\n# @note Due to a bug in CMake (http://www.cmake.org/Bug/view.php?id=12303),\n\n#       except of the first property given directly after the @c PROPERTIES keyword,\n\n#       only properties listed in @c BASIS_PROPERTIES_ON_TARGETS can be set.\n\n#\n\n# @param [in] ARGN List of arguments for\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_target_properties\">\n\n#                  set_target_properties()</a>.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_target_properties\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# target names\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# remaining arguments are property value pairs\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set target properties\n\n#\n\n# Note: By iterating over the properties, the empty property values\n\n#       are correctly passed on to CMake's set_target_properties()\n\n#       command, while\n\n#       _set_target_properties(${TARGET_UIDS} PROPERTIES ${ARGN})\n\n#       (erroneously) discards the empty elements in ARGN.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# The following loop is only required b/c CMake's ARGV and ARGN\n\n# lists do not support arguments which are themselves lists.\n\n# Therefore, we need a way to decide when the list of values for a\n\n# property is terminated. Hence, we only allow known properties\n\n# to be set, except for the first property where the name follows\n\n# directly after the PROPERTIES keyword.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# check property name\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# if property is related to the location of an imported target,\n\n# update corresponding project properties\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# if property is related to the type of an imported target,\n\n# update corresponding project properties\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# set target property\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# make sure that every property had a corresponding value\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add imported target.\n\n#\n\n# Imported targets are only valid in the scope where they were imported.\n\n# In order to be able to add the information of the imported executable targets\n\n# to the ExecutableTargetInfo modules of the BASIS utilities which are configured\n\n# during the finalization of the (top-level) project, the information of\n\n# imported targets has to be stored in the global scope. Therefore, internal\n\n# cache variables prefixed by the name of the project are used\n\n# (see basis_set_project_property()):\n\n#\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b IMPORTED_TARGETS @endtp\n\n#     <td>List of imported targets.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b IMPORTED_TYPES @endtp\n\n#     <td>Types of imported targets.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b IMPORTED_LOCATIONS @endtp\n\n#     <td>Locations of imported target files.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b IMPORTED_RANKS @endtp\n\n#     <td>Rank of current imported locations. This rank value is used to decide\n\n#         whether the current location takes precedence over another imported\n\n#         location. For example, IMPORTED_LOCATION_&lt;a&gt;, may be preferred\n\n#         over IMPORTED_LOCATION_&lt;b&gt;.\n\n#   </tr>\n\n# </table>\n\n#\n\n# @param [in] TARGET Name (UID) of the imported target.\n\n# @param [in] TYPE   Type of the imported target.\n\n#\n\n# @sa basis_update_imported_location()\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# if target was added before\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# do nothing\n",
        "Line" : 177,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# otherwise, add it to the project properties\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Update location of imported target.\n\n#\n\n# @param [in] TARGET     Name (UID) of the imported target.\n\n# @param [in] PROPERTY   Target location property. Either IMPORTED_LOCATION\n\n#                        or IMPORTED_LOCATION_&lt;config&gt;, where &lt;config&gt;\n\n#                        is one of the imported build configurations.\n\n#                        This argument is used to decide whether to keep\n\n#                        the current target information or to replace it\n\n#                        by the new one.\n\n# @param [in] LOCATION   Location of imported target.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# get index of imported target\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# imported targets have to be added via basis_add_imported_target() first\n\n# otherwise, ignore target here and do not update the non-existent information\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# get current information of target\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# decide whether current information shall be overwritten\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# first pick\n",
        "Line" : 227,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# 0) prefer location corresponding to current configuration\n\n# 1) then use non-configuration specific location\n\n# 2) otherwise use RELEASE version if available\n",
        "Line" : 228,
        "CharPositionInLine" : 34
      },
      "24" : {
        "Text" : "# 3) last pick, use first imported executable\n",
        "Line" : 231,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# bail out if current information shall be kept\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# remove current information\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# add imported information\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# update project properties\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Update type of imported target.\n\n#\n\n# This function is in particular called in basis_set_target_properties()\n\n# if the BASIS_TYPE property of custom BASIS targets is set after the\n\n# imported target was added with the initial type UNKNOWN.\n\n#\n\n# @param [in] TARGET Name (UID) of the imported target.\n\n# @param [in] TYPE   Type of imported target.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# get index of imported target\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# imported targets have to be added via basis_add_imported_target() first\n\n# otherwise, ignore target here and do not update the non-existent information\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# get current type of imported target\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# bail out if current type shall be kept\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# replace current type\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# update project property\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "src/cmake/InstallationTools.cmake" : {
      "ObjectId" : "6742d145aaa06130ef9904002198e96e13ef75f3",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  InstallationTools.cmake\n\n# @brief CMake functions used for installation.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include guard\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n# @{\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# Installation\n\n# ============================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Specify rules to run at install time.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:install\">\n\n# install()</a> command.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:install\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Install content of source directory excluding typical files.\n\n#\n\n# Files which are excluded are typical backup files, system files, files\n\n# from revision control systems, and CMakeLists.txt files.\n\n#\n\n# Example:\n\n# @code\n\n# basis_install_directory(\"${INSTALL_DATA_DIR}\")\n\n# basis_install_directory(. \"${INSTALL_DATA_DIR}\")\n\n# basis_install_directory(\"${CMAKE_CURRENT_SOURCE_DIR}\" \"${INSTALL_DATA_DIR}\")\n\n# basis_install_directory(images \"${INSTALL_DATA_DIR}/images\")\n\n# @endcode\n\n#\n\n# @param [in] ARGN The first two arguments are extracted from the beginning\n\n#                  of this list in the named order (without option name),\n\n#                  and the remaining arguments are passed on to CMake's\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:install\">\n\n#                  <tt>install(DIRECTORY)</tt></a> command.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b SOURCE @endtp\n\n#     <td>Source directory. Defaults to current source directory\n\n#         if only one argument, the @p DESTINATION, is given./td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION @endtp\n\n#     <td>Destination directory.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:install\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check arguments\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# parse options\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# default excludes\n",
        "Line" : 169,
        "CharPositionInLine" : 80
      },
      "10" : {
        "Text" : "# Add installation instructions. Note that install(DIRECTORY) is here not\n\n# used to avoid the generation of empty directories\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add installation rule for project template.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add installation rule to create a symbolic link.\n\n#\n\n# Note that the installation rule will only be effective on a Unix-like\n\n# system, i.e., one which supports the creation of a symbolic link.\n\n#\n\n# @param [in] OLD  The value of the symbolic link.\n\n# @param [in] NEW  The name of the symbolic link.\n\n#\n\n# @returns Adds installation rule to create the symbolic link @p NEW.\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Adds installation rules to create default symbolic links.\n\n#\n\n# This function creates for each main executable a symbolic link directly\n\n# in the directory @c INSTALL_PREFIX/bin if @c INSTALL_SINFIX is TRUE and the\n\n# software is installed on a Unix-like system, i.e., one which\n\n# supports the creation of symbolic links.\n\n#\n\n# @returns Adds installation command for creation of symbolic links in the\n\n#          installation tree.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# main executables\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# avoid creation of symbolic link if there would be a conflict with\n\n# the subdirectory in bin/ where the actual executables are installed\n",
        "Line" : 359,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# ============================================================================\n\n# Package registration\n\n# ============================================================================\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Register installed package with CMake.\n\n#\n\n# This function adds an entry to the CMake registry for packages with the\n\n# path of the directory where the package configuration file is located in\n\n# order to help CMake find the package.\n\n#\n\n# The uninstaller whose template can be found in cmake_uninstaller.cmake.in\n\n# is responsible for removing the registry entry again.\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ============================================================================\n\n# Deinstallation\n\n# ============================================================================\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add uninstall target.\n\n#\n\n# @returns Adds the custom target @c uninstall and code to\n\n#          <tt>cmake_install.cmake</tt> to install an uninstaller.\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# add uninstall target\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "src/cmake/InterpTools.cmake" : {
      "ObjectId" : "88bb5f11a53207bf74d3323693c75b89ffc649b2",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  InterpTools.cmake\n\n# @brief Script interpreter tools.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n# @{\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get version of Python interpreter.\n\n#\n\n# @param [out] ARGV1 If given, the named variable is set to the version string\n\n#                    of the Python interpreter. Otherwise, the variables\n\n#                    @c PYTHON_VERSION_STRING, @c PYTHON_VERSION_MAJOR,\n\n#                    @c PYTHON_VERSION_MINOR, and @c PYTHON_VERSION_PATCH are\n\n#                    set in the scope of the caller.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# sys.version predates sys.version_info\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# sys.version was first documented for Python 1.5\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get version of Jython interpreter.\n\n#\n\n# @param [out] ARGV1 If given, the named variable is set to the version string\n\n#                    of the Jython interpreter. Otherwise, the variables\n\n#                    @c JYTHON_VERSION_STRING, @c JYTHON_VERSION_MAJOR,\n\n#                    @c JYTHON_VERSION_MINOR, and @c JYTHON_VERSION_PATCH are\n\n#                    set in the scope of the caller.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# sys.version predates sys.version_info\n",
        "Line" : 118,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get version of Perl interpreter.\n\n#\n\n# @param [out] ARGV1 If given, the named variable is set to the version string\n\n#                    of the Perl interpreter. Otherwise, the variables\n\n#                    @c PERL_VERSION_STRING, @c PERL_VERSION_MAJOR,\n\n#                    @c PERL_VERSION_MINOR, and @c PERL_VERSION_PATCH are\n\n#                    set in the scope of the caller.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get version of Bash interpreter.\n\n#\n\n# @param [out] ARGV1 If given, the named variable is set to the version string\n\n#                    of the Bash interpreter. Otherwise, the variables\n\n#                    @c BASH_VERSION_STRING, @c BASH_VERSION_MAJOR,\n\n#                    @c BASH_VERSION_MINOR, and @c BASH_VERSION_PATCH are\n\n#                    set in the scope of the caller.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/cmake/MatlabTools.cmake" : {
      "ObjectId" : "625a85ce67c4598feca31e76ddf18231c26fecd7",
      "LastModified" : "2015-10-16T19:40:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  MatlabTools.cmake\n\n# @brief Enables use of MATLAB Compiler and build of MEX-files.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# modules\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: Required because generate_matlab_executable.cmake uses this module.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# options\n\n# ============================================================================\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## @addtogroup BasisSettings\n\n#  @{\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## @brief Enable/Disable compilation of MATLAB sources if the MATLAB Compiler is available.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add global MATLAB MEX-script options to CMake cache\n\n#\n\n# @par MATLAB MEX-script options:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b BASIS_MEX_TIMEOUT @endtp\n\n#     <td>Timeout for MEX script execution.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BASIS_MEX_FLAGS @endtp\n\n#     <td>Compile flags used to build MEX-files using the MEX script.</td>\n\n#   </tr>\n\n# </table>\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add global MATLAB Compiler (mcc) options to CMake cache\n\n#\n\n# @par MATLAB Compiler options:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b BASIS_MCC_MATLAB_MODE @endtp\n\n#     <td>Enable/Disable invocation of MATLAB Compiler in MATLAB mode.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BASIS_MCC_FLAGS @endtp\n\n#     <td>Compile flags used to build MATLAB Compiler targets.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BASIS_MCC_TIMEOUT @endtp\n\n#     <td>Timeout for building MATLAB Compiler targets.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BASIS_MCC_RETRY_ATTEMPTS @endtp\n\n#     <td>Maximum number of retries on MATLAB Compiler license checkout.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BASIS_MCC_RETRY_DELAY @endtp\n\n#     <td>Delay between retries to build MATLAB Compiler compiled targets on license checkout errors.</td>\n\n#   </tr>\n\n# </table>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# using MATLAB mode is preferred when the license is shared\n\n# among users as it releases the license immediately once done\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ============================================================================\n\n# utilities\n\n# ============================================================================\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Determine version of MATLAB installation.\n\n#\n\n# @param [out] VERSION Value returned by the \"version\" command of MATLAB or\n\n#                      an empty string if execution of MATLAB failed.\n\n#\n\n# @returns Sets the variable named by @p VERSION to the full MATLAB version.\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# read MATLAB version from existing output file\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# run matlab command to write return value of \"version\" command to text file\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# MATLAB startup can be *very* slow the first time\n",
        "Line" : 179,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "# wait until MATLAB process terminated entirely and wrote the (buffered?) file\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# read MATLAB version from text file\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# return\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get version of MATLAB installation.\n\n#\n\n# @param [out] ARGV1 If given, the named variable is set to the version string\n\n#                    (\"<major>.<minor>.<patch>\") of the MATLAB installation.\n\n#                    Otherwise, the variables @c MATLAB_VERSION_STRING,\n\n#                    @c MATLAB_VERSION_MAJOR, @c MATLAB_VERSION_MINOR,\n\n#                    @c MATLAB_VERSION_PATCH, and @c MATLAB_RELEASE are set\n\n#                    in the scope of the caller.\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get release version of MATLAB installation.\n\n#\n\n# @param [out] ARGV1 If given, the named variable is set to the release string\n\n#                    of the MATLAB installation, e.g., \"R2009b\". Otherwise,\n\n#                    the variable @c MATLAB_RELEASE is set in the scope of the\n\n#                    caller.\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Determine extension of MEX-files for this architecture.\n\n#\n\n# @param [out] ARGN The first argument ARGV0 is set to the extension of\n\n#                   MEX-files (excluding '.'). If the CMake variable MEX_EXT\n\n#                   is set, its value is returned. Otherwise, this function\n\n#                   tries to determine it from the system information.\n\n#                   If the extension could not be determined, an empty string\n\n#                   is returned. If no argument is given, the extension is\n\n#                   cached as the variable MEX_EXT.\n\n#\n\n# @returns Sets the variable named by the first argument to the\n\n#          platform-specific extension of MEX-files.\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# default return value\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# use MEXEXT if possible\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# otherwise, determine extension given CMake variables describing the system\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# return value\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief This function writes a MATLAB M-file with addpath() statements.\n\n#\n\n# This function writes an MATLAB M-file into the top directory of the build\n\n# tree which contains an addpath() statement for each directory that was added\n\n# via basis_include_directories().\n\n#\n\n# @returns Creates file add_\\<project\\>_paths.m in the current binary directory.\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief This function writes a MATLAB M-file with addpath() statements.\n\n#\n\n# @param [in] MFILE Name of M-file.\n\n# @param [in] ARGN  The remaining arguments are the paths which should be added\n\n#                   to the search path of MATLAB when this M-file is being\n\n#                   executed. If the option APPEND is given, the paths are\n\n#                   appended to the specified M-file. Otherwise, any existing\n\n#                   file will be overwritten. The given directory paths can\n\n#                   be relative, in which case they are interpreted relative\n\n#                   to the location of the written M-file using the mfilename()\n\n#                   function of MATLAB.\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Generate MATLAB wrapper executable.\n\n#\n\n# This function writes a Bash script on Unix or a Windows Command script on\n\n# Windows platforms which execute the specified MATLAB command using the -r\n\n# option of the matlab executable and the -nodesktop and -nosplash options.\n\n# It is used by the build scripts generated by the basis_build_mcc_target()\n\n# in order to build an executable from MATLAB source files without the use\n\n# of the MATLAB Compiler. In this case, the MATLAB source files are simply\n\n# copied to the installation directory and the wrapper script written by\n\n# this function used to execute the main function with the command-line\n\n# arguments passed on to this executable.\n\n#\n\n# @param [in] OUTPUT_FILE    Name of the output executable file.\n\n# @param [in] ARGN           The remaining options\n\n# @par\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation destination. (default: directory of @c OUTPUT_FILE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMMAND name @endtp\n\n#     <td>Name of the MATLAB command to execute, i.e.,\n\n#         the name of the main function.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b STARTUP mfile @endtp\n\n#     <td>Absolute path of a startup M-file.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLABPATH dir1[ dir2...]\n\n#     <td>List of directories to be added to the MATLAB search path.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OPTIONS opt1[ opt2...]\n\n#     <td>Additional options to pass on to the <tt>matlab</tt> executable.</td>\n\n#   </tr>\n\n# </table>\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# source path\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# startup script\n",
        "Line" : 485,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# write wrapper executable\n",
        "Line" : 513,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# note that Bash variables within the script are denoted by $var\n\n# instead of ${var} to prevent CMake from substituting these patterns\n",
        "Line" : 521,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# end of file(WRITE) command\n",
        "Line" : 563,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# ============================================================================\n\n# MEX-file target\n\n# ============================================================================\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add MEX-file target.\n\n#\n\n# @note This function should not be used directly. Instead, it is called\n\n#       by basis_add_library() if the (detected) programming language\n\n#       of the given source code files is @c CXX (i.e., C/C++) and the @c MEX\n\n#       type option is given.\n\n#\n\n# This function is used to add a shared library target which is built\n\n# using the MATLAB MEX script (mex).\n\n#\n\n# By default, the BASIS C++ utilities library is added as link dependency.\n\n# If none of the BASIS C++ utilities are used by this target, the option\n\n# NO_BASIS_UTILITIES can be given. To enable this option by default, set the\n\n# variable @c BASIS_UTILITIES to @c FALSE, best in the <tt>Settings.cmake</tt>\n\n# file located in the @c PROJECT_CONFIG_DIR (add such file if missing).\n\n# If the use of the BASIS C++ utilities is disabled by default, the\n\n# @c USE_BASIS_UTILITIES option can be used to enable them for this target\n\n# only. Note that the utilities library is a static library and thus the linker\n\n# would simply not include any of the BASIS utility functions in the final\n\n# binary file if not used. The only advantage of setting @c BASIS_UTILITIES to\n\n# @c FALSE or to always specify @c NO_BASIS_UTILITIES if no target uses the\n\n# utilities is that the BASIS utilities library will not be build in this case.\n\n#\n\n# A custom CMake build target with the following properties is added by this\n\n# function to the build system. These properties are used by\n\n# basis_build_mex_target() to generate a build script written in CMake\n\n# code which is executed by a custom CMake command. Before the invokation of\n\n# basis_build_mex_target(), the target properties can be modified using\n\n# basis_set_target_properties().\n\n#\n\n# @note Custom BASIS build targets are finalized by BASIS using basis_project_end(),\n\n#       i.e., the end of the root CMake configuration file of the (sub-)project.\n\n#\n\n# @par Properties on script library targets\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b MFILE file @endtp\n\n#     <td>MATLAB source file with function prototype and documentation of MEX-file.\n\n#         (default: none)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PREFIX prefix @endtp\n\n#     <td>Output prefix of build MEX-file such as package name\n\n#         (the prefix must include the leading + and trailing /).</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @attention Properties documented as read-only must not be modified.\n\n#\n\n# An install command for the added library target is added by this function\n\n# as well. The MEX-file will be installed as part of the specified @p COMPONENT\n\n# in the @c INSTALL_LIBRARY_DIR on Unix and @c INSTALL_RUNTIME_DIR on Windows.\n\n#\n\n# @param [in] TARGET_NAME Name of build target.\n\n# @param [in] ARGN        The remaining arguments are parsed and the following\n\n#                         arguments extracted. All unparsed arguments are treated\n\n#                         as the source files of the MEX-file.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of installation component as part of which this MEX-file is being\n\n#         installed if the @c LIBRARY_INSTALL_DIRECTORY property is not \"none\".\n\n#         (default: @c BASIS_LIBRARY_COMPONENT)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this MEX-file and\n\n#         hence no link dependency on the BASIS utilities shall be added.\n\n#         (default: @c NOT BASIS_UTILITIES)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and required by this MEX-file\n\n#         and hence a link dependency on the BASIS utilities must be added.\n\n#         (default: @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds custom target to build MEX-file using the MEX script.\n\n#\n\n# @sa basis_add_library()\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# check target name\n",
        "Line" : 663,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# required commands available ?\n",
        "Line" : 667,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# parse arguments\n",
        "Line" : 673,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# IS_TEST flag\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# installation component\n",
        "Line" : 701,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# installation directory\n",
        "Line" : 708,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# configure (.in) source files\n",
        "Line" : 718,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# add custom target\n",
        "Line" : 720,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# link to BASIS utilities\n",
        "Line" : 751,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# add target to list of targets\n",
        "Line" : 755,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# ============================================================================\n\n# MATLAB Compiler target\n\n# ============================================================================\n",
        "Line" : 760,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add MATLAB Compiler target.\n\n#\n\n# @note This function should not be used directly. Instead, it is called\n\n#       by either basis_add_executable() or basis_add_library() if the\n\n#       (detected) programming language of the given source code files is\n\n#       @c MATLAB.\n\n#\n\n# This function is used to add an executable or shared library target which is\n\n# built using the MATLAB Compiler (MCC).\n\n#\n\n# A custom CMake build target with the following properties is added by this\n\n# function to the build system. These properties are used by\n\n# basis_build_mcc_target() to generate a build script written in CMake\n\n# code which is executed by a custom CMake command. Before the invokation of\n\n# basis_build_mcc_target(), the target properties can be modified using\n\n# basis_set_target_properties().\n\n#\n\n# @note Custom BASIS build targets are finalized by BASIS using basis_project_end(),\n\n#       i.e., the end of the root CMake configuration file of the (sub-)project.\n\n#\n\n# @par Properties on MATLAB Compiler targets\n\n# <table border=0>\n\n#   <tr><td>TODO</td></tr>\n\n# </table>\n\n#\n\n# An install command for the added executable or library target is added by\n\n# this function as well. The executable will be installed as part of the\n\n# @p RUNTIME_COMPONENT in the directory @c INSTALL_RUNTIME_DIR. The runtime\n\n# library will be installed as part of the @p RUNTIME_COMPONENT in the directory\n\n# @c INSTALL_LIBRARY_DIR on Unix and @c INSTALL_RUNTIME_DIR on Windows.\n\n# Static/import libraries will be installed as part of the @p LIBRARY_COMPONENT\n\n# in the directory @c INSTALL_ARCHIVE_DIR.\n\n#\n\n# @note If this function is used within the @c PROJECT_TESTING_DIR, the built\n\n#       executable is output to the @c BINARY_TESTING_DIR directory tree instead.\n\n#       Moreover, no installation rules are added. Test executables are further\n\n#       not exported, regardless of the value of the @c EXPORT property.\n\n#\n\n# @param [in] TARGET_NAME Name of build target.\n\n# @param [in] ARGN        The remaining arguments are parsed and the following\n\n#                         arguments extracted. All unparsed arguments are treated\n\n#                         as the MATLAB or C/C++ source files, respectively.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp <b>EXECUTABLE</b>|<b>LIBEXEC</b>|<b>SHARED</b> @endtp\n\n#     <td>Type of the MATLAB Compiler target which can be either a stand-alone\n\n#         executable, an auxiliary executable, or a shared library.\n\n#         (default: @c EXECUTABLE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of component as part of which this executable or library will be\n\n#         installed if the @c RUNTIME_INSTALL_DIRECTORY or @c LIBRARY_INSTALL_DIRECTORY\n\n#         property is not \"none\". Used only if @p RUNTIME_COMPONENT or\n\n#         @p LIBRARY_COMPONENT not specified.\n\n#         (default: see @p RUNTIME_COMPONENT and @p LIBRARY_COMPONENT arguments)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory for executable or runtime and library component\n\n#         of shared library relative to @c CMAKE_INSTALL_PREFIX. Used only if\n\n#         @p RUNTIME_DESTINATION or @p LIBRARY_DESTINATION not specified.\n\n#         If \"none\" (case-insensitive) is given as argument, no default installation\n\n#         rules are added. (default: see @p RUNTIME_DESTINATION and\n\n#         @p LIBRARY_DESTINATION arguments)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_COMPONENT name @endtp\n\n#     <td>Name of component as part of which import/static library will be intalled\n\n#         if a shared library is build and the @c LIBRARY_INSTALL_DIRECTORY property is\n\n#         not \"none\". (default: @c COMPONENT if specified or @c BASIS_LIBRARY_COMPONENT\n\n#         otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_DESTINATION dir @endtp\n\n#     <td>Installation directory of the library component relative to\n\n#         @c CMAKE_INSTALL_PREFIX. If \"none\" (case-insensitive) is given as argument or\n\n#         an executable is build, no installation rule for the library component is added.\n\n#         (default: @c INSTALL_ARCHIVE_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b HEADER_DESTINATION dir @endtp\n\n#     <td>Installation directory of the library header file relative to\n\n#         @c INSTALL_INCLUDE_DIR. If \"none\" (case-insensitive) is given as argument or\n\n#         an executable is build, no installation rule for the library header file is added.\n\n#         (default: @c INSTALL_INCLUDE_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b RUNTIME_COMPONENT name @endtp\n\n#     <td>Name of component as part of which executable or runtime library, respectively,\n\n#         will be installed if the @c RUNTIME_INSTALL_DIRECTORY property is not \"none\".\n\n#         (default: @c COMPONENT if specified or @c BASIS_RUNTIME_COMPONENT otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b RUNTIME_DESTINATION dir @endtp\n\n#     <td>Installation directory of the executable or runtime component of the shared library\n\n#         relative to @c CMAKE_INSTALL_PREFIX. If \"none\" (case-insensitive) is given as argument,\n\n#         no installation rule for the runtime library is added.\n\n#         (default: @c INSTALL_LIBRARY_DIR for shared libraries on Unix or\n\n#         @c INSTALL_RUNTIME_DIR otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this executable or shared library\n\n#         and hence no link dependency on the BASIS utilities shall be added.\n\n#         (default: @c NOT BASIS_UTILITIES)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and required by this executable\n\n#         or shared library, respectively, and hence a link dependency on the BASIS utilities\n\n#         must be added.\n\n#         (default: @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @todo Consider NO_BASIS_UTILITIES and USE_BASIS_UTILITIES options after the BASIS\n\n#       utilities for MATLAB have been implemented.\n\n#\n\n# @returns Adds custom target which builds depending on the @p BASIS_TYPE property\n\n#          either an executable or a shared library using the MATLAB Compiler.\n\n#\n\n# @sa basis_add_executable()\n\n# @sa basis_add_library()\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# check target name\n",
        "Line" : 897,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# parse arguments\n",
        "Line" : 900,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# IS_TEST flag\n",
        "Line" : 930,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# output directory\n",
        "Line" : 937,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# installation component\n",
        "Line" : 953,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# installation directories\n",
        "Line" : 974,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# whether to compile and compilation flags (for mcc)\n",
        "Line" : 1010,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# TODO implement generation of Windows Command on Windows\n",
        "Line" : 1030,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# output file name prefix/suffix\n",
        "Line" : 1069,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# link library file extension\n",
        "Line" : 1080,
        "CharPositionInLine" : 24
      },
      "58" : {
        "Text" : "# configure (.in) source files\n",
        "Line" : 1089,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# add custom target\n",
        "Line" : 1091,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# TODO Implement utilities for MATLAB\n",
        "Line" : 1101,
        "CharPositionInLine" : 38
      },
      "61" : {
        "Text" : "# add target to list of targets\n",
        "Line" : 1124,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# ============================================================================\n\n# custom build commands\n\n# ============================================================================\n",
        "Line" : 1129,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add custom command for build of MEX-file.\n\n#\n\n# This function is called by basis_finalize_targets() which in turn is called\n\n# by basis_project_end(), i.e., the end of the root CMake configuration file\n\n# of the (sub-)project.\n\n#\n\n# @param [in] TARGET_UID Name/UID of custom target added by basis_add_mex_file().\n\n#\n\n# @sa basis_add_mex_file()\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 1133,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# does this target exist ?\n",
        "Line" : 1146,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# get target properties\n",
        "Line" : 1154,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# sanity check of property values\n",
        "Line" : 1185,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# CMake <3.1 stores path to internal build directory here\n",
        "Line" : 1189,
        "CharPositionInLine" : 33
      },
      "68" : {
        "Text" : "# output name\n",
        "Line" : 1210,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# initialize dependencies of custom build command\n",
        "Line" : 1222,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# get list of libraries to link to\n",
        "Line" : 1224,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# decompose user supplied MEX switches\n",
        "Line" : 1238,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# set defaults for not provided options\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# do not use CMAKE_LINKER here\n",
        "Line" : 1283,
        "CharPositionInLine" : 39
      },
      "74" : {
        "Text" : "# We chose to use CLIBS and CXXLIBS instead of the -L and -l switches\n\n# to add also link libraries added via basis_target_link_libraries()\n\n# because the MEX script will not use these arguments if CLIBS or CXXLIBS\n\n# is set. Moreover, the -l switch can only be used to link to a shared\n\n# library and not a static one (on UNIX).\n\n#foreach (LIB ${LINK_LIBS})\n\n#  if (LIB MATCHES \"[/\\\\\\.]\")\n\n#    set (CXXLIBS \"${CXXLIBS} ${LIB}\")\n\n#  endif ()\n\n#endforeach ()\n",
        "Line" : 1288,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# get remaining switches\n",
        "Line" : 1299,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# assemble MEX switches\n",
        "Line" : 1301,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# C compiler and flags\n",
        "Line" : 1304,
        "CharPositionInLine" : 67
      },
      "78" : {
        "Text" : "# C link libraries\n",
        "Line" : 1306,
        "CharPositionInLine" : 67
      },
      "79" : {
        "Text" : "# C++ compiler and flags\n",
        "Line" : 1308,
        "CharPositionInLine" : 67
      },
      "80" : {
        "Text" : "# C++ link libraries\n",
        "Line" : 1310,
        "CharPositionInLine" : 67
      },
      "81" : {
        "Text" : "# C linker\n",
        "Line" : 1313,
        "CharPositionInLine" : 67
      },
      "82" : {
        "Text" : "# C link flags\n",
        "Line" : 1316,
        "CharPositionInLine" : 67
      },
      "83" : {
        "Text" : "# C++ linker\n",
        "Line" : 1319,
        "CharPositionInLine" : 67
      },
      "84" : {
        "Text" : "# C++ link flags\n",
        "Line" : 1322,
        "CharPositionInLine" : 67
      },
      "85" : {
        "Text" : "# output directory\n\n# output name (w/o extension)\n\n# include directories\n\n# as specified via\n\n# basis_include_directories()\n",
        "Line" : 1325,
        "CharPositionInLine" : 65
      },
      "86" : {
        "Text" : "# link directories\n",
        "Line" : 1335,
        "CharPositionInLine" : 66
      },
      "87" : {
        "Text" : "# as specified via basis_link_directories()\n",
        "Line" : 1342,
        "CharPositionInLine" : 65
      },
      "88" : {
        "Text" : "# link libraries\n\n# as specified via basis_target_link_libraries()\n",
        "Line" : 1344,
        "CharPositionInLine" : 64
      },
      "89" : {
        "Text" : "# cf. https://github.com/schuhschuh/cmake-basis/issues/443\n",
        "Line" : 1349,
        "CharPositionInLine" : 6
      },
      "90" : {
        "Text" : "# do not remove duplicate entries in MEX_LIBS which may be needed\n\n# to resolve (cyclic) dependencies between statically linked libraries\n\n# (cf. https://github.com/schuhschuh/cmake-basis/issues/444)\n",
        "Line" : 1375,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# other user switches \n",
        "Line" : 1387,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# source files\n",
        "Line" : 1389,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# build command for invocation of MEX script\n",
        "Line" : 1391,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# configure build script\n",
        "Line" : 1403,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# relative paths used for comments of commands\n",
        "Line" : 1405,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# add custom command to build executable using MEX script\n",
        "Line" : 1407,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# rebuild when input sources were modified\n",
        "Line" : 1410,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# invoke MEX script, wrapping the command in CMake execute_process()\n\n# command allows for inspection of command output for error messages\n\n# and specification of timeout\n",
        "Line" : 1412,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# post-build command\n",
        "Line" : 1425,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# inform user where build log can be found\n",
        "Line" : 1428,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# comment\n",
        "Line" : 1430,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# add custom target\n",
        "Line" : 1442,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# cleanup on \"make clean\"\n",
        "Line" : 1445,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# export target\n",
        "Line" : 1454,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# install MEX-file\n",
        "Line" : 1458,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add custom command for build of MATLAB Compiler target.\n\n#\n\n# This function is called by basis_finalize_targets() which in turn is called\n\n# by basis_project_end(), i.e., the end of the root CMake configuration file\n\n# of the (sub-)project.\n\n#\n\n# @param [in] TARGET_UID Name/UID of custom target added by basis_add_mcc_target().\n\n#\n\n# @sa basis_add_mcc_target()\n\n#\n\n# @ingroup CMakeUtilities\n",
        "Line" : 1471,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# does this target exist ?\n",
        "Line" : 1484,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# get target properties\n",
        "Line" : 1492,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# sanity checks of property values\n",
        "Line" : 1526,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# CMake <3.1 stores path to internal build directory here\n",
        "Line" : 1538,
        "CharPositionInLine" : 33
      },
      "111" : {
        "Text" : "# entry point\n",
        "Line" : 1548,
        "CharPositionInLine" : 35
      },
      "112" : {
        "Text" : "# output name\n",
        "Line" : 1555,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# MCC only allows alpha-numeric characters and underscores\n\n# TODO: Figure out how to build a shared library without this restriction\n\n#       (cf. https://github.com/schuhschuh/cmake-basis/issues/410).\n",
        "Line" : 1566,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "#string (REGEX REPLACE \"\\\\+|-\" \"_\" MCC_OUTPUT_NAME \"${OUTPUT_NAME}\")\n\n#get_filename_component (MCC_OUTPUT_NAME_WE \"${MCC_OUTPUT_NAME}\" NAME_WE)\n\n# initialize dependencies of custom build command\n",
        "Line" : 1577,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# build output file and comment\n",
        "Line" : 1581,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# assemble build command for build of executable wrapper script\n",
        "Line" : 1590,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# used to recognize source files which are located in the build tree\n",
        "Line" : 1593,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# main MATLAB function and search path\n",
        "Line" : 1595,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# location of configured sources\n",
        "Line" : 1607,
        "CharPositionInLine" : 52
      },
      "120" : {
        "Text" : "# output file\n",
        "Line" : 1608,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# installation\n",
        "Line" : 1611,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "# file to be installed\n\n# location of installed wrapper\n\n# location of installed MATLAB sources\n",
        "Line" : 1612,
        "CharPositionInLine" : 84
      },
      "123" : {
        "Text" : "# startup file\n",
        "Line" : 1618,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# MATLAB search path\n\n#\n\n# The following paths are written to the startup M-file such\n\n# that they can conveniently be added to the search path within an\n\n# interactive MATLAB sesssion. The path to this startup file is\n\n# added to the search path by the wrapper executable first, and\n\n# then this startup file is evaluated which adds all additional\n\n# paths. If no startup file is specified, all paths are added\n\n# to the search path on the command-line in the wrapper script.\n",
        "Line" : 1631,
        "CharPositionInLine" : 4
      },
      "125" : {
        "Text" : "# if any source file was configured and hence is located in the\n\n# build tree instead of the source tree, add corresponding build\n\n# tree path to BUILD_MATLABPATH as well\n",
        "Line" : 1642,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# The following is not required because startup script is located\n\n# in the same directory as the other sources and basis_generate_matlab_executable()\n\n# adds this path automatically in order to run the startup script.\n\n# Moreover, if anyone wants to run the startup script, they have to\n\n# add this path manually or make it the current directory first.\n\n#file (RELATIVE_PATH REL \"${INSTALL_STARTUP_DIR}\" \"${CMAKE_INSTALL_PREFIX}/${INSTALL_SOURCE_DIR}\")\n\n#if (REL)\n\n#  list (APPEND INSTALL_MATLABPATH \"${REL}\")\n\n#else ()\n\n#  list (APPEND INSTALL_MATLABPATH \".\")\n\n#endif ()\n\n# link dependencies, i.e., MEX-files\n",
        "Line" : 1654,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "# cleanup directory paths\n",
        "Line" : 1701,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# remove duplicates\n",
        "Line" : 1706,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# configure build script\n",
        "Line" : 1713,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# add custom command to build wrapper executable\n",
        "Line" : 1716,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# rebuild when input sources were modified\n",
        "Line" : 1719,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# invoke MATLAB Compiler in either MATLAB or standalone mode\n\n# wrapping command in CMake execute_process () command allows for inspection\n\n# parsing of command output for error messages and specification of timeout\n",
        "Line" : 1722,
        "CharPositionInLine" : 6
      },
      "133" : {
        "Text" : "# comment\n",
        "Line" : 1726,
        "CharPositionInLine" : 6
      },
      "134" : {
        "Text" : "# install source files - preserving relative paths in SOURCE_DIR\n",
        "Line" : 1729,
        "CharPositionInLine" : 4
      },
      "135" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# assemble build command for build using MATLAB Compiler\n",
        "Line" : 1751,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# file to be installed\n",
        "Line" : 1754,
        "CharPositionInLine" : 41
      },
      "137" : {
        "Text" : "# get list of libraries to link to (e.g., MEX-file)\n",
        "Line" : 1755,
        "CharPositionInLine" : 4
      },
      "138" : {
        "Text" : "# MATLAB search path\n",
        "Line" : 1768,
        "CharPositionInLine" : 4
      },
      "139" : {
        "Text" : "# MATLAB Compiler arguments\n",
        "Line" : 1774,
        "CharPositionInLine" : 4
      },
      "140" : {
        "Text" : "# user specified flags\n\n# search path, -I options\n\n# remove package/class subdirectories\n\n# skip if already added\n",
        "Line" : 1775,
        "CharPositionInLine" : 64
      },
      "141" : {
        "Text" : "# build library\n",
        "Line" : 1791,
        "CharPositionInLine" : 75
      },
      "142" : {
        "Text" : "#      or\n\n# build standalone application\n",
        "Line" : 1792,
        "CharPositionInLine" : 64
      },
      "143" : {
        "Text" : "# (temp) output directory\n\n# source M-files\n\n# link libraries, e.g. MEX-files\n",
        "Line" : 1795,
        "CharPositionInLine" : 64
      },
      "144" : {
        "Text" : "# build command for invocation of MATLAB Compiler in standalone mode\n",
        "Line" : 1803,
        "CharPositionInLine" : 4
      },
      "145" : {
        "Text" : "# build command for invocation of MATLAB Compiler in MATLAB mode\n",
        "Line" : 1809,
        "CharPositionInLine" : 4
      },
      "146" : {
        "Text" : "# run MATLAB\n\n# do not display splash screen on start up\n\n# run in command line mode\n\n# we do not need the Java Virtual Machine\n",
        "Line" : 1822,
        "CharPositionInLine" : 35
      },
      "147" : {
        "Text" : "# post-build command\n",
        "Line" : 1830,
        "CharPositionInLine" : 4
      },
      "148" : {
        "Text" : "# TODO: This file should be regenerated if it is missing.\n",
        "Line" : 1859,
        "CharPositionInLine" : 8
      },
      "149" : {
        "Text" : "# configure build script\n",
        "Line" : 1878,
        "CharPositionInLine" : 4
      },
      "150" : {
        "Text" : "# add custom command to build executable using MATLAB Compiler\n",
        "Line" : 1880,
        "CharPositionInLine" : 4
      },
      "151" : {
        "Text" : "# rebuild when input sources were modified\n",
        "Line" : 1883,
        "CharPositionInLine" : 6
      },
      "152" : {
        "Text" : "# invoke MATLAB Compiler in either MATLAB or standalone mode\n\n# wrapping command in CMake execute_process() command allows for inspection\n\n# of command output for error messages and specification of timeout\n",
        "Line" : 1886,
        "CharPositionInLine" : 6
      },
      "153" : {
        "Text" : "# post build command(s)\n",
        "Line" : 1902,
        "CharPositionInLine" : 6
      },
      "154" : {
        "Text" : "# inform user where build log can be found\n",
        "Line" : 1904,
        "CharPositionInLine" : 6
      },
      "155" : {
        "Text" : "# comment\n",
        "Line" : 1906,
        "CharPositionInLine" : 6
      },
      "156" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add custom target\n",
        "Line" : 1911,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# cleanup on \"make clean\"\n",
        "Line" : 1915,
        "CharPositionInLine" : 2
      },
      "158" : {
        "Text" : "# export target\n",
        "Line" : 1943,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# install executable or library\n",
        "Line" : 1947,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# done\n",
        "Line" : 1996,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 161
    },
    "src/cmake/PostprocessChangeLog.cmake" : {
      "ObjectId" : "915d86f7526694a635987d4ad0d7969a0b7dd962",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  PostprocessChangeLog.cmake\n\n# @brief Script used to postprocess ChangeLog generated from commit history.\n\n#\n\n# Usage: cmake -DCHANGELOG_FILE=file -DINPUTFORMAT=[SVN|SVN2CL|GIT]\n\n#                   -P PostprocessChangeLog.cmake\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# check required arguments\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# read change log\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# git log\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# remove git-svn-id entries from commit message body\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# group entries of same date and same author\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# clear changelog\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# process changelog line-by-line and leave out duplicate date and author lines\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Hack: For some reason the regular expression used above to split the\n\n#       change log file into lines produces lines with a newline followed\n\n#       by a semicolon. This could be a bug in CMake as well.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# a line with a date and author marks the beginning of a log entry\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# write change log\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/cmake/ProjectTools.cmake" : {
      "ObjectId" : "dfd7694e809d3fdaccb50c4d912a54998106dd8a",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Carnegie Mellon University\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  ProjectTools.cmake\n\n# @brief Definition of main project tools.\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include guard\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# basis_name_check\n\n# ============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Check if a project name fits the BASIS standards.\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ============================================================================\n\n# meta-data\n\n# ============================================================================\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## @brief Auxiliary macro used by basis_project_check_metadata.\n\n#\n\n# Used by basis_project_check_metadata to check the existence of each project\n\n# source directory specified in the given list variable and to report an error\n\n# otherwise. As a side effect, this macro makes all relative paths absolute\n\n# with respect to PROJECT_SOURCE_DIR or sets the directory variable to the\n\n# default value (ARGN).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Check meta-data and set defaults.\n\n#\n\n# @sa basis_project()\n\n# @sa basis_slicer_module()\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PROJECT_AUTHOR\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# PROJECT_NAME or PROJECT_SUBPROJECT\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# PROJECT_PACKAGE_NAME\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# PROJECT_PACKAGE_VENDOR\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# PROJECT_PACKAGE_WEBSITE\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# PROJECT_PACKAGE_LOGO - see also basis_initialize_settings\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# PROJECT_PROVIDER_NAME\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# PROJECT_PROVIDER_WEBSITE\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# PROJECT_PROVIDER_LOGO - see also basis_initialize_settings\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# PROJECT_DIVISION_NAME\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# PROJECT_DIVISION_WEBSITE\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# PROJECT_DIVISION_LOGO - see also basis_initialize_settings\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# PROJECT_VERSION\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# PROJECT_DESCRIPTION\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# PROJECT_COPYRIGHT\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# PROJECT_LICENSE\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# PROJECT_CONTACT\n",
        "Line" : 301,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# source tree directories\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# extract main source code directories from lists\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# let basis_project_begin() know that basis_project() was called\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Sets basic project information including the name, version, and dependencies.\n\n#\n\n# Any BASIS project has to call this macro in the file BasisProject.cmake\n\n# located in the top level directory of the source tree in order to define\n\n# the project attributes required by BASIS to setup the build system.\n\n# Moreover, if the BASIS project is a module of another BASIS project, this\n\n# file and the variables set by this macro are used by the top-level project to\n\n# identify its modules and the dependencies among them.\n\n#\n\n# @param [in] ARGN This list is parsed for the following arguments:\n\n#\n\n# @par General project meta-data:\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b VERSION major[.minor[.patch]] @endtp\n\n#     <td>Project version string. (default: 1.0.0)\n\n# @n\n\n# The version number consists of three components: the major version number,\n\n# the minor version number, and the patch number. The format of the version\n\n# string is \"<major>.<minor>.<patch>\", where the minor version number and patch\n\n# number default to \"0\" if not given. Only digits are allowed except of the two\n\n# separating dots.\n\n# @n\n\n# - A change of the major version number indicates changes of the softwares\n\n#   @api (and @abi) and/or its behavior and/or the change or addition of major\n\n#   features.\n\n# - A change of the minor version number indicates changes that are not only\n\n#   bug fixes and no major changes. Hence, changes of the @api but not the @abi.\n\n# - A change of the patch number indicates changes only related to bug fixes\n\n#   which did not change the softwares @api. It is the least important component\n\n#   of the version number.\n\n#     </td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESCRIPTION description @endtp\n\n#     <td>Package description, used for packing. If multiple arguments are given,\n\n#         they are concatenated using one space character as delimiter.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NAME name @endtp\n\n#     <td>The name of the project.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SUBPROJECT name @endtp\n\n#     <td>Use this option instead of @c NAME to indicate that this project is a subproject\n\n#         of the package named by @c PACKAGE_NAME. This results, for example, in target\n\n#         UIDs such as \"<package>.<name>.<target>\" instead of \"<package>.<target>\".\n\n#         Moreover, the libraries and shared files of a subproject are installed\n\n#         in subdirectores whose name equals the name of the subproject. This option\n\n#         should only be used for projects which are modules of another BASIS project,\n\n#         where these modules should reside in their own sub-namespace rather than\n\n#         on the same level as the top-level project.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PACKAGE_NAME name @endtp\n\n#     <td>Name of the package this project (module) belongs to. Defaults to the\n\n#         name of the (top-level) project. This option can further be used in case\n\n#         of a top-level project to specify a different package name for the installation.\n\n#         In case of a subproject which is a module of another BASIS project, setting\n\n#         the package name explicitly using this option enables the build of the\n\n#         subproject as separate project while preserving the directory structure\n\n#         and other namespace settings. Therefore, this option is required if the\n\n#         @c SUBPROJECT option is given and the project shall be build independently\n\n#         as stand-alone package. (default: name of top-level package)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PACKAGE name @endtp\n\n#     <td>Short alternative for @c PACKAGE_NAME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PACKAGE_VENDOR name @endtp\n\n#     <td>Short ID of package vendor (i.e, provider and/or division acronym) this variable is used\n\n#         for package identification and is the name given to the folder that will be used as the default \n\n#         installation path location subdirectory.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b VENDOR name @endtp\n\n#     <td>Short alternative for @c PACKAGE_VENDOR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PACKAGE_WEBSITE url @endtp\n\n#     <td>URL of project website used for documentation and packaging.\n\n#         (default: project website of top-level project or empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PACKAGE_LOGO path @endtp\n\n#     <td>Path to package logo file for this installable package. Used in documentation and packaging.\n\n#         Relative paths must be relative to @c PROJECT_SOURCE_DIR.\n\n#         (default: empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b WEBSITE url @endtp\n\n#     <td>Short alternative for @c PACKAGE_WEBSITE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROVIDER_NAME name @endtp\n\n#     <td>The provider/vendor/creator of this package, used for packaging and installation.\n\n#         (default: provider of top-level project or empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROVIDER_WEBSITE url @endtp\n\n#     <td>URL of provider website used for documentation and packaging.\n\n#         (default: provider website of top-level project or empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PROVIDER_LOGO path @endtp\n\n#     <td>Path to provider logo file used for documentation and packaging.\n\n#         Relative paths must be relative to @c PROJECT_SOURCE_DIR.\n\n#         (default: empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DIVISION_NAME name @endtp\n\n#     <td>The provider division of this package, used for packaging and installation.\n\n#         (default: provider division of top-level project or empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DIVISION_WEBSITE url @endtp\n\n#     <td>URL of provider division website used for documentation and packaging.\n\n#         (default: provider website of top-level project or empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DIVISION_LOGO path @endtp\n\n#     <td>Path to provider division logo file used for documentation and packaging.\n\n#         Relative paths must be relative to @c PROJECT_SOURCE_DIR.\n\n#         (default: empty string)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b TEMPLATE path @endtp\n\n#    <td> The TEMPLATE variable stores the directory of the chosen project template along \n\n#         with the template version so that the correct template is used by basisproject when a project is updated.\n\n#         Note that this variable is used in BASIS itself to specify the default template to use for the BASIS \n\n#         installation, i.e., the default used by basisproject if no --template argument is provided.\n\n#         If the template is part of the BASIS installation, only the template name and version part of the \n\n#         full path are needed. Otherwise, the full absolute path is used. For example,\n\n# @code\n\n# basis_project (\n\n#   # ...\n\n#   TEMPLATE \"sbia/1.8\"\n\n#   # ...\n\n# )\n\n# # or\n\n# basis_project (\n\n#   # ...\n\n#   TEMPLATE \"/opt/local/share/custom-basis-template/1.0\"\n\n#   # ...\n\n# )\n\n# @endcode\n\n#         The installed templates can be found in the share/templates folder of installed BASIS software,\n\n#         as well as the data/templates foler of the BASIS source tree.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Project dependencies:\n\n# Dependencies on other BASIS projects, which can be subprojects of the same\n\n# BASIS top-level project, as well as dependencies on external packages such as ITK\n\n# have to be defined here using the @p DEPENDS argument option. This will be used\n\n# by a top-level project to ensure that the dependencies among its subprojects are\n\n# resolved properly. For each external dependency, the BASIS functions\n\n# basis_find_package() and basis_use_package() are invoked by\n\n# basis_project_initialize(). If an external package is not CMake aware and\n\n# additional CMake code shall be executed to include the settings of the external\n\n# package (which is usually done in a so-called <tt>Use&lt;Pkg&gt;.cmake</tt> file\n\n# if the package would be CMake aware), such code should be added to the\n\n# <tt>Settings.cmake</tt> file of the project.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b DEPENDS dep1 [dep2...] @endtp\n\n#     <td>List of dependencies, i.e., either names of other BASIS (sub)projects\n\n#         or names of external packages.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OPTIONAL_DEPENDS dep1 [dep2...] @endtp\n\n#     <td>List of dependencies, i.e., either names of other BASIS (sub)projects\n\n#         or names of external packages which are used only if available.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b TEST_DEPENDS dep1 [dep2...] @endtp\n\n#     <td>List of dependencies, i.e., either names of other BASIS (sub)projects\n\n#         or names of external packages which are only required by the tests.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OPTIONAL_TEST_DEPENDS dep1 [dep2...] @endtp\n\n#     <td>List of dependencies, i.e., either names of other BASIS (sub)projects\n\n#         or names of external packages which are used only by the tests if available.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Source tree layout:\n\n# Relative directory paths have to be relative to the @c PROJECT_SOURCE_DIR, i.e.,\n\n# the diretory containing the @c BasisProject.cmake file which calls this command.\n\n# If any of the following arguments refer to non-existing directory paths,\n\n# the respective paths are simply ignored during the project build configuration.\n\n# In case of the paths passed to @p MODULE_DIRS, an error is raised if the directory\n\n# does not exist or is missing a BasisProject.cmake file.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b INCLUDE_DIRS path1 [path2...] @endtp\n\n#     <td>A list of directories containing the header files of the public interface.\n\n#         (default: include)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b INCLUDE_DIR path @endtp\n\n#     <td>Alternative option for @p INCLUDE_DIRS which only accepts a single path as argument.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b CODE_DIRS path1 [path2...] @endtp\n\n#     <td>A list of directories containing the source code files. The first diretory path\n\n#         is used as main source directory from which the subdirectory name of the\n\n#         corresponding build tree directory is derived. Any configured or generated\n\n#         source files are written to this build tree source directory.\n\n#         (default: src)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b CODE_DIR path @endtp\n\n#     <td>Alternative option for @p CODE_DIRS which only accepts a single path as argument.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_DIR path @endtp\n\n#     <td>Directory of public modules written in a scripting language such as Python or Perl. (default: lib)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MODULES_DIR path @endtp\n\n#     <td>Path to directory containing multiple module subdirectories, each containing\n\n#         their own BasisProject.cmake file that will each be picked up automatically.\n\n#         (default: modules)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MODULE_DIRS path1 [path2...] @endtp\n\n#     <td>A list of individual module directories, each containing a BasisProject.cmake file.\n\n#         This list differs from @c MODULES_DIR in that each listed directory is the\n\n#         root directory of a single module, whereas @c MODULES_DIR is the comman\n\n#         directory of multiple modules contained in their own respective subdirectory.\n\n#         (default: \"\")</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b CONFIG_DIR path @endtp\n\n#     <td>Directory in which BASIS looks for custom CMake/BASIS configuration files. (default: config)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DATA_DIR path @endtp\n\n#     <td>Directory which contains auxiliary data required by the software programs. (default: data)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOC_DIR path @endtp\n\n#     <td>Directory containing the software documentation (source) files. (default: doc)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DOCRES_DIR path @endtp\n\n#     <td>Directory where the documentation ressource files such as the project logo are located. (default: @p DOC_DIR/config)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b EXAMPLE_DIR path @endtp\n\n#     <td>Directory with some example files demonstrating the usage of the software. (default: example)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b TESTING_DIR path @endtp\n\n#     <td>The root diretory of the testing source tree containing test data and implementations. (default: test)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Sets the following non-cached CMake variables.\n\n#          See documentation of the corresponding parameters above for details.\n\n# @retval PROJECT_NAME                    See @c NAME and @p SUBPROJECT.\n\n# @retval PROJECT_PACKAGE_NAME            See @c PACKAGE_NAME.\n\n# @retval PROJECT_PACKAGE_VENDOR          See @c PACKAGE_VENDOR.\n\n# @retval PROJECT_PACKAGE_WEBSITE         See @c PACKAGE_WEBSITE.\n\n# @retval PROJECT_PACKAGE_LOGO            See @c PACKAGE_LOGO. Value is an absolute path.\n\n# @retval PROJECT_PROVIDER_NAME           See @c PROVIDER_NAME.\n\n# @retval PROJECT_PROVIDER_WEBSITE        See @c PROVIDER_WEBSITE.\n\n# @retval PROJECT_PROVIDER_LOGO           See @c PROVIDER_LOGO. Value is an absolute path.\n\n# @retval PROJECT_DIVISION_NAME           See @c DIVISION_NAME.\n\n# @retval PROJECT_DIVISION_WEBSITE        See @c DIVISION_WEBSITE.\n\n# @retval PROJECT_DIVISION_LOGO           See @c DIVISION_LOGO. Value is an absolute path.\n\n# @retval PROJECT_VERSION                 See @c VERSION.\n\n# @retval PROJECT_DESCRIPTION             See @c DESCRIPTION.\n\n# @retval PROJECT_DEPENDS                 See @c DEPENDS.\n\n# @retval PROJECT_OPTIONAL_DEPENDS        See @c OPTIONAL_DEPENDS.\n\n# @retval PROJECT_TEST_DEPENDS            See @c TEST_DEPENDS.\n\n# @retval PROJECT_OPTIONAL_TEST_DEPENDS   See @c OPTIONAL_TEST_DEPENDS.\n\n# @retval PROJECT_IS_SUBPROJECT           See @c TRUE if @c IS_SUBPROJECT option given or @c FALSE otherwise.\n\n#\n\n# @retval PROJECT_CODE_DIRS               See @c CODE_DIRS.\n\n# @retval PROJECT_CODE_DIR                First element of @c PROJECT_CODE_DIRS list.\n\n# @retval PROJECT_CONFIG_DIR              See @c CONFIG_DIR.\n\n# @retval PROJECT_DATA_DIR                See @c DATA_DIR.\n\n# @retval PROJECT_DOC_DIR                 See @c DOC_DIR.\n\n# @retval PROJECT_DOCRES_DIR              See @c DOCRES_DIR.\n\n# @retval PROJECT_EXAMPLE_DIR             See @c EXAMPLE_DIR.\n\n# @retval PROJECT_INCLUDE_DIRS            See @c INCLUDE_DIRS.\n\n# @retval PROJECT_INCLUDE_DIR             First element of @c PROJECT_INCLUDE_DIRS list.\n\n# @retval PROJECT_LIBRARY_DIR             See @c LIBRARY_DIR.\n\n# @retval PROJECT_MODULE_DIRS             See @c MODULE_DIRS.\n\n# @retval PROJECT_MODULES_DIR             See @c MODULES_DIR.\n\n# @retval PROJECT_TESTING_DIR             See @c TESTING_DIR.\n\n#\n\n# @ingroup CMakeAPI\n\n#\n\n# @see BasisSettings.cmake\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# @see BasisSettings.cmake for parameter lists.\n\n# @see basis_project_check_metadata() above for implementation details\n",
        "Line" : 631,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n# @{\n",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ============================================================================\n\n# initialization\n\n# ============================================================================\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Ensure certain requirements on build tree.\n\n#\n\n# Requirements:\n\n# - Root of build tree must not be root of source tree.\n\n#\n\n# @param [in] ARGN Not used.\n\n#\n\n# @returns Nothing.\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Ensure certain requirements on install tree.\n\n#\n\n# Requirements:\n\n# - Prefix must be an absolute path.\n\n# - Install tree must be different from source and build tree.\n\n#\n\n# @param [in] ARGN Not used.\n\n#\n\n# @returns Nothing.\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Initialize project modules.\n\n#\n\n# Most parts of this macro were copied from the ITK4 project\n\n# (http://www.vtk.org/Wiki/ITK_Release_4), in particular, the top-level\n\n# CMakeLists.txt file. This file does not state any specific license, but\n\n# the ITK package itself is released under the Apache License Version 2.0,\n\n# January 2004 (http://www.apache.org/licenses/).\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# reset variables\n",
        "Line" : 707,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# load module DAG\n",
        "Line" : 712,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# glob BasisProject.cmake files in modules subdirectory\n",
        "Line" : 715,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# add each manually specified module\n",
        "Line" : 720,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# use function scope to avoid overwriting of this project's variables\n",
        "Line" : 735,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# make sure that basis_project() was called\n",
        "Line" : 741,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# remember dependencies\n",
        "Line" : 745,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# remember source directories - used by basis_add_doxygen_doc()\n",
        "Line" : 758,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# remember if module depends on Slicer - used by basis_find_packages()\n",
        "Line" : 761,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# do not use MODULE instead of PROJECT_NAME in this function as it is not\n\n# set in the scope of this function but its parent scope only\n",
        "Line" : 772,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# use module name as subdirectory name such that the default package\n\n# configuration file knows where to find the module configurations\n",
        "Line" : 783,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# help modules to find each other using basis_find_package()\n",
        "Line" : 786,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# validate the module DAG to identify cyclic dependencies\n",
        "Line" : 791,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# we reached a module while traversing its own dependencies recursively\n",
        "Line" : 795,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# traverse dependencies of this module\n",
        "Line" : 805,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# determine list of enabled modules\n",
        "Line" : 819,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# provide an option for all modules\n",
        "Line" : 822,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# provide an option for each module\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# follow dependencies\n",
        "Line" : 839,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# build final list of enabled modules\n",
        "Line" : 863,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Deterministic order.\n",
        "Line" : 875,
        "CharPositionInLine" : 38
      },
      "56" : {
        "Text" : "# Deterministic order.\n",
        "Line" : 876,
        "CharPositionInLine" : 39
      },
      "57" : {
        "Text" : "# order list to satisfy dependencies\n",
        "Line" : 878,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# remove external dependencies\n",
        "Line" : 882,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# report what will be built\n",
        "Line" : 892,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# turn options ON for modules that are required by other modules\n",
        "Line" : 897,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# there was an option for the user\n\n# user did not set it to ON themself\n\n# BUILD_ALL_MODULES was not set ON\n\n# module is needed by other module(s)\n",
        "Line" : 899,
        "CharPositionInLine" : 33
      },
      "62" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Configure public header files.\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# settings\n",
        "Line" : 913,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# log file which lists the configured header files\n",
        "Line" : 916,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n#  header files to configure excluding the .in suffix\n",
        "Line" : 919,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# clean up last run before the error because a file was added/removed\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# required to be able to remove now obsolete files from the build tree\n",
        "Line" : 937,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# configure public header files\n",
        "Line" : 941,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# configure all .in files with substitution\n",
        "Line" : 949,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# regular headers are copied separately via \n\n# execute_process to avoid a full configure step\n\n# However, all headers should be checked for changes. \n",
        "Line" : 965,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# remove header files from build tree which were copied there before but\n\n# are part of a now disabled module or were simply removed from the source tree\n",
        "Line" : 992,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# Compare current list of headers to list of previously configured files.\n\n# If the lists differ, this command removes files which have been removed\n\n# from the directory tree with root PROJECT_INCLUDE_DIR also from the\n\n# tree with root directory BINARY_INCLUDE_DIR.\n",
        "Line" : 996,
        "CharPositionInLine" : 6
      },
      "73" : {
        "Text" : "# We need a list of the configured files to add them as dependency of the\n\n# custom build targets such that these get re-build whenever a file changed.\n\n# Additionally, including this file here which is modified whenever a\n\n# header file is added or removed triggeres a re-configuration of the\n\n# build system which is required to re-execute this function and adjust\n\n# these custom build targets.\n",
        "Line" : 1017,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# check if any header was added or removed (always out-of-date)\n",
        "Line" : 1025,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# error message displayed when a file was added or removed which requires\n\n# a reconfiguration of the build system\n",
        "Line" : 1028,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# custom command which globs the files in the project's include directory\n",
        "Line" : 1036,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# do not actually configure the files\n",
        "Line" : 1048,
        "CharPositionInLine" : 30
      },
      "78" : {
        "Text" : "# custom target to detect whether a file was added or removed\n",
        "Line" : 1055,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# trigger execution of custom command that generates the list\n\n# of current files in the project's include directory\n",
        "Line" : 1059,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Compare current list of headers to list of previously configured files.\n\n# If the lists differ, the build of this target fails with the given error message.\n",
        "Line" : 1062,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# triggers reconfigure on next build\n",
        "Line" : 1070,
        "CharPositionInLine" : 48
      },
      "82" : {
        "Text" : "# remove temporary file again to force its regeneration\n",
        "Line" : 1072,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add build command to re-configure public header files\n",
        "Line" : 1083,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# do not use same file as included\n\n# before otherwise CMake will re-configure\n\n# the build system next time\n",
        "Line" : 1091,
        "CharPositionInLine" : 38
      },
      "85" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add library targets for the public modules in @c PROJECT_LIBRARY_DIR.\n\n#\n\n# This function configures (\"builds\") the library modules in the\n\n# @c PROJECT_LIBRARY_DIR that are written in a scripting language such as\n\n# Python or Perl. The names of the added library targets can be modified using\n\n# the <tt>&lt;LANG&gt;_LIBRARY_TARGET</tt> variables, which are set to their\n\n# default values in the @c BasisSettings.cmake file.\n",
        "Line" : 1119,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Python\n",
        "Line" : 1128,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# Jython\n",
        "Line" : 1140,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Perl\n",
        "Line" : 1152,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# MATLAB\n",
        "Line" : 1164,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# Bash\n",
        "Line" : 1179,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# add library targets\n",
        "Line" : 1191,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# in particular required to\n\n# not falsely build Jython modules\n\n# as Python library\n",
        "Line" : 1201,
        "CharPositionInLine" : 63
      },
      "93" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Configure root documentation files.\n\n#\n\n# The root documentation files are located in the top-level directory of the\n\n# project's source tree. These are, in particular, the\n\n# * @c AUTHORS.txt or AUTHORS.md file with information on the authors of the software,\n\n# * @c COPYING.txt or COPYING.md file with copyright and licensing information,\n\n# * @c README.txt or README.md file,\n\n# * @c INSTALL.txt or INSTALL.md file with build and installation instructions,\n\n# * @c WELCOME.txt or WELCOME.md file with text used as welcome text of the installer.\n\n# where the top-level project requires all of these files except of the\n\n# @c WELCOME.txt or WELCOME.md file which defaults to the readme file. Modules of a project\n\n# usually do not include any of these files. Otherwise, the content of the\n\n# module's documentation file is appended to the corresponding file of the\n\n# top-level project.\n",
        "Line" : 1231,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# do not use configure_file() to copy the file, otherwise CMake will\n\n# update the build system only because we modified this file in the if-clause\n",
        "Line" : 1271,
        "CharPositionInLine" : 8
      },
      "95" : {
        "Text" : "# use extension on Windows, but leave it out on Unix\n",
        "Line" : 1274,
        "CharPositionInLine" : 8
      },
      "96" : {
        "Text" : "# install file\n",
        "Line" : 1287,
        "CharPositionInLine" : 8
      },
      "97" : {
        "Text" : "# compatibility with Slicer\n",
        "Line" : 1299,
        "CharPositionInLine" : 55
      },
      "98" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get build time stamp.\n\n#\n\n# The build time stamp is used as an alternative to the version and revision\n\n# information in @c PROJECT_RELEASE if version is invalid, i.e., set to 0.0.0\n\n# as is the case for development branches, and now revision from a revision\n\n# control system is available.\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Find standard project logo files with standardized @c PROJECT_${LOGO_TYPE}_LOGO variable names\n\n#  This is an internal function not designed for general use.\n\n#\n\n#  @param OUTPUT_VARIABLE the name of the variable that will contain the final \n\n#  @param SPECIFIED_LOGO the value that is already set for the logo\n\n#  @param DEFAULT_NAME the default filename of the logo\n\n#  \n",
        "Line" : 1334,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# check for the default logo file locations\n",
        "Line" : 1343,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# if no logo is specified at all, skip this\n",
        "Line" : 1352,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Initialize project, calls CMake's project() command.\n\n#\n\n# @sa basis_project(), basis_project_begin()\n\n#\n\n# @returns Sets the following non-cached CMake variables:\n\n# @retval PROJECT_REVISION         Revision number of Subversion controlled\n\n#                                  source tree or 0 if the source tree is\n\n#                                  not under revision control.\n\n# @retval PROJECT_RELEASE          A string of project version and revision\n\n#                                  that can be used for the output of\n\n#                                  version information. The format of this\n\n#                                  string is either one of the following:\n\n#                                  - \"v1.0 (r42)\"\n\n#                                  - \"v1.0.5 (r50)\"\n\n#                                  - \"v1.0\"   (if revision unknown)\n\n#                                  - \"r42\"    (if version is 0.0.0)\n\n#                                  - \"\"       (otherwise)\n",
        "Line" : 1379,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# CMake version and policies\n",
        "Line" : 1398,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# Add policies introduced with CMake versions newer than the one specified\n\n# above. These policies would otherwise trigger a policy not set warning by\n\n# newer CMake versions.\n",
        "Line" : 1402,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# PROJECT_VERSION et al. variables are set by basis_project instead\n",
        "Line" : 1415,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# reset\n",
        "Line" : 1419,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# only set if not set by top-level project before configuring a module\n",
        "Line" : 1422,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# set only by basis_use_package() to TRUE such that functions such as\n\n# the overwritten (basis_)link_directories() command or add_library()\n\n# know that these directories/targets belong to an external project which\n\n# is part of the same superbuild. otherwise, it shall be FALSE.\n",
        "Line" : 1424,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# hide it here to avoid that it shows up in the GUI on error\n",
        "Line" : 1430,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# project meta-data\n",
        "Line" : 1433,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# project()\n",
        "Line" : 1446,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# work-around for issue with CMAKE_PROJECT_NAME always being set to 'Project'\n",
        "Line" : 1450,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# get revision of project\n\n#\n\n# Note: Use revision when branch, i.e., either trunk, a branch, or a tag\n\n#       has been modified last. For tags, this should in particular\n\n#       correspond to the revision when the tag was created.\n",
        "Line" : 1455,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# extract version numbers from version string\n",
        "Line" : 1471,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# version information string\n",
        "Line" : 1481,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# backwards compatibility to BASIS < 1.3\n",
        "Line" : 1511,
        "CharPositionInLine" : 58
      },
      "117" : {
        "Text" : "# version number for use in Perl modules\n",
        "Line" : 1513,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# print project information\n",
        "Line" : 1526,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# reset project properties - *after* PROJECT_NAME was set\n",
        "Line" : 1531,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# The following variables are used across BASIS macros and functions. They\n\n# in particular remember information added by one function or macro which\n\n# is required by another function or macro.\n\n#\n\n# These variables need to be properties such that they can be set in\n\n# subdirectories. Moreover, they have to be assigned with the project's\n\n# root source directory such that a top-level project's properties are restored\n\n# after this subproject is finalized such that the top-level project itself can\n\n# be finalized properly.\n\n#\n\n# Attention: In particular the IMPORTED_* properties are already used\n\n#            during the import of targets when including the use files of\n\n#            external packages. Hence, this property has to be reset before.\n",
        "Line" : 1534,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# see basis_add_imported_target()\n",
        "Line" : 1548,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# see basis_include_directories()\n",
        "Line" : 1553,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# see basis_link_directories()\n",
        "Line" : 1555,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# see add_executable(), add_library()\n",
        "Line" : 1558,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# see basis_add_*() functions\n",
        "Line" : 1560,
        "CharPositionInLine" : 2
      },
      "126" : {
        "Text" : "# yet unused\n",
        "Line" : 1569,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# configure BASIS directory structure\n",
        "Line" : 1573,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# configure file used for the generation of the corresponding documentation\n",
        "Line" : 1576,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Initialize project settings.\n",
        "Line" : 1584,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# include project specific settings\n\n#\n\n# This file enables the project to modify the default behavior of BASIS,\n\n# but only if BASIS allows so as the BASIS project settings are included\n\n# afterwards.\n",
        "Line" : 1587,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# project logos\n",
        "Line" : 1604,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# configure project specific BASIS settings\n",
        "Line" : 1610,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# default namespaces used for supported programming languages\n",
        "Line" : 1613,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# package configuration\n",
        "Line" : 1630,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# configure settings file which contains the documentation of these variables\n",
        "Line" : 1642,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# unset local variables\n",
        "Line" : 1648,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# include configured project specific BASIS settings\n",
        "Line" : 1657,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Find packages this project depends on.\n",
        "Line" : 1661,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# see set_target_properties()\n",
        "Line" : 1664,
        "CharPositionInLine" : 48
      },
      "140" : {
        "Text" : "# Attention: This function is used before the Directories.cmake.in and\n\n#            Settings.cmake.in files were configured and included.\n",
        "Line" : 1666,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add project config directory to CMAKE_MODULE_PATH\n",
        "Line" : 1670,
        "CharPositionInLine" : 2
      },
      "142" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Depends.cmake\n",
        "Line" : 1674,
        "CharPositionInLine" : 2
      },
      "143" : {
        "Text" : "# This file is in particular of interest if a dependency is required if\n\n# certain modules are enabled, but not others.\n",
        "Line" : 1677,
        "CharPositionInLine" : 2
      },
      "144" : {
        "Text" : "# Attention: This function is used before the Directories.cmake.in and\n\n#            Settings.cmake.in files were configured and included.\n",
        "Line" : 1680,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# required dependencies\n",
        "Line" : 1684,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# optional dependencies\n",
        "Line" : 1691,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# test dependencies\n",
        "Line" : 1698,
        "CharPositionInLine" : 2
      },
      "148" : {
        "Text" : "# required test dependencies\n",
        "Line" : 1701,
        "CharPositionInLine" : 4
      },
      "149" : {
        "Text" : "# do not use REQUIRED here to be able to show\n\n# error message below\n",
        "Line" : 1703,
        "CharPositionInLine" : 34
      },
      "150" : {
        "Text" : "# optional test dependencies\n",
        "Line" : 1718,
        "CharPositionInLine" : 4
      },
      "151" : {
        "Text" : "# see set_target_properties()\n",
        "Line" : 1727,
        "CharPositionInLine" : 49
      },
      "152" : {
        "Text" : "# ============================================================================\n\n# finalization\n\n# ============================================================================\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add installation rules for public header files.\n",
        "Line" : 1734,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# subdirectory of basis.h header file\n",
        "Line" : 1737,
        "CharPositionInLine" : 2
      },
      "155" : {
        "Text" : "# install public header files from source tree\n",
        "Line" : 1739,
        "CharPositionInLine" : 2
      },
      "156" : {
        "Text" : "# install configured public header files, excluding BASIS utilities\n",
        "Line" : 1744,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# BASIS utilities header only installed\n\n# below if included by any other public header\n\n# e.g., <Name>PublicHeaders.cmake file,\n\n# see basis_configure_public_headers()\n",
        "Line" : 1750,
        "CharPositionInLine" : 54
      },
      "158" : {
        "Text" : "# \"parse\" public header files to check if C++ BASIS utilities are included\n",
        "Line" : 1756,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# get list of all public header files of project\n",
        "Line" : 1758,
        "CharPositionInLine" : 4
      },
      "160" : {
        "Text" : "# check include statements of each public header file\n",
        "Line" : 1768,
        "CharPositionInLine" : 4
      },
      "161" : {
        "Text" : "# install public header of BASIS utilities (optional)\n",
        "Line" : 1781,
        "CharPositionInLine" : 2
      },
      "162" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 1792,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "# ============================================================================\n\n# root CMakeLists.txt implementation\n\n# ============================================================================\n",
        "Line" : 1795,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add subdirectory or ignore it if it does not exist.\n",
        "Line" : 1799,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add a project module.\n",
        "Line" : 1812,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "# Set up modules, checking the super build special case first.\n\n# By default the else case with add_subdirectory() will be called.\n\n#\n\n# Note: - MODULE_${MODULE}_SOURCE_DIR is the location of the module source code.\n\n#       - MODULE_${MODULE}_BINARY_DIR is the build directory for the module.\n",
        "Line" : 1819,
        "CharPositionInLine" : 2
      },
      "167" : {
        "Text" : "# automatically uses: \"${MODULE_${MODULE}_SOURCE_DIR}\" \"${MODULE_${MODULE}_BINARY_DIR}\"\n",
        "Line" : 1826,
        "CharPositionInLine" : 34
      },
      "168" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Marks the begining of a BASIS project.\n\n#\n\n# This macro initializes a BASIS project. It replaces CMake's project() command.\n\n# At first, the project is initialized and the BASIS settings configured using\n\n# the project information given in the <tt>BasisProject.cmake</tt> file which\n\n# must be located in the same directory.\n\n#\n\n# @sa BasisProject.cmake, basis_project(), basis_project_end(), basis_project_impl()\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 1835,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# set CMAKE_INSTALL_PREFIX to cached invalid value to have\n\n# basis_initialize_settings() set it to BASIS's default rather than CMake's\n\n# default even if this is not the first configure run because a previous\n\n# one was interrupted by an error such as a requird package that was not found\n",
        "Line" : 1848,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# initialize project\n",
        "Line" : 1857,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# load information of modules\n",
        "Line" : 1861,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# initialize Slicer module\n",
        "Line" : 1871,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Python\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "174" : {
        "Text" : "# In case of a Slicer Extension, the UseSlicer.cmake file of Slicer (>= 4.0)\n\n# will set PYTHON_EXECUTABLE and requires us not to set this variable before\n\n# the UseSlicer.cmake file has been included. Hence, we set this variable\n\n# here only if it has not been set by Slicer, but before any PythonInterp\n\n# dependency declared by this package such that the Python interpreter\n\n# configured while building BASIS is used to avoid conflicts of different\n\n# versions used to compile the Python utilities (if BASIS_COMPILE_SCRIPTS\n\n# was set to ON) and the one used to configure/build this package.\n\n#\n\n# Note: The PYTHON_EXECUTABLE variable has to be cached such that\n\n#       PythonInterp.cmake does not look for the interpreter itself.\n",
        "Line" : 1880,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "# Note that PERL_EXECUTABLE and BASH_EXECUTABLE are set in BASISUse.cmake.\n",
        "Line" : 1900,
        "CharPositionInLine" : 2
      },
      "176" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# find packages\n",
        "Line" : 1902,
        "CharPositionInLine" : 2
      },
      "177" : {
        "Text" : "# any package use file must be included after PROJECT_NAME was set as the\n\n# imported targets are added to the <Project>_TARGETS property using\n\n# basis_set_project_property() in add_executable() and add_library()\n",
        "Line" : 1905,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# get interpreter versions - set to invalid version if not available\n",
        "Line" : 1915,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# initialize settings\n",
        "Line" : 1949,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# assertions\n",
        "Line" : 1953,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# default script configuration - see basis_configure_script()\n",
        "Line" : 1958,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# root documentation files\n",
        "Line" : 1966,
        "CharPositionInLine" : 2
      },
      "183" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# enable testing\n",
        "Line" : 1970,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# public header files and script libraries\n",
        "Line" : 1981,
        "CharPositionInLine" : 2
      },
      "185" : {
        "Text" : "# dump currently defined CMake variables such that these can be used to\n\n# configure the .in public header and module files during the build step\n",
        "Line" : 1984,
        "CharPositionInLine" : 2
      },
      "186" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# subdirectories\n",
        "Line" : 1997,
        "CharPositionInLine" : 2
      },
      "187" : {
        "Text" : "# add default project directories to list of subdirectories\n\n# (in reverse order always at beginning of list)\n",
        "Line" : 2000,
        "CharPositionInLine" : 2
      },
      "188" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Marks the end of a BASIS project.\n\n#\n\n# This macro performs all the steps needed to finalize the configuration of\n\n# a BASIS project, including in particular also the addition of custom build\n\n# targets which perform the actual build of custom build targets such as\n\n# the ones build using the MATLAB Compiler. This command must be the last\n\n# in the root CMakeLists.txt file of each project.\n\n#\n\n# @sa basis_project_begin(), basis_project_impl()\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 2016,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# copy project properties of modules\n",
        "Line" : 2034,
        "CharPositionInLine" : 2
      },
      "190" : {
        "Text" : "# copy properties of modules\n",
        "Line" : 2037,
        "CharPositionInLine" : 4
      },
      "191" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# finalize custom targets\n\n#\n\n# Note: Must be done *after* the TARGETS project properties of the modules\n\n#       were copied as basis_finalize_targets() iterates over this list.\n",
        "Line" : 2062,
        "CharPositionInLine" : 2
      },
      "192" : {
        "Text" : "# configure the BASIS utilities\n",
        "Line" : 2068,
        "CharPositionInLine" : 4
      },
      "193" : {
        "Text" : "# add missing build commands for custom targets\n",
        "Line" : 2070,
        "CharPositionInLine" : 4
      },
      "194" : {
        "Text" : "# add build target for missing __init__.py files of Python package\n",
        "Line" : 2072,
        "CharPositionInLine" : 4
      },
      "195" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# build/install package documentation\n\n#\n\n# This is done after all files which may be interesting for inclusion\n\n# in the documentation are generated. In particular, this has to be done\n\n# after the configuration of the BASIS utilities.\n",
        "Line" : 2078,
        "CharPositionInLine" : 2
      },
      "196" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# generate configuration files\n",
        "Line" : 2088,
        "CharPositionInLine" : 2
      },
      "197" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# write convenience file to setup MATLAB environment\n",
        "Line" : 2094,
        "CharPositionInLine" : 4
      },
      "198" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add installation rules for public headers\n",
        "Line" : 2100,
        "CharPositionInLine" : 4
      },
      "199" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# change log\n",
        "Line" : 2104,
        "CharPositionInLine" : 4
      },
      "200" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# package software\n",
        "Line" : 2110,
        "CharPositionInLine" : 4
      },
      "201" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# add installation rule to register package with CMake\n",
        "Line" : 2116,
        "CharPositionInLine" : 4
      },
      "202" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# uninstaller\n",
        "Line" : 2122,
        "CharPositionInLine" : 4
      },
      "203" : {
        "Text" : "# add uninstall target\n",
        "Line" : 2125,
        "CharPositionInLine" : 6
      },
      "204" : {
        "Text" : "# Attention: add_uninstall must be called last in a separate file via an\n\n#            add_subdirectory call. This ensures that the code is executed\n\n#            at the end of the root cmake_install.cmake file.\n",
        "Line" : 2127,
        "CharPositionInLine" : 6
      },
      "205" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Implementation of root <tt>CMakeLists.txt</tt> file of BASIS project.\n\n#\n\n# This macro implements the entire logic of the top-level\n\n# <tt>CMakeLists.txt</tt> file. At first, the project is initialized and the\n\n# BASIS settings configured using the project information given in the\n\n# <tt>BasisProject.cmake</tt> file which must be located in the same directory.\n\n# The, the code in the <tt>CMakeLists.txt</tt> files in the subdirectories is\n\n# executed in order. At the end, the configuration of the build system is\n\n# finalized, including in particular also the addition of custom build targets\n\n# which perform the actual build of custom build targets such as the ones build\n\n# using the MATLAB Compiler.\n\n#\n\n# @sa BasisProject.cmake, basis_project(), basis_project_begin(), basis_project_end()\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 2141,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "# initialize project\n",
        "Line" : 2158,
        "CharPositionInLine" : 2
      },
      "207" : {
        "Text" : "# process modules\n",
        "Line" : 2160,
        "CharPositionInLine" : 2
      },
      "208" : {
        "Text" : "# process subdirectories\n",
        "Line" : 2166,
        "CharPositionInLine" : 2
      },
      "209" : {
        "Text" : "# finalize project\n",
        "Line" : 2170,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 210
    },
    "src/cmake/RevisionTools.cmake" : {
      "ObjectId" : "cce4f538bf695ee0593aa1da39fb8cf01b683bc5",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  RevisionTools.cmake\n\n# @brief CMake functions and macros related to revision control systems.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ============================================================================\n\n# required commands\n\n# ============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# Subversion\n\n# ============================================================================\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get current revision of file or directory.\n\n#\n\n# @param [in]  URL  Absolute path to directory or file. May also be a URL to the\n\n#                   directory or file in the repository. A leading \"file://\" is\n\n#                   automatically removed such that the svn command treats it as a\n\n#                   local path.\n\n# @param [out] REV  The revision number of URL. If URL is not under revision\n\n#                   control or Subversion_SVN_EXECUTABLE is invalid, \"0\" is returned.\n\n#\n\n# @returns Sets @p REV to the revision of the working copy/repository\n\n#          at URL @p URL.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove \"file://\" from URL\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# retrieve SVN info\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# extract revision\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# return\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get revision number when directory or file was last changed.\n\n#\n\n# @param [in]  URL  Absolute path to directory or file. May also be a URL to the\n\n#                   directory or file in the repository. A leading \"file://\" is\n\n#                   automatically removed such that the svn command treats it as a\n\n#                   local path.\n\n# @param [out] REV  Revision number when URL was last modified. If URL is not\n\n#                   under Subversion control or Subversion_SVN_EXECUTABLE is invalid,\n\n#                   \"0\" is returned.\n\n#\n\n# @returns Sets @p REV to revision number at which the working copy/repository\n\n#          specified by the URL @p URL was last modified.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# remove \"file://\" from URL\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# retrieve SVN info\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# extract last changed revision\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# return\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get status of revision controlled file.\n\n#\n\n# @param [in]  URL    Absolute path to directory or file. May also be a URL to\n\n#                     the directory or file in the repository.\n\n#                     A leading \"file://\" will be removed such that the svn\n\n#                     command treats it as a local path.\n\n# @param [out] STATUS The status of URL as returned by 'svn status'.\n\n#                     If the local directory or file is unmodified, an\n\n#                     empty string is returned. An empty string is also\n\n#                     returned when Subversion_SVN_EXECUTABLE is invalid.\n\n#\n\n# @returns Sets @p STATUS to the output of the <tt>svn info</tt> command.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# remove \"file://\" from URL\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# retrieve SVN status of URL\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# return\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# ============================================================================\n\n# Git\n\n# ============================================================================\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# @brief Determine whether or not a given directory is a Git repository\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get HEAD commit SHA of file or directory.\n\n#\n\n# @param [in]  URL  Absolute path to repository directory or single file.\n\n# @param [out] REV  The short commit SHA when URL was last modified. If URL\n\n#                   is not under Git control or GIT_EXECUTABLE is invalid,\n\n#                   \"0\" is returned.\n\n# @param [in]  ARGN Length of commit SHA to return.\n\n#\n\n# @returns Sets @p REV either to the HEAD commit SHA of the repository at\n\n#          directory @p URL or the last commit which modified the file.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# remove \"file://\" from URL\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# retrieve Git commit SHA of HEAD\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# retrieve Git commit SHA when file was last modified\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# extract commit SHA\n",
        "Line" : 232,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# return\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ============================================================================\n\n# Meta\n\n# ============================================================================\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get revision of file or directory.\n\n#\n\n# @param [in]  URL  Absolute path to directory or single file.\n\n# @param [out] REV  Revision number when directory / repository or file was\n\n#                   last modified, \"0\" is returned when no known revision\n\n#                   control system is used or revision command not found.\n\n#\n\n# @returns Revision when directory of file was last modified.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# remove \"file://\" from URL\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# get directory path\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# check if directory is part of a Git repository\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# return revision\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "src/cmake/SlicerTools.cmake" : {
      "ObjectId" : "8af6abc1350abecbe8230e460cc4ed258570d95d",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  SlicerTools.cmake\n\n# @brief Definition of tools for Slicer Extensions.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include guard\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# meta-data\n\n# ============================================================================\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Define project meta-data of Slicer module.\n\n#\n\n# This macro should be used instead of basis_project() for a Slicer module.\n\n# It extends the considered meta-data by some additional variables that\n\n# have to be set for a Slicer module and identifies this project as a Slicer\n\n# module.\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n# @{\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ============================================================================\n\n# initialization\n\n# ============================================================================\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Initialize slicer module meta-data.\n\n#\n\n# At the moment, only one module, most often the top-level project can be a\n\n# Slicer module, i.e., call basis_slicer_module() either in the\n\n# BasisProject.cmake file of the top-level project or in the corresponding file\n\n# of at most one of the project modules.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# convert PROJECT_* or <Module>_* to MODULE_* variables\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# find Slicer package\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# set metadata\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# skip project() command\n",
        "Line" : 121,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# work-around for bug 1901 in Slicer 4.1.0\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# find Slicer\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# ============================================================================\n\n# auxiliary functions\n\n# ============================================================================\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Copy MODULE_* metadata to EXTENSION_* metadata of Slicer Extension.\n\n#\n\n# This function is required to work-around bug 1901 in Slicer 4.1.0. It basically\n\n# implements what the SlicerBlockModuleToExtensionMetadata.cmake module which\n\n# can be found in the Extensions/CMake/ directory of the Slicer 4 source tree\n\n# is implementing. The list of metadata has been copied from this particular\n\n# CMake module of the 4.1.0 release of Slicer.\n\n#\n\n# @sa http://www.na-mic.org/Bug/view.php?id=1901\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## @}\n\n# Doxygen group CMakeUtilities\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/cmake/SuperBuildTools.cmake" : {
      "ObjectId" : "28390ee145bbe70a38a6e0ba833276c42ec51027",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2014 Carnegie Mellon University\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# @brief When enabled CMake will always reconfigure super build modules. Slows performance but won't ignore changes in external projects.\n\n#\n\n# @note The global variable BASIS_SUPER_BUILD_ARGS is passed to the CMAKE_ARGS \n\n#       parameter of ExternalProject_Add in case custom variables need to be supplied.\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n# @brief super build for BASIS modules\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: consider combining this variable with MODULE_${PACKAGE_NAME} variable\n\n#option (USE_SYSTEM_${PACKAGE_NAME} \"Skip build of ${PACKAGE_NAME} if already installed.\" OFF)\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TODO: make sure default install prefix does not typically trample the installation\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# set directory where binaries will build if it was not already set by the arguments\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# TODO: Fix DEPENDS parameter. May need to separate basis module and regular dependencies so they can specified separately for the super build.\n\n# TODO: Consider using the EP_BASE path with SET(ep_base ${${PACKAGE_NAME}_BINARY_DIR}) instead. (ep stands for external project) \n\n# TODO: Figure out why a few intermediate files are still being put in the ${CMAKE_BINARY_DIR}/${PACKAGE_NAME}-prefix/ directory\n\n# TODO: Check for additional useful -D parameters.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# passing semicolons has odd side effects because they may be automatically\n\n# dereferenced, so substitute another character, in this case pipe |\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# only specifiy dependencies that are actual targets\n\n# otherwise there would be an error\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#if(USE_SYSTEM_${PACKAGE_NAME})\n\n#  find_package(${PACKAGE_NAME})\n\n#elseif()\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#endif()\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "src/cmake/TargetTools.cmake" : {
      "ObjectId" : "57ee00e08fd0343dc067841d96a3b5ee09699896",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  TargetTools.cmake\n\n# @brief Functions and macros to add executable and library targets.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# properties\n\n# ============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set properties on a target.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_target_properties\">\n\n# set_target_properties()</a> command and extends its functionality.\n\n# In particular, it maps the given target names to the corresponding target UIDs.\n\n#\n\n# @note If @c BASIS_USE_TARGET_UIDS is @c OFF and is not required by a project,\n\n#       it is recommended to use _set_target_properties() instead (note that\n\n#       set_target_properties is overriden by the ImportTools.cmake module of BASIS).\n\n#       This will break the build configuration scripts when @c BASIS_USE_TARGET_UIDS\n\n#       is set to @c ON later. It should thus only be used if the project will\n\n#       never use the target UID feature of BASIS. A project can possibly define\n\n#       a global macro which either calls _set_target_properties or\n\n#       basis_set_target_properties. But be aware of the related CMake bugs\n\n#       which prevent basis_set_target_properties to do the same already.\n\n#       ARGV/ARGN do not preserve empty arguments nor list arguments!\n\n#\n\n# @note Due to a bug in CMake (http://www.cmake.org/Bug/view.php?id=12303),\n\n#       except of the first property given directly after the @c PROPERTIES keyword,\n\n#       only properties listed in @c BASIS_PROPERTIES_ON_TARGETS can be set.\n\n#\n\n# @param [in] ARGN List of arguments. See\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_target_properties\">\n\n#                  set_target_properties()</a>.\n\n#\n\n# @returns Sets the specified properties on the given target.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_target_properties\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# convert target names to UIDs\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# remove PROPERTIES keyword\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# set targets properties\n\n#\n\n# Note: By iterating over the properties, the empty property values\n\n#       are correctly passed on to CMake's set_target_properties()\n\n#       command, while\n\n#       _set_target_properties(${TARGET_UIDS} PROPERTIES ${ARGN})\n\n#       (erroneously) discards the empty elements in ARGN.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# The following loop is only required b/c CMake's ARGV and ARGN\n\n# lists do not support arguments which are themselves lists.\n\n# Therefore, we need a way to decide when the list of values for a\n\n# property is terminated. Hence, we only allow known properties\n\n# to be set, except for the first property where the name follows\n\n# directly after the PROPERTIES keyword.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check property name\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# remember: STREQUAL is buggy and evil!\n",
        "Line" : 127,
        "CharPositionInLine" : 31
      },
      "11" : {
        "Text" : "# set target property\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# make sure that every property had a corresponding value\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Get value of property set on target.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:set_target_properties\">\n\n# get_target_properties()</a> command and extends its functionality.\n\n# In particular, it maps the given @p TARGET_NAME to the corresponding target UID.\n\n#\n\n# @param [out] VAR         Name of output variable.\n\n# @param [in]  TARGET_NAME Name of build target.\n\n# @param [in]  ARGN        Remaining arguments for\n\n#                          <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_target_properties\">\n\n#                          get_target_properties()</a>.\n\n#\n\n# @returns Sets @p VAR to the value of the requested property.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:get_target_property\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ============================================================================\n\n# definitions\n\n# ============================================================================\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add compile definitions.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_definitions\">\n\n# add_definitions()</a> command.\n\n#\n\n# @param [in] ARGN List of arguments for\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_definitions\">\n\n#                  add_definitions()</a>.\n\n#\n\n# @returns Adds the given definitions.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_definitions\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Remove previously added compile definitions.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:remove_definitions\">\n\n# remove_definitions()</a> command.\n\n#\n\n# @param [in] ARGN List of arguments for\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:remove_definitions\">\n\n#                  remove_definitions()</a>.\n\n#\n\n# @returns Removes the specified definitions.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:remove_definition\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ============================================================================\n\n# directories\n\n# ============================================================================\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add directories to search path for include files.\n\n#\n\n# Overwrites CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:include_directories\">\n\n# include_directories()</a> command. This is required because the\n\n# basis_include_directories() function is not used by other projects in their\n\n# package use files. Therefore, this macro is an alias for\n\n# basis_include_directories().\n\n#\n\n# @param [in] ARGN List of arguments for basis_include_directories().\n\n#\n\n# @returns Adds the given paths to the search path for include files.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:include_directories\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add directories to search path for include files.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:include_directories\">\n\n# include_directories()</a> command. Besides invoking CMake's internal command\n\n# with the given arguments, it updates the @c PROJECT_INCLUDE_DIRECTORIES\n\n# property on the current project (see basis_set_project_property()). This list\n\n# contains a list of all include directories used by a project, regardless of\n\n# the directory in which the basis_include_directories() function was used.\n\n#\n\n# @param ARGN List of arguments for\n\n#             <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:include_directories\">\n\n#             include_directories()</a> command.\n\n#\n\n# @returns Nothing.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:include_directories\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# CMake's include_directories ()\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# parse arguments\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# make relative paths absolute\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# append directories to \"global\" list of include directories\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add directories to search path for libraries.\n\n#\n\n# Overwrites CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:link_directories\">\n\n# link_directories()</a> command. This is required because the\n\n# basis_link_directories() function is not used by other projects in their\n\n# package use files. Therefore, this macro is an alias for\n\n# basis_link_directories().\n\n#\n\n# @param [in] ARGN List of arguments for basis_link_directories().\n\n#\n\n# @returns Adds the given paths to the search path for libraries.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:link_directories\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add directories to search path for libraries.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:link_directories\">\n\n# link_directories()</a> command. Even though this function yet only invokes\n\n# CMake's internal command, it should be used in BASIS projects to enable the\n\n# extension of this command's functionality as part of BASIS if required.\n\n#\n\n# @param [in] ARGN List of arguments for\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:link_directories\">\n\n#                  link_directories()</a>.\n\n#\n\n# @returns Adds the given paths to the search path for libraries.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:link_directories\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# CMake's link_directories() command\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# make relative paths absolute\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# append directories to \"global\" list of link directories\n",
        "Line" : 338,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# if the directories are added by an external project's <Pkg>Use.cmake\n\n# file which is part of the same superbuild as this project, add the\n\n# directories further to the list of directories that may be added to\n\n# the RPATH. see basis_set_target_install_rpath().\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# set in basis_use_package()\n",
        "Line" : 356,
        "CharPositionInLine" : 24
      },
      "31" : {
        "Text" : "# ============================================================================\n\n# dependencies\n\n# ============================================================================\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add dependencies to build target.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_dependencies\">\n\n# add_dependencies()</a> command and extends its functionality.\n\n# In particular, it maps the given target names to the corresponding target UIDs.\n\n#\n\n# @param [in] ARGN Arguments for\n\n#                  <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_dependencies\">\n\n#                  add_dependencies()</a>.\n\n#\n\n# @returns Adds the given dependencies of the specified build target.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_dependencies\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add link dependencies to build target.\n\n#\n\n# This function replaces CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:target_link_libraries\">\n\n# target_link_libraries()</a> command.\n\n#\n\n# The main reason for replacing this function is to treat libraries such as\n\n# MEX-files which are supposed to be compiled into a MATLAB executable added\n\n# by basis_add_executable() special. In this case, these libraries are added\n\n# to the LINK_DEPENDS property of the given MATLAB Compiler target. Similarly,\n\n# executable scripts and modules written in a scripting language may depend\n\n# on other modules.\n\n#\n\n# Another reason is the mapping of build target names to fully-qualified\n\n# build target names as used by BASIS (see basis_get_target_uid()).\n\n#\n\n# Example:\n\n# @code\n\n# basis_add_library (MyMEXFunc MEX myfunc.c)\n\n# basis_add_executable (MyMATLABApp main.m)\n\n# basis_target_link_libraries (MyMATLABApp MyMEXFunc OtherMEXFunc.mexa64)\n\n# @endcode\n\n#\n\n# @param [in] TARGET_NAME Name of the target.\n\n# @param [in] ARGN        Link libraries.\n\n#\n\n# @returns Adds link dependencies to the specified build target.\n\n#          For custom targets, the given libraries are added to the\n\n#          @c LINK_DEPENDS property of these targets, in particular.\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:target_link_libraries\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# get type of named target\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# substitute non-fully qualified target names\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# get current link libraries\n",
        "Line" : 471,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# note that MCC does itself a dependency check and in case of scripts\n\n# the basis_get_target_link_libraries() function is used\n",
        "Line" : 480,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# otherwise\n",
        "Line" : 484,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# pull implicit dependencies (e.g., ITK uses this)\n",
        "Line" : 487,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# update LINK_DEPENDS\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# FIXME cannot use LINK_DEPENDS for CMake targets as these depends are\n\n#       otherwise added as is to the Makefile. therefore, consider renaming\n\n#       LINK_DEPENDS in general to BASIS_LINK_DEPENDS.\n",
        "Line" : 510,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# ============================================================================\n\n# add targets\n\n# ============================================================================\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add custom target.\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Determine language of source files.\n\n# @sa basis_add_executable(), basis_add_library()\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add executable target.\n\n#\n\n# This is the main function to add an executable target to the build system,\n\n# where an executable can be a binary file or a script written in a scripting\n\n# language. In general we refer to any output file which is part of the software\n\n# (i.e., excluding configuration files) and which can be executed\n\n# (e.g., a binary file in the ELF format) or interpreted (e.g., a Python script)\n\n# directly, as executable file. Natively, CMake supports only executables built\n\n# from C/C++ source code files. This function extends CMake's capabilities\n\n# by adding custom build commands for non-natively supported programming\n\n# languages and further standardizes the build of executable targets.\n\n# For example, by default, it is not necessary to specify installation rules\n\n# separately as these are added by this function already (see below).\n\n#\n\n# @par Programming languages\n\n# Besides adding usual executable targets build by the set <tt>C/CXX</tt>\n\n# language compiler, this function inspects the list of source files given and\n\n# detects whether this list contains sources which need to be build using a\n\n# different compiler. In particular, it supports the following languages:\n\n# @n\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b CXX @endtp\n\n#     <td>The default behavior, adding an executable target build from C/C++\n\n#         source code. The target is added via CMake's add_executable() command.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b>PYTHON</b>|<b>JYTHON</b>|<b>PERL</b>|<b>BASH</b> @endtp\n\n#     <td>Executables written in one of the named scripting languages are built by\n\n#         configuring and/or copying the script files to the build tree and\n\n#         installation tree, respectively. During the build step, certain strings\n\n#         of the form \\@VARIABLE\\@ are substituted by the values set during the\n\n#         configure step. How these CMake variables are set is specified by a\n\n#         so-called script configuration, which itself is either a CMake script\n\n#         file or a string of CMake code set as value of the @c SCRIPT_DEFINITIONS\n\n#         property of the executable target.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB @endtp\n\n#     <td>Standalone application built from MATLAB sources using the\n\n#         MATLAB Compiler (mcc). This language option is used when the list\n\n#         of source files contains one or more *.m files. A custom target is\n\n#         added which depends on custom command(s) that build the executable.</td>\n\n#         @n@n\n\n#         Attention: The *.m file with the entry point/main function of the\n\n#                    executable has to be given before any other *.m file.\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Helper functions\n\n# If the programming language of the input source files is not specified\n\n# explicitly by providing the @p LANGUAGE argument, the extensions of the\n\n# source files and if necessary the first line of script files are inspected\n\n# by the basis_get_source_language() function. Once the programming language is\n\n# known, this function invokes the proper subcommand which adds the respective\n\n# build target. In particular, it calls basis_add_executable_target() for C++\n\n# sources (.cxx), basis_add_mcc_target() for MATLAB scripts (.m), and\n\n# basis_add_script() for all other source files.\n\n#\n\n# @note DO NOT use the mentioned subcommands directly. Always use\n\n#       basis_add_executable() to add an executable target to your project.\n\n#       Only refer to the documentation of the subcommands to learn about the\n\n#       available options of the particular subcommand and considered target\n\n#       properties.\n\n#\n\n# @par Output directories\n\n# The built executable file is output to the @c BINARY_RUNTIME_DIR or\n\n# @c BINARY_LIBEXEC_DIR if the @p LIBEXEC option is given.\n\n# If this function is used within the @c PROJECT_TESTING_DIR, however,\n\n# the built executable is output to the @c TESTING_RUNTIME_DIR or\n\n# @c TESTING_LIBEXEC_DIR instead.\n\n#\n\n# @par Installation\n\n# An install command for the added executable target is added by this function\n\n# as well. The executable will be installed as part of the specified @p COMPONENT\n\n# in the directory @c INSTALL_RUNTIME_DIR or @c INSTALL_LIBEXEC_DIR if the option\n\n# @p LIBEXEC is given. Executable targets are exported by default such that they\n\n# can be imported by other CMake-aware projects by including the CMake\n\n# configuration file of this package (&lt;Package&gt;Config.cmake file).\n\n# No installation rules are added, however, if this function is used within the\n\n# @c PROJECT_TESTING_DIR or if \"none\" (case-insensitive) is given as\n\n# @p DESTINATION. Test executables are further only exported as part of the\n\n# build tree, but not the installation as they are by default not installed.\n\n#\n\n# @param [in] TARGET_NAME Name of the target. If an existing source file is given\n\n#                         as first argument, it is added to the list of source files\n\n#                         and the build target name is derived from the name of this file.\n\n# @param [in] ARGN        This argument list is parsed and the following\n\n#                         arguments are extracted, all other arguments are passed\n\n#                         on to add_executable() or the respective custom\n\n#                         commands used to add an executable build target.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of component as part of which this executable will be installed\n\n#         if the specified @c DESTINATION is not \"none\".\n\n#         (default: @c BASIS_RUNTIME_COMPONENT)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory relative to @c CMAKE_INSTALL_PREFIX.\n\n#         If \"none\" (case-insensitive) is given as argument, no default\n\n#         installation rules are added for this executable target.\n\n#         (default: @c INSTALL_RUNTIME_DIR or @c INSTALL_LIBEXEC_DIR\n\n#         if the @p LIBEXEC option is given)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LANGUAGE lang @endtp\n\n#     <td>Programming language in which source files are written (case-insensitive).\n\n#         If not specified, the programming language is derived from the file name\n\n#         extensions of the source files and, if applicable, the shebang directive\n\n#         on the first line of the script file. If the programming language could\n\n#         not be detected automatically, check the file name extensions of the\n\n#         source files and whether no unrecognized additional arguments were given\n\n#         or specify the programming language using this option.\n\n#         (default: auto-detected)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBEXEC @endtp\n\n#     <td>Specifies that the built executable is an auxiliary executable which\n\n#         is only called by other executables. (default: @c FALSE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this executable and hence\n\n#         no link dependency on the BASIS utilities shall be added.\n\n#         (default: @c NOT @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and required by this executable\n\n#         and hence a link dependency on the BASIS utilities has to be added.\n\n#         (default: @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds an executable build target. In case of an executable which is\n\n#          not build from C++ source files, the function basis_finalize_targets()\n\n#          has to be invoked to finalize the addition of the custom build target.\n\n#          This is done by the basis_project_end() macro.\n\n#\n\n# @sa basis_add_executable_target()\n\n# @sa basis_add_script()\n\n# @sa basis_add_mcc_target()\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# parse arguments\n",
        "Line" : 705,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# derive target name from path if existing source path is given as first argument instead\n\n# and get list of library source files\n",
        "Line" : 714,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# make target UID\n",
        "Line" : 735,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# process globbing expressions to get complete list of source files\n",
        "Line" : 739,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# determine programming language\n",
        "Line" : 742,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# prepare arguments for subcommand\n",
        "Line" : 745,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# C++\n",
        "Line" : 751,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# MATLAB\n",
        "Line" : 755,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# others\n",
        "Line" : 765,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# re-glob source files before each build (if necessary)\n",
        "Line" : 776,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add library target.\n\n#\n\n# This is the main function to add a library target to the build system, where\n\n# a library can be a binary archive, shared library, a MEX-file or module(s)\n\n# written in a scripting language. In general we refer to any output file which\n\n# is part of the software (i.e., excluding configuration files), but cannot be\n\n# executed (e.g., a binary file in the ELF format) or interpreted\n\n# (e.g., a Python module) directly, as library file. Natively, CMake supports only\n\n# libraries built from C/C++ source code files. This function extends CMake's\n\n# capabilities by adding custom build commands for non-natively supported\n\n# programming languages and further standardizes the build of library targets.\n\n# For example, by default, it is not necessary to specify installation rules\n\n# separately as these are added by this function already (see below).\n\n#\n\n# @par Programming languages\n\n# Besides adding usual library targets built from C/C++ source code files,\n\n# this function can also add custom build targets for libraries implemented\n\n# in other programming languages. It therefore tries to detect the programming\n\n# language of the given source code files and delegates the addition of the\n\n# build target to the proper helper functions. It in particular supports the\n\n# following languages:\n\n# @n\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b CXX @endtp\n\n#     <td>Source files written in C/C++ are by default built into either\n\n#         @p STATIC, @p SHARED, or @p MODULE libraries. If the @p MEX option\n\n#         is given, however, a MEX-file (a shared library) is build using\n\n#         the MEX script instead of using the default C++ compiler directly.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp <b>PYTHON</b>|<b>JYTHON</b>|<b>PERL</b>|<b>BASH</b> @endtp\n\n#     <td>Modules written in one of the named scripting languages are built similar\n\n#         to executable scripts except that the file name extension is preserved\n\n#         and no executable file permission is set on Unix. These modules are\n\n#         intended for import/inclusion in other modules or executables written\n\n#         in the particular scripting language only.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB @endtp\n\n#     <td>Libraries of M-files or shared libraries built using the MATLAB Compiler (mcc).\n\n#         This language option is used when the list of source files contains one or\n\n#         more *.m files. A custom target is added which depends on custom command(s)\n\n#         that build the library. If the type of the library is @c SHARED, a shared\n\n#         library is build using the MATLAB Compiler. Otherwise, the M-files are\n\n#         configured and installed such that they can be used in MATLAB.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Helper functions\n\n# If the programming language of the input source files is not specified\n\n# explicitly by providing the @p LANGUAGE argument, the extensions of the\n\n# source files are inspected using basis_get_source_language(). Once the\n\n# programming language is known, this function invokes the proper subcommand.\n\n# In particular, it calls basis_add_library_target() for C++ sources (.cxx)\n\n# if the target is not a MEX-file target, basis_add_mex_file() for C++ sources\n\n# if the @p MEX option is given, basis_add_mcc_target() for MATLAB scripts (.m),\n\n# and basis_add_script_library() for all other source files.\n\n#\n\n# @note DO NOT use the mentioned subcommands directly. Always use\n\n#       basis_add_library() to add a library target to your project. Only refer\n\n#       to the documentation of the subcommands to learn about the available\n\n#       options of the particular subcommand and the considered target properties.\n\n#\n\n# @par Output directories\n\n# In case of modules written in a scripting language, the libraries are output to\n\n# the <tt>BINARY_&lt;LANGUAGE&gt;_LIBRARY_DIR</tt> if defined. Otherwise,\n\n# the built libraries are output to the @c BINARY_RUNTIME_DIR, @c BINARY_LIBRARY_DIR,\n\n# and/or @c BINARY_ARCHIVE_DIR. If this command is used within the @c PROJECT_TESTING_DIR,\n\n# however, the files are output to the corresponding directories in the testing tree,\n\n# instead.\n\n#\n\n# @par Installation\n\n# An installation rule for the added library target is added by this function\n\n# if the destination is not \"none\" (case-insensitive). Runtime libraries are\n\n# installed as part of the @p RUNTIME_COMPONENT to the @p RUNTIME_DESTINATION.\n\n# Library components are installed as part of the @p LIBRARY_COMPONENT to the\n\n# @p LIBRARY_DESTINATION. Library targets are further exported such that they\n\n# can be imported by other CMake-aware projects by including the CMake\n\n# configuration file of this package (&lt;Package&gt;Config.cmake file).\n\n# If this function is used within the @c PROJECT_TESTING_DIR, however, no\n\n# installation rules are added. Test library targets are further only exported\n\n# as part of the build tree.\n\n#\n\n# @par Example\n\n# @code\n\n# basis_add_library (MyLib1 STATIC mylib.cxx)\n\n# basis_add_library (MyLib2 STATIC mylib.cxx COMPONENT dev)\n\n#\n\n# basis_add_library (\n\n#   MyLib3 SHARED mylib.cxx\n\n#   RUNTIME_COMPONENT bin\n\n#   LIBRARY_COMPONENT dev\n\n# )\n\n#\n\n# basis_add_library (MyMex MEX mymex.cxx)\n\n# basis_add_library (PythonModule MyModule.py.in)\n\n# basis_add_library (ShellModule MODULE MyModule.sh.in)\n\n# @endcode\n\n#\n\n# @param [in] TARGET_NAME Name of build target. If an existing file is given as\n\n#                         argument, it is added to the list of source files and\n\n#                         the target name is derived from the name of this file.\n\n# @param [in] ARGN        This argument list is parsed and the following\n\n#                         arguments are extracted. All unparsed arguments are\n\n#                         treated as source files.\n\n# @par\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp <b>STATIC</b>|<b>SHARED</b>|<b>MODULE</b>|<b>MEX</b> @endtp\n\n#     <td>Type of the library. (default: @c SHARED for C++ libraries if\n\n#         @c BUILD_SHARED_LIBS evaluates to true or @c STATIC otherwise,\n\n#         and @c MODULE in all other cases)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of component as part of which this library will be installed\n\n#         if the @c RUNTIME_DESTINATION or @c LIBRARY_DESTINATION is not \"none\".\n\n#         Used only if @p RUNTIME_COMPONENT or @p LIBRARY_COMPONENT not specified.\n\n#         (default: see @p RUNTIME_COMPONENT and @p LIBRARY_COMPONENT)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory for runtime and library component relative\n\n#         to @c CMAKE_INSTALL_PREFIX. Used only if @p RUNTIME_DESTINATION or\n\n#         @p LIBRARY_DESTINATION not specified. If \"none\" (case-insensitive)\n\n#         is given as argument, no default installation rules are added.\n\n#         (default: see @p RUNTIME_DESTINATION and @p LIBRARY_DESTINATION)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LANGUAGE lang @endtp\n\n#     <td>Programming language in which source files are written (case-insensitive).\n\n#         If not specified, the programming language is derived from the file name\n\n#         extensions of the source files and, if applicable, the shebang directive\n\n#         on the first line of the script file. If the programming language could\n\n#         not be detected automatically, check the file name extensions of the\n\n#         source files and whether no unrecognized additional arguments were given\n\n#         or specify the programming language using this option.\n\n#         (default: auto-detected)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_COMPONENT name @endtp\n\n#     <td>Name of component as part of which import/static library will be intalled\n\n#         if @c LIBRARY_DESTINATION is not \"none\".\n\n#         (default: @c COMPONENT if specified or @c BASIS_LIBRARY_COMPONENT otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_DESTINATION dir @endtp\n\n#     <td>Installation directory of the library component relative to\n\n#         @c CMAKE_INSTALL_PREFIX. If \"none\" (case-insensitive) is given as argument,\n\n#         no installation rule for the library component is added.\n\n#         (default: @c INSTALL_ARCHIVE_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b RUNTIME_COMPONENT name @endtp\n\n#     <td>Name of component as part of which runtime library will be installed\n\n#         if @c RUNTIME_DESTINATION is not \"none\".\n\n#         (default: @c COMPONENT if specified or @c BASIS_RUNTIME_COMPONENT otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b RUNTIME_DESTINATION dir @endtp\n\n#     <td>Installation directory of the runtime component relative to\n\n#         @c CMAKE_INSTALL_PREFIX. If \"none\" (case-insensitive) is given as argument,\n\n#         no installation rule for the runtime library is added.\n\n#         (default: @c INSTALL_LIBRARY_DIR on Unix or @c INSTALL_RUNTIME_DIR Windows)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this executable and hence\n\n#         no link dependency on the BASIS utilities shall be added.\n\n#         (default: @c NOT @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and required by this executable\n\n#         and hence a link dependency on the BASIS utilities has to be added.\n\n#         (default: @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds a library build target. In case of a library not written in C++\n\n#          or MEX-file targets, basis_finalize_targets() has to be invoked\n\n#          to finalize the addition of the build target(s). This is done\n\n#          by the basis_project_end() macro.\n\n#\n\n# @sa basis_add_library_target()\n\n# @sa basis_add_script_library()\n\n# @sa basis_add_mex_file()\n\n# @sa basis_add_mcc_target()\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# parse arguments\n",
        "Line" : 983,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# derive target name from path if existing source path is given as first argument instead\n\n# and get list of library source files\n",
        "Line" : 992,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# make target UID\n",
        "Line" : 1016,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# process globbing expressions to get complete list of source files\n",
        "Line" : 1020,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# determine programming language\n",
        "Line" : 1023,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# prepare arguments for subcommand\n",
        "Line" : 1026,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# C++\n",
        "Line" : 1032,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# MEX-file\n",
        "Line" : 1035,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# library\n",
        "Line" : 1044,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# MATLAB\n",
        "Line" : 1048,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# optional\n",
        "Line" : 1058,
        "CharPositionInLine" : 37
      },
      "68" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# other\n",
        "Line" : 1061,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# re-glob source files before each build (if necessary)\n",
        "Line" : 1070,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add single arbitrary or executable script.\n\n#\n\n# @note This function should not be used directly for executable scripts or\n\n#       module libraries. Use basis_add_executable() or basis_add_library()\n\n#       in such (most) cases instead.\n\n#\n\n# This function can be used to add a single arbitrary script file (i.e., any\n\n# text file which is input to a program), such as a CTest script for example,\n\n# to the build if neither basis_add_executable() nor basis_add_library() are\n\n# appropriate choices. In all other cases, either basis_add_executable() or\n\n# basis_add_library() should be used. Note that the script file is by default\n\n# not considered to be an executable. Instead it is assumed that the program\n\n# which interprets/processes the script must be executed explicitly with this\n\n# script as argument. Only scripts built with the @p EXECUTABLE or @p LIBEXEC\n\n# type option are treated as executable files, where in case of Unix a shebang\n\n# directive implicitly states the program used by the shell to interpret the\n\n# script and on Windows a Windows Command which imitates the behavior of Unix\n\n# shells is generated by BASIS. Do not use these type options, however, but\n\n# only use the default @p MODULE option. The basis_add_executable() function\n\n# should be used instead to add an executable script. The basis_add_script()\n\n# function shall only be used for none-executable arbitrary script files which\n\n# cannot be built by basis_add_executable() or basis_add_library().\n\n#\n\n# If the script name ends in <tt>.in</tt>, the <tt>.in</tt> suffix is removed\n\n# from the output name. Further, in case of executable scripts, the file name\n\n# extension is removed from the output file name. Instead, a shebang directive\n\n# is added on Unix to the built script. In order to enable the convenient\n\n# execution of Python and Perl scripts also on Windows without requiring the\n\n# user to setup a proper associate between the filename extension with the\n\n# corresponding interpreter executable, a few lines of Batch code are added at\n\n# the top and bottom of executable Python and Perl scripts. This Batch code\n\n# invokes the configured interpreter with the script file and the given script\n\n# arguments as command-line arguments. Note that both the original script source\n\n# code and the Batch code are stored within the single file. The file name\n\n# extension of such modified scripts is by default set to <tt>.cmd</tt>, the\n\n# common extension for Windows NT Command Scripts. Scripts in other languages\n\n# are not modified and the extension of the original scripts script file is\n\n# preserved on Windows in this case. In case of non-executable scripts, the\n\n# file name extension is kept in any case.\n\n#\n\n# Certain CMake variables within the source file are replaced during the\n\n# built of the script. See the\n\n# <a href=\"http://opensource.andreasschuh.com/cmake-basis/scripttargets/>\n\n# Build System Standard</a> for details.\n\n# Note, however, that source files are only configured if the file name\n\n# ends in the <tt>.in</tt> suffix.\n\n#\n\n# A custom CMake build target with the following properties is added by this\n\n# function to the build system. These properties are used by basis_build_script()\n\n# to generate a build script written in CMake code which is executed by a custom\n\n# CMake command. Before the invokation of basis_build_script(), the target\n\n# properties can be modified using basis_set_target_properties().\n\n#\n\n# @note Custom BASIS build targets are finalized by BASIS using basis_project_end(),\n\n#       i.e., the end of the root CMake configuration file of the (sub-)project.\n\n#\n\n# @par Properties on script targets\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b BASIS_TYPE @endtp\n\n#     <td>Read-only property with value \"SCRIPT_FILE\" for arbitrary scripts,\n\n#         \"SCRIPT_EXECUTABLE\" for executable scripts, and \"SCRIPT_LIBEXEC\" for\n\n#          auxiliary executable scripts.\n\n#          (default: see @p MODULE, @p EXECUTABLE, @p LIBEXEC options)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BASIS_UTILITIES @endtp\n\n#     <td>Whether the BASIS utilities are used by this script. For the supported\n\n#         scripting languages for which BASIS utilities are implemented, BASIS\n\n#         will in most cases automatically detect whether these utilities are\n\n#         used by a script or not. Otherwise, set this property manually or use\n\n#         either the @p USE_BASIS_UTILITIES or the @p NO_BASIS_UTILITIES option\n\n#         when adding the script target. (default: auto-detected or @c UNKNOWN)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BINARY_DIRECTORY @endtp\n\n#     <td>Build tree directory of this target. (default: @c CMAKE_CURRENT_BINARY_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPILE @endtp\n\n#     <td>Whether to compile the script if the programming language allows such\n\n#         pre-compilation as in case of Python, for example. If @c TRUE, only the\n\n#         compiled file is installed. (default: @c BASIS_COMPILE_SCRIPTS)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SCRIPT_DEFINITIONS @endtp\n\n#     <td>CMake code which is evaluated after the inclusion of the default script\n\n#         configuration files. This code can be used to set the replacement text of the\n\n#         CMake variables (\"@VAR@\" patterns) used in the source file.\n\n#         See <a href=\"http://opensource.andreasschuh.com/cmake-basis/standard/scripttargets.html#script-configuration\">\n\n#         Build System Standard</a> for details. (default: \"\")</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SCRIPT_DEFINITIONS_FILE @endtp\n\n#     <td>CMake script file with compile definitions, also referred to as script\n\n#         configuration file. The named files are included after the default BASIS\n\n#         script configuration and before the @c SCRIPT_DEFINITIONS code is being\n\n#         evaluated. (default: @c BINARY_CONFIG_DIR/ScriptConfig.cmake)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPONENT @endtp\n\n#     <td>Name of component as part of which this script is installed if\n\n#         @c INSTALL_DIRECTORY is not set to \"none\".\n\n#         (default: see @p COMPONENT argument)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b EXPORT @endtp\n\n#     <td>Whether to export this build target in which case an import library\n\n#         target is added to the custom exports file with the path to the\n\n#         built/installed script set as @c IMPORT_LOCATION. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b INSTALL_DIRECTORY @endtp\n\n#     <td>Installation directory of script file configured for use in installation tree\n\n#         relative to @c CMAKE_INSTALL_PREFIX. Set to \"none\" (case-insensitive) to skip the\n\n#         addition of an installation rule. (default: see @p DESTINATION argument)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LANGUAGE @endtp\n\n#     <td>Read-only property of programming language of script file in uppercase letters.\n\n#         (default: see @p LANGUAGE argument)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LINK_DEPENDS @endtp\n\n#     <td>Paths or target names of script modules and libraries used by this script.\n\n#         In case of an (auxiliary) executable script, the directories of these modules\n\n#         are added to the search path for modules of the given programming language\n\n#         if such search paths are supported by the language and BASIS knows how to set\n\n#         these (as in case of Python/Jython, Perl, and MATLAB, in particular).\n\n#         Moreover, for each listed build target a dependency is added between this\n\n#         script target and the named build targets. Use basis_target_link_libraries()\n\n#         to add additional link dependencies.\n\n#         (default: BASIS utilities module if used or empty list otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OUTPUT_DIRECTORY @endtp\n\n#     <td>Output directory for built script file configured for use in build tree.\n\n#         (default: @c BINARY_LIBRARY_DIR for arbitrary scripts, @c BINARY_RUNTIME_DIR\n\n#         for executable scripts, and @c BINARY_LIBEXEC_DIR for auxiliary executables)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b OUTPUT_NAME @endtp\n\n#     <td>Name of built script file including file name extension (if any).\n\n#         (default: basename of script file for arbitrary scripts, without extension\n\n#         for executable scripts on Unix, and <tt>.cmd</tt> extension on Windows\n\n#         in case of executable Python/Jython or Perl script)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SOURCE_DIRECTORY @endtp\n\n#     <td>Source directory of this target. (default: @c CMAKE_CURRENT_SOURCE_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SOURCES @endtp\n\n#     <td>Read-only property which lists the source file of this script target.\n\n#         Note that the first element in this list actually names a directory\n\n#         in the build, the one where the build script for this target is located\n\n#         instead of a source file and thus should be ignored. The second entry\n\n#         corresponds to the source file of this script target.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @attention Properties documented as read-only must not be modified.\n\n#\n\n# @note If this function is used within the @c PROJECT_TESTING_DIR, the built\n\n#       executable is output to the @c BINARY_TESTING_DIR directory tree instead.\n\n#       Moreover, no installation rules are added. Test executables are further\n\n#       not exported, regardless of the @c EXPORT property.\n\n#\n\n# @param [in] TARGET_NAME Name of build target. If an existing file is given as\n\n#                         argument, it is added to the list of source files and\n\n#                         the target name is derived from the name of this file.\n\n# @param [in] ARGN        The remaining arguments are parsed and the following arguments\n\n#                         recognized. All unparsed arguments are treated as source files,\n\n#                         where in particular exactly one source file is required if the\n\n#                         @p TARGET_NAME argument does not name an existing source file.\n\n# @par\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp <b>MODULE</b>|<b>EXECUTABLE</b>|<b>LIBEXEC</b> @endtp\n\n#     <td>Type of script to built, i.e., either arbitrary module script which\n\n#         cannot be executed directly, an executable script with proper shebang\n\n#         directive and execute permissions on Unix or Windows Command on Windows,\n\n#         or an auxiliary executable. The type of the script mainly changes the\n\n#         default values of the target properties such as the output and installation\n\n#         directories. To add an (auxiliary) executable script, use\n\n#         basis_add_executable(), however, instead of this function.\n\n#         The @c EXECUTABLE and @c LIBEXEC options are only intended for\n\n#         internal use by BASIS. (default: MODULE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of installation component as part of which this script is being\n\n#         installed if the @c INSTALL_DIRECTORY property is not \"none\".\n\n#         (default: @c BASIS_LIBRARY_COMPONENT for arbitrary scripts or\n\n#         @c BASIS_RUNTIME_COMPONENT for executable scripts)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory for script file relative to @c CMAKE_INSTALL_PREFIX.\n\n#         If an absolute path is given as argument, it is made relative to the\n\n#         configured installation prefix.\n\n#         (default: @c INSTALL_LIBRARY_DIR for arbitrary scripts,\n\n#         @c INSTALL_RUNTIME_DIR for executable scripts, and @c INSTALL_LIBEXEC_DIR\n\n#         for auxiliary executable scripts)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LANGUAGE lang @endtp\n\n#     <td>Programming language in which script file is written (case-insensitive).\n\n#         If not specified, the programming language is derived from the file name\n\n#         extension of the source file and the shebang directive on the first line\n\n#         of the script if any. If the programming language could not be detected\n\n#         automatically, the @c LANGUAGE property is set to @c UNKNOWN. Note that\n\n#         for arbitrary script targets, the script file will still be built correctly\n\n#         even if the scripting language was not recognized. The automatic detection\n\n#         whether the BASIS utilities are used and required will fail, however.\n\n#         In this case, specify the programming language using this option.\n\n#         (default: auto-detected or @c UNKNOWN)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this script. If the\n\n#         programming language of the script is known and BASIS utilities are\n\n#         available for this language, BASIS will in most cases automatically\n\n#         detect whether these utilities are used by a script or not. Use this\n\n#         option to skip this check because the script does not make use of the\n\n#         BASIS utilities.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and thus required by this script.\n\n#         If the programming language of the script is known and BASIS utilities are\n\n#         available for this language, BASIS will in most cases automatically\n\n#         detect whether these utilities are used by a script or not. Use this option\n\n#         to skip this check because it is already known that the script makes use of\n\n#         the BASIS utilities. Note that an error is raised if this option is given,\n\n#         but no BASIS utilities are available for the programming language of this\n\n#         script or if the programming language is unknown, respectively, not detected\n\n#         correctly. In this case, consider the use of the @p LANGUAGE argument.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds a custom CMake target with the documented properties. The actual custom\n\n#          command to build the script is added by basis_build_script().\n\n#\n\n# @ingroup CMakeAPI\n",
        "Line" : 1080,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# parse arguments\n",
        "Line" : 1331,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# derive target name from file name if existing source file given as first argument\n",
        "Line" : 1348,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# check target name\n",
        "Line" : 1362,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# check/set parsed arguments\n",
        "Line" : 1369,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# add custom target\n",
        "Line" : 1395,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# dump CMake variables for configuration of script\n",
        "Line" : 1397,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# auto-detect programming language (may be as well UNKNOWN)\n",
        "Line" : 1400,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# IS_TEST flag\n",
        "Line" : 1406,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# default directory infix used below\n",
        "Line" : 1413,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# output name\n",
        "Line" : 1421,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# output directory\n",
        "Line" : 1441,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# installation component\n",
        "Line" : 1447,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# installation directory\n",
        "Line" : 1458,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# do not install\n",
        "Line" : 1466,
        "CharPositionInLine" : 27
      },
      "85" : {
        "Text" : "# script configuration (\"compile definitions\")\n",
        "Line" : 1470,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# auto-detect use of BASIS utilities\n",
        "Line" : 1476,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# set properties of custom build target\n",
        "Line" : 1504,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# add target to list of targets\n",
        "Line" : 1528,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# ============================================================================\n\n# internal helpers\n\n# ============================================================================\n",
        "Line" : 1533,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add executable target.\n\n#\n\n# This BASIS function overwrites CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_executable\">\n\n# add_executable()</a> command in order to store information of imported targets\n\n# which is in particular used to generate the source code of the ExecutableTargetInfo\n\n# modules which are part of the BASIS utilities.\n\n#\n\n# @note Use basis_add_executable() instead where possible!\n\n#\n\n# @param [in] TARGET_UID Name of the target.\n\n# @param [in] ARGN       Further arguments of CMake's add_executable().\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_executable\n",
        "Line" : 1537,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add library target.\n\n#\n\n# This BASIS function overwrites CMake's\n\n# <a href=\"http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_library\">\n\n# add_library()</a> command in order to store information of imported targets.\n\n#\n\n# @note Use basis_add_library() instead where possible!\n\n#\n\n# @param [in] TARGET_UID Name of the target.\n\n# @param [in] ARGN       Further arguments of CMake's add_library().\n\n#\n\n# @sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_library\n",
        "Line" : 1562,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add executable built from C++ source code.\n\n#\n\n# @note This function should not be used directly. Instead, it is called\n\n#       by basis_add_executable() if the (detected) programming language\n\n#       of the given source code files is @c CXX (i.e., C/C++).\n\n#\n\n# This function adds an executable target for the build of an executable from\n\n# C++ source code files. Refer to the documentation of basis_add_executable()\n\n# for a description of general options for adding an executable target.\n\n#\n\n# By default, the BASIS C++ utilities library is added as link dependency.\n\n# If none of the BASIS C++ utilities are used by this target, the option\n\n# NO_BASIS_UTILITIES can be given. To enable this option by default, set the\n\n# variable @c BASIS_UTILITIES to @c FALSE, best in the <tt>Settings.cmake</tt>\n\n# file located in the @c PROJECT_CONFIG_DIR (add such file if missing).\n\n# If the use of the BASIS C++ utilities is disabled by default, the\n\n# @c USE_BASIS_UTILITIES option can be used to enable them for this target\n\n# only. Note that the utilities library is a static library and thus the linker\n\n# would simply not include any of the BASIS utility functions in the final\n\n# binary file if not used. The only advantage of setting @c BASIS_UTILITIES to\n\n# @c FALSE or to always specify @c NO_BASIS_UTILITIES if no target uses the\n\n# utilities is that the BASIS utilities library will not be build in this case.\n\n#\n\n# @param [in] TARGET_NAME Name of build target.\n\n# @param [in] ARGN        This argument list is parsed and the following\n\n#                         arguments are extracted, all other arguments are\n\n#                         considered to be source code files and simply passed\n\n#                         on to CMake's add_executable() command.\n\n# @par\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of component as part of which this executable will be installed\n\n#         if the specified @c DESTINATION is not \"none\".\n\n#         (default: @c BASIS_RUNTIME_COMPONENT)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory relative to @c CMAKE_INSTALL_PREFIX.\n\n#         If \"none\" (case-insensitive) is given as argument, no default\n\n#         installation rules are added for this executable target.\n\n#         (default: @c INSTALL_RUNTIME_DIR or @c INSTALL_LIBEXEC_DIR\n\n#         if @p LIBEXEC is given)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBEXEC @endtp\n\n#     <td>Specifies that the built executable is an auxiliary executable which\n\n#         is only called by other executables. (default: @c FALSE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this executable and hence\n\n#         no link dependency on the BASIS utilities library shall be added.\n\n#         (default: @c NOT @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and required by this executable\n\n#         and hence a link dependency on the BASIS utilities library has to be added.\n\n#         (default: @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds executable target using CMake's add_executable() command.\n\n#\n\n# @sa basis_add_executable()\n",
        "Line" : 1585,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# check target name\n",
        "Line" : 1657,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# parse arguments\n",
        "Line" : 1661,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# IS_TEST flag\n",
        "Line" : 1681,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# installation component\n",
        "Line" : 1688,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# installation directory\n",
        "Line" : 1695,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# configure (.in) source files\n",
        "Line" : 1707,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# add executable target\n",
        "Line" : 1709,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# output directory\n",
        "Line" : 1723,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# installation directory\n",
        "Line" : 1735,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# link to BASIS utilities\n",
        "Line" : 1737,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# export\n",
        "Line" : 1743,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# installation\n",
        "Line" : 1748,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# TODO install (selected?) tests\n",
        "Line" : 1751,
        "CharPositionInLine" : 6
      },
      "106" : {
        "Text" : "# done\n",
        "Line" : 1760,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add library built from C++ source code.\n\n#\n\n# @note This function should not be used directly. Instead, it is called\n\n#       by basis_add_library() if the (detected) programming language\n\n#       of the given source code files is @c CXX (i.e., C/C++) and the\n\n#       option @c MEX is not given.\n\n#\n\n# This function adds a library target which builds a library from C++ source\n\n# code files. Refer to the documentation of basis_add_library() for a\n\n# description of the general options for adding a library target.\n\n#\n\n# By default, the BASIS C++ utilities library is added as link dependency.\n\n# If none of the BASIS C++ utilities are used by this target, the option\n\n# NO_BASIS_UTILITIES can be given. To enable this option by default, set the\n\n# variable @c BASIS_UTILITIES to @c FALSE, best in the <tt>Settings.cmake</tt>\n\n# file located in the @c PROJECT_CONFIG_DIR (add such file if missing).\n\n# If the use of the BASIS C++ utilities is disabled by default, the\n\n# @c USE_BASIS_UTILITIES option can be used to enable them for this target\n\n# only. Note that the utilities library is a static library and thus the linker\n\n# would simply not include any of the BASIS utility functions in the final\n\n# binary file if not used. The only advantage of setting @c BASIS_UTILITIES to\n\n# @c FALSE or to always specify @c NO_BASIS_UTILITIES if no target uses the\n\n# utilities is that the BASIS utilities library will not be build in this case.\n\n#\n\n# @param [in] TARGET_NAME Name of build target.\n\n# @param [in] ARGN        This argument list is parsed and the following\n\n#                         arguments are extracted. All other arguments are\n\n#                         considered to be source code files and simply\n\n#                         passed on to CMake's add_library() command.\n\n# @par\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp <b>STATIC</b>|<b>SHARED</b>|<b>MODULE</b> @endtp\n\n#     <td>Type of the library. (default: @c SHARED if @c BUILD_SHARED_LIBS\n\n#         evaluates to true or @c STATIC otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of component as part of which this library will be installed\n\n#         if either the @c RUNTIME_INSTALL_DIRECTORY or\n\n#         @c LIBRARY_INSTALL_DIRECTORY property is not \"none\". Used only if\n\n#         either @p RUNTIME_COMPONENT or @p LIBRARY_COMPONENT not specified.\n\n#         (default: see @p RUNTIME_COMPONENT and @p LIBRARY_COMPONENT)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory for runtime and library component relative\n\n#         to @c CMAKE_INSTALL_PREFIX. Used only if either @p RUNTIME_DESTINATION\n\n#         or @p LIBRARY_DESTINATION not specified. If \"none\" (case-insensitive)\n\n#         is given as argument, no default installation rules are added.\n\n#         (default: see @p RUNTIME_DESTINATION and @p LIBRARY_DESTINATION)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_COMPONENT name @endtp\n\n#     <td>Name of component as part of which import/static library will be intalled\n\n#         if @c LIBRARY_INSTALL_DIRECTORY property is not \"none\".\n\n#         (default: @c COMPONENT if specified or @c BASIS_LIBRARY_COMPONENT otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_DESTINATION dir @endtp\n\n#     <td>Installation directory of the library component relative to\n\n#         @c CMAKE_INSTALL_PREFIX. If \"none\" (case-insensitive) is given as argument,\n\n#         no installation rule for the library component is added.\n\n#         (default: @c INSTALL_ARCHIVE_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b RUNTIME_COMPONENT name @endtp\n\n#     <td>Name of component as part of which runtime library will be installed\n\n#         if @c RUNTIME_INSTALL_DIRECTORY property is not \"none\".\n\n#         (default: @c COMPONENT if specified or @c BASIS_RUNTIME_COMPONENT otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b RUNTIME_DESTINATION dir @endtp\n\n#     <td>Installation directory of the runtime component relative to\n\n#         @c CMAKE_INSTALL_PREFIX. If \"none\" (case-insensitive) is given as argument,\n\n#         no installation rule for the runtime library is added.\n\n#         (default: @c INSTALL_LIBRARY_DIR on Unix or @c INSTALL_RUNTIME_DIR Windows)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this executable and hence\n\n#         no link dependency on the BASIS utilities library shall be added.\n\n#         (default: @c NOT BASIS_UTILITIES)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and required by this executable\n\n#         and hence a link dependency on the BASIS utilities library shall be added.\n\n#         (default: @c BASIS_UTILITIES)</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds library target using CMake's add_library() command.\n\n#\n\n# @sa basis_add_library()\n",
        "Line" : 1764,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# On UNIX-based systems setting the VERSION property only creates\n\n# annoying files with the version string as suffix.\n\n# Moreover, MEX-files may NEVER have a suffix after the MEX extension!\n\n# Otherwise, the MATLAB Compiler when using the symbolic link\n\n# without this suffix will create code that fails on runtime\n\n# with an .auth file missing error.\n\n#\n\n# Thus, do NOT set VERSION and SOVERSION properties on library targets!\n",
        "Line" : 1865,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# check target name\n",
        "Line" : 1874,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# parse arguments\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# IS_TEST flag\n",
        "Line" : 1897,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# library type\n",
        "Line" : 1904,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# status message\n",
        "Line" : 1932,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# installation component\n",
        "Line" : 1934,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# installation directories\n",
        "Line" : 1955,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# configure (.in) source files\n",
        "Line" : 1976,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# add library target\n",
        "Line" : 1978,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# output directory\n",
        "Line" : 1986,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# installation directory\n\n# these properties are used by basis_get_target_location() in particular\n",
        "Line" : 2004,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# link to BASIS utilities\n",
        "Line" : 2013,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# export\n",
        "Line" : 2019,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# installation\n",
        "Line" : 2024,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# TODO At the moment, no tests are installed. Once there is a way to\n\n#      install selected tests, the shared libraries they depend on\n\n#      need to be installed as well.\n",
        "Line" : 2027,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# done\n",
        "Line" : 2052,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add script library target.\n\n#\n\n# @note This function should not be used directly. Instead, it is called\n\n#       by basis_add_library() if the (detected) programming language\n\n#       of the given source code files is neither @c CXX (i.e., C/C++) nor\n\n#       @c MATLAB.\n\n#\n\n# This function adds a build target for libraries which are a collection of\n\n# one or more modules written in a scripting language. The relative paths\n\n# of the modules relative to the library's @p SOURCE_DIRECTORY property are\n\n# preserved. This is important for the most widely used scripting languages\n\n# such as Python, Perl, or MATLAB, where the file path relative to the\n\n# package root directory defines the package namespace.\n\n#\n\n# A custom CMake build target with the following properties is added by this\n\n# function to the build system. These properties are used by\n\n# basis_build_script_library() to generate a build script written in CMake\n\n# code which is executed by a custom CMake command. Before the invokation of\n\n# basis_build_script_library(), the target properties can be modified using\n\n# basis_set_target_properties().\n\n#\n\n# @note Custom BASIS build targets are finalized by BASIS using basis_project_end(),\n\n#       i.e., the end of the root CMake configuration file of the (sub-)project.\n\n#\n\n# @par Properties on script library targets\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b BASIS_TYPE @endtp\n\n#     <td>Read-only property with value \"SCRIPT_LIBRARY\" for script library targets.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BASIS_UTILITIES @endtp\n\n#     <td>Whether the BASIS utilities are used by any module of this library.\n\n#         For the supported scripting languages for which BASIS utilities are\n\n#         implemented, BASIS will in most cases automatically detect whether\n\n#         these utilities are used by a module or not. Otherwise, set this\n\n#         property manually or use either the @p USE_BASIS_UTILITIES or the\n\n#         @p NO_BASIS_UTILITIES option when adding the library target.\n\n#         (default: auto-detected or @c UNKNOWN)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b BINARY_DIRECTORY @endtp\n\n#     <td>Build tree directory of this target. (default: @c CMAKE_CURRENT_BINARY_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b COMPILE @endtp\n\n#     <td>Whether to compile the library, respectively, it's modules if the\n\n#         programming language allows such pre-compilation as in case of Python,\n\n#         for example. If @c TRUE, only the compiled files are installed.\n\n#         (default: @c BASIS_COMPILE_SCRIPTS)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SCRIPT_DEFINITIONS @endtp\n\n#     <td>CMake code which is evaluated after the inclusion of the default script\n\n#         configuration files. This code can be used to set the replacement text of the\n\n#         CMake variables (\"@VAR@\" patterns) used in the source files.\n\n#         See <a href=\"http://opensource.andreasschuh.com/cmake-basis/standard/scripttargets.html#script-configuration\">\n\n#         Build System Standard</a> for details. (default: \"\")</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SCRIPT_DEFINITIONS_FILE @endtp\n\n#     <td>CMake script file with compile definitions, also referred to as script\n\n#         configuration file. The named files are included after the default BASIS\n\n#         script configuration and before the @c SCRIPT_DEFINITIONS code is being\n\n#         evaluated. (default: @c BINARY_CONFIG_DIR/ScriptConfig.cmake)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b EXPORT @endtp\n\n#     <td>Whether to export this build target in which case an import library\n\n#         target is added to the custom exports file with the path to the\n\n#         built/installed modules set as @c IMPORT_LOCATION. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LANGUAGE @endtp\n\n#     <td>Read-only property of programming language of modules in uppercase letters.\n\n#         (default: see @p LANGUAGE argument)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_COMPONENT @endtp\n\n#     <td>Name of component as part of which this library is installed if\n\n#         @c LIBRARY_INSTALL_DIRECTORY is not set to \"none\".\n\n#         (default: see @p COMPONENT argument)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_INSTALL_DIRECTORY @endtp\n\n#     <td>Installation directory of library configured for use in installation tree\n\n#         relative to @c CMAKE_INSTALL_PREFIX. Set to \"none\" (case-insensitive) to skip the\n\n#         addition of an installation rule.\n\n#         (default: <tt>INSTALL_&lt;LANGUAGE&gt;_LIBRARY_DIR</tt> if defined or\n\n#         @c INSTALL_LIBRARY_DIR otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LIBRARY_OUTPUT_DIRECTORY @endtp\n\n#     <td>Output directory of library configured for use within the build tree.\n\n#         (default: <tt>BINARY_&lt;LANGUAGE&gt;_LIBRARY_DIR</tt> if defined or\n\n#         @c BINARY_LIBRARY_DIR otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LINK_DEPENDS @endtp\n\n#     <td>Paths or target names of script modules and libraries used by this script.\n\n#         For each listed build target, a dependency is added between this\n\n#         library target and the named build targets. Use basis_target_link_libraries()\n\n#         to add additional link dependencies. Further note that if this library is\n\n#         a link dependency of an executable script added by basis_add_executable()\n\n#         (i.e., basis_add_script() actually), the link dependencies of this library\n\n#         are inherited by the executable script.\n\n#         (default: BASIS utilities module if used or empty list otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b PREFIX @endtp\n\n#     <td>Common module prefix. The given directory path is appended to both\n\n#         @c LIBRAR_OUTPUT_DIRECTORY and @c LIBRARY_INSTALL_DIRECTORY and can,\n\n#         for example, be used to install modules of a Python package as part of\n\n#         another Python package, where @c LIBRARY_OUTPUT_DIRECTORY or\n\n#         @c LIBRARY_INSTALL_DIRECTORY, respectively, is the directory of the\n\n#         main package which is added to the @c PYTHONPATH. Possibly missing\n\n#         __init__.py files in case of Python are generated by the _initpy target\n\n#         which is automatically added by BASIS in that case and further added to\n\n#         the dependencies of this library target.\n\n#         (default: @c PROJECT_NAMESPACE_PYTHON if @c LANGUAGE is @c PYTHON with\n\n#         periods (.) replaced by slashes (/), @c PROJECT_NAMESPACE_PERL if\n\n#         @c LANGUAGE is @c PERL with <tt>::</tt> replaced by slashes (/),\n\n#         and \"\" otherwise)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SOURCE_DIRECTORY @endtp\n\n#     <td>Source directory of this target. This directory is in particular\n\n#         used to convert the paths of the given source files to relative paths.\n\n#         The built modules within the build and installation tree will have the\n\n#         same relative path (relative to the @c LIBRARY_OUTPUT_DIRECTORY or\n\n#         @c LIBRARY_INSTALL_DIRECTORY, respectively).\n\n#         (default: @c CMAKE_CURRENT_SOURCE_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SOURCES @endtp\n\n#     <td>Read-only property which lists the source files of this library.\n\n#         Note that the first element in this list actually names a directory\n\n#         in the build, the one where the build script for this target is located\n\n#         instead of a source file and thus should be ignored.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @attention Properties documented as read-only must not be modified.\n\n#\n\n# @param [in] TARGET_NAME Name of build target.\n\n# @param [in] ARGN        The remaining arguments are parsed and the following\n\n#                         arguments extracted. All unparsed arguments are treated\n\n#                         as the module files of the script library.\n\n# @par\n\n# <table border=0>\n\n#   <tr>\n\n#     @tp @b COMPONENT name @endtp\n\n#     <td>Name of installation component as part of which this library is being\n\n#         installed if the @c LIBRARY_INSTALL_DIRECTORY property is not \"none\".\n\n#         (default: @c BASIS_LIBRARY_COMPONENT)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b DESTINATION dir @endtp\n\n#     <td>Installation directory for library relative to @c CMAKE_INSTALL_PREFIX.\n\n#         If an absolute path is given as argument, it is made relative to the\n\n#         configured installation prefix. (default: @c INSTALL_LIBRARY_DIR)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b LANGUAGE lang @endtp\n\n#     <td>Programming language in which modules are written (case-insensitive).\n\n#         If not specified, the programming language is derived from the file name\n\n#         extensions of the source files and the shebang directive on the first line\n\n#         of each module if any. If the programming language could not be detected\n\n#         automatically, the @c LANGUAGE property is set to @c UNKNOWN. Note that\n\n#         for script library targets, the library may still be built correctly\n\n#         even if the scripting language was not recognized. The automatic detection\n\n#         whether the BASIS utilities are used and required will fail, however.\n\n#         In this case, specify the programming language using this option.\n\n#         (default: auto-detected or @c UNKNOWN)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b [NO]EXPORT @endtp\n\n#     <td>Whether to export this target. (default: @c TRUE)</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b NO_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are not used by this library. If the\n\n#         programming language of the modules is known and BASIS utilities are\n\n#         available for this language, BASIS will in most cases automatically\n\n#         detect whether these utilities are used by any module of this library.\n\n#         Use this option to skip this check in the case that no module makes\n\n#         use of the BASIS utilities.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b USE_BASIS_UTILITIES @endtp\n\n#     <td>Specify that the BASIS utilities are used and thus required by this library.\n\n#         If the programming language of the modules is known and BASIS utilities are\n\n#         available for this language, BASIS will in most cases automatically\n\n#         detect whether these utilities are used by any module of this library.\n\n#         Use this option to skip this check when it is already known that no module\n\n#         makes use of the BASIS utilities. Note that an error is raised if this option\n\n#         is given, but no BASIS utilities are available for the programming language\n\n#         of this script or if the programming language is unknown, respectively, not\n\n#         detected correctly. In this case, consider the use of the @p LANGUAGE argument.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @returns Adds a custom CMake target with the documented properties. The actual custom\n\n#          command to build the library is added by basis_build_script_library().\n\n#\n\n# @sa basis_add_library()\n",
        "Line" : 2056,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# check target name\n",
        "Line" : 2264,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# dump CMake variables for configuration of script\n",
        "Line" : 2268,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# parse arguments\n",
        "Line" : 2271,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# IS_TEST flag\n",
        "Line" : 2281,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# check source files\n",
        "Line" : 2288,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# auto-detect programming language (may be as well UNKNOWN)\n",
        "Line" : 2308,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# output directory\n",
        "Line" : 2321,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# installation component\n",
        "Line" : 2335,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# installation directory\n",
        "Line" : 2342,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# common module prefix\n",
        "Line" : 2362,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# script configuration (\"compile definitions\")\n",
        "Line" : 2368,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# auto-detect use of BASIS utilities\n",
        "Line" : 2374,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# add custom target\n",
        "Line" : 2401,
        "CharPositionInLine" : 2
      },
      "139" : {
        "Text" : "# link to BASIS utilities\n",
        "Line" : 2423,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "# add target to list of targets\n",
        "Line" : 2430,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# ============================================================================\n\n# custom build commands\n\n# ============================================================================\n",
        "Line" : 2435,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Finalize custom targets by adding the missing build commands.\n\n#\n\n# This function is called by basis_project_end() in order to finalize the\n\n# addition of the custom build targets such as, for example, build targets\n\n# for the build of executable scripts, Python packages, MATLAB Compiler\n\n# executables and shared libraries, and MEX-files.\n\n#\n\n# @returns Generates the CMake build scripts and adds custom build commands\n\n#          and corresponding targets for the execution of these scripts.\n\n#\n\n# @sa basis_build_script()\n\n# @sa basis_build_script_library()\n\n# @sa basis_build_mcc_target()\n\n# @sa basis_build_mex_file()\n",
        "Line" : 2439,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# Only if BASIS is allowed to take care of the INSTALL_RPATH property\n\n# and the use of this property was not disabled by the project\n",
        "Line" : 2461,
        "CharPositionInLine" : 10
      },
      "144" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Set INSTALL_RPATH property of executable or shared library target.\n\n#\n\n# This function sets the @c INSTALL_RPATH property of a specified executable or\n\n# shared library target using the @c LINK_DEPENDS obtained using the\n\n# basis_get_target_link_libraries() function. It determines the installation\n\n# location of each dependency using the basis_get_target_location() function.\n\n#\n\n# @returns Sets the @c INSTALL_RPATH property of the specified target.\n\n#\n\n# @sa basis_get_target_link_libraries()\n",
        "Line" : 2478,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# always prefer libraries located within the same directory\n",
        "Line" : 2506,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "# common default RPATH (rarely used)\n",
        "Line" : 2508,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "# get location of target used to make paths relative to this $ORIGIN\n",
        "Line" : 2512,
        "CharPositionInLine" : 2
      },
      "148" : {
        "Text" : "# directories of external projects belonging to same bundle which\n\n# were added using [basis_]link_directories() command\n",
        "Line" : 2514,
        "CharPositionInLine" : 2
      },
      "149" : {
        "Text" : "# directories of link libraries\n\n#\n\n# only the libraries of this project and targets imported\n\n# from other projects which are part of the same bundle\n",
        "Line" : 2527,
        "CharPositionInLine" : 2
      },
      "150" : {
        "Text" : "# remove duplicates\n",
        "Line" : 2565,
        "CharPositionInLine" : 2
      },
      "151" : {
        "Text" : "# set INSTALL_RPATH property\n",
        "Line" : 2569,
        "CharPositionInLine" : 2
      },
      "152" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add custom command for build of single script.\n\n#\n\n# This function is called by basis_finalize_targets() which in turn is called\n\n# by basis_project_end(), i.e., the end of the root CMake configuration file\n\n# of the (sub-)project.\n\n#\n\n# @param [in] TARGET_UID Name/UID of custom target added by basis_add_script().\n\n#\n\n# @sa basis_add_script()\n",
        "Line" : 2580,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "# does this target exist ?\n",
        "Line" : 2591,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# get target properties\n",
        "Line" : 2599,
        "CharPositionInLine" : 2
      },
      "155" : {
        "Text" : "# paths of script modules/packages\n\n# including BASIS utilities if used\n",
        "Line" : 2600,
        "CharPositionInLine" : 63
      },
      "156" : {
        "Text" : "# programming language of script\n\n# must match \"^SCRIPT_(EXECUTABLE|LIBEXEC|MODULE)$\"\n\n# CMakeFiles build directory\n\n# CMake source directory\n\n# CMake binary directory\n\n# output directory for built script\n\n# installation directory for built script\n\n# installation component\n\n# name of built script including extension (if any)\n\n# name prefix\n\n# name suffix (e.g., extension for executable script)\n\n# CMake code to set variables used to configure script\n\n# script configuration file\n\n# whether this target shall be exported\n\n# whether to compile script if applicable\n\n# path of script source file\n",
        "Line" : 2604,
        "CharPositionInLine" : 31
      },
      "157" : {
        "Text" : "# whether this script is used for testing only\n",
        "Line" : 2621,
        "CharPositionInLine" : 51
      },
      "158" : {
        "Text" : "# CMake <3.1 stores path to internal build directory here\n",
        "Line" : 2647,
        "CharPositionInLine" : 33
      },
      "159" : {
        "Text" : "# output name\n",
        "Line" : 2659,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# arguments of build script\n",
        "Line" : 2669,
        "CharPositionInLine" : 2
      },
      "161" : {
        "Text" : "# link dependencies - module search paths\n",
        "Line" : 2716,
        "CharPositionInLine" : 2
      },
      "162" : {
        "Text" : "# prepend own module search paths - if dependencies among own modules\n\n#                                   not specified or to ensure that\n\n#                                   these are preferred\n",
        "Line" : 2754,
        "CharPositionInLine" : 2
      },
      "163" : {
        "Text" : "# remove default site-packages directories\n",
        "Line" : 2782,
        "CharPositionInLine" : 2
      },
      "164" : {
        "Text" : "# configure build script\n",
        "Line" : 2787,
        "CharPositionInLine" : 2
      },
      "165" : {
        "Text" : "# list of all output files\n",
        "Line" : 2790,
        "CharPositionInLine" : 2
      },
      "166" : {
        "Text" : "# add build command for script\n",
        "Line" : 2818,
        "CharPositionInLine" : 2
      },
      "167" : {
        "Text" : "# basis_configure_script() definition\n",
        "Line" : 2835,
        "CharPositionInLine" : 79
      },
      "168" : {
        "Text" : "# add custom target\n",
        "Line" : 2840,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# cleanup on \"make clean\" - including compiled files regardless of COMPILE flag\n",
        "Line" : 2848,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# export target\n",
        "Line" : 2859,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# install script\n",
        "Line" : 2863,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# done\n",
        "Line" : 2902,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add custom command for build of script library.\n\n#\n\n# This function is called by basis_finalize_targets() which in turn is called\n\n# by basis_project_end(), i.e., the end of the root CMake configuration file\n\n# of the (sub-)project.\n\n#\n\n# @param [in] TARGET_UID Name/UID of custom target added by basis_add_script_library().\n\n#\n\n# @sa basis_add_script_library()\n",
        "Line" : 2908,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "# does this target exist ?\n",
        "Line" : 2919,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "# get target properties\n",
        "Line" : 2927,
        "CharPositionInLine" : 2
      },
      "176" : {
        "Text" : "# paths of script modules/packages\n\n# including BASIS utilities if used\n",
        "Line" : 2928,
        "CharPositionInLine" : 63
      },
      "177" : {
        "Text" : "# programming language of modules\n\n# must be \"SCRIPT_LIBRARY\"\n\n# whether this target requires the BASIS utilities\n\n# CMakeFiles build directory\n\n# CMake source directory\n\n# CMake binary directory\n\n# output directory for built modules\n\n# installation directory for built modules\n\n# installation component\n\n# common prefix for modules\n\n# CMake code to set variables used to configure modules\n\n# script configuration file\n\n# paths of script modules/packages used by the modules of this library\n\n# whether to export this target\n\n# whether to compile the modules/library if applicable\n\n# source files of module scripts\n",
        "Line" : 2932,
        "CharPositionInLine" : 33
      },
      "178" : {
        "Text" : "# whether this script is used for testing only\n",
        "Line" : 2949,
        "CharPositionInLine" : 51
      },
      "179" : {
        "Text" : "# CMake <3.1 stores path to internal build directory here\n",
        "Line" : 2973,
        "CharPositionInLine" : 33
      },
      "180" : {
        "Text" : "# common arguments of build script\n",
        "Line" : 2983,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# no additional options\n",
        "Line" : 3007,
        "CharPositionInLine" : 16
      },
      "182" : {
        "Text" : "# add build command for each module\n",
        "Line" : 3011,
        "CharPositionInLine" : 2
      },
      "183" : {
        "Text" : "# list of all output files\n\n# list of output files for installation\n\n# common base directory for files to install \n",
        "Line" : 3012,
        "CharPositionInLine" : 54
      },
      "184" : {
        "Text" : "# arguments of build script\n",
        "Line" : 3019,
        "CharPositionInLine" : 4
      },
      "185" : {
        "Text" : "# configure build script\n",
        "Line" : 3035,
        "CharPositionInLine" : 4
      },
      "186" : {
        "Text" : "# output files of this command\n",
        "Line" : 3038,
        "CharPositionInLine" : 4
      },
      "187" : {
        "Text" : "# add build command\n",
        "Line" : 3071,
        "CharPositionInLine" : 4
      },
      "188" : {
        "Text" : "# basis_configure_script() definition\n",
        "Line" : 3082,
        "CharPositionInLine" : 81
      },
      "189" : {
        "Text" : "# add output files of command to list of all output files\n",
        "Line" : 3087,
        "CharPositionInLine" : 4
      },
      "190" : {
        "Text" : "# add custom target to build modules\n",
        "Line" : 3090,
        "CharPositionInLine" : 2
      },
      "191" : {
        "Text" : "# cleanup on \"make clean\" - including compiled files regardless of COMPILE flag\n",
        "Line" : 3098,
        "CharPositionInLine" : 2
      },
      "192" : {
        "Text" : "# export target\n",
        "Line" : 3109,
        "CharPositionInLine" : 2
      },
      "193" : {
        "Text" : "# add installation rule\n",
        "Line" : 3113,
        "CharPositionInLine" : 2
      },
      "194" : {
        "Text" : "# done\n",
        "Line" : 3144,
        "CharPositionInLine" : 2
      },
      "195" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# @brief Add target to build/install __init__.py files.\n",
        "Line" : 3150,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "# constants\n",
        "Line" : 3153,
        "CharPositionInLine" : 2
      },
      "197" : {
        "Text" : "# collect directories requiring a __init__.py file\n",
        "Line" : 3161,
        "CharPositionInLine" : 2
      },
      "198" : {
        "Text" : "# targets which generate Python/Jython modules and depend on _initpy\n\n# Python library directories requiring a __init__.py file\n\n# Jython library directories requiring a __init__.py file\n\n# exclude these directories\n\n# exclude these directories upon installation\n\n# installation components\n",
        "Line" : 3162,
        "CharPositionInLine" : 28
      },
      "199" : {
        "Text" : "# get path of built Python modules\n",
        "Line" : 3173,
        "CharPositionInLine" : 6
      },
      "200" : {
        "Text" : "# CMake <3.1 stores path to internal build directory here\n",
        "Line" : 3185,
        "CharPositionInLine" : 40
      },
      "201" : {
        "Text" : "# get component (used by installation rule)\n",
        "Line" : 3197,
        "CharPositionInLine" : 6
      },
      "202" : {
        "Text" : "# list of directories for which to install\n\n# __init__.py for this component\n",
        "Line" : 3202,
        "CharPositionInLine" : 52
      },
      "203" : {
        "Text" : "# directories for which to build a __init__.py file\n",
        "Line" : 3205,
        "CharPositionInLine" : 6
      },
      "204" : {
        "Text" : "# depends on _initpy\n",
        "Line" : 3211,
        "CharPositionInLine" : 49
      },
      "205" : {
        "Text" : "# directories for which to install a __init__.py file\n",
        "Line" : 3225,
        "CharPositionInLine" : 6
      },
      "206" : {
        "Text" : "# depends on _initpy\n",
        "Line" : 3231,
        "CharPositionInLine" : 49
      },
      "207" : {
        "Text" : "# return if nothing to do\n",
        "Line" : 3258,
        "CharPositionInLine" : 2
      },
      "208" : {
        "Text" : "# generate build script\n",
        "Line" : 3274,
        "CharPositionInLine" : 2
      },
      "209" : {
        "Text" : "# Python *must* come first. See JYTHON_COMPILED_FILES list.\n",
        "Line" : 3278,
        "CharPositionInLine" : 44
      },
      "210" : {
        "Text" : "# write/update build script\n",
        "Line" : 3324,
        "CharPositionInLine" : 2
      },
      "211" : {
        "Text" : "# add custom build command\n",
        "Line" : 3336,
        "CharPositionInLine" : 2
      },
      "212" : {
        "Text" : "# add custom target which triggers execution of build script\n",
        "Line" : 3343,
        "CharPositionInLine" : 2
      },
      "213" : {
        "Text" : "# cleanup on \"make clean\" - including compiled modules regardless of COMPILE flag\n",
        "Line" : 3354,
        "CharPositionInLine" : 2
      },
      "214" : {
        "Text" : "# add install rules\n",
        "Line" : 3356,
        "CharPositionInLine" : 2
      },
      "215" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 3380,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 216
    },
    "src/cmake/TopologicalSort.cmake" : {
      "ObjectId" : "4bb57dce60e8c83b1438167f1c080602bbeb3bfb",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Modified from Boost Utilities\n\n#\n\n# Copyright 2010 Kitware, Inc.\n\n# ============================================================================\n\n# Copyright 2007 Douglas Gregor <doug.gregor@gmail.com>\n\n# Copyright 2007 Troy Straszheim\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# ============================================================================\n\n# Boost Software License - Version 1.0 - August 17th, 2003\n\n#\n\n# Permission is hereby granted, free of charge, to any person or organization\n\n# obtaining a copy of the software and accompanying documentation covered by\n\n# this license (the \"Software\") to use, reproduce, display, distribute,\n\n# execute, and transmit the Software, and to prepare derivative works of the\n\n# Software, and to permit third-parties to whom the Software is furnished to\n\n# do so, all subject to the following:\n\n#\n\n# The copyright notices in the Software and this entire statement, including\n\n# the above license grant, this restriction and the following disclaimer,\n\n# must be included in all copies of the Software, in whole or in part, and\n\n# all derivative works of the Software, unless such copies or derivative\n\n# works are solely in the form of machine-executable object code generated by\n\n# a source language processor.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\n\n# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\n\n# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  TopologicalSort.cmake\n\n# @brief CMake implementation of topological sorting algorithm.\n\n#\n\n# Perform a reverse topological sort on the given LIST.\n\n#\n\n#   topological_sort(my_list \"MY_\" \"_EDGES\")\n\n#\n\n# LIST is the name of a variable containing a list of elements to be\n\n# sorted in reverse topological order. Each element in the list has a\n\n# set of outgoing edges (for example, those other list elements that\n\n# it depends on). In the resulting reverse topological ordering\n\n# (written back into the variable named LIST), an element will come\n\n# later in the list than any of the elements that can be reached by\n\n# following its outgoing edges and the outgoing edges of any vertices\n\n# they target, recursively. Thus, if the edges represent dependencies\n\n# on build targets, for example, the reverse topological ordering is\n\n# the order in which one would build those targets.\n\n#\n\n# For each element E in this list, the edges for E are contained in\n\n# the variable named ${PREFIX}${E}${SUFFIX}. If no such variable\n\n# exists, then it is assumed that there are no edges. For example, if\n\n# my_list contains a, b, and c, one could provide a dependency graph\n\n# using the following variables:\n\n#\n\n#     MY_A_EDGES     b\n\n#     MY_B_EDGES\n\n#     MY_C_EDGES     a b\n\n#\n\n#  With the involcation of topological_sort shown above and these\n\n#  variables, the resulting reverse topological ordering will be b, a, c.\n\n#\n\n# @ingroup CMakeUtilities\n\n##############################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Clear the stack and output variable\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Loop over all of the vertices, starting the topological sort from\n\n# each one.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If we haven't already processed this vertex, start a depth-first\n\n# search from where.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Push this vertex onto the stack with all of its outgoing edges\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 89,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# While the depth-first search stack is not empty\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Remove the vertex and its remaining out-edges from the top\n\n# of the stack\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get the source vertex and the list of out-edges\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# While there are still out-edges remaining\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Pull off the first outgoing edge\n",
        "Line" : 108,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# We have not seen the target before, so we will traverse\n\n# its outgoing edges before coming back to our\n\n# source. This is the key to the depth-first traversal.\n",
        "Line" : 113,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 117,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# Push the remaining edges for the current vertex onto the\n\n# stack\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Setup the new source and outgoing edges\n",
        "Line" : 126,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# We have finished all of the outgoing edges for\n\n# SOURCE; add it to the resulting list.\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Check the length of the stack\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 18
    },
    "src/cmake/UtilitiesTools.cmake" : {
      "ObjectId" : "c1c13c84069618b999237e205161f231a96ea177",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  UtilitiesTools.cmake\n\n# @brief CMake functions related to configuration of BASIS utilities.\n\n#\n\n# @ingroup CMakeTools\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @addtogroup CMakeUtilities\n\n#  @{\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ============================================================================\n\n# auto-detect which utilities are used\n\n# ============================================================================\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Check whether the BASIS utilities are used within a given source file.\n\n#\n\n# This function matches the source code against specific import patterns which\n\n# are all valid imports of the BASIS utilities for the respective programming\n\n# language of the specified file. If the BASIS utilities are used within the\n\n# specified source file, the variable named @p VAR is set to @c TRUE.\n\n# Otherwise, it is set to @c FALSE.\n\n#\n\n# @param [out] VAR         Whether the BASIS utilites are used.\n\n# @param [in]  SOURCE_FILE Path of source file to check.\n\n# @param [in]  ARGN        Source code language. If not specified, the\n\n#                          programming language is determined automatically.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# make file path absolute and append .in suffix if necessary\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# C++\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# read script file\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# match use/require statements\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# e.g., #include \"basis.h\", #include <pkg/basis.h>\n",
        "Line" : 60,
        "CharPositionInLine" : 95
      },
      "10" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Python/Jython\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# read script file\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# deprecated BASIS_PYTHON_UTILITIES macro\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# match use of package-specific utilities\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# e.g., basis = <package>.basis, <package>.basis.exedir()\n",
        "Line" : 75,
        "CharPositionInLine" : 74
      },
      "15" : {
        "Text" : "# match import statements\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# e.g., import basis\n\n# e.g., import <package>.basis\n\n# e.g., import .basis, import ..basis\n\n# e.g., from <package> import basis\n\n# e.g., from <package>.basis import which\n\n# e.g., from . import basis\", \"from .. import basis\n\n# e.g., from .basis import which, WhichError, from ..basis import which\n",
        "Line" : 80,
        "CharPositionInLine" : 66
      },
      "17" : {
        "Text" : "# foreach RE\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Perl\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# read script file\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# deprecated BASIS_PERL_UTILITIES macro\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# match use/require statements\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# e.g., use <Package>::Basis qw(:everything);\n",
        "Line" : 105,
        "CharPositionInLine" : 70
      },
      "23" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Bash\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# read script file\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# deprecated BASIS_BASH_UTILITIES macro\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# match source/. built-ins\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# e.g., . ${BASIS_BASH_UTILITIES} || exit 1\n",
        "Line" : 119,
        "CharPositionInLine" : 101
      },
      "28" : {
        "Text" : "# return\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# ============================================================================\n\n# C++ utilities\n\n# ============================================================================\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add build target for BASIS C++ utilities library.\n\n#\n\n# This function is called by basis_add_executable_target() and basis_add_library_target()\n\n# in order to add the \"basis\" build target for the static project-specific\n\n# BASIS utilities library for C++. If the target was added before, it is\n\n# only used to get the target UID of this build target so the newly added\n\n# executable or library can be linked to it.\n\n#\n\n# The CMake function add_library() checks if the specified source code files\n\n# exist. If a source file is not found, an error is raised by CMake. The BASIS\n\n# utilities can, however, only be configured at the end of the configuration\n\n# step. Therefore, this function simply writes dummy C++ source files in order\n\n# to pass the existence check. The actual source files are configured by the\n\n# function basis_configure_utilities() which is called by basis_project_end().\n\n#\n\n# After writing these dummy source files, a library build target for the\n\n# project-specific BASIS C++ utilities is added. This build target is not\n\n# being build as part of the ALL target in case it is never used by any of\n\n# the build targets of the project. Only if build target links to this\n\n# library, it will be build and installed.\n\n#\n\n# @param [out] UID UID of added build target.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# target UID of \"basis\" library target\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# a subproject has it's own version of the project-specific BASIS utilities\n\n# as the targets and functions live in a separate namespace\n",
        "Line" : 160,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# modules, on the other side, share the library with the top-level project\n\n# the addition of the utilities target is in this case only required because\n\n# of the install(TARGETS) and install(EXPORT) commands.\n",
        "Line" : 167,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# write dummy source files\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# add library target if not present yet - only build if required\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# define dependency on non-project specific utilities as the order in\n\n# which static libraries are listed on the command-line for the linker\n\n# matters; this will help CMake to get the order right\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# set target properties\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# export\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# installation\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# debug message\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# done\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# ============================================================================\n\n# Python utilities\n\n# ============================================================================\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add build target for BASIS Python utilities library.\n\n#\n\n# This function is called by basis_target_link_libraries() in order to add the\n\n# \"basis\" build target for the project-specific BASIS Python utilities.\n\n# If the target was added before, it is only used to get the target UID of\n\n# this build target so the executable or library can be linked to it.\n\n#\n\n# @note The basis_target_link_libraries() function in fact calls\n\n#       basis_add_utilities_library() which calls this function.\n\n#\n\n# @param [out] UID UID of added build target.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ============================================================================\n\n# Perl utilities\n\n# ============================================================================\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add build target for BASIS Perl utilities library.\n\n#\n\n# This function is called by basis_target_link_libraries() in order to add the\n\n# \"basis\" build target for the project-specific BASIS Perl utilities.\n\n# If the target was added before, it is only used to get the target UID of\n\n# this build target so the executable or library can be linked to it.\n\n#\n\n# @note The basis_target_link_libraries() function in fact calls\n\n#       basis_add_utilities_library() which calls this function.\n\n#\n\n# @param [out] UID UID of added build target.\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# ============================================================================\n\n# Bash utilities\n\n# ============================================================================\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Absolute path of current BASH file.\n\n#\n\n# @note Does not resolve symbolic links.\n\n#\n\n# Example:\n\n# @code\n\n# readonly __MYMODULE=@BASIS_BASH___FILE__@\n\n# @endcode\n\n#\n\n# @ingroup BasisBashUtilities\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Absolute path to directory of current BASH file.\n\n#\n\n# @note Does not resolve symbolic links.\n\n#\n\n# Example:\n\n# @code\n\n# readonly __MYMODULE_dir=@BASIS_BASH___DIR__@\n\n# @endcode\n\n#\n\n# @ingroup BasisBashUtilities\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add build target for BASIS Bash utilities library.\n\n#\n\n# This function is called by basis_target_link_libraries() in order to add the\n\n# \"basis\" build target for the project-specific BASIS Bash utilities.\n\n# If the target was added before, it is only used to get the target UID of\n\n# this build target so the executable or library can be linked to it.\n\n#\n\n# @note The basis_target_link_libraries() function in fact calls\n\n#       basis_add_utilities_library() which calls this function.\n\n#\n\n# @param [out] UID UID of added build target.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# ============================================================================\n\n# configuration\n\n# ============================================================================\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Add build target for BASIS utilities library.\n\n#\n\n# This function is called by basis_target_link_libraries() in order to add the\n\n# \"basis\" build target for the project-specific BASIS utilities for a given\n\n# source code language. If the target was added before, it is only used to get\n\n# the target UID of this build target so the executable or library can be\n\n# linked to it.\n\n#\n\n# @param [out] UID      UID of added build target.\n\n# @param [in]  LANGUAGE Programming language of utilities.\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Determine whether this project uses any of the BASIS Utilities.\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Configure BASIS utilities.\n\n#\n\n# This function configures the following source files which can be used\n\n# within the source code of the project. If the BASIS utilities for a specific\n\n# language are not used by any of the project's build targets, no target for\n\n# the build of these utilities is added, unless the\n\n# @c BUILD_BASIS_UTILITIES_FOR_<LANGUAGE> option is set to @c ON. A reason\n\n# for forcing the build of the BASIS utilities is that the libraries should\n\n# be used by other projects which may want to make use of the BASIS Utilities\n\n# to get access to the project attributes.\n\n#\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b basis.h @endtp\n\n#     <td>Header file declaring the BASIS utilities for C++.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b basis.cxx @endtp\n\n#     <td>Definitions of the constants and functions declared in basis.h.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b basis.py @endtp\n\n#     <td>Module defining the BASIS utilities for Python.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Basis.pm @endtp\n\n#     <td>Module defining the BASIS utilities for Perl.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b basis.sh @endtp\n\n#     <td>Module defining the BASIS utilities for Bash.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @note Dummy versions of the C++ source files have been written by the\n\n#       function basis_add_utilities_library() beforehand. This is\n\n#       necessary because CMake's add_executable() and add_library() commands\n\n#       raise an error if any of the specified source files does not exist.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# executable target information\n",
        "Line" : 445,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# project ID -- used by print_version() in particular\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# C++\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# make sure that library target is added which is not the case yet\n\n# if the BASIS C++ utilities are not used by any project target, but\n\n# their build is forced via the BUILD_BASIS_UTILITIES_FOR_CXX option\n",
        "Line" : 457,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# paths - build tree\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# paths - installation\n",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# namespace\n",
        "Line" : 476,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# executable target information\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# configure source files\n",
        "Line" : 485,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Python\n",
        "Line" : 491,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# utilities available?\n",
        "Line" : 494,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# make sure that library target is added which is not the case yet\n\n# if the BASIS Python utilities are not used by any project target, but\n\n# their build is forced via the BUILD_BASIS_UTILITIES_FOR_PYTHON option\n",
        "Line" : 500,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# set target properties\n",
        "Line" : 504,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Perl\n",
        "Line" : 532,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# utilities available?\n",
        "Line" : 535,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# make sure that library target is added which is not the case yet\n\n# if the BASIS Perl utilities are not used by any project target, but\n\n# their build is forced via the BUILD_BASIS_UTILITIES_FOR_PERL option\n",
        "Line" : 541,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# set target properties\n",
        "Line" : 545,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Bash\n",
        "Line" : 564,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# utilities available?\n",
        "Line" : 567,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# make sure that library target is added which is not the case yet\n\n# if the BASIS Python utilities are not used by any project target, but\n\n# their build is forced via the BUILD_BASIS_UTILITIES_FOR_BASH option\n",
        "Line" : 577,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# set target properties\n",
        "Line" : 581,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Generate code for initialization of executable target information.\n\n#\n\n# This macro generates the initialization code of the executable target\n\n# information dictionaries for different supported programming languages.\n\n# In case of C++, the source file has been configured and copied to the binary\n\n# tree in a first configuration pass such that it could be used in basis_add_*()\n\n# commands which check the existence of the arguments immediately.\n\n# As the generation of the initialization code requires a complete list of\n\n# build targets (cached in @c BASIS_TARGETS), this function has to be called\n\n# after all targets have been added and finalized (in case of custom targets).\n\n#\n\n# @param [in] CXX    Request code for C++.\n\n# @param [in] PYTHON Request code for Python.\n\n# @param [in] PERL   Request code for Perl.\n\n# @param [in] BASH   Request code for Bash.\n\n#\n\n# @returns Sets the following variables for each requested language.\n\n#\n\n# @retval EXECUTABLE_TARGET_INFO_CXX      C++ code for both build tree and installation.\n\n# @retval EXECUTABLE_TARGET_INFO_PYTHON_B Python code for build tree.\n\n# @retval EXECUTABLE_TARGET_INFO_PYTHON_I Python code for installation.\n\n# @retval EXECUTABLE_TARGET_INFO_PERL_B   Perl code for build tree.\n\n# @retval EXECUTABLE_TARGET_INFO_PERL_I   Perl code for installation.\n\n# @retval EXECUTABLE_TARGET_INFO_BASH_B   Bash code for build tree.\n\n# @retval EXECUTABLE_TARGET_INFO_BASH_I   Bash code for installation.\n\n# @retval EXECUTABLE_TARGET_INFO_BASH_A   Bash code to set aliases.\n\n# @retval EXECUTABLE_TARGET_INFO_BASH_S   Bash code to set short aliases.\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# --------------------------------------------------------------------------\n",
        "Line" : 642,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# local constants\n",
        "Line" : 646,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# lists of executable targets and their location\n",
        "Line" : 649,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# project targets\n",
        "Line" : 654,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# imported targets\n",
        "Line" : 670,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# get corresponding UID (target may be imported from other module)\n",
        "Line" : 681,
        "CharPositionInLine" : 6
      },
      "82" : {
        "Text" : "# skip already considered executables\n",
        "Line" : 683,
        "CharPositionInLine" : 6
      },
      "83" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# determine maximum length of target alias for prettier output\n",
        "Line" : 697,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# generate source code\n",
        "Line" : 707,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# C++    - build tree and install tree version, constructor block\n\n# Python - build tree version\n\n# Python - install tree version\n\n# Perl   - build tree version, hash entries\n\n# Perl   - install tree version, hash entries\n\n# Bash   - build tree version\n\n# Bash   - install tree version\n\n# Bash   - aliases\n\n# Bash   - short aliases\n",
        "Line" : 709,
        "CharPositionInLine" : 13
      },
      "86" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# get executable information\n",
        "Line" : 727,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# installation path (relative) to different library paths\n",
        "Line" : 734,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# target UID including project namespace\n",
        "Line" : 746,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# indentation after dictionary key, i.e., alias\n",
        "Line" : 748,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# C++\n",
        "Line" : 756,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# Python\n",
        "Line" : 771,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# Perl\n",
        "Line" : 781,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# Bash\n",
        "Line" : 797,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# hash entry\n",
        "Line" : 800,
        "CharPositionInLine" : 6
      },
      "95" : {
        "Text" : "# alias\n",
        "Line" : 807,
        "CharPositionInLine" : 6
      },
      "96" : {
        "Text" : "# short alias (if target belongs to this project)\n",
        "Line" : 809,
        "CharPositionInLine" : 6
      },
      "97" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# next executable target\n",
        "Line" : 815,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# remove unnecessary leading newlines\n",
        "Line" : 819,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# return\n",
        "Line" : 830,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "## @}\n\n# end of Doxygen group\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 101
    },
    "src/cmake/glob.cmake" : {
      "ObjectId" : "4275e523a351708a2f7601eff48422e886712b58",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  glob.cmake\n\n# @brief Glob source files and optionally compare to previous glob result.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# touching this file which is included by basis_add_glob_target()\n\n# re-triggers CMake upon the next build\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/cmake/uninstall/CMakeLists.txt" : {
      "ObjectId" : "b683d6fcb4bfe2e660714f1091fcdd6b1bb4b5ad",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Common build configuration file to add uninstaller.\n\n#\n\n# CMake does not support the creation of an uninstaller. Therefore, we add\n\n# code to the cmake_install.cmake file which writes the content of the\n\n# install_manifest.txt file to a file in the installation tree. As this\n\n# code has to be executed after all files were executed and CMake includes\n\n# the cmake_install.cmake files of subdirectories at last, this CMakeLists.txt\n\n# is placed into a shared directory of the BASIS installation which is added\n\n# to every BASIS project using add_subdirctory() at the very end of the root\n\n# CMakeLists.txt file.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install CMake-based uninstall script\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# write executable uninstaller\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# write install manifest at the very end of the installation\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/sphinx/CMakeLists.txt" : {
      "ObjectId" : "5f48b2fdca0bd4a511c5b471895cc8b02632db77",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of Sphinx extensions and themes.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/sphinx/extensions/CMakeLists.txt" : {
      "ObjectId" : "13f7d54a8885e6bf20270f9550e52fa199741d38",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of Sphinx extensions.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "32dc75aed70122f6a80d3d7ec5cb25517f3c6156",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of command-line tools.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# project management\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# platform independent \"which\" command - not required on Unix\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# doxygen filters\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO Implement BASIS::DoxyFilter::CMake Perl module and remove this executable.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# testing tools\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# automated testing\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# wraps svn command\n\n# executes test task\n\n# executes scheduled tests\n\n# test cron job\n\n# main wrapper\n",
        "Line" : 72,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 9
    },
    "src/utilities/CMakeLists.txt" : {
      "ObjectId" : "91e6e8e15ce3097dff78d8e7dd19c6c9960c434a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# C++ utilities\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Java utilities\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Python utilities\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Perl utilities\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# BASH utilities\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# MATLAB utilities\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/utilities/bash/CMakeLists.txt" : {
      "ObjectId" : "5b8074d7d5d3959b6bea23d963f8c9394511251f",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of BASH utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# template files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project-specific utilities\n",
        "Line" : 19,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# utilities\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# constants, build configuration\n\n# fundamental core functions\n\n# path manipulation functions\n\n# project independent utilities\n\n# command-line parsing library\n\n# unit testing framework\n",
        "Line" : 30,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 6
    },
    "src/utilities/cxx/CMakeLists.txt" : {
      "ObjectId" : "4c7b2f80cda5f94fd9b17c06c70f6253a3a59b50",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of C++ utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# template files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project-specific utility functions\n",
        "Line" : 19,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# utilities\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# operating system dependent functions\n\n# file/directory path related functions\n\n# subprocess execution\n\n# standard I/O functions\n\n# command-line parsing\n\n# project-independent utility functions\n\n# this *is* the BASIS utilities library\n",
        "Line" : 30,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# unit testing\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/utilities/java/CMakeLists.txt" : {
      "ObjectId" : "c6db74bc715876999481ebb2cb3501d081a285f5",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of Java utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/utilities/matlab/CMakeLists.txt" : {
      "ObjectId" : "0683b4747803a582f30fe3502d7c7d0c339b926a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of MATLAB utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/utilities/perl/CMakeLists.txt" : {
      "ObjectId" : "5409dd09bfb472d875eb5efc0f841af751690109",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of Perl utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# template files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# utilities\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CPAN modules\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/utilities/python/CMakeLists.txt" : {
      "ObjectId" : "07a4e471a93d2446424a9e6c5e7b2adea2287078",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n# Copyright (c) 2011-2012 University of Pennsylvania\n\n# Copyright (c) 2013-2014 Andreas Schuh\n\n# All rights reserved.\n\n#\n\n# See COPYING file for license information or visit\n\n# http://opensource.andreasschuh.com/cmake-basis/download.html#license\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of Python utilities.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# template files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# default package configuration file\n\n# project-specific utilities\n",
        "Line" : 19,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# utilities\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "5f745a481e5ff44a98f35edb4ae9a0800eb0ac79",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of software testing.\n\n#\n\n# Unit tests test only single functions, classes, and modules of the software.\n\n# System tests, on the other side, execute the programs of this package with\n\n# given test input data and compare the output of the programs to the expected\n\n# results.\n\n#\n\n# The built test executables can be found in @c TESTING_RUNTIME_DIR.\n\n# The test output shall be written to @c TESTING_OUTPUT_DIR. In most cases,\n\n# a subdirectory for each test should be created under this output directory.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# settings\n\n# ============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## @brief Directory of BASIS used by tests to build test projects.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## @brief Build type used to build test projects.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## @brief Compiler flags to use for build of test projects.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## @brief Compiler flags to use for build of test projects.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## @brief Linker flags to use for build of test projects.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## @brief Linker flags to use for build of test projects.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## @brief Linker flags to use for build of test projects.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## @brief Whether Python utilities are build.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## @brief Whether Perl utilities are build.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## @brief Whether BASH utilities are build.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ============================================================================\n\n# utilities\n\n# ============================================================================\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ============================================================================\n\n# subdirectories\n\n# ============================================================================\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "test/cmake/CMakeLists.txt" : {
      "ObjectId" : "2be9cb83b531c1778552f870f06a45d26f9ca11e",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of tests of CMake modules.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# auxiliary functions\n\n# ============================================================================\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# common CMake test command arguments\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Auxiliary command to add a scriptable CMake test command\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## @brief Auxiliary command to add a CMake build configuration test\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ============================================================================\n\n# tests\n\n# ============================================================================\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# tests of CommonTools.cmake functions\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# test use MATLAB Compiler and MEX-script\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "test/cmake/test_string_manipulation.cmake" : {
      "ObjectId" : "24802049642b02853ce5e2b8543574d5e6c9d22a",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  test_basis_target_uid.cmake\n\n# @brief Test basis_target_uid() and related functions.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# include modules\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# test basis_sanitize_for_regex()\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/cmake/test_target_properties.cmake" : {
      "ObjectId" : "84788f9e2fac488eb29cc68667ec408170d0985d",
      "LastModified" : "2015-10-15T22:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  test_target_properties.cmake\n\n# @brief Test basis_set_target_properites() and basis_get_target_properties().\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/ressources/CMakeLists.txt" : {
      "ObjectId" : "b8c1030a3dd809453c7b99eab33c8e9b59937001",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of testing ressources.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/tools/CMakeLists.txt" : {
      "ObjectId" : "8751af5835805d81821ced1fb80cc96b809b5a46",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of tests for command-line tools.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/utilities/CMakeLists.txt" : {
      "ObjectId" : "b914e4c2de43cc1c53fc9cecdb670a4914c6b1dc",
      "LastModified" : "2014-03-28T04:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  CMakeLists.txt\n\n# @brief Build configuration of tests for utilities.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# project independent utilities\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to test if there is no memory leak\n",
        "Line" : 20,
        "CharPositionInLine" : 59
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# project-specific utilities\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 144
  },
  "ElapsedTime" : 2588
}