{
  "Repository" : "13354",
  "Revision" : "HEAD",
  "ObjectId" : "0c87840dc7d9460c2cb5feaeefec299d0d3d62ec",
  "CommitTime" : "2018-02-22T04:55:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d0ed1f386520dc535782e69e9d253a363df6c3b5",
      "LastModified" : "2018-02-22T04:55:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For FcitxMacro\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# must be the first\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/CMakeLists.txt" : {
      "ObjectId" : "d9d98e0b82fc7cbe3bbd0ab3ef444518a16d29a5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FcitxConfig.cmake" : {
      "ObjectId" : "0b496ea6249a372d7219dc5a0e83e004369fe4c5",
      "LastModified" : "2012-12-27T17:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate the fcitx4 library\n\n# This module defines\n\n#  FCITX4_FCITX_FOUND found libfcitx\n\n#  FCITX4_FCITX_LIBRARIES the, library to link against\n\n#  FCITX4_FCITX_LIBRARY_DIRS, where to find library\n\n#  FCITX4_FCITX_INCLUDE_DIRS, where to find headers\n\n#  FCITX4_FCITX_CONFIG_FOUND found libfcitx-config\n\n#  FCITX4_FCITX_CONFIG_LIBRARIES, library to link against\n\n#  FCITX4_FCITX_CONFIG_LIBRARY_DIRS, where to find library\n\n#  FCITX4_FCITX_CONFIG_INCLUDE_DIRS, where to find headers\n\n#  FCITX4_FCITX_UTILS_FOUND found libfcitx-utils\n\n#  FCITX4_FCITX_UTILS_LIBRARIES, library to link against\n\n#  FCITX4_FCITX_UTILS_LIBRARY_DIRS, where to find library\n\n#  FCITX4_FCITX_UTILS_INCLUDE_DIRS, where to find headers\n\n#  FCITX4_ADDON_INSTALL_DIR directory to install fcitx addon\n\n#  FCITX4_CONFIGDESC_INSTALL_DIR directory to install fcitx configuration description file\n\n#  FCITX4_ADDON_CONFIG_INSTALL_DIR directory to install fcitx addon config\n\n#  FCITX4_PACKAGE_NAME package name of fcitx, normally is \"fcitx\"\n\n#  FCITX4_VERSION version of fcitx\n\n#\n\n# Please look in FcitxMacro.cmake for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# Copyright 2011 Xuetian Weng\n\n#\n\n# Distributed under the GPLv2 License\n\n# see accompanying file COPYRIGHT for details\n\n#==============================================================================\n\n# (To distribute this file outside of Fcitx, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the suffix must be used since KDEDIRS can be a list of directories which don't have bin/ appended\n",
        "Line" : 68,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/FcitxMacro.cmake" : {
      "ObjectId" : "e02c27a11e0389ffc558635a5667372fc1d9f557",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is included by FindFcitx4.cmake, don't include it directly.\n\n# - Providing Useful cmake functions for fcitx development\n\n#\n\n# Functions for handling source files and building the project:\n\n#     fcitx_parse_arguments\n\n#     fcitx_add_addon_full\n\n#     fcitx_install_addon_desc\n\n#     fcitx_translate_add_sources\n\n#     fcitx_translate_add_apply_source\n\n#     fcitx_translate_set_pot_target\n\n#     fcitx_translate_add_po_file\n\n#     _fcitx_add_uninstall_target\n\n#     fcitx_download\n\n# Functions to extend fcitx's build (mainly translation) system:\n\n#     _fcitx_translate_add_handler\n\n#     _fcitx_translate_add_apply_handler\n\n#\n\n# Please refer to the descriptions before each functions' definition\n\n# for usage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# Copyright 2011, 2012 Xuetian Weng\n\n# Copyright 2012, 2013 Yichao Yu\n\n#\n\n# Distributed under the GPLv2 License\n\n# see accompanying file COPYRIGHT for details\n\n#==============================================================================\n\n# (To distribute this file outside of Fcitx, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following definition of fcitx_parse_arguments is copied from\n\n# CMakeParseArguments.cmake, which is a standard cmake module since 2.8.3,\n\n# with some minor format changes and is renamed to avoid conflict with newer\n\n# cmake versions. (see cmake documentation for usage)\n\n# It is included to lower the required cmake version.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file incorporates work covered by the following copyright and\n\n# permission notice:\n\n#\n\n#    =========================================================================\n\n#     Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n#     Distributed under the OSI-approved BSD License (the \"License\");\n\n#     see accompanying file Copyright.txt for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even the\n\n#     implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#     See the License for more information.\n\n#    =========================================================================\n\n#     (To distribute this file outside of CMake, substitute the full\n\n#      License text for the above reference.)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Function to create a unique target in certain namespace\n\n# Useful when it is hard to determine a unique legal target name\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add global targets\n\n# (run only once even if the file is included many times)\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# not 0\n",
        "Line" : 195,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# options:\n\n#     NO_INSTALL: Do not install any files or compile any sources\n\n#         useful when the module is disabled but the generated header is needed\n\n#     SCAN: Generate api header, the path of the input file is determined by the\n\n#         FXADDON_SRC argument and the name of the generated header file is\n\n#         determined by the FXADDON_GEN argument.\n\n#     SCAN_PRIV: Generate add function header, the path of the input file is\n\n#         determined by the FXADDON_SRC argument and the name of the\n\n#         generated header file is determined by the ADDFUNCTIONS_GEN argument.\n\n#     SCAN_IN: Generate api header from .in, the path of the fxaddon.in file\n\n#         (without the .in suffix) is determined by the\n\n#         FXADDON_SRC argument and the name of the generated header file is\n\n#         determined by the FXADDON_GEN argument.\n\n#     DESC: Install main config-desc file, the path of the file (with the .desc\n\n#         suffix) is determined by the DESC_SRC argument.\n\n#     SCAN_NO_INSTALL: Do not install generated api header.\n\n# single value arguments:\n\n#     HEADER_DIR: The subdirectory under fcitx/module to which the header files\n\n#         of the addon will be installed (default ${short_name})\n\n#     LIB_NAME: The name of the addon binary (default fcitx-${short_name})\n\n#     FXADDON_SRC: the path of the fxaddon file. Setting this argument will\n\n#          automatically set the SCAN option as well, when using with SCAN_IN\n\n#          the value of this argument shouldn't contain the .in suffix\n\n#          (default: fcitx-${short_name}.fxaddon)\n\n#     FXADDON_GEN: the name of the generated header file. (path will be ignored)\n\n#          Setting this argument will automatically set the SCAN option as well.\n\n#          (default: fcitx-${short_name}.h)\n\n#     ADDFUNCTIONS_GEN: the name of the generated add function header file.\n\n#          (path will be ignored) Setting this argument will automatically\n\n#          set the SCAN_PRIV option as well.\n\n#          (default: fcitx-${short_name}-addfunctions.h)\n\n#     CONF_SRC: the path of the addon conf file (without the .in suffix)\n\n#         (default: fcitx-${short_name}.conf)\n\n#     DESC_SRC: the path of the main config-desc file. Setting this argument\n\n#          will automatically set the DESC option as well.\n\n#          (default: fcitx-${short_name}.desc)\n\n#     UNIQUE_NAME: the unique name of the addon.\n\n#          (default: fcitx-${short_name})\n\n# multiple values arguments:\n\n#     SOURCES: source files to compile the addon.\n\n#     HEADERS: addon header files to install (besides the generated one).\n\n#     EXTRA_DESC: extra config-desc files to install.\n\n#     EXTRA_PO: extra files to scan string for translation\n\n#     LINK_LIBS: external libraies to link\n\n#     DEPENDS: extra targets or files the addon library should depend on.\n\n#     IM_CONFIG: input method config files.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add additional config-desc files, the file will be added to extracte\n\n# po strings from and will be installed\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add files to be translated\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Should be used in cmake modules, add a handler script to generate a po file\n\n# from a set of certain type of files, the script must be executable.\n\n#\n\n# When classifying source files, the script will be called with -c as the first\n\n# argument and the file name as the second one. The script should return 0 in\n\n# this case to indicate a source file can be handled and should return non-zero\n\n# otherwise.\n\n#\n\n# When extracting po strings from source files, the script will be called with\n\n# first argument -w, the second argument the file name of the output po file\n\n# followed by a list of source files to extract po strings from. The script\n\n# should extract po strings from the given source files and write the result\n\n# to the po file.\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add files to apply translation\n\n# this will generate a rule to generate ${out_file} from ${in_file} by\n\n# l10n it using the handler script found.\n\n# Proper handler script has to be added before this macro is called, or there\n\n# will be a FATAL_ERROR\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Should be used in cmake modules, add a handler script to update a set of\n\n# certain type of files from the translated mo files.\n\n# The script must be executable.\n\n#\n\n# When classifying source files, the script will be called with first argument\n\n# the directory name po's parse results are in, the second argument a file\n\n# containing space separated language code and translated po file name\n\n# in each line, the third argument -c, followed by the file name of the input\n\n# and output files (argument 4 and 5). The script should decide from the\n\n# filename of input and output files to decide whether it can handle this\n\n# conversion and should return 0 if it can or non-zero otherwise.\n\n#\n\n# When doing the l18n conversion, the script will be called with arguments\n\n# the same with the previous case except the third argument is -w. The script\n\n# should read language code list from the file given in the second argument\n\n# fetch translation from either files in the first argument or po files in\n\n# the second argument and then use these to l18n input file to output files.\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the pot file and the target to update it\n\n# (the second time it is called in one project will raise an error)\n\n# A target with name ${target} will be added to update ${pot_file} and\n\n# po files added by fcitx_translate_add_po_file from all the sources added by\n\n# `fcitx_translate_add_sources`.\n\n# This also generate rules and targets to generate mo files from po files\n\n# and install them to the given ${domain}\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# make pot will require bash, but this is only a dev time dependency.\n",
        "Line" : 702,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Add translated po files to be updated and installed.\n\n# Need to be done before any files that needs to be l10n'ized is added.\n\n# (or the recompile dependency won't be correct although there shouldn't be\n\n# any problem for one-time build.)\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# message(WARNING \"PO files should be added before the pot target is set.\")\n",
        "Line" : 764,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add a uninstall target to the project\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Download a file\n\n# The file will not be download if the target file already exist. An optional\n\n# md5sum can be provided in which case the md5sum of the target file will\n\n# be checked against this value and redownload/abort if the check failed.\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# This is the rule to create the target file, it is depending of the target\n\n# that does the real download so any files/targets that is depending on this\n\n# file will be run after the download finished.\n\n#\n\n# Since this rule doesn't have any command or file dependencies, cmake\n\n# won't notice any change in the rule and therefore it won't remove the\n\n# target file (and therefore triggers an unwilling redownload) if the real\n\n# rule (which is in the target defined above) has changed.\n\n#\n\n# This behavior is designed to be friendly for a build from cache with all\n\n# necessary files already downloaded so that a change in the\n\n# build options/url/checksum will not cause cmake to remove the target file\n\n# if it has already been updated correctly.\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# for fcitx_scanner_addon\n",
        "Line" : 943,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "cmake/FindDL.cmake" : {
      "ObjectId" : "8d1df7bba56419d00ed17e4fb7e3632b488c2c9d",
      "LastModified" : "2011-07-28T02:32:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find where dlopen and friends are located.\n\n# DL_FOUND - system has dynamic linking interface available\n\n# DL_INCLUDE_DIR - where dlfcn.h is located.\n\n# DL_LIBRARIES - libraries needed to use dlopen\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If dlopen can be found without linking in dl then dlopen is part\n\n# of libc, so don't need to link extra libs.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindEnchant.cmake" : {
      "ObjectId" : "7c182e6a3ae31395bdc531858fc12437cfe52a78",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Enchant libraries\n\n# Once done this will define\n\n#\n\n#  ENCHANT_FOUND - system has ENCHANT\n\n#  ENCHANT_INCLUDE_DIR - the ENCHANT include directory\n\n#  ENCHANT_LIBRARIES - ENCHANT library\n\n#\n\n# Copyright (c) 2012 CSSlayer <wengxt@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindGettextPo.cmake" : {
      "ObjectId" : "afcd3f610823de8f66e59b98fa5ce07b1cc4abb2",
      "LastModified" : "2012-12-27T17:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the GETTEXT-PO libraries\n\n# Once done this will define\n\n#\n\n#  GETTEXTPO_FOUND - system has GETTEXT-PO\n\n#  GETTEXTPO_INCLUDE_DIR - the GETTEXT-PO include directory\n\n#  GETTEXTPO_LIBRARIES - GETTEXT-PO library\n\n#\n\n# Copyright (c) 2012 Yichao Yu <yyc1992@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindIsoCodes.cmake" : {
      "ObjectId" : "384c82bc86e5324271235f600692ac6b571bde4f",
      "LastModified" : "2012-12-27T17:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the IsoCodes libraries\n\n# Once done this will define\n\n#\n\n#  ISOCODES_FOUND - system has ISOCODES\n\n#  ISOCODES_INCLUDE_DIR - the ISOCODES include directory\n\n#  ISOCODES_LIBRARIES - ISOCODES library\n\n#\n\n# Copyright (c) 2012 CSSlayer <wengxt@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindLibexecinfo.cmake" : {
      "ObjectId" : "46bdfb5e026697a965e27f81c265785950701b56",
      "LastModified" : "2012-12-27T17:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find LibExecinfo functionality\n\n# Once done this will define\n\n#\n\n#  LIBEXECINFO_FOUND - system has LibExecinfo\n\n#  LIBEXECINFO_INCLUDE_DIR - LibExecinfo include directory\n\n#  LIBEXECINFO_LIBRARIES - Libraries needed to use LibExecinfo\n\n#\n\n# TODO: This will enable translations only if Gettext functionality is\n\n# present in libc. Must have more robust system for release, where Gettext\n\n# functionality can also reside in standalone Gettext library, or the one\n\n# embedded within kdelibs (cf. gettext.m4 from Gettext source).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Chusslove Illich, <caslav.ilic@gmx.net>\n\n# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindLibiconv.cmake" : {
      "ObjectId" : "4d72dd29bf5a650e36edc0dd0ee535d7225b7787",
      "LastModified" : "2012-12-27T17:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Libiconv functionality\n\n# Once done this will define\n\n#\n\n#  LIBICONV_FOUND - system has Libiconv\n\n#  LIBICONV_INCLUDE_DIR - Libiconv include directory\n\n#  LIBICONV_LIBRARIES - Libraries needed to use Libiconv\n\n#  LIBICONV_SECOND_ARGUMENT_IS_CONST - iconv second argument is const\n\n#\n\n# TODO: This will enable translations only if Gettext functionality is\n\n# present in libc. Must have more robust system for release, where Gettext\n\n# functionality can also reside in standalone Gettext library, or the one\n\n# embedded within kdelibs (cf. gettext.m4 from Gettext source).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Chusslove Illich, <caslav.ilic@gmx.net>\n\n# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindLibintl.cmake" : {
      "ObjectId" : "52ae647938a481a96288056723fde903138b72ad",
      "LastModified" : "2012-12-27T17:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Libintl functionality\n\n# Once done this will define\n\n#\n\n#  LIBINTL_FOUND - system has Libintl\n\n#  LIBINTL_INCLUDE_DIR - Libintl include directory\n\n#  LIBINTL_LIBRARIES - Libraries needed to use Libintl\n\n#\n\n# TODO: This will enable translations only if Gettext functionality is\n\n# present in libc. Must have more robust system for release, where Gettext\n\n# functionality can also reside in standalone Gettext library, or the one\n\n# embedded within kdelibs (cf. gettext.m4 from Gettext source).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Chusslove Illich, <caslav.ilic@gmx.net>\n\n# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindLibkvm.cmake" : {
      "ObjectId" : "4453fd4543763b9091dc63cd0f8d0d8f733bac11",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Libkvm functionality\n\n# Once done this will define\n\n#\n\n#  LIBKVM_FOUND - system has Libkvm\n\n#  LIBKVM_INCLUDE_DIR - Libkvm include directory\n\n#  LIBKVM_LIBRARIES - Libraries needed to use Libkvm\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLua.cmake" : {
      "ObjectId" : "3887b74b9f7c2ec1f5ab1057b18f3ec1c17d6259",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIRS, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2012 Yichao Yu <yyc1992@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This file incorporates work covered by the following copyright and\n\n# permission notice:\n\n#    =========================================================================\n\n#     Copyright 2007-2009 Kitware, Inc.\n\n#\n\n#     Distributed under the OSI-approved BSD License (the \"License\");\n\n#     see accompanying file Copyright.txt for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even the\n\n#     implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#     See the License for more information.\n\n#    =========================================================================\n\n#     (To distribute this file outside of CMake, substitute the full\n\n#      License text for the above reference.)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# try best to find lua52\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Too lazy to increase indentation...\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindOpenCC.cmake" : {
      "ObjectId" : "a883a543eded33d2223369a6f672bde7279e5738",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Opencc libraries\n\n# Once done this will define\n\n#\n\n#  OPENCC_FOUND - system has OPENCC\n\n#  OPENCC_INCLUDE_DIR - the OPENCC include directory\n\n#  OPENCC_LIBRARIES - OPENCC library\n\n#\n\n# Copyright (c) 2012 CSSlayer <wengxt@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindPresage.cmake" : {
      "ObjectId" : "d7a04fbf1f0e14a00e338426f10c2ae7da7c6b0d",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the PRESAGE libraries\n\n# Once done this will define\n\n#\n\n#  PRESAGE_FOUND - system has PRESAGE\n\n#  PRESAGE_INCLUDE_DIR - the PRESAGE include directory\n\n#  PRESAGE_LIBRARIES - PRESAGE library\n\n#\n\n# Copyright (c) 2012 CSSlayer <wengxt@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# so here is the api test for presage since fcitx-spell uses dlopen to load\n\n# presage at runtime which would have the risk of api non-compatible.\n\n# not really sure if this is the right place to put this test (since only a\n\n# small fraction of api are tested) but I don't feel like this should be\n\n# put in CMakeLists.txt of fcitx-spell either\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindPthread.cmake" : {
      "ObjectId" : "982147b24fbe51797bbf109ab0054d0a590cfdd9",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Pthread functionality\n\n# Once done this will define\n\n#\n\n#  PTHREAD_FOUND - system has Pthread\n\n#  PTHREAD_INCLUDE_DIR - Pthread include directory\n\n#  PTHREAD_LIBRARIES - Libraries needed to use Pthread\n\n#\n\n# TODO: This will enable translations only if Gettext functionality is\n\n# present in libc. Must have more robust system for release, where Gettext\n\n# functionality can also reside in standalone Gettext library, or the one\n\n# embedded within kdelibs (cf. gettext.m4 from Gettext source).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Chusslove Illich, <caslav.ilic@gmx.net>\n\n# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindXKBCommon.cmake" : {
      "ObjectId" : "a645584141474535c7a04c640b9c7f498ed45ee0",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note that this list needs to be ordered such that any component\n\n# appears after its dependencies\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindXKeyboardConfig.cmake" : {
      "ObjectId" : "5728debafb2dbb44e53450905c8cefb344ae262e",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindXkbFile.cmake" : {
      "ObjectId" : "861b37f00b2007a104e64e18d4852a3a1709223f",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the XKBFILE libraries\n\n# Once done this will define\n\n#\n\n#  XKBFILE_FOUND - system has XKBFILE\n\n#  XKBFILE_INCLUDE_DIR - the XKBFILE include directory\n\n#  XKBFILE_LIBRARIES - XKBFILE library\n\n#\n\n# Copyright (c) 2012 CSSlayer <wengxt@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/GObjectIntrospection.cmake" : {
      "ObjectId" : "7ca9de68343ff26142f19542f266f7a3570554ca",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# make sure that the user set some variables...\n\n###########################################################################\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# the caller didn't give us a namespace, try to grab it from the filename\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# the caller didn't give us a namespace version,\n\n# try to grab it from the filemenu\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Fix up some of our arguments\n\n###########################################################################\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# if library is set, we need to prepend --library= on to it\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# if program has been set, we prepend --program= on to it\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# if program_arg has been set, we prepend --program-arg= on to it\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# if the user specified PACKAGE_EXPORT,\n\n# we need to prefix each with --pkg-export\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "###########################################################################\n\n# Clean up any of the multivalue items that all need to be prefixed\n\n###########################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# if the user specified IDENTIFIER_PREFIXES,\n\n# we need to prefix each with --identifier-prefix\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if the user specified SYMBOL_PREFIXES,\n\n# we need to prefix each with --symbol-prefix=\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# if the user specified PACKAGES we need to prefix each with --pkg\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# if the user specified PACKAGES we need to prefix each with --pkg\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# if the user specified BUILT_SOURCES, we need to get their paths since\n\n# they could be in CMAKE_CURRENT_BUILD_DIR\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "###########################################################################\n\n# Add the custom commands\n\n###########################################################################\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# create the name of the typelib\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "cmake/UseDoxygen.cmake" : {
      "ObjectId" : "b92370fd976339e13d27a6cb9cd9de15fd3ab79c",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run Doxygen\n\n#\n\n# Adds a doxygen target that runs doxygen to generate the html\n\n# and optionally the LaTeX API documentation.\n\n# The doxygen target is added to the doc target as a dependency.\n\n# i.e.: the API documentation is built with:\n\n#  make doc\n\n#\n\n# USAGE: GLOBAL INSTALL\n\n#\n\n# Install it with:\n\n#  cmake ./ && sudo make install\n\n# Add the following to the CMakeLists.txt of your project:\n\n#  include(UseDoxygen OPTIONAL)\n\n# Optionally copy Doxyfile.in in the directory of CMakeLists.txt and edit it.\n\n#\n\n# USAGE: INCLUDE IN PROJECT\n\n#\n\n#  set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n\n#  include(UseDoxygen)\n\n# Add the Doxyfile.in and UseDoxygen.cmake files to the projects source directory.\n\n#\n\n#\n\n# CONFIGURATION\n\n#\n\n# To configure Doxygen you can edit Doxyfile.in and set some variables in cmake.\n\n# Variables you may define are:\n\n#  DOXYFILE_SOURCE_DIR - Path where the Doxygen input files are.\n\n#  \tDefaults to the current source directory.\n\n#  DOXYFILE_EXTRA_SOURCES - Additional source diretories/files for Doxygen to scan.\n\n#  \tThe Paths should be in double quotes and separated by space. e.g.:\n\n#  \t \"${CMAKE_CURRENT_BINARY_DIR}/foo.c\" \"${CMAKE_CURRENT_BINARY_DIR}/bar/\"\n\n#\n\n#  DOXYFILE_OUTPUT_DIR - Path where the Doxygen output is stored.\n\n#  \tDefaults to \"${CMAKE_CURRENT_BINARY_DIR}/doc\".\n\n#\n\n#  DOXYFILE_LATEX - ON/OFF; Set to \"ON\" if you want the LaTeX documentation\n\n#  \tto be built.\n\n#  DOXYFILE_LATEX_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen LaTeX output is stored. Defaults to \"latex\".\n\n#\n\n#  DOXYFILE_HTML_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen html output is stored. Defaults to \"html\".\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Copyright (c) 2009, 2010, 2011 Tobias Rautenkranz <tobias@rautenkranz.ch>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## LaTeX\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "0bf2ca855fa794e216d51541543f8beadecbc035",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/icon/CMakeLists.txt" : {
      "ObjectId" : "1c1bc1fa8027d9b8efc3d75fd6f17e4d2cc0cdbe",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/script/CMakeLists.txt" : {
      "ObjectId" : "65c198ad0a9b06033ff165677a1926b56a44cdcc",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "32f8d3da1fa96ce83fc2a34f3d846b4f689dc3bf",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/man/CMakeLists.txt" : {
      "ObjectId" : "fc9fdc77687e2586be8c8803d7df646bc9907d32",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "79f0982c8a491446be54796b3d7814d0b43a01d4",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "skin/CMakeLists.txt" : {
      "ObjectId" : "82d43cc200d0435ed10cb40572be95e193e3c566",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "9bfb25439bb741cc067eba78de4f859e6274e3df",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/core/CMakeLists.txt" : {
      "ObjectId" : "0884517f91bd14908d27d853f4c35ea97d17c048",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frontend/CMakeLists.txt" : {
      "ObjectId" : "fc57b253e02eeb15be2fa602a60459636fb81210",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frontend/gtk2/CMakeLists.txt" : {
      "ObjectId" : "8ae75cf4a28c9e407411e321f17d46aaf45c48ff",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frontend/gtk3/CMakeLists.txt" : {
      "ObjectId" : "123315aa6d35b8bb6cb83df006b25b8e75f6704d",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frontend/ipc/CMakeLists.txt" : {
      "ObjectId" : "b7bdecb3efdba1bb006b905d08a07a3e11e244f6",
      "LastModified" : "2017-10-04T04:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frontend/ipcportal/CMakeLists.txt" : {
      "ObjectId" : "d123f891cb7b6be84db3b56c1ae8b4148445c193",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frontend/qt/CMakeLists.txt" : {
      "ObjectId" : "0505cb65c2640ba12df625a502e03644a3ba4025",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/frontend/xim/CMakeLists.txt" : {
      "ObjectId" : "19b282c7dac5e0208cb699cd1196b7090c1765d8",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/im/CMakeLists.txt" : {
      "ObjectId" : "46b0975a2fc2b73b382415849df43cdbb1b4253e",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/im/keyboard/CMakeLists.txt" : {
      "ObjectId" : "f4dd43c9152a3b405dd7c61a6651f34c2dc341e2",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/im/pinyin/CMakeLists.txt" : {
      "ObjectId" : "1b29fa8e7e2ef41c0540bc58a9deed0e8bd9a4ef",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/im/pinyin/data/CMakeLists.txt" : {
      "ObjectId" : "5b8ac60daf12c0695d489516e520dc77f3355e2b",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/im/qw/CMakeLists.txt" : {
      "ObjectId" : "8152c320e819b45445f802d9b55eb59a021d0076",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/im/table/CMakeLists.txt" : {
      "ObjectId" : "d653a28e5a0cea386dcc356135f87e2c560e9475",
      "LastModified" : "2017-10-20T08:04:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/im/table/data/CMakeLists.txt" : {
      "ObjectId" : "8dc9b385f0ff7bdd13aad7e8cc11ff44d6560f76",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/CMakeLists.txt" : {
      "ObjectId" : "6ee92a4a0b483d81d245d7b5dfe6615236ed62b9",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/fcitx-config/CMakeLists.txt" : {
      "ObjectId" : "db941e2bb71530c8b8831cc9e0fd0607b3b522fd",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/fcitx-gclient/CMakeLists.txt" : {
      "ObjectId" : "ea1d50ff03be125a5ebe7693830369652970e716",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/fcitx-gclient/test/CMakeLists.txt" : {
      "ObjectId" : "75936f5c0d67de76068414e8ff430e16cd8edf61",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/fcitx-qt/CMakeLists.txt" : {
      "ObjectId" : "758719283da24b39ba8db87de858339411b01a29",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/fcitx-qt/test/CMakeLists.txt" : {
      "ObjectId" : "9f6024ac720cd7efb2cae3546261357e4a0e7f9a",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/fcitx-utils/CMakeLists.txt" : {
      "ObjectId" : "be230ccbd304348b6ba5698124be7787fb1aec94",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/fcitx/CMakeLists.txt" : {
      "ObjectId" : "42461faad37228323522e2d514049537b9a734eb",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/CMakeLists.txt" : {
      "ObjectId" : "904caa90e1fc488039b4fa1befe0a4f9d16a84e7",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/autoeng/CMakeLists.txt" : {
      "ObjectId" : "e47fc352dd69507d05bd63f501f532dc0c776e94",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/chttrans/CMakeLists.txt" : {
      "ObjectId" : "a42f6163a57f3ae63dc1edffd015e279bc0adb15",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/clipboard/CMakeLists.txt" : {
      "ObjectId" : "f496d11a37739043de0cfddc2f3143d6923bc16a",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# do not disable clipboard-x11 even if x11 is diabled, since fcitx-scanner and\n\n# fcitx_add_addon_full is capable for doing this.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/module/dbus/CMakeLists.txt" : {
      "ObjectId" : "6ab65422c0f1611abb67b7af0733a5a37059a8e7",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/freedesktop-notify/CMakeLists.txt" : {
      "ObjectId" : "826f0dce05b99377e6bceff90d0d622155d046e7",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/fullwidthchar/CMakeLists.txt" : {
      "ObjectId" : "abc516ed8fcf222f41c369b52b17d0db909782f7",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/imselector/CMakeLists.txt" : {
      "ObjectId" : "73528e7860c8ce3c7acc1887d4cd85a262f0464b",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/lua/CMakeLists.txt" : {
      "ObjectId" : "13452b3c9e13af5df516ac89830c4346fd4c50e6",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/notificationitem/CMakeLists.txt" : {
      "ObjectId" : "49a26a4627926d932fe25577c9f7fae7dacc6748",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/pinyin-enhance/CMakeLists.txt" : {
      "ObjectId" : "fca08a6da3c3c218d3fcdebf5c8c50b1f216b110",
      "LastModified" : "2017-10-20T08:04:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/pinyin-enhance/data/CMakeLists.txt" : {
      "ObjectId" : "38ca6345bd2ad3916f7b9a27194fee705bc3736c",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/punc/CMakeLists.txt" : {
      "ObjectId" : "dedb773cc5d6219e7390695a46dd13cbed82e50a",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/quickphrase/CMakeLists.txt" : {
      "ObjectId" : "e7f57703f3be18924387d380bc4ffa4c8d821525",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/remote/CMakeLists.txt" : {
      "ObjectId" : "16116e4b1d03ee9996cd50812ec20bc81213373e",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/spell/CMakeLists.txt" : {
      "ObjectId" : "0e098bd2348350827dd52a6496f8a2b72a8b049e",
      "LastModified" : "2017-10-20T08:04:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/spell/dict/CMakeLists.txt" : {
      "ObjectId" : "401630f4c395c8ff955052112f68b6e5f74deec4",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/unicode/CMakeLists.txt" : {
      "ObjectId" : "d3927edec501047e5d87f765813fd733e9d87f72",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/vk/CMakeLists.txt" : {
      "ObjectId" : "ff4ac456b02ee5e82e04dc2cd5989aa77828b785",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/x11/CMakeLists.txt" : {
      "ObjectId" : "1606ee6c22d3ba7d8f84b5c1a39d00c697a6e1f3",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/xkb/CMakeLists.txt" : {
      "ObjectId" : "593e3d237bb5b701a339c66ea687989ba4e8e9e8",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/module/xkbdbus/CMakeLists.txt" : {
      "ObjectId" : "c8570ad604aaade4c6842cf54d3f17718ca81e9c",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ui/CMakeLists.txt" : {
      "ObjectId" : "ab6c03ff6e4c656b335ac6c4a9555706ada55441",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ui/cairostuff/CMakeLists.txt" : {
      "ObjectId" : "4a81cb602af486fd063c7fea501e413c1534b6c1",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ui/classic/CMakeLists.txt" : {
      "ObjectId" : "f315ad15dee37b00dd3af9a73eb7d30b56ceccc0",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ui/kimpanel/CMakeLists.txt" : {
      "ObjectId" : "0444d9aadcbb41a0990b6691c1a934ce302b4642",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "27a14be244064784dbb1383c8687c22b9595c068",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "cfd5a837f3f9050373d89b8ddae893d7872a138d",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cli/CMakeLists.txt" : {
      "ObjectId" : "e8a9a1161d068582eed35cdbed32a5798a8fd60b",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/dev/CMakeLists.txt" : {
      "ObjectId" : "1778f1868f30179b17b3c39d6500ef0e30e86aeb",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/gui/CMakeLists.txt" : {
      "ObjectId" : "b1f930f61a251b9dba0bbd625a42801ff883d2a6",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/gui/wrapper/CMakeLists.txt" : {
      "ObjectId" : "5c911c4116f56fa509a7c46cf58bdb7927b380b0",
      "LastModified" : "2017-10-16T02:05:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 84
  },
  "ElapsedTime" : 3211
}