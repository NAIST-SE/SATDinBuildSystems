{
  "Repository" : "6015413",
  "Revision" : "HEAD",
  "ObjectId" : "55b8b1f2da587c96f38f572299d01f4ff44af351",
  "CommitTime" : "2018-10-18T15:13:22Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2e2511e699464153e9e334ed6dcf3d98e627cdd4",
      "LastModified" : "2017-10-13T13:14:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /CMakeLists.txt\n\n#\n\n# Main CMakeLists.txt file.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ===========================================================================\n\n# We require CMake 3.0.0. Since it is available in the currently stable\n\n# Debian, it should be available everywhere else, too.\n\n# ===========================================================================\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ===========================================================================\n\n# Warn People About the Perils Of In-Source Builds\n\n# ===========================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ===========================================================================\n\n# Setup Variables\n\n# ===========================================================================\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clear CTD executable list, will be set on reconfiguration.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ===========================================================================\n\n# Build System Configuration Variables\n\n# ===========================================================================\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ===========================================================================\n\n# Version Check Variables.\n\n# ===========================================================================\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ===========================================================================\n\n# Setup Modules and Find Packages.\n\n# ===========================================================================\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Note that the find modules in util/make take precedence\n\n# over the built-in ones from CMake.  This is used in\n\n# FindBZip2, for example which we slightly modify.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#message (STATUS \"CMAKE_MODULE_PATH is ${CMAKE_MODULE_PATH}\")\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ===========================================================================\n\n# Add contrib to CMAKE_FIND_ROOT_PATH.\n\n# ===========================================================================\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ===========================================================================\n\n# Build Mode Branches\n\n# ===========================================================================\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#set (SEQAN_PREFIX_SHARE .)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ===========================================================================\n\n# Include Subdirectories\n\n# ===========================================================================\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Tests, demos and manual are only built when building in DEVELOP mode.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ===========================================================================\n\n# Register Libraries (for GUI project generators)\n\n# ===========================================================================\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ===========================================================================\n\n# Include CPack\n\n# ===========================================================================\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ===========================================================================\n\n# Check Optional Libraries, Print Usage\n\n# ===========================================================================\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#include (FeatureSummary)\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ===========================================================================\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ===========================================================================\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "feba062f0c64766326cb3ce7b8ff0c54c409a36f",
      "LastModified" : "2016-03-14T16:40:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the core apps.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Register all apps in core.  The apps will be built in SEQAN_RELEASE mode or\n\n# the apps called ${app} in APP:${app} mode.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "apps/alf/CMakeLists.txt" : {
      "ObjectId" : "71f4995f8473d6cced3476327d48b46035f30917",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/alf/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for ALF.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install alf in ${PREFIX}/bin directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/alf for SeqAn release builds.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#seqan_add_app_test (alf)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include executable seqan_tcoffee in CTD structure.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "apps/bs_tools/CMakeLists.txt" : {
      "ObjectId" : "d9c509e000d96b9457e00fc55b0bb048f6cc261f",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/bs_tools/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for bs_tools.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Include bs_tools executables in CTD structure.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install bs_tools in ${PREFIX}/bin directory\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/bs_tools for SeqAn release builds.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#install (FILES example/fasta1.fa\n\n#               example/fasta2.fa\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# (weese:) temporarily disabled app test\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "apps/dfi/CMakeLists.txt" : {
      "ObjectId" : "c91dc21e12dcebdc37f721c633468d5d40bec2c9",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/dfi/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for DFI.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install dfi in ${PREFIX}/bin directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/dfi for SeqAn release builds.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include executable razers in CTD structure.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/fiona/CMakeLists.txt" : {
      "ObjectId" : "15d20435b41137a27949b66675b7c4007e3601c5",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: apps/fiona/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for fiona.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Stop here if we cannot find Boost or OpenMP.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# all windows compilers are currently broken with Fiona (in different ways)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add include directories.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#add_definitions(\"-DQGRAM_LENGTH=5\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install fiona in ${PREFIX}/bin directory\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/fiona for SeqAn release builds.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Include executable fiona in CTD structure.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "apps/fx_tools/CMakeLists.txt" : {
      "ObjectId" : "3323a78866ef6b8ec3dc9a403ae0dc51fa5c2ed6",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/fx_tools/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for fx_tools.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Setup SeqAn requirements.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Computation of coverage and C+G content from genome and mapping.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Computation of statistics on FASTQ files.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install fx_tools in ${PREFIX}/bin directory\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/fx_tools for SeqAn release builds.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#install (FILES example/fasta1.fa\n\n#               example/fasta2.fa\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#seqan_add_app_test (fx_tools)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include executable razers in CTD structure.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/gustaf/CMakeLists.txt" : {
      "ObjectId" : "695bac0d74a1ef2ac61194f7d602e35d94b0e498",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/gustaf/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for gustaf.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install gustaf in ${PREFIX}/bin directory\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/gustaf for SeqAn release builds.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "apps/insegt/CMakeLists.txt" : {
      "ObjectId" : "fcd368b4fc40ef2c56cb6691a74486c511c2fd36",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/insegt/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for insegt.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install insegt in ${PREFIX}/bin directory\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/insegt for SeqAn release builds.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add app tests if Python interpreter could be found.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ---------------------------------------------------------------------------- \n\n# Setup Common Tool Description for Generic Workflow Nodes \n\n# ---------------------------------------------------------------------------- \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include executable razers in CTD structure. \n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "apps/mason2/CMakeLists.txt" : {
      "ObjectId" : "2218187d9fb1f32118da16aa5cf6a2087ac3a8a8",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /mason2/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for mason2.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable C++11 in GCC and/or CLANG.\n\n#if (CMAKE_COMPILER_IS_GNUCXX OR COMPILER_IS_CLANG)\n\n#    add_definitions (\"-std=c++0x\")\n\n#endif (CMAKE_COMPILER_IS_GNUCXX OR COMPILER_IS_CLANG)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add include directories.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We define a library for the reusable parts of Mason.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Simulate random genomes.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Simulate methylation levels for gnome.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Simulate sequencing of fragments.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Simulation of structural variants into FASTA sequences.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The materializer reads in FASTA and VCF and writes out FASTA.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The end-to-end read simulator includes materialization and fragment sampling.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Simulation splicing given a reference, GFF/GTF file, and possibly VCF for variants.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Tests for some of the library functionality.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Include mason executables in CTD structure.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Install Mason binaries in ${PREFIX}/bin directory\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/mason2 for SeqAn release builds.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "apps/micro_razers/CMakeLists.txt" : {
      "ObjectId" : "1a4193d4c3895f121b53c1e9cddb3b53be85d840",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/micro_razers/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for MicroRazerS.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install micro_razers in ${PREFIX}/bin directory\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/micro_razers for SeqAn release builds.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "apps/ngs_roi/CMakeLists.txt" : {
      "ObjectId" : "9f79b0ab0d254bea02c768a42512de082a98ed86",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  NGS: Regions of Interest Analysis\n\n# ===========================================================================\n\n# File: /sandbox/jagla/apps/ngs_roi/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for ngs_roi.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# bam2roi converts BAM file into ROI files.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# roi_feature_projection allows the projection of ROIs to features (BED/GFF\n\n# intervals or GFF exons).\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install binaries into ${PREFIX}/bin directory.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install helper scripts into ${PREFIX}/bin directory.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Scripts for sorting.\n",
        "Line" : 83,
        "CharPositionInLine" : 15
      },
      "16" : {
        "Text" : "# PDF plot script helper.\n",
        "Line" : 87,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/ngs_roi for SeqAn release builds.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Example files.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# R package for Linux and Mac.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "apps/ngs_roi/R/Makefile" : {
      "ObjectId" : "2d889c4403621794c309a650c48391090e34e5c8",
      "LastModified" : "2014-12-01T16:11:08Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "apps/pair_align/CMakeLists.txt" : {
      "ObjectId" : "98ca6d3a338177caa9098326a1320ceec344172f",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/pair_align/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for pair_align.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Before linking create static library for pair_align\n\n# Include lib folder to build the static library pair_align_lib.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install pair_align in ${PREFIX}/bin directory\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/pair_align for SeqAn release builds.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Command Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Currently, pair_align uses a lot of memory to compile so we do not add it\n\n# to the list of programs to build for workflow engines.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Include executable pair_align in CTD structure.\n\n#set (SEQAN_CTD_EXECUTABLES ${SEQAN_CTD_EXECUTABLES} pair_align CACHE INTERNAL \"\")\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "apps/pair_align/lib/CMakeLists.txt" : {
      "ObjectId" : "75faef76108882cc1b965f98e74053d77481bc0f",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/pair_align/lib/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for pair_align_lib.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Configure static libraries for different alignment configurations.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add library for lcs and local option.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add lcs and local target names to the lib target list.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add library for global options. \n\n# For every combination of AlignConfig flags there is a separate library, which \n\n# is build independently and thus saving resources during compilation.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set target name composed of the four gap configurations.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Build library from source -> Note: STATIC could be replaced with OBJECT only building \n\n# the object files not linking them into a lirary. However this feature\n\n# is shipped with cmake 2.8.8, which is not supported at the moment.\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add properties for the four free-gap options.\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add target name to lib targets.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Build static library linking all the object libraries.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This part can be used instead for cmake version greater or equal to 2.8.8. \n\n# This requires to update the script above as well.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "apps/param_chooser/CMakeLists.txt" : {
      "ObjectId" : "73851246e9df6baefd8e711e1c157b8937d5de5c",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/param_chooser/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for param_chooser.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add binary for tests.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install param_chooser in ${PREFIX}/bin directory\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/param_chooser for SeqAn release builds.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#install (FILES\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Unit tests for the alignment free tests.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#seqan_add_app_test (param_chooser)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "apps/rabema/CMakeLists.txt" : {
      "ObjectId" : "efe5068dbf8cbe1400f91b54d9e6a6b2f2a3a390",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/rabema/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for Rabema.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preparation of SAM files, i.e. filling SEQ field of each record.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Building of GSI file from \"perfect\" SAM file and reference sequence.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Comparison of arbitrary read mapper SAM against GSI file.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Small tool for helping in debugging.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install rabema programs in ${PREFIX}/bin directory\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install rabema in /bin directory\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/pair_align for SeqAn release builds.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Include executable razers in CTD structure.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "apps/razers/CMakeLists.txt" : {
      "ObjectId" : "2d0e3debb9c0a86a53d9c8e79b666a3b3d4bb9dd",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/razers/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for RazerS.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install razers in ${PREFIX}/bin directory\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/razers for SeqAn release builds.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include executable razers in CTD structure.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/razers3/CMakeLists.txt" : {
      "ObjectId" : "8d56e7158dbb690fcb6f6120d7ef75b892841133",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/razers3/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for razers3.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable RazerS3 on Travis CI because of computational resource limits.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add include directories.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_executable (razers3_compPHSens compPHSens.cpp razers.h)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#target_link_libraries (razers3_compPHSens ${SEQAN_LIBRARIES})\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install razers3 in ${PREFIX}/bin directory\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/razers3 for SeqAn release builds.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Both tests are always executed; without OpenMP the first one is serial, too\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Include executable razers in CTD structure.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "apps/rep_sep/CMakeLists.txt" : {
      "ObjectId" : "403ddabbcc5f97cb45434210108bc8965b55ce6f",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/rep_sep/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for rep_sep.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install rep_sep in ${PREFIX}/bin directory\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/rep_sep for SeqAn release builds.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#install (FILES\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#seqan_add_app_test (rep_sep)\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/sak/CMakeLists.txt" : {
      "ObjectId" : "6bbb84f4184b62db1c0b79bf738371967431c751",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/sak/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for sak.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate text and man page information with sak_doc target.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build documentation on installation.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install sak in ${PREFIX}/bin directory\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/sak for SeqAn release builds.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Include executable seqan_tcoffee in CTD structure.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "apps/sam2matrix/CMakeLists.txt" : {
      "ObjectId" : "3660c8947768fe3834e49798cde79673125f48be",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/sam2matrix/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for sam2matrix.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install sam2matrix in ${PREFIX}/bin directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/sam2matrix for SeqAn release builds.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#install (FILES example/fasta1.fa\n\n#               example/fasta2.fa\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include executable razers in CTD structure.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "apps/samcat/CMakeLists.txt" : {
      "ObjectId" : "2473fa01e8991909f7da0985451566c7adc7e5b3",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/samcat/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for samcat.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install samcat in ${PREFIX}/bin directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/samcat for SeqAn release builds.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#install (FILES example/fasta1.fa\n\n#               example/fasta2.fa\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include executable razers in CTD structure.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "apps/searchjoin/CMakeLists.txt" : {
      "ObjectId" : "6c9bfedbc6e8e636a7595f56750ed88b77b276da",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/searchjoin/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for searchjoin.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install searchjoin in ${PREFIX}/bin directory\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/searchjoin for SeqAn release builds.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "apps/seqan_tcoffee/CMakeLists.txt" : {
      "ObjectId" : "6d6ceba79f6748984e95650d302eff73222e387c",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/seqan_tcoffee/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for SeqAn::T-Coffee.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install seqan_tcoffee in ${PREFIX}/bin directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/seqan_tcoffee for SeqAn release builds.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include executable seqan_tcoffee in CTD structure.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/seqcons2/CMakeLists.txt" : {
      "ObjectId" : "a478edef8bfb976950f9e7ae74ba7c3d1922dbc7",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/seqcons2/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for seqcons2.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install seqcons2 in ${PREFIX}/bin directory\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/seqcons2 for SeqAn release builds.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#install (FILES example/fasta1.fa\n\n#               example/fasta2.fa\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "apps/sgip/CMakeLists.txt" : {
      "ObjectId" : "e36f1b0a32e9631eca674cac7eb15cf215935ae0",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/sgip/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for SGIP.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install sgip in ${PREFIX}/bin directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/sgip for SeqAn release builds.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "apps/snp_store/CMakeLists.txt" : {
      "ObjectId" : "83511a51ea25c77f77c84acebf20fbb4ba2b1354",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/snp_store/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for SNP Store.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Include executable snp_store in CTD structure.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install snp_store in ${PREFIX}/bin directory\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/snp_store for SeqAn release builds.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/splazers/CMakeLists.txt" : {
      "ObjectId" : "77e0359cf34319e2f21e3698cdecbbd8937189f4",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/splazers/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for SplazerS.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install splazers in ${PREFIX}/bin directory\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/splazers for SeqAn release builds.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "apps/stellar/CMakeLists.txt" : {
      "ObjectId" : "3dc54aa40284f511f6fac6eb604687ffea8adb3f",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/stellar/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for STELLAR.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install stellar in ${PREFIX}/bin directory\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/stellar for SeqAn release builds.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ---------------------------------------------------------------------------- \n\n# Setup Common Tool Description for Generic Workflow Nodes \n\n# ---------------------------------------------------------------------------- \n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include executable stellar in CTD structure. \n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/tree_recon/CMakeLists.txt" : {
      "ObjectId" : "8817ae6bcf83b20688fe31144f80628c98597a16",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/tree_recon/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for tree_recon.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install tree_recon in ${PREFIX}/bin directory\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/tree_recon for SeqAn release builds.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include executable seqan_tcoffee in CTD structure.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "apps/yara/CMakeLists.txt" : {
      "ObjectId" : "8eb1cbd23f675f45d360b1108e4a8d3be3063fa4",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /apps/yara/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for yara.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Warn if OpenMP was not found.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Warn if Zlib was not found.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Warn if BZip2 was not found.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App-Level Configuration\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Disable Compiler Warnings\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Disables warning about conversion from 64 bit to 32 bit integrals.\n\n# Note that there is a runtime exception thrown if the type is not sufficient.\n\n# Unfortunately the VC does not detect it.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# When compiling on 32 bit windows.\n\n# When compiling on 64 bit windows.\n",
        "Line" : 64,
        "CharPositionInLine" : 56
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add include directories.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add definitions set by the build system.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Install yara in ${PREFIX}/bin directory\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/yara for SeqAn release builds.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Setup Common Tool Description for Generic Workflow Nodes\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Include executable yara_mapper in CTD structure.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "demos/CMakeLists.txt" : {
      "ObjectId" : "3cbc9b99c27b1140f197ad847edab16b210e18a8",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /demos/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the core demos.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Recursively register all demos in core and prefix their target/binary names\n\n# with \"demo_\".  The demos will be built in DEVELOP mode, copied in\n\n# SEQAN_RELEASE mode and left alone otherwise.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "demos/howto/CMakeLists.txt" : {
      "ObjectId" : "954800cce1106bc946c25e83a298306d869b4abb",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/howto/scores/CMakeLists.txt" : {
      "ObjectId" : "09d2141c6d8c42177738e2ce873c57a0b53a5797",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/tutorial/CMakeLists.txt" : {
      "ObjectId" : "86399bc378cda2b4404cbd7052182f735891fa27",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Supress unused parameter warnings for these demos.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "demos/tutorial/seed_and_extend/CMakeLists.txt" : {
      "ObjectId" : "ff09a06b86008f87cd20280584e1eeeb730b32cd",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/unassigned_or_unused/tutorial_sequence/CMakeLists.txt" : {
      "ObjectId" : "31f27f2f79533ebdb2807378a175c55871fd0163",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dox/CMakeLists.txt" : {
      "ObjectId" : "e5e118975a00a0fd612c3380eaf825e4ad3d4831",
      "LastModified" : "2017-12-11T14:05:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /dox/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for dox.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# require python 2.7, not python3\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add building the documentation as a test.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# includes SEQAN_RELEASE_LIBRARY\n",
        "Line" : 32,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 4
    },
    "manual/CMakeLists.txt" : {
      "ObjectId" : "d7719369f4cc1f3b440d39fdf486b428a55022c2",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /manual/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for manual.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for Sphinx and balk out if we cannot find it.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add building Sphinx documentation as a test.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Building the manual depends on the JSON file from dox.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "manual/Makefile" : {
      "ObjectId" : "ad7282fbc5723466055e6d7bc7102797a6569853",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "c3e6a62867a2c9edfd3ea0b12ed2ee4d0d9cd5a6",
      "LastModified" : "2016-03-14T23:24:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for core tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setup flags and register all subdirectories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/align/CMakeLists.txt" : {
      "ObjectId" : "e3dc3ec6170257c5819ee1a0e10a081a0876eec2",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/align/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the align module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# workaround a bug in llvm35 on FreeBSD\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add include directories.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add executable for simd tests.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# note(marehr): there is a bug when using <=clang3.8 with gcc4.9's stdlib,\n\n# where the default -ftemplate-depth=256 of clang is insufficient.\n\n# test_align_simd_avx2 needs a depth of at least 266.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tests/align_extend/CMakeLists.txt" : {
      "ObjectId" : "b89f1b4d3d8c760a941f5e6533e31145ec333a58",
      "LastModified" : "2016-10-18T19:26:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/align_extend/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the align_extend module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/align_parallel/CMakeLists.txt" : {
      "ObjectId" : "df770f5c8e221ac71fcb2ab0a68dc10664fa0c30",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/align_parallel/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the align_parallel module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# workaround a bug in llvm35 on FreeBSD\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Increase recursive template instantiation depth for clang compiler.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add include directories.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tests/align_profile/CMakeLists.txt" : {
      "ObjectId" : "868c689b8ca588c19c2d08088701d4abd489ebf1",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/align_profile/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the align_profile module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The test program.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/align_split/CMakeLists.txt" : {
      "ObjectId" : "580b00d9ad6113e2211e4712791dfc88488d1977",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/align_split/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the align_split module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/alignment_free/CMakeLists.txt" : {
      "ObjectId" : "bfb11208b595fff22c7c17cbd0df799366f4decf",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/alignment_free/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the alignment_free module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/arg_parse/CMakeLists.txt" : {
      "ObjectId" : "86973efe1f628afb1ab46e273f23598f907da8c8",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/arg_parse/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the arg_parse module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/bam_io/CMakeLists.txt" : {
      "ObjectId" : "9b0708a0ea733bf08a4b0ecfbbe757ddf66463d8",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/bam_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the bam_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/basic/CMakeLists.txt" : {
      "ObjectId" : "e9a23b7710c3768d37be6236c546ed04c246d7d3",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/basic/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the basic module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/bed_io/CMakeLists.txt" : {
      "ObjectId" : "86cd0798c66b8e481ec23fba45048a7b87474680",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/bed_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the bed_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/blast/CMakeLists.txt" : {
      "ObjectId" : "a75bd56a7dd66435c2d0be29895f896abb7e7208",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /extras/tests/align_extend/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the align_extend module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/consensus/CMakeLists.txt" : {
      "ObjectId" : "cce1c391334cde8000823d0828a978928c1f372c",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/consensus/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the consensus module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/consensus_v2/CMakeLists.txt" : {
      "ObjectId" : "53858b99d7f042a4854b937ea8dbc34004762c97",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/consensus_v2/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the consensus module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/find/CMakeLists.txt" : {
      "ObjectId" : "2176919d508dfa904974fd603df3d33f9fd3a6f5",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/find/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the find module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/gff_io/CMakeLists.txt" : {
      "ObjectId" : "2ecaff7e9b9155e1aee3ab638a72906f0e6269ea",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/gff_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the gff_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/graph_algorithms/CMakeLists.txt" : {
      "ObjectId" : "1dfbd935b4fed5456f87215d7a10eb7c2d0cb7a9",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/graph_algorithms/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the graph_algorithms module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/graph_align/CMakeLists.txt" : {
      "ObjectId" : "a552d3f2c37c7a6cbbcafb0fe3a026e212a32552",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/graph_align/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the graph_align module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/graph_msa/CMakeLists.txt" : {
      "ObjectId" : "85bdd50a37ca25bd70d47165d1014d44ae2d25b7",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/graph_msa/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the graph_msa module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/graph_types/CMakeLists.txt" : {
      "ObjectId" : "dd58f1f99ffe2a5ce191122032db8e20766451c2",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/graph_types/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the graph_types module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Clang 3.2.0 has a bug that prevents test_graph_types from compiling.  See\n\n# http://llvm.org/bugs/show_bug.cgi?id=14538\n\n#\n\n# Still present in Clang 3.3.0 but apparently fixed for 3.4.0.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add include directories.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add targets and register tests.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Register with CTest\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tests/index/CMakeLists.txt" : {
      "ObjectId" : "ad1c9e307b95aa9d67ce7c2d59b2ad591c67ca63",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/index/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the index module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need an additional TU for the DFI test otherwise GCC 4.7 warns in 32 bit mode.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We need an additional TU for the DFI test otherwise GCC 4.7 warns in 32 bit mode.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_executable (test_index_fm_right_array_binary_tree\n\n#                test_index_fm_right_array_binary_tree.cpp\n\n#                test_index_fm_right_array_binary_tree.h\n\n#                test_index_fm_right_array_binary_tree_iterator.h\n\n#                test_index_helpers.h)\n\n#target_link_libraries (test_index_fm_right_array_binary_tree ${SEQAN_LIBRARIES})\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# GCC < 4.5 segfaults when compiling the test_index_stree_iterators test.\n\n# Enable if the compiler is not GCC or the version is >= 4.5.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#add_test (NAME test_test_index_fm_right_array_binary_tree COMMAND $<TARGET_FILE:test_index_fm_right_array_binary_tree>)\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tests/journaled_set/CMakeLists.txt" : {
      "ObjectId" : "625aef1da3dc261569cd409031686381462cdefd",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/journaled_set/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the journaled_set module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/journaled_string_tree/CMakeLists.txt" : {
      "ObjectId" : "690d0cb3e6f5d2adf8e3c4f7a61e33223c127863",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: tests/journaled_string_tree/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the journaled_string_tree module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tests/map/CMakeLists.txt" : {
      "ObjectId" : "66b57a0f554b214d4a6c1056d2f4167e3e8bc7d2",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/map/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the map module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/misc/CMakeLists.txt" : {
      "ObjectId" : "46df3fdd54b074b095f4ba1b040ebbdb67d44bb5",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/misc/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the misc module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/modifier/CMakeLists.txt" : {
      "ObjectId" : "5c82f02e22bdac7b7633a6c88fbd9719e3f4f286",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/modifier/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the modifier module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/modifier_cyclic_shape/CMakeLists.txt" : {
      "ObjectId" : "e38751a8167351bd1ecbfe12cbc029e48d4dd181",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/modifier_cyclic_shape/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the modifier_cyclic_shape module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/multiple_translation_units/CMakeLists.txt" : {
      "ObjectId" : "df2a47d05cb6197d48f4a2c6a317640b6ea7f148",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/multiple_translation_units/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the multiple_translation_units module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/parallel/CMakeLists.txt" : {
      "ObjectId" : "0df6d735109657fd2287f02be85bca4d4165a56b",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/parallel/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the parallel module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/parse_lm/CMakeLists.txt" : {
      "ObjectId" : "1bfc2101d62e38ed8478593ad2505b95174017e0",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/parse_lm/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the parse_lm module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/pipe/CMakeLists.txt" : {
      "ObjectId" : "6847ef46954fa531e32bcc5328d827924a79c0c7",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/pipe/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the pipe module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/platform/CMakeLists.txt" : {
      "ObjectId" : "59609299be47b9a8ab6bd330aef8951f517133dc",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/platform/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the platform module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/random/CMakeLists.txt" : {
      "ObjectId" : "91a1b75c8bd3f19b0b3022c11c3bccbf3d30ca09",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/random/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the random module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/realign/CMakeLists.txt" : {
      "ObjectId" : "e88c3ec5ae1c97f9455b212a1c9ae42f1076eff8",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/realign/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the realign module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/reduced_aminoacid/CMakeLists.txt" : {
      "ObjectId" : "7d3daef18b53d544409f7174d801b4b89305c1e8",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/reduced_aminoacid/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the reduced_aminoacid module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/rna_io/CMakeLists.txt" : {
      "ObjectId" : "fb2e9a7ecdffad65c7eaf2b381ec0b02d524080d",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/rna_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the rna_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/roi_io/CMakeLists.txt" : {
      "ObjectId" : "edfeaf90ccfab4c0a4b75fad35467ff11477a527",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/roi_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the roi_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/score/CMakeLists.txt" : {
      "ObjectId" : "05661a8489f705d93b61c2ce16f6c5cf80c035cb",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/sCMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the score module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/seeds/CMakeLists.txt" : {
      "ObjectId" : "9d3cb7639a6ec12fc02e6b823485c4a7ccfadb16",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/seeds/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the seeds module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create executables for all seeds module tests.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/seq_io/CMakeLists.txt" : {
      "ObjectId" : "ec51ad1e11d34d99a46f5ec944be0ea3d5cd47c0",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/seq_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the seq_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/sequence/CMakeLists.txt" : {
      "ObjectId" : "da008e6eae4ec2db48b5ff6b6ae41a4d79dd8182",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/sequence/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the sequence module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/sequence_journaled/CMakeLists.txt" : {
      "ObjectId" : "a352b798f020fd119a453f785f646c4a112638c7",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/sequence_journaled/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the sequence_journaled module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/simd/CMakeLists.txt" : {
      "ObjectId" : "030c4ca405feccbec8a2a5b1b5af9f3a01be402e",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/basic/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the basic module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/simple_intervals_io/CMakeLists.txt" : {
      "ObjectId" : "557469e44cb76a4d01721e0d653ae19af94785cb",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/simple_intervals_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the simple_intervals_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/statistics/CMakeLists.txt" : {
      "ObjectId" : "5815bee687416a1b46555e236736581e36869747",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/statistics/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the statistics module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/store/CMakeLists.txt" : {
      "ObjectId" : "00f5ab2957f62d1efcada6ab096663c4b6b7354e",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/store/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the store module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/stream/CMakeLists.txt" : {
      "ObjectId" : "ec5c87e6e4dd845f1fd8b4f7ff2d039bcc26b5f4",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/stream/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the stream module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/swift_local/CMakeLists.txt" : {
      "ObjectId" : "e92dc7d7452babfde28d37504e6a492bf38445eb",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/find_swift/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the find_swift module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/tabix_io/CMakeLists.txt" : {
      "ObjectId" : "9c0feba5771fc754181529353343c57098944ab2",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/tabix_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the tabix_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/translation/CMakeLists.txt" : {
      "ObjectId" : "60be705dc28c405152d7bfcbeaa7478216f7ac32",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/translation/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the translation module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/ucsc_io/CMakeLists.txt" : {
      "ObjectId" : "0963216c44abf6c4f7cfc643829de67f1f631da9",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/test_ucsc_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the ucsc_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/vcf_io/CMakeLists.txt" : {
      "ObjectId" : "4327a68d0158860d27071c81d6117e61d530f637",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /tests/vcf_io/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the vcf_io module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "util/cmake/CTestConfig.cmake" : {
      "ObjectId" : "20b7d8dcc8a4d95807fd6efcba1280675ecb45ec",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "util/cmake/CheckSymbolExists.cmake" : {
      "ObjectId" : "c4dff3faaf8c3464bc87545fc4c5fb5e9044639b",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CheckSymbolExists\n\n# -----------------\n\n#\n\n# Check if a symbol exists as a function, variable, or macro\n\n#\n\n# CHECK_SYMBOL_EXISTS(<symbol> <files> <variable>)\n\n#\n\n# Check that the <symbol> is available after including given header\n\n# <files> and store the result in a <variable>.  Specify the list of\n\n# files in one argument as a semicolon-separated list.\n\n# <variable> will be created as an internal cache variable.\n\n#\n\n# If the header files define the symbol as a macro it is considered\n\n# available and assumed to work.  If the header files declare the symbol\n\n# as a function or variable then the symbol must also be available for\n\n# linking.  If the symbol is a type or enum value it will not be\n\n# recognized (consider using CheckTypeSize or CheckCSourceCompiles).  If\n\n# the check needs to be done in C++, consider using\n\n# CHECK_CXX_SYMBOL_EXISTS(), which does the same as\n\n# CHECK_SYMBOL_EXISTS(), but in C++.\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/cmake/FeatureSummary.cmake" : {
      "ObjectId" : "9e650d6e88bd81ad0772a9611e74e1610cbc7967",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Print missing optional dependencies and consequently missing SeqAn features.\n\n#\n\n# We have two main cases.  First, if all libraries were found, we print a\n\n# message indicating that.  In the second case, we print a more highlighted\n\n# message to warn the user.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "util/cmake/FindBZip2.cmake" : {
      "ObjectId" : "ae87850ee5a6c56d8204b462225f492b1121ef8f",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindBZip2\n\n# ---------\n\n#\n\n# Try to find BZip2\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   BZIP2_FOUND - system has BZip2\n\n#   BZIP2_INCLUDE_DIR - the BZip2 include directory\n\n#   BZIP2_LIBRARIES - Link these to use BZip2\n\n#   BZIP2_NEED_PREFIX - this is set if the functions are prefixed with BZ2_\n\n#   BZIP2_VERSION_STRING - the version of BZip2 found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2012 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SeqAnBuildSystem: TODO(h-2): remove this file and CheckSymbolExists.cmake, once we require Cmake>=3.4\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set BZip2_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "util/cmake/FindGitInfo.cmake" : {
      "ObjectId" : "5b7764c0f5f43d79e8873ed2b2c94ca6bbe97d59",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n#\n\n# This CMake module will try to find git information. You can use  it the same\n\n# way you would use any other CMake module.\n\n#\n\n#   find_package(GitInfo [REQUIRED] ...)\n\n#\n\n# If the Git package is found, the macro\n\n#  GIT_WC_INFO(<dir> <var-prefix>)\n\n# is defined to extract information of a git working copy at a given location.\n\n#\n\n# The macro defines the following variables:\n\n#  <var-prefix>_WC_REVISION - Hash of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_DATE - Date of last commit\n\n#\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "util/cmake/FindSDE.cmake" : {
      "ObjectId" : "59214ecc8bc514b9fa5b164c1d95512e33a4f2be",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Marcel Ehrhardt <marcel.ehrhardt@fu-berlin.de>\n\n# ============================================================================\n\n#\n\n#.rst:\n\n# FindSDE\n\n# ---------\n\n#\n\n# Try to find Intel® Software Development Emulator\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   SDE_FOUND - system has Intel® SDE\n\n#   SDE_EXECUTABLE - the Intel® SDE executable (full path)\n\n#   SDE_VERSION_STRING - the version of Intel® SDE found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# first try 64bit and then 32bit version of sde\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/cmake/FindSeqAn.cmake" : {
      "ObjectId" : "653c6a9592c4af6c5f8c40bb86ead98deda82a90",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "util/cmake/FindSphinx.cmake" : {
      "ObjectId" : "4607f78066ad098a4738db175fec35561479982d",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Sphinx\n\n# Find the Sphinx documentation generator\n\n#\n\n# This modules defines\n\n#  SPHINX_EXECUTABLE\n\n#  SPHINX_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target dependencies can be optionally listed at the end.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/cmake/FindTBB/FindTBB.cmake" : {
      "ObjectId" : "336b05446843eebcda12f5362d0cd484543a136d",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# TBB can be found at http://www.threadingbuildingblocks.org/ \n\n# Written by Hannes Hofmann, hannes.hofmann _at_ informatik.uni-erlangen.de\n\n# Adapted by Gino van den Bergen gino _at_ dtecta.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE     [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER         e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# has em64t/vc8   em64t/vc9\n\n# has ia32/vc7.1  ia32/vc8   ia32/vc9\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# MAC\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# has only one flavor: ia32/cc4.0.1_os10.4.9\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# LINUX\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21  em64t/cc3.3.3_libc2.3.3_kernel2.6.5  em64t/cc3.4.3_libc2.3.4_kernel2.6.9  em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# sanity check\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because \n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-- Look for debug libraries\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 30
    },
    "util/cmake/FindUmesimd.cmake" : {
      "ObjectId" : "3cb1587c4fc5872a141f8d2c1eee3f0792dab873",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Marcel Ehrhardt <marcel.ehrhardt@fu-berlin.de>\n\n# ============================================================================\n\n#\n\n#.rst:\n\n# FindUmesimd\n\n# -----------\n\n#\n\n# Try to find UME::SIMD includes\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   UMESIMD_FOUND - system has UME::SIMD\n\n#   UMESIMD_INCLUDE_DIR - the UME::SIMD include directory\n\n#   UMESIMD_VERSION_STRING - the version of UME::SIMD found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set UMESIMD_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/cmake/GetCurrentDate.cmake" : {
      "ObjectId" : "da216971885c0108c37a8a970ccd11fda8a704d9",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Manuel Holtgrewe <manuel.holtgrewe@fu-berlin.de>\n\n# ============================================================================\n\n# Get current date from compiled C++ program.\n\n#\n\n# The C++ program GetCurrentDate.cpp belongs together with this module.\n\n#\n\n# The resulting date will be written to the variables CURRENT_YEAR,\n\n# CURRENT_MONTH, and CURRENT_DAY.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_CURRENT_LIST_DIR only from cmake 2.8.3.\n",
        "Line" : 41,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 2
    },
    "util/cmake/SeqAnBuildSystem.cmake" : {
      "ObjectId" : "c7ef0cb8e4755e7ddbd2c4e426480ed2a4adca6a",
      "LastModified" : "2018-02-02T15:26:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Manuel Holtgrewe <manuel.holtgrewe@fu-berlin.de>\n\n# ============================================================================\n\n# This CMake file defines the necessary macros for the SeqAn build system.\n\n#\n\n# Note that while the SeqAn build system uses the seqan-config.cmake module,\n\n# the seqan-config.cmake module itself can be used independently from the SeqAn\n\n# build system.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Set CMAKE policies.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disables auto-dereferencing of variables in quoted statements\n",
        "Line" : 44,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "# Valid values for SEQAN_BUILD_SYSTEM:\n\n#\n\n# DEVELOP\n\n# SEQAN_RELEASE_APPS\n\n# SEQAN_RELEASE_LIBRARY\n\n# APP:${app_name}\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# require python 2.7, not python3\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Enable /bigobj flag on Windows.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We need the /bigobj switch on windows (for 64 bit builds only actually).\n\n# Set target system to be Windows Vista and later.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set /bigobj for COMPILER_MSVC and COMPILER_WINTEL, but COMPILER_CLANG on\n\n# windows (clang/c2 3.7) can not handle it.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Is it a 32 bit platform?\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Disable false positive terminal detection in Xcode\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Function add_executable (name [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL]\n\n#                          source1 source2 ... sourceN)\n\n#\n\n# Add an executable with the given name and sources.\n\n#\n\n# We overwrite the built-in function add_executable to automatically add\n\n# behaviour that is required in the SeqAn build system.  This includes:\n\n#\n\n# * Adding dependencies to the SeqAn library headers.\n\n# * Enabling the SeqAn Usability Analyzer (SUA).\n\n#\n\n# Note that it is not possible to overwrite the same function two times.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Call overwritten _add_executable.\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add dependencies on the SeqAn library.\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add dependency on the SUA target.\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_register_apps ()\n\n#\n\n# Register all apps by adding their subdirectories if they are to be built\n\n# (SEQAN_RELEASE and APP:${app} modes).\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Get all direct entries of the current source directory into ENTRIES.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Add all values from ${ENTRIES} that are subdirectories and have a file\n\n# CMakeListst.txt.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_build_system_init ()\n\n#\n\n# Initialize build system.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Enable CTest and command add_test().\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# GENERAL SETUP\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#     set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -DSEQAN_ENABLE_DEBUG=1\" PARENT_SCOPE)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable global exception handler for all \"official\" stuff\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Disable warnings about unsecure (although standard) functions\n\n# @see https://msdn.microsoft.com/en-us/library/aa985974.aspx\n",
        "Line" : 203,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# 'strcpy' is deprecated: This function or variable may be unsafe.\n\n# Consider using strcpy_s instead. To disable deprecation, use\n\n# @see https://msdn.microsoft.com/en-us/library/8ef0s5kh.aspx\n",
        "Line" : 207,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Set Warnings\n\n# NOTE(marehr): COMPILER_CLANG on windows uses the same flags as on linux,\n\n# whereas COMPILER_WINTEL uses on windows the same flags as COMPILER_MSVC.\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# TODO(h-2): raise this to W4\n",
        "Line" : 217,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# TODO(h-2): raise this to W4\n",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# disable some warnings on ICC\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# warning #3373: nonstandard use of \"auto\" to both deduce the type\n\n# from an initializer and to announce a trailing return type\n",
        "Line" : 228,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "## options\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# SeqAn Version Check\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Disable completely\n",
        "Line" : 243,
        "CharPositionInLine" : 38
      },
      "33" : {
        "Text" : "# Build it but make it opt-in.\n",
        "Line" : 245,
        "CharPositionInLine" : 41
      },
      "34" : {
        "Text" : "# Architecture.\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Enable SSE4 if AVX[\\d]+ is set. (Other parts in our build system expect it\n\n# to be set and it is basically the synonym for 'SIMD is enabled')\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# implementation in seqan_register_apps()\n",
        "Line" : 280,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# machine specific optimizations\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# TODO(h-2): for icc on windows, replace the \" -\" in SEQAN_CXX_FLAGS with \" /\"\n\n#            find out whether clang/c2 takes - or / options\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# enable static linkage for seqan apps\n",
        "Line" : 320,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# static build not supported on apple, but at least we can include gcc libs\n",
        "Line" : 324,
        "CharPositionInLine" : 12
      },
      "41" : {
        "Text" : "# make sure -rdynamic isn't added automatically\n",
        "Line" : 331,
        "CharPositionInLine" : 12
      },
      "42" : {
        "Text" : "# make sure -fPIC isn't added automatically\n",
        "Line" : 333,
        "CharPositionInLine" : 12
      },
      "43" : {
        "Text" : "# For unknown reasons finding .a only seems to work for libz and\n\n# libbzip2; cmake than proceeds to wrap these in\n\n# -Wl,-Bstatic -lz -lbz2 -Wl,-Bdynamic\n\n# the latter reactivates dynamic linking for the system libs\n\n# we override this behaviour here:\n",
        "Line" : 336,
        "CharPositionInLine" : 12
      },
      "44" : {
        "Text" : "# strip binaries when packaging\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# search dependencies once, globally, if in DEVELOP\n",
        "Line" : 353,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_add_app_test (APP_NAME SUFFIX)\n\n#\n\n# Add app test invocation.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# App tests are run using Python.  Search for Python and register test if the\n\n# Python interpreter could be found.\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_setup_library ()\n\n#\n\n# * Creates install targets for the library.\n\n# * Writes list SeqAn headers to ${_SEQAN_HEADERS}\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Only install the library if the virtual build packages \"SEQAN_RELEASE\"\n\n# or \"SEQAN_LIBRARY_ONLY\" are chosen.\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Install SeqAn LICENSE, README.rst, CHANGELOG.rst files.\n",
        "Line" : 402,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# Install pkg-config file, except on Windows.\n",
        "Line" : 407,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# Install FindSeqAn TODO(h-2) rename seqan-config.cmake to seqan-config${SEQAN_VERSION_MAJOR}.cmake after 2.x cycle\n",
        "Line" : 412,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# Install headers\n",
        "Line" : 415,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# Get list of header and super header files.\n",
        "Line" : 427,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Sort headers for Xcode, ...\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Sort headers for Xcode, ...\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Sort super-headers for Xcode, ...\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Create source groups for Visual Studio (and possibly other IDEs).\n",
        "Line" : 447,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "#    # CMake bug workaround: For Non-IDE generators there is a bug in cmake.\n\n#    # The SOURCE command in add_custom_target is not recognized there.\n\n#    set (NONIDE_GENERATORS \"Unix Makefiles\" \"MinGW Makefiles\")\n\n#    list (FIND NONIDE_GENERATORS ${CMAKE_GENERATOR} FOUND)\n\n#    if (FOUND EQUAL -1)\n\n#        set (IDE_SOURCES SOURCES ${HEADERS} ${SUPER_HEADERS})\n\n#    endif (FOUND EQUAL -1)\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Add pseudo target for the library part.  Note that the IDE_SOURCES\n\n# variable includes the \"SOURCES\" argument for add_custom_target when\n\n# building with a generator for an IDE.\n",
        "Line" : 463,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_setup_install_vars (APP_NAME)\n\n#\n\n# Setup variables for install, depending on build mode.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_install_required_system_libraries ()\n\n#\n\n# When packaging apps copy needed dlls\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# version can be 2016\n",
        "Line" : 495,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# set intel architecture\n",
        "Line" : 498,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# Find the runtime library redistribution directory.\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# This warning indicates an incomplete Visual Studio installation\n\n# or a bug somewhere above here in this file.\n\n# If you would like to avoid this warning, fix the real problem, or\n\n# set CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_NO_WARNINGS before including\n\n# this file.\n",
        "Line" : 544,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# TODO: Remove once we have cmake > 3.10.x installed on windows clients, as it should be found automatically.\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# include intel dll's\n",
        "Line" : 558,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# The following include automates the MS Redistributable installer.\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_configure_cpack_app (APP_NAME APP_DIR)\n\n#\n\n# Setup variables for install, depending on build mode.\n\n#\n\n# Sets defaults for CPACK_PACKAGE_DESCRIPTION_FILE and CPACK_RESOURCE_FILE_LICENSE\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# TXZ support since 3.1\n",
        "Line" : 591,
        "CharPositionInLine" : 44
      },
      "72" : {
        "Text" : "# Set defaults for CPACK_PACKAGE_DESCRIPTION_FILE and CPACK_RESOURCE_FILE_LICENSE\n",
        "Line" : 601,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Automatically deduce system name for CPack.\n",
        "Line" : 609,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# Get SEQAN_APP_VERSION_{MAJOR,MINOR,PATCH} from SEQAN_APP_VERSION.\n",
        "Line" : 612,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# Setup the app version.  SEQAN_APP_VERSION_{MAJOR,MINOR,PATCH} have\n\n# to be set.  To create nightly releases, set SEQAN_NIGHTLY_RELEASE to\n\n# TRUE on the command line.\n",
        "Line" : 635,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Function seqan_get_version()\n\n#\n\n# Sets the variables SEQAN_VERSION, SEQAN_VERSION_MAJOR, SEQAN_VERSION_MINOR,\n\n# SEQAN_VERSION_PATCH, determined from seqan/version.h\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Read from CMAKE_SOURCE_DIR the /include/seqan/version.h\n",
        "Line" : 662,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# If file wasn't found seqan version is set to 0.0.0\n",
        "Line" : 664,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Error log if version.h not found, otherwise read version from\n\n# version.h and cache it.\n",
        "Line" : 670,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Function seqan_get_repository_info()\n\n#\n\n# Sets the variables SEQAN_DATE and SEQAN_REVISION determined from git.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Get Git information.\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Set SeqAn date of last commit.\n",
        "Line" : 704,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# icc doesn't cope with spaces..\n",
        "Line" : 707,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Set SeqAn repository revision.\n",
        "Line" : 714,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro _seqan_setup_demo_test(cpp_file executable)\n\n#\n\n# When called with the file PATH.cpp, it will check whether PATH.cpp.stdout\n\n# and/or PATH.cpp.stderr exists.  If this is the case then we will add a test\n\n# that runs the demo and compares the standard output/error stream with the\n\n# given file.\n\n#\n\n# Used in seqan_build_demos_develop().\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Build the path to the demo_checker.py script.\n",
        "Line" : 738,
        "CharPositionInLine" : 8
      },
      "87" : {
        "Text" : "# Compose arguments to the demo_checker.py script.\n",
        "Line" : 741,
        "CharPositionInLine" : 8
      },
      "88" : {
        "Text" : "# Add buildtype path and \".exe\" suffix under Windows.\n",
        "Line" : 743,
        "CharPositionInLine" : 12
      },
      "89" : {
        "Text" : "# Add \".exe\" suffix for all other Windows compilers, e.g. MinGW.\n",
        "Line" : 746,
        "CharPositionInLine" : 10
      },
      "90" : {
        "Text" : "# Add the test.\n",
        "Line" : 759,
        "CharPositionInLine" : 8
      },
      "91" : {
        "Text" : "#message(STATUS \"add_test (NAME test_${EXECUTABLE} COMMAND ${PYTHON_EXECUTABLE} ${CHECKER_PATH} ${ARGS})\")\n",
        "Line" : 764,
        "CharPositionInLine" : 10
      },
      "92" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_register_demos([prefix])\n\n#\n\n# Use this in demos directories and subdirectories.\n\n#\n\n# This is only used when doing a Whole SeqAn Release or when developing.\n\n# When doing a SeqAn Release then we copy over the demos, otherwise we build\n\n# them.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Get a list of all .cpp and .cu files in the current directory.\n",
        "Line" : 780,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# NOTE(h-2): we do not need to search for dependencies, because this is\n\n# done globally for DEVELOP (and demos are only built with DEVELOP)\n",
        "Line" : 786,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# Supress unused parameter warnings for demos.\n",
        "Line" : 789,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# Add SeqAn flags to CXX and NVCC flags.\n\n# Set to PARENT_SCOPE since this macro is executed from within a function which declares it's own scope.\n",
        "Line" : 794,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# Setup include directories and definitions for SeqAn; flags follow below.\n",
        "Line" : 797,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# Disable version check for demos.\n",
        "Line" : 799,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# Disable the version check for all demos.\n",
        "Line" : 803,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# Add all demos with found flags in SeqAn.\n",
        "Line" : 805,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# workaround a bug in llvm35 on FreeBSD\n",
        "Line" : 808,
        "CharPositionInLine" : 8
      },
      "102" : {
        "Text" : "# bug in visual studio\n",
        "Line" : 815,
        "CharPositionInLine" : 8
      },
      "103" : {
        "Text" : "# all demos/* that require ZLIB[_FOUND]\n",
        "Line" : 818,
        "CharPositionInLine" : 8
      },
      "104" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_register_tests ()\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 842,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Switch to testing mode and include all subdirectories with a CMakeLists.txt\n\n# file inside them.  This function should be called in the CMakeLists.txt in\n\n# the tests directories before including subdirectories.\n\n#\n\n# The following will happen:\n\n#\n\n# * Setting definitions SEQAN_ENABLE_DEBUG=1 and SEQAN_ENABLE_TESTING=1.\n\n# * If the ${MODEL} variable is NightlyCoverage OR ExperimentalCoverage,\n\n#   and the compiler is GCC C++ then symbols for test coverate are added.\n\n# * All subdirectories with a CMakeLists.txt file inside will be added.\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Setup flags for tests.\n",
        "Line" : 858,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# Remove NDEBUG definition for tests.\n",
        "Line" : 861,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# Conditionally enable coverage mode by setting the appropriate flags.\n",
        "Line" : 867,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# Add all subdirectories that have a CMakeLists.txt inside them.\n",
        "Line" : 881,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 110
    },
    "util/cmake/SeqAnConsistentFPFlags.cmake" : {
      "ObjectId" : "70980bba224e079ffa341a79dca7e05005aa1948",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Marcel Ehrhardt <marcel.ehrhardt@fu-berlin.de>\n\n# ============================================================================\n\n# An attempt to produce the same floating point output across all platforms\n\n# for some of our not-so-well written test cases\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https://software.intel.com/en-us/articles/consistency-of-floating-point-results-using-the-intel-compiler\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# note: bs_tools didn't produce the same output with these settings\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# at least version 17.0.0\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# at least version 17.0.0\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# https://randomascii.wordpress.com/2013/07/16/floating-point-determinism/\n\n# cc1plus: sorry, unimplemented: -fexcess-precision=standard for C++\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# https://msdn.microsoft.com/en-us/library/e7s85ffb.aspx\n\n# note: bs_tools didn't produce the same output with this setting\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "util/cmake/SeqAnContribs.cmake" : {
      "ObjectId" : "e58fb8228a5e8ccfb1753012329db41894e703e1",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Manuel Holtgrewe <manuel.holtgrewe@fu-berlin.de>\n\n# ============================================================================\n\n# This CMake file is included by the root CMakeLists.txt to look for\n\n# installed SeqAn contribs on the WIN32 platform.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For all contrib versions...\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine architecture for the precompiled contribs.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Try to figure out where the user installed the contrib.  We expect\n\n# it to be either in C:\\, or one of the Program Files dirs.\n\n#\n\n# First, look into Program Files on 64 bit.\n\n# Then look into C:\\\\ and finally check special environment variable.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message(\"Path is ${path}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Debug help.\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# if (NOT DEFINED SEQAN_CONTRIB_BASE)\n\n#     message(\"SEQAN_CONTRIB_BASE is undefined!\")\n\n# else (NOT DEFINED SEQAN_CONTRIB_BASE)\n\n#   \tmessage(\"SEQAN_CONTRIB_BASE is ${SEQAN_CONTRIB_BASE}\")\n\n# endif (NOT DEFINED SEQAN_CONTRIB_BASE)\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Try to figure out the generator.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(STATUS \"SEQAN_CONTRIB_BASE    is ${SEQAN_CONTRIB_BASE}\")\n\n#message(STATUS \"SEQAN_CONTRIB_VARIANT is ${SEQAN_CONTRIB_VARIANT}\")\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Compose contrib path.\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Extend CMAKE_PREFIX_PATH.\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Break out if contribs could be found.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# found contribs at current path\n",
        "Line" : 98,
        "CharPositionInLine" : 18
      },
      "13" : {
        "Text" : "# all contrib versions.\n",
        "Line" : 101,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 14
    },
    "util/cmake/SeqAnCtdSetup.cmake" : {
      "ObjectId" : "753a0e9a4362ff4504c7cf4ef257e26896155da6",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Manuel Holtgrewe <manuel.holtgrewe@fu-berlin.de>\n\n# ============================================================================\n\n# CMake code for generation of CTD structure.\n\n#\n\n# All executables in the list SEQAN_CTD_EXECUTABLES will be included in the\n\n# resulting CTD structure.\n\n#\n\n# The following environment variables configure the output:\n\n#\n\n#   WORKFLOW_PLUGIN_DIR -- Output directory for CTD structure.  Defaults to\n\n#                          ${CMAKE_BINARY_DIR}/workflow_plugin_dir\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============================================================================\n\n# Dependency Check\n\n# ============================================================================\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Optionally find java for zip support\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the payload binary ZIP file.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================================================\n\n# Variable Setup\n\n# ============================================================================\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get path that all binaries are placed in.  With MSVC, we have to extend that\n\n# path with the configuration name.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The user-definable setting for the output plugin dir.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Shortcut to \"descriptors\" below target directory.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Shortcut to \"payload\" below target directory.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We will create the contents of the payload directory temporarily within the\n\n# output directory.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ============================================================================\n\n# Creating directory structure.\n\n# ============================================================================\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create directory: workflow_plugin_dir\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create directory: workflow_plugin_dir/icons\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create directory: workflow_plugin_dir/descriptors\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create directory: workflow_plugin_dir/payload\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create directory: workflow_plugin_dir/payload.tmp\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create directory: workflow_plugin_dir/payload.tmp/bin\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ============================================================================\n\n# Creating payload data.\n\n# ============================================================================\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Binaries.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# binaries.ini file.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# different ways to zip\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# internal since 3.3\n",
        "Line" : 154,
        "CharPositionInLine" : 42
      },
      "22" : {
        "Text" : "# use java\n",
        "Line" : 161,
        "CharPositionInLine" : 29
      },
      "23" : {
        "Text" : "# use unix zip\n",
        "Line" : 167,
        "CharPositionInLine" : 50
      },
      "24" : {
        "Text" : "# ============================================================================\n\n# CTDs and other descriptors contents.\n\n# ============================================================================\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# descriptors/mimetypes.xml\n\n# Note: The mimetypes.xml file is deprecated but we keep it here for backward compatibilty.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# descriptors/mime.types\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# *.ctd\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ============================================================================\n\n# Eclipse Plugin Files.\n\n# ============================================================================\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# plugin.properties\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ============================================================================\n\n# Static Files.\n\n# ============================================================================\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Static files in plugin root.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Icon files.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ============================================================================\n\n# Master target.\n\n# ============================================================================\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "util/cmake/SeqAnSimdUtility.cmake" : {
      "ObjectId" : "af08db934a23a022aac608efed9eb8cf9d6c1981",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Marcel Ehrhardt <marcel.ehrhardt@fu-berlin.de>\n\n# ============================================================================\n\n#\n\n#.rst:\n\n# SeqanSimdUtility\n\n# ----------------\n\n#\n\n# Utility to create binaries for different SIMD implementations and target\n\n# architectures. Disables architectures if the compiler can't handle it or bugs\n\n# in the code generation are known.\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   add_executable (\n\n#     test_simd_vector\n\n#     test_simd_vector.cpp\n\n#     test_simd_vector.h)\n\n#   target_link_libraries (test_simd_vector ${SEQAN_LIBRARIES})\n\n#   add_simd_platform_tests(test_simd_vector)\n\n#\n\n# Could build the following binaries and add tests for them\n\n#\n\n# ::\n\n#\n\n#   Built target test_simd_vector\n\n#   Built target test_simd_vector_sse4\n\n#   Built target test_simd_vector_avx2\n\n#   Built target test_simd_vector_umesimd\n\n#   Built target test_simd_vector_umesimd_sse4\n\n#   Built target test_simd_vector_umesimd_avx2\n\n#   Built target test_simd_vector_umesimd_avx512_knl\n\n#\n\n# Functions\n\n# +++++++++++\n\n#\n\n# ::\n\n#\n\n#   add_simd_platform_tests(target)\n\n#       - builds target on different simd implementations and architectures\n\n#       - adds targets which use the seqan::simd default implementation\n\n#       - adds targets which use the UME::SIMD library instead of the seqan\n\n#         default implementation if UMESIMD_FOUND is set\n\n#       - adds tests for different architectures if the Intel® Software\n\n#         Development Emulator could be found, i.e. if SDE_FOUND is set\n\n#\n\n#         NOTE: You don't have to add_test the target (e.g. test_simd_vector)\n\n#         itself, because it will be done by this function.\n\n#\n\n#   add_simd_executables(target blacklist) [not required to use explicitly]\n\n#       - adds executables for sse4, avx2, etc. as `target`_sse4, `target`_avx2,\n\n#         etc. (Will clone the SOURCE, FLAGS and other properties from `target`)\n\n#       - blacklist: list of architectures that shouldn't be added (e.g. sse4,\n\n#         avx2, avx512_knl, avx512_skx, avx512_cnl)\n\n#\n\n#   add_simd_tests(target blacklist) [not required to use explicitly]\n\n#       - adds tests for executables (targets) specified by add_simd_executables\n\n#       - blacklist: list of architectures which executables shouldn't be tested\n\n#         (e.g. sse4, avx2, avx512_knl, avx512_skx, avx512_cnl)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# offer flags (string) as list for functions like target_compile_options\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# list1 and list2\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# list1\\list2 = list1 and not list2\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Returns list of all simd extension prior to `simd_ext`\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Returns list of all simd extension after to `simd_ext`\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# simd specialized try-compile macro\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# empty flags means that this simd extension is not supported by the compiler\n",
        "Line" : 387,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# -O3 is needed to trigger a compiler bug on clang 4.0.0\n",
        "Line" : 389,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# CMAKE_REQUIRED_QUIET available since cmake 3.1.0\n",
        "Line" : 394,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# detect simd support and cache it\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Executing simd on 32bit architectures has issues\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# First try to compile AND run e.g. SEQAN_SIMD_SSE4_SOURCE, otherwise try to\n\n# only compile the program\n",
        "Line" : 424,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# test seqan simd\n",
        "Line" : 443,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# try-compile known compiler crashes/errors with seqan-simd and exclude them\n",
        "Line" : 447,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# seqan-simd also uses intrinsics, so exclude those that failed the intrinsic try-compile\n",
        "Line" : 459,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# cache results\n",
        "Line" : 462,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# message(STATUS \"${source_target}: ${property} == ${_property_value}\")\n",
        "Line" : 484,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# message(STATUS \"${target_target}: set ${property} = ${_property_value}\")\n",
        "Line" : 487,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# message(STATUS \"transfer properties from ${source_target} to ${target_target}\")\n\n# message(STATUS \"${source_target}: SOURCES == ${_SOURCES}\")\n\n# message(STATUS \"${target_target}: set SOURCES = ${_SOURCES}\")\n",
        "Line" : 495,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# https://cmake.org/cmake/help/v3.4/manual/cmake-properties.7.html#properties-on-targets\n",
        "Line" : 500,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# i.e. clone_target(${target} \"${target}_avx2\")\n",
        "Line" : 514,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# i.e. target_compile_options(\"${target}_avx2\" PRIVATE \"${SEQAN_SIMD_AVX2_OPTIONS}\")\n",
        "Line" : 516,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# empty FLAGS means no support for this simd architecture\n",
        "Line" : 519,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# simd extensions supported by the host CPU\n",
        "Line" : 531,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# expands as\n\n# add_test(NAME \"test_test_simd_vector_sse4\" COMMAND /usr/bin/sde64 -snb -- $<TARGET_FILE:test_simd_vector_sse4>)\n",
        "Line" : 535,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# expands as\n\n# add_test(NAME \"test_test_simd_vector_sse4\" COMMAND /usr/bin/sde64 -snb -- $<TARGET_FILE:test_simd_vector_sse4>)\n",
        "Line" : 545,
        "CharPositionInLine" : 16
      },
      "27" : {
        "Text" : "# We don't disable AVX512 even though seqan-simd doesn't support AVX512 (it\n\n# will fallback to AVX2 in source code), but it replaces some intrinsics\n\n# with ones introduced in AVX512.\n",
        "Line" : 562,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# clang 4.x\n",
        "Line" : 572,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# clang =3.9.0\n",
        "Line" : 580,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Build the executables, but don't execute them, because clang <= 3.9.x\n\n# produces executables which contain invalid instructions for AVX512.\n",
        "Line" : 582,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# clang =3.9.1\n",
        "Line" : 587,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# clang >=3.9.2\n",
        "Line" : 591,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# clang 3.7.x\n",
        "Line" : 594,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "## seqan-simd:\n\n# avx2: clang 3.7.x fails test cases:\n\n#       SimdVectorTestCommon_ShuffleConstant1 type parameter (un-)signed char __vector(32) FAILED\n\n#       SimdVectorTestCommon_ShuffleConstant1 type parameter (un-)signed short __vector(16) FAILED\n",
        "Line" : 596,
        "CharPositionInLine" : 12
      },
      "35" : {
        "Text" : "# Disable avx2,avx512_knl,... on travis, because sometimes gcc 5.x and 6.x crashes\n",
        "Line" : 606,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# detect simd support by try-compile and try-run\n",
        "Line" : 613,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# exclude all simd extensions where a simple try-compile failed\n",
        "Line" : 616,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "util/cmake/SeqAnUsabilityAnalyzer.cmake" : {
      "ObjectId" : "4c642c2ee46f7d434706575a68eeae2fd778b6c4",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Manuel Holtgrewe <manuel.holtgrewe@fu-berlin.de>\n\n# ============================================================================\n\n# Define the macros required for using the instrumentation for the SeqAn\n\n# Usability Analyzer.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_setup_sua ()\n\n#\n\n# Setup target for the SUA data collection initialization.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not process further when instrumentation is disabled.\n",
        "Line" : 45,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "#  if (CMAKE_HOST_WIN32 AND NOT PYTHON_EXECUTABLE)\n\n#    # Use EXE for instrumentation with bundled Python runtime.\n\n#    execute_process (COMMAND ${CMAKE_SOURCE_DIR}/misc/seqan_instrumentation/py2exe/dist/seqan_instrumentation.exe cmake ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR})\n\n#    add_custom_target (seqan_sua_target ${CMAKE_SOURCE_DIR}/misc/seqan_instrumentation/py2exe/dist/seqan_instrumentation.exe build ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR}\n\n#                       COMMENT \"Build Instrumentation...\")\n\n#  else (CMAKE_HOST_WIN32 AND NOT PYTHON_EXECUTABLE)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use system's Python runtime.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#  endif (CMAKE_HOST_WIN32 AND NOT PYTHON_EXECUTABLE)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Macro seqan_add_sua_dependency (TARGET)\n\n#\n\n# Add hooks into the SUA data collection before and after building TARGET.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Do not add if instrumentation is disabled.\n",
        "Line" : 70,
        "CharPositionInLine" : 15
      },
      "8" : {
        "Text" : "# Add dependency on the instrumentation target.\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add hooks before and after building.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#  if (CMAKE_HOST_WIN32 AND NOT PYTHON_EXECUTABLE)\n\n#    set (_INST ${CMAKE_SOURCE_DIR}/misc/seqan_instrumentation/py2exe/dist/seqan_instrumentation.exe)\n\n#    add_custom_command (TARGET ${TARGET}\n\n#                        PRE_BUILD\n\n#                        COMMAND ${_INST} pre_build ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR} ${TARGET}\n\n#                        COMMENT \"Pre Build Instrumentation...\")\n\n#    add_custom_command (TARGET ${TARGET}\n\n#                        POST_BUILD\n\n#                        COMMAND ${_INST} post_build ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR} ${TARGET}\n\n#                        COMMENT \"Post Build Instrumentation...\")\n\n#  else (CMAKE_HOST_WIN32 AND NOT PYTHON_EXECUTABLE)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  endif (CMAKE_HOST_WIN32 AND NOT PYTHON_EXECUTABLE)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "util/cmake/SetCPackSystemName.cmake" : {
      "ObjectId" : "293b7ba4b11189f2b032e45a6bc510d05281a1c1",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Manuel Holtgrewe <manuel.holtgrewe@fu-berlin.de>\n\n# ============================================================================\n\n# Autotection of the the system name.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setting CMAKE_SYSTEM_PROCESSOR from the command line does not work, so we\n\n# set it here.  We need this to make the naming of the package file automatic.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# some platforms (e.g. FreeBSD) use different names here\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "util/cmake/ctd/configure_profile_properties.cmake" : {
      "ObjectId" : "7c5abe15f6ba141f7735eb86c1a5e5984b1216a4",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If possible, get latest change date from SeqAn SVN.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Actually configure the file.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/cmake/package.cmake" : {
      "ObjectId" : "c209c9abeb5058c6369c79b3b4256a02f5055780",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n# Author: Manuel Holtgrewe <manuel.holtgrewe@fu-berlin.de>\n\n# ============================================================================\n\n# CMake file that is included from the root CMakeLists.txt.\n\n#\n\n# It sets variables for configuring CPack and then invokes CPack such that the\n\n# \"make package\" command is available.\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ===========================================================================\n\n# Archive Packages\n\n# ===========================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# TXZ support since 3.1\n",
        "Line" : 56,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "# Should be the last include.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "util/cmake/seqan-config.cmake" : {
      "ObjectId" : "ef8a7667d7f46b5441c66a1045afeebe8ee22b30",
      "LastModified" : "2018-02-01T22:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ============================================================================\n\n# Copyright (c) 2006-2018, Knut Reinert, FU Berlin\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of Knut Reinert or the FU Berlin nor the names of\n\n#       its contributors may be used to endorse or promote products derived\n\n#       from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n# ============================================================================\n\n#\n\n# This CMake module will try to find SeqAn and its dependencies.  You can use\n\n# it the same way you would use any other CMake module.\n\n#\n\n#   find_package(SeqAn [REQUIRED] ...)\n\n#\n\n# SeqAn has some optional dependencies that you must search for **before**\n\n# you search for SeqAn:\n\n#\n\n#   ZLIB    -- zlib compression library\n\n#   BZip2   -- libbz2 compression library\n\n#   OpenMP  -- OpenMP language extensions to C/C++\n\n#\n\n# E.g.\n\n#   find_package (ZLIB)\n\n#   find_package (BZip2)\n\n#   find_package (SeqAn [REQUIRED] ...)\n\n#\n\n# Once the search has been performed, the following variables will be set.\n\n#\n\n#  SEQAN_FOUND           -- Indicate whether SeqAn was found.\n\n#\n\n# (the dependencies have their own *_FOUND  variables, but inside the code we\n\n# also define the following macros to indicate whether dependencies were found:\n\n# of the SeqAn library were found.\n\n#\n\n#  SEQAN_HAS_ZLIB\n\n#  SEQAN_HAS_BZIP2\n\n#  SEQAN_HAS_OPENMP\n\n#\n\n# These variables give lists that are to be passed to the\n\n# include_directories(), target_link_libraries(), and add_definitions()\n\n# functions.\n\n#\n\n#  SEQAN_INCLUDE_DIRS\n\n#  SEQAN_LIBRARIES\n\n#  SEQAN_DEFINITIONS\n\n#\n\n# The C++ compiler flags to set.\n\n#\n\n#  SEQAN_CXX_FLAGS\n\n#\n\n# The following variables give the version of the SeqAn library, its\n\n# major, minor, and the patch version part of the version string.\n\n#\n\n#  SEQAN_VERSION_STRING\n\n#  SEQAN_VERSION_MAJOR\n\n#  SEQAN_VERSION_MINOR\n\n#  SEQAN_VERSION_PATCH\n\n#\n\n# ============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Set CMAKE policies.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disables auto-dereferencing of variables in quoted statements\n",
        "Line" : 91,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Define Constants.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Set variables SEQAN_FIND_* to their default unless they have been set.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SEQAN_FIND_DEPENDENCIES\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SEQAN_FIND_DEPENDENCIES IS DEPRECATED, just use find_package!\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Deactivate verbosity if package detection is quite\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# deactivate messages in check_* if quiet\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Determine compiler.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Recognize Clang compiler.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Check required compiler versions.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# require at least gcc 4.9\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# require at least clang 3.5\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# require at least icpc 17.0.0\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# require at least MSVC 19.0\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Require C++14\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The visual studio compiler and intel compiler on windows defines __cplusplus\n\n# still as 199711L, thus the check below would fail.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Compile-specific settings and workarounds around missing CMake features.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# GCC/CLANG/ICC\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Tune warnings for GCC.\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Determine GCC version.\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Remove all but first line.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Find out version (3 or 2 components).\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Force GCC to keep the frame pointer when debugging is enabled.  This is\n\n# mainly important for 64 bit but does not get into the way on 32 bit either\n\n# at minimal performance impact.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Windows Setup\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Always set NOMINMAX such that <Windows.h> does not define min/max as\n\n# macros.\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Visual Studio Setup\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Enable intrinics (e.g. _interlockedIncrease)\n\n# COMPILER_CLANG (clang/c2 3.7) can not handle the /EHsc and /Oi flag\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Search for directory seqan.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# When using the SeqAn build system, we scan all entries in\n\n# CMAKE_INCLUDE_PATH for a subdirectory seqan and add all paths to the\n\n# variable SEQAN_INCLUDE_DIRS_MAIN.\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# When NOT using the SeqAn build system then we only look for one directory\n\n# with subdirectory seqan and thus only one library.\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Search for dependencies.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# librt, libpthread -- implicit, on Linux only\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# some OSes don't link pthread fully when building statically so we explicitly include whole archive\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# libexecinfo -- implicit\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ZLIB\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# should SeqAn search for dependency?\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# deprecated: use ZLIB_FOUND instead\n",
        "Line" : 342,
        "CharPositionInLine" : 34
      },
      "39" : {
        "Text" : "# BZip2\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# should SeqAn search for dependency?\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# NOTE(marehr): iostream_bzip2 uses the type `uInt`, which is defined by\n\n# `zlib`. Therefore, `bzip2` will cause a ton of errors without `zlib`.\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# deprecated: use BZIP2_FOUND instead\n",
        "Line" : 369,
        "CharPositionInLine" : 34
      },
      "43" : {
        "Text" : "# OpenMP\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# should SeqAn search for dependency?\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# The compiler also issues a warning\n\n# clang.exe : warning : '-fopenmp=libomp': OpenMP is not supported\n",
        "Line" : 391,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# deprecated: use OPENMP_FOUND instead\n",
        "Line" : 396,
        "CharPositionInLine" : 36
      },
      "47" : {
        "Text" : "# Example warning:\n\n# C:\\seqan-deps\\boost_1_53_0\\boost/mpl/if.hpp(131,1): error : pasting formed\n\n# 'BOOST_PP_TUPLE_ELEM_E_2(', an invalid preprocessing token\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Build SEQAN_INCLUDE_DIRS from SEQAN_INCLUDE_DIRS_MAIN and SEQAN_INCLUDE_DIRS_DEPS\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Determine and set SEQAN_VERSION_* variables.\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Scan all include dirs identified by the build system and\n\n# check if there is a file version.h in a subdir seqan/\n\n# If exists store absolute path to file and break loop.\n",
        "Line" : 427,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# If file wasn't found seqan version is set to 0.0.0\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Error log if version.h not found, otherwise read version from\n\n# version.h and cache it.\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Check for pre release.\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Cache results.\n",
        "Line" : 471,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Print Variables\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 56
    },
    "util/makefile_project/Makefile" : {
      "ObjectId" : "7321460c2246dcdb6af8a2765ad12285488fd420",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "util/makefile_project/debug/Makefile" : {
      "ObjectId" : "79ce591054163b75e6094b735f7d6efafe19870d",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "util/makefile_project/release/Makefile" : {
      "ObjectId" : "b0740be71fc5b579303090ba89d81f0b33ad794c",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "util/py_lib/CMakeLists.txt" : {
      "ObjectId" : "3509a079867adda2f22f0d4c413c02dd7babdc45",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /util/py_lib/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for Python stuff.\n\n# ===========================================================================\n\n# Kicks off tests using Python nosetests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for Python and stop if it could not be found.\n\n# require python 2.7, not python3\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for nosetests and stop if it cannot be found\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Adding test for dox.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "util/raw_cmake_project/CMakeLists.txt" : {
      "ObjectId" : "fbd1c0b6150d28dcea44c6f3794702a449a8b081",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Example CMakeLists.txt file that uses the seqan-config.cmake module for\n\n# building a SeqAn-based app.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Place binaries into \"bin\" directory.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Go to \"src\" subdirectory.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "util/raw_cmake_project/src/CMakeLists.txt" : {
      "ObjectId" : "c12652cc341ffed81f80124beba8da8b78f718ec",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure SeqAn, enabling features for libbz2 and zlib.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add include directories, defines, and flags for SeqAn (and its dependencies).\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the program and link it against the SeqAn dependency libraries.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "util/skel/app_template/CMakeLists.txt" : {
      "ObjectId" : "1c72c2be2e597758a39c234970f95e13ebd40832",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /%(CMAKE_PROJECT_PATH)s/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for %(NAME)s.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your application.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Installation\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set variables for installing, depending on the selected build type.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Install %(NAME)s in ${PREFIX}/bin directory\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install non-binary files for the package to \".\" for app builds and\n\n# ${PREFIX}/share/doc/%(NAME)s for SeqAn release builds.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#install (FILES example/fasta1.fa\n\n#               example/fasta2.fa\n\n#         DESTINATION ${SEQAN_PREFIX_SHARE_DOC}/example)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# App Test\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#seqan_add_app_test (%(NAME)s)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPack Install\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "util/skel/repository_template/CMakeLists.txt" : {
      "ObjectId" : "1b1a899d56b1761b6dd636868de3bc350f663746",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /%(CMAKE_PROJECT_PATH)s/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for %(CMAKE_PROJECT_PATH)s.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the paths %(CMAKE_PROJECT_PATH)s/include and %(CMAKE_PROJECT_PATH)s/include to the paths that CMake\n\n# searches for libraries.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Setup the library modules from core and extras.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add subdirectory for apps.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Demos are required when doing a Whole SeqAn Release (copy demos) or when\n\n# developing (build demos).\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tests are only built when building in DEVLOP mode.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "util/skel/test_template/CMakeLists.txt" : {
      "ObjectId" : "400bb4cfdd9d0a44de253c200bb53e38c040f614",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n#                  SeqAn - The Library for Sequence Analysis\n\n# ===========================================================================\n\n# File: /%(CMAKE_PROJECT_PATH)s/CMakeLists.txt\n\n#\n\n# CMakeLists.txt file for the %(NAME)s module tests.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Dependencies\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SeqAn and select dependencies.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Build Setup\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add include directories.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add definitions set by find_package (SeqAn).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Update the list of file names below if you add source files to your test.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add dependencies found by find_package (SeqAn).\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add CXX flags found by find_package (SeqAn).\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Register with CTest\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "util/travis/linux-cibuild.cmake" : {
      "ObjectId" : "35574ed2742a0d1704787f922475ca9918d287f3",
      "LastModified" : "2018-02-01T16:59:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This project name is used for the CDash submission.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define build name&co for easier identification on CDash\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create cache - mind the newline between variables!\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# customize reporting of errors in CDash\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use 4 build threads\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we want makefiles\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Copying the CTestConfig.cmake here is not optimal.  You might have to call\n\n# ctest twice to get an actual build since ctest expects it to be present\n\n# at the first time and will fail.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# run the classical ctest suite without update\n\n# travis-ci handles this for us\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# indicate errors\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 119,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 5840
}