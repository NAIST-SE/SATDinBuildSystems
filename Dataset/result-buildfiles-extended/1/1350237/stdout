{
  "Repository" : "1350237",
  "Revision" : "HEAD",
  "ObjectId" : "40f15427983cb812d4a2a6b9b50ea61205ee8083",
  "CommitTime" : "2019-04-16T19:21:52Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "89ec8303c5550d259afe8ba95069157d14d2334a",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim:noexpandtab:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This is supposed to work but doesn't!\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Detect CPU from CMAKE configuration. Toolchains should set this up\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Horrifying workaround for bug in android cmake stuff for asm files\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# the libraries in the ffmpeg/ directory are not compatible with mingw\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We only support Vulkan on Unix, Android and Windows.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# User-editable options (go into CMakeCache.txt)\n\n# :: Processors\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# :: Environments\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# :: Frontends\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# :: Options\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# add_definitions(-DVK_USE_PLATFORM_XCB_KHR)\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Let's not use elseif here so we can catch dupes.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#TODO: Remove this and include the file properly everywhere it makes sense\n\n# First step is too use the macros everywhere\n\n# Second step is to remove the compatibility defines\n\n# Third step is to include the file\n\n# Fourth step is to remove that line!\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Disable some warnings\n",
        "Line" : 265,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Don't compile with strict aliasing, we're not 100% aliasing-safe\n",
        "Line" : 269,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# enable sse2 code generation\n",
        "Line" : 276,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# We want C++11, so target 10.7+\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# TODO: See if we can get rid of no-psabi\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Disable warnings about MS-specific _s variants of libc functions\n",
        "Line" : 303,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# This sets up the MSVC project dirs according to the physical project dirs\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Figure out the file's path relative to the ProjectDir\n\n# NOTE: &#$@ double-quoted regexps\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# put the source file in a source_group equivalent to the relative path\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Commented-out files are files that don't compile\n\n# and were disabled in the original MSVC project anyway\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# required when using the dx9sdk include paths\n",
        "Line" : 463,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# These can be fast even for debug.\n",
        "Line" : 585,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# FindPNG does a few things we don't want. So do it ourselves. Fixed to libpng17\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# No target\n",
        "Line" : 732,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Enable SDL if found\n",
        "Line" : 792,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# Don't care about SDL.\n",
        "Line" : 805,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Require SDL\n",
        "Line" : 815,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# We build Vulkan even on Apple to avoid annoying build differences.\n",
        "Line" : 1327,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# 'ppsspp_jni' on ANDROID, 'Core' everywhere else\n\n# SHARED on ANDROID, STATIC everywhere else\n",
        "Line" : 1414,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# needed for VK_USE_PLATFORM_XCB_KHR only\n\n#if(VULKAN AND NOT WIN32)\n\n#\ttarget_link_libraries(native X11-xcb X11)\n\n#endif()\n",
        "Line" : 1762,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Discord integration\n",
        "Line" : 1789,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Generate git-version.cpp at build time.\n",
        "Line" : 1797,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#setup_target_project(${TargetBin} Windows)\n",
        "Line" : 1911,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# TODO: there must a native way to copy these.\n\n# Now this is very prone to errors when changes occur.\n\n# Also better to have assets under Resources dir for OS X.\n",
        "Line" : 1974,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# installs\n",
        "Line" : 2010,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# packaging and code signing\n",
        "Line" : 2015,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "Tools/SaveTool/Makefile" : {
      "ObjectId" : "fc7a38f73c20f15dce021ed462ccfa4c12b682db",
      "LastModified" : "2012-12-28T10:42:41Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Tools/SaveTool/kernelcall/Makefile" : {
      "ObjectId" : "a7138d7cd1a796d0270c44fe6ea011a1c28eba7b",
      "LastModified" : "2012-12-28T10:42:41Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Tools/pauth_tool/Makefile" : {
      "ObjectId" : "cc8b5e3107619cd8a26378dfc6125eb00821dc67",
      "LastModified" : "2014-04-29T12:44:48Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "android/build.xml" : {
      "ObjectId" : "857125cf8db5a4241d97e44c2203bfb9af26656b",
      "LastModified" : "2014-04-29T12:44:48Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " this property is needed to run the script via ANT. It requires the NDK\n        environment variable which is accessed by ant during the build process ",
        "Line" : 41,
        "CharPositionInLine" : 83
      },
      "4" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 54,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 57,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : " version-tag: 1 ",
        "Line" : 95,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 9
    },
    "cmake/Modules/FindFFmpeg.cmake" : {
      "ObjectId" : "a8c482dc218edc6fac080b311e5f069157838cb4",
      "LastModified" : "2016-12-19T01:29:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindFFmpeg\n\n# ----------\n\n#\n\n# Find the native FFmpeg includes and libraries\n\n#\n\n# This module defines the following variables:\n\n#\n\n#  FFmpeg_INCLUDE_<component>: where to find <component>.h\n\n#  FFmpeg_LIBRARY_<component>: where to find the <component> library\n\n#  FFmpeg_INCLUDES: aggregate all the include paths\n\n#  FFmpeg_LIBRARIES: aggregate all the paths to the libraries\n\n#  FFmpeg_FOUND: True if all components have been found\n\n#\n\n# This module defines the following targets, which are prefered over variables:\n\n#\n\n#  FFmpeg::<component>: Target to use <component> directly, with include path,\n\n#    library and dependencies set up. If you are using a static build, you are\n\n#    responsible for adding any external dependencies (such as zlib, bzlib...).\n\n#\n\n# <component> can be one of:\n\n#   avcodec\n\n#   avdevice\n\n#   avfilter\n\n#   avformat\n\n#   postproc\n\n#   swresample\n\n#   swscale\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Didn't find it in the usual paths, try pkg-config\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLibZip.cmake" : {
      "ObjectId" : "778da584f0735993175c8bd98cc7287ffc222b6e",
      "LastModified" : "2016-12-19T01:29:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://code.google.com/p/osgearth-for-android/source/browse/trunk/CMakeModules/FindLibZip.cmake?r=4\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# osgEarth - Dynamic map generation toolkit for OpenSceneGraph\n\n# Copyright 2008-2010 Pelican Mapping\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://osgearth.org\n\n# git://github.com/gwaldron/osgearth\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# osgEarth is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU Lesser General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU Lesser General Public License for more details.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# You should have received a copy of the GNU Lesser General Public License\n\n# along with this program.  If not, see <http://www.gnu.org/licenses/>\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Locate libzip\n\n# This module defines\n\n# LIBZIP_LIBRARY\n\n# LIBZIP_FOUND, if false, do not try to link to libzip \n\n# LIBZIP_INCLUDE_DIR, where to find the headers\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fink\n",
        "Line" : 40,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 41,
        "CharPositionInLine" : 23
      },
      "9" : {
        "Text" : "# Blastwave\n",
        "Line" : 42,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 10
    },
    "cmake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "08d8dc60807f21eb0694bc3cec5cbf12122bb296",
      "LastModified" : "2016-12-19T01:29:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2\n\n# Find the SDL2 headers and libraries\n\n#\n\n#  SDL2::SDL2 - Imported target to use for building a library\n\n#  SDL2::SDL2main - Imported interface target to use if you want SDL and SDLmain.\n\n#  SDL2_FOUND - True if SDL2 was found.\n\n#  SDL2_DYNAMIC - If we found a DLL version of SDL (meaning you might want to copy a DLL from SDL2::SDL2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up architectures (for windows) and prefixes (for mingw builds)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some special-casing if we've found/been given a framework.\n\n# Handles whether we're given the library inside the framework or the framework itself.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move up in the directory tree as required to get the framework directory.\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# If we found a framework, do a search for the header ahead of time that will be more likely to get the framework header.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 94,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# For some reason we couldn't get the framework directory itself.\n\n# Shouldn't happen, but might if something is weird.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 106,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# Restore things the way they used to be.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create SDL2::SDL2\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Handle the case that SDL2 is a framework and we were able to decompose it above.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Handle the case that SDL2 is a framework and SDL_LIBRARY is just the framework itself.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# This takes the basename of the framework, without the extension,\n\n# and sets it (as a child of the framework) as the imported location for the target.\n\n# This is the library symlink inside of the framework.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Handle non-frameworks (including non-Mac), as well as the case that we're given the library inside of the framework\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Need Cocoa here, is always a framework\n",
        "Line" : 196,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Compute what to do with SDL2main\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MinGW requires some additional libraries to appear earlier in the link line.\n",
        "Line" : 217,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# Use pkgconfig-suggested extra libraries if available.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# fall back to extra libraries specified in pkg-config in\n\n# an official binary distro of SDL2 for MinGW I downloaded\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "cmake/Modules/FindSnappy.cmake" : {
      "ObjectId" : "3b906a0a6597871246175bc69ff9fb37f29d1d3f",
      "LastModified" : "2017-03-19T17:46:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n\n#\n\n# Tries to find Snappy headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#  find_package(Snappy)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  SNAPPY_ROOT_DIR  Set this variable to the root installation of\n\n#                    Snappy if the module has problems finding\n\n#                    the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  SNAPPY_FOUND              System has Snappy libs/headers\n\n#  SNAPPY_LIBRARIES          The Snappy libraries\n\n#  SNAPPY_INCLUDE_DIR        The location of Snappy headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindWayland.cmake" : {
      "ObjectId" : "f93218b8739e66a50678a4b6965231438b87692f",
      "LastModified" : "2017-12-26T23:24:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Wayland on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   WAYLAND_FOUND       - True if Wayland is found\n\n#   WAYLAND_LIBRARIES   - Link these to use Wayland\n\n#   WAYLAND_INCLUDE_DIR - Include directory for Wayland\n\n#   WAYLAND_DEFINITIONS - Compiler flags for using Wayland\n\n#\n\n# In addition the following more fine grained variables will be defined:\n\n#\n\n#   WAYLAND_CLIENT_FOUND  WAYLAND_CLIENT_INCLUDE_DIR  WAYLAND_CLIENT_LIBRARIES\n\n#   WAYLAND_SERVER_FOUND  WAYLAND_SERVER_INCLUDE_DIR  WAYLAND_SERVER_LIBRARIES\n\n#   WAYLAND_EGL_FOUND     WAYLAND_EGL_INCLUDE_DIR     WAYLAND_EGL_LIBRARIES\n\n#\n\n# Copyright (c) 2013 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In the cache already\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/ccache.cmake" : {
      "ObjectId" : "35e0eeab732cdab2c8fe4722f0016168f42924dd",
      "LastModified" : "2017-12-26T23:24:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Using ccache greatly improves the speed of our CI builds, let's enable for all.\n\n# Without this, our CI can't use ccache for clang, for some reason.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ccache uses -I when compiling without preprocessor, which makes clang complain.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Toolchains/beagleboard.cmake" : {
      "ObjectId" : "310d13f0713677e6a26ff7a6405d08b2afbedea7",
      "LastModified" : "2017-12-26T23:24:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Toolchains/generic.armv7.cmake" : {
      "ObjectId" : "65a60943f49439cd60f5deba05f8206236c6c9ec",
      "LastModified" : "2017-12-26T23:24:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Toolchains/ios.cmake" : {
      "ObjectId" : "718e2705613257bdb0afe93bfd9642a97e2b674a",
      "LastModified" : "2017-12-26T23:24:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default)\n\n#   This needs to be OS as the simulator cannot use the required GLES2.0 environment.\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PPSSPP platform flags\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard settings\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setup iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set the architecture for iOS \n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# When ffmpeg has been rebuilt for arm64 use:\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#set(IOS_ARCH \"armv7\")\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/Toolchains/raspberry.armv6.cmake" : {
      "ObjectId" : "6167d90f731bd8e7f50403492c16ff9c293a6b0d",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Toolchains/raspberry.armv7.cmake" : {
      "ObjectId" : "31b8b77c96361a01b0c81347d31133b27aed8138",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Toolchains/vero4k.armv8.cmake" : {
      "ObjectId" : "28720127b3473c5ac9f5c4738f3d325ab6e6b62b",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/CMakeLists.txt" : {
      "ObjectId" : "b259a6f059da863af6bd8d34c3c48811c68e09f1",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/SPIRV-Cross-build/CMakeLists.txt" : {
      "ObjectId" : "b550bad7d97d9f99b7f8a1a2f7307aee06012197",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2016 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(spirv-cross main.cpp)\n\n#target_link_libraries(spirv-cross spirv-cross-glsl spirv-cross-cpp spirv-cross-msl spirv-cross-hlsl spirv-cross-core)\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# To specify special debug or optimization options, use\n\n# -DCMAKE_CXX_COMPILE_FLAGS\n\n# However, we require the C++11 dialect.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ext/cmake/armips/CMakeLists.txt" : {
      "ObjectId" : "96ef055b476a5bde6ced63aba4d1ac42b68ff448",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/discord-rpc-build/CMakeLists.txt" : {
      "ObjectId" : "a63ec8eecf5cf5743e008a07ebb0e6ea7e4fb3f8",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# format\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ext/glew/CMakeLists.txt" : {
      "ObjectId" : "f147939a929ac7dcc81c1c39b14ef99a577fad0b",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/libkirk/CMakeLists.txt" : {
      "ObjectId" : "6b8cb5fabd09d7a3231e60d89ba9838788eeb652",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/base/CMakeLists.txt" : {
      "ObjectId" : "9915f73bec093f79c8c9068c2566421fa49be9b8",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/ext/libpng17/CMakeLists.txt" : {
      "ObjectId" : "d2829cd3fea19c0705147eb392d394981377319a",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/ext/libzip/CMakeLists.txt" : {
      "ObjectId" : "c819364fb49b5114fe0f73e93759057d9e877369",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/ext/rg_etc1/CMakeLists.txt" : {
      "ObjectId" : "70f73115f44821d369e08269305c9720d2a37aa2",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/ext/sha1/CMakeLists.txt" : {
      "ObjectId" : "cb83b1eaec7cf394a9e33e1738b6c8486b095d1c",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(UNIX)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endif(UNIX)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ext/native/file/CMakeLists.txt" : {
      "ObjectId" : "6cb73d143a4eda1cc2e566bfa542ca1147a22d58",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/gfx/CMakeLists.txt" : {
      "ObjectId" : "8d2351aed66ee28d53db7d10d9432243443a633d",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/gfx_es2/CMakeLists.txt" : {
      "ObjectId" : "75fbdd6ea89c7fd5dcd1c084f45d20b6a2269bad",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/image/CMakeLists.txt" : {
      "ObjectId" : "c835ef7134d7b0a3a9e165c5a1b0ef9c4690e3b2",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/input/CMakeLists.txt" : {
      "ObjectId" : "266cff4ba70290b614c7d53028d753b3a70cec75",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/json/CMakeLists.txt" : {
      "ObjectId" : "9c3ec2f57fbc0f0c5fd44b96cc3629fd7c700cff",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/math/CMakeLists.txt" : {
      "ObjectId" : "4093973f0611c2939aee7fbbf9ed36da99848403",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/net/CMakeLists.txt" : {
      "ObjectId" : "10d69f4d51ed5dae77de9a194fecf84d1d41e46b",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/profiler/CMakeLists.txt" : {
      "ObjectId" : "f3f9673dac3ed852f113e8caa66f37a88d39d5df",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LGUIFileList.cpp\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ext/native/tools/CMakeLists.txt" : {
      "ObjectId" : "bd9365f37a900f2e3c3e2f230662ed399e2f3833",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-fopenmp)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_definitions(-fstrict-aliasing)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Horrible horrible hack\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ext/native/ui/CMakeLists.txt" : {
      "ObjectId" : "40530c53b7ef844c1197733a30e318b83a7135f1",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/native/util/CMakeLists.txt" : {
      "ObjectId" : "9d632a0ad9700aece5cdca3a78672bf667cc8691",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/snappy/CMakeLists.txt" : {
      "ObjectId" : "6ab38acd0e48e744d4eaea4d0a9fabd1ccafddd0",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/udis86/CMakeLists.txt" : {
      "ObjectId" : "077ea33d834e6b074b643bc4a9bf3941cc47715b",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/zlib/CMakeLists.txt" : {
      "ObjectId" : "a64fe0b2cae5790b2a20ff30898f31919cf5767f",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "git-version.cmake" : {
      "ObjectId" : "97a9de9710244de7da01ca4fbb6961035b949db9",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't update if marked not to update.\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Don't update if it's already the same.\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "libretro/CMakeLists.txt" : {
      "ObjectId" : "b590cc25df15ee21aad749981b720a78f87289a6",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libretro/Makefile" : {
      "ObjectId" : "8970ddc036c1cf4604a9a90cf659544a4399a792",
      "LastModified" : "2019-03-23T15:25:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Cross compile ?\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dirs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Unix\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Raspberry Pi\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# i.MX6\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OS X\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# iOS\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Android\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# QNX\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ARM\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# emscripten\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Windows MSVC 2017 all architectures\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12,
      "Errorlog" : "line 288:72 token recognition error at: '\\S'\nline 288:81 token recognition error at: '\\W'\nline 288:93 token recognition error at: '\\M'\nline 288:103 token recognition error at: '\\M'\nline 288:118 token recognition error at: '\\W'\nline 288:126 token recognition error at: '\\v'\nline 289:71 token recognition error at: '\\S'\nline 289:80 token recognition error at: '\\W'\nline 289:92 token recognition error at: '\\M'\nline 289:102 token recognition error at: '\\M'\nline 289:117 token recognition error at: '\\W'\nline 289:125 token recognition error at: '\\v'\nline 290:72 token recognition error at: '\\S'\nline 290:81 token recognition error at: '\\M'\nline 290:91 token recognition error at: '\\M'\nline 290:106 token recognition error at: '\\W'\nline 290:114 token recognition error at: '\\v'\nline 291:71 token recognition error at: '\\S'\nline 291:80 token recognition error at: '\\M'\nline 291:90 token recognition error at: '\\M'\nline 291:105 token recognition error at: '\\W'\nline 291:113 token recognition error at: '\\v'\nline 318:50 token recognition error at: '\"$(WindowsSdkDir)\\I'\nline 318:96 token recognition error at: '\\s'\nline 319:65 token recognition error at: '\\I'\nline 319:94 token recognition error at: '\\u'\nline 320:63 token recognition error at: '\\I'\nline 320:92 token recognition error at: '\\u'\nline 321:61 token recognition error at: '\\L'\nline 321:86 token recognition error at: '\\u'\nline 322:59 token recognition error at: '\\L'\nline 322:84 token recognition error at: '\\u'\nline 342:74 token recognition error at: '\")\\n\\n\\texport INCLUDE := $(INCLUDE);$(WindowsSDKSharedIncludeDir);$(WindowsSDKUCRTIncludeDir);$(WindowsSDKUMIncludeDir)\\n\\texport LIB := $(LIB);$(WindowsSDKUCRTLibDir);$(WindowsSDKUMLibDir);$(FFMPEGDIR)/Windows/$(TARGET_ARCH)/lib\\n\\tTARGET := $(TARGET_NAME)_libretro.dll\\n\\tPSS_STYLE :=2\\n\\tLDFLAGS += -DLL\\n\\tPLATFORM_EXT := win32\\n\\tFFMPEGINCFLAGS += -I$(FFMPEGDIR)/Windows/$(TARGET_ARCH)/include\\n\\tFFMPEGLIBDIR := $(FFMPEGDIR)/Windows/$(TARGET_ARCH)/lib\\n\\tFFMPEGLDFLAGS += -LIBPATH:$(FFMPEGLIBDIR)\\n\\tGL_LIB := opengl32.lib\\n\\tLDFLAGS += ws2_32.lib user32.lib shell32.lib avcodec.lib avutil.lib swresample.lib swscale.lib avformat.lib advapi32.lib winmm.lib gdi32.lib d3d9.lib d3dx9.lib\\n\\n# Windows\\nelse ifneq (,$(findstring win,$(platform)))   \\n\\tTARGET := $(TARGET_NAME)_libretro.dll\\n\\tCFLAGS += -D_UNICODE -DUNICODE\\n\\tCXXFLAGS += -fpermissive -Wno-multichar -D_UNICODE -DUNICODE\\n\\tLDFLAGS += -shared -Wl,--no-undefined -static-libgcc -static-libstdc++ -Wl,--version-script=link.T -lwinmm -lgdi32 -lwsock32 -lws2_32 -ld3d9 -ld3dx9\\n\\tGL_LIB := -lopengl32\\n\\tPLATFORM_EXT := win32\\n   FFMPEGINCFLAGS += -I$(FFMPEGDIR)/Windows/$(TARGET_ARCH)/include\\n   FFMPEGLDFLAGS += -lavformat -lavcodec -lavutil -lswresample -lswscale\\n   INCFLAGS += -include $(CORE_DIR)/Windows/mingw_defines.h\\n   ifneq (,$(findstring 64,$(TARGET_ARCH)))\\n\\t\\tLDFLAGS += -L$(CORE_DIR)/dx9sdk/Lib/x64\\n\\telse\\n\\t\\tLDFLAGS += -L$(CORE_DIR)/dx9sdk/Lib/x86\\n\\tendif\\n   fpic = -fPIC\\n\\tCC = gcc\\n\\tCXX = g++\\nendif\\n\\ninclude Makefile.common\\n\\nifeq ($(GLES), 1)\\n\\tGLFLAGS += -DGLES -DUSING_GLES2\\nelse\\n\\tGLFLAGS += -DHAVE_OPENGL\\nendif\\n\\nCOREFLAGS += -D__LIBRETRO__ -DPPSSPP -DUSE_FFMPEG -DGLEW_STATIC -DGLEW_NO_GLU\\n\\nifeq ($(DEBUG), 1)\\n\\tifneq (,$(findstring msvc,$(platform)))\\n\\t\\tCPUOPTS += -Od -MDd -Zi -FS\\n\\t\\tLDFLAGS += -DEBUG\\n\\telse\\n\\t\\tCPUOPTS += -O0 -g\\n\\tendif\\n\\tCPUOPTS += -D_DEBUG\\nelse\\n\\tCPUOPTS += -O2 -D_NDEBUG\\nendif\\n\\nifeq (,$(findstring msvc,$(platform)))\\n   CXXFLAGS += -std=c++11\\nendif\\n\\n### Finalize ###\\nOBJECTS\\t\\t+= $(SOURCES_CXX:.cpp=.o) $(SOURCES_C:.c=.o) $(ASMFILES:.S=.o)\\nCXXFLAGS    += $(CPUOPTS) $(COREFLAGS) $(FFMPEGINCFLAGS) $(INCFLAGS) $(INCFLAGS_PLATFORM) $(PLATCFLAGS) $(fpic) $(PLATCFLAGS) $(CPUFLAGS) $(GLFLAGS) $(DYNAFLAGS)\\nCFLAGS\\t\\t+= $(CPUOPTS) $(COREFLAGS) $(FFMPEGINCFLAGS) $(INCFLAGS) $(INCFLAGS_PLATFORM) $(PLATCFLAGS) $(fpic) $(PLATCFLAGS) $(CPUFLAGS) $(GLFLAGS) $(DYNAFLAGS)\\n\\nLDFLAGS\\t\\t+= $(FFMPEGLDFLAGS) $(fpic)\\nifeq (,$(findstring android,$(platform))$(findstring msvc,$(platform)))\\n   LDFLAGS\\t+= -lpthread\\nendif\\n\\nOBJOUT   = -o\\nLINKOUT  = -o \\n\\nifneq (,$(findstring msvc,$(platform)))\\n\\tOBJOUT = -Fo\\n\\tLINKOUT = -out:\\n\\tLD = link.exe\\nelse ifneq (,$(findstring osx,$(platform)))\\n\\tLD = $(CXX)\\nelse\\n\\tLD = $(CXX)\\n   CFLAGS += -ffunction-sections -fdata-sections\\n   CXXFLAGS += -ffunction-sections -fdata-sections\\n   LDFLAGS += -Wl,--gc-sections\\nendif\\n\\nall: $(TARGET)\\n\\n%.o: %.S\\n\\t$(AS) $(CFLAGS) -c $(OBJOUT)$@ $<\\n\\n%.o: %.c\\n\\t$(CC) $(CFLAGS) -c $(OBJOUT)$@ $<\\n\\n%.o: %.cpp\\n\\t$(CXX) $(CXXFLAGS) -c $(OBJOUT)$@ $<\\n\\n$(TARGET): $(OBJECTS)\\nifeq ($(STATIC_LINKING), 1)\\n\\t$(AR) rcs $A $(OBJECTS)\\nelse\\n\\t$(LD) $(LINKOUT)$@ $(OBJECTS) $(LDFLAGS) $(GL_LIB)\\nendif\\n\\nclean:\\n\\trm -f $(OBJECTS) $(TARGET)\\n\\n.PHONY: clean\\n\\nprint-%:\\n\\t@echo '$*=$($*)'\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "CMAKE" : 41,
    "MAKEFILE" : 4,
    "ANT" : 1
  },
  "ElapsedTime" : 6509
}