{
  "Repository" : "35476560",
  "Revision" : "HEAD",
  "ObjectId" : "bcdf090e04fbf41db13da6969902f6685bab006c",
  "CommitTime" : "2019-04-17T20:01:31Z",
  "Files" : {
    "benchmark/clients/java/pubsub/pom.xml" : {
      "ObjectId" : "58f2295f9dccad2fbf55afdd1ee9bee474425392",
      "LastModified" : "2017-06-19T03:44:22Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "gapic_generator.bzl" : {
      "ObjectId" : "f38ac43bb41f30a54d18020386af9af09e66e14e",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert .java file path to fully qualified class name",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# TODO: this may fail if list of files is too long (exceeds max command line limit in shell).\n#       Split the command into multiple executions if this ever fails (good enough for now)",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "repositories.bzl" : {
      "ObjectId" : "275b5e9c0e6ab9b0f97040272f86bfc624ebf615",
      "LastModified" : "2019-04-08T20:28:18Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Import dependencies shared between Gradle and Bazel (i.e. maven dependencies)",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Import Bazel-only dependencies (Gradle version will import maven artifacts of same\n# version, while Bazel will depend on Bazel workspaces). The versions are shared in the\n# properties file.",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Fix the artifact id format discrepancy between Bazel & Gradle.\n# This is relevant only when classifier is specified explicitly.\n# Bazel format:  groupId:artifactId:jar:classifier:version\n# Gradle format: groupId:artifactId:version:classifier",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "repository_rules.bzl" : {
      "ObjectId" : "2f0a043de4e01e5b53e735f60fedb4e1bd8dcdc6",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\n# DO NOT EDIT. This file was generated from {properties_file}.\nPROPERTIES = {props_as_map}\n     \"\"\"",
        "Line" : 33,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 2
    },
    "rules_gapic/gapic.bzl" : {
      "ObjectId" : "3f72ec7b8d42744dcb521061243b727d9093e4dc",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# src is used instead of srcs, because of the limitation of gapic-generator\n# (more specifically the api-compiler, which is a dependency of gapic-generator), which\n# accepts only single descriptor (a fat one, with embedded imports)",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# This is needed to properly support `go_proto_library`",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# This makes `proto_custom_library` pretend that it returns same provider as the native\n# `proto_library rule` (ProtoInfo provider). This allows using proto_custom_library output as\n# its own input (deps). Copy other properties of ProtoSourcesProvider if ever needed.\n# Currently only the following fields are provided:\n#   - direct_sources\n#   - check_deps_sources\n#   - transitive_imports\n#   - transitive_descriptor_sets",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"\n    unzip -q {srcjar} -d {output_dir}\n    \"\"\"",
        "Line" : 204,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "#\n# Private helper functions\n#",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "rules_gapic/go/go_gapic.bzl" : {
      "ObjectId" : "88094fa9e96e4782e800a0de9dfba742d8508e79",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note the script is more complicated than it intuitively should be because of limitations\n# inherent to bazel execution environment: no absolute paths allowed, the generated artifacts\n# must ensure uniqueness within a build.",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"\n    unzip -q {gapic_srcjar} -d {output_dir_path}\n    {formatter} -w -l {output_dir_path}\n    pushd .\n    cd {output_dir_path}\n    zip -q -r {output_dir_name}-smoke-test.srcjar . -i ./*_smoke_test.go\n    find . -name \"*_smoke_test.go\" -delete\n    zip -q -r {output_dir_name}-test.srcjar . -i ./*_test.go\n    find . -name \"*_test.go\" -delete\n    zip -q -r {output_dir_name}.srcjar . -i ./*.go\n    popd\n    mv {output_dir_path}/{output_dir_name}-smoke-test.srcjar {output_smoke_test}\n    mv {output_dir_path}/{output_dir_name}-test.srcjar {output_test}\n    mv {output_dir_path}/{output_dir_name}.srcjar {output_main}\n    \"\"\"",
        "Line" : 36,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# TODO: make smoke_tests compilable (remove /internal/ dependency from generated code)\n# Smoke_test_library_name = \"%s_smoke_test\" % name",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#Turn on if we choose to compile/run smoke tests\n# smoke_test_file = \":%s-smoke-test.srcjar\" % srcjar_name\n# smoke_test_dir = \"%s_smoke_test\" % srcjar_name",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# unzipped_srcjar(\n#     name = smoke_test_dir,\n#     srcjar = smoke_test_file,\n#     extension = \".go\",\n# )",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "rules_gapic/go/go_gapic_pkg.bzl" : {
      "ObjectId" : "43d7dd8d735237fe54340cdefce4a34ea378f56e",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\n    for srcjar in {srcjars}; do\n        mkdir -p {package_dir_path}\n        unzip -q -o $srcjar -d {package_dir_path}\n    done\n    for src_str in {srcs_strs}; do\n        # Split the `src_str` string in format '<dest_dir_path>:<full_file_path>' by ':' delimiter\n        # dest_dir_path:  ${{src_str%:*}}\n        # full_file_path: ${{src_str#*:}}\n        if [ -d \"${{src_str#*:}}\" ]; then\n            mkdir -p {package_dir_path}\n            cp -R -L ${{src_str#*:}}/* {package_dir_path}/\n        else\n            mkdir -p {package_dir_path}/${{src_str%:*}}\n            cp -f ${{src_str#*:}} {package_dir_path}/${{src_str%:*}}\n        fi\n        chmod 644 {package_dir_path}/${{src_str%:*}}/*\n    done\n    cd {package_dir_path}\n    tar -zchpf {package_dir}.tar.gz {package_dir_expr}\n    cd -\n    mv {package_dir_path}/{package_dir}.tar.gz {pkg}\n    \"\"\"",
        "Line" : 35,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 2
    },
    "rules_gapic/go/go_gapic_repositories.bzl" : {
      "ObjectId" : "5792c8017b0888b2374703dc450d114ddcfaa46c",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: https://github.com/googleapis/gapic-generator/issues/2534\n# This must be removed (otherwise googleapis keeps having dependency on google-cloud-go)\n# we have to add it as a temporary workaround, because the generated go clients transitively\n# depend on `cloud.google.com/go/compute/metadata` which is a part of google-cloud-go.\n# There are other dependencies as well (longrunning for example).",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rules_gapic/java/java_gapic.bzl" : {
      "ObjectId" : "3026b0ddb34226685bfd319f0ec33669b8f71432",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note the script is more complicated than it intuitively should be because of limitations\n# inherent to bazel execution environment: no absolute paths allowed, the generated artifacts\n# must ensure uniqueness within a build.",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"\n    unzip -q {gapic_srcjar} -d {output_dir_path}\n    # This may fail if there are spaces and/or too many files (exceed max length of command length).\n    {formatter} --replace $(find {output_dir_path} -type f -printf \"%p \")\n    pushd .\n    cd {output_dir_path}\n    cd src/main/java && zip -q -r ../../../{output_dir_name}.srcjar ./* && cd -\n    cd src/test/java && zip -q -r ../../../{output_dir_name}-tests.srcjar ./* && cd -\n    popd\n    mv {output_dir_path}/{output_dir_name}.srcjar {output_main}\n    mv {output_dir_path}/{output_dir_name}-tests.srcjar {output_test}\n    \"\"\"",
        "Line" : 29,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 3
    },
    "rules_gapic/java/java_gapic_pkg.bzl" : {
      "ObjectId" : "4d0d5a24553bfaa696f7650f182c4ecf9f142ab7",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note the script is more complicated than it intuitively should be because of the limitations\n# inherent to bazel execution environment: no absolute paths allowed, the generated artifacts\n# must ensure uniqueness within a build. The template output directory manipulations are\n# to modify default 555 file permissions on any generated by bazel file (exectuable read-only,\n# which is not at all what we need for build files). There is no bazel built-in way to change\n# the generated files permissions, also the actual files accessible by the script are symlinks\n# and `chmod`, when applied to a directory, does not change the attributes of symlink targets\n# inside the directory. Chaning the symlink target's permissions is also not an option, because\n# they are on a read-only file system.",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"\n    mkdir -p {package_dir_path}\n    for templ in {templates}; do\n        cp $templ {package_dir_path}/\n    done\n    chmod 644 {package_dir_path}/*\n    cd {package_dir_path}\n    tar -zchpf {package_dir}.tar.gz {package_dir_expr}\n    cd -\n    mv {package_dir_path}/{package_dir}.tar.gz {pkg}\n    \"\"\"",
        "Line" : 61,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Note the script is more complicated than it intuitively should be because of limitations\n# inherent to bazel execution environment: no absolute paths allowed, the generated artifacts\n# must ensure uniqueness within a build.",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"\n    for src in {srcs}; do\n        mkdir -p {package_dir_path}/src/main/java\n        unzip -q -o $src -d {package_dir_path}/src/main/java\n        rm -r -f {package_dir_path}/src/main/java/META-INF\n    done\n    for proto_src in {proto_srcs}; do\n        mkdir -p {package_dir_path}/src/main/proto\n        cp -f --parents $proto_src {package_dir_path}/src/main/proto\n    done\n    for test_src in {test_srcs}; do\n        mkdir -p {package_dir_path}/src/test/java\n        unzip -q -o $test_src -d {package_dir_path}/src/test/java\n        rm -r -f {package_dir_path}/src/test/java/META-INF\n    done\n    cd {package_dir_path}\n    tar -zchpf {package_dir}.tar.gz {package_dir_expr}\n    cd -\n    mv {package_dir_path}/{package_dir}.tar.gz {pkg}\n    \"\"\"",
        "Line" : 118,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# TODO: the output of `java_gapic_assembly_gradle_pkg` is broken now\n#  (because of missing the maven artifacts for the Bazel dependencies\n#  we now depend on (gax, grpc). Fix this.",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# \"@com_google_protobuf_protobuf_java//jar\",",
        "Line" : 178,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# \"@io_grpc_grpc_protobuf//jar\",\n# \"@io_grpc_grpc_stub//jar\",",
        "Line" : 199,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "#\n# Private helper functions\n#",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We need to include label in the path to eliminate possible output files duplicates\n# (labels are guaranteed to be unique by bazel itself)",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "rules_gapic/java/java_gapic_pkg_deps_resolution.bzl" : {
      "ObjectId" : "63ab9bc45f901399bf0ecec8f6265c8513378ad1",
      "LastModified" : "2019-03-07T23:56:01Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a bit ugly, but there is no way to pass a function object as a rule parameter. As a\n# workaround passing a function name as string instead and then resolving the actual function object\n# using the following map.",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n# Private helper functions\n#",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Is sorting appropriate here?",
        "Line" : 104,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "\"\"\"\n    This method reconstruct artifact id in the form of `group:name:version:classifier` from the\n    corresponding jar dependency file's full path. This implies that maven_jar targets are named\n    following the convention documented in bazel's official documentation (a relatively safe\n    assumption).\n\n    The aforementioned bazel documentation link: https://docs.bazel.build/versions/master/be/workspace.html#maven_jar\n\n    The implementation approach is dictated by the fact that maven_jar rule and corresponding java_*\n    bazel rules drop the original artifact information (after downloading the jar is completely\n    \"demavenized\"). Also there is really no good way of retreiving the value of the \"artifact\"\n    attribute value (passed to maven_jar rule) during analysis phase (note, native.existing_rule()\n    is not available during analysis phase).\n\n    There is no support for regular expressions in Starlark, so all the string shenanigans are done\n    the \"old school\" way.\n\n    Args:\n        file: (File) The File object, representing the jar dependency. Required.\n        group_overrides: {\"name\": \"group\"} dictionary to explicitly override calculated group for an\n            artifact, for cases, when either convention (maven artifact naming or bazel repository\n            target naming) is not followed.\n\n    Returns:\n        tuple: (string, string, string, string) The artifact id in the form of a tuple\n            (group, name, version, classifier), for example (\"com.google.api\", \"gax-grpc\", \"1.30.0\", \"testlib\")\n    \"\"\"",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Reconstructing the `name:version:classifier` portion from basename",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Representing [group, name, version, classifier]",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Meven splits artifact name version and classifier with '-'",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Find first chunk, which contains only digits and dots, recognize this as the beginning\n# of the version portion of artifact id.",
        "Line" : 153,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Everything, which comes after version chunk and does not have digits in it is\n# recognized as a classifier chunk, otherwise (if there is at least one digit) it is\n# recognized as a continuation of the version and appended to the artifact version\n# portion accordingly.",
        "Line" : 159,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Reconstructing `group` portion from dirname (full path to dependency jar). This assumes that\n# maven_jar's target names follow official naming best practices.",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Simply use overridden (manually specified) group name for the artifact name, if provided",
        "Line" : 173,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Try to reconstruct the group name from the jar's file path.\n# The path contains the maven_jar's target name as one of its folder names, this is what\n# we are interested in here.",
        "Line" : 176,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# Everything, which stands to the left of the artifact-name in maven_jar's target\n# name is recognized as a group name, where each '.' is replaced with '_'",
        "Line" : 186,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# A hack to support guava-android and guava-jre (android and jre belong to a version chunk,\n# but will be detected as a classifier chunck without this hack).",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "rules_gapic/java/java_gapic_repositories.bzl" : {
      "ObjectId" : "0e13ab4c5b90573b4e0a46b1d78086522b70c7a4",
      "LastModified" : "2019-03-28T18:26:44Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generated libraries direct dependencies",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "BAZEL" : 11,
    "MAVEN" : 1
  },
  "ElapsedTime" : 2852
}