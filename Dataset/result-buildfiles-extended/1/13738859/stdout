{
  "Repository" : "13738859",
  "Revision" : "HEAD",
  "ObjectId" : "0667a20ed0d41c3af50da788f191e5d485aa375e",
  "CommitTime" : "2019-04-15T12:20:42Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "b4b3058c0508326d8d528567ad11b99707ad84d7",
      "LastModified" : "2018-11-27T18:14:07Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##\n\n# @file Makefile.am\n\n# @brief an input file for automake tool\n\n#\n\n# (c) 2013-2014 by Mega Limited, Wellsford, New Zealand\n\n#\n\n# This file is part of the MEGA SDK - Client Access Engine.\n\n#\n\n# Applications using the MEGA API must present a valid application key\n\n# and comply with the the rules set forth in the Terms of Service.\n\n#\n\n# The MEGA SDK is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n# @copyright Simplified (2-clause) BSD License.\n\n#\n\n# You should have received a copy of the license along with this\n\n# program.\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bindings/doc/java/sphinx/Makefile" : {
      "ObjectId" : "ff9fc04f4707d11eb4680e109aee4a0a41689620",
      "LastModified" : "2015-10-14T05:09:46Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "bindings/ios/3rdparty/iOS.cmake" : {
      "ObjectId" : "7237c03b0643db249d9e8062533e9d2663120e67",
      "LastModified" : "2016-11-09T17:54:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR or SIMULATOR64\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macros:\n\n#\n\n# set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#  A convenience macro for setting xcode specific properties on targets\n\n#  example: set_xcode_property (myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n# find_host_package (PROGRAM ARGS)\n\n#  A macro used to find executable programs on the host system, not within the iOS environment.\n\n#  Thanks to the android-cmake project for providing the command\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard settings\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required as of cmake 2.8.10\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the cmake host system version so we know where to find the iOS SDKs\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force the compilers to gcc for iOS\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setup iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Setup building for arm64 or not\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find and use the most recent iOS sdk unless specified manually with CMAKE_IOS_SDK_ROOT\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set the architecture for iOS \n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# This little macro lets you set any XCode specific property\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This macro lets you find executable programs on the host system\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "bindings/qt/sdk.pri" : {
      "ObjectId" : "41b4336ba7ddf9b26803dbc2eb97c7468779a889",
      "LastModified" : "2019-04-12T11:22:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#this will set _cplusplus correctly in MSVC >= 2017 15.7 Preview 3\n",
        "Line" : 92,
        "CharPositionInLine" : 49
      },
      "1" : {
        "Text" : "#win/mac\n",
        "Line" : 208,
        "CharPositionInLine" : 10
      },
      "2" : {
        "Text" : "#particular distros requirements\n",
        "Line" : 249,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#required in fedora ffmpeg/arch compilation\n",
        "Line" : 251,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "#required in arch ffmpeg compilation\n",
        "Line" : 255,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "#win/mac\n",
        "Line" : 259,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# comment this line to use WinHTTP on Windows\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# link winhttp anyway (required for automatic proxy detection)\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "contrib/QtCreator/MEGATestSuite/MEGATestSuite.pro" : {
      "ObjectId" : "20e078fd316a4b0ac295a70527f9144c9eda002e",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/QtCreator/MEGATestSuite/MEGAcryptotests/MEGAcryptotests.pro" : {
      "ObjectId" : "5ab3cda8f9f0d577ab041dfda4a2b882ba5b1e13",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/QtCreator/MEGATestSuite/MEGAsynctests/MEGAsynctests.pro" : {
      "ObjectId" : "6466d7bf6e8cc309833478e572b707caf2c1d21a",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/QtCreator/MEGATestSuite/MEGAtests/MEGAtests.pro" : {
      "ObjectId" : "0a9d03cc05a0f6b093fd1f7d5f8b45bca4a297ab",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/QtCreator/MEGAcli/MEGAcli.pro" : {
      "ObjectId" : "4687edfa9d9e86663668d2bf8de5f7c8b760032d",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#this is required to include <thread> or <mutex>\n",
        "Line" : 17,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 1
    },
    "contrib/QtCreator/MEGAsdk.pro" : {
      "ObjectId" : "d559ee0c54f56679f4990e88a098d4b4a7cb0593",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/QtCreator/MEGAsimplesync/MEGAsimplesync.pro" : {
      "ObjectId" : "628b034258df6dacc5a1e0234fb742a0d5f3b862",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/cmake/CMakeLists.txt" : {
      "ObjectId" : "4972205747817fcd50ab1f17e7925876c12830ff",
      "LastModified" : "2019-04-11T11:05:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file enables building with cmake on windows  \n\n#\n\n# use cases\n\n#  - generate a visual studio solution and projects, eg: cmake . -G \"Visual Studio 15 2017\"\n\n#  - or for 64 bit: cmake . -G \"Visual Studio 15 2017 Win64\"\n\n#  - or set your build options before VS project generation by using the gui, eg:  cmake-gui.exe .\n\n#  - you can set up to build both 32 bit and 64 bit this way:\n\n#       make subfolders '32' and '64' of this cmake folder\n\n#       execute 'cmake-gui  ..' in each.  Select the cmake folder as the 'source code' folder, and the appropriate 32 or 64 folder as 'where to build the binaries' folder\n\n#       for each cmake-gui configuration, choose the suitable 32/64 bit compiler, and corresponding setting for the build_64_bit variable.\n\n#       then Configure, Generate, Open Project (all buttons in the gui) for each.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check the ./build3rdParty.cmd script in this folder for how to (relatively) easily build the dependencies, typically in a 3rdParty folder outside of the SDK repo.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set this to 1 if building 64 bit with eg. cmake . -G \"Visual Studio 15 2017 Win64\"\n\n#set this to 0 if building 32 bit with eg. cmake . -G \"Visual Studio 15 2017\"\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#indicate which dependent libraries to use in the build\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#windows projects usually need _DEBUG and/or DEBUG set rather than NDEBUG not set\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# node deletion in debug under VC++ is pretty slow without this.  However libraries we depend on need to be built with the same setting or linking fails \n\n# (hence the build3rdParty script using the xNN-windows-static-uncheckediterators triplets)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# accurate __cplusplus macro for vc++, selecting c++17 here for windows builds though the MEGA SDK library must build for older c++ standards also\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# also don't allow min and max macros from windows.h, use the std functions like on linux/g++\n",
        "Line" : 130,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "#Link against the static C/C++ libraries on windows\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# supports alternating debug/release lib names for libraries that have more than one .lib\n\n# (however it seems the IMPORTED_LLOCAION only supports a single one, so it only supports one debug and one release (for now))\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#some versions on some platforms leave it undefined if not found\n",
        "Line" : 347,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : "#test apps\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#test apps need this file or tests fail\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# actual apps\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#enable_testing()\n\n#add_test(NAME SdkTestStreaming COMMAND test_sdk \"--gtest_filter=\\\"*Streaming*\\\"\")\n\n#add_test(NAME SdkTestAll COMMAND test_sdk )\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# nameless struct/union (nonstandard)\n\n# unreferenced formal parameter\n\n# assignment within conditional\n\n# identifier hides class member\n\n# structure was padded due to alignment specifier (common in Sodium)\n\n# declaration hides previous local declaration\n",
        "Line" : 504,
        "CharPositionInLine" : 55
      },
      "16" : {
        "Text" : "#TODO: remove some of those gradually.  also consider: /wd4503 /wd4996 /wd4702\n",
        "Line" : 510,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "doc/Makefile" : {
      "ObjectId" : "06189acc3016e97be5192247365dfd49cdf8eaf5",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/example/Makefile" : {
      "ObjectId" : "ea9fd4188af611fee885de74c66dc60069de2b62",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set -DDEBUG=1 to enable debug output\n\n#DEBUG_FLAG=-DDEBUG=1\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# objects\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# apps\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/android/ExampleApp/app/proguard-rules.pro" : {
      "ObjectId" : "ac760c98528eb86f82a827f8f58cd01a3936f397",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /home/sergio/MEGA/dev/android-sdk-linux/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "include/Makefile.am" : {
      "ObjectId" : "6fb707c7643e2c4543124a29c6b6409382e63293",
      "LastModified" : "2019-04-11T14:54:50Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#noinst_HEADERS = config.h\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 2,
    "QMAKE" : 9,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 5656
}