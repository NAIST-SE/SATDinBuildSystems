{
  "Repository" : "18348485",
  "Revision" : "HEAD",
  "ObjectId" : "82bf4c2e2af312b3d52513aa727483803a2f8734",
  "CommitTime" : "2019-04-12T17:33:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "91f42fc24dc7ee4e3b35faaeab32a3e2695ef5df",
      "LastModified" : "2019-02-05T03:38:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include path\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include_directories(\"${INCLUDE_ROOT}\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# HDFS configurations\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# S3 configurations\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Azure configurations\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On Windows, link Shlwapi.lib for non-MSVC compilers\n",
        "Line" : 61,
        "CharPositionInLine" : 26
      },
      "7" : {
        "Text" : "# Check location of clock_gettime; if it's in librt, link it\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Older stdc++ enable c++11 items\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check headers and symbols\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check existence of backtrace(3)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check endianness\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# compiler flags\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ---[ Install Includes\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ---[ Install the archive static lib and header files\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ---[ Package configurations\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ---[ Linter target\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Setup testing\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "Makefile" : {
      "ObjectId" : "2ecc78bfbd1ccccdc6e18507ebe3f995792605ab",
      "LastModified" : "2018-10-27T03:14:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# use customized config file\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is the common build script for dmlc lib\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindHDFS.cmake" : {
      "ObjectId" : "dcc547f060935be10a74b835086aafd2f29f5e46",
      "LastModified" : "2017-09-02T03:04:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DerivedFrom: https://github.com/cloudera/Impala/blob/cdh5-trunk/cmake_modules/FindHDFS.cmake\n\n# - Find HDFS (hdfs.h and libhdfs.so)\n\n# This module defines\n\n#  Hadoop_VERSION, version string of ant if found\n\n#  HDFS_INCLUDE_DIR, directory containing hdfs.h\n\n#  HDFS_LIBRARIES, location of libhdfs.so\n\n#  HDFS_FOUND, whether HDFS is found.\n\n#  hdfs_static, imported static hdfs library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# currently only looking in HADOOP_HOME\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make sure we don't accidentally pick up a different version\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# make sure we don't accidentally pick up a different version\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Utils.cmake" : {
      "ObjectId" : "74c21a2ac9e178b2842a5bbc7033cd5432a20a5d",
      "LastModified" : "2015-10-06T16:35:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################################\n\n# Command alias for debugging messages\n\n# Usage:\n\n#   dmsg(<message>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################################\n\n# Removes duplicates from list(s)\n\n# Usage:\n\n#   dmlccore_list_unique(<list_variable> [<list_variable>] [...])\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################################\n\n# Clears variables from list\n\n# Usage:\n\n#   dmlccore_clear_vars(<variables_list>)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################################\n\n# Removes duplicates from string\n\n# Usage:\n\n#   dmlccore_string_unique(<string_variable>)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################################\n\n# Prints list element per line\n\n# Usage:\n\n#   dmlccore_print_list(<list>)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################################\n\n# Function merging lists of compiler flags to single string.\n\n# Usage:\n\n#   dmlccore_merge_flag_lists(out_variable <list1> [<list2>] [<list3>] ...)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################################\n\n# Converts all paths in list to absolute\n\n# Usage:\n\n#   dmlccore_convert_absolute_paths(<list_variable>)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################################\n\n# Reads set of version defines from the header file\n\n# Usage:\n\n#   dmlccore_parse_header(<file> <define1> <define2> <define3> ..)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################################\n\n# Reads single version define from the header file and parses it\n\n# Usage:\n\n#   dmlccore_parse_header_single_define(<library_name> <file> <define_name>)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# append a TWEAK version if it exists:\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "########################################################################################################\n\n# An option that the user can select. Can accept condition to control when option is available for user.\n\n# Usage:\n\n#   dmlccore_option(<option_variable> \"doc string\" <initial value or boolean expression> [IF <condition>])\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################################\n\n# Utility macro for comparing two lists. Used for CMake debugging purposes\n\n# Usage:\n\n#   dmlccore_compare_lists(<list_variable> <list2_variable> [description])\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "################################################################################################\n\n# Command for disabling warnings for different platforms (see below for gcc and VisualStudio)\n\n# Usage:\n\n#   dmlccore_warnings_disable(<CMAKE_[C|CXX]_FLAGS[_CONFIGURATION]> -Wshadow /wd4996 ..,)\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "################################################################################################\n\n# Helper function get current definitions\n\n# Usage:\n\n#   dmlccore_get_current_definitions(<definitions_variable>)\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################################\n\n# Helper function get current includes/definitions\n\n# Usage:\n\n#   dmlccore_get_current_cflags(<cflagslist_variable>)\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################################\n\n# Helper function to parse current linker libs into link directories, libflags and osx frameworks\n\n# Usage:\n\n#   dmlccore_parse_linker_libs(<dmlccore_LINKER_LIBS_var> <directories_var> <libflags_var> <frameworks_var>)\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# split libs into debug, optimized, unspecified and frameworks\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# attach debug or optimized libs to unspecified according to current configuration\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# convert linker libraries list to link flags\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "################################################################################################\n\n# Helper function to detect Darwin version, i.e. 10.8, 10.9, 10.10, ....\n\n# Usage:\n\n#   dmlccore_detect_darwin_version(<version_variable>)\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cmake/lint.cmake" : {
      "ObjectId" : "cb0db2eaabff4b8597861d92202742d03378dceb",
      "LastModified" : "2017-11-29T19:34:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# format output so VS can bring us to the offending file/line\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# suppress cmake warning\n",
        "Line" : 12,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 2
    },
    "doc/Makefile" : {
      "ObjectId" : "40bba2a280dbf702d78295537fa75b8fc00c4e6b",
      "LastModified" : "2015-10-06T16:35:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/unittest/CMakeLists.txt" : {
      "ObjectId" : "b5339fe7274fadec097a62ae2ef5fb63eb6321ed",
      "LastModified" : "2018-10-27T03:14:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---[ Google Test\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler definitions needed to use GNU/POSIX extensions\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Download and unpack googletest at configure time\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Prevent GoogleTest from overriding our compiler/linker options\n\n# when building with Visual Studio\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add googletest directly to our build. This adds\n\n# the following targets: gtest, gtest_main, gmock\n\n# and gmock_main\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "tracker/yarn/pom.xml" : {
      "ObjectId" : "3866f185992b26a6f1f4b4aba516e1a642d89efb",
      "LastModified" : "2016-02-26T04:33:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License. See accompanying LICENSE file.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 30,
        "CharPositionInLine" : 77
      },
      "2" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 85,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 90,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 97,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 102,
        "CharPositionInLine" : 77
      },
      "6" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 107,
        "CharPositionInLine" : 77
      },
      "7" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 112,
        "CharPositionInLine" : 77
      },
      "8" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 118,
        "CharPositionInLine" : 77
      },
      "9" : {
        "Text" : " 'mvn dependency:analyze' fails to detect use of this dependency ",
        "Line" : 124,
        "CharPositionInLine" : 77
      },
      "10" : {
        "Text" : " strictly speaking, the unit test is really a regression test. It\n                 needs the main jar to be available to be able to run. ",
        "Line" : 143,
        "CharPositionInLine" : 75
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 2,
    "MAVEN" : 1
  },
  "ElapsedTime" : 980
}