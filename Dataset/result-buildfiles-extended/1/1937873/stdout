{
  "Repository" : "1937873",
  "Revision" : "HEAD",
  "ObjectId" : "ed77bedb5c02b8727ac6bff16030f02ae673df6c",
  "CommitTime" : "2019-03-21T07:36:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "eb6498165de0fa198ad7cde5e46d480763f0dd4b",
      "LastModified" : "2018-11-02T15:59:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 20170727 - Reviewed warning list...\n\n# CMakeLists.txt generated 2015/09/20 00:38:06\n\n# by make2cmake.pl from F:\\Projects\\edbrowse\\makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# local CMake Scripts\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ### NOTE: from sersguide.htm\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Allow developer to select is Dynamic or static library built\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set default static\n",
        "Line" : 18,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "# turn off various warnings - reviewed 20170727\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# foreach(warning 4244 4251 4267 4275 4290 4786 4305)\n\n# C4244: '=' : conversion from 'long' to 'unsigned char', possible loss of data\n\n# C4090: 'function' : different 'const' qualifiers\n\n# C4101: 'idx' : unreferenced local variable\n\n# C4267: '=': conversion from 'size_t' to 'int', possible loss of data\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# testing MSVC version - horrible kludge\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# distinguish between debug and release libraries\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# unix/mac stuff - reviewed 20170727 - none at this time\n\n# set(WARNING_FLAGS \"${WARNING_FLAGS} -Wno-unused-but-set-variable -Wno-unused-variable\")\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#  TIDY_FOUND          - True if tidy found.\n\n#  TIDY_INCLUDE_DIRS   - where to find tidy.h, etc.\n\n#  TIDY_LIBRARIES      - List of libraries when using tidy.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  CURL_FOUND          - True if curl found.\n\n#  CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#  CURL_LIBRARIES      - List of libraries when using curl.\n\n#  CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#    PCRE_FOUND - True if libpcre is found\n\n#    PCRE_LIBRARY - A variable pointing to the PCRE library\n\n#    PCRE_INCLUDE_DIR - Where to find the headers\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#message(STATUS \"PCRE version ${PCREL_VERSION_STRING}\")\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# READLINE_FOUND\n\n# READLINE_INCLUDE_DIR\n\n# READLINE_LIBRARY\n\n# HAVE_READLINE_H\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DUKTAPE_FOUND\n\n# DUKTAPE_LIBRARY\n\n# DUKTAPE_INCLUDE_DIR\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Fragment borrrowed and modified from modules included with cmake:\n\n# Explicitly link -lm on most Unices.\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# if the user OPTION ON\n",
        "Line" : 172,
        "CharPositionInLine" : 21
      },
      "19" : {
        "Text" : "# This module defines\n\n# ODBC_INCLUDE_DIRECTORIES, where to find sql.h\n\n# ODBC_LIBRARIES, the libraries to link against to use ODBC\n\n# ODBC_FOUND.  If false, you cannot build anything that requires MySQL.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# add_definitions( -DHAVE_CONFIG_H )\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# LDLIBS = -lpcre -lcurl -lreadline -lncurses -ltidy\n\n#  edbrowse objects\n\n#EBOBJS = main.o buffers.o url.o sendmail.o fetchmail.o \\\n\n#\thtml.o format.o cookies.o stringfile.o messages.o ebjs.o plugin.o\n\n#  Header file dependencies.\n\n#$(EBOBJS) : eb.h ebprot.h messages.h\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# see tools/build*.pl scripts\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "###########################################################\n\n### 20180415 - Add man page gen, and install - also doc/usersguide.html\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# copy to build dir\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# find 'gzip' - warn if not...\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# gzip it in place\n",
        "Line" : 252,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# install it\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# install user guide\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "###########################################################\n\n### edbr static library of shared source - not currently used.\n\n#  set(name edbr-lib)\n\n#  set(dir src)\n\n#  set(${name}_SRCS\n\n#      ${dir}/foo.c\n\n#      )\n\n#  add_library( ${name} ${${name}_SRCS} )\n\n#  set(add_LIBS ${name} ${add_LIBS})\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#######################################################\n\n### main edbrowse app\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# set default stubs source\n",
        "Line" : 280,
        "CharPositionInLine" : 32
      },
      "32" : {
        "Text" : "# if the user OPTION ON\n\n# and if package found\n",
        "Line" : 281,
        "CharPositionInLine" : 21
      },
      "33" : {
        "Text" : "# happy days!\n",
        "Line" : 283,
        "CharPositionInLine" : 66
      },
      "34" : {
        "Text" : "# real db sources\n",
        "Line" : 284,
        "CharPositionInLine" : 69
      },
      "35" : {
        "Text" : "# more a polite did-you-know information type message\n",
        "Line" : 291,
        "CharPositionInLine" : 19
      },
      "36" : {
        "Text" : "# does not want ODBC, which is ok, because it was not found! win win\n",
        "Line" : 294,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# eof\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "CMakeModules/FindDuktape.cmake" : {
      "ObjectId" : "d03655c808d344bb754a6e78456dd36a00a7a562",
      "LastModified" : "2017-07-10T19:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ################################################\n\n# Duktape library finder\n\n# 20170710 - Added to the edbrowser project\n\n# Modified from Geoff's FindMOZJS.cmake.\n\n# Defines\n\n# DUKTAPE_FOUND\n\n# DUKTAPE_LIBRARY\n\n# DUKTAPE_INCLUDE_DIR\n\n# ################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# eof\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindMOZJS.cmake" : {
      "ObjectId" : "b67b74cae87796ad2e026d64e0cd72c02d8970f3",
      "LastModified" : "2017-07-10T19:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ################################################\n\n# MOZJS library finder\n\n# 20151018 - Added to the edbrowser project\n\n# Defines\n\n# MOZJS_FOUND\n\n# MOZJS_LIBRARY\n\n# MOZJS_INCLUDE_DIR\n\n# ################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# eof\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindODBC.cmake" : {
      "ObjectId" : "57372924cc6e1202ffa223b24ee78f20a7530876",
      "LastModified" : "2017-07-10T19:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Find the ODBC driver manager includes and library.\n\n# \n\n# ODBC is an open standard for connecting to different databases in a\n\n# semi-vendor-independent fashion.  First you install the ODBC driver\n\n# manager.  Then you need a driver for each separate database you want\n\n# to connect to (unless a generic one works).  VTK includes neither\n\n# the driver manager nor the vendor-specific drivers: you have to find\n\n# those yourself.\n\n#  \n\n# This module defines\n\n# ODBC_INCLUDE_DIRECTORIES, where to find sql.h\n\n# ODBC_LIBRARIES, the libraries to link against to use ODBC\n\n# ODBC_FOUND.  If false, you cannot build anything that requires MySQL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use is\n\n# ODBC_LIBRARY, where to find the ODBC driver manager library.\n\n# 20151028: from: http://web.mit.edu/16.225/dv/VTK/CMake/FindODBC.cmake\n\n# \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# eof\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindPCRE.cmake" : {
      "ObjectId" : "e1804a91596a651c53de4206b35cbf6265ca57ce",
      "LastModified" : "2017-07-10T19:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# $Id: FindPCRE.cmake 12822 2014-01-31 23:39:56Z remko $\n\n#\n\n# Locate pcre\n\n#\n\n# This module accepts the following environment variables:\n\n#\n\n#    PCRE_DIR or PCRE_ROOT - Specify the location of PCRE\n\n#\n\n# This module defines the following CMake variables:\n\n#\n\n#    PCRE_FOUND - True if libpcre is found\n\n#    PCRE_LIBRARY - A variable pointing to the PCRE library\n\n#    PCRE_INCLUDE_DIR - Where to find the headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Inspired by FindGDAL\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See COPYING-CMAKE-SCRIPTS for more information.\n\n#=============================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This makes the presumption that you are include pcre.h like\n\n#\n\n#include \"pcre.h\"\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use pcre-config to obtain the library version (this should hopefully\n\n# allow us to -lpcre1.x.y where x.y are correct version)\n\n# For some reason, libpcre development packages do not contain\n\n# libpcre.so...\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 51,
        "CharPositionInLine" : 15
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 52,
        "CharPositionInLine" : 13
      },
      "7" : {
        "Text" : "# Fink\n",
        "Line" : 90,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 91,
        "CharPositionInLine" : 13
      },
      "9" : {
        "Text" : "# Blastwave\n",
        "Line" : 92,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# vim: textwidth=78 noexpandtab tabstop=2 softtabstop=2 shiftwidth=2\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "CMakeModules/FindReadline.cmake" : {
      "ObjectId" : "1af95242b446886fb8e8b57cffdb5faba9feca3c",
      "LastModified" : "2017-07-10T19:00:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ################################################\n\n# from http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/FindReadline.cmake\n\n# http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/COPYING-CMAKE-SCRIPTS\n\n# --> BSD licensed\n\n#\n\n# GNU Readline library finder\n\n# 20150920 - Added to the edbrowser project\n\n# ################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2008-04-22 The next clause used to read like this:\n\n#\n\n#  FIND_LIBRARY(READLINE_LIBRARY NAMES readline)\n\n#        FIND_LIBRARY(NCURSES_LIBRARY NAMES ncurses )\n\n#        include(FindPackageHandleStandardArgs)\n\n#        FIND_PACKAGE_HANDLE_STANDARD_ARGS(Readline DEFAULT_MSG NCURSES_LIBRARY READLINE_INCLUDE_DIR READLINE_LIBRARY )\n\n#\n\n# I was advised to modify it such that it will find an ncurses library if\n\n# required, but not if one was explicitly given, that is, it allows the\n\n# default to be overridden. PH \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MARK_AS_ADVANCED(READLINE_INCLUDE_DIR READLINE_LIBRARY)\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# eof\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindTidy.cmake" : {
      "ObjectId" : "df028a52c38c6c82ce3b057c4c2fe18b11dd2ce5",
      "LastModified" : "2017-07-27T18:10:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Tidy\n\n# Find the native TIDY includes and library.\n\n# Once done this will define\n\n#\n\n#  TIDY_FOUND          - True if tidy found.\n\n#  TIDY_INCLUDE_DIRS   - where to find tidy.h, etc.\n\n#  TIDY_LIBRARIES      - List of libraries when using tidy.\n\n#\n\n# An includer may set TIDY_ROOT to a Tidy installation root to tell\n\n# this module where to look.\n\n#\n\n# 20150921 - Remove completely the devel '5'\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search TIDY_ROOT first if it is set.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try each search configuration.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# search for the STATIC version first\n",
        "Line" : 39,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "###mark_as_advanced(TIDY_LIBRARY TIDY_INCLUDE_DIR)\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TIDY_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# eof\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 1211
}