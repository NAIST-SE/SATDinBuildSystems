{
  "Repository" : "3125126",
  "Revision" : "HEAD",
  "ObjectId" : "df4eea209a85c461e3dcb7c21d4b4c015c46ecdf",
  "CommitTime" : "2017-09-18T18:09:59Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4e183444310f0a9d03d15f47c393b08111defd31",
      "LastModified" : "2017-08-26T22:52:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Top level CMakeLists.txt file for DOLFIN\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Require CMake 3.5\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Set project name and version number\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Require and use C++11\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use C++11\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Require C++11\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Do not enable compler-specific extensions\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Check compiler version\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check for GCC version - earlier versions have insuffcient C++11\n\n# support, or bugs.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Get GIT changeset, if available\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check for git\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the commit hash of the working branch\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# General configuration\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set CMake options, see `cmake --help-policy CMP000x`\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set location of our FindFoo.cmake modules\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Make sure CMake uses the correct DOLFINConfig.cmake for tests and demos\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Configurable options for how we want to build\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add shared library paths so shared libs in non-system paths are found\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Hande RPATH on OSX when not installing to a system directory, see\n\n# https://groups.google.com/d/msg/fenics-dev/KSCrob4M_1M/zsJwdN-SCAAJ\n\n# and https://cmake.org/Wiki/CMake_RPATH_handling#Always_full_RPATH.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The RPATH to be used when installing, but only if it's not a\n\n# system directory\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Enable or disable optional packages\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List optional packages\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add options\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Default Python version\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Package-specific options\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# None at the moment\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Compiler flags\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Default build type (can be overridden by user)\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check for some compiler flags\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Add some strict compiler checks\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Debug flags\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Set 'Developer' build type flags\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Add flags for generating code coverage reports\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Settings for Intel compilers\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Use -isystem incluse flag with Intel compiler\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Stop spurious warnings from older Intel compilers\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Set system include flags to get around CMake bug on OSX with gcc See\n\n# http://public.kitware.com/Bug/print_bug_page.php?bug_id=10837\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Check for MPI\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# FIXME: Should be set CMake to use the MPI compiler wrappers?\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Assume user has set MPI compiler wrappers (via CXX, etc or\n\n# CMAKE_CXX_COMPILER, etc)\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Run tests to find required packages\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Check for Boost\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Prevent FindBoost.cmake from looking for system Boost{foo}.cmake\n\n# files\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Boost public/private libraries to link to.\n\n# Note: These should all be private as they do not appear in the\n\n# DOLFIN public interface , but there is a linking issues with older\n\n# Boost or CMake. Ubuntu 16.04 requires linking DOLFIN programs with\n\n# filesystem, whereas Ubuntu 16.10 and macOS (Homebrew) do not.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Find required Boost libraries\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Check for required package Eigen3\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Run tests to find optional packages\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Note: Check for Python interpreter even when Python is disabled\n\n#       because it is used to get the installation path for\n\n#       dolfin_utils\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Set variables to help find Python library that is compatible with\n\n# interpreter\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Get Python include path from Python interpretter\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Get Python library path from interpreter\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Set include path, if returned by interpreter\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Add a search path for Python library based on output from\n\n# interpreter\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Find Pythons libs\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# If Python is found, check for NumPy, SWIG and ply\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Check for NumPy\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Check for ply\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Check for SWIG\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Check for required package UFC\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Check for PETSc, SLEPc and petsc4py, slepc4py\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Check for ParMETIS and SCOTCH\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Check for UMFPACK\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Check for CHOLMOD\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Check for HDF5\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Check for Trilinos and the requires Trilinos packages\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Check for required packages\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Check that necessary packages are enabled\n",
        "Line" : 510,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Search for required package in list of available packages\n",
        "Line" : 514,
        "CharPositionInLine" : 6
      },
      "68" : {
        "Text" : "# Print whether or not package is found\n",
        "Line" : 522,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# Add package libraries if all packages have been found\n",
        "Line" : 533,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# Loop over each package\n",
        "Line" : 538,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Loop over libs and get full path\n",
        "Line" : 541,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# Also search the default paths\n",
        "Line" : 544,
        "CharPositionInLine" : 10
      },
      "73" : {
        "Text" : "# Remove duplicates\n",
        "Line" : 553,
        "CharPositionInLine" : 6
      },
      "74" : {
        "Text" : "# Check for zlib\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Check for Sphinx\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Print summary of found and not found optional packages\n",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Get installation paths for Python modules (pure and platform-dependent)\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Get path for platform-dependent Python modules (since we install\n\n# a binary libary)\n",
        "Line" : 593,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# Python command string to discover module install location\n",
        "Line" : 596,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Probe Python interpreter\n",
        "Line" : 603,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Get path for pure Python modules\n",
        "Line" : 612,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# Python command string to discover module install location\n",
        "Line" : 614,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# Probe Pyton interpreter\n",
        "Line" : 621,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Installation of DOLFIN and FEniCS Python modules\n",
        "Line" : 631,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Installation of dolfin_utils\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Add target \"install_dolfin_utils\" for installing dolfin_utils\n\n# without building and install the rest of DOLFIN\n",
        "Line" : 668,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Installation of docstrings\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#install(DIRECTORY ${CMAKE_SOURCE_DIR}/site-packages/dolfin/docstrings\n\n#        DESTINATION ${DOLFIN_INSTALL_PYTHON_MODULE_DIR}/dolfin\n\n#        USE_SOURCE_PERMISSIONS)\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Installation of DOLFIN library\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Append the library version information to the library target properties\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# This setting of SOVERSION assumes that any API change\n\n# will increment either the minor or major version number.\n",
        "Line" : 690,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Set DOLFIN install sub-directories\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Add source directory\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Installation of DOLFIN utilities\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Installation of DOLFIN manual pages\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate and install helper file dolfin.conf\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# FIXME: Can CMake provide the library path name variable?\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# FIXME: not cross-platform compatible\n\n# Create and install dolfin.conf file\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate and install helper scripts dolfin-version, fenics-version\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# FIXME: not cross-platform compatible\n",
        "Line" : 753,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Create and install dolfin-version\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Create and install fenics-version\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate and install utility script dolfin-get-demos\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate demo files from rst\n",
        "Line" : 784,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#add_custom_command(TARGET demos_source PRE_BUILD\n\n#  COMMAND ${PYTHON_EXECUTABLE} \"-B\" \"-u\" ./utils/pylit/pylit.py ${rst_file}\n\n#  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n",
        "Line" : 795,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate form files for tests, bench, demos and DOLFIN if not exists\n\n# FIXME: Generate files in Build directory instead, at least for\n\n# bench, demo and tests\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# Cleanup so download is triggered next time we run cmake\n",
        "Line" : 820,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate CMakeLists.txt files for bench and demos if not existing\n",
        "Line" : 829,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# FIXME: Generate files in Build directory instead?\n\n# NOTE: We need to call this script after generate-formfiles\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Cleanup so FFC rebuild is triggered next time we run cmake\n",
        "Line" : 848,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Copy data in demo/bench/test direcories to the build directories\n",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# FIXME: We should probably just generate them directly in the build\n\n# directory...\n",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add demos and install demo source files and mesh files\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# Add demo but do not add to default target\n",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Set make program\n",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Add taget to build .py demo files from Python rst input files, and\n\n# create a target to build source files from .cpp.rst and .py.rst\n\n# files (using pylit)\n",
        "Line" : 893,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# Add target \"demo\" for building the demos\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# Install the demo source files\n",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# Install meshes (data directory)\n",
        "Line" : 924,
        "CharPositionInLine" : 1
      },
      "120" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate documentation\n",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add tests and benchmarks\n",
        "Line" : 938,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# Add bench but do not add to default target\n",
        "Line" : 942,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# Add target \"bench\" for building benchmarks\n",
        "Line" : 945,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# Copy files needed to run benchmarks in build directory\n",
        "Line" : 950,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# Add target \"run_bench\" for running benchmarks\n",
        "Line" : 956,
        "CharPositionInLine" : 2
      },
      "126" : {
        "Text" : "# Google Test needs to be downloaded and compiled by CMake, so we\n\n# handle it as a special case.\n",
        "Line" : 965,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# Add sub directory to build GoogleTest\n",
        "Line" : 968,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# Add target \"unittests_cpp\", but do not add to default target\n",
        "Line" : 971,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# Add target \"run_unittests_cpp\" for running only C++ unit tests\n",
        "Line" : 974,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# Add dummy targets for C++ unit tests\n",
        "Line" : 979,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# FIXME: remove this buildbot updated to call unittests_cpp\n\n# Add alias for unittests_cpp\n",
        "Line" : 984,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# Add target \"copy_data_test_demo\"\n",
        "Line" : 988,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# Add target \"run_memorytests\" for running memory tests\n",
        "Line" : 993,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# Add target \"run_regressiontests\" for running regression tests\n",
        "Line" : 999,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# Add target \"run_regressiontests_cpp\" for running C++ regression tests\n",
        "Line" : 1005,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# Add target \"run_regressiontests_cpp_mpi\" for running C++ regression tests with mpi\n",
        "Line" : 1011,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# Add target \"run_regressiontests_py\" for running Python regression tests\n",
        "Line" : 1017,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# Add target \"run_regressiontests_py_mpi\" for running Python regression tests with mpi\n",
        "Line" : 1023,
        "CharPositionInLine" : 2
      },
      "139" : {
        "Text" : "# Add target \"run_unittests\" for running unit tests\n",
        "Line" : 1029,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "# Add target \"run_unittests_py\" for running Python unit tests\n",
        "Line" : 1033,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# Add target \"run_unittests_py_mpi\" for running Python unit tests with mpi\n",
        "Line" : 1039,
        "CharPositionInLine" : 2
      },
      "142" : {
        "Text" : "# Add target \"run_quicktest\" for running only Python unit tests not\n\n# marked as 'slow'\n",
        "Line" : 1045,
        "CharPositionInLine" : 2
      },
      "143" : {
        "Text" : "# Add target \"run_styletest\" for running documentation tests\n",
        "Line" : 1052,
        "CharPositionInLine" : 2
      },
      "144" : {
        "Text" : "# Create test_coding_style.py in build dir (depends on source path)\n",
        "Line" : 1058,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# Add target \"runtests\" for running all tests\n",
        "Line" : 1062,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add \"make uninstall\" target\n",
        "Line" : 1067,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Print post-install message\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 1083,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 149
    },
    "bench/CMakeLists.txt" : {
      "ObjectId" : "f2c8f399d33dbd2885e121e59f37ea395e37ccf1",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Require CMake 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find DOLFIN config file (not used here, but check that benchmarks will be\n\n# able to find it\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If config file is found, add all demo sub-directories, else print helper\n\n# message\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build list of all cpp directories\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add each C++ code directory\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#message(STATUS \"Add C++ benchmark: ${cpp_dir}\")\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add fem/speedup/cpp manually (no main.cpp so not picked up automatically)\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/modules/CorrectWindowsPaths.cmake" : {
      "ObjectId" : "09bcdd67dcd04fd001d2b7acbd904b5014ebe42b",
      "LastModified" : "2013-05-29T22:18:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CorrectWindowsPaths - this module defines one macro\n\n#\n\n# CONVERT_CYGWIN_PATH( PATH )\n\n#  This uses the command cygpath (provided by cygwin) to convert\n\n#  unix-style paths into paths useable by cmake on windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindAMD.cmake" : {
      "ObjectId" : "c9afdde5def8d83b1349adf7239a9f1de8589927",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find AMD\n\n# Once done this will define\n\n#\n\n#  AMD_FOUND        - system has AMD\n\n#  AMD_INCLUDE_DIRS - include directories for AMD\n\n#  AMD_LIBRARIES    - libraries for AMD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010 Anders Logg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for header file\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for AMD library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Standard package handling\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindBLAS.cmake" : {
      "ObjectId" : "9233820df8565b1a44429c6c77e541d70c3b54ad",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find BLAS library\n\n# This module finds an installed fortran library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use BLAS\n\n#  BLAS95_LIBRARIES - uncached list of libraries (using full path name)\n\n#    to link against to use BLAS95 interface\n\n#  BLAS95_FOUND - set to true if a library implementing the BLAS f95 interface\n\n#    is found\n\n#  BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#  BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#     all the possibilities\n\n#  BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n##########\n\n### List of vendors (BLA_VENDOR) valid in this module\n\n##  Goto,ATLAS PhiPACK,CXML,DXML,SunPerf,SCSL,SGIMATH,IBMESSL,Intel10_32 (intel mkl v10 32 bit),Intel10_64lp (intel mkl v10 64 bit,lp thread model, lp64 model),\n\n##  Intel10_64lp_seq (intel mkl v10 64 bit,sequential code, lp64 model),\n\n##  Intel( older versions of mkl 32 and 64 bit), ACML,ACML_MP,ACML_GPU,Apple, NAS, Generic\n\n# C/CXX should be enabled to use Intel mkl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check the language being used\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n\n#set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES} .so.3gf)\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GNW: Add special flags for static BLAS libraries for function check\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# gotoblas (http://www.tacc.utexas.edu/tacc-projects/gotoblas2)\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# openblas (http://www.openblas.net)\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to find acml in \"standard\" paths\n",
        "Line" : 318,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# 32 bit builds not supported on Open64 but for code simplicity\n\n# We'll just use the same directory twice\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#if( CMAKE_Fortran_COMPILER_ID STREQUAL \"GNU\" )\n",
        "Line" : 359,
        "CharPositionInLine" : 10
      },
      "24" : {
        "Text" : "#if( _BLAS_VENDOR STREQUAL \"ACML\" )\n",
        "Line" : 368,
        "CharPositionInLine" : 10
      },
      "25" : {
        "Text" : "#if( _BLAS_VENDOR STREQUAL \"ACML\" )\n",
        "Line" : 402,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Either acml or acml_mp should be in LD_LIBRARY_PATH but not both\n",
        "Line" : 416,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# ACML\n",
        "Line" : 447,
        "CharPositionInLine" : 9
      },
      "28" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Generic BLAS library?\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# old version\n",
        "Line" : 515,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 519,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# old version\n",
        "Line" : 547,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# mkl >= 10.3\n",
        "Line" : 551,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "#older vesions of intel mkl libs\n",
        "Line" : 562,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 36
    },
    "cmake/modules/FindBLASHeader.cmake" : {
      "ObjectId" : "c17997d0330cccc7ab424c74476cef622201b00d",
      "LastModified" : "2013-05-29T22:18:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find BLAS header cblas.h\n\n# Once done this will define\n\n#\n\n#  BLASHEADER_FOUND  - system has BLAS\n\n#  BLAS_INCLUDE_DIRS - include directories for BLAS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010 Garth N. Wells\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for header file\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard package handling\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindCHOLMOD.cmake" : {
      "ObjectId" : "f05a4fec989d1e7d231d3cc3a82fd29dccdfef1a",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CHOLMOD\n\n# Once done this will define\n\n#\n\n#  CHOLMOD_FOUND        - system has CHOLMOD\n\n#  CHOLMOD_INCLUDE_DIRS - include directories for CHOLMOD\n\n#  CHOLMOD_LIBRARIES    - libraries for CHOLMOD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010-2011 Garth N. Wells, Anders Logg and Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find packages that CHOLMOD depends on\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: Should we have separate FindXX modules for CAMD, COLAMD, and CCOLAMD?\n\n# FIXME: find_package(CAMD)\n\n# FIXME: find_package(COLAMD)\n\n# FIXME: find_package(CCOLAMD)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME: It may be necessary to link to LAPACK and BLAS (or the vecLib\n\n# FIXME: framework on Darwin).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for header file\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for CHOLMOD library\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check for CAMD library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check for COLAMD library\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for CCOLAMD library\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check for SUITESPARSECONFIG library\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check for rt library\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Collect libraries (order is important)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Try to run a test program that uses CHOLMOD\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Standard package handling\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/modules/FindEigen3.cmake" : {
      "ObjectId" : "deda49df611bbb318858cd5ab3ed0d9528e2fca6",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from\n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Modified by Garth N. Wells <gnw20@cam.ac.uk> to add EIGEN_DIR to\n\n# search path\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in cache already\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first if an Eigen3Config.cmake is available in the system,\n\n# if successful this would set EIGEN3_INCLUDE_DIR and the rest of\n\n# the script will work as usual\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindLAPACK.cmake" : {
      "ObjectId" : "42e4b400ec3704023eabbc6666b220ec4dcfd210",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LAPACK library\n\n# This module finds an installed fortran library that implements the LAPACK\n\n# linear-algebra interface (see http://www.netlib.org/lapack/).\n\n#\n\n# The approach follows that taken for the autoconf macro file, acx_lapack.m4\n\n# (distributed at http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#    and -L).\n\n#  LAPACK_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use LAPACK\n\n#  LAPACK95_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use LAPACK95\n\n#  LAPACK95_FOUND - set to true if a library implementing the LAPACK f95\n\n#    interface is found\n\n#  BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#  BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#     all the possibilities\n\n#  BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n### List of vendors (BLA_VENDOR) valid in this module\n\n##  Intel(mkl), ACML,Apple, NAS, Generic\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: move this stuff to separate module\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n\n#set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES} .so.3gf)\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#acml lapack\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generic LAPACK library?\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#intel lapack\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# old\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 273,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# old\n",
        "Line" : 286,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 17
    },
    "cmake/modules/FindMPI.cmake" : {
      "ObjectId" : "2c657b2cb7e62a876681475bb80790e6c0d3eb25",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a Message Passing Interface (MPI) implementation\n\n# The Message Passing Interface (MPI) is a library used to write\n\n# high-performance distributed-memory parallel applications, and\n\n# is typically deployed on a cluster. MPI is a standard interface\n\n# (defined by the MPI forum) for which many implementations are\n\n# available. All of them have somewhat different include paths,\n\n# libraries to link against, etc., and this module tries to smooth\n\n# out those differences.\n\n#\n\n# === Variables ===\n\n#\n\n# This module will set the following variables per language in your project,\n\n# where <lang> is one of C, CXX, or Fortran:\n\n#   MPI_<lang>_FOUND           TRUE if FindMPI found MPI flags for <lang>\n\n#   MPI_<lang>_COMPILER        MPI Compiler wrapper for <lang>\n\n#   MPI_<lang>_COMPILE_FLAGS   Compilation flags for MPI programs\n\n#   MPI_<lang>_INCLUDE_PATH    Include path(s) for MPI header\n\n#   MPI_<lang>_LINK_FLAGS      Linking flags for MPI programs\n\n#   MPI_<lang>_LIBRARIES       All libraries to link MPI programs against\n\n# Additionally, FindMPI sets the following variables for running MPI\n\n# programs from the command line:\n\n#   MPIEXEC                    Executable for running MPI programs\n\n#   MPIEXEC_NUMPROC_FLAG       Flag to pass to MPIEXEC before giving\n\n#                              it the number of processors to run on\n\n#   MPIEXEC_PREFLAGS           Flags to pass to MPIEXEC directly\n\n#                              before the executable to run.\n\n#   MPIEXEC_POSTFLAGS          Flags to pass to MPIEXEC after other flags\n\n# === Usage ===\n\n#\n\n# To use this module, simply call FindMPI from a CMakeLists.txt file, or\n\n# run find_package(MPI), then run CMake.  If you are happy with the auto-\n\n# detected configuration for your language, then you're done.  If not, you\n\n# have two options:\n\n#   1. Set MPI_<lang>_COMPILER to the MPI wrapper (mpicc, etc.) of your\n\n#      choice and reconfigure.  FindMPI will attempt to determine all the\n\n#      necessary variables using THAT compiler's compile and link flags.\n\n#   2. If this fails, or if your MPI implementation does not come with\n\n#      a compiler wrapper, then set both MPI_<lang>_LIBRARIES and\n\n#      MPI_<lang>_INCLUDE_PATH.  You may also set any other variables\n\n#      listed above, but these two are required.  This will circumvent\n\n#      autodetection entirely.\n\n# When configuration is successful, MPI_<lang>_COMPILER will be set to the\n\n# compiler wrapper for <lang>, if it was found.  MPI_<lang>_FOUND and other\n\n# variables above will be set if any MPI implementation was found for <lang>,\n\n# regardless of whether a compiler was found.\n\n#\n\n# When using MPIEXEC to execute MPI applications, you should typically use\n\n# all of the MPIEXEC flags as follows:\n\n#   ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} PROCS\n\n#     ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS\n\n# where PROCS is the number of processors on which to execute the program,\n\n# EXECUTABLE is the MPI program, and ARGS are the arguments to pass to the\n\n# MPI program.\n\n#\n\n# === Backward Compatibility ===\n\n#\n\n# For backward compatibility with older versions of FindMPI, these\n\n# variables are set, but deprecated:\n\n#   MPI_FOUND           MPI_COMPILER        MPI_LIBRARY\n\n#   MPI_COMPILE_FLAGS   MPI_INCLUDE_PATH    MPI_EXTRA_LIBRARY\n\n#   MPI_LINK_FLAGS      MPI_LIBRARIES\n\n# In new projects, please use the MPI_<lang>_XXX equivalents.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2011 Kitware, Inc.\n\n# Copyright 2010-2011 Todd Gamblin tgamblin@llnl.gov\n\n# Copyright 2001-2009 Dave Partyka\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include this to handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# This part detects MPI compilers, attempting to wade through the mess of compiler names in\n\n# a sensible way.\n\n#\n\n# The compilers are detected in this order:\n\n#\n\n# 1. Try to find the most generic availble MPI compiler, as this is usually set up by\n\n#    cluster admins.  e.g., if plain old mpicc is available, we'll use it and assume it's\n\n#    the right compiler.\n\n#\n\n# 2. If a generic mpicc is NOT found, then we attempt to find one that matches\n\n#    CMAKE_<lang>_COMPILER_ID. e.g. if you are using XL compilers, we'll try to find mpixlc\n\n#    and company, but not mpiicc.  This hopefully prevents toolchain mismatches.\n\n#\n\n# If you want to force a particular MPI compiler other than what we autodetect (e.g. if you\n\n# want to compile regular stuff with GNU and parallel stuff with Intel), you can always set\n\n# your favorite MPI_<lang>_COMPILER explicitly and this stuff will be ignored.\n\n#\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Start out with the generic MPI compiler names, as these are most commonly used.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU compiler names\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Intel MPI compiler names\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PGI compiler names\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XLC MPI Compiler names\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# append vendor-specific compilers to the list if we either don't know the compiler id,\n\n# or if we know it matches the regular compiler.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clean up the namespace here\n",
        "Line" : 156,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# Names to try for MPI exec\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Grab the path to MPI from the registry if we're on windows.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build a list of prefixes to search for MPI.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# interrogate_mpi_compiler(lang try_libs)\n\n#\n\n# Attempts to extract compiler and linker args from an MPI compiler. The arguments set\n\n# by this function are:\n\n#\n\n#   MPI_<lang>_INCLUDE_PATH    MPI_<lang>_LINK_FLAGS     MPI_<lang>_FOUND\n\n#   MPI_<lang>_COMPILE_FLAGS   MPI_<lang>_LIBRARIES\n\n#\n\n# MPI_<lang>_COMPILER must be set beforehand to the absolute path to an MPI compiler for\n\n# <lang>.  Additionally, MPI_<lang>_INCLUDE_PATH and MPI_<lang>_LIBRARIES may be set\n\n# to skip autodetection.\n\n#\n\n# If try_libs is TRUE, this will also attempt to find plain MPI libraries in the usual\n\n# way.  In general, this is not as effective as interrogating the compilers, as it\n\n# ignores language-specific flags and libraries.  However, some MPI implementations\n\n# (Windows implementations) do not have compiler wrappers, so this approach must be used.\n\n#\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MPI_${lang}_NO_INTERROGATE will be set to a compiler name when the *regular* compiler was\n\n# discovered to be the MPI compiler.  This happens on machines like the Cray XE6 that use\n\n# modules to set cc, CC, and ftn to the MPI compilers.  If the user force-sets another MPI\n\n# compiler, MPI_${lang}_COMPILER won't be equal to MPI_${lang}_NO_INTERROGATE, and we'll\n\n# inspect that compiler anew.  This allows users to set new compilers w/o rm'ing cache.\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# If MPI is set already in the cache, don't bother with interrogating the compiler.\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Check whether the -showme:compile option works. This indicates that we have either OpenMPI\n\n# or a newer version of LAM-MPI, and implies that -showme:link will also work.\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# If we appear to have -showme:compile, then we should\n\n# also have -showme:link. Try it.\n",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# We probably have -showme:incdirs and -showme:libdirs as well,\n\n# so grab that while we're at it.\n",
        "Line" : 229,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# reset things here if something went wrong.\n",
        "Line" : 242,
        "CharPositionInLine" : 10
      },
      "21" : {
        "Text" : "# Older versions of LAM-MPI have \"-showme\". Try to find that.\n",
        "Line" : 248,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# MVAPICH uses -compile-info and -link-info.  Try them.\n",
        "Line" : 257,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# If we have compile-info, also have link-info.\n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# make sure we got compile and link.  Reset vars if something's wrong.\n",
        "Line" : 274,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# MPICH just uses \"-show\". Try it.\n",
        "Line" : 281,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# We have our command lines, but we might need to copy MPI_COMPILE_CMDLINE\n\n# into MPI_LINK_CMDLINE, if we didn't find the link line.\n",
        "Line" : 291,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Here, we're done with the interrogation part, and we'll try to extract args we care\n\n# about from what we learned from the compiler wrapper scripts.\n",
        "Line" : 302,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# If interrogation came back with something, extract our variable from the MPI command line\n",
        "Line" : 305,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Extract compile flags from the compile command line.\n",
        "Line" : 307,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# try using showme:incdirs if extracting didn't work.\n",
        "Line" : 327,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# If all else fails, just search for mpi.h in the normal include paths.\n",
        "Line" : 333,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# try using showme:libdirs if extracting didn't work.\n",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 368,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# add the compiler implicit directories because some compilers\n\n# such as the intel compiler have libraries that show up\n\n# in the showme list that can only be found in the implicit\n\n# link directories of the compiler. Do this for C++ and C\n\n# compilers if the implicit link directories are defined.\n",
        "Line" : 371,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 386,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# MPI_LIB is cached by find_library, but we don't want that.\n\n# Clear it first.\n",
        "Line" : 390,
        "CharPositionInLine" : 10
      },
      "40" : {
        "Text" : "# Sanity check MPI_LIBRARIES to make sure there are enough libraries\n",
        "Line" : 406,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# If we didn't have an MPI compiler script to interrogate, attempt to find everything\n\n# with plain old find functions.  This is nasty because MPI implementations have LOTS of\n\n# different library names, so this section isn't going to be very generic.  We need to\n\n# make sure it works for MS MPI, though, since there are no compiler wrappers for that.\n",
        "Line" : 415,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Decide between 32-bit and 64-bit libraries for Microsoft's MPI\n",
        "Line" : 424,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Right now, we only know about the extra libs for C++.\n\n# We could add Fortran here (as there is usually libfmpich, etc.), but\n\n# this really only has to work with MS MPI on Windows.\n\n# Assume that other MPI's are covered by the compiler wrappers.\n",
        "Line" : 443,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# If we found MPI, set up all of the appropriate cache entries\n",
        "Line" : 468,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# clear out our temporary lib/header detectionv variable here.\n",
        "Line" : 475,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# finally set a found variable for each MPI language\n",
        "Line" : 480,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# This function attempts to compile with the regular compiler, to see if MPI programs\n\n# work with it.  This is a last ditch attempt after we've tried interrogating mpicc and\n\n# friends, and after we've tried to find generic libraries.  Works on machines like\n\n# Cray XE6, where the modules environment changes what MPI version cc, CC, and ftn use.\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# End definitions, commence real work here.\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Most mpi distros have some form of mpiexec which gives us something we can reliably look for.\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# call get_filename_component twice to remove mpiexec and the directory it exists in (typically bin).\n\n# This gives us a fairly reliable base directory to search for /bin /lib and /include from.\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#=============================================================================\n\n# Backward compatibility input hacks.  Propagate the FindMPI hints to C and\n\n# CXX if the respective new versions are not defined.  Translate the old\n\n# MPI_LIBRARY and MPI_EXTRA_LIBRARY to respective MPI_${lang}_LIBRARIES.\n\n#\n\n# Once we find the new variables, we translate them back into their old\n\n# equivalents below.\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Old input variables.\n",
        "Line" : 559,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Set new vars based on their old equivalents, if the new versions are not already set.\n",
        "Line" : 562,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Special handling for MPI_LIBRARY and MPI_EXTRA_LIBRARY, which we nixed in the\n\n# new FindMPI.  These need to be merged into MPI_<lang>_LIBRARIES\n",
        "Line" : 569,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "#=============================================================================\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# This loop finds the compilers and sends them off for interrogation.\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# If the user supplies a compiler *name* instead of an absolute path, assume that we need to find THAT compiler.\n",
        "Line" : 581,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Get rid of our default list of names and just search for the name the user wants.\n",
        "Line" : 585,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# If the user specifies a compiler, we don't want to try to search libraries either.\n",
        "Line" : 588,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# last ditch try -- if nothing works so far, just try running the regular compiler and\n\n# see if we can create an MPI executable.\n",
        "Line" : 601,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "#=============================================================================\n\n# More backward compatibility stuff\n\n#\n\n# Bare MPI sans ${lang} vars are set to CXX then C, depending on what was found.\n\n# This mimics the behavior of the old language-oblivious FindMPI.\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Note that we might still have found Fortran, but you'll need to use MPI_Fortran_FOUND\n",
        "Line" : 632,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Chop MPI_LIBRARIES into the old-style MPI_LIBRARY and MPI_EXTRA_LIBRARY, and set them in cache.\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#=============================================================================\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# unset these vars to cleanup namespace\n",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 66
    },
    "cmake/modules/FindNumPy.cmake" : {
      "ObjectId" : "410fc183978d16ef866b9ab2bf2eae94765e14c6",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find NumPy\n\n# Find the native NumPy includes\n\n# This module defines\n\n#  NUMPY_INCLUDE_DIR, where to find numpy/arrayobject.h, etc.\n\n#  NUMPY_VERSION, The string version of the numpy version\n\n#  NUMPY_VERSION_MAJOR, The first number of the numpy version\n\n#  NUMPY_VERSION_MINOR, The second number of the numpy version\n\n#  NUMPY_VERSION_MICRO, The third number of the numpy version\n\n#  NUMPY_FOUND, If false, do not try to use NumPy headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010 Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindPETSc.cmake" : {
      "ObjectId" : "cd1e3b93f8900588e3175485a15416ee91f29b67",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PETSc\n\n# Once done this will define\n\n#\n\n#  PETSC_FOUND             - system has PETSc\n\n#  PETSC_INCLUDE_DIRS      - include directories for PETSc\n\n#  PETSC_LIBRARY_DIRS      - library directories for PETSc\n\n#  PETSC_LIBRARIES         - libraries for PETSc\n\n#  PETSC_STATIC_LIBRARIES  - libraries for PETSc (static linking, undefined if not required)\n\n#  PETSC_VERSION           - version for PETSc\n\n#  PETSC_VERSION_MAJOR     - First number in PETSC_VERSION\n\n#  PETSC_VERSION_MINOR     - Second number in PETSC_VERSION\n\n#  PETSC_VERSION_SUBMINOR  - Third number in PETSC_VERSION\n\n#  PETSC_INT_SIZE          - sizeof(PetscInt)\n\n#\n\n#=============================================================================\n\n# Copyright (C) 2010-2016 Garth N. Wells, Anders Logg and Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Outline:\n\n# 1. Get flags from PETSc-generated pkg-config file\n\n# 2. Test compile and run program using shared library linking\n\n# 3. If shared library linking fails, test with static library linking\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load pkg-config module (provided by CMake)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find PETSc pkg-config file. Note: craypetsc_real is on Cray systems\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extract major, minor, etc from version string\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure PETSc IMPORT (this involves creating an 'imported' target\n\n# and attaching 'properties')\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add include paths\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add libraries\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Configure PETSc 'static' IMPORT (this involves creating an\n\n# 'imported' target and attaching 'properties')\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add libraries (static)\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Attempt to build and run PETSc test program\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Assume PETSc works\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Create PETSc test program\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Add MPI variables if MPI has been found\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Try to run test program (shared linking)\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Check program output\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Static libraries not required, so unset\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Add MPI variables if MPI has been found\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Try to run test program (static linking)\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Check sizeof(PetscInt)\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Standard package handling\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/modules/FindPETSc4py.cmake" : {
      "ObjectId" : "7b132803b7a18550a8ad7d54246e103c03bb1cc2",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find petsc4py\n\n# Once done this will define\n\n#\n\n#  PETSC4PY_FOUND        - system has petsc4py\n\n#  PETSC4PY_INCLUDE_DIRS  - include directories for petsc4py\n\n#  PETSC4PY_VERSION      - version of petsc4py\n\n#  PETSC4PY_VERSION_MAJOR - first number in PETSC4PY_VERSION\n\n#  PETSC4PY_VERSION_MINOR - second number in PETSC4PY_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Based on FindNumPy.cmake\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2013 Lawrence Mitchell\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In cache already\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check if version found is >= required version\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# No specific version requested\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Standard package handling\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check petsc4py.i for PETSC_INT\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindParMETIS.cmake" : {
      "ObjectId" : "c88e59ab100bdfa17b817f5e05f4482691b79457",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ParMETIS\n\n# Once done this will define\n\n#\n\n#  PARMETIS_FOUND        - system has ParMETIS\n\n#  PARMETIS_INCLUDE_DIRS - include directories for ParMETIS\n\n#  PARMETIS_LIBRARIES    - libraries for ParMETIS\n\n#  PARMETIS_VERSION      - version for ParMETIS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010 Garth N. Wells, Anders Logg and Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try compiling and running test program\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set flags for building test program\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check ParMETIS version\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check if version found is >= required version\n",
        "Line" : 118,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# No specific version requested\n",
        "Line" : 123,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Build and run test program\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Standard package handling\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindPythonModule.cmake" : {
      "ObjectId" : "02194b42e0a0fc0b147e2ff65ed1677e20898748",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find if a Python module is installed\n\n# Found at http://www.cmake.org/pipermail/cmake/2011-January/041666.html\n\n# To use do: find_python_module(PyQt4 REQUIRED)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Modified to give PY_FOO_FOUND global scope\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Raise scope (make PY_FOO_FOUND global)\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindSCOTCH.cmake" : {
      "ObjectId" : "e2ded7e8670c34209b7547233f962413ecfb55bf",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SCOTCH\n\n# Once done this will define\n\n#\n\n#  SCOTCH_FOUND        - system has found SCOTCH\n\n#  SCOTCH_INCLUDE_DIRS - include directories for SCOTCH\n\n#  SCOTCH_LIBARIES     - libraries for SCOTCH\n\n#  SCOTCH_VERSION      - version for SCOTCH\n\n#\n\n# Variables used by this module, they can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#  SCOTCH_DEBUG        - Set this to TRUE to enable debugging output\n\n#                        of FindScotchPT.cmake if you are having problems.\n\n#                        Please enable this before filing any bug reports.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010-2011 Garth N. Wells, Johannes Ring and Anders Logg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for header file\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for scotch\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for scotcherr\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for ptscotch\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for ptesmumps\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check for ptscotcherr\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Basic check of SCOTCH_VERSION which does not require compilation\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If SCOTCH_VERSION was not found in ptscotch.h, look in scotch.h\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For SCOTCH version > 6, need to add libraries scotch and ptscotch\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Try compiling and running test program\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set flags for building test program\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#set(CMAKE_REQUIRED_LIBRARIES ${SCOTCH_LIBRARY} ${SCOTCHERR_LIBRARY})\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Add MPI variables if MPI has been found\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set version number\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# PT-SCOTCH was first introduced in SCOTCH version 5.0\n\n# FIXME: parallel graph partitioning features in PT-SCOTCH was first\n\n#        introduced in 5.1. Do we require version 5.1?\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Output some variables\n",
        "Line" : 267,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# If program does not run, try adding zlib library and test again\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Add zlib flags if required and set test run to 'true'\n",
        "Line" : 302,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Standard package handling\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/modules/FindSLEPc.cmake" : {
      "ObjectId" : "1fd11673dedb6b5906aac02218a9af90b54465ad",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SLEPC\n\n# Once done this will define\n\n#\n\n#  SLEPC_FOUND            - system has SLEPc\n\n#  SLEPC_INCLUDE_DIRS     - include directories for SLEPc\n\n#  SLEPC_LIBRARY_DIRS     - library directories for SLEPc\n\n#  SLEPC_LIBARIES         - libraries for SLEPc\n\n#  SLEPC_STATIC_LIBARIES  - ibraries for SLEPc (static linking, undefined if not required)\n\n#  SLEPC_VERSION          - version of SLEPc\n\n#  SLEPC_VERSION_MAJOR    - First number in SLEPC_VERSION\n\n#  SLEPC_VERSION_MINOR    - Second number in SLEPC_VERSION\n\n#  SLEPC_VERSION_SUBMINOR - Third number in SLEPC_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010-2016 Garth N. Wells, Anders Logg and Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Load CMake pkg-config module\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find SLEPc pkg-config file\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extract major, minor, etc from version string\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure SLEPc IMPORT (this involves creating an 'imported' target\n\n# and attaching 'properties')\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add include paths\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add libraries\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add libraries (static)\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Compile and run test\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Assume SLEPc works\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Create SLEPc test program\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add MPI variables if MPI has been found\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Try to run test program (shared linking)\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Static libraries not required, so unset\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add MPI variables if MPI has been found\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Try to run test program (static linking)\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Standard package handling\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/modules/FindSLEPc4py.cmake" : {
      "ObjectId" : "b5e0f55b33aa637483d95a714507ace9834fadaf",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find slepc4py\n\n# Once done this will define\n\n#\n\n#  SLEPC4PY_FOUND        - system has slepc4py\n\n#  SLEPC4PY_INCLUDE_DIRS  - include directories for slepc4py\n\n#  SLEPC4PY_VERSION      - version of slepc4py\n\n#  SLEPC4PY_VERSION_MAJOR - first number in SLEPC4PY_VERSION\n\n#  SLEPC4PY_VERSION_MINOR - second number in SLEPC4PY_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Based on FindPETSc4py.cmake\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2013 Lawrence Mitchell\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In cache already\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check if version found is >= required version\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# No specific version requested\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Standard package handling\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindSphinx.cmake" : {
      "ObjectId" : "f8616deaeeea19c7124b3327d3018d6e5e41af84",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Sphinx (sphinx-build)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Once done this will define\n\n#\n\n#   SPHINX_FOUND      - system has Sphinx\n\n#   SPHINX_EXECUTABLE - full path to the Sphinx documentation generator tool\n\n#   SPHINX_VERSION    - the version of Sphinx which was found, e.g. \"1.0.7\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2011 Marie Rognes and Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure Python is available\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to find sphinx-build\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try to check Sphinx version by importing Sphinx\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check if version found is >= required version\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# No specific version of Sphinx is requested\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindUFC.cmake" : {
      "ObjectId" : "a6381baf6da724c6333f22545ee1aced51bc996e",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find UFC\n\n#\n\n# Once done this will define\n\n#\n\n# This module defines\n\n#\n\n#  UFC_FOUND        - system has UFC with correct version\n\n#  UFC_INCLUDE_DIRS - where to find ufc.h\n\n#  UFC_VERSION      - UFC version\n\n#  UFC_SIGNATURE    - UFC signature\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010 Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if version found is >= required version\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# No specific version requested\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Standard package handling\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindUMFPACK.cmake" : {
      "ObjectId" : "3760ada29fd4843aa4ac9e3f07c297c38186d86d",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find UMFPACK\n\n# Once done this will define\n\n#\n\n#  UMFPACK_FOUND        - system has UMFPACK\n\n#  UMFPACK_INCLUDE_DIRS - include directories for UMFPACK\n\n#  UMFPACK_LIBRARIES    - libraries for UMFPACK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find packages that UMFPACK depends on\n\n#set(CMAKE_LIBRARY_PATH ${BLAS_DIR}/lib $ENV{BLAS_DIR}/lib ${CMAKE_LIBRARY_PATH})\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for header file\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for UMFPACK library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  Check for SUITESPARSE library on Apple\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for SUITESPARSECONFIG library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Collect libraries\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Try compiling and running test program\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set flags for building test program\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Build and run test program\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Standard package handling\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/post-install/CMakeLists.txt" : {
      "ObjectId" : "7ae46de68894a6bc5201256a04b97b863003b920",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demo/CMakeLists.txt" : {
      "ObjectId" : "44fa7cddfdce0636dd03433ea2536c7a055071d1",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Require CMake 2.8\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find DOLFIN config file (not used here, but check that the demo will\n\n# be able to find it\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If config file is found, add all demo sub-directories, else print\n\n# helper message\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directories that are commented out correspond to demos that have\n\n# not been implemented in C++\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Documented demos\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#add_subdirectory(documented/singular-poisson-rst/cpp)\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#add_subdirectory(documented/stokes-mini/cpp)\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#add_subdirectory(documented/subdomains-poisson/cpp)\n\n#add_subdirectory(documented/tensor-weighted-poisson/cpp)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Undocumented demos\n\n#add_subdirectory(undocumented/adaptive-poisson/cpp)\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#add_subdirectory(undocumented/buckling-tao/cpp)\n\n#add_subdirectory(undocumented/collision-detection/cpp)\n\n#add_subdirectory(undocumented/compiled-extension-module/cpp)\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#add_subdirectory(undocumented/coordinates/cpp)\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#add_subdirectory(undocumented/elementplot/cpp)\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#add_subdirectory(undocumented/ghost-mesh/cpp)\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#add_subdirectory(undocumented/interpolation/cpp)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#add_subdirectory(undocumented/mixed-poisson-sphere/cpp)\n\n#add_subdirectory(undocumented/mplot/cpp)\n\n#add_subdirectory(undocumented/multimesh/cpp)\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#add_subdirectory(undocumented/multistage-solver/cpp)\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#add_subdirectory(undocumented/optimization/cpp)\n\n#add_subdirectory(undocumented/overlapping-regions/cpp)\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#add_subdirectory(undocumented/point-integral/cpp)\n\n#add_subdirectory(undocumented/projection-interpolation/cpp)\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#add_subdirectory(undocumented/smoothing/cpp)\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#add_subdirectory(undocumented/special-functions/cpp)\n\n#add_subdirectory(undocumented/sub-function-assignment/cpp)\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#add_subdirectory(undocumented/timing/cpp)\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Build list of all cpp demo directories\n\n#file(GLOB_RECURSE list \"main.cpp\")\n\n#list(SORT list)\n\n#string(REGEX REPLACE \"/main.cpp\" \"\" list \"${list}\")\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Add each C++ demo directory\n\n#foreach (demo_dir ${list})\n\n#  add_subdirectory(${demo_dir})\n\n#endforeach()\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "doc-old/CMakeLists.txt" : {
      "ObjectId" : "f3825e65fbfaf7af85ddaa0a50681882eb7844fe",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy most of doc directory to build directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set directories for where sphinx projects and their source\n\n# directories are located\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Initialize separate cpp and python projects\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add target doc_api: generate reST files from code for cpp and\n\n# python. This takes a while.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add target doc_demo: copy demo code and doc files into sphinx\n\n# projects and add additional index files.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add target doc_html_[cpp|python]: run sphinx in [cpp|python] sphinx\n\n# projects\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add target doc_html: run sphinx in both cpp and python\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add target doc_generate_all: Generate all doc (api and demos)\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# FIXME: Want to run doc_generate_all before doc_html, but the order\n\n# of the targets is necessarily respected here.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add target: doc_install Copy generated sphinx projects to\n\n# DOLFIN_DOC_DIR\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "doc-old/sphinx-common/Makefile" : {
      "ObjectId" : "61d9077b0f00b7c6a9b78ffeba19439307349dd8",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/Makefile" : {
      "ObjectId" : "5b6ecb7e4410f92f50b7185319cd222f31a66c0c",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "dolfin/CMakeLists.txt" : {
      "ObjectId" : "db92c9168039435b3672a0a160517986b28b026d",
      "LastModified" : "2017-09-14T08:31:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure and install dolfin/common/version.h file\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# DOLFIN source directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All files and directories in this directory\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Initialize list\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List of excluded files and directories\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Iterate over all directories and files and append to DOLFIN_DIRS\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Install header files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Initialize lists\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Each subdirectory defines HEADERS and SOURCES\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Define libraries\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add dependency on the compile_ale_forms target\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# General compiler defintions\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set 'Developer' build type flags\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# FIXME: Do we want to add -DDEBUG to RelWithDebInfo?\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set debug definitions\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Check type sizes\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check size of size_t\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set size of dolfin::la_index\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# remove this line when Instant/SWIG is removed\n",
        "Line" : 99,
        "CharPositionInLine" : 81
      },
      "19" : {
        "Text" : "# remove this line when Instant/SWIG is removed\n",
        "Line" : 102,
        "CharPositionInLine" : 65
      },
      "20" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add include directories and libs of required packages\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# UFC\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Eigen3\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Boost\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Optional packages\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# HDF5\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Trilinos\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# SLEPC\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# remove this line when Instant/SWIG is removed\n",
        "Line" : 148,
        "CharPositionInLine" : 56
      },
      "29" : {
        "Text" : "# PETSc\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# remove this line when Instant/SWIG is removed\n",
        "Line" : 156,
        "CharPositionInLine" : 56
      },
      "31" : {
        "Text" : "# petsc4py\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This is requied for the pybdind11 transion. Review once SWIG\n\n# backend is removed.\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# slepc4py\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# UMFPACK\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# CHOLMOD\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# SCOTCH\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ParMETIS\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ZLIB\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# MPI\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# remove this line when Instant/SWIG is removed\n",
        "Line" : 215,
        "CharPositionInLine" : 54
      },
      "41" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Set compiler flags, include directories and library dependencies\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Add compiler include directories\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Add CXX definitions\n\n#add_definitions(${DOLFIN_CXX_DEFINITIONS})\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Just add git revision flag to the one affected file\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Add flags\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# SWIG\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Add numpy defines to DOLFIN_PYTHON_DEFINITIONS\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Set numpy version define\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Only set define for none deprecated API for NUMPY version 1.7\n\n# and larger\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Install\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate CMake config files (DOLFINConfig{,Version}.cmake)\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Instant legacy. Remove when transitioned to pybind11\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Generate pkg-config file and install it\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Define packages that should be required by pkg-config file\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Get link libraries and includes\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Add imported targets to lists for creating pkg-config file\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Get include paths\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Get libraries\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# 'regular' libs, i.e. not imported targets\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Special handling for compiled Boost imported targets\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Join include lists and remove duplicates\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Convert include dirs to -I<incdir> form\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Get dolfin definitions\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Convert compiler flags and definitions into space separated strings\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Convert libraries to -L<libdir> -l<lib> form\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Add -Wl,option directives\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# Add libraries that matches the form -L<libdir> -l<lib>\n",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Remove duplicated link flags\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Add additional link flags\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Boost include dir (used as pkg-config variable)\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Configure and install pkg-config file\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 73
    },
    "dolfin/adaptivity/CMakeLists.txt" : {
      "ObjectId" : "b22689ecf9d13e34a60de6cd0140c95e146b6fdc",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/ale/CMakeLists.txt" : {
      "ObjectId" : "0114e70e0fc0a1b50d8a0ea2ec19afb57eec1803",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add custom command for compiling Poisson1D.ufl\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add custom command for compiling Poisson2D.ufl\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add custom command for compiling Poisson3D.ufl\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add custom target for compiling forms\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tell CMake that Poisson*D.h won't be available until build time\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "dolfin/common/CMakeLists.txt" : {
      "ObjectId" : "7ebf6d894c0c90b40b8520646864e0db7f80804d",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/fem/CMakeLists.txt" : {
      "ObjectId" : "4d14072a65028dfe22199d95e8c9566132055568",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/function/CMakeLists.txt" : {
      "ObjectId" : "1175632fad6e183e0f7224e482d8ec83b82cb4b9",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/generation/CMakeLists.txt" : {
      "ObjectId" : "de80d247cad5d41b338f78d1e19536fb9185619d",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/geometry/CMakeLists.txt" : {
      "ObjectId" : "2e0c3976c32111c1fa5acc5da8fe9cba520230ac",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/graph/CMakeLists.txt" : {
      "ObjectId" : "f23f89b258677b3309391e96d695b29ed8dd5c8c",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/io/CMakeLists.txt" : {
      "ObjectId" : "ee4de9975c74abac5557423187005ed5e8700fe1",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/la/CMakeLists.txt" : {
      "ObjectId" : "78ed817b9b37b9bd88c0ea736ed6e1bfe52a4624",
      "LastModified" : "2017-08-23T11:20:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/log/CMakeLists.txt" : {
      "ObjectId" : "675c313354dae705018f76570b03560ba69fcc7a",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/math/CMakeLists.txt" : {
      "ObjectId" : "206dc8382c010d35c0d49fa1a79d0e4e3656e546",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/mesh/CMakeLists.txt" : {
      "ObjectId" : "cd9a8649710a063b80da62f62dab87ef4444aa75",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/multistage/CMakeLists.txt" : {
      "ObjectId" : "8877126513a6f075916e15ff9fe8e017365d45c8",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/nls/CMakeLists.txt" : {
      "ObjectId" : "b00ec5cd71b168d1b961d91a0fce255653fdae92",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/parameter/CMakeLists.txt" : {
      "ObjectId" : "fb02decff8c458a894e075a63309e7989438ec58",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/refinement/CMakeLists.txt" : {
      "ObjectId" : "7bc1ad6084eb7ef4cc071ca10c9c27b1b9075a4c",
      "LastModified" : "2017-07-21T21:28:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dolfin/swig/CMakeLists.txt" : {
      "ObjectId" : "d6f1798c22ff0768a8ab10dbf502ca9ec3a9f2ee",
      "LastModified" : "2017-08-27T08:41:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove '-Werror', '-Wall' and 'pedantic' flags (if present) when\n\n# compiling SWIG-generated files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prevent Intel compiler emitting warnings for SWIG-generated code\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prevent clang emitting warnings for SWIG-generated code\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set common include directories\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set add PYTHON defines\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get combined modules\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sort and reverse the list so la combined module comes early\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get all original interface files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Target to copy all swig files from source to build directory\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Target to generate all swig interface files\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Target to generate swig interface files\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Target to generate swig docstring files\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Iterate over the combined modules and add each as a target\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List of files which should not be installed\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Iterate over each sub module and add install targets\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install pre.i if exists\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Add global interface files\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add global typemap interface files\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "7488b98169683d02aebc829b5d2436f3f284149f",
      "LastModified" : "2017-09-15T07:38:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for mpi4py\n\n#set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}/cmake)\n\n#find_package(MPI4PY)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the binding library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if (MPI4PY_FOUND)\n\n#  target_include_directories(cpp PRIVATE ${MPI4PY_INCLUDE_DIR})\n\n#  add_definitions(-DHAS_MPI4PY)\n\n#endif()\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add DOLFIN libraries and other config\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "python/cmake/FindMPI4PY.cmake" : {
      "ObjectId" : "b08d3be7025da38910a589e0137985c9e349917e",
      "LastModified" : "2017-09-08T14:09:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindMPI4PY\n\n# Find mpi4py includes and library\n\n# This module defines:\n\n# MPI4PY_INCLUDE_DIR, where to find mpi4py.h, etc.\n\n# MPI4PY_FOUND\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https://compacc.fnal.gov/projects/repositories/entry/synergia2/CMake/FindMPI4PY.cmake?rev=c147eafb60728606af4fe7b1b161a660df142e9a\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Did not successfully include MPI4PY\n",
        "Line" : 23,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "## successful\n",
        "Line" : 26,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "test/unit/CMakeLists.txt" : {
      "ObjectId" : "027c19d0874edf7c9d560ef5d36796b38121304d",
      "LastModified" : "2017-09-08T14:09:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Using ExternalProject to Build GTest and use the Library\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the build type if it isn't already\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set default ExternalProject root directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add gtest\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable install step\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Specify include dir\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/unit/cpp/CMakeLists.txt" : {
      "ObjectId" : "3e50f928b53521a56e9640c9842688b92515fed5",
      "LastModified" : "2017-09-08T14:09:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Require CMake 2.8\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set special link option, see `cmake --help-policy CMP0003`\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find DOLFIN config file (not used here, but checks that tests will be able\n\n# to find it\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add GoogleTest Directory\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If config file is found, add all demo sub-directories, else print helper\n\n# message\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build list of all cpp directories\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Change to targetting cpp files instead\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# Add each C++ demo directory only once\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Get directory\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Get one upper directory\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Get last dir name\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Only process if last dirname is cpp\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If you find the cpp lib dir\n\n# That means you have allocated the cpp files\n\n# Don't need to recheck the directories\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Set CMake behavior\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Default build type (can be overridden by user)\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Compiler definitions\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Compiler flags\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Include directories\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Google Test uses threads\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    }
  },
  "FileTypes" : {
    "CMAKE" : 47,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 5270
}