{
  "Repository" : "16458105",
  "Revision" : "HEAD",
  "ObjectId" : "adddfd32c3f219c3552de7ed08f0b823441d9c3f",
  "CommitTime" : "2019-04-15T23:05:09Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f112620f59f09e153efb05c97ec9a679b65ec5f2",
      "LastModified" : "2017-10-25T01:51:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate a unique filename for the unity build translation unit\r\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Exclude all translation units from compilation\r\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Open the ub file\r\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add include statement for each translation unit\r\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Complement list of translation units with the name of ub\r\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#############################################################\r\n\n# Header and source file lists\r\n\n#############################################################\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#############################################################\r\n\n# Build the ZScript parser\r\n\n#############################################################\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################\r\n\n# Global settings for the different platforms\r\n\n#############################################################\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Windows\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# REQUIRED or else MSVC throws internal compiler error(!)\r\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Linux\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Mistakenly used in the source.\r\n",
        "Line" : 144,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "#############################################################\r\n\n# Sound Library\r\n\n#############################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#############################################################\r\n\n# Romview\r\n\n#############################################################\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#############################################################\r\n\n# Zelda\r\n\n#############################################################\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############################################################\r\n\n# ZQuest\r\n\n#############################################################\r\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "allegro/CMakeLists.txt" : {
      "ObjectId" : "da6d70d65a83e0b6094c961c09a1538f7722cb75",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX build chm files\n\n# XXX build devhelp files\n\n# XXX resources (keyboard/language) - pretty useless except on DOS\n\n# XXX install grabber.txt?\n\n# XXX png plugin for grabber\n\n# XXX what is fixbundle?\n\n# XXX applehelp bundle?\n\n# XXX projectbuilder application template?\n\n# XXX allegro.m4?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ports that used to work which aren't supported yet:\n\n#   Haiku/BeOS port\n\n#   djgpp port\n\n#   QNX port\n\n#   BCC32\n\n#   Watcom\n\n#   DMC\n\n#   PSP port?\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# CMake setup\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Restrict configuration types to the selected build type.\n\n# Note: This needs to be done before the project command\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Build options\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the project name.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# As of CMake 2.6.2, support for building .rc files with mingw seems to\n\n# be broken (uses wrong command line syntax) so we have to set this\n\n# variable manually.\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Mac OS X -compatibility_version.\n\n# XXX doesn't seem to work\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Search in the `cmake' directory for additional CMake modules.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Search for C header files in these directories.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Put libraries into `lib'.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Lists of all the source files.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Our own CMake macros and functions.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Build options\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# actual CMake variable\n",
        "Line" : 99,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "# On some 64-bit platforms, libraries should be installed into `lib64'\n\n# instead of `lib'.  Set this to 64 to do that.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Unix platform checks\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# On some systems including linux/joystick.h without sys/types.h results\n\n# in conflicting definitions of fd_set.\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# XXX const\n\n# XXX inline\n\n# XXX size_t\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------#\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Not sure if we want to support disabling these any more.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ALLEGRO_MMX left undefined\n\n# ALLEGRO_SSE left undefined\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Platform drivers\n\n#\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# always link with these libraries\n\n# only link with these if modules disabled\n\n# only link with these if modules enabled\n",
        "Line" : 238,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# -- Unix --\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# not MACOSX\n",
        "Line" : 249,
        "CharPositionInLine" : 17
      },
      "26" : {
        "Text" : "# ALSA 0.5 is beyond obsolete.\n",
        "Line" : 280,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "# This is untested.\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# aRts is obsolete\n\n# esd is obsolete\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# -- X11 --\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# -- Linux console --\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Generate and install headers\n\n#\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "allegro/addons/allegrogl/CMakeLists.txt" : {
      "ObjectId" : "36cfcc3fcebc2b896ebab8fbc01f7465bf4ba39f",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# AllegroGL\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX Mesa generic driver support?\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX Maybe AllegroGL should be optionally dynamic?\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Examples\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "allegro/addons/allegrogl/include/allegrogl/alleggl_config.h.cmake" : {
      "ObjectId" : "5a044429a46325a40ee6409181410470c62dde1b",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Define if the Mesa generic driver must be built. */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define if glXGetProcAddress must be appended by ARB. */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define if dynamic linking is supported. */",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define if XF86VidMode extension is supported. */",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "allegro/addons/jpgalleg/CMakeLists.txt" : {
      "ObjectId" : "5f2b0cf35f97e076dc66f308f04a8b83bad6f5f4",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# JPGalleg\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# JPGalleg contains some optional assembly code for x86.\n\n# In the end I decided not to enable it as we can't be sure we can maintain\n\n# it in the future, so this file never contains anything useful.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Examples\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "allegro/addons/jpgalleg/include/mmx.h.cmake" : {
      "ObjectId" : "8cc9e1f48dc04e791dae7e0175688c010d5ea6ca",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "allegro/addons/loadpng/CMakeLists.txt" : {
      "ObjectId" : "ecb5298c0fe1903154afa2714d228a8294b70dcc",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# loadpng\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Examples\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "allegro/addons/logg/CMakeLists.txt" : {
      "ObjectId" : "d32b0ea8d4a303d18f5629a746d5f042cc940d29",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# logg\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Examples\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "allegro/cmake/AllegroFindOSS.cmake" : {
      "ObjectId" : "498ea9777849022c37705dcf9f9c92231eb78a9e",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Open Sound System\n\n#\n\n#  OSS_FOUND       - True if OSS headers found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is Allegro-specific and requires the following variables to be\n\n# set elsewhere:\n\n#   ALLEGRO_HAVE_MACHINE_SOUNDCARD_H\n\n#   ALLEGRO_HAVE_LINUX_SOUNDCARD_H\n\n#   ALLEGRO_HAVE_SYS_SOUNDCARD_H\n\n#   ALLEGRO_HAVE_SOUNDCARD_H\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OSS_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "allegro/cmake/Common.cmake" : {
      "ObjectId" : "41822dd6a1ce63952ff08296c6da424ec69fb273",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For OS X frameworks to work you must add headers to the target's sources.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Doesn't work, see below.\n\n# PUBLIC_HEADER DESTINATION \"include\"\n",
        "Line" : 33,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# Unfortunately, CMake's PUBLIC_HEADER support doesn't install into nested\n\n# directories well, otherwise we could rely on install(TARGETS) to install\n\n# header files associated with the target.  Instead we use the install(FILES)\n\n# to install headers.  We reuse the MACOSX_PACKAGE_LOCATION property,\n\n# substituting the \"Headers\" prefix with \"include\".\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Oh my. CMake really is bad for this - but I couldn't find a better\n\n# way.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Watch out for -framework options (OS X)\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Remove absolute path.\n",
        "Line" : 66,
        "CharPositionInLine" : 9
      },
      "6" : {
        "Text" : "# Remove .a/.so/.dylib.\n",
        "Line" : 69,
        "CharPositionInLine" : 9
      },
      "7" : {
        "Text" : "# Remove -l prefix if it's there already.\n",
        "Line" : 72,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# The \"./\" is NOT redundant as CMAKE_CFG_INTDIR may be \"/\".\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# vim: set sts=4 sw=4 et:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "allegro/cmake/FileList.cmake" : {
      "ObjectId" : "5604958033bb5c1de8652749237c3f1a1a3a7f4e",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Listed with UNIX files.\n\n# src/linux/ljoy.c\n",
        "Line" : 231,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# src/misc/modex.c\n\n# src/misc/modexgfx.s\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# src/misc/modexsms.c\n",
        "Line" : 283,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# May be used without enabling the entire Linux console port.\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# include/allegro/platform/alplatf.h.cmake\n",
        "Line" : 421,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# include/allegro/platform/alunixac.h.cmake\n\n# include/allegro/platform/alunixac.hin\n",
        "Line" : 428,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "allegro/cmake/FindDDraw.cmake" : {
      "ObjectId" : "af464d25dc206d962cc2dfcbe21eaefd7c803947",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find DirectDraw\n\n# Find the DirectDraw includes and libraries\n\n#\n\n#  DDRAW_INCLUDE_DIR - where to find ddraw.h\n\n#  DDRAW_LIBRARIES   - List of libraries when using ddraw.\n\n#  DDRAW_FOUND       - True if ddraw found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Makes my life easier.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set DDRAW_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "allegro/cmake/FindDInput.cmake" : {
      "ObjectId" : "dddb3bf90ae8c1ab4abed67a325b842af07cceca",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find DirectInput\n\n# Find the DirectInput includes and libraries\n\n#\n\n#  DINPUT_INCLUDE_DIR - where to find dinput.h\n\n#  DINPUT_LIBRARIES   - List of libraries when using dinput.\n\n#  DINPUT_FOUND       - True if dinput found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Makes my life easier.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set DINPUT_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "allegro/cmake/FindDSound.cmake" : {
      "ObjectId" : "a191cd615d22e371df739ece1e4d13b9736fda7b",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find DirectSound\n\n# Find the DirectSound includes and libraries\n\n#\n\n#  DSOUND_INCLUDE_DIR - where to find dsound.h\n\n#  DSOUND_LIBRARIES   - List of libraries when using dsound.\n\n#  DSOUND_FOUND       - True if dsound found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Makes my life easier.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set DSOUND_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "allegro/cmake/FindDXGuid.cmake" : {
      "ObjectId" : "d2d93257b1339e0a6b7bfae2de512ac567503056",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find dxguid\n\n# Find the dxguid libraries\n\n#\n\n#  DXGUID_LIBRARIES   - List of libraries\n\n#  DXGUID_FOUND       - True if dxguid found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set DXGUID_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "allegro/cmake/FindSvgalib.cmake" : {
      "ObjectId" : "907e621a977693017a0f7aa2cdff2d4db31789bc",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find svgalib\n\n#\n\n#  SVGALIB_INCLUDE_DIR - where to find vga.h, etc.\n\n#  SVGALIB_LIBRARIES   - List of libraries when using svgalib.\n\n#  SVGALIB_FOUND       - True if vorbis found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set SVGALIB_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "allegro/cmake/FindVorbis.cmake" : {
      "ObjectId" : "46e99076135acdaf291ae99c56c3f55d1fa1bb75",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find vorbis\n\n# Find the native vorbis includes and libraries\n\n#\n\n#  VORBIS_INCLUDE_DIR - where to find vorbis.h, etc.\n\n#  VORBIS_LIBRARIES   - List of libraries when using vorbis(file).\n\n#  VORBIS_FOUND       - True if vorbis found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set VORBIS_FOUND\n\n# to TRUE if all listed variables are TRUE.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "allegro/cmake/Toolchain-mingw.cmake" : {
      "ObjectId" : "a3d6c0eb584415191418ed70286902b8a4982e63",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use this command to build the Windows port of Allegro\n\n# with a mingw cross compiler:\n\n#\n\n#   cmake -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchain-mingw.cmake .\n\n#\n\n# or for out of source:\n\n#\n\n#   cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-mingw.cmake ..\n\n#\n\n# You will need at least CMake 2.6.0.\n\n#\n\n# Adjust the following paths to suit your environment.\n\n#\n\n# You might want to set MINGDIR to prevent make install making a mess\n\n# in your normal directories.\n\n#\n\n# This file was based on http://www.cmake.org/Wiki/CmakeMingw\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assume the target architecture.\n\n# XXX for some reason the value set here gets cleared before we reach the\n\n# main CMakeLists.txt; see that file for a workaround.\n\n# set(CMAKE_SYSTEM_PROCESSOR i686)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Which compilers to use for C and C++, and location of target\n\n# environment.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# First look in standard location as used by Debian/Ubuntu/etc.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Otherwise you can get a MinGW environment using the script at\n\n# <http://mingw-cross-env.nongnu.org>.  It downloads and builds MinGW and\n\n# most of the dependencies for you.  This is a suitable location.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Else fill in local path which the user will likely adjust.\n\n# This is the location assumed by <http://www.libsdl.org/extras/win32/cross/>\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Tell pkg-config not to look at the target environment's .pc files.\n\n# Setting PKG_CONFIG_LIBDIR sets the default search directory, but we have to\n\n# set PKG_CONFIG_PATH as well to prevent pkg-config falling back to the host's\n\n# path.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "allegro/cmake/Toolchain-psp-gcc.cmake" : {
      "ObjectId" : "84a220cb8c901c070fce4f69830793960aecb49e",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use this command to build the PSP port of Allegro:\n\n#\n\n#   cmake -DWANT_TESTS=off -DWANT_TOOLS=off -DWANT_LOGG=off -DWANT_ALLEGROGL=off -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchain-psp-gcc.cmake .\n\n#\n\n# or for out of source:\n\n#\n\n#   cmake -DWANT_TESTS=off -DWANT_TOOLS=off -DWANT_LOGG=off -DWANT_ALLEGROGL=off -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-psp-gcc.cmake ..\n\n#\n\n# You will need at least CMake 2.6.0.\n\n#\n\n# Adjust the following paths to suit your environment.\n\n#\n\n# This file was based on http://www.cmake.org/Wiki/CmakeMingw\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The name of the target operating system.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Location of target environment.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Which compilers to use for C and C++.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Needed to pass the compiler tests.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# After building the ELF binary build the PSP executable.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use this command to build the PSP port of Allegro:\n\n#\n\n#   cmake -DWANT_TESTS=off -DWANT_TOOLS=off -DWANT_LOGG=off -DWANT_ALLEGROGL=off -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchain-psp-gcc.cmake .\n\n#\n\n# or for out of source:\n\n#\n\n#   cmake -DWANT_TESTS=off -DWANT_TOOLS=off -DWANT_LOGG=off -DWANT_ALLEGROGL=off -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-psp-gcc.cmake ..\n\n#\n\n# You will need at least CMake 2.6.0.\n\n#\n\n# Adjust the following paths to suit your environment.\n\n#\n\n# This file was based on http://www.cmake.org/Wiki/CmakeMingw\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The name of the target operating system.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Location of target environment.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Which compilers to use for C and C++.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Needed to pass the compiler tests.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# After building the ELF binary build the PSP executable.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Use this command to build the PSP port of Allegro:\n\n#\n\n#   cmake -DWANT_TESTS=off -DWANT_TOOLS=off -DWANT_LOGG=off -DWANT_ALLEGROGL=off -DCMAKE_TOOLCHAIN_FILE=cmake/Toolchain-psp-gcc.cmake .\n\n#\n\n# or for out of source:\n\n#\n\n#   cmake -DWANT_TESTS=off -DWANT_TOOLS=off -DWANT_LOGG=off -DWANT_ALLEGROGL=off -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-psp-gcc.cmake ..\n\n#\n\n# You will need at least CMake 2.6.0.\n\n#\n\n# Adjust the following paths to suit your environment.\n\n#\n\n# This file was based on http://www.cmake.org/Wiki/CmakeMingw\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The name of the target operating system.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Location of target environment.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Which compilers to use for C and C++.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Needed to pass the compiler tests.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# After building the ELF binary build the PSP executable.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "allegro/demos/shooter/CMakeLists.txt" : {
      "ObjectId" : "0e3c1c730cdb0c4368c6febd44ea2bc1a77e9693",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for shooter.ico\n",
        "Line" : 1,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "allegro/demos/skater/CMakeLists.txt" : {
      "ObjectId" : "bd6ef5690efcf802c6c16edae3d4f0db7ae99760",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "allegro/docs/CMakeLists.txt" : {
      "ObjectId" : "32ed0535c2da434d921ca584cfab66f998cd8d34",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You'll have to ask Shawn why it was like this...\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Files in the root directory.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Man pages\n\n#\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# I'm assuming only Unix users want man pages installed, but djgpp supports\n\n# man pages to so this might need to change.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Info\n\n#\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Scite\n\n#\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------#\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "allegro/examples/CMakeLists.txt" : {
      "ObjectId" : "e7ac7849448ea7f4bea1ead7f62cb881e60a6774",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "allegro/include/allegro/platform/alplatf.h.cmake" : {
      "ObjectId" : "23c082203731a7513112a0c38e457697526026e8",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* These are always defined now. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "allegro/include/allegro/platform/alunixac.h.cmake" : {
      "ObjectId" : "5adb3aa7f196eaeb54d46f3659ce539394aa05d7",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * Note that this file is no longer generated by autoheader as it results in\n * too much namespace pollution.  If you add define a new macro in\n * configure.in or aclocal.m4, you must add an entry to this file.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define if you want support for n bpp modes. */",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*---------------------------------------------------------------------------*/",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the corresponding header file. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if the corresponding functions are available. */",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if procfs reveals argc and argv */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/*---------------------------------------------------------------------------*/",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define if target machine is little endian. */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define if target machine is big endian. */",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define for Unix platforms, to use C convention for bank switching. */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define if compiler prepends underscore to symbols. */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define if assembler supports MMX. */",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define if assembler supports SSE. */",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define if target platform is Darwin. */",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define if you have the pthread library. */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define if constructor attribute is supported. */",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define if you need to use a magic main. */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define if dynamically loaded modules are supported. */",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/*---------------------------------------------------------------------------*/",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define if you need support for X-Windows. */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define if MIT-SHM extension is supported. */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define if XCursor ARGB extension is available. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define if DGA version 2.0 or newer is supported */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define if XF86VidMode extension is supported. */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define if XIM extension is supported. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define if xpm bitmap support is available. */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/*---------------------------------------------------------------------------*/",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define if target platform is linux. */",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to enable Linux console fbcon driver. */",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to enable Linux console SVGAlib driver. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define if SVGAlib driver can check vga_version. */",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to enable Linux console VBE/AF driver. */",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to enable Linux console VGA driver. */",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/*---------------------------------------------------------------------------*/",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to the installed ALSA version. */",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define if ALSA DIGI driver is supported. */",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define if ALSA MIDI driver is supported. */",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define if aRts DIGI driver is supported. */",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define if ESD DIGI driver is supported. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define if JACK DIGI driver is supported. */",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define if OSS DIGI driver is supported. */",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define if OSS MIDI driver is supported. */",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define if SGI AL DIGI driver is supported. */",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/*---------------------------------------------------------------------------*/",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to (void *)-1, if MAP_FAILED is not defined. */\n/* TODO: rename this */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define as the return type of signal handlers (`int' or `void'). */\n/* TODO: rename this */\n/* XXX too lazy to configure this */",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/*---------------------------------------------------------------------------*/\n/* vi:set ft=c: */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "allegro/indent.pro" : {
      "ObjectId" : "5d2ca4abda54b6f3e5044b54203bb767481ac021",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "allegro/setup/CMakeLists.txt" : {
      "ObjectId" : "1909bda13a45ee93ce873b593bfd130b6eb98eda",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "allegro/tests/CMakeLists.txt" : {
      "ObjectId" : "767c7c5c6f3a2977cd09025ee1466768ae8381f5",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for examples/running.h\n",
        "Line" : 1,
        "CharPositionInLine" : 44
      },
      "1" : {
        "Text" : "# I don't know if there is a better way.\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "allegro/tools/CMakeLists.txt" : {
      "ObjectId" : "170c3b48b3802b4e92d68d696e09bb04c3925f95",
      "LastModified" : "2017-07-01T20:09:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# aldat library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX support plugin \"scripts\", i.e. linker arguments.\n\n# With CMake it should just be the name of a target to link with.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Concatenate plugins/*.inc files into a temporary file.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy to plugins.h if necessary.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Don't use add_our_library as we don't want to install it.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Tools\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n#\n\n# Platform-specific tools\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# XXX add bfixicon when adding Haiku support\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------#\n\n# vim: set sts=4 sw=4 et:\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 24,
    "CMAKESOURCE" : 4,
    "QMAKE" : 1
  },
  "ElapsedTime" : 4913
}