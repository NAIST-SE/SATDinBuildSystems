{
  "Repository" : "54752258",
  "Revision" : "HEAD",
  "ObjectId" : "05a595fe122a00c1a1ad566a5b8a887166dcc733",
  "CommitTime" : "2019-04-18T16:45:39Z",
  "Files" : {
    "CMake/ClangCompilers.cmake" : {
      "ObjectId" : "2e8bcaf0e0e43358808bd0decb96c7b4af36988a",
      "LastModified" : "2019-03-27T21:58:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check compiler version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the std\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable OpenMP\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set clang specific flags (which we always want)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Suppress compile warnings\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set extra optimization specific flags\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set extra debug flags\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Special architectural flags\n\n#--------------------------------------\n\n# case arch\n\n#     x86_64: -march\n\n#     powerpc: -mpcu\n\n#     arm: -mpcu\n\n#     default or cray: none\n\n#--------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# It's a cray machine. Don't do anything\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# the case for x86_64\n\n# check if the user has already specified -march=XXXX option for cross-compiling.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# make sure that the user specifies -march= for both CMAKE_CXX_FLAGS and CMAKE_C_FLAGS.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" AND CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 61,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" AND CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 63,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" OR CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 64,
        "CharPositionInLine" : 9
      },
      "14" : {
        "Text" : "# use -march=native\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" OR CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 68,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# the case for PowerPC and ARM\n\n# check if the user has already specified -mcpu=XXXX option for cross-compiling.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# make sure that the user specifies -mcpu= for both CMAKE_CXX_FLAGS and CMAKE_C_FLAGS.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" AND CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 75,
        "CharPositionInLine" : 11
      },
      "19" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" AND CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 77,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" OR CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 78,
        "CharPositionInLine" : 9
      },
      "21" : {
        "Text" : "# use -mcpu=native\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" OR CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 82,
        "CharPositionInLine" : 10
      },
      "23" : {
        "Text" : "# Add static flags if necessary\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Coverage\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Don't expect this to be useful unless you have msan instrumented all libraries\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "CMake/FindFFTW.cmake" : {
      "ObjectId" : "ad972dd0b24738494e91325e5c45b7b1f60f90ad",
      "LastModified" : "2014-11-13T21:21:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FFTW_INCLUDE_DIR = fftw3.h\n\n# FFTW_LIBRARIES = libfftw3.a\n\n# FFTW_FOUND = true if FFTW3 is found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibxml2QMC.cmake" : {
      "ObjectId" : "c28d878a5cc945b0a86b3c34b568ab36677c0211",
      "LastModified" : "2016-07-06T19:53:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find libxml2 (http://www.xmlsoft.org)\n\n#\n\n# Prioritizes LIBXML2_HOME and QMC_BUILD_STATIC\n\n# before calling standard cmake find_package(LibXml2)\n\n#\n\n# Define the following values:\n\n#\n\n# LibXml2_INCLUDE_DIR  = where libxml/xpath.h can be found\n\n# LibXml2_LIBRARIES    = the library to link against libxml2\n\n# LibXml2_FOUND        = set to 1 if libxml2 is found\n\n#\n\n# Environment variables:\n\n#\n\n# LIBXML2_HOME = directory containing lib/ and include/libxml2\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindMKL.cmake" : {
      "ObjectId" : "7a08b6173479eff50c29142066f80fe7d032ce10",
      "LastModified" : "2018-10-11T13:37:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Simple file to find MKL (if available)\n\n# This needs a lot of work to make it robust\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extremely Basic Support of common mkl module environment variables\n\n# or -DMKLROOT/-DMKL_HOME instead of preferred -DMKL_ROOT\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding and setting the MKL_INCLUDE_DIRECTORIES\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finding and setting the MKL_LINK_DIRECTORIES\n\n# the directory organization varies with platform and targets\n\n# these suffixes are not exhaustive\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# this takes away link control for intel but is convenient\n\n# perhaps we should consider dropping it since it will more or less\n\n# unify the MKL setup.\n\n# Note -mkl implicitly includes that icc's mkl/include\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for mkl.h\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for mkl_vml_functions.h\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check for fftw3\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/FindVectorMath.cmake" : {
      "ObjectId" : "19f003973dfc6298ebc080519f3a6733322cca67",
      "LastModified" : "2018-10-31T19:19:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find vectorized math libraries and enable appropriate flags\n\n#\n\n# Initial version only for MKL VML. Works for gcc+MKL case. libm and massv detection required.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We arrive here if MKL was detected earlier by FindMKL\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Trying MKL VML\")\n\n# Check for mkl_vml_functions.h\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# enable VML only when MKL libraries have been picked up\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/GNUCompilers.cmake" : {
      "ObjectId" : "bb56f9aba99eeb091622131c135fa5398f11530a",
      "LastModified" : "2019-03-27T21:58:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check compiler version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the std\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable OpenMP\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set gnu specific flags (which we always want)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Suppress compile warnings\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set extra optimization specific flags\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Special architectural flags\n\n#--------------------------------------\n\n# case arch\n\n#     x86_64: -march\n\n#     powerpc: -mpcu\n\n#     arm: -mpcu\n\n#     default or cray: none\n\n#--------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# It's a cray machine. Don't do anything\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# the case for x86_64\n\n# check if the user has already specified -march=XXXX option for cross-compiling.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# make sure that the user specifies -march= for both CMAKE_CXX_FLAGS and CMAKE_C_FLAGS.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" AND CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 48,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" AND CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 50,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" OR CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 51,
        "CharPositionInLine" : 9
      },
      "13" : {
        "Text" : "# use -march=native\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-march=\" OR CMAKE_C_FLAGS MATCHES \"-march=\")\n",
        "Line" : 55,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "# the case for PowerPC and ARM\n\n# check if the user has already specified -mcpu=XXXX option for cross-compiling.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# make sure that the user specifies -mcpu= for both CMAKE_CXX_FLAGS and CMAKE_C_FLAGS.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" AND CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 62,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" AND CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 64,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" OR CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 65,
        "CharPositionInLine" : 9
      },
      "20" : {
        "Text" : "# use -mcpu=native\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-mcpu=\" OR CMAKE_C_FLAGS MATCHES \"-mcpu=\")\n",
        "Line" : 69,
        "CharPositionInLine" : 10
      },
      "22" : {
        "Text" : "# Add static flags if necessary\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Coverage\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "CMake/IBMCompilers.cmake" : {
      "ObjectId" : "32c66154b9fb295ed897a5c9baca1e1a813cdc42",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clean up flags\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Suppress compile warnings\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set extra optimization specific flags\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add static flags if necessary\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/IntelCompilers.cmake" : {
      "ObjectId" : "2a68f75909ebdb425ee6fd8ada718677b62bd5b3",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check compiler version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the std\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable OpenMP\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Suppress compile warnings\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set extra optimization specific flags\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use deprecated options prior to 11.1\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#check if -ftz is accepted\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------\n\n# Not on Cray's machine\n\n#------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#check if the user has already specified -x option for cross-compiling.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# make sure that the user specifies -x for both CMAKE_CXX_FLAGS and CMAKE_C_FLAGS.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-x\" AND CMAKE_C_FLAGS MATCHES \"-x\")\n",
        "Line" : 66,
        "CharPositionInLine" : 9
      },
      "11" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-x\" AND CMAKE_C_FLAGS MATCHES \"-x\")\n",
        "Line" : 71,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-x\" OR CMAKE_C_FLAGS MATCHES \"-x\")\n",
        "Line" : 72,
        "CharPositionInLine" : 7
      },
      "13" : {
        "Text" : "#check if -xHost is accepted\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#(CMAKE_CXX_FLAGS MATCHES \"-x\" OR CMAKE_C_FLAGS MATCHES \"-x\")\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 15
    },
    "CMake/PGICompilers.cmake" : {
      "ObjectId" : "8eee1a347f85ecdd7f3a66d7740c53ecf845ea93",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the std\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable OpenMP\n\n# If just -mp is specified, OMP_NUM_THREADS must be set in order to run in parallel\n\n# Specifying 'allcores' will run on all cores if OMP_NUM_THREADS is not set (which seems\n\n#  to be the default for other OpenMP implementations)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set extra optimization specific flags\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setting this to 'OFF' adds the -A flag, which enforces strict standard compliance\n\n#  and causes the compilation to fail with some GNU header files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add static flags if necessary\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/TestCxx14Library.cmake" : {
      "ObjectId" : "69afafe4b98b655433c7a4024caa429e12618f37",
      "LastModified" : "2018-11-04T17:20:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test that the compiler is configured with a C++ 14 standard library\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake versions prior to 3.8 did not support the CXX_STANDARD options to try_compile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/Testlibstdc++.cmake" : {
      "ObjectId" : "23901f9a61d7bf564ed060e3d14935bd159c1ea9",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test that if a C++ compiler is compatiable with the libstdc++ in use\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/compareGCOV.cmake" : {
      "ObjectId" : "e5665b99b92384675de6a7c67c3a99a3cdd31c6d",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Heavily inspired by the CTestCoverageCollectGCOV CMake module.\n\n# Functions for handling coverage data\n\n#  - create gcov files\n\n#  - compare multiple runs\n\n#  - create tar file for CDash upload\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate gcov files from gcda and gcno files\n\n# Create the data.json file cdash expects\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove unwanted gcov files (files in /usr, unit tests, files with coverage only in static initializers, etc.)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use after running gcov with the -l (--long-file-names) option to merge all the\n\n#  gcov files from the input directory into one gcov file for each source file in\n\n#  the output directory.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create tar file of gcov files\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clear the coverage data files in preparation for another run\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compare two coverage runs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#FILE(RELATIVE_PATH REL_OUTPUT_DIR ${CTEST_BINARY_DIRECTORY} ${OUTPUT_DIR})\n\n##MESSAGE(\"*** Relative output dir = ${REL_OUTPUT_DIR}\")\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "CMake/ctest_script.cmake" : {
      "ObjectId" : "46e5d824c3d4c447cbfe7142860e49dc9c77396b",
      "LastModified" : "2019-03-26T18:40:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ctest script for building, running, and submitting the test results \n\n# Usage:  ctest -s script,build\n\n#   build = debug / optimized / valgrind / coverage\n\n# Note: this test will use use the number of processors defined in the variable N_PROCS,\n\n#   the environment variables\n\n#   N_PROCS, or the number of processors available (if not specified)\n\n#   N_PROCS_BUILD, or N_PROCS (if not specified)\n\n#   N_CONCURRENT_TESTS, or N_PROCS (if not specified)\n\n#   TEST_SITE_NAME, or HOSTNAME (if not specified)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set platform specific variables\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Setup for hyperion.alcf.anl.gov\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setup for cori.nersc.gov phase 1\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Setup for eos.ccs.ornl.gov Cray XC30 Intel E5-2670 Aries interconnect.\n\n# N_NPROCS and N_PROCS_BUILD should be set to respect current OLCF limits\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setup for titan.ccs.ornl.gov Cray XK7\n\n# N_NPROCS and N_PROCS_BUILD should be set to respect current OLCF limits\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Setup for billmp1.ornl.gov Mac\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the source directory based on the current directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check that we specified the build type to run\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set the number of processors\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Linux:\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Mac:\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Windows:\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set the number of processors for compilation and running tests\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set basic variables\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set valgrind options\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Clear the binary directory and create an initial cache\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set the configure options\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Configure and run the tests\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Run the configure, build and tests\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Submit the results to oblivion\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Skip the normal tests when doing coverage\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#    CTEST_TEST( INCLUDE short PARALLEL_LEVEL ${N_PROCS} )\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# run and submit the classified tests to their corresponding track\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# run and submit unclassified tests to the default track\n",
        "Line" : 336,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Path prefix to remove to shorten some file names.  The final SRC_ROOT Should not contain '..'\n",
        "Line" : 345,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#MESSAGE(\"Using new code coverage path in ${CTEST_SOURCE_DIRECTORY}\")\n\n#MESSAGE(\"Using new code coverage path bin: ${CTEST_BINARY_DIRECTORY}\")\n",
        "Line" : 350,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Base test\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Generate gcov\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Remove gcda files\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Generate gcov\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Generate diff\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# create tar file\n",
        "Line" : 382,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Clean up\n\n# exec_program(\"make distclean\")\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "CMake/macros.cmake" : {
      "ObjectId" : "0d6f0087c0ea9dc5c3844482701f00fdb94a3b83",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# Functions for adding tests to ctest\n\n#############################################################\n\n# Useful macros to run an existing executable:\n\n#   RUN_QMC_APP\n\n#     Run QMCPACK with a given number of threads and MPI processes\n\n#\n\n#   QMC_RUN_AND_CHECK\n\n#     Run QMCPACK and check scalar output values.  This is the\n\n#     primary function used for system tests.\n\n#\n\n#   SIMPLE_RUN_AND_CHECK\n\n#     Run QMCPACK on the given input file and check output\n\n#     using a specified script\n\n#############################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to copy a directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Function to copy a directory using symlinks for the files. This saves storage\n\n# space with large test files.\n\n# SRC_DIR must be an absolute path\n\n# The -s flag copies using symlinks\n\n# The -T ${DST_DIR} ensures the destination is copied as the directory, and not\n\n#  placed as a subdirectory if the destination already exists.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy files, but symlink the *.h5 files (which are the large ones)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy everything but *.h5 files and pseudopotential files\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Now find and symlink the *.h5 files and psuedopotential files\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#MESSAGE(\"Creating symlink from  ${SRC_DIR}/${R} to ${DST_DIR}/${R}\")\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Control copy vs. symlink with top-level variable\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#COPY_DIRECTORY_USING_SYMLINK(\"${SRC_DIR}\" \"${DST_DIR}\")\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Symlink or copy an individual file\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Macro to add the dependencies and libraries to an executable\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add the package dependencies\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Macro to create the test name\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# STRING(REGEX REPLACE \"--\" \"-\" TESTNAME ${TESTNAME} )\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Runs qmcpack\n\n#  Note that TEST_ADDED is an output variable\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Runs qmcpack\n\n#  Note that TEST_ADDED is an output variable\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add a test run and associated scalar checks\n\n# ---required inputs---\n\n# BASE_NAME - name of test (number of MPI processes, number of threads, and value to check (if applicable)\n\n#             will be appended to get the full test name)\n\n# BASE_DIR - source location of test input files\n\n# PREFIX - prefix for output files\n\n# INPUT_FILE - XML input file to QMCPACK\n\n# PROCS - number of MPI processes\n\n# THREADS - number of OpenMP threads\n\n# SHOULD_SUCCEED - whether the test is expected to pass or fail.  Expected failing tests will not have\n\n#                  the scalar tests added.\n\n# ---optional inputs---\n\n# ---any number of SERIES/SCALAR_VALUES list pairs can be provided\n\n# ---input pairs beyond the first result in the series number being added to the test name\n\n# ---support for this functionality is provided through the ARGN catch-all input list\n\n# SERIES - series index to compute\n\n# SCALAR_VALUES - list of output values to check with check_scalars.py\n\n#                 The list entries alternate between the value name and the value (usually a string with the\n\n#                 both the average and error).\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Map from name of check to appropriate flag for check_scalars.py\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#MESSAGE(\"Test ${FULL_NAME} should fail\")\n",
        "Line" : 182,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#MESSAGE(\"   SERIES   : ${V}\")\n",
        "Line" : 190,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "#MESSAGE(\"   CHECKLIST: ${V}\")\n",
        "Line" : 194,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "#MESSAGE(\"Adding scalar check ${TEST_NAME}\")\n",
        "Line" : 215,
        "CharPositionInLine" : 24
      },
      "22" : {
        "Text" : "#MESSAGE(\"check command = ${CHECK_CMD}\")\n",
        "Line" : 217,
        "CharPositionInLine" : 24
      },
      "23" : {
        "Text" : "# \"simple run and check\" function does 2 things:\n\n#  1. run qmcpack executable on $input_file located in $base_dir\n\n#  2. run $check_script located in the same folder ($base_dir)\n\n# note: NAME, COMMAND, and WORKING_DIRECTORY must be upper case in add_test!\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# build test name\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# add run (task 1)\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# set up command to run check, assume check_script is in the same folder as input\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#message(${check_cmd})\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# add test (task 2)\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# hard-code for single test\n",
        "Line" : 268,
        "CharPositionInLine" : 38
      },
      "30" : {
        "Text" : "#message(${work_dir})\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# make test depend on the run\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "CMake/python.cmake" : {
      "ObjectId" : "005b2fb12576f160cc95252193f7c54c35ff490d",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Support functions for handling python scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test whether a python modules is present\n\n#   MODULE_NAME - input, name of module to test for\n\n#   MODULE_PRESENT - output - True/False based on success of the import\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test python module prerequisites for a particular test script\n\n#   module_list - input - list of module names\n\n#   test_name - input - name of test (used for missing module message)\n\n#                     - use empty string to silence output\n\n#   add_test - output - true if all modules are present, false otherwise\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/run_qe.cmake" : {
      "ObjectId" : "b2b7e079156ab5ff15f886f1c59ee89687d09b8c",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Runs unit tests\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/test_labels.cmake" : {
      "ObjectId" : "fa04dba2277b8dd6929f18539bff976352d2d3bc",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MESSAGE(\"  Label script return value: ${SUCCESS}\")\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#ELSE()\n\n#  MESSAGE(\"  Test labels: ${TEST_LABELS_TEMP}\")\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/unit_test.cmake" : {
      "ObjectId" : "741dcd09e86566e3a288092fa7dc358feb767606",
      "LastModified" : "2019-03-25T22:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Runs unit tests\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET_TESTS_PROPERTIES( ${TESTNAME} PROPERTIES ENVIRONMENT OMP_NUM_THREADS=1 )\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#SET_TESTS_PROPERTIES( ${TESTNAME} PROPERTIES ENVIRONMENT OMP_NUM_THREADS=1 )\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "CMakeLists.txt" : {
      "ObjectId" : "6de48f160ead765f757a97d2a9906891a4eaf46d",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On BG/Q, the HDF libraries variable includes some supporting shared libraries\n\n# such as libm.so.  With the old behavior of CMP0060, these were converted\n\n# to -lm for the linker, which then correctly selects the static version.\n\n# With the new behavior of CMP0060, the form of the libraries are left alone\n\n# on the link line (eg. /usr/lib64/libm.so), and this causes a linker error\n\n# because shared libraries are not allowed with static linking.\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This policy insures that the CMAKE_EXE_LINKER_FLAGS of the calling project\n\n# are used in try_compile test cmake projects.\n\n# CHECK_CXX_SOURCE_COMPILES and others depend on try_compile\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "######################################################################\n\n# Version\n\n######################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n\n# CTest\n\n######################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Increase timeout per test over the default of 1500 seconds (25 minutes)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "######################################################################\n\n# Build level\n\n######################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################################################################\n\n#define the paths for library and executable for out-of-soruce compilation\n\n######################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n# build include and library paths required for the projects\n\n# For XYZ library, set an environment as\n\n# export XYZ_HOME='root-of-the-library'\n\n# XYZ_HOME/include\n\n# XYZ_HOME/lib\n\n# IF XYZ library is found, XYZ_FOUND is set to true\n\n#\n\n# find_package is used with cmake 2.8 and higher\n\n######################################################################\n\n#if(APPLE)\n\n#  set(QMC_INCLUDE_PATHS ${QMC_INCLUDE_PATHS} /sw/include)\n\n#  set(QMC_LIBRARY_PATHS ${QMC_LIBRARY_PATHS} /sw/lib)\n\n#endif(APPLE)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################################################################\n\n# Set the compiler-time parameters\n\n# OHMMS_DIM =  dimension of the problem\n\n# OHMMS_INDEXTYPE = type of index\n\n# OHMMS_PRECISION  = base precision, float, double etc\n\n# OHMMS_PRECISION_FULL  = full precision, double etc\n\n# QMC_COMPLEX = true if using complex wavefunctions\n\n# QMC_MPI =  enable MPI\n\n# QMC_OMP = enable OMP\n\n######################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Code coverage\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "######################################################################\n\n# enable MPI and OPNEMP  if possible\n\n######################################################################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n\n# set debug printout\n\n# DEBUG_PSIBUFFER_ON keep track buffer's locator\n\n######################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################################\n\n# Standard test\n\n######################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# add macros to compile einspline if necessary\n\n######################################################################\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################################################################\n\n# Build options\n\n# QMC_BUILD_STATIC build static/dynamic  libraries\n\n# BUILD_QMCTOOLS   build utility programs\n\n# MPIP_PROFILE     profile mpi performance\n\n######################################################################\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# AFQMC requires MPI.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#SET(BUILD_QMCTOOLS 1 CACHE BOOL \"Build tools for QMCPACK\")\n\n#SET(MPIP_PROFILE 0 CACHE BOOL \"Build with mpip for mpi profile\")\n\n#SET(BUILD_QMCTOOLS 1)\n\n#SET(MPIP_PROFILE 0)\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "######################################################################\n\n# Install options\n\n# INSTALL_NEXUS install Nexus alongside QMCPACK\n\n######################################################################\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "######################################################################\n\n# FIXED PARAMETERS for test and legacy reasons\n\n# DO NOT TOUCH THESE\n\n# QMC_ORTHO  = 0 for general unit cell, 1 for orthogonal cells\n\n# QMC_FASTWALKER  = true, when operation is faster for each walker\n\n######################################################################\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "######################################################################\n\n#list of options to determine libraries. First, try to use libraries available\n\n#FindXYZ.cmake will set the values if successful\n\n######################################################################\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "######################################################\n\n# Directory where customize cmake files reside\n\n######################################################\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "######################################################\n\n# set ADIOS flags\n\n######################################################\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "######################################################\n\n# Git information (see src/CMakeLists.txt for the\n\n# command to get repository information)\n\n######################################################\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "######################################################\n\n#COMPILER choose one of the cmake files to customize the compiler options\n\n#If nothing is chosen, default settings by cmake will  be used.\n\n#If the automatic detection does not work, comment out everything\n\n#upto COMPILER MANUAL SELECTION and use one of the customized cmake file.\n\n######################################################\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "######################################################\n\n# DO NOT MODIFY BELOW\n\n# If you like to customize your build, create a toolchain as instructed\n\n######################################################\n\n######################################################\n\n# now set the compiler flags and the macros in src/config.h\n\n######################################################\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "######################################################\n\n# Try to identify CPU identity\n\n######################################################\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#INCLUDE(${PROJECT_CMAKE}/CheckProcessorID.cmake)\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#------------------------\n\n# On Cray's machine\n\n#------------------------\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Flags for ctest\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# For slurm use srun\n",
        "Line" : 333,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#--------------------------------\n\n#  C++ 14 is the minimum standard\n\n#--------------------------------\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#------------------------------------\n\n# Identify the compiler -- This serves only to deal with case where only C or CXX is set, refactor? \n\n#------------------------------------\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#------------------------------------\n\n# Include compiler-specific cmake file\n\n#------------------------------------\n",
        "Line" : 393,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# Check that a C++ compiler is compatiable with the underlying libstdc++\n\n#--------------------------------------------------------------------------\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#---------------------------------------------------\n\n# Check that a C++ 14 standard library is configured\n\n#---------------------------------------------------\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#-------------------------------------------------------------------\n\n#  check MPI installation\n\n#-------------------------------------------------------------------\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "## mpi compilers\n",
        "Line" : 425,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#TRY_COMPILE(MPI_WORKS ${CMAKE_BINARY_DIR}\n\n#${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeTmp/testmpi.cxx\n\n#OUTPUT_VARIABLE OUTPUT)\n",
        "Line" : 441,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "#-------------------------------------------------------------------\n\n# check lapack/blas\n\n#-------------------------------------------------------------------\n\n# Quick search for MKL (this will need to be improved).\n\n# This reproduces the old intel -mkl behavior or\n\n# if ENABLE_MKL is set to 1 supports other compilers\n",
        "Line" : 468,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# We found MKL, add the link library\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Cray specific environment variable indicates we are on a cray. Assume libsci will be linked\n\n# preferable to attempt a compile/link\n",
        "Line" : 490,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Search for Blas/Lapack\n",
        "Line" : 495,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# When cmake finds and sets up the MKL libraries with a non-Intel compiler, set the flag\n\n# This should be tidied up when FindMKL.cmake supports non-Intel compilers.\n",
        "Line" : 497,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# AFQMC requires MKL sparse for good performance (roughly a factor of 2x)\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# setup ctest variables\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "####################################################################\n\n#First check the required libraries. Abort if these are not found.\n\n#Changed the fall-back versions to use similar conventions to 2.8.0 and higher\n\n####################################################################\n\n# use customized cmake file for boost so that we can deal with multiple\n\n# installataions\n\n# list of libraries to be linked with the main applications using I/O\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#  MESSAGE(STATUS \"Disabling FFTW\")\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#find_package(LibXml2)\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#IF(SZLIB_FOUND)\n\n#  SET(QMC_UTIL_LIBS ${QMC_UTIL_LIBS} ${SZLIB_LIBRARIES})\n\n#ENDIF(SZLIB_FOUND)\n",
        "Line" : 619,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "#make sure we can find boost if it's not in /usr\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#set(CUDA_NVCC_FLAGS\n\n#  \"-arch=sm_20;-Drestrict=__restrict__;-DNO_CUDA_MAIN;-O3;-use_fast_math\")\n",
        "Line" : 659,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# User defined NVCC flags\n",
        "Line" : 662,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Automatically set the default NVCC flags\n",
        "Line" : 665,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Temporarily disable fast_math because it causes multiple test failures\n\n# SET(CUDA_NVCC_FLAGS \"${CUDA_NVCC_FLAGS};-O3;-use_fast_math\")\n",
        "Line" : 673,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "######################################################\n\n# Add optional macros\n\n######################################################\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#include qmcpack/src build/src\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "######################################################################\n\n# Manage Einspline library\n\n# - toolchain file can set\n\n# - check if libeinspline can be found in $EINSPLINE_HOME/include and\n\n# $EINSPLINE_HOME/lib\n\n# - if not found, build it from the source directory in $EINSPLINE_HOME\n\n# - if everything fails, do not use it\n\n######################################################################\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#if(HAVE_EINSPLINE_EXT)\n\n#  set(HAVE_EINSPLINE 0)\n\n#  INCLUDE(${PROJECT_CMAKE}/FindEinspline.cmake)\n\n#  IF(EINSPLINE_FOUND)\n\n#    INCLUDE_DIRECTORIES(${EINSPLINE_INCLUDE_DIR})\n\n#    SET(QMC_UTIL_LIBS ${EINSPLINE_LIBRARIES} ${QMC_UTIL_LIBS})\n\n#    set(build_einspline 0)\n\n#  endif()\n\n#endif()\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#include(ExternalProject)\n\n#  set(einspline_PREFIX \"${CMAKE_CURRENT_BINARY_DIR}/einspline\")\n\n#  set(einspline_INSTALL_DIR \"${CMAKE_CURRENT_BINARY_DIR}/einspline\")\n\n#  set(einspline_CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${einspline_INSTALL_DIR})\n\n#ExternalProject_Add(\n\n#   einspline\n\n#   SVN_REPOSITORY http://qmctools.googlecode.com/svn/ext-packages/einspline\n\n#   )\n\n#    INSTALL_DIR ${einspline_INSTALL_DIR}\n\n#    CMAKE_ARGS ${einspline_CMAKE_ARGS}\n\n#    )\n\n#  find_package(einspline REQUIRED)\n\n#  set(HAVE_EINSPLINE 1)\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "###############################################################\n\n# for specific linker in the case of profiling like hpctoolkit.\n\n###############################################################\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "###################################################\n\n# Add user extra flags\n\n###################################################\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Avoid unused variables warnings (for now) by using for information purposes\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "############################################################\n\n# FLAGS at the project level\n\n############################################################\n\n#this might be redundant but maybe not in all CMake versions.\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#pre 3.0 cmake does not have string CONCAT\n",
        "Line" : 817,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "###################################################\n\n# Done searching libraries. Start building qmcpack\n\n###################################################\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "####################################################################\n\n# add definitions\n\n#  -DH5_USE_16_API for HDF5\n\n#  -DMPICH_SKIP_MPICXX : disable C++ binding of MPICH\n\n####################################################################\n",
        "Line" : 838,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#ADD_DEFINITIONS(-DDISABLE_WS_CELL)\n",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#########################\n\n# add definitions for adios profile\n\n# add definitions for adios verification\n\n########################\n",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#ADD_DEFINITIONS(-DIO_PROFILE)\n\n#ADD_DEFINITIONS(-DADIOS_VERIFY)\n",
        "Line" : 863,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "#ADD_CUSTOM_TARGET(print_settings ALL\n\n#      ${CMAKE_COMMAND} -E echo \"Print build settings\"\n\n#          VERBATIM)\n\n#\n\n#add_custom_command(TARGET print_settings\n\n#  POST_BUILD\n\n#  COMMAND svn info ${qmcpack_SOURCE_DIR})\n\n#\n\n#file(APPEND ${qmcpack_BINARY_DIR}/bin/qmcpack.settings ${print_settings})\n",
        "Line" : 878,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 71
    },
    "config/BGQ_Clang_ToolChain.cmake" : {
      "ObjectId" : "18ee36ffc7b1ec6c8c8371c1a16c9ff41162c0f7",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(BUILD_SANDBOX 1)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LINK_LIBRARIES(\n\n#/soft/perftools/hpctw/libmpihpm_smp.a\n\n#/bgsys/drivers/ppcfloor/bgpm/lib/libbgpm.a\n\n#/bgsys/drivers/ppcfloor/spi/lib/libSPI_upci_cnk.a\n\n#-pg\n\n#)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/LLNLBGQ_VULCAN.cmake" : {
      "ObjectId" : "dba479daaa117a757cb04627cd448a3a417a3a39",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the name of the target operating system\n\n#SET(CMAKE_SYSTEM_NAME BlueGeneP)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the compiler\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Cmake seems to have problems locating hdf5.  Specify the library path manually. -RCC \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Cmake also seems to have a problem sorting out the hdf5 include directory.\n\n#One of these seems to be used in the cmake test, and the other for compiling.  \n\n#Including both is a temporary fix..  -RCC  \n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#/opt/ibmcmp/xlf/bg/14.1/bglib64/libxlfmath.a\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#link_libraries(\n\n#/soft/perftools/hpctw/libmpihpm_smp.a\n\n#/bgsys/drivers/ppcfloor/bgpm/lib/libbgpm.a\n\n#/bgsys/drivers/ppcfloor/spi/lib/libSPI_upci_cnk.a\n\n#-pg\n\n#)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "config/LLNLGNU.cmake" : {
      "ObjectId" : "eaf9ccf23d98f795dc857015a2af03fc76ddbfc5",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# setting compilers, compiler options and MKL_HOME\n\n#--------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# below is common for INTEL compilers and MKL library\n\n#--------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mkl 10.3.x\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "config/LLNLGNUQuartz.cmake" : {
      "ObjectId" : "2b2d22f4a431851dbdea58639deaecdfb567dc90",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# setting compilers, compiler options and MKL_HOME\n\n#--------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# below is common for INTEL compilers and MKL library\n\n#--------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mkl 10.3.x\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "config/LLNLIntelQuartz.cmake" : {
      "ObjectId" : "040c489a2263a4254cf95d5749d3d8bb599a3546",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# setting compilers, compiler options and MKL_HOME\n\n#--------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -cxx=icpc\")\n",
        "Line" : 10,
        "CharPositionInLine" : 102
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# below is common for INTEL compilers and MKL library\n\n#--------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# mkl 10.3.x\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/PsiIntelMPI.cmake" : {
      "ObjectId" : "d787d0d590dcf8121492caf01fe217c58fc7c865",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# toolchain for Linux Clusters\n\n#--------------------------------------------------------------------------\n\n#--------------------------------------------------------------------------\n\n# setting compilers, compiler options and MKL_HOME\n\n#--------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(GNU_OPTS \"-DADD_ -DINLINE_ALL=inline -DDISABLE_TIMER -DUSE_REAL_STRUCT_FACTOR\")\n\n#set(INTEL_OPTS \"-g  -restrict -unroll  -O3 -ip  -xSSE4.2 -openmp -Wno-deprecated\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# path where the libraries are located\n\n# boost,hdf,szip,libxml2,fftw,essl\n\n#--------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------------------\n\n# below is common for INTEL compilers and MKL library\n\n#--------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doxygen/Makefile" : {
      "ObjectId" : "e0b37625e0b3fd89207df5ac50fa16c0c08892d2",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "c22a0a624a2f1a46e312a223289a927eaa2df011",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure that examples run\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/afqmc/n2_vdz/CMakeLists.txt" : {
      "ObjectId" : "7bcfce3aad8327e53afbd08fe8032cb0979ac789",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/molecules/H2O/CMakeLists.txt" : {
      "ObjectId" : "ff29347fc03e41cc7ef56fc888b00f1473103129",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test example\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# total energy\n",
        "Line" : 5,
        "CharPositionInLine" : 56
      },
      "2" : {
        "Text" : "# check the DMC data\n",
        "Line" : 13,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 3
    },
    "examples/molecules/He/CMakeLists.txt" : {
      "ObjectId" : "d715bc28ec70a8f52851f1d2580fa4b0859a29ef",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test example\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# total energy\n",
        "Line" : 11,
        "CharPositionInLine" : 62
      },
      "2" : {
        "Text" : "# total energy\n",
        "Line" : 22,
        "CharPositionInLine" : 63
      },
      "3" : {
        "Text" : "# series for DMC data\n",
        "Line" : 30,
        "CharPositionInLine" : 44
      },
      "4" : {
        "Text" : "# total energy\n",
        "Line" : 33,
        "CharPositionInLine" : 62
      },
      "5" : {
        "Text" : "# final optimized series\n",
        "Line" : 41,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "# total energy\n",
        "Line" : 44,
        "CharPositionInLine" : 64
      },
      "7" : {
        "Text" : "# Not included for now because it fails spectacularly a small percentage of\n\n# the time (2/100 runs).  Values at each optimization stage seem to be okay,\n\n# but the final VMC is far off.\n\n#  LIST(APPEND HE_BSPLINE_OPT_SCALARS \"totenergy\" \"-2.879 .003\") # total energy\n\n#\n\n#  QMC_RUN_AND_CHECK(example_He_bspline_opt\n\n#                    \"${CMAKE_SOURCE_DIR}/examples/molecules/He\"\n\n#                    He \n\n#                    he_bspline_jastrow.xml\n\n#                    1 1\n\n#                    TRUE\n\n#                    10 HE_BSPLINE_OPT_SCALARS # series for VMC on optimized value\n\n#                    )\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "external_codes/mpi_wrapper/mpi3/fake/examples/Makefile" : {
      "ObjectId" : "b3acdb995cef2244df33496760136cd77d906731",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "external_codes/mpi_wrapper/mpi3/fake/test/CMakeLists.txt" : {
      "ObjectId" : "0e0f1635d3f587aad73101154189d34ff441f9e4",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile-time check for multiply defined symbols\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external_codes/mpi_wrapper/mpi3/test/CMakeLists.txt" : {
      "ObjectId" : "3308cdfd825e436baaa436ca5fdd2504ba2ed598",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use cmake/ctest for building and testing boost mpi3 tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not sure of the actual required minimum.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the correct parallel program launcher\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Using Slurm\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Everywhere else likely uses mpirun\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set BOOST_ROOT if boost is in a non-standard location\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This list is only a subset of files.  It might be useful to divide some of the tests into\n\n#  different categories (MPI-1, MPI-2, etc., or something else)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List of tests that need to link with boost_serialization\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   process.cpp\n\n#   process_vector.cpp\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build tests that need boost serialization\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#    target_link_libraries(${TEST_EXE} boost_serialization)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile-time check for multiply defined symbols\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "nexus/tests/CMakeLists.txt" : {
      "ObjectId" : "5f2c4b0e9e3345d23af2b9a1f9eb0e93275d04fb",
      "LastModified" : "2019-03-28T19:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add tests for Nexus \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(\"  Nexus tests: ${TESTLIST}\")\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/AFQMC/CMakeLists.txt" : {
      "ObjectId" : "297c1388628db7afd24f0694f7562b25782e40d8",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# Sources\n\n#-------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  Drivers/BenchmarkDriver.cpp\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  Hamiltonians/KPTHCHamiltonian.cpp\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    Numerics/detail/CUDA/Kernels/myAtomicAdd.cu\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#${qmcpack_SOURCE_DIR}/tests/afqmc/C_1x1x1_dzvp/ham_chol_sc.h5\n\n#${qmcpack_SOURCE_DIR}/tests/afqmc/C_1x1x1_dzvp/wfn_phmsd.dat\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#SUBDIRS(Numerics/shm_tests)\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "src/AFQMC/Estimators/tests/CMakeLists.txt" : {
      "ObjectId" : "efe2a58ca17317fd97f888570e0be909768876f7",
      "LastModified" : "2019-03-28T19:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Miguel A. Morales, LLNL\n\n#//\n\n#// File created by: Fionn Malone, malone14@llnl.gov, LLNL\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/AFQMC/HamiltonianOperations/tests/CMakeLists.txt" : {
      "ObjectId" : "dc3af4db8fa4f0f471ea0265c600e1b6095fd991",
      "LastModified" : "2019-03-28T19:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Miguel A. Morales, LLNL\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/AFQMC/Hamiltonians/tests/CMakeLists.txt" : {
      "ObjectId" : "b3de799b49214f5309ab6291398ac4cb9005f686",
      "LastModified" : "2019-03-28T19:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Miguel A. Morales, LLNL\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/AFQMC/Matrix/tests/CMakeLists.txt" : {
      "ObjectId" : "db97fdca04c292797d181a4635e3bdedaece240c",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/AFQMC/Numerics/shm_tests/CMakeLists.txt" : {
      "ObjectId" : "44845388396d8b29a359617b01bf0fe313d806c8",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/AFQMC/Numerics/tests/CMakeLists.txt" : {
      "ObjectId" : "1cc69fec51de4a149b3de2947737217dc64659ec",
      "LastModified" : "2019-03-28T19:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF(ENABLE_CUDA)\n\n#  CUDA_ADD_EXECUTABLE(${UTEST_EXE} test_dense_numerics.cpp test_ma_blas.cpp\n\n#test_sparse_numerics.cpp test_sparse_numerics_native.cpp)\n\n#ELSE(ENABLE_CUDA)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ENDIF(ENABLE_CUDA)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/AFQMC/Propagators/tests/CMakeLists.txt" : {
      "ObjectId" : "273596df0aee0d7028c80d618a3de1271bc887db",
      "LastModified" : "2019-03-28T19:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Miguel A. Morales, LLNL\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/AFQMC/SlaterDeterminantOperations/tests/CMakeLists.txt" : {
      "ObjectId" : "566c4219423870d75d62d93f3a89fd90d3c0e96b",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Miguel A. Morales, LLNL\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/AFQMC/Walkers/tests/CMakeLists.txt" : {
      "ObjectId" : "2dfc14b0a65ef729fc97860eec10199b3a929d1d",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Miguel A. Morales, LLNL\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/AFQMC/Wavefunctions/tests/CMakeLists.txt" : {
      "ObjectId" : "a39bf39e5c92dfe2b80f2ad52b6d473afdefff33",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Miguel A. Morales, LLNL\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "6e4a32531657d44b4423b5c1556608b223c7c7b5",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign  \n\n#//                    Ken Esler, kpesler@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Cynthia Gu, zg1@ornl.gov, Oak Ridge National Laboratory\n\n#//                    Norbert Podhorszki, pnorbert@ornl.gov, Oak Ridge National Laboratory\n\n#//                    Raymond Clay III, j.k.rofling@gmail.com, Lawrence Livermore National Laboratory\n\n#//                    Ying Wai Li, yingwaili@ornl.gov, Oak Ridge National Laboratory\n\n#//                    Marl Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//\t\t       Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always clean up git-rev-tmp.h file when cmake is run\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following custom command picks up changes to the git revision information\n\n# every time the project is rebuilt. Even if the repository is updated (git pull)\n\n# without re-running cmake. It also appends '-dirty' to the commit hash if there are\n\n# unsaved changes to the repository.\n\n#\n\n# To avoid triggering a relink every time, the repository info is saved to\n\n# a temporary file, and the temporary file is copied over the actual file\n\n# only if the contents changed (using 'copy_if_different').\n\n# The temporary file is deleted to force the custom command to run on\n\n# the next build.\n\n#\n\n# Apparently custom commands need to be defined where the output is used.\n\n# If this in the main CMakeLists.txt it does not work.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Sed flags were once an issue and some HPC have old sed's\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Print some configure-time git info (useful for understanding what commits\n\n# are in particular build for the nightly CDash reports)\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Breaking down the arguments to 'git describe'\n\n#  --abbrev=40     Size of hash to print.  This should print the entire hash.\n\n#  --dirty         Append hash with '-dirty' if there are uncommitted changes.\n\n# The behavior of describe looks for a tag in the parents first, and then falls\n\n# back to the commit hash (if --always is specified)\n\n#  --always        Show the commit hash as fallback\n\n#  --match=\"NoTagWithThisName\"\n\n#     If a tag is found, the output looks like:\n\n#       second_annotated_tag-29-g1fd38cccc0fd2f683ec223ca0783bb671bfedd4e\n\n#     In order to always get just the commit hash, specify a tag pattern\n\n#     that should never match.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "####################################\n\n# create libqmcutil\n\n####################################\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For unit tests, enable use for the fake RNG\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Put the fake RNG in a separate library so production code doesn't\n\n# accidentally link to it\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcutil STATIC ${UTILITIES})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcutil SHARED ${UTILITIES})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "####################################\n\n# create libqmcbase \n\n####################################\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Need to add this if nothing else but miniapps is compiled\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcbase STATIC ${PARTICLE}  ${PARTICLEIO})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcbase SHARED ${PARTICLE}  ${PARTICLEIO})\n\n#ENDIF(QMC_BUILD_STATIC)\n\n#SUBDIRS(einspline)\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#{{{\n",
        "Line" : 285,
        "CharPositionInLine" : 9
      },
      "14" : {
        "Text" : "#############################\n\n# Creating ADIOS\n\n#############################\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#IF(BUILD_QMCTOOLS)\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#ENDIF(BUILD_QMCTOOLS)\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#{\n",
        "Line" : 321,
        "CharPositionInLine" : 24
      },
      "18" : {
        "Text" : "#Unit test directories\n",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#}\n",
        "Line" : 346,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "#}}}\n",
        "Line" : 348,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 21
    },
    "src/Estimators/tests/CMakeLists.txt" : {
      "ObjectId" : "ce71458dba8907155659552467a6a088c12f444d",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(UTEST_DIR ${qmcpack_BINARY_DIR}/tests/hamiltonians)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E make_directory \"${UTEST_DIR}\")\n\n#EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy \"${CMAKE_CURRENT_SOURCE_DIR}/simple.txt\" ${UTEST_DIR})\n\n#EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy \"${qmcpack_SOURCE_DIR}/tests/pseudopotentials_for_tests/C.BFD.xml\" ${UTEST_DIR})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SET_TESTS_PROPERTIES(${UTEST_NAME} PROPERTIES WORKING_DIRECTORY ${UTEST_DIR})\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/Lattice/tests/CMakeLists.txt" : {
      "ObjectId" : "924c3370a1a8fb49111e7e0d6762c20924a42fe7",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Message/Makefile" : {
      "ObjectId" : "77a9b7fb6813b0cb9b51da88bbc071f9012363b6",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/Message/tests/CMakeLists.txt" : {
      "ObjectId" : "181bb55eb106c00bad52e87e00ef58dab39373a5",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2018 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, mdewing@ganl.gov Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Numerics/tests/CMakeLists.txt" : {
      "ObjectId" : "f2c433f9b159ed9aeb9abcd5dcd4c2aa541c45d4",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Run gen_gto.py to create these files.  They may take a long time to compile.\n\n#SET(UTEST_SRCS ${UTEST_SRCS} test_full_cartesian_tensor.cpp test_full_soa_cartesian_tensor.cpp)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/OhmmsData/tests/CMakeLists.txt" : {
      "ObjectId" : "eeaafc8d2bb17a2e52a05ae069075104c5c36831",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory \n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign \n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory where input file is copied to, and working directory for unit test\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\" WORKING_DIRECTORY  ${UTEST_DIR})\n\n#SET_TESTS_PROPERTIES(${UTEST_NAME} PROPERTIES LABELS \"unit\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/OhmmsPETE/tests/CMakeLists.txt" : {
      "ObjectId" : "e1c294c911b7a18e4d86d5579bfd79eb2fa5f2a1",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/OhmmsSoA/tests/CMakeLists.txt" : {
      "ObjectId" : "d7061fd2acd38c7ed2abf6ba4d61f684a5440c13",
      "LastModified" : "2019-03-21T01:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2018 QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/OpenMP/tests/CMakeLists.txt" : {
      "ObjectId" : "94c92142196d24b76669db182a758eefae1f6701",
      "LastModified" : "2019-03-28T19:26:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2019 QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Optimize/tests/CMakeLists.txt" : {
      "ObjectId" : "de8099c338fb3c67c36b7083b6edd09881920647",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Particle/Makefile" : {
      "ObjectId" : "6f415f6b6198737b724b8567522bf2d5dddd059c",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign\n\n#//\n\n#// File created by: Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Particle/tests/CMakeLists.txt" : {
      "ObjectId" : "1be9b722e4872524410c6f6be7e8ec84924a204c",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/ParticleBase/tests/CMakeLists.txt" : {
      "ObjectId" : "e27cceb06c48c03c2e780b814697be9b7b5c6cd9",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory \n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign \n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/ParticleIO/tests/CMakeLists.txt" : {
      "ObjectId" : "d9168d8f653d3ddbb95298af56215353cbd3aceb",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory \n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign \n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/QMCApp/CMakeLists.txt" : {
      "ObjectId" : "8c767526ce2a903f8f69816bd9c87a913deafd63",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Mark A. Berrill, berrillma@ornl.gov, Oak Ridge National Laboratory\n\n#//                    Raymond Clay III, j.k.rofling@gmail.com, Lawrence Livermore National Laboratory\n\n#//                    Paul R. C. Kent, kentpr@ornl.gov, Oak Ridge National Laboratory\n\n#//                    Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//                    Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//\n\n#// File created by: Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# formic dependencies\n\n#FIND_PATH(LMYENGINE_INCLUDE_DIR formic/fqmc/engine/var_dependencies.h)\n\n#MESSAGE(\"-- LMYENGINE_INCLUDE_DIR=${LMYENGINE_INCLUDE_DIR}\")\n\n#INCLUDE_DIRECTORIES(${LMYENGINE_INCLUDE_DIR})\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####################################\n\n# create libqmc \n\n####################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################################\n\n# list of QMC applications\n\n####################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# QMCPACK historically called qmcapp, and still built from qmcapp.cpp\n\n# Override source name for executable in this case, otherwise\n\n# executablename.cpp used for main()\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clean up git-rev-tmp.h after the build is finished\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/QMCApp/tests/CMakeLists.txt" : {
      "ObjectId" : "20ab94f07854d17e9adbd8281fb816b2428bfaf0",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2017 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also includes tests for code OhmmsApp directory\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#USE_FAKE_RNG(${UTEST_EXE})\n\n#TARGET_LINK_LIBRARIES(${UTEST_EXE} qmc qmcdriver_unit qmcham qmcwfs qmcbase qmcutil qmcfakerng ${QMC_UTIL_LIBS} ${MPI_LIBRARY})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/QMCDrivers/CMakeLists.txt" : {
      "ObjectId" : "f8dd71f232a3e4abb4216822366b473f1b3c0dbb",
      "LastModified" : "2019-04-17T18:32:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Bryan Clark, bclark@Princeton.edu, Princeton University\n\n#//                    Ken Esler, kpesler@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Raymond Clay III, j.k.rofling@gmail.com, Lawrence Livermore National Laboratory\n\n#//                    Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//\n\n#// File created by: Bryan Clark, bclark@Princeton.edu, Princeton University\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################\n\n# QMC Drivers which implements various QMC algorithms\n\n####################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if using the LMYEngine interface, make sure we add the necessary functions\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################################\n\n# create libqmc \n\n####################################\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcdriver STATIC ${QMCDRIVERS})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcdriver SHARED ${QMCDRIVERS})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/QMCDrivers/tests/CMakeLists.txt" : {
      "ObjectId" : "a951e0cf692b798872237eda08c7270413e62d8b",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/QMCHamiltonians/CMakeLists.txt" : {
      "ObjectId" : "2af7f01e74dc1d8b60d1a9cb13d94333c5c4b323",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: John R. Gergely,  University of Illinois at Urbana-Champaign\n\n#//                    D.C. Yang, University of Illinois at Urbana-Champaign\n\n#//                    Ken Esler, kpesler@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Raymond Clay III, j.k.rofling@gmail.com, Lawrence Livermore National Laboratory\n\n#//                    Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//                    Jaron T. Krogel, krogeljt@ornl.gov, Oak Ridge National Laboratory\n\n#//\n\n#// File created by: John R. Gergely,  University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    StressPBCAA.cpp\n\n#    StressPBCAB.cpp\n\n#    StressKinetic.cpp\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcham STATIC ${HAMSRCS})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcham SHARED ${HAMSRCS})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/QMCHamiltonians/tests/CMakeLists.txt" : {
      "ObjectId" : "d5ea41d58f8ae5e9ea86c7f07c0f7f3cc62d204e",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/QMCTools/CMakeLists.txt" : {
      "ObjectId" : "8216aebc53c5473bca80ac149ce249fbde815a6d",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Jordan E. Vincent, University of Illinois at Urbana-Champaign\n\n#//                    Miguel Morales, moralessilva2@llnl.gov, Lawrence Livermore National Laboratory\n\n#//                    Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Luke Shulenburger, lshulen@sandia.gov, Sandia National Laboratories\n\n#//                    Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Anouar Benali, benali@anl.gov, Argonne National Laboratory\n\n#//                    Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Jordan E. Vincent, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create libmocommon \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ppconvert\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/QMCTools/ppconvert/CMakeLists.txt" : {
      "ObjectId" : "d8e87f3b01710aff449ad9a665fc772991995020",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in this directory and below remove the -DNDEBUG flag from build configs that add it\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/QMCTools/ppconvert/Makefile" : {
      "ObjectId" : "148b4e4d53d0a92fc2e3995d1324bee676711eeb",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Paul R. C. Kent, kentpr@ornl.gov, Oak Ridge National Laboratory \n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Intel Compiler with MKL build\n\n#CXX = icpc\n\n#CXXFLAGS = -O3 -g -restrict -mkl\n\n#BLASLIBS =\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# g++ build using installed MKL\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# dummy rule to build everything\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# useful macros\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# rules for each executable\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rules for objects in src/\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules for objects in src/common (mostly derived from libcommon)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#$(BUILDDIR)/IOHDF5.o: $(COMMONDIR)/IOHDF5.cc $(COMMON_IO_HEADERS)\n\n#\t$(CXX) $(CXXFLAGS) -I$(COMMONDIR) -I$(HDF_INCLUDEDIR) -c $(COMMONDIR)/IOHDF5.cc -o $@\n\n#$(BUILDDIR)/IOVarHDF5.o: $(COMMONDIR)/IOVarHDF5.cc $(COMMON_IO_HEADERS)\n\n#\t$(CXX) $(CXXFLAGS) -I$(COMMONDIR) -I$(HDF_INCLUDEDIR) -c $(COMMONDIR)/IOVarHDF5.cc -o $@\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/QMCTools/ppconvert/src/CMakeLists.txt" : {
      "ObjectId" : "8bdc122beaf2d39f0d8ddce2c1b26867917d7b1b",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/QMCTools/ppconvert/src/common/CMakeLists.txt" : {
      "ObjectId" : "f950ad622ab5b12658426b4dcbe14c9fd082eb3f",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/QMCTools/ppconvert/test/CMakeLists.txt" : {
      "ObjectId" : "e6b366fda5f746fec19de3759ee7b5c657968ce1",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/QMCTools/ppconvert/test/Oxygen/CMakeLists.txt" : {
      "ObjectId" : "d5ffdaa5043b921383372ca337cc5840ce715a05",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(ARGS \"\\-\\-gamess_pot O.BFD.gamess\") #--s_ref;'1s(2)2p(4)';--p_ref;'1s(2)2p(4)';--d_ref;'1s(2)2p(4)';--xml O.BFD.xml)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/QMCWaveFunctions/CMakeLists.txt" : {
      "ObjectId" : "8e5492a73b9cf379b690cb4bacb484a8d1b3d67a",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Bryan Clark, bclark@Princeton.edu, Princeton University\n\n#//                    Ken Esler, kpesler@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Miguel Morales, moralessilva2@llnl.gov, Lawrence Livermore National Laboratory\n\n#//                    Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//                    Raymond Clay III, j.k.rofling@gmail.com, Lawrence Livermore National Laboratory\n\n#//                    Jaron T. Krogel, krogeljt@ornl.gov, Oak Ridge National Laboratory\n\n#//                    Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//                    Luke Shulenburger, lshulen@sandia.gov, Sandia National Laboratories\n\n#//\n\n#// File created by: Bryan Clark, bclark@Princeton.edu, Princeton University\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################\n\n# build jastrows\n\n########################\n\n#common jastrows\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# wavefunctions only availbale to 3-dim problems\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#lcao cusp correction is not ready for complex\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# plane wave SPO\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "####################################\n\n# create libqmcwfs\n\n####################################\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcwfs STATIC ${WFBASE_SRCS} ${JASTROW_SRCS} ${FERMION_SRCS})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcwfs SHARED ${WFBASE_SRCS} ${JASTROW_SRCS} ${FERMION_SRCS})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/QMCWaveFunctions/tests/CMakeLists.txt" : {
      "ObjectId" : "5078e7c80c835e006d37cb9414e9be330f707abd",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//                    Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//\n\n#// File created by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(UTEST_HDF_INPUT ${qmcpack_SOURCE_DIR}/tests/solids/monoO_1x1x1_pp/pwscf.pwscf.h5)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Sandbox/CMakeLists.txt" : {
      "ObjectId" : "0c92b435495c6841d5af576061ff81235e3f887b",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add apps XYZ.cpp, e.g., qmc_particles.cpp\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Use a denser grid for graphite\n\n#ADD_EXECUTABLE(miniqmc_gr2 miniqmc.cpp AoSWaveFunction.cpp SoAWaveFunction.cpp)\n\n#set_target_properties (miniqmc_gr2 PROPERTIES COMPILE_FLAGS \"-DNX=64 -DNY=64 -DNZ=80\")\n\n#TARGET_LINK_LIBRARIES(miniqmc_gr2 qmcbase qmcutil ${QMC_UTIL_LIBS} ${MPI_LIBRARY})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET(boost_test exchange_walker)\n\n#FOREACH(p ${boost_test})\n\n#  ADD_EXECUTABLE( ${p}  ${p}.cpp)\n\n#  TARGET_LINK_LIBRARIES(${p} qmcbase qmcutil ${QMC_UTIL_LIBS} boost ${MPI_LIBRARY})\n\n#ENDFOREACH(p ${boost_test})\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/Utilities/Makefile" : {
      "ObjectId" : "adcee13e4b1a3a7fa14280320ddd56c90b26905c",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Utilities classes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Utilities/tests/CMakeLists.txt" : {
      "ObjectId" : "bf615e9a9577fcd3a6b9acbdde20f2763b226536",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/einspline/CMakeLists.txt" : {
      "ObjectId" : "89900942be82081339b13f32a963fbae987619c4",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Jeremy McMinnis, jmcminis@gmail.com, University of Illinois at Urbana-Champaign   \n\n#//\t\t       Anouar Benali, benali@anl.gov, Argonne National Laboratory\n\n#//\t\t       Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Jeongnim Kim, jeongnim.kim@gmail.com, University of Illinois at Urbana-Champaign \n\n#////////////////////////////////////////////////////////////////////////////////////// \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_EXECUTABLE(time_multi time_multi_new.c)\n\n#target_link_libraries(time_multi einspline)\n\n#add_dependencies(time_multi ${PROJECT_BINARY_HOME}/include/einspline/bspline.h)\n\n#ADD_EXECUTABLE(test_multi_single test_multi_single.cpp)\n\n#target_link_libraries(test_multi_single einspline)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/einspline/tests/CMakeLists.txt" : {
      "ObjectId" : "85c3e07a14f8104d1270ca9b9b0dd5ab9b0936c5",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/formic/utils/CMakeLists.txt" : {
      "ObjectId" : "94f76fb44014ce04fbf0cafeb8adb7393ed418d5",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -std=c++11 is handled at the top level. Ye\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Really ugly hack to see if we're using MKL - replace it\n\n#STRING(FIND \"${BLAS_LIBRARIES}\" \"mkl\" apos)\n\n#MESSAGE(\"BLAS_LIBRARIES FIND = ${apos}\")\n\n#IF (NOT apos EQUAL -1)\n\n#    MESSAGE(\"mkl found\")\n\n#    SET(MKL_FOUND 1)\n\n#ENDIF()\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# determine how to declare and how to mangle the blas/lapack functions\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use the fortran-C interface mangling determined by cmake\n\n# this should be correct so long as the same compilers were used to build blas/lapack\n\n# FortranCInterface_HEADER(${FORMIC_BINARY_DIR}/src/formic/utils/mangle_other.h MACRO_NAMESPACE \"FC_\")\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# create header for declaration of blas/lapack functions\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create header for mangling of blas/lapack function names\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# determine how to comment/uncomment the mpi interface header file\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# determine the level of mpi thread support to demand\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(MPI_REQUESTED_THREADING \"MPI_THREAD_FUNNELED\")\n\n#set(MPI_REQUESTED_THREADING \"MPI_THREAD_SINGLE\")\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#set(MPI_REQUESTED_THREADING \"MPI_THREAD_SINGLE\")\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# create header file for mpi functions\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# create cpp file for mpi functions\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ensure we can use the eigen headers\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#target_link_libraries(formic_utils ${FORMIC_LAPACK_BLAS_LIBS})\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#set_property(TARGET formic_utils PROPERTY CXX_STANDARD 11)\n\n#set_property(TARGET formic_utils PROPERTY CXX_STANDARD_REQUIRED ON)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#file(MAKE_DIRECTORY ${FORMIC_BINARY_DIR}/lib)\n\n#file(MAKE_DIRECTORY ${FORMIC_BINARY_DIR}/include)\n\n#file(MAKE_DIRECTORY ${FORMIC_BINARY_DIR}/include/formic)\n\n#file(MAKE_DIRECTORY ${FORMIC_BINARY_DIR}/include/formic/utils)\n\n#file(MAKE_DIRECTORY ${FORMIC_BINARY_DIR}/include/formic/utils/lmyengine)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#add_custom_command( TARGET formic_utils\n\n#                    POST_BUILD\n\n#                    COMMAND cp ${FORMIC_BINARY_DIR}/src/formic/utils/libformic_utils.* ${FORMIC_BINARY_DIR}/lib\n\n#                    COMMAND cp ${FORMIC_BINARY_DIR}/src/formic/utils/*.h ${FORMIC_BINARY_DIR}/include/formic/utils\n\n#                    COMMAND cp ${FORMIC_SOURCE_DIR}/src/formic/utils/*.h ${FORMIC_BINARY_DIR}/include/formic/utils\n\n#                    COMMAND cp ${FORMIC_SOURCE_DIR}/src/formic/utils/lmyengine/*.h ${FORMIC_BINARY_DIR}/include/formic/utils/lmyengine\n\n#                    COMMAND ${CMAKE_COMMAND} -E echo \"\"\n\n#                    COMMAND ${CMAKE_COMMAND} -E echo \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\n\n#                    COMMAND ${CMAKE_COMMAND} -E echo \"!!  The formic utilities library has been built and is located in lib.  !!\"\n\n#                    COMMAND ${CMAKE_COMMAND} -E echo \"!!  The associated headers are located in include.                      !!\"\n\n#                    COMMAND ${CMAKE_COMMAND} -E echo \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\n\n#                    COMMAND ${CMAKE_COMMAND} -E echo \"\"\n\n#                    WORKING_DIRECTORY ${FORMIC_BINARY_DIR}\n\n#                  )\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#install(\n\n#        TARGETS\n\n#          formic_utils\n\n#        RUNTIME DESTINATION\n\n#          bin\n\n#        LIBRARY DESTINATION\n\n#          lib\n\n#        ARCHIVE DESTINATION\n\n#          lib\n\n#       )\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/io/tests/CMakeLists.txt" : {
      "ObjectId" : "f5541c16fd416fc382859e20e1ed7fc89607db54",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Directory where input file is copied to, and working directory for unit test\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/spline2/tests/CMakeLists.txt" : {
      "ObjectId" : "1b5f8753ccd9049413d23b0e4b7dda523e03aa2d",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2018 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by:  Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//\n\n#// File created by: Mark Dewing, mdewing@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(UTEST_DIR ${qmcpack_BINARY_DIR}/tests/hamiltonians)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E make_directory \"${UTEST_DIR}\")\n\n#EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy \"${CMAKE_CURRENT_SOURCE_DIR}/simple.txt\" ${UTEST_DIR})\n\n#EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E copy \"${qmcpack_SOURCE_DIR}/tests/pseudopotentials_for_tests/C.BFD.xml\" ${UTEST_DIR})\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_TEST(NAME ${UTEST_NAME} COMMAND \"${QMCPACK_UNIT_TEST_DIR}/${UTEST_EXE}\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SET_TESTS_PROPERTIES(${UTEST_NAME} PROPERTIES WORKING_DIRECTORY ${UTEST_DIR})\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/type_traits/tests/CMakeLists.txt" : {
      "ObjectId" : "75c704ffd1be5c07a89f358a7c1c12934078bf8f",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#//////////////////////////////////////////////////////////////////////////////////////\n\n#// This file is distributed under the University of Illinois/NCSA Open Source License.\n\n#// See LICENSE file in top directory for details.\n\n#//\n\n#// Copyright (c) 2016 Jeongnim Kim and QMCPACK developers.\n\n#//\n\n#// File developed by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//                    Mark Dewing, markdewing@gmail.com, University of Illinois at Urbana-Champaign\n\n#//\n\n#// File created by: Ye Luo, yeluo@anl.gov, Argonne National Laboratory\n\n#//////////////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "a45460527c409c6ad4bf85f3e7b55e8c4b3dc8cc",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/converter/CMakeLists.txt" : {
      "ObjectId" : "3475126d9db3132c66e2d94d2b1d26e03602e563",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add tests for conversion of GAMESS to QMCPACK input (via convert4qmc)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/estimator/CMakeLists.txt" : {
      "ObjectId" : "1ad39d650bbaca554ef9e7953577dbcbd2c2d4a7",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# Add tests to ctest\n\n#############################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/heg/heg_14_gamma/CMakeLists.txt" : {
      "ObjectId" : "f1ac37b7cbb54bd187c04e4bebd7bce0584dd207",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Homogeneous electron gas (HEG) tests\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Tests for HEG with 14 electrons at the gamma point and various wavefunctions\n\n# See tests/heg/heg_14_gamma/README for full details\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Short HEG 14 gamma tests\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n#  HEG14G - non-interacting Slater only VMC (exact)\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 20,
        "CharPositionInLine" : 67
      },
      "5" : {
        "Text" : "#\n\n#  HEG14G - non-interacting Slater only DMC (exact)\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 35,
        "CharPositionInLine" : 71
      },
      "7" : {
        "Text" : "# DMC\n",
        "Line" : 44,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : "#\n\n#  HEG14G - Slater only VMC (Hartree-Fock)\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 50,
        "CharPositionInLine" : 67
      },
      "10" : {
        "Text" : "# VMC\n",
        "Line" : 59,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow VMC\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 65,
        "CharPositionInLine" : 67
      },
      "13" : {
        "Text" : "# VMC\n",
        "Line" : 74,
        "CharPositionInLine" : 40
      },
      "14" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow VMC with newer input format\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 80,
        "CharPositionInLine" : 71
      },
      "16" : {
        "Text" : "# VMC\n",
        "Line" : 89,
        "CharPositionInLine" : 44
      },
      "17" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow DMC\n\n#\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 95,
        "CharPositionInLine" : 71
      },
      "19" : {
        "Text" : "# DMC\n",
        "Line" : 104,
        "CharPositionInLine" : 44
      },
      "20" : {
        "Text" : "#\n\n# Long HEG 14 gamma tests\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n#  HEG14G - non-interacting Slater only VMC (exact)\n\n#\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 114,
        "CharPositionInLine" : 67
      },
      "23" : {
        "Text" : "# VMC\n",
        "Line" : 123,
        "CharPositionInLine" : 40
      },
      "24" : {
        "Text" : "#\n\n#  HEG14G - non-interacting Slater only DMC (exact)\n\n#\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 129,
        "CharPositionInLine" : 71
      },
      "26" : {
        "Text" : "# DMC\n",
        "Line" : 138,
        "CharPositionInLine" : 44
      },
      "27" : {
        "Text" : "#\n\n#  HEG14G - Slater only VMC (Hartree-Fock)\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 144,
        "CharPositionInLine" : 67
      },
      "29" : {
        "Text" : "# VMC\n",
        "Line" : 153,
        "CharPositionInLine" : 40
      },
      "30" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow VMC\n\n#\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 159,
        "CharPositionInLine" : 67
      },
      "32" : {
        "Text" : "# VMC\n",
        "Line" : 168,
        "CharPositionInLine" : 40
      },
      "33" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow VMC with newer input format\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 174,
        "CharPositionInLine" : 71
      },
      "35" : {
        "Text" : "# VMC\n",
        "Line" : 183,
        "CharPositionInLine" : 44
      },
      "36" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow DMC\n\n#\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 189,
        "CharPositionInLine" : 71
      },
      "38" : {
        "Text" : "# DMC\n",
        "Line" : 198,
        "CharPositionInLine" : 44
      },
      "39" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow-Backflow VMC\n\n#           Run 16x1, 4x4, 1x16 to test SJB cloning\n\n#\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 206,
        "CharPositionInLine" : 68
      },
      "41" : {
        "Text" : "# VMC\n",
        "Line" : 215,
        "CharPositionInLine" : 41
      },
      "42" : {
        "Text" : "# VMC\n",
        "Line" : 224,
        "CharPositionInLine" : 41
      },
      "43" : {
        "Text" : "# VMC\n",
        "Line" : 233,
        "CharPositionInLine" : 41
      },
      "44" : {
        "Text" : "#\n\n#  HEG14G - Slater-Jastrow-Backflow VMC\n\n#           Run 16x1, 4x4, 1x16 to test SJB cloning\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# total energy\n\n# energy variance\n",
        "Line" : 239,
        "CharPositionInLine" : 68
      },
      "46" : {
        "Text" : "# VMC\n",
        "Line" : 248,
        "CharPositionInLine" : 41
      },
      "47" : {
        "Text" : "# VMC\n",
        "Line" : 257,
        "CharPositionInLine" : 41
      },
      "48" : {
        "Text" : "# VMC\n",
        "Line" : 266,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 49
    },
    "tests/heg/heg_54_J2rpa/CMakeLists.txt" : {
      "ObjectId" : "5a7d4ff22ca7311ff86f89405bdfdb1790f0752d",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# HEG J2 RPA test\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Tests for HEG with 54 electrons and an RPA two body Jastrow\n\n# See tests/heg/heg_54_J2rpa/README for full details\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# real but noisy error bar is 0.012941 (23 blocks only)\n\n# resurrect the test then create better reference data\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# total energy\n",
        "Line" : 15,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 4
    },
    "tests/io/CMakeLists.txt" : {
      "ObjectId" : "1ae6db0055d1b7cd76738a8a874074518d78538f",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# Add I/O tests to ctest\n\n#############################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \"run restart and check\" function does 3 things:\n\n#  1. run qmcpack executable on $input_file.in.xml\n\n#  1. run qmcpack executable on $input_file.restart.xml in the same folder\n\n#  2. run $check_script located in the same folder\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# build test name\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add run (task 1)\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add restart (task 2)\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set (test_added false)\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# make restart depend on the initial run\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# set up command to run check, assume check_script is in the same folder as input\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(${check_cmd})\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# add test (task 3)\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# hard-code for single test\n",
        "Line" : 43,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "#message(${work_dir})\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# make test depend on the restart run\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "tests/models/CMakeLists.txt" : {
      "ObjectId" : "ce63ca7c29a00206e63c860619af0c27a2d6f15c",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The errors on the total energy are numerical noise, not statistical errors\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VMC\n",
        "Line" : 19,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 2
    },
    "tests/molecules/C2_pp/CMakeLists.txt" : {
      "ObjectId" : "18d98609cbeac97af8716afeaa81ee50ba240b3e",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#C2_PP test targets the Multideterminant route of the code. The wavefunction data is  stored in a XML format AND HDF5 Format. Both files should be run\n\n# Energy from QP: E=-10.9015995458600 Ha\n\n#\n\n#   \"kinetic\" \" 7.72378 0.00016\") # kinetic energy\n\n#   \"totenergy\" \" -11.059755 0.000013 \") # total energy\n\n#   \"eeenergy\" \" 12.142072 0.000083\") # e-e energy\n\n#   \"samples\" \"1072889856 0\") # samples\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kinetic energy\n",
        "Line" : 13,
        "CharPositionInLine" : 58
      },
      "2" : {
        "Text" : "# total energy\n",
        "Line" : 14,
        "CharPositionInLine" : 65
      },
      "3" : {
        "Text" : "# e-e energy\n",
        "Line" : 15,
        "CharPositionInLine" : 62
      },
      "4" : {
        "Text" : "# samples\n",
        "Line" : 16,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 24,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : "# VMC\n",
        "Line" : 35,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "# VMC\n",
        "Line" : 44,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# kinetic energy\n",
        "Line" : 49,
        "CharPositionInLine" : 58
      },
      "9" : {
        "Text" : "# total energy\n",
        "Line" : 50,
        "CharPositionInLine" : 64
      },
      "10" : {
        "Text" : "# e-e energy\n",
        "Line" : 51,
        "CharPositionInLine" : 61
      },
      "11" : {
        "Text" : "# samples\n",
        "Line" : 52,
        "CharPositionInLine" : 55
      },
      "12" : {
        "Text" : "# VMC\n",
        "Line" : 60,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "# VMC\n",
        "Line" : 72,
        "CharPositionInLine" : 38
      },
      "14" : {
        "Text" : "# VMC\n",
        "Line" : 81,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 15
    },
    "tests/molecules/CHN_ae/CMakeLists.txt" : {
      "ObjectId" : "0f159a19bc3b73d9730a7287fbc6c67ee0f89569",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CHN molecular Cusp Correction test for all electron B3LYP using pyscf\n\n# This test checks VMC energy. The use of Jastrow increases sensitivity to bad Cusp parameters    \n\n# Energy from pyscf: E=-93.4096773055448\n\n#\n\n#   \"kinetic\" \" 93.179 0.045\") # kinetic energy\n\n#   \"totenergy\" \" -93.33934 0.00021 \") # total energy\n\n#   \"eeenergy\" \" 55.2876 0.0013\") # e-e energy\n\n#   \"samples\" \"409600000 0\") # samples\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kinetic energy\n",
        "Line" : 15,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : "# total energy\n",
        "Line" : 16,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "# e-e energy\n",
        "Line" : 17,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "# samples\n",
        "Line" : 18,
        "CharPositionInLine" : 48
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 25,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 6
    },
    "tests/molecules/CMakeLists.txt" : {
      "ObjectId" : "4b2ea0facbc0bfecb6330b34f92067b4b93f5a63",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Molecules\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/molecules/C_NO_ae/CMakeLists.txt" : {
      "ObjectId" : "2b312d41a4a20966af0049057240af8184c34d29",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# C atom numerical orbital (SQD) tests, all electron\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Short tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# total energy\n\n# total energy\n\n# energy variance\n\n# total energy\n\n# energy variance\n",
        "Line" : 9,
        "CharPositionInLine" : 70
      },
      "3" : {
        "Text" : "# VMC\n",
        "Line" : 21,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "# VMC\n",
        "Line" : 30,
        "CharPositionInLine" : 41
      },
      "5" : {
        "Text" : "# VMC\n\n# DMC\n",
        "Line" : 39,
        "CharPositionInLine" : 41
      },
      "6" : {
        "Text" : "# Long tests\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# total energy\n\n# total energy\n\n# energy variance\n\n# total energy\n\n# energy variance\n",
        "Line" : 44,
        "CharPositionInLine" : 70
      },
      "8" : {
        "Text" : "# VMC\n",
        "Line" : 56,
        "CharPositionInLine" : 41
      },
      "9" : {
        "Text" : "# VMC\n\n# DMC\n",
        "Line" : 65,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 10
    },
    "tests/molecules/FeCO6_b3lyp_gms/CMakeLists.txt" : {
      "ObjectId" : "78930a3f1a8a29eec05cff087f1229ea39226ada",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# [Fe(CO)6]2+ molecule gaussian tests, with BFD ECP using Gamess\n\n# Ref for ref  VMC test\n\n#  \"kinetic\"   \"163.8407 0.0020\") # kinetic energy\n\n#  \"totenergy\" \"-250.43439 0.00032\") # total energy\n\n#  \"eeenergy\"  \"568.6009 0.0016\") # e-e energy\n\n#  \"samples\"   \"625868800 0.0\") # samples\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kinetic energy\n",
        "Line" : 12,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "# e-e energy\n",
        "Line" : 13,
        "CharPositionInLine" : 58
      },
      "3" : {
        "Text" : "# total energy\n",
        "Line" : 14,
        "CharPositionInLine" : 62
      },
      "4" : {
        "Text" : "# samples\n",
        "Line" : 15,
        "CharPositionInLine" : 53
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 22,
        "CharPositionInLine" : 38
      },
      "6" : {
        "Text" : "# kinetic energy\n",
        "Line" : 25,
        "CharPositionInLine" : 57
      },
      "7" : {
        "Text" : "# e-e energy\n",
        "Line" : 26,
        "CharPositionInLine" : 58
      },
      "8" : {
        "Text" : "# total energy\n",
        "Line" : 27,
        "CharPositionInLine" : 61
      },
      "9" : {
        "Text" : "# samples\n",
        "Line" : 28,
        "CharPositionInLine" : 53
      },
      "10" : {
        "Text" : "# VMC\n",
        "Line" : 35,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 11
    },
    "tests/molecules/FeCO6_b3lyp_pyscf/CMakeLists.txt" : {
      "ObjectId" : "002d16b633dc21de58aeb823ed9a9c1b9b42d12a",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# [Fe(CO)6]2+ molecule gaussian tests, with BFD ECP using pyscf\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ref for ref VMC test\n\n#   \"kinetic\" \"163.8420 0.0022\") # kinetic energy\n\n#   \"totenergy\" \"-250.43499 0.00034\") # total energy\n\n#   \"eeenergy\" \"568.6012 0.0017\") # e-e energy\n\n#   \"samples\" \"655360000 0.0\") # samples\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# kinetic energy\n",
        "Line" : 13,
        "CharPositionInLine" : 59
      },
      "3" : {
        "Text" : "# e-e energy\n",
        "Line" : 14,
        "CharPositionInLine" : 60
      },
      "4" : {
        "Text" : "# total energy\n",
        "Line" : 15,
        "CharPositionInLine" : 64
      },
      "5" : {
        "Text" : "# samples\n",
        "Line" : 16,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# VMC\n",
        "Line" : 23,
        "CharPositionInLine" : 40
      },
      "7" : {
        "Text" : "# kinetic energy\n",
        "Line" : 26,
        "CharPositionInLine" : 59
      },
      "8" : {
        "Text" : "# e-e energy\n",
        "Line" : 27,
        "CharPositionInLine" : 60
      },
      "9" : {
        "Text" : "# total energy\n",
        "Line" : 28,
        "CharPositionInLine" : 63
      },
      "10" : {
        "Text" : "# samples\n",
        "Line" : 29,
        "CharPositionInLine" : 55
      },
      "11" : {
        "Text" : "# VMC\n",
        "Line" : 36,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 12
    },
    "tests/molecules/H2O_dimer_sep_pp/CMakeLists.txt" : {
      "ObjectId" : "98c3065366cf09a56a0136178c2c7ae9ad10c6a1",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 2 water molecules far away test for Tmoves.\n\n# short tests\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# total energy\n",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : "# non local ecp\n",
        "Line" : 8,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : "# total energy\n",
        "Line" : 19,
        "CharPositionInLine" : 69
      },
      "4" : {
        "Text" : "# non local ecp\n",
        "Line" : 20,
        "CharPositionInLine" : 67
      },
      "5" : {
        "Text" : "# total energy\n",
        "Line" : 31,
        "CharPositionInLine" : 69
      },
      "6" : {
        "Text" : "# non local ecp\n",
        "Line" : 32,
        "CharPositionInLine" : 67
      },
      "7" : {
        "Text" : "# total energy\n",
        "Line" : 43,
        "CharPositionInLine" : 69
      },
      "8" : {
        "Text" : "# non local ecp\n",
        "Line" : 44,
        "CharPositionInLine" : 67
      },
      "9" : {
        "Text" : "# long tests\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# total energy\n",
        "Line" : 56,
        "CharPositionInLine" : 73
      },
      "11" : {
        "Text" : "# non local ecp\n",
        "Line" : 57,
        "CharPositionInLine" : 70
      },
      "12" : {
        "Text" : "# total energy\n",
        "Line" : 68,
        "CharPositionInLine" : 74
      },
      "13" : {
        "Text" : "# non local ecp\n",
        "Line" : 69,
        "CharPositionInLine" : 73
      },
      "14" : {
        "Text" : "# total energy\n",
        "Line" : 80,
        "CharPositionInLine" : 74
      },
      "15" : {
        "Text" : "# non local ecp\n",
        "Line" : 81,
        "CharPositionInLine" : 73
      },
      "16" : {
        "Text" : "# total energy\n",
        "Line" : 92,
        "CharPositionInLine" : 74
      },
      "17" : {
        "Text" : "# non local ecp\n",
        "Line" : 93,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 18
    },
    "tests/molecules/H2_ae/CMakeLists.txt" : {
      "ObjectId" : "9b852ea354799365a7e8e5ab8c57c36858943044",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# H2 test in a DZV basis set, using optimizable determinants, and the adaptive linear method\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# total energy\n",
        "Line" : 8,
        "CharPositionInLine" : 62
      },
      "2" : {
        "Text" : "# Final VMC step\n",
        "Line" : 17,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "#\n\n# H2 starting from unoptimized CIS coefficients and orbital\n\n# Targeting the first excited state, and using the adaptive linear method\n\n# The Jastrow is already optimized (by itself). This test optimizes both orbitals and CIS coefficients\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# total energy\n",
        "Line" : 25,
        "CharPositionInLine" : 61
      },
      "5" : {
        "Text" : "# Final VMC step\n",
        "Line" : 33,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 6
    },
    "tests/molecules/H4_ae/CMakeLists.txt" : {
      "ObjectId" : "f87de84220e9b4ba4637185c32e4cfd715fd98ca",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 4 H atom cluster gaussian tests, all electron\n\n# Also check results for different number of mpi tasks and threads keeping total constant\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# total energy\n",
        "Line" : 8,
        "CharPositionInLine" : 61
      },
      "2" : {
        "Text" : "# OPT step 5\n",
        "Line" : 16,
        "CharPositionInLine" : 37
      },
      "3" : {
        "Text" : "# OPT step 5\n",
        "Line" : 25,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "# OPT step 5\n",
        "Line" : 34,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# OPT step 7\n",
        "Line" : 43,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# OPT step 7\n",
        "Line" : 52,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# OPT step 7\n",
        "Line" : 61,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# OPT step 5\n",
        "Line" : 71,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# OPT step 5\n",
        "Line" : 80,
        "CharPositionInLine" : 39
      },
      "10" : {
        "Text" : "#\n\n# H4 starting from perturbed orbitals, using optimizable determinants, and the adaptive linear method\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# total energy\n",
        "Line" : 85,
        "CharPositionInLine" : 64
      },
      "12" : {
        "Text" : "# Final VMC step\n",
        "Line" : 93,
        "CharPositionInLine" : 44
      },
      "13" : {
        "Text" : "#\n\n# H4 starting from converged wave function, doing a quick adaptive linear method run (using the same\n\n# spo set for both spin-up and spin-down determinants) and then doing a DMC calculation\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# total energy\n",
        "Line" : 100,
        "CharPositionInLine" : 71
      },
      "15" : {
        "Text" : "# Test the DMC results\n",
        "Line" : 108,
        "CharPositionInLine" : 47
      },
      "16" : {
        "Text" : "# Test the DMC results\n",
        "Line" : 117,
        "CharPositionInLine" : 47
      },
      "17" : {
        "Text" : "#\n\n# H4 starting from unoptimized CIS coefficients, targeting the first excited state, and using the adaptive linear method\n\n#\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# total energy\n",
        "Line" : 122,
        "CharPositionInLine" : 65
      },
      "19" : {
        "Text" : "# Final VMC step\n",
        "Line" : 130,
        "CharPositionInLine" : 40
      },
      "20" : {
        "Text" : "# total energy\n",
        "Line" : 133,
        "CharPositionInLine" : 61
      },
      "21" : {
        "Text" : "# OPT step 5\n",
        "Line" : 155,
        "CharPositionInLine" : 37
      },
      "22" : {
        "Text" : "# OPT step 5\n",
        "Line" : 164,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 23
    },
    "tests/molecules/H4_msd_ae/CMakeLists.txt" : {
      "ObjectId" : "60c3b9c04442c8bd4049982e9a1de7c7bb70c69e",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 4 H atom cluster gaussian tests, all electron\n\n#\n\n# H4 Multi-Slater Jastrow wfn. Fixed CI and J parameters but the orbitals are allowed to relax\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# total energy\n",
        "Line" : 9,
        "CharPositionInLine" : 73
      },
      "2" : {
        "Text" : "# OPT step 4\n",
        "Line" : 17,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 3
    },
    "tests/molecules/Li2_STO_ae/CMakeLists.txt" : {
      "ObjectId" : "619d53cb5daf2967e40f28033cc7f0890c3be6f1",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Li2 molecular dimer STO tests, all electron\n\n#   Reproduces UNR 1993\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Short tests\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# total energy\n\n# energy variance\n\n# total energy\n\n# energy variance\n",
        "Line" : 10,
        "CharPositionInLine" : 72
      },
      "3" : {
        "Text" : "# VMC\n\n# DMC\n",
        "Line" : 21,
        "CharPositionInLine" : 44
      },
      "4" : {
        "Text" : "# VMC\n\n# DMC\n",
        "Line" : 31,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# Long tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# total energy\n\n# energy variance\n\n# total energy\n\n# energy variance\n",
        "Line" : 36,
        "CharPositionInLine" : 72
      },
      "7" : {
        "Text" : "# VMC\n\n# DMC\n",
        "Line" : 47,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 8
    },
    "tests/molecules/LiH_dimer_ae_gms/CMakeLists.txt" : {
      "ObjectId" : "4dabe4f7424a63cadf339ba3d0dc6f496c21f2d8",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LiH molecular dimer gaussian tests, all electron using Gamess\n\n# Energy from Gamess: E=-7.9873236457\n\n#\n\n#   \"kinetic\" \"7.991319   0.000066\") # kinetic energy\n\n#   \"totenergy\" \"-7.9873131  0.0000088 \") # total energy\n\n#   \"eeenergy\" \"3.488823  0.000010\") # e-e energy\n\n#   \"samples\" \"79134720000 0.0\") # samples\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kinetic energy\n",
        "Line" : 13,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : "# total energy\n",
        "Line" : 14,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# e-e energy\n",
        "Line" : 15,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# samples\n",
        "Line" : 16,
        "CharPositionInLine" : 49
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 23,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# kinetic energy\n",
        "Line" : 26,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : "# total energy\n",
        "Line" : 27,
        "CharPositionInLine" : 57
      },
      "8" : {
        "Text" : "# e-e energy\n",
        "Line" : 28,
        "CharPositionInLine" : 54
      },
      "9" : {
        "Text" : "# samples\n",
        "Line" : 29,
        "CharPositionInLine" : 49
      },
      "10" : {
        "Text" : "# VMC\n",
        "Line" : 36,
        "CharPositionInLine" : 31
      },
      "11" : {
        "Text" : "# estimator tests\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "tests/molecules/LiH_dimer_ae_pyscf/CMakeLists.txt" : {
      "ObjectId" : "27f4516cf5ba94a96ef6b92d88d03107477a4cdb",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LiH molecular dimer gaussian tests, all electron using pyscf\n\n# Also check results for different number of mpi tasks and threads keeping total constant\n\n# Energy from Pyscf: E=-7.9873236457148\n\n#\n\n#   \"kinetic\" \"7.991344  0.000065\") # kinetic energy\n\n#   \"totenergy\" \"-7.9873125  0.0000086 \") # total energy\n\n#   \"eeenergy\" \"3.488827 0.000010\") # e-e energy\n\n#   \"samples\" \"80117760000 0.0\") # samples\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kinetic energy\n",
        "Line" : 14,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : "# total energy\n",
        "Line" : 15,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : "# e-e energy\n",
        "Line" : 16,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# samples\n",
        "Line" : 17,
        "CharPositionInLine" : 49
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 24,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# kinetic energy\n",
        "Line" : 27,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : "# total energy\n",
        "Line" : 28,
        "CharPositionInLine" : 57
      },
      "8" : {
        "Text" : "# e-e energy\n",
        "Line" : 29,
        "CharPositionInLine" : 54
      },
      "9" : {
        "Text" : "# samples\n",
        "Line" : 30,
        "CharPositionInLine" : 49
      },
      "10" : {
        "Text" : "# VMC\n",
        "Line" : 37,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 11
    },
    "tests/molecules/LiH_dimer_ae_qp/CMakeLists.txt" : {
      "ObjectId" : "d6eff71ea94cb1610b164f79154f0b628e83084f",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LiH molecular dimer gaussian tests, all electron using QP\n\n# Also check results for different number of mpi tasks and threads keeping total constant\n\n# Energy from Quantum Package: E=-7.987323645629950\n\n#\n\n#   \"kinetic\" \"7.991334  0.000065\") # kinetic energy\n\n#   \"totenergy\" \"-7.9873140 0.0000086 \") # total energy\n\n#   \"eeenergy\" \"3.488827 0.000011\") # e-e energy\n\n#   \"samples\" \"79626240000 0.0\") # samples\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kinetic energy\n",
        "Line" : 15,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : "# total energy\n",
        "Line" : 16,
        "CharPositionInLine" : 58
      },
      "3" : {
        "Text" : "# e-e energy\n",
        "Line" : 17,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# samples\n",
        "Line" : 18,
        "CharPositionInLine" : 49
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 25,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# kinetic energy\n",
        "Line" : 28,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : "# total energy\n",
        "Line" : 29,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "# e-e energy\n",
        "Line" : 30,
        "CharPositionInLine" : 54
      },
      "9" : {
        "Text" : "# samples\n",
        "Line" : 31,
        "CharPositionInLine" : 49
      },
      "10" : {
        "Text" : "# VMC\n",
        "Line" : 38,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 11
    },
    "tests/molecules/LiH_dimer_pp/CMakeLists.txt" : {
      "ObjectId" : "466942dd81c8760ee241941bf86ca8325c67b840",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LiH molecular dimer pseudopotential tests\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  LIST(APPEND LIH_PP_SCALARS \"flux\" \"0.0 0.0025\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 20,
        "CharPositionInLine" : 37
      },
      "3" : {
        "Text" : "#\n\n# LiH molecular dimer pseudopotential tests with Jastrow from XML\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  LIST(APPEND LIH_PP_SCALARS \"flux\" \"-0.0082 0.0051\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 39,
        "CharPositionInLine" : 41
      },
      "6" : {
        "Text" : "# VMC\n",
        "Line" : 48,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : "# VMC\n",
        "Line" : 57,
        "CharPositionInLine" : 41
      },
      "8" : {
        "Text" : "#\n\n# LiH molecular dimer pseudopotential tests with Jastrow from HDF5\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# VMC\n",
        "Line" : 71,
        "CharPositionInLine" : 41
      },
      "10" : {
        "Text" : "# VMC\n",
        "Line" : 80,
        "CharPositionInLine" : 41
      },
      "11" : {
        "Text" : "# VMC\n",
        "Line" : 89,
        "CharPositionInLine" : 41
      },
      "12" : {
        "Text" : "#\n\n# Deterministic tests\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# LiH molecular dimer pseudopotential tests\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# VMC\n",
        "Line" : 114,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "#  LiH molecular dimer pseudopotential tests with Jastrow from XML\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# VMC\n",
        "Line" : 134,
        "CharPositionInLine" : 45
      },
      "17" : {
        "Text" : "# LiH molecular dimer pseudopotential tests with Jastrow from HDF5\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# VMC\n",
        "Line" : 154,
        "CharPositionInLine" : 46
      },
      "19" : {
        "Text" : "# estimator tests\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "tests/performance/C-graphite/CMakeLists.txt" : {
      "ObjectId" : "84c5466bf2eac8b7203cd1616eb112f55faf7438",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C-graphite benchmark tests\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input variables\n\n# QMC_DATA - C-graphite subdirectory should contain the *.h5 files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# *.h5 files and md5 sums\n\n# 30323351a2636ba4987e216be5c383a1  lda.pwscf.h5\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Size is number of electrons\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# H5 filename is fixed consistent with CORAL name, but should be templated if a range of carbon sizes is added\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    SET(H5_FILE C-graphite-supertwist111-supershift000-S${SIZE}.h5)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/performance/CMakeLists.txt" : {
      "ObjectId" : "0e7b07f8b67ddb5f19217e200fc2aa93f82675c6",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# Add performance tests to ctest\n\n#############################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# includes \n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/performance/NiO/CMakeLists.txt" : {
      "ObjectId" : "7dbe90296cb6a554704ff909ffca80b70354ec8c",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NiO benchmark tests\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input variables\n\n# QMC_DATA - NiO subdirectory should contain the *.h5 files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# *.h5 files and md5 sums\n\n# 6476972b54b58c89d15c478ed4e10317  NiO-fcc-supertwist111-supershift000-S8.h5\n\n# b47f4be12f98f8a3d4b65d0ae048b837  NiO-fcc-supertwist111-supershift000-S16.h5\n\n# ee1f6c6699a24e30d7e6c122cde55ac1  NiO-fcc-supertwist111-supershift000-S32.h5\n\n# 40ecaf05177aa4bbba7d3bf757994548  NiO-fcc-supertwist111-supershift000-S64.h5\n\n# 0a530594a3c7eec4f0155b5b2ca92eb0  NiO-fcc-supertwist111-supershift000-S128.h5\n\n# cff0101debb11c8c215e9138658fbd21  NiO-fcc-supertwist111-supershift000-S256.h5\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Rough guide to time/memory\n\n# Intel Haswell Xeon, 1 thread\n\n# S8   - 30 s     1.3 GB (spline) + 18 MB * nwalker\n\n# S16  - 60 s     2.1 GB (spline) + 71 MB * nwalker\n\n# S32  - 130 s    3.6 GB (spline) + 280 MB * nwalker\n\n# S64  - 400 s    7.2 GB (spline) + 1.1 GB * nwalker\n\n# S128 - 1900 s  14.3 GB (spline) + 4.5 GB * nwalker\n\n# S256 - 14800 s 27.1 GB (spline) + 18.1 GB * nwalker\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Size is number of supercells. Multiply by 4 to get the number of atoms.\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# delayed update\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# J3\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Example with SIZE and COMPUTE_TYPE expanded\n\n#SET(PERF_TEST NiO-cpu-a32-e384-dmc)\n\n#SET(TEST_DIR dmc-a32-e384-cpu)\n\n#SET(INPUT_FILE NiO-fcc-S8-dmc.xml)\n\n#SET(H5_FILE NiO-fcc-supertwist111-supershift000-S8.h5)\n\n#ADD_NIO_TEST(${PERF_TEST} ${TEST_DIR} ${INPUT_FILE} ${H5_FILE})\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tests/pw2qmcpack/CMakeLists.txt" : {
      "ObjectId" : "7ac6ebf508cf72d944c5dd8f5ae09930d4048f60",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# Add tests to ctest\n\n#############################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(\"${QE_TEST_NAME}\")\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# These values are slightly different from those in tests/systems\n\n# because the h5 is generated in different ways.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  LIST(APPEND LIH_GAMMA_SCALARS \"flux\" \"0.0 0.05\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 44,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# These values are slightly different from those in tests/systems\n\n# because the h5 is generated in different ways.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  LIST(APPEND LIH_X_SCALARS \"flux\" \"0.0 0.05\")\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# VMC\n",
        "Line" : 67,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "# VMC\n",
        "Line" : 86,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "# VMC\n",
        "Line" : 102,
        "CharPositionInLine" : 36
      },
      "11" : {
        "Text" : "# test case for no wf_collect\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# VMC\n",
        "Line" : 122,
        "CharPositionInLine" : 40
      },
      "13" : {
        "Text" : "# VMC\n",
        "Line" : 138,
        "CharPositionInLine" : 36
      },
      "14" : {
        "Text" : "# VMC\n",
        "Line" : 157,
        "CharPositionInLine" : 40
      },
      "15" : {
        "Text" : "# VMC\n",
        "Line" : 173,
        "CharPositionInLine" : 36
      },
      "16" : {
        "Text" : "# test case for spin polarized case\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# VMC\n",
        "Line" : 193,
        "CharPositionInLine" : 40
      },
      "18" : {
        "Text" : "# VMC\n",
        "Line" : 209,
        "CharPositionInLine" : 36
      },
      "19" : {
        "Text" : "# test case for no wf_collect\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# VMC\n",
        "Line" : 229,
        "CharPositionInLine" : 40
      },
      "21" : {
        "Text" : "# VMC\n",
        "Line" : 245,
        "CharPositionInLine" : 36
      },
      "22" : {
        "Text" : "# test case for O atom\n\n# from a long run\n\n# totenergy\n\n# LocalEnergy           =        -15.870035 +/-         0.000016\n\n# Kinetic               =          11.85233 +/-          0.00014\n\n# ElecElec              =         10.368642 +/-         0.000050\n\n# LocalECP              =         -40.15639 +/-          0.00020\n\n# NonLocalECP           =          2.065389 +/-         0.000083\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#  LIST(APPEND O_ATOM_SCALARS \"flux\"        \"0.0 0.25\")\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# VMC\n",
        "Line" : 282,
        "CharPositionInLine" : 37
      },
      "25" : {
        "Text" : "# pw2casino Kinetic 11.64963538\n\n# measued   Kinetic 11.64798 +/- 0.00017\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#LIST(APPEND O_ATOM_NOJ_SCALARS \"flux\"        \"0.0 0.3\")\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# VMC\n",
        "Line" : 303,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 28
    },
    "tests/solids/CMakeLists.txt" : {
      "ObjectId" : "6eb3b15d95c9046054b67b975f40f20bfb7db50c",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Solids\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/solids/LiH_solid_1x1x1_pp/CMakeLists.txt" : {
      "ObjectId" : "8c6ad812c40ee5fc48f6450ffbe7cf6afb54560d",
      "LastModified" : "2019-04-17T17:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LiH solid einspline wavefunction tests for different k-points\n\n# Wavefunctions from quantum espresso. Reference energies obtained via pw2casino option\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  LIST(APPEND LIH_GAMMA_SCALARS \"flux\" \"0.0 0.05\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 16,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "# VMC\n",
        "Line" : 26,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : "#  LIST(APPEND LIH_X_SCALARS \"flux\" \"0.0 0.05\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 41,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# VMC\n",
        "Line" : 50,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : "# VMC\n",
        "Line" : 60,
        "CharPositionInLine" : 36
      },
      "8" : {
        "Text" : "# Arbitrary k-point requires complex build to run. Ensure fails with real/non-complex build\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# samples\n",
        "Line" : 69,
        "CharPositionInLine" : 55
      },
      "10" : {
        "Text" : "#  LIST(APPEND LIH_ARB_SCALARS \"flux\" \"0.0 0.05\")\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# VMC\n",
        "Line" : 85,
        "CharPositionInLine" : 38
      },
      "12" : {
        "Text" : "# VMC\n",
        "Line" : 95,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "# multi-slater determinant requires complex build to run. Ensure fails with real/non-complex build\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# VMC\n",
        "Line" : 107,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : "# VMC\n",
        "Line" : 117,
        "CharPositionInLine" : 45
      },
      "16" : {
        "Text" : "# DMC tests for LiH, locality and non-local (t-moves) variants\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# DMC\n",
        "Line" : 131,
        "CharPositionInLine" : 44
      },
      "18" : {
        "Text" : "# DMC\n",
        "Line" : 141,
        "CharPositionInLine" : 40
      },
      "19" : {
        "Text" : "# DMC\n",
        "Line" : 151,
        "CharPositionInLine" : 42
      },
      "20" : {
        "Text" : "# DMC\n",
        "Line" : 161,
        "CharPositionInLine" : 46
      },
      "21" : {
        "Text" : "# DMC\n",
        "Line" : 171,
        "CharPositionInLine" : 42
      },
      "22" : {
        "Text" : "# DMC\n",
        "Line" : 181,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 23
    },
    "tests/solids/NiO_a4_e48_pp/CMakeLists.txt" : {
      "ObjectId" : "dc7168f70735d7cb3defe5752e986cd78a5fe965",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#symlink h5 file\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#  LocalEnergy           =         -370.7944 +/-           0.0011\n\n#  Variance              =            12.836 +/-            0.052\n\n#  Kinetic               =           230.471 +/-            0.018\n\n#  LocalPotential        =          -601.265 +/-            0.018\n\n#  ElecElec              =           78.4679 +/-           0.0075\n\n#  LocalECP              =          -389.958 +/-            0.018\n\n#  NonLocalECP           =           -50.477 +/-            0.011\n\n#  IonIon                =           -239.30 +/-             0.00\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 33,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "#  LocalEnergy           =  -371.320817 +/- 0.000430   13.153990 +/- 0.007166\n\n#  LocalEnergy           =  -371.288648 +/- 0.000530   13.352353 +/- 0.006475\n\n#  LocalEnergy           =  -371.283531 +/- 0.000519   13.590739 +/- 0.008039\n\n#  LocalEnergy           =  -371.283912 +/- 0.000493   13.588468 +/- 0.007902\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DMC no Tmove\n",
        "Line" : 51,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "# DMC Tmove v0\n",
        "Line" : 52,
        "CharPositionInLine" : 48
      },
      "6" : {
        "Text" : "# DMC no Tmove\n",
        "Line" : 61,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# DMC Tmove v0\n",
        "Line" : 62,
        "CharPositionInLine" : 48
      },
      "8" : {
        "Text" : "# DMC Tmove v1\n\n# DMC Tmove v3\n",
        "Line" : 72,
        "CharPositionInLine" : 48
      },
      "9" : {
        "Text" : "# DMC Tmove v1\n\n# DMC Tmove v3\n",
        "Line" : 82,
        "CharPositionInLine" : 48
      },
      "10" : {
        "Text" : "#  LocalEnergy           =        -370.88498 +/-          0.00088\n\n#  Variance              =            11.118 +/-            0.031\n\n#  Kinetic               =           230.555 +/-            0.020\n\n#  LocalPotential        =          -601.440 +/-            0.020\n\n#  ElecElec              =           78.3624 +/-           0.0077\n\n#  LocalECP              =          -389.971 +/-            0.022\n\n#  NonLocalECP           =           -50.534 +/-            0.012\n\n#  IonIon                =           -239.30 +/-             0.00\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# VMC\n",
        "Line" : 108,
        "CharPositionInLine" : 44
      },
      "12" : {
        "Text" : "# Testing batched algorithm in NLPP.\n\n# Hitting all the routines using VirtualParticleSet.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# VMC\n",
        "Line" : 119,
        "CharPositionInLine" : 44
      },
      "14" : {
        "Text" : "# VMC\n",
        "Line" : 137,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# VMC\n",
        "Line" : 146,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# VMC\n",
        "Line" : 160,
        "CharPositionInLine" : 44
      },
      "17" : {
        "Text" : "# Testing batched algorithm in NLPP.\n\n# Hitting all the routines using VirtualParticleSet.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# VMC\n",
        "Line" : 171,
        "CharPositionInLine" : 44
      },
      "19" : {
        "Text" : "#\n\n# Long test\n\n#\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# VMC\n",
        "Line" : 192,
        "CharPositionInLine" : 46
      },
      "21" : {
        "Text" : "# VMC\n",
        "Line" : 204,
        "CharPositionInLine" : 49
      },
      "22" : {
        "Text" : "# VMC\n",
        "Line" : 218,
        "CharPositionInLine" : 49
      },
      "23" : {
        "Text" : "# VMC\n",
        "Line" : 227,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 24
    },
    "tests/solids/NiO_afqmc/CMakeLists.txt" : {
      "ObjectId" : "3d240a9e66bb6506da7497b02d311c9d488327ac",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#symlink h5 file\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#symlink wfn file\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# AFQMC\n",
        "Line" : 24,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# AFQMC\n",
        "Line" : 39,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 4
    },
    "tests/solids/bccH_1x1x1_ae/CMakeLists.txt" : {
      "ObjectId" : "000c087c442269cc05468d72b8bbd8b2c60ec0a9",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Short tests, about 2-3 seconds on 16 cores\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  LIST(APPEND BCC_H_SCALARS \"flux\" \"0.0 0.03\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 20,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# qmc_ref_vmc_dmc  series 1  -1.841352 +/- 0.000078\n\n# qmc_short_vmc_dmc  series 1  -1.84196 +/- 0.00073\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DMC\n",
        "Line" : 36,
        "CharPositionInLine" : 40
      },
      "5" : {
        "Text" : "# Check VMCUpdateAll driver using all-particle updates\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# VMC\n",
        "Line" : 48,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : "# Check VMCUpdateAllWithDrift driver using all-particle updates\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# VMC\n",
        "Line" : 58,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "# Check DMCUpdateAllWithRejection driver using all-particle updates\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# DMC\n",
        "Line" : 68,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "#Now for the correlated sampling tests\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check CSVMCUpdatePbyP driver using particle-by-particle updates\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# VMC\n",
        "Line" : 89,
        "CharPositionInLine" : 42
      },
      "14" : {
        "Text" : "# Check CSVMCUpdatePbyPWithDrift driver using all-particle updates\n\n#  QMC_RUN_AND_CHECK(short-bccH_1x1x1_ae-csvmc-pbyp_sdj\n\n#                    \"${CMAKE_SOURCE_DIR}/tests/solids/bccH_1x1x1_ae\"\n\n#                    qmc_short_csvmc_pbyp\n\n#                    qmc_short_csvmc_pbyp.in.xml\n\n#                    16 1\n\n#                    TRUE\n\n#                    0 BCC_H_CSVMC_SCALARS # VMC\n\n#                    )\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check CSVMCUpdateAll driver using all-particle updates\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# VMC\n",
        "Line" : 109,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# Check CSVMCUpdateAllWithDrift driver using all-particle updates\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# VMC\n",
        "Line" : 119,
        "CharPositionInLine" : 42
      },
      "19" : {
        "Text" : "#check RMC on 16 cores.  1 MPI\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#series# \n",
        "Line" : 131,
        "CharPositionInLine" : 40
      },
      "21" : {
        "Text" : "#check RMC on 4 cores, 4 mpi\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#series#\n",
        "Line" : 140,
        "CharPositionInLine" : 40
      },
      "23" : {
        "Text" : "# Check CPU time limit\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Plane wave test of bccH (no pp, so faster than typical solids)\n\n# Reduced number of blocks and samples compared to other short bccH tests\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#  LIST(APPEND BCC_H_PW_SCALARS \"flux\" \"0.0 0.1\")\n\n# No GPU implementation. Would be fast if implemented\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# VMC\n",
        "Line" : 167,
        "CharPositionInLine" : 39
      },
      "27" : {
        "Text" : "#\n\n# Long variants of above, about 1/2 hour with 16 cores\n\n#\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# VMC\n",
        "Line" : 186,
        "CharPositionInLine" : 41
      },
      "29" : {
        "Text" : "# qmc_ref_vmc_dmc  series 1  -1.841352 +/- 0.000078\n\n# qmc_long_vmc_dmc  series 1   -1.841204 +/- 0.000285\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# DMC\n",
        "Line" : 199,
        "CharPositionInLine" : 45
      },
      "31" : {
        "Text" : "# DMC\n",
        "Line" : 216,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 32
    },
    "tests/solids/bccH_2x2x2_ae/CMakeLists.txt" : {
      "ObjectId" : "569d44c9f87199f0d6bf9fe71f7fdc3ae9e76048",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/solids/bccH_3x3x3_ae/CMakeLists.txt" : {
      "ObjectId" : "a8567e08962f8473e9e19904a6b4c3001e9b4b30",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/solids/diamondC_1x1x1-Gaussian_pp/CMakeLists.txt" : {
      "ObjectId" : "1ce72a7c5ab41e4b734937017ec7b9c44dd43a5a",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reference VMC run in qmc-ref \"-10.495941  0.000073\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VMC\n",
        "Line" : 22,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : "#\n\n# Long tests\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VMC\n",
        "Line" : 39,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "# Reference DMC run in qmc-ref \"-10.532497 0.000470\"\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DMC\n",
        "Line" : 51,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 6
    },
    "tests/solids/diamondC_1x1x1_pp/CMakeLists.txt" : {
      "ObjectId" : "0dee2b2598785a048dc1e21387c19b48134e4316",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  LIST(APPEND DIAMOND_SCALARS \"flux\" \"0.0 0.4\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VMC\n",
        "Line" : 19,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 29,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# VMC\n",
        "Line" : 41,
        "CharPositionInLine" : 38
      },
      "4" : {
        "Text" : "# VMC\n",
        "Line" : 52,
        "CharPositionInLine" : 45
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 61,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "# Reference OPT run in qmc-ref\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VMC\n",
        "Line" : 78,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : "# Reference DMC run in qmc-ref \"-10.531583 0.000265\"\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# DMC\n",
        "Line" : 96,
        "CharPositionInLine" : 42
      },
      "10" : {
        "Text" : "# VMC without drift\n\n# VMC with drift\n",
        "Line" : 106,
        "CharPositionInLine" : 38
      },
      "11" : {
        "Text" : "# DMC\n",
        "Line" : 108,
        "CharPositionInLine" : 42
      },
      "12" : {
        "Text" : "# Coverage test - shorter version of dmc test\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Test time limit\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Long tests\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# VMC\n",
        "Line" : 161,
        "CharPositionInLine" : 43
      },
      "16" : {
        "Text" : "# VMC\n",
        "Line" : 170,
        "CharPositionInLine" : 43
      },
      "17" : {
        "Text" : "# VMC ref\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#DMC ref\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# VMC without drift\n\n# VMC with drift\n",
        "Line" : 199,
        "CharPositionInLine" : 48
      },
      "20" : {
        "Text" : "# DMC\n",
        "Line" : 201,
        "CharPositionInLine" : 52
      },
      "21" : {
        "Text" : "# VMC\n",
        "Line" : 213,
        "CharPositionInLine" : 50
      },
      "22" : {
        "Text" : "# Reference DMC run in qmc-ref \"-10.531583 0.000265\"\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# DMC\n",
        "Line" : 226,
        "CharPositionInLine" : 47
      },
      "24" : {
        "Text" : "# estimator tests\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# density tests\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# spindensity tests\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# 1rdm tests\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# no Jastrow tests\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# two body Jastrow tests\n",
        "Line" : 336,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# energydensity tests\n",
        "Line" : 357,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#\n\n# Deterministic tests\n\n#\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# VMC\n",
        "Line" : 434,
        "CharPositionInLine" : 42
      },
      "33" : {
        "Text" : "# VMC\n",
        "Line" : 454,
        "CharPositionInLine" : 48
      },
      "34" : {
        "Text" : "# VMC\n",
        "Line" : 474,
        "CharPositionInLine" : 49
      },
      "35" : {
        "Text" : "# DMC\n",
        "Line" : 494,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 36
    },
    "tests/solids/diamondC_2x1x1-Gaussian_pp/CMakeLists.txt" : {
      "ObjectId" : "073993a703b62b8e8e505f73dd3234ef7b7ade3a",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reference VMC run in qmc-ref \"-21.70152 +/- 0.00042\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  LIST(APPEND DIAMOND_SCALARS \"flux\" \"0.0 0.4\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 21,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "#\n\n# Long tests\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Reference VMC run in qmc-ref \"-21.70152 +/- 0.00042\"\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 38,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# Reference DMC run in qmc-ref \"-21.84712 +/-  0.00068\"\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DMC\n",
        "Line" : 50,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 8
    },
    "tests/solids/diamondC_2x1x1-Gaussian_pp_kpts/CMakeLists.txt" : {
      "ObjectId" : "c2cf1d830858adbc7b93e722d099783c5a35800d",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Reference VMC run in qmc_ref_long.s000.scalar.dat\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VMC\n",
        "Line" : 18,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : "#\n\n# Long tests\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ../../../../../utils/make_ref_data.sh LONG_DIAMOND qmc_long.s000.scalar.dat qmc-ref/qmc_ref_long.s000.scalar.dat\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VMC\n",
        "Line" : 39,
        "CharPositionInLine" : 43
      },
      "5" : {
        "Text" : "# generated scalars by\n\n#../../../../../utils/make_ref_data.sh LONG_DIAMOND_DMC qmc_long_vmc_dmc.s001.scalar.dat qmc-ref/qmc_ref_long_vmc_dmc.s001.scalar.dat\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DMC\n",
        "Line" : 57,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 7
    },
    "tests/solids/diamondC_2x1x1_pp/CMakeLists.txt" : {
      "ObjectId" : "45ee3d65fcbe57eb80c8148f83e76d07c79cdbac",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  LIST(APPEND DIAMOND2_SCALARS \"flux\" \"0.0 0.7\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VMC\n",
        "Line" : 18,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 27,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : "# VMC\n",
        "Line" : 37,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : "# Reference DMC run in qmc-ref \"-21.844975 0.001113\"\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DMC\n",
        "Line" : 51,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# DMC\n",
        "Line" : 61,
        "CharPositionInLine" : 43
      },
      "7" : {
        "Text" : "#\n\n# Long tests\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# VMC\n",
        "Line" : 79,
        "CharPositionInLine" : 44
      },
      "9" : {
        "Text" : "# Reference DMC run in qmc-ref \"-21.844975 0.001113\"\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# DMC\n",
        "Line" : 90,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# DMC\n",
        "Line" : 99,
        "CharPositionInLine" : 48
      },
      "12" : {
        "Text" : "#\n\n# Deterministic tests\n\n#\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# VMC RUN\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# VMC\n",
        "Line" : 136,
        "CharPositionInLine" : 43
      },
      "15" : {
        "Text" : "# VMC DELAYED-UPDATE\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# VMC\n",
        "Line" : 168,
        "CharPositionInLine" : 49
      },
      "17" : {
        "Text" : "# DMC RUN\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# DMC\n",
        "Line" : 198,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 19
    },
    "tests/solids/diamondC_afqmc/CMakeLists.txt" : {
      "ObjectId" : "55dc0c140832b78c241afd7e82ecc8d37a59bb41",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add short tests\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AFQMC\n",
        "Line" : 13,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# distribute cholesky matrix\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# AFQMC\n",
        "Line" : 23,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "# hybrid weighting\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# AFQMC\n",
        "Line" : 33,
        "CharPositionInLine" : 41
      },
      "6" : {
        "Text" : "# hybrid weighting with cholesky distribution\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# AFQMC\n",
        "Line" : 43,
        "CharPositionInLine" : 41
      },
      "8" : {
        "Text" : "# include mean field\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# AFQMC\n",
        "Line" : 53,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# include mean field with cholesky distribution\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# AFQMC\n",
        "Line" : 63,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "# add long tests\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# AFQMC\n",
        "Line" : 79,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# AFQMC\n",
        "Line" : 88,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 15
    },
    "tests/solids/diamondC_afqmc_1x1x1_complex/CMakeLists.txt" : {
      "ObjectId" : "4d36722907d21fa8b77a66298e35d9b094e67515",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# RHF CHOLESKY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#symlink h5 file\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#symlink wfn file\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# RHF ISDF/THC\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#symlink h5 file\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#symlink wfn file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# UHF CHOLESKY\n\n# Need to remake benchmark following change in hamiltonian/wavefunction.\n\n#SET(TEST_HDF_INPUT ${qmcpack_SOURCE_DIR}/tests/afqmc/C_uhf/choldump.h5)\n\n#SET(TEST_WFN_INPUT ${qmcpack_SOURCE_DIR}/tests/afqmc/C_uhf/wfn.dat)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##symlink h5 file\n\n#MAYBE_SYMLINK(${TEST_HDF_INPUT} ${CMAKE_CURRENT_BINARY_DIR}/choldump_uhf.h5)\n\n##symlink wfn file\n\n#MAYBE_SYMLINK(${TEST_WFN_INPUT} ${CMAKE_CURRENT_BINARY_DIR}/wfn_uhf.dat)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#LIST(APPEND DIAMOND_AFQMC_SCALARS_UHF \"EnergyEstim__nume_real\" \"-10.55151 0.00312\")\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#QMC_RUN_AND_CHECK(\"short-diamondC_afqmc_1x1x1_complex_uhf\"\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\"${CMAKE_SOURCE_DIR}/tests/solids/diamondC_afqmc_1x1x1_complex\"\n\n#qmc_short_uhf\n\n#qmc_short_uhf.in.xml\n\n#16 1\n\n#TRUE\n\n#0 DIAMOND_AFQMC_SCALARS_UHF\n\n#)\n",
        "Line" : 76,
        "CharPositionInLine" : 18
      },
      "11" : {
        "Text" : "#LIST(APPEND LONG_DIAMOND_AFQMC_SCALARS_UHF \"EnergyEstim__nume_real\" \"-10.55151 0.00103\")\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#QMC_RUN_AND_CHECK(\"long-diamondC_afqmc_1x1x1_complex_uhf\"\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\"${CMAKE_SOURCE_DIR}/tests/solids/diamondC_afqmc_1x1x1_complex\"\n\n#qmc_long_uhf\n\n#qmc_long_uhf.in.xml\n\n#16 1\n\n#TRUE\n\n#0 LONG_DIAMOND_AFQMC_SCALARS_UHF\n\n#)\n",
        "Line" : 87,
        "CharPositionInLine" : 18
      },
      "14" : {
        "Text" : "# PHMSD CHOLESKY\n\n#SET(TEST_HDF_INPUT ${qmcpack_SOURCE_DIR}/tests/afqmc/C_rhf/choldump_phmsd.h5)\n\n#SET(TEST_WFN_INPUT ${qmcpack_SOURCE_DIR}/tests/afqmc/C_rhf/wfn_phmsd.dat)\n\n##symlink h5 file\n\n#MAYBE_SYMLINK(${TEST_HDF_INPUT} ${CMAKE_CURRENT_BINARY_DIR}/choldump_phmsd.h5)\n\n##symlink wfn file\n\n#MAYBE_SYMLINK(${TEST_WFN_INPUT} ${CMAKE_CURRENT_BINARY_DIR}/wfn_phmsd.dat)\n\n#\n\n#LIST(APPEND DIAMOND_AFQMC_SCALARS_PHMSD \"EnergyEstim__nume_real\" \"-10.55085 0.00368\")\n\n#\n\n#QMC_RUN_AND_CHECK(\"short-diamondC_afqmc_1x1x1_complex_phmsd\"\n\n#                  \"${CMAKE_SOURCE_DIR}/tests/solids/diamondC_afqmc_1x1x1_complex\"\n\n#                  qmc_short_phmsd\n\n#                  qmc_short_phmsd.in.xml\n\n#                  16 1\n\n#                  TRUE\n\n#                  0 DIAMOND_AFQMC_SCALARS_PHMSD\n\n#                  )\n\n#\n\n#LIST(APPEND LONG_DIAMOND_AFQMC_SCALARS_PHMSD \"EnergyEstim__nume_real\" \"-10.55085 0.00119\")\n\n#\n\n#QMC_RUN_AND_CHECK(\"long-diamondC_afqmc_1x1x1_complex_phmsd\"\n\n#                  \"${CMAKE_SOURCE_DIR}/tests/solids/diamondC_afqmc_1x1x1_complex\"\n\n#                  qmc_long_phmsd\n\n#                  qmc_long_phmsd.in.xml\n\n#                  16 1\n\n#                  TRUE\n\n#                  0 LONG_DIAMOND_AFQMC_SCALARS_PHMSD\n\n#                  )\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "tests/solids/hcpBe_1x1x1_pp/CMakeLists.txt" : {
      "ObjectId" : "af786f9da222b197225d4482c0a97a89eabf598c",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  LIST(APPEND HCP_BE_SCALARS \"flux\" \"0.0 0.003\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VMC\n",
        "Line" : 12,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "#\n\n# Long test\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VMC\n",
        "Line" : 29,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 4
    },
    "tests/solids/monoO_1x1x1_pp/CMakeLists.txt" : {
      "ObjectId" : "0d69b50b7e56423caab27d78437eae6b153a4d06",
      "LastModified" : "2019-04-11T14:42:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  LIST(APPEND MONO_O_SCALARS \"flux\" \"0.0 0.5\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VMC\n",
        "Line" : 12,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "# VMC\n",
        "Line" : 23,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "#\n\n# Long test\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VMC\n",
        "Line" : 41,
        "CharPositionInLine" : 42
      },
      "5" : {
        "Text" : "# VMC\n",
        "Line" : 54,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 120,
    "MAKEFILE" : 6
  },
  "ElapsedTime" : 10535
}