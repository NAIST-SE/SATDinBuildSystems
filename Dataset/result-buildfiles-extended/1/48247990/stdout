{
  "Repository" : "48247990",
  "Revision" : "HEAD",
  "ObjectId" : "970d3df6c11400ad68405f22b0c42a52374e94ca",
  "CommitTime" : "2018-02-06T23:48:39Z",
  "Files" : {
    "tensorflow/BUILD" : {
      "ObjectId" : "c5b17af05cdb605c9688db7273c778d4d25cf408",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow is a computational framework, primarily for use in machine\n# learning applications.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Config setting for determining if we are building for Android.",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -------------------------------------------\n# New rules should be added above this target.\n# -------------------------------------------",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tensorflow/c/BUILD" : {
      "ObjectId" : "7afac4445229c8c96bc91adef4267326c3e54b48",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# C API for TensorFlow, for use by client language bindings.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# For platform specific build config",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Public targets",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Tests",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tensorflow/cc/BUILD" : {
      "ObjectId" : "0dfacecbad2414b6fd4ee75d00e447d67ef29974",
      "LastModified" : "2016-10-05T16:55:48Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow is a computational framework, primarily for use in machine\n# learning applications.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/cc/saved_model/BUILD" : {
      "ObjectId" : "cf677ac4e394adcc16eeca2eec04711328d22f6d",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow SavedModel.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/BUILD" : {
      "ObjectId" : "6497b9c91d0a2a34989cea04063d31f8e547f009",
      "LastModified" : "2016-10-05T16:55:48Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/android/BUILD" : {
      "ObjectId" : "059aa340fdc6c72edb5e19063c251a5f69b9a2ea",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   JNI-based Java inference interface for TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# TODO(andrewharp): Make this an android_library or java_library.",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/bayesflow/BUILD" : {
      "ObjectId" : "e533cc51cb189ad1aa978002e97917a523ce4b69",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains ops for working with statistical distributions,\n#   particularly useful for Bayesian inference.\n#   APIs here are meant to evolve over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cmake/CMakeLists.txt" : {
      "ObjectId" : "e8a2a3bd840fc631dd093ffe8b492c80926ac139",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Minimum CMake required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Actual source is the ../../.. directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# [CLEANUP] Not sure if this is needed (copied from Protobuf)\n\n# CMake policies\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Options\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Threads: defines CMAKE_THREAD_LIBS_INIT and adds -pthread compile option for\n\n# targets that link ${CMAKE_THREAD_LIBS_INIT}.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# [CLEANUP] Remove when done\n\n# For debugging\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# External dependencies\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Location where external projects will be downloaded\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# External dependencies\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Source and generated code.\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# External dependencies.\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Let's get to work!\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# NOTE: Disabled until issue #3996 is fixed.\n\n# include(tf_stream_executor.cmake)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tensorflow/contrib/cmake/external/boringssl.cmake" : {
      "ObjectId" : "b91c7bf38300ad65ffc16f34d780fe6e07638292",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(boringssl_EXTRA_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/boringssl/src)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(boringssl_LIBRARIES ${boringssl_BUILD}/obj/so/libboringssl.so)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# BUILD_IN_SOURCE 1\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/cmake/external/eigen.cmake" : {
      "ObjectId" : "78c49ea96e79db5373340fc1e550bc7d3c688808",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#new_http_archive(\n\n#  name = \"eigen_archive\",\n\n#  url = \"https://bitbucket.org/eigen/eigen/get/...\",\n\n#  sha256 = \"...\",\n\n#  build_file = \"eigen.BUILD\",\n\n#)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We parse the current Eigen version and archive hash from the bazel configuration\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cmake/external/farmhash.cmake" : {
      "ObjectId" : "b2c13a14fbb711ab9b9c3797aa1160952a2dfff2",
      "LastModified" : "2016-10-05T16:55:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# put farmhash includes in the directory where they are expected\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/external/gif.cmake" : {
      "ObjectId" : "da20561b8806ca4575f75f3354b7855cd7b10543",
      "LastModified" : "2016-10-05T16:55:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# put gif includes in the directory where they are expected\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/external/grpc.cmake" : {
      "ObjectId" : "3adb2f0bd45027a848724c9b831933153a62cd8c",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tensorflow/contrib/cmake/external/highwayhash.cmake" : {
      "ObjectId" : "a19ebfe24f1a4ed11f453526a15b573b34f58040",
      "LastModified" : "2016-10-05T16:55:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# put highwayhash includes in the directory where they are expected\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/external/jpeg.cmake" : {
      "ObjectId" : "a94eb65ddb17624b9651fa15f22384aee3ce9453",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# put jpeg includes in the directory where they are expected\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/external/jsoncpp.cmake" : {
      "ObjectId" : "75d5d7270344058b8a4e516cefbf95114a75ee7b",
      "LastModified" : "2016-09-29T03:16:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(jsoncpp_EXTRA_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/jsoncpp/src)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We only need jsoncpp.h in external/jsoncpp/jsoncpp/jsoncpp.h\n\n# For the rest, we'll just add the build dir as an include dir.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cmake/external/png.cmake" : {
      "ObjectId" : "bbf626f87ba4a8b0153165f080fc656e2085e702",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## put png includes in the directory where they are expected\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/external/protobuf.cmake" : {
      "ObjectId" : "5c9346be0d303b47c6b8a7d2d1661daeee7eb045",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Includes MSVC fix.\n",
        "Line" : 4,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/external/zlib.cmake" : {
      "ObjectId" : "ded2e4177043210096f7daf7a60eb5a4517d311c",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# put zlib includes in the directory where they are expected\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/patches/farmhash/CMakeLists.txt" : {
      "ObjectId" : "0286f29ad0c46908e5bec0ac79c76cbddf3a2040",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tensorflow/contrib/cmake/patches/gif/CMakeLists.txt" : {
      "ObjectId" : "0fe919d89e3a78b5e29cdd2fecce1173295bf29f",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tensorflow/contrib/cmake/patches/grpc/CMakeLists.txt" : {
      "ObjectId" : "ce8a0cb72c74a3d4904dfc6d625ce5c75e831f51",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GRPC global cmake file, modified for the TensorFlow build system.\n\n# This currently builds C and C++ code.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is based on the CMakeLists.txt available from here:\n\n# https://github.com/grpc/grpc/blob/3bc78cd0b5bd784a235c01612d634b1ec5f8fb97/CMakeLists.txt\n\n# with modifications to remove dependencies on SSL, and to reuse\n\n# previously compiled libprotobuf.\n\n#\n\n# Copyright 2016, Google Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above\n\n# copyright notice, this list of conditions and the following disclaimer\n\n# in the documentation and/or other materials provided with the\n\n# distribution.\n\n#     * Neither the name of Google Inc. nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cmake/patches/highwayhash/CMakeLists.txt" : {
      "ObjectId" : "8313d1c9f29bda61952072f6ae1ef3249a8ac859",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C++11\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/patches/jpeg/CMakeLists.txt" : {
      "ObjectId" : "782076ef74c1e00a0edd0974a8fbdfeec4ead7b0",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tensorflow/contrib/cmake/tf_cc_ops.cmake" : {
      "ObjectId" : "6d9c4955745fa59a97562daeab2edc47d34af1a4",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# tf_cc_framework library\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# tf_cc_op_gen_main library\n\n########################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################\n\n# tf_gen_op_wrapper_cc executables\n\n########################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create directory for ops generated files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Using <TARGET_OBJECTS:...> to work around an issue where no ops were\n\n# registered (static initializers dropped by the linker because the ops\n\n# are not used explicitly in the *_gen_cc executables).\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "########################################################\n\n# tf_cc_ops library\n\n########################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tensorflow/contrib/cmake/tf_core_cpu.cmake" : {
      "ObjectId" : "143f2e7fb50529fc28ef9fe79f8f59b19ee5d7d1",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# tf_core_cpu library\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to include stubs for the GPU tracer, which are in the exclude glob.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cmake/tf_core_direct_session.cmake" : {
      "ObjectId" : "113e7b97f650e77575eb9cbba302a4c760458640",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# tf_core_direct_session library\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/cmake/tf_core_distributed_runtime.cmake" : {
      "ObjectId" : "cf41e92e4a5fe9cc586342fbc895b49426d79fe1",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# tf_core_distributed_runtime library\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# grpc_tensorflow_server executable\n\n########################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cmake/tf_core_framework.cmake" : {
      "ObjectId" : "d80db2121b7e7ad448db9df4b94a466aa56419c0",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# RELATIVE_PROTOBUF_GENERATE_CPP function\n\n########################################################\n\n# A variant of PROTOBUF_GENERATE_CPP that keeps the directory hierarchy.\n\n# ROOT_DIR must be absolute, and proto paths must be relative to ROOT_DIR.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# tf_protos_cc library\n\n########################################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################\n\n# tf_core_lib library\n\n########################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cloud libraries require boringssl.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Tricky setup to force always rebuilding\n\n# force_rebuild always runs forcing ${VERSION_INFO_CC} target to run\n\n# ${VERSION_INFO_CC} would cache, but it depends on a phony never produced\n\n# target.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########################################################\n\n# tf_core_framework library\n\n########################################################\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tensorflow/contrib/cmake/tf_core_kernels.cmake" : {
      "ObjectId" : "4d52a00c86296939975c3fee932c8c6ad1e22448",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# tf_core_kernels library\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build a minimal subset of kernels to be able to run a test program.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\"${tensorflow_source_dir}/tensorflow/contrib/ffmpeg/decode_audio_op.cc\"\n\n#\"${tensorflow_source_dir}/tensorflow/contrib/ffmpeg/encode_audio_op.cc\"\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# stream_executor dependency\n",
        "Line" : 79,
        "CharPositionInLine" : 67
      },
      "4" : {
        "Text" : "# stream_executor dependency\n",
        "Line" : 80,
        "CharPositionInLine" : 68
      },
      "5" : {
        "Text" : "# Not currently working on Windows:\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Cannot find symbol: tensorflow::LaunchConv2DOp<struct Eigen::ThreadPoolDevice, double>::launch(...).\n",
        "Line" : 87,
        "CharPositionInLine" : 79
      },
      "CommentCount" : 7
    },
    "tensorflow/contrib/cmake/tf_core_ops.cmake" : {
      "ObjectId" : "ac7228ef683d960acea29fa725a895ec0af5a788",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# tf_${tf_op_lib_name} library\n\n########################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "########################################################\n\n# tf_user_ops library\n\n########################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################\n\n# tf_core_ops library\n\n########################################################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/cmake/tf_models.cmake" : {
      "ObjectId" : "10aedf03cdd738aa0d9c837a4987500caf465559",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# tf_models_word2vec_ops library\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# tf_models_word2vec_kernels library\n\n########################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cmake/tf_python.cmake" : {
      "ObjectId" : "d1029d3e52314e5e50a08bac036a4765eb324452",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake rules for generating the TensorFlow Python bindings.\n\n#\n\n# Known limitations:\n\n# * Generates output in a hard-coded path ${CMAKE_CURRENT_BINARY_DIR}/tf_python.\n\n# * No support for dynamic library loading.\n\n# * No support for tf.contrib. (TODO(mrry): Add rules for building op libraries.)\n\n# * No support for Python 3. (TODO(mrry): Add override for FindPythonInterp.)\n\n#\n\n# The _pywrap_tensorflow target builds everything.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# Resolve installed dependencies\n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 1. Resolve the installed version of Python (for Python.h and python).\n\n# TODO(mrry): Parameterize the build script to enable Python 3 building.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 2. Resolve the installed version of NumPy (for numpy/arrayobject.h).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################\n\n# Build the Python directory structure.\n\n########################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO(mrry): Configure this to build in a directory other than tf_python/\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# tf_python_srcs contains all static .py files\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# tf_python_copy_scripts_to_destination copies all Python files\n\n# (including static source and generated protobuf wrappers, but *not*\n\n# generated TensorFlow op wrappers) into tf_python/.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy static files to tf_python/.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generates the Python protobuf wrappers.\n\n# ROOT_DIR must be absolute; subsequent arguments are interpreted as\n\n# paths of .proto files, and must be relative to ROOT_DIR.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# tf_python_touchup_modules adds empty __init__.py files to all\n\n# directories containing Python code, so that Python will recognize\n\n# them as modules.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################\n\n# tf_python_op_gen_main library\n\n########################################################\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# create directory for ops generated files\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Default destination is tf_python/tensorflow/python/ops/gen_<...>.py.\n",
        "Line" : 187,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Create a C++ executable that links in the appropriate op\n\n# registrations and generates Python wrapper code based on the\n\n# registered ops.\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Use the generated C++ executable to create a Python file\n\n# containing the wrappers.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "############################################################\n\n# Build the SWIG-wrapped library for the TensorFlow runtime.\n\n############################################################\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Generate the C++ and Python source code for the SWIG wrapper.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# pywrap_tensorflow is a shared library containing all of the TensorFlow\n\n# runtime and the standard ops and kernels. These are installed into\n\n# tf_python/tensorflow/python/.\n\n# TODO(mrry): Refactor this to expose a framework library that\n\n# facilitates `tf.load_op_library()`.\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "############################################################\n\n# Build a PIP package containing the TensorFlow runtime.\n\n############################################################\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "tensorflow/contrib/cmake/tf_stream_executor.cmake" : {
      "ObjectId" : "b121ddf4913f32fe0578e6278a80c8a6de478989",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cc_library(\n\n#    name = \"stream_executor\",\n\n#    srcs = glob(\n\n#        [\n\n#XX            \"*.cc\",\n\n#            \"lib/*.cc\",\n\n#        ],\n\n#        exclude = [\n\n#            \"**/*_test.cc\",\n\n#        ],\n\n#    ) + if_cuda(\n\n#        glob([\n\n#            \"cuda/*.cc\",\n\n#        ]),\n\n#    ),\n\n#    hdrs = glob([\n\n#        \"*.h\",\n\n#        \"cuda/*.h\",\n\n#        \"lib/*.h\",\n\n#        \"platform/**/*.h\",\n\n#    ]),\n\n#    data = [\n\n#        \"//tensorflow/core:cuda\",\n\n#        \"//third_party/gpus/cuda:cublas\",\n\n#        \"//third_party/gpus/cuda:cudnn\",\n\n#    ],\n\n#    linkopts = [\n\n#        \"-ldl\",\n\n#    ],\n\n#    visibility = [\"//visibility:public\"],\n\n#    deps = [\n\n#        \"//tensorflow/core:lib\",\n\n#        \"//third_party/gpus/cuda:cuda_headers\",\n\n#    ],\n\n#    alwayslink = 1,\n\n#)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# tf_stream_executor library\n\n########################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#file(GLOB_RECURSE tf_stream_executor_test_srcs\n\n#    \"${tensorflow_source_dir}/tensorflow/stream_executor/*_test.cc\"\n\n#    \"${tensorflow_source_dir}/tensorflow/stream_executor/*_test.h\"\n\n#)\n\n#\n\n#list(REMOVE_ITEM tf_stream_executor_srcs ${tf_stream_executor_test_srcs}) \n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#target_link_libraries(tf_stream_executor\n\n#    ${CMAKE_THREAD_LIBS_INIT}\n\n#    ${PROTOBUF_LIBRARIES}\n\n#    tf_protos_cc\n\n#    tf_core_lib\n\n#)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tensorflow/contrib/cmake/tf_tools.cmake" : {
      "ObjectId" : "91776fd5c8201a6eed114b7bb457d972d34bfbb7",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tensorflow/contrib/cmake/tf_tutorials.cmake" : {
      "ObjectId" : "8a23d029054e904b5bd7a244557393199c650f41",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tensorflow/contrib/copy_graph/BUILD" : {
      "ObjectId" : "5a775c20224207c7b64c209ac642dd218b0205cd",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/crf/BUILD" : {
      "ObjectId" : "33c1323b481d2dca0457fd0600dac146d5f13f7c",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains classes to construct a CRF layer\n#   APIs here are meant to evolve over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/cudnn_rnn/BUILD" : {
      "ObjectId" : "2b7b177a30732875982ce9c281fd40ff1308f65d",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   A Cudnn RNN wrapper.\n#   APIs are meant to change over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/distributions/BUILD" : {
      "ObjectId" : "195ce090b2b0b7fc6d8f81cf484e8820b98cc32c",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains ops for statistical distributions (with pdf, cdf, sample, etc...).\n#   APIs here are meant to evolve over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# http://b/30441813",
        "Line" : 96,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "#http://b/31216497",
        "Line" : 125,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "#http://b/31455709",
        "Line" : 352,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 5
    },
    "tensorflow/contrib/factorization/BUILD" : {
      "ObjectId" : "6856c467cce422777e05abde8a07af2776ed8149",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Contains ops for factorization of data, including matrix factorization and\n# clustering.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Ops",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ops tests",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flaky: b/30756419",
        "Line" : 107,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# Kernel tests",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All files",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tensorflow/contrib/factorization/examples/BUILD" : {
      "ObjectId" : "363baa121ab3854a802ca3606e35597d31b35a57",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Example TensorFlow models using factorization ops.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/factorization/kernels/BUILD" : {
      "ObjectId" : "301ab4c95ead543627e425348342a01ca1161ae5",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# OpKernels for data factorization and clustering.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/ffmpeg/BUILD" : {
      "ObjectId" : "e146b530251f53967491831a0c8ad153547f6863",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Ops that process audio and/or video files using FFmpeg.\n# (https://www.ffmpeg.org/)",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/ffmpeg/default/BUILD" : {
      "ObjectId" : "584f9eb65417f94920cd33e402ba0cea0f0f1935",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Libraries and kernels for manipulating audio and video using FFmpeg.\n#   (https://www.ffmpeg.org)",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Header is shared between implementations.",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/framework/BUILD" : {
      "ObjectId" : "7aca707df3eb5081f4436ca94fb485a898185657",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# http://b/30468735",
        "Line" : 83,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/graph_editor/BUILD" : {
      "ObjectId" : "0ae04f208d13b0e28dc14d2edfb762ae7401d776",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/grid_rnn/BUILD" : {
      "ObjectId" : "021f852e6696af0abc817d4ac774767a407188cf",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains classes to construct GridRNN cells\n#   APIs here are meant to evolve over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/layers/BUILD" : {
      "ObjectId" : "a41c5efb6e97d0e8f7e1f031a4b1238b71e1f312",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# TODO(sibyl-Mooth6ku,ptucker): Understand why 'python/ops/_' is needed and fix it.",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# TODO(sibyl-Mooth6ku,ptucker): Understand why 'python/ops/_' is needed and fix it.",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tensorflow/contrib/layers/kernels/BUILD" : {
      "ObjectId" : "b2bc8a4ce763b360ca3de4504a773c68b554f8a7",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains kernels for layers.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/learn/BUILD" : {
      "ObjectId" : "40e014a4409ab256a3002bef234aab1a673699a1",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains TF Learn (aka Scikit Flow) sub-project with high level tensorflow API.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# http://b/31032996",
        "Line" : 399,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "# http://b/31934515",
        "Line" : 439,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : "# http://b/31934515",
        "Line" : 455,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# http://b/31032996",
        "Line" : 677,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 6
    },
    "tensorflow/contrib/learn/python/learn/datasets/BUILD" : {
      "ObjectId" : "43a4aa0d0d31bb7d40318462b3b7091858ff9426",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Prepare training and testing data.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/linear_optimizer/BUILD" : {
      "ObjectId" : "c607707bbb2affaeafe645790e313eefa0bc2452",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains ops to train linear models on top of TensorFlow.\n#   APIs here are meant to evolve over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/lookup/BUILD" : {
      "ObjectId" : "7183304111c239d94c2f27ba5f3c5a75117020e5",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/losses/BUILD" : {
      "ObjectId" : "8452132c456041dce6406bd4a40b8fc3e7bb794f",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/makefile/Makefile" : {
      "ObjectId" : "59eabe2bbb332fd430ce126faaa80e9e979c9406",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile compiles a library containing the C++ runtime for the TensorFlow\n\n# library. It's designed for use on platforms with limited resources where\n\n# running a full Bazel build would be prohibitive, or for cross-compilation onto\n\n# embedded systems. It includes only a bare-bones set of functionality.\n\n#\n\n# The default setup below is aimed at Unix-like devices, and should work on\n\n# modern Linux and OS X distributions without changes.\n\n#\n\n# If you have another platform, you'll need to take a careful look at the\n\n# compiler flags and folders defined below. They're separated into two sections,\n\n# the first for the host (the machine you're compiling on) and the second for\n\n# the target (the machine you want the program to run on).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Host compilation settings\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find where we're running from, so we can store generated files here.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Hexagon integration\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# HEXAGON_LIBS\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Try to figure out the host system\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Where compiled objects are stored.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Settings for the host compiler.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is at the end so any globally-installed frameworks like protobuf don't\n\n# override local versions in the source tree.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If we're on Linux, also link in the dl library.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If we're on a Pi, link in pthreads and dl\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# proto_text is a tool that converts protobufs into a form we can use more\n\n# compactly within TensorFlow. It's a bit like protoc, but is designed to\n\n# produce a much more minimal result so we can save binary space.\n\n# We have to build it on the host system first so that we can create files\n\n# that are needed for the runtime building.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The list of dependencies is derived from the Bazel build file by running\n\n# the gen_file_lists.sh script on a system with a working Bazel setup.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Locations of the intermediate files proto_text generates.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Target device settings.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Default to running on the same system we're compiling on.\n\n# You should override TARGET on the command line if you're cross-compiling, e.g.\n\n# make -f tensorflow/contrib/makefile/Makefile TARGET=ANDROID\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Where compiled objects are stored.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Settings for the target compiler.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This is at the end so any globally-installed frameworks like protobuf don't\n\n# override local versions in the source tree.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# If we're on OS X, make sure that globals aren't stripped out.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Make sure that we don't strip global constructors on Linux.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# If we're on Linux, also link in the dl library.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# If we're cross-compiling for the Raspberry Pi, use the right gcc.\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set up Android building\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Override NDK_ROOT on the command line with your own NDK location, e.g.\n\n# make -f tensorflow/contrib/makefile/Makefile TARGET=ANDROID \\\n# NDK_ROOT=/path/to/your/ndk\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# You need to have an Android version of the protobuf libraries compiled to link\n\n# in. The compile_android_protobuf.sh script may help.\n\n# TODO(satok): Support all CPU architectures (Currently only armv7 is supported)\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ANDROID\n",
        "Line" : 273,
        "CharPositionInLine" : 7
      },
      "27" : {
        "Text" : "# Settings for iOS.\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Override IOS_ARCH with ARMV7, ARMV7S, ARM64, or I386.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# This library is the main target for this makefile. It will contain a minimal\n\n# runtime that can be linked in to other programs.\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# A small example program that shows how to link against the library.\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# What sources we want to compile, derived from the main Bazel build using the\n\n# gen_file_lists.sh script.\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Remove duplicates (for version_info.cc)\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Filter out all the excluded files.\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Add in any extra files that don't fit the patterns easily\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Also include the op and kernel definitions.\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# File names of the intermediate files target compilation generates.\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# The target that's compiled if there's no command-line arguments.\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Rules for target compilation.\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Gathers together all the objects we've compiled into a single '.a' archive.\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Matches on the normal hand-written TensorFlow C++ source files.\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Compiles C++ source files that have been generated by protoc.\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Builds C++ code from proto files using protoc.\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Uses proto_text to generate minimal pb_text C++ files from protos.\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Compiles the C++ source files created by proto_text.\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Makes sure that we don't compile the protoc-generated C++ sources before they\n\n# and the proto_text files have been created.\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Host compilation rules.\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# For normal manually-created TensorFlow C++ source files.\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Compiles object code from protoc-built C++ source files.\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Ensures we wait until proto_text has generated the .h files from protos before\n\n# we compile the C++.\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Runs proto_text to generate C++ source files from protos.\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Compiles the C++ source files from protos using protoc.\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Gets rid of all generated files.\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Gets rid of all generated files except protobuf libs generated\n\n# before calling make.  This allows users not to recompile proto libs everytime.\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Gets rid of target files only, leaving the host alone. Also leaves the lib\n\n# directory untouched deliberately, so we can persist multiple architectures\n\n# across builds for iOS.\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55
    },
    "tensorflow/contrib/metrics/BUILD" : {
      "ObjectId" : "bee8b9567a3eb15595aa7c4d8ca17994dcb3bf60",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains ops for evaluation metrics and summary statistics.\n#   APIs here are meant to evolve over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# TODO(sibyl-Mooth6ku,ptucker): Understand why 'python/ops/_' is needed and fix it.",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/metrics/kernels/BUILD" : {
      "ObjectId" : "8b82bab53d65153ba05cefc5289067d82e843f6e",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains kernels for evaluation metrics and summary statistics.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/ndlstm/BUILD" : {
      "ObjectId" : "bbfa16321cef1ce9bb27dfb9925fc354b001ae46",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains classes implementing 1D and 2D LSTMs for image and signal\n#   processing problems.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# \"//tensorflow:tensorflow_py:tensorflow_google\",",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/opt/BUILD" : {
      "ObjectId" : "55314613c2bf6682c676e857a19fc2cf06604327",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Optimization routines.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# b/31055119",
        "Line" : 37,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# Flaky: b/29892493",
        "Line" : 50,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 4
    },
    "tensorflow/contrib/pi_examples/camera/Makefile" : {
      "ObjectId" : "d7dd3e131f3bff22d70508854cccdc094f833383",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile compiles the label_image example for the Raspberry Pi.\n\n# See tensorflow/contrib/pi_examples/README.md for full build instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find where we're running from, so we can store generated files here.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The location of the tensorflow/contrib/makefile directory.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where compiled objects are stored.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The expected locations of the TensorFlow library.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where the downloads have been stored.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The location of the compiled protobuf headers generated by TensorFlow.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The name of the output program we're compiling.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Settings for the target compiler.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# File names of the intermediate files target compilation generates.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The target that's compiled if there's no command-line arguments.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Rules for target compilation.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Matches on C++ source files.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Gets rid of all generated files.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tensorflow/contrib/pi_examples/label_image/Makefile" : {
      "ObjectId" : "511da285a9507222727b1ffe48f25a9ab6bf7304",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile compiles the label_image example for the Raspberry Pi.\n\n# See tensorflow/contrib/pi_examples/README.md for full build instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find where we're running from, so we can store generated files here.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The location of the tensorflow/contrib/makefile directory.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where compiled objects are stored.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The expected locations of the TensorFlow library.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where the downloads have been stored.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The location of the compiled protobuf headers generated by TensorFlow.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The name of the output program we're compiling.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Settings for the target compiler.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# File names of the intermediate files target compilation generates.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The target that's compiled if there's no command-line arguments.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Rules for target compilation.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Matches on C++ source files.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Gets rid of all generated files.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tensorflow/contrib/quantization/BUILD" : {
      "ObjectId" : "881349fda7eb701f96e5d41bea8b17d478e76aed",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/quantization/kernels/BUILD" : {
      "ObjectId" : "6be2ccaa07f8b0266d819eaa952f6fdf13383ea9",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   quantization-specific OpKernels",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/quantization/kernels/hexagon/BUILD" : {
      "ObjectId" : "b57a2ac1b593444c2b555598aa49bb3e3b67a5c2",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   quantization-specific OpKernels for hexagon",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/quantization/tools/BUILD" : {
      "ObjectId" : "82a13e04d6413e8c7e178228992ab015b3ddfad9",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Utilities for quantizing TensorFlow graphs to lower bit depths.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/rnn/BUILD" : {
      "ObjectId" : "e541d9ec3878c8031316e1cc8b1546e1a39e5640",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains ops to train linear models on top of TensorFlow.\n#   APIs here are meant to evolve over time.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/session_bundle/BUILD" : {
      "ObjectId" : "a1816ef7575e7c41bbe4fc751c91ae1eb6323313",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description: TensorFlow Serving session bundle.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 10,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# mobile not supported yet",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# This is a lite version of the session_bundle target that does not link in any\n# Tensorflow ops in order to minimize its size. Clients using this should link\n# any required ops manually.",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# mobile not supported yet",
        "Line" : 142,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Link in all registered kernels.",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# mobile not supported yet",
        "Line" : 212,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# This is a lite version of the signature target that does not link in any\n# Tensorflow ops in order to minimize its size. Clients using this should\n# link any required ops manually.",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# mobile not supported yet",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# mobile not supported yet",
        "Line" : 292,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Link in all registered kernels.",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets go here (must be at the end).",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "tensorflow/contrib/session_bundle/example/BUILD" : {
      "ObjectId" : "c2844ae321efd510524e194bf6f32e33319ab38e",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description: TensorFlow Serving session_bundle example.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# vardef(\"PYTHON_BIN_PATH\", \"/usr/bin/python\")",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/slim/BUILD" : {
      "ObjectId" : "266605b2c2978b1ec8f3860b8de7d8de5c350b07",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains the Slim library, including common neural networks and examples.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/slim/python/slim/data/BUILD" : {
      "ObjectId" : "573550f96db3fc5514d9e88a5260b4cf335a64b2",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains packages used for creating and loading datasets.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Disabled due to http://b/29190340",
        "Line" : 53,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 3
    },
    "tensorflow/contrib/slim/python/slim/nets/BUILD" : {
      "ObjectId" : "9d5b95c6b15dcaaf623a5e403ff4a89e69073e5d",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Contains typical networks definitions.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/specs/BUILD" : {
      "ObjectId" : "517fe4784c666ed466d961364dd789790bde06d8",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   A small domain-specific language (DSL) for defining deep learning networks.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/tensor_forest/BUILD" : {
      "ObjectId" : "d7f5e902bf6eb1dcb05bdec9e7318c277a6bf706",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# TensorFlow code for training random forests.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 2,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/tensor_forest/hybrid/BUILD" : {
      "ObjectId" : "0c99a09be3a415894bc7d52293dc8f4f43f9be3a",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# TensorFlow code for training hybrid neural network / decision tree models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/tensorboard/BUILD" : {
      "ObjectId" : "94b7222737ab16daa2186bd55f1e524d02678889",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorBoard module containing volatile or experimental code.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# For platform specific build config",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# API methods in `tf.contrib.tensorboard` package.",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# API methods in `tf.contrib.tensorboard.plugins` package.",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# API methods and protos in `tf.contrib.tensorboard.plugins.projector` package.",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tensorflow/contrib/testing/BUILD" : {
      "ObjectId" : "847081d178eda4af1301e44cc31b13dc1cae2c27",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/tfprof/BUILD" : {
      "ObjectId" : "d55bda1bd0547a183e6c56c5f50cf75144940c01",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow/contrib/tfprof/python/tools/tfprof/BUILD" : {
      "ObjectId" : "87a8311486fc76a672bb7dcdda36cac11d093182",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/tfprof/tools/tfprof/BUILD" : {
      "ObjectId" : "da161b1ffa159ae8a7665ddc4b0b149661c3cf9c",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/tfprof/tools/tfprof/internal/BUILD" : {
      "ObjectId" : "7ca95cf0cdef147f1faabb115652a983a77a47ca",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/training/BUILD" : {
      "ObjectId" : "81dc8e9064f426307bfaae773b3949c755adae49",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/contrib/util/BUILD" : {
      "ObjectId" : "7683cda79796fe489ad43e1f52de50bc007073e0",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   contains parts of TensorFlow that are experimental or unstable and which are not supported.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Convertor of a frozen graph definition into the memmapped format.",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/core/BUILD" : {
      "ObjectId" : "7d3c7c27979daeeb3568bca2766b8bc204e6f60f",
      "LastModified" : "2017-05-26T12:17:13Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow is a computational framework, primarily for use in machine\n# learning applications.\n#\n# Public targets:\n#\n# \":protos_all\" - exports all core TensorFlow protos\n#     \":protos_all_py_pb2\" - py_proto_library version (Google-internal)\n# \":lib\" - exports the public non-test headers for:\n#     platform/: Platform-specific code and external dependencies\n#     lib/: Low-level libraries that are not TensorFlow-specific\n# \":test\" - test equivalent of \":lib\".\n#     This is currently public, but may be made internal in the\n#     future.  Try to avoid depending on it.\n# \":framework\" - exports the public non-test headers for:\n#     util/: General low-level TensorFlow-specific libraries\n#     framework/: Support for adding new ops & kernels\n#     example/: Wrappers to simplify access to Example proto\n# \":ops\" - defines TensorFlow ops, but no implementations / kernels\n#     ops/: Standard ops\n#     user_ops/: User-supplied ops\n#     This aggregates a number of smaller op libraries (\":*_op_lib\")\n# \":core_cpu\" - exports the public non-test headers for:\n#     graph/: Support for graphs made up of ops\n#     common_runtime/: Common code for execution of graphs\n#     public/: Public APIs for running graphs\n# \":core\" - The code for \":core_cpu\" plus a GPU runtime\n# \":all_kernels\" - The cpu-specific kernels, plus gpu kernels if\n#     built with Cuda\n# \":tensorflow_opensource\" - The complete open-source package, including\n#      \":all_kernels\", \":core\", and a Session implementation.\n# \":tensorflow\" - \"tensorflow_opensource\" plus some Google-internal libraries.\n# \":testlib\" - TensorFlow-specific test support, e.g. utilities for testing\n#      kernels.\n# \":direct_session\" - An implementation of the Session interface that\n#      directly runs Graphs via the internal TensorFlow executor.\n#  \"framework_lite\" - Intended to be used by operator implementations\n#      (kernels) that can also be run outside the tensorflow runtime. This\n#      contains a small set of headers and utilities that can be used for core\n#      kernels, without bringing in libraries that can bloat code size (e.g.,\n#      logging is not included because using it will bring in a large amount of\n#      ostream code).\n#\n# \":example_parser_configuration\" -- A library for extracting the\n#      tensorflow.Example proto configuration from a Graph.\n#\n# Public Android targets:\n#\n# filegroup \":android_proto_srcs\" - Protos\n# filegroup \":android_srcs\" - Core sources\n# cc_library \":android_tensorflow_lib\" - Native library\n# cc_library \":android_tensorflow_lib_selective_registration\" - Native library\n#   supporting SELECTIVE_REGISTRATION feature.\n# portable_proto_library \":android_proto_lib\" (Google-internal)",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 61,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# For platform specific build config",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Public targets",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Minimal lib so that tools used for mobile compilation\n# don't have to depend on lib/platformlib.",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO(josh11b): Make many of these internal.",
        "Line" : 154,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# TODO(josh11b): make internal",
        "Line" : 170,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "# TODO(josh11b): make internal",
        "Line" : 172,
        "CharPositionInLine" : 33
      },
      "8" : {
        "Text" : "# TODO(josh11b): make internal",
        "Line" : 189,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# TODO(josh11b): make internal",
        "Line" : 190,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# TODO(josh11b): make internal",
        "Line" : 191,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# TODO(josh11b): make internal",
        "Line" : 208,
        "CharPositionInLine" : 32
      },
      "12" : {
        "Text" : "# Test support library needed for all tests\n# This is currently public, but may be made internal in the\n# future.  Try to avoid depending on it.",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# TODO(josh11b): Make internal?",
        "Line" : 255,
        "CharPositionInLine" : 37
      },
      "14" : {
        "Text" : "# Generates library per group of ops.",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# And one for all user ops",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Needed since alwayslink is broken in bazel b/27630669",
        "Line" : 428,
        "CharPositionInLine" : 21
      },
      "17" : {
        "Text" : "# Needed since alwayslink is broken in bazel b/27630669",
        "Line" : 441,
        "CharPositionInLine" : 21
      },
      "18" : {
        "Text" : "# Needed since alwayslink is broken in bazel b/27630669",
        "Line" : 457,
        "CharPositionInLine" : 21
      },
      "19" : {
        "Text" : "# Needed since alwayslink is broken in bazel b/27630669",
        "Line" : 470,
        "CharPositionInLine" : 21
      },
      "20" : {
        "Text" : "# This includes implementations of all kernels built into TensorFlow.",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Test support library needed for higher-level (TensorFlow-specific) tests",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# TODO(josh11b): Drop this once users are depending on\n# kernels:ops_testutil instead.",
        "Line" : 586,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# This is a link-only library to provide a DirectSession\n# implementation of the Session interface.",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Public Android targets",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Android-specific BUILD targets",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List of protos we want on android",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Core sources. Should eventually become identical to open source\n# sources.",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Native library support for Android applications.  Does not contain\n# operators, use :android_tensorflow_lib if you want full operator\n# support.\n#\n# Compiles to a trivial library on non-Android to prevent irrelevant\n# build errors. If not building this as part of an android_binary,\n# a command such as the following must be used:\n# bazel build -c opt tensorflow/core:android_tensorflow_lib \\\n# --crosstool_top=//external:android/crosstool \\\n# --cpu=armeabi-v7a \\\n# --host_crosstool_top=@bazel_tools//tools/cpp:toolchain",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Native library support for iOS applications.\n#\n# bazel  build --config=ios_x86_64 \\\n# //third_party/tensorflow/core:ios_tensorflow_lib",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Full TensorFlow library with operator support. Use this unless reducing\n# binary size (by packaging a reduced operator set) is a concern.",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Android library for use with the SELECTIVE_REGISTRATION feature.\n# Does not contain operators. In contrast to android_tensorflow_lib_lite,\n# this links in framework support for all types, relying on selective\n# registration of ops to prune code size.",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# TODO(andrewharp/nhua):\n# make more test-related sources portable e.g. \"platform/test.cc\",",
        "Line" : 829,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# This is like android_test_srcs, minus the things that are already in android_srcs.",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Portable library providing testing functionality for TensorFlow.",
        "Line" : 860,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Libraries with GPU facilities that are useful for writing kernels.",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Internal targets",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Protobuf deps already included through the \":lib_proto_parsing\"\n# dependency.",
        "Line" : 995,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# only needed for tests",
        "Line" : 1106,
        "CharPositionInLine" : 35
      },
      "39" : {
        "Text" : "# only needed for tests",
        "Line" : 1108,
        "CharPositionInLine" : 43
      },
      "40" : {
        "Text" : "# Like stream_executor library, but compiles without --config=cuda\n# and does not include any cuda dependencies.",
        "Line" : 1237,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# TODO(josh11b): Is this needed, or can we just use \":protos_all\"?",
        "Line" : 1251,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# This library is deprecated and no longer publicly available.\n# Do not add more uses of it.",
        "Line" : 1307,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Tests",
        "Line" : 1423,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Main program for tests",
        "Line" : 1467,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Low level library tests",
        "Line" : 1484,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Tests initialize large vectors",
        "Line" : 1596,
        "CharPositionInLine" : 43
      },
      "47" : {
        "Text" : "# higher level tests",
        "Line" : 1618,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# \"framework/rendezvous_test.cc\",  # flaky b/30476344",
        "Line" : 1645,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# GPU-related tests",
        "Line" : 1713,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# The GPU tracer leaks memory",
        "Line" : 1866,
        "CharPositionInLine" : 36
      },
      "51" : {
        "Text" : "# Test data",
        "Line" : 2200,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# PNG data",
        "Line" : 2204,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# JPEG data",
        "Line" : 2207,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# Corrupted JPEG files for tests",
        "Line" : 2210,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# -- hand-edited variant: stops at line 0",
        "Line" : 2213,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# -- hand-edited variant: stops at line 4",
        "Line" : 2215,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# -- hand-edited variant: stops after a restart marker",
        "Line" : 2217,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# GIF data",
        "Line" : 2219,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# GIF data with optimization",
        "Line" : 2221,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets go here (must be at the end).",
        "Line" : 2233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 61
    },
    "tensorflow/core/debug/BUILD" : {
      "ObjectId" : "2de7c0894e12c09dde0bded6db483c571f77481b",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow Debugger (tfdbg).\n#\n# Public Android targets:\n# filegroup \":android_srcs\" - Debugger source files for Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 12,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# For platform specific build config",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(cais): Confirm safe.",
        "Line" : 85,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tensorflow/core/distributed_runtime/BUILD" : {
      "ObjectId" : "69102b97859086a2841d536dd28862fec01a48c2",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# A distributed runtime for TensorFlow, which allows graph execution\n# to be distributed and performed in parallel across multiple\n# processes.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# For platform specific build config",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(mrry): Move executor_test.cc to ../common_runtime when once it no longer depends\n# on grpc_testlib.",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\"master_test.cc\",  # TODO(b/27683709): Re-enable when not flaky.",
        "Line" : 274,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "tensorflow/core/distributed_runtime/rpc/BUILD" : {
      "ObjectId" : "22c58f55a3bd4bc16af1f3f8c0c5d54d52a7b1dc",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   RPC communication interfaces and implementations for TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# For platform specific build config",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Seems to be needed since alwayslink is broken in bazel",
        "Line" : 255,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# Seems to be needed since alwayslink is broken in bazel",
        "Line" : 299,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "tensorflow/core/kernels/BUILD" : {
      "ObjectId" : "21c83568e53863c4c88682f3b6064bb09f84a8d9",
      "LastModified" : "2017-05-28T15:57:23Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Op kernel implementations for TensorFlow.\n#\n# Note: Any test that uses GPU support and which we would like to\n# benchmark should be linked statically so that it can be executed\n# from a py_binary or cuda_py_test test logger.  For such a test,\n# append \"_gpu\" to the test name to invoke the GPU benchmarks.  Example:\n#\n#   # for CPU tests\n#   $ bazel test -c opt --copt=-mavx //third_party/tensorflow/core/kernels:my_op_test\n#   # for GPU benchmarks\n#   $ bazel run -c opt --copt=-mavx --config=cuda //third_party/tensorflow/core/kernels:my_op_test_gpu -- --benchmarks=..\n#",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 16,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Public support libraries ----------------------------------------------------",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# \"//third_party:cocl\",",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#'//third_party:cocl',",
        "Line" : 324,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Private support libraries ---------------------------------------------------",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# OpKernel libraries ----------------------------------------------------------",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# '-Ithird_party/coriander/include/cocl',",
        "Line" : 471,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include'\n#],\n#copts = [\n#    '-Iexternal/protobuf/src',  # cant build constantop without this\n#],",
        "Line" : 475,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/include',\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#\"//third_party:cocl\",",
        "Line" : 742,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 1084,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#'//third_party:cocl',",
        "Line" : 1098,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# cwise_op_add\",\n#\"cwise_ops\",",
        "Line" : 1347,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# conv_grad_ops currently has to be built with conv_ops*.\n# TODO(josh11b, zhengxq): put these a separate libraries in \":nn\" below once\n# conv_ops_gpu.h has be separated into its own library.",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 1632,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#'//third_party:cocl',",
        "Line" : 1637,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 1810,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# \"//third_party:cocl\",",
        "Line" : 1816,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 1856,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#   \"//third_party:cocl\",",
        "Line" : 1862,
        "CharPositionInLine" : 5
      },
      "23" : {
        "Text" : "# Required for benchmarking",
        "Line" : 2012,
        "CharPositionInLine" : 48
      },
      "24" : {
        "Text" : "#    copts = [",
        "Line" : 2048,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#       '-Ithird_party/coriander/src/EasyCL',",
        "Line" : 2049,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "#      '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',",
        "Line" : 2050,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ],",
        "Line" : 2051,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "#    \"//third_party:cocl\",",
        "Line" : 2060,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#copts = [\n#    '-Ithird_party/coriander/src/EasyCL',\n#    '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include',\n#],",
        "Line" : 2102,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#\"//third_party:cocl\",",
        "Line" : 2112,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Android libraries -----------------------------------------------------------",
        "Line" : 2184,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Changes to the Android srcs here should be replicated in\n# tensorflow/contrib/makefile/tf_op_files.txt\n# LINT.IfChange",
        "Line" : 2186,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Core kernels we want on Android. Only a subset of kernels to keep\n# base library small.",
        "Line" : 2211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Other kernels we may want on Android.\n#\n# The kernels can be consumed as a whole or in two groups for\n# supporting separate compilation. Note that the split into groups\n# is entirely for improving compilation time, and not for\n# organizational reasons; you should not depend on any\n# of those groups independently.",
        "Line" : 2306,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# A file group which contains nearly all available operators which\n# may work on Android. This is intended to be used with selective\n# registration.",
        "Line" : 2456,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Ops already in android_srcs",
        "Line" : 2474,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# Ops which we are currently excluding because they are likely\n# not used on Android. Those ops also do not compile if included,\n# unless we add the additional deps they need.",
        "Line" : 2477,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "# Excluded due to experimental status:",
        "Line" : 2496,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "# Ops excluded because they do not build correctly for Android.\n# See b/29213790",
        "Line" : 2498,
        "CharPositionInLine" : 12
      },
      "40" : {
        "Text" : "# LINT.ThenChange(//tensorflow/contrib/makefile/tf_op_files.txt)",
        "Line" : 2505,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 2530,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "tensorflow/core/ops/compat/BUILD" : {
      "ObjectId" : "98a08a801d31314deebe048a935b76a7960ec583",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# For keeping the history of OpDefs for every major version of TensorFlow,\n# to validate that we don't make backwards-incompatible changes.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/core/platform/cloud/BUILD" : {
      "ObjectId" : "913a511d99bfa259e21c8ef18172e0536abcc0ea",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Cloud file system implementation.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Needed since alwayslink is broken in bazel b/27630669",
        "Line" : 35,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "tensorflow/core/platform/default/build_config/BUILD" : {
      "ObjectId" : "fe51a698d1597879f1a16d55cf055fc2ddf1ac21",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Platform-specific build configurations.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# OSX framework for device driver access",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Minimal lib so that tools used for mobile compilation\n# don't have to depend on platformlib.",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Minimal lib to be used by tensorflow/core:framework_lite.\n# This provides minimal support for writing operator implementations (kernels),\n# and excludes anything that can bloat binary size if used.",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tensorflow/core/platform/default/build_config_root.bzl" : {
      "ObjectId" : "439bf97a2cee4ec8b4b448831d804a4cea0dd1d2",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Lower-level functionality for build config.\n# The functions in this file might be referred by tensorflow.bzl. They have to\n# be separate to avoid cyclic references.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/core/platform/default/gpu/BUILD" : {
      "ObjectId" : "6b0c919a89a5e237a1106b97d0da6299253bbf48",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow/core/platform/default/platform.bzl" : {
      "ObjectId" : "20ab441bf43e19277c697f98f289ba80d755af48",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow/core/platform/hadoop/BUILD" : {
      "ObjectId" : "b7c436366556efbb607e7db53d11ab84a4022bc6",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Hadoop file system implementation.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# This test is set to manual because it requires downloading the Hadoop\n# distribution to run. To run this test:\n# 1. Ensure $JAVA_HOME is set.\n# 2. Download the binary Hadoop distribution from:\n#    http://hadoop.apache.org/releases.html\n# 3. Extract the Hadoop distribution and run:\n#    source libexec/hadoop-config.sh\n# 4. bazel test \\\n#      --test_env=LD_LIBRARY_PATH=$JAVA_HOME/jre/lib/amd64/server \\\n#      --test_env=HADOOP_HDFS_HOME=$HADOOP_HDFS_HOME \\\n#      --test_env=CLASSPATH=$($HADOOP_HDFS_HOME/bin/hadoop classpath --glob) \\\n#      --test_strategy=local \\\n#      :hadoop_file_system_test",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/core/util/ctc/BUILD" : {
      "ObjectId" : "78d0bcc958ced0baaff48db4eb1b6910f53a650d",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description: CTC, Connectionist Temporal Classification,\n# is a type of seq2seq loss.  The libraries in this directory\n# implement the CTC loss and a number of CTC decoders.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/core/util/tensor_bundle/BUILD" : {
      "ObjectId" : "493de9721ce43b026d9d762f18b8e92f158ceb29",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Tensor bundle: a module to efficiently serialize and deserialize tensors.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# To be exported to tensorflow/core:android_srcs.",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tensorflow/examples/android/BUILD" : {
      "ObjectId" : "3e444877c5940c14387d41731ed82552ba4e9fe0",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   TensorFlow camera demo app for Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Identical Code Folding",
        "Line" : 28,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# This line must be directly followed by LINKER_SCRIPT.",
        "Line" : 29,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 4
    },
    "tensorflow/examples/how_tos/reading_data/BUILD" : {
      "ObjectId" : "c1e773d90561a1974cb0d8f1a0e63c0752407e98",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example MNIST TensorFlow models for demonstrating data reading.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/examples/image_retraining/BUILD" : {
      "ObjectId" : "4cf6adecb9494aed9a22466dcc5ea7f8a1eb9135",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Transfer learning example for TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/examples/label_image/BUILD" : {
      "ObjectId" : "021372fa7b853585608c3246cac6a8e449d7e6a5",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   TensorFlow C++ inference example for labeling images.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/examples/learn/BUILD" : {
      "ObjectId" : "2966dc79761ef3d74f9366b202191e36e94f7f89",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Examples of tf.learn usage",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/examples/skflow/BUILD" : {
      "ObjectId" : "25e9e6eaf39bde3a960bc1798b8918e5054fcf0c",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Example models (using skflow).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/examples/tutorials/estimators/BUILD" : {
      "ObjectId" : "cb4972b36d2b24ef8a1648eb460925303afd24ba",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Example Estimator model",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/examples/tutorials/mnist/BUILD" : {
      "ObjectId" : "60fd433a206e85bbc831401e364d4926fa42a655",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for MNIST used in tutorials",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# http://b/29184009",
        "Line" : 111,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 3
    },
    "tensorflow/examples/tutorials/word2vec/BUILD" : {
      "ObjectId" : "03e8c845a5769cef0a074aadf66197168903c3e0",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow model for word2vec",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/g3doc/how_tos/adding_an_op/BUILD" : {
      "ObjectId" : "e415662a03cd8dbb5d7e2403d7ca13fab363c44d",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Code examples referenced by adding_an_op",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 12,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/g3doc/tutorials/BUILD" : {
      "ObjectId" : "5642ade160e8720ef45c21d9b3e9f63055add2f3",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Top-level tutorials files",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/go/BUILD" : {
      "ObjectId" : "d69233f4fe1cc12b596bb03e22df5b1900caf585",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Go API for TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/models/embedding/BUILD" : {
      "ObjectId" : "53fe11ce8da21ff737d75866399fe1960333336d",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow model for word2vec",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# b/25864127",
        "Line" : 58,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 3
    },
    "tensorflow/models/image/alexnet/BUILD" : {
      "ObjectId" : "bbe29da6f5c8f9180fe18f245a581040a74c0f45",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Benchmark for AlexNet.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/models/image/cifar10/BUILD" : {
      "ObjectId" : "9cf574f605e0ee27a68ee0d23cbead0f2d530889",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for CIFAR-10",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/models/image/imagenet/BUILD" : {
      "ObjectId" : "b3ff258eb4e07a88b70fb8053f24a1e69d68219b",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for ImageNet.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/models/image/mnist/BUILD" : {
      "ObjectId" : "a9b6d78e5e6e8c24ab4ddda2ca272031b685a1ab",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example TensorFlow models for MNIST that achieves high accuracy",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/models/rnn/BUILD" : {
      "ObjectId" : "118884fd28dfd7c639c4d816c2910cc2237b8eec",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example RNN models, including language models and sequence-to-sequence models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/models/rnn/ptb/BUILD" : {
      "ObjectId" : "0caeab0865dcb3e1a4738cb08750f2c3ebf4d665",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Python support for TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/models/rnn/translate/BUILD" : {
      "ObjectId" : "676e2fee3f794f59f93087e8249dedb23b41b9b2",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Example neural translation models.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/python/BUILD" : {
      "ObjectId" : "5b0afbba9aeb9d9d7787a2d5d3e2e828c5538f20",
      "LastModified" : "2017-05-22T11:05:45Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Python support for TensorFlow.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 9,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# What is needed for tf_gen_op_wrapper_py.",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# load(\"//third_party/py/cython:build_defs.bzl\", \"pyx_library\")",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## This target is deprecated, it contributes to massive dependency bloat.\n## If you are adding a test to this directory, consider depending on the\n## individual library targets your test depends on. If you are a client,\n## you should be importing the rules in third_party/py/tensorflow to get\n## access to TensorFlow.",
        "Line" : 1330,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \":construction_fails_op\",",
        "Line" : 1778,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# \":test_ops_kernels\",",
        "Line" : 1780,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Just used by tests.",
        "Line" : 1902,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# http://b/30379628\n# http://b/30379628",
        "Line" : 2003,
        "CharPositionInLine" : 19
      },
      "9" : {
        "Text" : "# http://b/30782289\n# http://b/30782289",
        "Line" : 2017,
        "CharPositionInLine" : 19
      },
      "10" : {
        "Text" : "# TODO(irving): Can this be made small?",
        "Line" : 2027,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 11
    },
    "tensorflow/python/build_defs.bzl" : {
      "ObjectId" : "71adab99e059bbe55d050f585678f87fa77cea9b",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- Python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intended only for use within this directory.\n# Generated python wrappers are private visibility, users should depend on the\n# full python code that incorporates the wrappers.  The generated targets have\n# a _gen suffix, so that the full python version can use the bare name.\n# We also hard code the hidden_file here to reduce duplication.\n#\n# We should consider moving the \"out\" default pattern into here, many other\n# consumers of the tf_gen_op_wrapper_py rule would be simplified if we don't \n# hard code the ops/ directory.",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Strip of the _gen",
        "Line" : 19,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 3
    },
    "tensorflow/python/debug/BUILD" : {
      "ObjectId" : "a8d54c3d31eff2de30939f02ad06a1897373b35d",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Python Client Code of the TensorFlow Debugger (tfdbg).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 12,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# TODO(cais): Change in buildozer.yml.",
        "Line" : 87,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : "# TODO(cais): Buildozer rule.",
        "Line" : 247,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 4
    },
    "tensorflow/python/kernel_tests/BUILD" : {
      "ObjectId" : "94168433ae3a5c01e91454eb568d199a524c3487",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tests of TensorFlow kernels written using the Python API.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# CPU only tests should use tf_py_test, GPU tests use cuda_py_test\n# Please avoid the py_tests and cuda_py_tests (plural) while we\n# fix the shared/overbroad dependencies.",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://b/30603882",
        "Line" : 1124,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "# http://b/30600785",
        "Line" : 1151,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "# NOTE: This is not run.",
        "Line" : 1187,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "# TODO(gpapan): Revisit the gradient of extract_image_patches_op to resolve\n# http://b/31080670.",
        "Line" : 1239,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# http://b/31080670",
        "Line" : 1248,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# http://b/30445083",
        "Line" : 1258,
        "CharPositionInLine" : 24
      },
      "9" : {
        "Text" : "# b/30226163",
        "Line" : 1275,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 10
    },
    "tensorflow/python/saved_model/BUILD" : {
      "ObjectId" : "3d7e9e810cabd5008177efdf887bdd674dff6868",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow SavedModel.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/python/saved_model/example/BUILD" : {
      "ObjectId" : "d49d2cb872d7176546b038c3083a787b1acf2992",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description: SavedModel half plus two example.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 10,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/python/tools/BUILD" : {
      "ObjectId" : "cf944423087a74598491d460ba6260d64ca96477",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tools for manipulating TensorFlow graphs.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/stream_executor/BUILD" : {
      "ObjectId" : "e513b4163277e01c178bccad0722bcec87144135",
      "LastModified" : "2017-05-28T15:57:23Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# ) + if_cuda(\n#     glob([\n#         \"cuda/*.cc\",\n#     ]),",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "tensorflow/tensorboard/BUILD" : {
      "ObjectId" : "7408db8b9b75020cb2d336f6d717fdaf310bb4c0",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorBoard, a dashboard for investigating TensorFlow",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "###### PLUGINS ######",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Plugins don't have their own packages (BUILD files) because we want to\n# have only one BUILD file since each BUILD file needs special rewrite rules\n# in the git world.",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Embedding projector ##",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# All registered plugins go in here.",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "tensorflow/tensorboard/app/BUILD" : {
      "ObjectId" : "9afcd23e9e72a010b71bd9c39a1b52f3d3542a4b",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Build rules for building the HTML/JS necessary for TensorBoard.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tensorboard/backend/BUILD" : {
      "ObjectId" : "47b051a696eee69fa4f08399765dc1577d6985a8",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorBoard, a dashboard for investigating TensorFlow",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tensorboard/bower/BUILD" : {
      "ObjectId" : "f5445750971f64d0449f8b517a3a850faf38baee",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# AUTOGENERATED FILE by tensorboard_bower_dependency_sync.py",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/tensorboard/components/BUILD" : {
      "ObjectId" : "faa8f23390f5b0d3bf1afe387b97122317f5ba0c",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow/tensorboard/components/vz-data-summary/BUILD" : {
      "ObjectId" : "9743d70d947c13edf455b9306e60757f8b104d68",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the 'License');\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an 'AS IS' BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# =============================================================================",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Description:\n# Package for the data-summary vz-element.",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Apache 2.0",
        "Line" : 20,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 3
    },
    "tensorflow/tensorboard/components/vz-projector/BUILD" : {
      "ObjectId" : "8c222be10e919a047216dc906aeec59a0ef2973a",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Package for the Embedding Projector component.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tensorboard/lib/BUILD" : {
      "ObjectId" : "9c497396c68bb68c97b71bba60ff56ec44639741",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# BUILD rules for the static resources in TensorBoard.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tensorboard/lib/python/BUILD" : {
      "ObjectId" : "955aac9ffdb76a6cc167ec432f90eb44b4182aa1",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Public utilities from TensorBoard, a dashboard for investigating TensorFlow",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tensorboard/scripts/BUILD" : {
      "ObjectId" : "f3850c16a075d75406027c2e099c773c5211123a",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Some useful scripts that are bundled with TensorBoard.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tensorflow.bzl" : {
      "ObjectId" : "fa82a6974abed3a90477e43834afff6a5a5f4bd5",
      "LastModified" : "2017-05-28T15:57:23Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- Python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse the bazel version string from `native.bazel_version`.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove commit from version.",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Split into (release, date) parts and only return the release\n# as a tuple of integers.",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Turn \"release\" into a tuple of strings",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Given a source file, generate a test name.\n# i.e. \"common_runtime/direct_session_test.cc\" becomes\n#      \"common_runtime_direct_session_test\"",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check that a specific bazel version is being used.",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Return the options to use for a C++ library or binary build.\n# Uses the \":optmode\" config_setting to pick the options.",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List of proto files for android builds",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# As tf_android_core_proto_sources, but paths relative to\n# //third_party/tensorflow/core.",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Returns the list of pb.h and proto.h headers that are generated for\n# tf_android_core_proto_sources().",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Returns the list of protos for which proto_text headers should be generated.",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Given a list of \"op_lib_names\" (a list of files in the ops directory\n# without their .cc extensions), generate a library for that file.",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make library out of each op so it can also be used to generate wrappers\n# for various languages.",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Construct an op generator binary for these ops.",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Faster to link this one-time-use binary dynamically",
        "Line" : 198,
        "CharPositionInLine" : 24
      },
      "16" : {
        "Text" : "# Run the op generator.",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Given a list of \"op_lib_names\" (a list of files in the ops directory\n# without their .cc extensions), generate individual C++ .cc and .h\n# files for each of the ops files mentioned, and then generate a\n# single cc_library called \"name\" that combines all the\n# generated C++ code.\n#\n# For example, for:\n#  tf_gen_op_wrappers_cc(\"tf_ops_lib\", [ \"array_ops\", \"math_ops\" ])\n#\n#\n# This will ultimately generate ops/* files and a library like:\n#\n# cc_library(name = \"tf_ops_lib\",\n#            srcs = [ \"ops/array_ops.cc\",\n#                     \"ops/math_ops.cc\" ],\n#            hdrs = [ \"ops/array_ops.h\",\n#                     \"ops/math_ops.h\" ],\n#            deps = [ ... ])",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Invoke this rule in .../tensorflow/python to build the wrapper library.",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Construct a cc_binary containing the specified ops.",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Faster to link this one-time-use binary dynamically",
        "Line" : 276,
        "CharPositionInLine" : 24
      },
      "21" : {
        "Text" : "# Invoke the previous cc_binary to generate a python file.",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# `hidden` is a list of op names to be hidden in the generated module.",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# `hidden_file` is file containing a list of op names to be hidden in the\n# generated module.",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# No ops should be hidden in the generated module.",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Make a py_library out of the generated python file.",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Define a bazel macro that creates cc_test for tensorflow.\n# TODO(opensource): we need to enable this to work around the hidden symbol\n# __cudaRegisterFatBinary error. Need more investigations.",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Part of the testing workflow requires a distinguishable name for the build\n# rules that involve a GPU, even if otherwise identical to the base rule.",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create a cc_test for each of the tensorflow tests listed in \"tests\"",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "\"\"\"Gets the appropriate set of copts for (maybe) CUDA compilation.\n\n    If we're doing CUDA compilation, returns copts for our particular CUDA\n    compiler.  If we're not doing CUDA compilation, returns an empty list.\n\n    \"\"\"",
        "Line" : 403,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Pass -O3 when building CUDA code with clang; some important\n# optimizations are not enabled at O2.",
        "Line" : 428,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Build defs for TensorFlow kernels",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# When this target is built using --config=cuda, a cc_library is built\n# that passes -DGOOGLE_CUDA=1 and '-x cuda', linking in additional\n# libraries needed by GPU kernels.",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "\"\"\"Generate a cc_library with a conditional set of CUDA dependencies.\n\n  When the library is built with --config=cuda:\n\n  - both deps and cuda_deps are used as dependencies\n  - the gcudacc runtime is added as a dependency (if necessary)\n  - The library additionally passes -DGOOGLE_CUDA=1 to the list of copts\n\n  Args:\n  - cuda_deps: BUILD dependencies which will be linked if and only if:\n      '--config=cuda' is passed to the bazel command line.\n  - deps: dependencies which will always be linked.\n  - copts: copts always passed to the cc_library.\n  - kwargs: Any other argument to cc_library.\n  \"\"\"",
        "Line" : 458,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "\"\"\"\n  kwargs is eg:\n  {\"alwayslink\": 1, \"hdrs\": [], \"linkstatic\": 1, \"name\": \"base64_ops\", \"srcs\": [\"base64_ops.cc\"]}.\n  \"\"\"",
        "Line" : 481,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "\"\"\"A rule to build a TensorFlow OpKernel.\n\n  May either specify srcs/hdrs or prefix.  Similar to tf_cuda_library,\n  but with alwayslink=1 by default.  If prefix is specified:\n    * prefix*.cc (except *.cu.cc) is added to srcs\n    * prefix*.h (except *.cu.h) is added to hdrs\n    * prefix*.cu.cc and prefix*.h (including *.cu.h) are added to gpu_srcs.\n  With the exception that test files are excluded.\n  For example, with prefix = \"cast_op\",\n    * srcs = [\"cast_op.cc\"]\n    * hdrs = [\"cast_op.h\"]\n    * gpu_srcs = [\"cast_op_gpu.cu.cc\", \"cast_op.h\"]\n    * \"cast_op_test.cc\" is excluded\n  With prefix = \"cwise_op\"\n    * srcs = [\"cwise_op_abs.cc\", ..., \"cwise_op_tanh.cc\"],\n    * hdrs = [\"cwise_ops.h\", \"cwise_ops_common.h\"],\n    * gpu_srcs = [\"cwise_op_gpu_abs.cu.cc\", ..., \"cwise_op_gpu_tanh.cu.cc\",\n                  \"cwise_ops.h\", \"cwise_ops_common.h\",\n                  \"cwise_ops_gpu_common.cu.h\"]\n    * \"cwise_ops_test.cc\" is excluded\n  \"\"\"",
        "Line" : 492,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# kwargs['copts'] = []",
        "Line" : 538,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# kwargs['copts']\n# kwargs['copts'] += ['-Iexternal/eigen_archive', '-Ithird_party/coriander/include/cocl', '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include']",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# copts = tf_copts() + ['-Iexternal/eigen_archive', '-Ithird_party/coriander/include/cocl', '-Ithird_party/coriander/src/EasyCL/thirdparty/clew/include'],\n# copts = tf_copts(),",
        "Line" : 555,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Needed since alwayslink is broken in bazel b/27630669",
        "Line" : 558,
        "CharPositionInLine" : 24
      },
      "40" : {
        "Text" : "\"\"\"Makes one target per prefix, and one target that includes them all.\"\"\"",
        "Line" : 564,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Bazel rules for building swig files.",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# swig_templates",
        "Line" : 616,
        "CharPositionInLine" : 34
      },
      "43" : {
        "Text" : "# Bazel rule for collecting the header files that a target depends on.",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Create a header only library that includes all the headers exported by\n# the libraries in deps.",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Traverse the dependency graph along the \"deps\" attribute of the\n# target and return a struct with one field called 'tf_collected_deps'.\n# tf_collected_deps will be the union of the deps of the current target\n# and the tf_collected_deps of the dependencies of this target.",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# This rule checks that the transitive dependencies of targets listed\n# in the 'deps' attribute don't depend on the targets listed in\n# the 'disallowed_deps' attribute.",
        "Line" : 694,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Helper to build a dynamic library (.so) from the sources containing\n# implementations of custom ops and kernels.",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# No extension link opts",
        "Line" : 760,
        "CharPositionInLine" : 13
      },
      "49" : {
        "Text" : "# No extension c opts",
        "Line" : 763,
        "CharPositionInLine" : 13
      },
      "50" : {
        "Text" : "# Convert a rule name such as foo/bar/baz to foo/bar/_baz.so\n# and use that as the name for the rule producing the .so file.",
        "Line" : 767,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Creates a genrule named <name> for running tools/proto_text's generator to\n# make the proto_text functions, for the protos passed in <srcs>.\n#\n# Return a struct with fields (hdrs, srcs) containing the names of the\n# generated files.",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "tensorflow/tools/benchmark/BUILD" : {
      "ObjectId" : "657704f07714560fe9458d98ce69d74395170967",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Benchmark utility that can run on desktop and Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# This binary may be built for either desktop or Android.\n# A typical Android build command will look like the following:\n# bazel build -c opt tensorflow/core:android_tensorflow_lib \\\n# --crosstool_top=//external:android/crosstool \\\n# --cpu=armeabi-v7a \\\n# --host_crosstool_top=@bazel_tools//tools/cpp:toolchain",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Identical Code Folding",
        "Line" : 81,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# Exclude syms in all libs from auto export",
        "Line" : 82,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 5
    },
    "tensorflow/tools/ci_build/Dockerfile.cmake" : {
      "ObjectId" : "8a28fe6cdf95956fa88a264f11174839b94a528d",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy and run the install scripts.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install golang\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tensorflow/tools/cocl/BUILD" : {
      "ObjectId" : "5dc24f7b609df7aa6d330e46b4915d299c980e2c",
      "LastModified" : "2016-11-09T02:00:28Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tensorflow/tools/dist_test/server/BUILD" : {
      "ObjectId" : "19f52f8208d6c39ee33977c3ac1cc7ce851dd111",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# TensorFlow GRPC distributed runtime server and tests",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tools/docker/BUILD" : {
      "ObjectId" : "7d5ae0a94d8f969585d8fb8e57892c165e35ba47",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Various tools and rules related to the TensorFlow docker container.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tools/docker/notebooks/BUILD" : {
      "ObjectId" : "89f473df4bfdda479fa25b8e10b84c4430105cc9",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tensorflow/tools/docs/BUILD" : {
      "ObjectId" : "4c37c291d0419a3c1070e9d715bf79d699797ff3",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Doc generator",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 4,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tools/git/BUILD" : {
      "ObjectId" : "f502c8dde07de6d9f480a1b9d8690fd8f03de264",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Contains script to generate tensorflow/core/util/version_info.cc\n# Also contains information about git repository deposited by configure\n# in gen/...",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/tools/graph_transforms/BUILD" : {
      "ObjectId" : "d0aad582223c5ffcc9146fe629b479c7cc2e9ae7",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Utilities that perform useful transformations on graphs",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/tools/pip_package/BUILD" : {
      "ObjectId" : "dea9159ce63c268e482b00ec429af5945f98e0bc",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#  Tools for building the TensorFlow pip package.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tensorflow/tools/proto_text/BUILD" : {
      "ObjectId" : "d439c9abfdc491620bdcfb6bfce01314d9203c76",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# This package provides build-time generation of proto3 text format functions\n# (ProtoDebugString, ProtoShortDebugString, and ProtoParseFromString) which\n# provide equivalent functionality as proto.DebugString, proto.ShortDebugString,\n# and TextFormat parsing, but can be used with protos generated with\n# LITE_RUNTIME.\n#\n# Note that proto3 well-known types (e.g. Any) are not handled in a special way\n# by the generated code.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 13,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# For platform specific build config",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n# Google-internal targets.  These must be at the end for syncrepo.",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tensorflow/tools/test/BUILD" : {
      "ObjectId" : "b4dc3c71337606b72dfbe727f7abb2f92a8033a0",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# Tools for testing",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 12,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Unit test that calls run_and_gather_logs on a benchmark, and\n# prints the result.\n#cuda_py_test(\n#    name = \"run_and_gather_logs_test\",\n#    srcs = [\"run_and_gather_logs.py\"],\n#    additional_deps = [\n#        \":run_and_gather_logs\",\n#    ],\n#    args = [\n#        \"--test_name=\" + \"//tensorflow/core/kernels:cast_op_test\",\n#        \"--test_args=\" + \"'--benchmarks=BM_cpu_float'\",\n#    ],\n#    data = [\n#        \"//tensorflow/core/kernels:cast_op_test\",\n#    ],\n#    main = \"run_and_gather_logs.py\",\n#)",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tensorflow/tools/test/performance.bzl" : {
      "ObjectId" : "83dace61e4837a45f2f43e8735e4bea0522069fe",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- Python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a benchmark test target of a TensorFlow C++ test (tf_cc_*_test)",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a benchmark test target of a TensorFlow python test (*py_tests)",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For now generating a py benchmark is the same as generating a C++\n# benchmark target. In the future this may change, so we have\n# two macros just in case",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "tensorflow/user_ops/BUILD" : {
      "ObjectId" : "89c8f02d11ce3e3095cc12ee614f3048c2e0c9e2",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# An example for custom op and kernel defined as a TensorFlow plugin.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tensorflow/workspace.bzl" : {
      "ObjectId" : "63b890c4e7c2e93575a57c23d711f9ac54a7874d",
      "LastModified" : "2018-02-06T08:18:33Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# TensorFlow external dependencies that can be loaded in WORKSPACE files.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If TensorFlow is linked as a submodule.\n# path_prefix and tf_repo_name are no longer used.",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These lines need to be changed when updating Eigen. They are parsed from\n# this file by the cmake and make builds to determine the eigen version and\n# hash.",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# grpc expects //external:protobuf_clib and //external:protobuf_compiler\n# to point to the protobuf's compiler library.",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# protobuf expects //external:grpc_cpp_plugin to point to grpc's\n# C++ plugin code generator.",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# 2016-07-11",
        "Line" : 182,
        "CharPositionInLine" : 105
      },
      "CommentCount" : 6
    },
    "third_party/BUILD" : {
      "ObjectId" : "a6fae5e92a09823db4d10dfabb2df2289c163336",
      "LastModified" : "2017-05-28T15:57:23Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/eigen3/BUILD" : {
      "ObjectId" : "9ab7aadf87a42f10bdf231379d6b8734b651c76f",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Eigen is a C++ template library for linear algebra: vectors,\n#   matrices, and related algorithms.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: Eigen is an MPL2 library that includes GPL v3 and LGPL v2.1+ code.\n#       We've taken special care to not reference any restricted code.",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# MPL2",
        "Line" : 8,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# Portions BSD",
        "Line" : 9,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 4
    },
    "third_party/gpus/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/gpus/crosstool/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/gpus/cuda/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/gpus/cuda_configure.bzl" : {
      "ObjectId" : "90729463bd39740c6742a269229cf244c892a3b7",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- Python -*-\n\"\"\"Repository rule for CUDA autoconfiguration.\n\n`cuda_configure` depends on the following environment variables:\n\n  * `TF_NEED_CUDA`: Whether to enable building with CUDA.\n  * `GCC_HOST_COMPILER_PATH`: The GCC host compiler path\n  * `CUDA_TOOLKIT_PATH`: The path to the CUDA toolkit. Default is\n    `/usr/local/cuda`.\n  * `TF_CUDA_VERSION`: The version of the CUDA toolkit. If this is blank, then\n    use the system default.\n  * `TF_CUDNN_VERSION`: The version of the cuDNN library.\n  * `CUDNN_INSTALL_PATH`: The path to the cuDNN library. Default is\n    `/usr/local/cuda`.\n  * `TF_CUDA_COMPUTE_CAPABILITIES`: The CUDA compute capabilities. Default is\n    `3.5,5.2`.\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO(dzc): Once these functions have been factored out of Bazel's\n# cc_configure.bzl, load them from @bazel_tools instead.\n# BEGIN cc_configure common functions.",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Find the C++ compiler.\"\"\"",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Absolute path, maybe we should make this suported by our which function.",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# OSX add \" (framework directory)\" at the end of line, strip it.",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "\"\"\"Convert path returned by cc -E xc++ in a complete path.\"\"\"",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "\"\"\"Compute the list of default C++ include directories.\"\"\"",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "\"\"\"Output failure message when auto configuration fails.\"\"\"",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# END cc_configure common functions (see TODO above).",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "\"\"\"Generates the cxx_builtin_include_directory entries for gcc inc dirs.\n\n  Args:\n    repository_ctx: The repository context.\n    cc: The path to the gcc host compiler.\n\n  Returns:\n    A string containing the cxx_builtin_include_directory for each of the gcc\n    host compiler include directories, which can be added to the CROSSTOOL\n    file.\n  \"\"\"",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "\"\"\"Finds the cuda toolkit directory.\n\n  Args:\n    repository_ctx: The repository context.\n    cuda_version: The cuda toolkit version.\n\n  Returns:\n    A speculative real path of the cuda toolkit install directory.\n  \"\"\"",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Handle typical configuration where the real path is\n# <basedir>/cuda-<version> and the provided path is <basedir>/cuda.",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Returns the non-versioned path if cuda version is not provided or if the\n# installation does not use a cuda- directory, such as on ArchLinux where\n# CUDA installs directly to /opt/cuda.",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "\"\"\"Finds the cudnn install directory.\"\"\"",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "\"\"\"Detects the cuda version.\"\"\"",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "\"\"\"Detects the cudnn version.\"\"\"",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "\"\"\"Returns a list of strings representing cuda compute capabilities.\"\"\"",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Workaround for Skylark's lack of support for regex. This check should\n# be equivalent to checking:\n#     if re.match(\"[0-9]+.[0-9]+\", capability) == None:",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "\"\"\"Returns a struct containing platform-specific paths.\n\n  Args:\n    cpu_value: The string representing the host OS.\n    cuda_version: The cuda version as returned by _cuda_version\n    cudnn_version: The cudnn version as returned by _cudnn_version\n  \"\"\"",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "\"\"\"Checks if cuda_lib exists under cuda_toolkit_path or fail if it doesn't.\n\n  Args:\n    repository_ctx: The repository context.\n    cuda_toolkit_path: The cuda toolkit directory containing the cuda libraries.\n    cuda_lib: The library to look for under cuda_toolkit_path.\n  \"\"\"",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "\"\"\"Checks whether the directory exists and fail if it does not.\n\n  Args:\n    repository_ctx: The repository context.\n    directory: The directory to check the existence of.\n  \"\"\"",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "\"\"\"Returns the path to the directory containing cudnn.h\n\n  Args:\n    repository_ctx: The repository context.\n    cudnn_install_basedir: The cudnn install directory as returned by\n      _cudnn_install_basedir.\n\n  Returns:\n    The path of the directory containing the cudnn header.\n  \"\"\"",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "\"\"\"Returns the path to the directory containing libcudnn\n\n  Args:\n    repository_ctx: The repository context.\n    cudnn_install_basedir: The cudnn install dir as returned by\n      _cudnn_install_basedir.\n    symlink_files: The symlink files as returned by _cuda_symlink_files.\n\n  Returns:\n    The path of the directory containing the cudnn libraries.\n  \"\"\"",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "\"\"\"Returns additional platform-specific linkopts for cudart.\"\"\"",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "\"\"\"\ndef error_gpu_disabled():\n  fail(\"ERROR: Building with --config=cuda but TensorFlow is not configured \" +\n       \"to build with GPU support. Please re-run ./configure and enter 'Y' \" +\n       \"at the prompt to build with GPU support.\")\n\n  native.genrule(\n      name = \"error_gen_crosstool\",\n      outs = [\"CROSSTOOL\"],\n      cmd = \"echo 'Should not be run.' && exit 1\",\n  )\n\n  native.filegroup(\n      name = \"crosstool\",\n      srcs = [\":CROSSTOOL\"],\n      output_licenses = [\"unencumbered\"],\n  )\n\"\"\"",
        "Line" : 339,
        "CharPositionInLine" : 28
      },
      "25" : {
        "Text" : "\"\"\"\nload(\"//crosstool:error_gpu_disabled.bzl\", \"error_gpu_disabled\")\n\nerror_gpu_disabled()\n\"\"\"",
        "Line" : 359,
        "CharPositionInLine" : 30
      },
      "26" : {
        "Text" : "# Set up BUILD file for cuda/.",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Create dummy files for the CUDA toolkit since they are still required by\n# tensorflow/core/platform/default/build_config:cuda.",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Set up cuda_config.h, which is used by\n# tensorflow/stream_executor/dso_loader.cc.",
        "Line" : 398,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# If cuda_configure is not configured to build with GPU support, and the user\n# attempts to build with --config=cuda, add a dummy build rule to intercept\n# this and fail with an actionable error message.",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "\"\"\"Symlinks all the files in a directory.\n\n  Args:\n    repository_ctx: The repository context.\n    src_dir: The source directory.\n    dest_dir: The destination directory to create the symlinks in.\n  \"\"\"",
        "Line" : 417,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "\"\"\"Creates the repository containing files set up to build with CUDA.\"\"\"",
        "Line" : 430,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Set up symbolic links for the cuda toolkit. We link at the individual file\n# level not at the directory level. This is because the external library may\n# have a different file layout from our desired structure.",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Set up the symbolic links for cudnn if cudnn was was not installed to\n# CUDA_TOOLKIT_PATH.",
        "Line" : 462,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Set up BUILD file for cuda/",
        "Line" : 470,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Set up crosstool/",
        "Line" : 483,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Set up cuda_config.h, which is used by\n# tensorflow/stream_executor/dso_loader.cc.",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "\"\"\"Implementation of the cuda_autoconf repository rule.\"\"\"",
        "Line" : 513,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "\"\"\"Detects and configures the local CUDA toolchain.\n\nAdd the following to your WORKSPACE FILE:\n\n```python\ncuda_configure(name = \"local_config_cuda\")\n```\n\nArgs:\n  name: A unique name for this workspace rule.\n\"\"\"",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "third_party/hadoop/BUILD" : {
      "ObjectId" : "f25208c41672d2beef8cb50c01e6bcd19d14672a",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/py/numpy/BUILD" : {
      "ObjectId" : "c025984cca728f8c29a240de862689fd329131a4",
      "LastModified" : "2016-10-11T09:13:52Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "util/BUILD.d/BUILD" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2017-05-30T00:28:50Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "util/python/BUILD" : {
      "ObjectId" : "29688b875df5933f612a3c5931e22d00d7cab2f7",
      "LastModified" : "2017-05-30T00:28:50Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 30,
    "MAKEFILE" : 3,
    "BAZEL" : 128
  },
  "ElapsedTime" : 15744
}