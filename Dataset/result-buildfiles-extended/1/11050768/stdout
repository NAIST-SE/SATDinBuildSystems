{
  "Repository" : "11050768",
  "Revision" : "HEAD",
  "ObjectId" : "5f77de1ad0af23e41d5014e711d9e2b957b1c534",
  "CommitTime" : "2019-04-04T19:02:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "305e11b06797f209999e5d64463803ba2873e285",
      "LastModified" : "2018-11-12T21:26:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################################################\n\n########## CMake Setup                                                                              ##########\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set our CMake minimum version\n\n#Require 2.8.9 for Qt5 and CMAKE_POSITION_INDEPENDENT_CODE property\n\n#Require 3.1.0 for Qt 5.7 C++ 11 easy support\n\n#Require 3.2.0 for add_custom_target with byproducts\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure CCache if available and wanted\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Pretty colors\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Don't force verbose\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include current dir\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Don't allow in source builds\n\n#set(CMAKE_DISABLE_SOURCE_CHANGES ON)\n\n#set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#RPATH setup - more below too\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#include(FeatureSummary)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#enable_testing()\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Set the custom CMake module directory where our include/lib finders are\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################################################\n\n########## toplevel compiler flags                                                                  ##########\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Project Setup\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Set our version values\n\n#Final version is ${VERSION} = ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}.${VERSION_SUFFIX}\n\n#where VERSION_SUFFIX is of the form \"\", \"svn\" or \"Nsvn\" (N being the minor patch level)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Set the permissions to be used when installing plugins\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Our main directory is scribus\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################################################\n\n########## check for the CPU we build for                                                           ##########\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Find out what machine/cpu we are running on\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# We need to pass -fPIC to lib2geom on amd64, mips, mipsel, and hppa. See:\n\n# http://www.gentoo.org/proj/en/base/amd64/howtos/index.xml?part=1&chap=3 and\n\n# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=559133\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Do our Apple OSX version setup\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#convert any 64 bit build into generic 64 tag for below\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################################################\n\n########## Versioning Setup                                                                         ##########\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#On Apple, we ignore the versioning tag so all items are \"scribus\" not \"scribus-version\"\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#Simplify future conditionals for Apple\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#Announce we cached a version request before, overridden below for OSX\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#Remove version tags on OSX so our bundle is Scribus.app\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#Store our version string if required\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##############################################################################################################\n\n########## Install/Directory Setup                                                                  ##########\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# all ok\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# add \"/Contents\" subpath\n",
        "Line" : 267,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# no bundle name spcified, use appname and version\n",
        "Line" : 270,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "#Setup all the directories we will use\n\n#cmake_policy(SET CMP0005 OLD)\n\n#SHARE\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SHARE - use the default on Apple as TAG_VERSION is empty\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#ICONS\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#SAMPLES\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#SCRIPTS\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#TEMPLATES\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#QML\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#DESKTOP\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#APPDATA\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# APPLICATION_DATA_DIR\n\n# It allows specify the user configuration directory in the compile time.\n\n# Example: I want to use special ~/.scribus135svn config directory for my trunk\n\n#          cmake -DAPPLICATION_DATA_DIR=.scribus135svn ...\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#LIB LOCATION - lib or lib64 normally\n\n#LIB\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#PLUGINS\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#INCLUDE\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#NO ADD DEFINITIONS, WE ONLY INSTALL WITH IT\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#RPATH\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Set the XDG mime stuff\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "##############################################################################################################\n\n########## Build Setup                                                                              ##########\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#Convert our simpler command line option to the CMake style\n\n#None, Debug, Release, .. or custom ones\n\n# set(WANT_DEBUG 1)\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#Based on our build type, setup our build options\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# gcc/mac\n",
        "Line" : 542,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# Windows build with Visual Studio\n\n# Surely there's a better way to identify the compiler?\n",
        "Line" : 588,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# vanilla gcc\n",
        "Line" : 593,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "#\tadd_definitions(-DNDEBUG)\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "##############################################################################################################\n\n########## Find Dependencies                                                                        ##########\n",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#<< Qt\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#find_package(Qt5Quick ${QT_MIN_VERSION} REQUIRED)\n\n#if(Qt5Quick_FOUND)\n\n#    message(STATUS \"----- USE Qt5Quick -----\")\n\n#else()\n\n#    message(FATAL_ERROR \"ERROR: No Qt5Quick found\")\n\n#endif()\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#include_directories(${Qt5Quick_INCLUDE_DIRS})\n\n#add_definitions(${Qt5Quick_DEFINITIONS})\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#if (NOT WANT_CPP11 AND Qt5Widgets_VERSION_MAJOR EQUAL 5 AND Qt5Widgets_VERSION_MINOR GREATER 6)\n\n#\tmessage(STATUS \"Your Qt version is 5.7.0 or superior, enabling C++11 compiler features\")\n\n#\tset(WANT_CPP11 1)\n\n#endif()\n\n#>> Qt\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#C++11 Support\n\n#as of 1.5.5.svn, require C++11\n\n#if(WANT_CPP11)\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#endif()\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#<< ZLIB, PNG\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# On win32 we can use Qt's zlib and libpng, so we use some\n\n# custom cmake includes. This permits us to honour the\n\n# USE_QT_ZLIB_PNGLIB flag if passed.\n",
        "Line" : 725,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "#find_package(PNG REQUIRED)\n\n#if (PNG_FOUND)\n\n#\tmessage(\"PNG Library Found OK\")\n\n#endif()\n\n#>> ZLIB, PNG\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#<< JPEG, TIFF\n",
        "Line" : 757,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#<< JPEG, TIFF\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#<< PYTHON\n\n#set(PythonLibs_FIND_VERSION 2)\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#>> PYTHON\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#<< FreeType2\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# here we have an alternative\n\n# a) Setup CFLAGS with the FREETYPE_INCLUDE_DIR_freetype2 provided by cmake\n\n# b) Insert ${FREETYPE_INCLUDE_DIRS} in include sections of CMakeLists that need it\n\n# I prefer (b) and at some point & from my opinion it should  be just needed in scribus/fonts/CmakeLists.txt - pm\n",
        "Line" : 788,
        "CharPositionInLine" : 1
      },
      "70" : {
        "Text" : "#>> FreeType2\n",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#<<Render Library\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#>>Render Library\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#<<CUPS\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Windows doesn't use CUPS\n",
        "Line" : 826,
        "CharPositionInLine" : 1
      },
      "75" : {
        "Text" : "#>>CUPS\n",
        "Line" : 829,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#<<LibXML2\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#>>LibXML2\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#<<LittleCMS\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "#>>LittleCMS\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "#<<FontConfig\n",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Windows builds neither use nor require fontconfig\n",
        "Line" : 861,
        "CharPositionInLine" : 1
      },
      "82" : {
        "Text" : "#>>FontConfig\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#<<HUNSPELL for Speelling support\n",
        "Line" : 866,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#>>HUNSPELL for Speelling support\n",
        "Line" : 877,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#<<PoDoFo for AI PDF import\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#>>PoDoFo for AI PDF import\n",
        "Line" : 890,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#<<Boost for 2Geom Tools\n",
        "Line" : 892,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#>>Boost for 2Geom Tools\n",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#<<GraphicksMagick for image import\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# find_package(GMAGICK)\n",
        "Line" : 909,
        "CharPositionInLine" : 1
      },
      "91" : {
        "Text" : "#>>GraphicksMagick for image import\n",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#<<Poppler for PDF import\n",
        "Line" : 920,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#>>Poppler for PDF import\n",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# librevenge for MsPub import\n",
        "Line" : 932,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# CTL support\n",
        "Line" : 944,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "##############################################################################################################\n\n########## Include Setup                                                                            ##########\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# if(HAVE_SYS_TYPES_H)\n\n#   add_definitions(-DHAVE_SYS_TYPES_H)\n\n# endif()\n",
        "Line" : 965,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# if(HAVE_SYS_STAT_H)\n\n#   add_definitions(-DHAVE_SYS_STAT_H)\n\n# endif()\n\n#>>Test for existing include files\n",
        "Line" : 970,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "#Create configure files.. config.h and uninstall\n\n#config.h\n",
        "Line" : 976,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "#Set up include dirs with all found packages\n",
        "Line" : 989,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "##############################################################################################################\n\n########## Uninstall Setup                                                                          ##########\n",
        "Line" : 1012,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "##############################################################################################################\n\n########## Add our subdirs                                                                          ##########\n",
        "Line" : 1026,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#Add our source subdirs\n",
        "Line" : 1029,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#Install our READMEs etc.\n",
        "Line" : 1044,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#\texecute_process (COMMAND mkdir -p \"${CMAKE_INSTALL_PREFIX}/PlugIns/imageformats\")\n\n#\tif (NOT EXISTS \"${CMAKE_INSTALL_PREFIX}/PlugIns/imageformats/libqjpeg.dylib\")\n\n#message(STATUS ${QT_PREFIX})\n\n#message(STATUS \"@QT_PREFIX@/plugins/imageformats/libqjpeg.dylib\")\n\n#message(STATUS \"${CMAKE_INSTALL_PREFIX}/PlugIns/imageformats/libqjpeg.dylib\")\n\n#\t\texecute_process (COMMAND ditto \"@QT_PREFIX@/plugins/imageformats/libqjpeg.dylib\" \"${CMAKE_INSTALL_PREFIX}/PlugIns/imageformats/libqjpeg.dylib\")\n\n#\tendif()\n",
        "Line" : 1061,
        "CharPositionInLine" : 1
      },
      "106" : {
        "Text" : "#Install the .desktop file\n",
        "Line" : 1071,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#Install our MIME data\n",
        "Line" : 1082,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#Install the appdata file\n",
        "Line" : 1090,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#If building an Apple bundle, install these specific files\n",
        "Line" : 1102,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "##############################################################################################################\n\n########## Install/CPack Setup                                                                      ##########\n",
        "Line" : 1115,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# If the cmake version includes cpack, use it for tarball building\n",
        "Line" : 1118,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#include (cmakeconfigreport optional)\n",
        "Line" : 1155,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# Output everything we've found\n\n#feature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES)\n",
        "Line" : 1157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 114
    },
    "ConfigureChecks.cmake" : {
      "ObjectId" : "fafe00521fdc0a71be22262b1222145facd15250",
      "LastModified" : "2014-06-15T17:56:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#http://websvn.kde.org/trunk/KDE/kdeaddons/ConfigureChecks.cmake?rev=520160&view=log\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include(CheckSymbolExists)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include(CheckPrototypeExists)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check for libz using the cmake supplied FindZLIB.cmake\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#check for png\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#check for OSG\n\n#if(OSG_FOUND)\n\n#   set(HAVE_OSG 1)\n\n#else(OSG_FOUND)\n\n#   set(HAVE_OSG 0)\n\n#endif(OSG_FOUND)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#if(CAIRO_FOUND)\n\n#   set(HAVE_LIBART 0)\n\n#   set(HAVE_CAIRO 1)\n\n#else(CAIRO_FOUND)\n\n#   set(HAVE_LIBART 1)\n\n#   set(HAVE_CAIRO 0)\n\n#endif(CAIRO_FOUND)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#check_include_files(crt_externs.h HAVE_CRT_EXTERNS_H)\n\n#check_include_files(inttypes.h HAVE_INTTYPES_H)\n\n#check_include_files(memory.h HAVE_MEMORY_H)\n\n#check_include_files(stdint.h HAVE_STDINT_H)\n\n#check_include_files(stdlib.h HAVE_STDLIB_H)\n\n#check_include_files(strings.h HAVE_STRINGS_H)\n\n#check_include_files(string.h HAVE_STRING_H)\n\n#check_include_files(sys/bitypes.h HAVE_SYS_BITYPES_H)\n\n#check_include_files(sys/stat.h HAVE_SYS_STAT_H)\n\n#check_include_files(sys/types.h HAVE_SYS_TYPES_H)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#check_function_exists(_NSGetEnviron   HAVE_NSGETENVIRON)\n\n#check_function_exists(initgroups HAVE_INITGROUPS)\n\n#check_function_exists(setenv     HAVE_SETENV)\n\n#check_function_exists(strlcat    HAVE_STRLCAT)\n\n#check_function_exists(strlcpy    HAVE_STRLCPY)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#check_symbol_exists(res_init        \"sys/types.h;netinet/in.h;arpa/nameser.h;resolv.h\" HAVE_RES_INIT)\n\n#check_symbol_exists(snprintf        \"stdio.h\"                  HAVE_SNPRINTF)\n\n#check_symbol_exists(vsnprintf       \"stdio.h\"                  HAVE_VSNPRINTF)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#check_prototype_exists(res_init \"sys/types.h;netinet/in.h;arpa/nameser.h;resolv.h\" HAVE_RES_INIT_PROTO)\n\n#check_prototype_exists(initgroups \"unistd.h;sys/types.h;unistd.h;grp.h\" HAVE_INITGROUPS_PROTO)\n\n#check_prototype_exists(setenv stdlib.h HAVE_SETENV_PROTO)\n\n#check_prototype_exists(strlcat string.h HAVE_STRLCAT_PROTO)\n\n#check_prototype_exists(strlcpy string.h HAVE_STRLCPY_PROTO)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#check_type_size(\"int\" SIZEOF_INT)\n\n#check_type_size(\"char *\"  SIZEOF_CHAR_P)\n\n#check_type_size(\"long\" SIZEOF_LONG)\n\n#check_type_size(\"short\" SIZEOF_SHORT)\n\n#check_type_size(\"size_t\" SIZEOF_SIZE_T)\n\n#check_type_size(\"unsigned long\" SIZEOF_UNSIGNED_LONG)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "OSX-package/Makefile" : {
      "ObjectId" : "f04d60e06475df5cf51ee280c077664cf4fd32d4",
      "LastModified" : "2007-12-29T00:12:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# currently a handpicked list of libraries Scribus depends on\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these wil be optional packages later\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this MUST be the installed path of the Scribus.app bundle\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# How to name the package\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# no need to change those:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#port -f -k upgrade $*\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "Scribus.pro" : {
      "ObjectId" : "d0a3fad631fcb53b2d6bb4693e7ce8c24af66f17",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (3.1) Sun May 20 10:57:32 2018\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following define makes your compiler warn you if you use any\n\n# feature of Qt which has been marked as deprecated (the exact warnings\n\n# depend on your compiler). Please consult the documentation of the\n\n# deprecated API in order to know how to port your code away from it.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You can also make your code fail to compile if you use deprecated APIs.\n\n# In order to do so, uncomment the following line.\n\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/CAIROConfig.cmake" : {
      "ObjectId" : "b08039167593f1bd97ab541acd791770cdb44629",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native cairo includes and library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n# CAIRO_INCLUDE_DIR, where to find art*.h etc\n\n# CAIRO_LIBRARY, the libraries to link against to use LIBART.\n\n# CAIRO_FOUND, If false, do not try to use LIBART.\n\n# CAIRO_LIBS, link information\n\n# CAIRO_CFLAGS, cflags for include information\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkgconfig to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#If we had no cairo prefix specify it, set PREFIX_CAIRO_LIB most importantly, for the \n\n# if(NOT PREFIX_CAIRO)\n\n# \tget_filename_component(CAIRO_DIR ${CAIRO_LIBRARY} PATH)\n\n# \tget_filename_component(CAIRO_DIR ${CAIRO_DIR} PATH)\n\n# \tset(PREFIX_CAIRO ${CAIRO_DIR})\n\n# \tif(PREFIX_CAIRO)\n\n# \t\tset(PREFIX_CAIRO_INCLUDE \"${PREFIX_CAIRO}/include\")\n\n# \t\tset(PREFIX_CAIRO_LIB \"${PREFIX_CAIRO}/lib\")\n\n# \t\tset(PREFIX_CAIRO_BIN \"${PREFIX_CAIRO}/bin\")\n\n# \tendif(PREFIX_CAIRO)\n\n# endif(NOT PREFIX_CAIRO)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#     CB: We dont use this yet anyway\n\n#     find_program(CAIRO_CONFIG \n\n#       NAMES pkg-config\n\n#       PATHS ${prefix}/bin ${exec_prefix}/bin /usr/local/bin /opt/local/bin /usr/bin /usr/nekoware/bin /usr/X11/bin\n\n#     )\n\n#     exec_program(${CAIRO_CONFIG} ARGS \"--libs cairo\" OUTPUT_VARIABLE CAIRO_LIBS)\n\n#     exec_program(${CAIRO_CONFIG} ARGS \"--cflags cairo\" OUTPUT_VARIABLE CAIRO_CFLAGS)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FONTCONFIGConfig.cmake" : {
      "ObjectId" : "1cfc352717df64ee245b0d63b87a53923af133c5",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native FONTCONFIG includes and library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n# FONTCONFIG_INCLUDE_DIR, where to find art*.h etc\n\n# FONTCONFIG_LIBRARY, the libraries to link against to use FONTCONFIG.\n\n# FONTCONFIG_FOUND, If false, do not try to use FONTCONFIG.\n\n# LIBFONTCONFIG_LIBS, link information\n\n# LIBFONTCONFIG_CFLAGS, cflags for include information\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include(UsePkgConfig)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n\n#PKGCONFIG(fontconfig _fontconfigIncDir _fontconfigLinkDir _fontconfigLinkFlags _fontconfigCflags)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(FONTCONFIG_LIBS ${_fontconfigCflags})\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# quick hack as the above finds it nicely but our source includes the libart_lgpl text at the moment\n\n#string(REGEX REPLACE \"/libart_lgpl\" \"\" FONTCONFIG_INCLUDE_DIR ${FONTCONFIG_INCLUDE_DIR})\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# message(STATUS \"fclib ${FONTCONFIG_LIBRARY}\")\n\n# message(STATUS \"fcinclude ${FONTCONFIG_INCLUDE_DIR}\")\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \texec_program(${FONTCONFIG_CONFIG} ARGS --libs OUTPUT_VARIABLE FONTCONFIG_LIBS)\n\n# \texec_program(${FONTCONFIG_CONFIG} ARGS --cflags OUTPUT_VARIABLE FONTCONFIG_CFLAGS)\n\n#  \tmessage(STATUS ${FONTCONFIG_LIBS})\n\n#  \tmessage(STATUS ${FONTCONFIG_CFLAGS})\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FREETYPEConfig.cmake" : {
      "ObjectId" : "9725f96e8a7545f4b8b646938bf46464db751083",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native FREETYPE includes and library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n# FREETYPE_INCLUDE_DIR, where to find ft2build.h, ftheader.h, ...\n\n# FREETYPE_LIBRARIES, the libraries to link against to use FREETYPE.\n\n# FREETYPE_FOUND, If false, do not try to use FREETYPE.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also defined, but not for general use are\n\n# FREETYPE_LIBRARY, where to find the FREETYPE library.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(STATUS \"ft lib ${FREETYPE_LIBRARY}\")\n\n# message(STATUS \"ft2 build ${FREETYPE_INCLUDE_DIR_FT2BUILD}\")\n\n# message(STATUS \"ft header ${FREETYPE_INCLUDE_DIR_FTHEADER}\")\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindGMAGICK.cmake" : {
      "ObjectId" : "44910698b788620ca29ec5e831e0cce061ef4f76",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GraphicsMagick\n\n# Once done, this will define\n\n#\n\n#  GMAGICK_FOUND - system has zziplib\n\n#  GMAGICK_INCLUDE_DIRS - the zziplib include directories\n\n#  GMAGICK_LIBRARIES - link these to use zziplib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: Detecting GraphicsMagick is hard, as all header files have the same names as the ImageMagick headers. But they are not compatible.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindHUNSPELL.cmake" : {
      "ObjectId" : "149636612d8ac6da6250bd43de1fed903a35d0a6",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find HUNSPELL\n\n# Once done this will define\n\n#\n\n#  HUNSPELL_FOUND - System has HUNSPELL\n\n#  HUNSPELL_INCLUDE_DIR - The HUNSPELL include directory\n\n#  HUNSPELL_LIBRARIES - The libraries needed to use HUNSPELL\n\n#  HUNSPELL_DEFINITIONS - Compiler switches required for using HUNSPELL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Based on examples at http://www.vtk.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(HUNSPELL_MINOR_VERSION ${CMAKE_MATCH_1})\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_path(HUNSPELL_INCLUDE_DIR hunspell/hunspell.hxx )\n\n#find_library(HUNSPELL_LIBRARIES NAMES hunspell-1.5 hunspell-1.4 hunspell-1.3 hunspell-1.2 PATHS /opt/local/lib /usr/local/lib /usr/lib )\n\n#include(FindPackageHandleStandardArgs)\n\n#FIND_PACKAGE_HANDLE_STANDARD_ARGS(HUNSPELL DEFAULT_MSG HUNSPELL_LIBRARIES HUNSPELL_INCLUDE_DIR )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindHYPHEN.cmake" : {
      "ObjectId" : "17a1a0a07312affe2a87cc35423285367c6afd10",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find HYPHEN library\n\n# Find the native HYPHEN includes and library\n\n# This module defines\n\n#  HYPHEN_INCLUDE_DIR, where to find hyphen.h, etc.\n\n#  HYPHEN_LIBRARIES, libraries to link against to use HYPHEN.\n\n#  HYPHEN_FOUND, If false, do not try to use HYPHEN.\n\n# also defined, but not for general use are\n\n#  HYPHEN_LIBRARY, where to find the HYPHEN library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set HYPHEN_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindLCMS.cmake" : {
      "ObjectId" : "e032834b92bc0e790b2f26f373dba5cf7407a57e",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native LCMS includes and library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n# LCMS_INCLUDE_DIR, where to find art*.h etc\n\n# LCMS_LIBRARY, the libraries\n\n# LCMS_FOUND, If false, do not try to use LCMS.\n\n# LIBLCMS_LIBS, link information\n\n# LIBLCMS_CFLAGS, cflags for include information\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include(UsePkgConfig)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n\n# PKGCONFIG(lcms _lcmsIncDir _lcmsLinkDir _lcmsLinkFlags _lcmsCflags)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set(LCMS_LIBS ${_lcmsCflags})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindLCMS2.cmake" : {
      "ObjectId" : "3d96632292c0e6cf1d82b71e4b0e6b046f412e14",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native LCMS includes and library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n# LCMS_INCLUDE_DIR, where to find art*.h etc\n\n# LCMS_LIBRARY, the libraries\n\n# LCMS_FOUND, If false, do not try to use LCMS.\n\n# LIBLCMS_LIBS, link information\n\n# LIBLCMS_CFLAGS, cflags for include information\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include(UsePkgConfig)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n\n# PKGCONFIG(lcms _lcmsIncDir _lcmsLinkDir _lcmsLinkFlags _lcmsCflags)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set(LCMS2_LIBS ${_lcmsCflags})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindLIBPODOFO.cmake" : {
      "ObjectId" : "d20250196a772221df460fd82ee69cbc0dd39eb7",
      "LastModified" : "2017-06-10T13:18:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(STATUS \"PODOFO MAJOR VERSION ${PODOFO_MAJOR_VER}\")\n\n#message(STATUS \"PODOFO MINOR VERSION ${PODOFO_MINOR_VER}\")\n\n#message(STATUS \"PODOFO PATCH VERSION ${PODOFO_PATCH_VER}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# podofo 0.9.5 use OpenSSL includes in its public headers, we need to know OpenSSL include dirs\n\n# (https://bugs.scribus.net/view.php?id=14838)\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOSG.cmake" : {
      "ObjectId" : "f2288f352a06f049d9e27828102a18fd2570596f",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate gdal\n\n# This module defines\n\n# OSG_LIBRARY\n\n# OSG_FOUND, if false, do not try to link to gdal \n\n# OSG_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OSG_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSG_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPOPPLER.cmake" : {
      "ObjectId" : "8dc7cbde4275b703cc3b2baa6d0d32157484e693",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindZLIB.cmake" : {
      "ObjectId" : "a7a8cde60ec1caff5d832df6578a4657bc0761b9",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find zlib\r\n\n# Find the native ZLIB includes and library\r\n\n#\r\n\n#  ZLIB_INCLUDE_DIR - where to find zlib.h, etc.\r\n\n#  ZLIB_LIBRARIES   - List of libraries when using zlib.\r\n\n#  ZLIB_FOUND       - True if zlib found.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\r\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# On win32, qt statically links to zlib and libpng, and exports their symbols.\r\n\n# We can just link to Qt to get zlib and libpng. We still require the user to\r\n\n# supply their own headers on the search path, but they can and should just\r\n\n# specify ${QTDIR}/src/3rdparty/zlib/include .\r\n\n# To use this, you must use FindQt before FindZlib.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find a debug library if one exists and use that for debug builds.\r\n\n# This really only does anything for win32, but does no harm on other\r\n\n# platforms.\r\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if \r\n\n# all listed variables are TRUE\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/LibXml2Config.cmake" : {
      "ObjectId" : "12bc21ae8b5c6eedeb0bcbb880f7f0a96568b48a",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibXml2\n\n# Once done this will define\n\n#\n\n#  LIBXML2_FOUND - system has LibXml2\n\n#  LIBXML2_INCLUDE_DIR - the LibXml2 include directory\n\n#  LIBXML2_LIBRARIES - the libraries needed to use LibXml2\n\n#  LIBXML2_DEFINITIONS - Compiler switches required for using LibXml2\n\n#\n\n# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/LibraryDebugAndRelease.cmake" : {
      "ObjectId" : "df03e5a9d4af7a4d69dfd8262c1e5d1df9738991",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# This macro is used when we may have a debug and or release build of a library,\r\n\n# and we want to produce a single easy to use library string that'll do the right\r\n\n# thing. If both debug and release versions are available, we'll automatically use the\r\n\n# debug version for debug builds and the release version for release builds.\r\n\n#\r\n\n# If only one build exists, we use that one irrespective of build type.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/SCRIBUSQTConfig.cmake" : {
      "ObjectId" : "becddd7a83b01de04112f7d55231b51943b499e8",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Based on QT4_QRAP_UI/CPP from cmake 2.3.4\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get include dirs\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#foreach(it ${moc_includes_tmp})\n\n#  set(moc_includes ${moc_includes} \"-I${it}\")\n\n#endforeach(it)\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#       set(infile ${CMAKE_CURRENT_SOURCE_DIR}/${it})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#         ARGS ${moc_includes} -o ${outfile} ${infile}\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#         MAIN_DEPENDENCY ${infile})\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/modules/ScribusFindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "3dde827df37d1b3c87c6524c02dcb26841078ff4",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# This file was copied from CMake 2.5. It's used to permit CMake 2.4\r\n\n# to use the CMake 2.5-derived find scripts here.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the original from cmake 2.5 if possible\r\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# or define our own...\r\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\r\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\r\n\n#    It handles the REQUIRED and QUIET argument to find_package() and\r\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\r\n\n#    The package is found if all variables listed are TRUE.\r\n\n#    Example:\r\n\n#\r\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\r\n\n#\r\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \r\n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\r\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \r\n\n#    independent whether QUIET was used or not.\r\n\n#    If it is found, the location is reported using the VAR1 argument, so \r\n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\r\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \r\n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\r\n\n#    your own custom failure message there.\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/cmakeconfigreport.cmake" : {
      "ObjectId" : "176de230d5e1bf30837b2949c59b2065108864bd",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################################################\n\n########## Report on installed dependencies and offered features                                    ##########\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/getsvn.cmake" : {
      "ObjectId" : "f66581076686b2ac340dc25b86b2623f75337d5a",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the FindSubversion.cmake module is part of the standard distribution\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# extract working copy information for SOURCE_DIR into MY_XXX variables\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# write a file with the SVNVERSION define\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# copy the file to the final header only if the version changes\n\n# reduces needless rebuilds\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/modules/old/CupsConfig.cmake" : {
      "ObjectId" : "cd4fa23e6b58bff58447e0fbe5c41a87873703cd",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Cups\n\n# Once done this will define\n\n#\n\n#  CUPS_FOUND - system has Cups\n\n#  CUPS_INCLUDE_DIR - the Cups include directory\n\n#  CUPS_LIBRARY - Link these to use CUPS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/old/FindJPEG.cmake" : {
      "ObjectId" : "4534b4c7d1067c7c83746c8124567669e7a6f990",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JPEG\r\n\n# Find the native JPEG includes and library\r\n\n# This module defines\r\n\n#  JPEG_INCLUDE_DIR, where to find jpeglib.h, etc.\r\n\n#  JPEG_LIBRARIES, the libraries needed to use JPEG.\r\n\n#  JPEG_FOUND, If false, do not try to use JPEG.\r\n\n# also defined, but not for general use are\r\n\n#  JPEG_LIBRARY, where to find the JPEG library.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JPEG_FOUND to TRUE if \r\n\n# all listed variables are TRUE\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Deprecated declarations.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/old/FindPNG.cmake" : {
      "ObjectId" : "3b82f003ce45110f35d0c46c514b8419a28bbc62",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the native PNG includes and library\r\n\n#\r\n\n# This module defines\r\n\n#  PNG_INCLUDE_DIR, where to find png.h, etc.\r\n\n#  PNG_LIBRARIES, the libraries to link against to use PNG.\r\n\n#  PNG_DEFINITIONS - You should ADD_DEFINITONS(${PNG_DEFINITIONS}) before compiling code that includes png library files.\r\n\n#  PNG_FOUND, If false, do not try to use PNG.\r\n\n# also defined, but not for general use are\r\n\n#  PNG_LIBRARY, where to find the PNG library.\r\n\n# None of the above will be defined unles zlib can be found.\r\n\n# PNG depends on Zlib\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenBSD\r\n",
        "Line" : 17,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "# On win32, qt statically links to zlib and libpng, and exports their symbols.\r\n\n# We can just link to Qt to get zlib and libpng. We still require the user to\r\n\n# supply their own headers on the search path, but they can and should just\r\n\n# specify ${QTDIR}/src/3rdparty/zlib/include .\r\n\n# To use this, you must use FindQt before FindPng.\r\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# png.h includes zlib.h. Sigh.\r\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# libpng requires zlib unless we're linking to both in the form of Qt\r\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\r\n",
        "Line" : 58,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PNG_FOUND to TRUE if \r\n\n# all listed variables are TRUE\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/old/FindTIFF.cmake" : {
      "ObjectId" : "ce110964fb614217421162cb8c2543c209d62dce",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find TIFF library\r\n\n# Find the native TIFF includes and library\r\n\n# This module defines\r\n\n#  TIFF_INCLUDE_DIR, where to find tiff.h, etc.\r\n\n#  TIFF_LIBRARIES, libraries to link against to use TIFF.\r\n\n#  TIFF_FOUND, If false, do not try to use TIFF.\r\n\n# also defined, but not for general use are\r\n\n#  TIFF_LIBRARY, where to find the TIFF library.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TIFF_FOUND to TRUE if \r\n\n# all listed variables are TRUE\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config.h.cmake" : {
      "ObjectId" : "46bc07f815a24ad45d78706c76558bd85df9c5a9",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * Prevent code from including config.h directly. You should include\n * scconfig.h instead. This lets us handle win-config.h correctly, and\n * may do more later.\n */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "devel-doc/Makefile" : {
      "ObjectId" : "63659bf373b690faad796440e19422acbed7c2ca",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "ea0f19366c07692930c8a0608617c513048e07f6",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/cs/CMakeLists.txt" : {
      "ObjectId" : "7fe5031cf3ee800aed8ee05bd0fe1a57d3d07586",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/cs/tutorials/short-words/CMakeLists.txt" : {
      "ObjectId" : "9994992a191d716b331f21d40e1644cf609c9110",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/de/CMakeLists.txt" : {
      "ObjectId" : "7e2d181cad0d87e73b1d1a955102b387b0e028fa",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our html files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/de/images/CMakeLists.txt" : {
      "ObjectId" : "12d07cd49f16b19c443d0cebea0fd0aee48a077c",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our image files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/en/CMakeLists.txt" : {
      "ObjectId" : "06244a1865aa01a8c6350b2c7ffb0c0112c803c4",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our html files\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/en/images/CMakeLists.txt" : {
      "ObjectId" : "ed6da3452a9584b0b78c38e9b0806065ad566238",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our image files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/en/tutorials/short-words/CMakeLists.txt" : {
      "ObjectId" : "e07166795f901a3b218c52d4e8c4fddf98ba0de9",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/fr/CMakeLists.txt" : {
      "ObjectId" : "29d4ea41f03859b37b62fbcb8742b5da2c81674c",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our html files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/fr/tutorials/short-words/CMakeLists.txt" : {
      "ObjectId" : "0436b0c3cecc5ad90a9cf3f03020fb77744d8479",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/it/CMakeLists.txt" : {
      "ObjectId" : "305ea8bfcdb03e1fac516a6e780bf4966298a351",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our html files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/it/images/CMakeLists.txt" : {
      "ObjectId" : "dd130f52926d878b7602a80a7e4f07e385d03a63",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our image files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/pl/CMakeLists.txt" : {
      "ObjectId" : "7fe5031cf3ee800aed8ee05bd0fe1a57d3d07586",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/pl/tutorials/short-words/CMakeLists.txt" : {
      "ObjectId" : "e92b0c3a0ffb99ef9b30a23bdce2af8de1599e79",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/dicts/CMakeLists.txt" : {
      "ObjectId" : "2755ca93a33a5d3b47d2036427f9057df3fbbe55",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our hyphenation dict files, selected from *.dic in this directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "resources/editorconfig/CMakeLists.txt" : {
      "ObjectId" : "4415975c70b201c8fe8d7acb6288339eb6da9c46",
      "LastModified" : "2016-11-27T21:37:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#sample.xml\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "resources/iconsets/CMakeLists.txt" : {
      "ObjectId" : "cb6b8ca1e4db4b69a31136f331b58427acdaae81",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Install our 1.5.0 icons\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Install our 16x16 icons\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Install our 16x16 icons\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Install our 22x22 icons\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Install our 32x32 icons\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Install our stylesheet icons\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Install our XML\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Install our 1.5.1 icons\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Install our 16x16 icons\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Install our 16x16 icons\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Install our 22x22 icons\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Install our 32x32 icons\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Install our stylesheet icons\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Install our XML\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "resources/iconsets/artwork/CMakeLists.txt" : {
      "ObjectId" : "43dca4a33a2862a6a171e334a22b1f34f87e8bcc",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Install the program icon if not on Mac and not on Windows\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "resources/keysets/CMakeLists.txt" : {
      "ObjectId" : "38665bc059629493d2b382d8a74d29c996d6386a",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/loremipsum/CMakeLists.txt" : {
      "ObjectId" : "1b4db5f4076fee38f28eb619b97bacd0ab530d93",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our lorem ipsum sample files, selected from *.xml in this directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "resources/manpages/CMakeLists.txt" : {
      "ObjectId" : "263a73d459e41457f5a8119b7dd1d8271b7bf5ee",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/profiles/CMakeLists.txt" : {
      "ObjectId" : "3bf19ab865874c92f6e859bca04262be7b2eabaa",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/swatches/CMakeLists.txt" : {
      "ObjectId" : "370ddd7d53d67308893acd5098fb551d24b045e3",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Avoid CMakeLists.txt\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "resources/templates/CMakeLists.txt" : {
      "ObjectId" : "46c88d4354cb5e88f02ad84a4835260b440e30ad",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Gentoo has an option for no templates. Let's make the ebuild simpler and open up the option to others, but leave as a default for us. Make the directory in any case as our source will look for it.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "resources/translations/CMakeLists.txt" : {
      "ObjectId" : "106fc923afb1e8004b1b931769a7923a1b1ac85d",
      "LastModified" : "2017-05-06T23:54:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Install our qm files, selected from *.qm in this directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Bit of a hack, preprocess all the filenames to generate our language string, needed for -DWANT_GUI_LANG=en_GB;de_DE , etc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#If the user specified WANT_GUI_LANG, then we only create build/install targets for those languages\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(STATUS \"You want to install ${LANGSTR}:${WANTED_LANG}\")\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Just install all of them\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "resources/unicodemap/CMakeLists.txt" : {
      "ObjectId" : "c5cac31f060233d315a8e878c55bd7b815bd3a85",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/CMakeLists.txt" : {
      "ObjectId" : "bf70943a59fd9d33fbf65dcd9f897fd33667e257",
      "LastModified" : "2019-03-12T18:01:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#For those that want it, show the SVN version in the About dialog\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a custom target that is always built\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# svn_header is nothing more than a unique string\n",
        "Line" : 11,
        "CharPositionInLine" : 54
      },
      "3" : {
        "Text" : "# creates svnheader.h using cmake script\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# We setup something like a group to gather setter related stuff\n\n# because it could expand into a huge amount of files at some point.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t#{SCRIBUS_ITEMSETTERS_UI_SRC}\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\t#{SCRIBUS_ITEMSETTERS_CLASS}\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\t#{SCRIBUS_ITEMSETTERS_SRC}\n",
        "Line" : 1062,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\t\tmessage(STATUS \"Not including OpenSSL files because this system's PoDoFo does not require them\")\n",
        "Line" : 1170,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##TEST FIX FOR 6897\n",
        "Line" : 1243,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use the -E / --export-dynamic flag to ensure that symbols in the Scribus\n\n# binary are in the public symbol table for plugins. The symbols must also\n\n# be set as SCRIBUS_API if we're building with -fvisibility=hidden .\n\n# Should fix bug 6897 .\n",
        "Line" : 1245,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Use the -E / --export-dynamic flag to ensure that symbols in the Scribus\n\n# binary are in the public symbol table for plugins. The symbols must also\n\n# be set as SCRIBUS_API if we're building with -fvisibility=hidden .\n\n# Should fix bug 6897 .\n",
        "Line" : 1252,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##\n",
        "Line" : 1258,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Set up libraries to link with all found packages\n",
        "Line" : 1261,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\t${Qt5Quick_LIBRARIES}\n",
        "Line" : 1277,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# required to resolve symbols from libdl when ld is called with --no-add-needed\n\n# #9310 for the OpenBSD addition\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# #9311 for the OpenBSD addition\n",
        "Line" : 1304,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Now build plugins\n",
        "Line" : 1372,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# IF your plugin needs more than this, please link them privately\n\n# in the CMakeLists.txt for your plugin.\n",
        "Line" : 1386,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#\t\t${QT_LIBRARIES} part of #7210\n",
        "Line" : 1389,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#do we want a lib suffix on osx? doubt it\n",
        "Line" : 1404,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\tadd_custom_command(TARGET ${EXE_NAME} POST_BUILD\n\n#\tCOMMAND ${CMAKE_COMMAND} ARGS -Dinput_file=${CMAKE_CURRENT_BINARY_DIR}/${EXE_NAME}.app/Contents/MacOS/${EXE_NAME} -P ${CMAKE_MODULE_PATH}/ScribusIngestOSXBundleLibraries.cmake\n\n#\t)\n\n#message(STATUS \"Installing apple bundle\")\n",
        "Line" : 1411,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\tset(APPS \"${APPLE_APP_DIR}\")\n\n#\tset(DIRS ${QT_LIBRARY_DIRS})\n\n#\tinstall(CODE \"\n\n#\t\tfile(GLOB_RECURSE QTPLUGINS\n\n#\t\t  \\\"\\${CMAKE_INSTALL_PREFIX}/${LIBDIR}/plugins/*${CMAKE_SHARED_LIBRARY_SUFFIX}\\\")\n\n#\t\tinclude(BundleUtilities)\n\n#\t\tfixup_bundle(\\\"${APPS}\\\" \\\"\\${QTPLUGINS}\\\" \\\"${DIRS}\\\")\n\n#\t\t\" COMPONENT Runtime)\n",
        "Line" : 1416,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#Install our header files, selected from all existing dirs, excluding unwanted directories and svn files\n",
        "Line" : 1440,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#Install our stylesheet\n",
        "Line" : 1459,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "scribus/colormgmt/CMakeLists.txt" : {
      "ObjectId" : "38d5b97c6b53bd41d3073735220711bd31256802",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\r\n\n# main API.\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/desaxe/CMakeLists.txt" : {
      "ObjectId" : "5fc98c0c2263f4bd5e74b53a2c4117dabc3e5111",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\n\n# main API.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/designer/CMakeLists.txt" : {
      "ObjectId" : "bd64f50db6fb890bda8a57f38c7219ecb8f1024a",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# it's unfinished add_subdirectory(smwidgets)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install it manually\n\n#install(TARGETS ${SCRIBUS_SCRSPINBOX_PLUGIN}\n\n#  LIBRARY\n\n#  DESTINATION ${QT_INSTALL_PLUGINS}\n\n#  PERMISSIONS ${PLUGIN_PERMISSIONS}\n\n#)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set_target_properties(${SCRIBUS_DESIGNR_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "scribus/designer/smwidgets/CMakeLists.txt" : {
      "ObjectId" : "0ec402b6d21611ce00e521da900ab55232988c2e",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/dtd/CMakeLists.txt" : {
      "ObjectId" : "0a65497723c4dd94cf79fa6f3716f780494d6c9a",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/fonts/CMakeLists.txt" : {
      "ObjectId" : "c1c75bbb4520751185eb9e81492db432cb483587",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\n\n# main API.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/CMakeLists.txt" : {
      "ObjectId" : "4debb048b844909dce74a7d5c149e9701cbaa086",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_subdirectory(newfromtemplateplugin)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#scripter1\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#scripter2\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add_subdirectory(myplugin)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "scribus/plugins/barcodegenerator/CMakeLists.txt" : {
      "ObjectId" : "b8826472d96097f18b640e98620360f228a30a56",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_BARCODEGENERATOR_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/colorwheel/CMakeLists.txt" : {
      "ObjectId" : "50bb4f568d1a92756b90aab2bae9c9da0e1c7e15",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_COLORWHEEL_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/export/CMakeLists.txt" : {
      "ObjectId" : "7d96b7a223c34d64fa849f3b5442bf392676a30b",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/export/pixmapexport/CMakeLists.txt" : {
      "ObjectId" : "52271f8355aa264c05ca503313504bdb1c7fb207",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/export/svgexplugin/CMakeLists.txt" : {
      "ObjectId" : "2aa995d61b3c5fd7e6c937fb6b2146466513509f",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/export/xpsexport/CMakeLists.txt" : {
      "ObjectId" : "7700850346f041c494d2e899c4424e0e24379542",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/fileloader/CMakeLists.txt" : {
      "ObjectId" : "fca6d819606ba4db1f5dfd624bdf6eeac24db76d",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/fileloader/oldscribusformat/CMakeLists.txt" : {
      "ObjectId" : "46b357b92c3b5d7a662de8640451c880a92cfaee",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/fileloader/scribus12format/CMakeLists.txt" : {
      "ObjectId" : "e57e0ba4608cf189a5f5547d47e9130d363165c6",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/fileloader/scribus134format/CMakeLists.txt" : {
      "ObjectId" : "e437569037756da705ace395bc405523281de8c7",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/fileloader/scribus13format/CMakeLists.txt" : {
      "ObjectId" : "8d5049fea77751d2a432154991f6497c454c7d19",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/fileloader/scribus150format/CMakeLists.txt" : {
      "ObjectId" : "a5f5d624a7064e6088bcdf69af23b8b0fdf3b63e",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/fontpreview/CMakeLists.txt" : {
      "ObjectId" : "31053b2f6a8771dca7bb336ee3a74fc9cb8354ab",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/CMakeLists.txt" : {
      "ObjectId" : "571a3becdfec2c876b392a91ece393b611bb6034",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  add_subdirectory(odtim)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scribus/plugins/gettext/csvim/CMakeLists.txt" : {
      "ObjectId" : "c46e8329806c3478781eaa12cc3753af5b173bc7",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/docim/CMakeLists.txt" : {
      "ObjectId" : "07f420019f08688c7325ad973939bd25c3b1acfb",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/docxim/CMakeLists.txt" : {
      "ObjectId" : "adf8a4e42a3d3ca7848ccbb5dd03b427b9f2dd13",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/htmlim/CMakeLists.txt" : {
      "ObjectId" : "d5465d0aa850ec01ca56f8128d388362f62d23de",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\thtmlim.h\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scribus/plugins/gettext/odt2im/CMakeLists.txt" : {
      "ObjectId" : "781b867707561c04693c84c261c465e403b3feb7",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/odtim/CMakeLists.txt" : {
      "ObjectId" : "2e4aef723838a1930bd7928fbdf8f57df552c8ac",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/pdbim/CMakeLists.txt" : {
      "ObjectId" : "3c4ab38411e5d4fee10635996e3b93b8f87c740c",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/rtfim/CMakeLists.txt" : {
      "ObjectId" : "ae9f350206dce44b820da9aec1e41e4876b481a1",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/sxwim/CMakeLists.txt" : {
      "ObjectId" : "1065ddd6593ddf83908035364d0aad8ba21a3e9f",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/textfilter/CMakeLists.txt" : {
      "ObjectId" : "705691f5f28d4c77600d727708cc04a6612e3d6c",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/txtim/CMakeLists.txt" : {
      "ObjectId" : "be15732c366c4efd45c3081b3b9f254edb59ecaf",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/gettext/xtgim/CMakeLists.txt" : {
      "ObjectId" : "2033fab5223d307a5888d8679032f04cdc3eb3fe",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/CMakeLists.txt" : {
      "ObjectId" : "20b4ad63e1f77a3a2730696c228ec10ece1fcbb8",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_subdirectory(pgs)\r\n\n# add_subdirectory(ppp)\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/ai/CMakeLists.txt" : {
      "ObjectId" : "da1f8c88ee9cb07f74ce61168504087e36c64eb7",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/cdr/CMakeLists.txt" : {
      "ObjectId" : "4940819ab62d47f749d534f93dfea1fa80ee21fe",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/cgm/CMakeLists.txt" : {
      "ObjectId" : "a13a4233a97dff7898b0e2e3c3a761d365d22872",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/cvg/CMakeLists.txt" : {
      "ObjectId" : "664c7aced64558d03cb75d4eb0992edcee1607d8",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/drw/CMakeLists.txt" : {
      "ObjectId" : "071928ae00aebb418b3ea6838a3f07e5a3ff3efd",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/emf/CMakeLists.txt" : {
      "ObjectId" : "80b5cf65586fe4481f2618e92a7f7f04848a61e5",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/fh/CMakeLists.txt" : {
      "ObjectId" : "b24f5ce7ed37ce2222c998b9f0239190b8f3e838",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/idml/CMakeLists.txt" : {
      "ObjectId" : "bd29d316dc352d9aac910f73396790762f09e6d7",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/idml_old/CMakeLists.txt" : {
      "ObjectId" : "74f0acde817734e979c80807f7f6488f2de33af8",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/odg/CMakeLists.txt" : {
      "ObjectId" : "03c03999762c20f70435a7197825dc892f89dd2c",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/oodraw/CMakeLists.txt" : {
      "ObjectId" : "1b8634315ab797e3e78168d6198a7584712657be",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/pages/CMakeLists.txt" : {
      "ObjectId" : "413cdd22e282942d94360d4f06d8740f1972f067",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include(FindPkgConfig)\n\n#if (HAVE_REVENGE)\n\n#\tpkg_check_modules(LIBETONYEK libetonyek-0.1)\n\n#\tif (LIBETONYEK_FOUND)\n\n#\t\tmessage(\"Building Pages Importer with librevenge\")\n\n#\t\tinclude_directories(${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/scribus ${LIBREVENGE_INCLUDE_DIRS} ${LIBREVENGE_GENERATORS_INCLUDE_DIRS} ${LIBREVENGE_STREAM_INCLUDE_DIRS} ${LIBETONYEK_INCLUDE_DIRS})\n\n#\t\tset(IMPORTPAGES_PLUGIN_MOC_CLASSES importpages.h importpagesplugin.h)\n\n#\t\tset(IMPORTPAGES_PLUGIN_SOURCES ../revenge/rawpainter.cpp importpages.cpp importpagesplugin.cpp)\n\n#\t\tset(IMPORTPAGES_PLUGIN \"importpages\")\n\n#\t\tQT5_WRAP_CPP(IMPORTPAGES_PLUGIN_MOC_SOURCES ${IMPORTPAGES_PLUGIN_MOC_CLASSES})\n\n#\t\tadd_library(${IMPORTPAGES_PLUGIN} MODULE ${IMPORTPAGES_PLUGIN_SOURCES} ${IMPORTPAGES_PLUGIN_MOC_SOURCES})\n\n#\t\ttarget_link_libraries(${IMPORTPAGES_PLUGIN} ${PLUGIN_LIBRARIES} ${LIBREVENGE_LDFLAGS} ${LIBREVENGE_GENERATORS_LDFLAGS} ${LIBREVENGE_STREAM_LDFLAGS} ${LIBETONYEK_LDFLAGS})\n\n#\t\tinstall(TARGETS ${IMPORTPAGES_PLUGIN} LIBRARY DESTINATION ${PLUGINDIR} PERMISSIONS ${PLUGIN_PERMISSIONS})\n\n#\t\tadd_dependencies(${IMPORTPAGES_PLUGIN} ${EXE_NAME})\n\n#\tendif ()\n\n#endif ()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/pct/CMakeLists.txt" : {
      "ObjectId" : "1d1407d8f07c91dd47a7f2b3d98ac2fe0c4ef9c3",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/pdf/CMakeLists.txt" : {
      "ObjectId" : "85760d96e57a8bf0c5c0ee9ced03c6231f7ce32d",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/pm/CMakeLists.txt" : {
      "ObjectId" : "e91288612525bae1c36b3af766ec937b23a6efd8",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/ps/CMakeLists.txt" : {
      "ObjectId" : "5106cb7f84c20c85547c7de27449dc6595a36834",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/pub/CMakeLists.txt" : {
      "ObjectId" : "e62245b40060074121a49343dc530ba567126770",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/qxp/CMakeLists.txt" : {
      "ObjectId" : "6f4dbeba8a82649cf1a142632d6328c96ef05086",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/shape/CMakeLists.txt" : {
      "ObjectId" : "ce424139b609a6af0dc49519f95c01a71dedcfea",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/sml/CMakeLists.txt" : {
      "ObjectId" : "8496f17d8722bc7ac0f60d6a7625b3c79e352a97",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/svg/CMakeLists.txt" : {
      "ObjectId" : "99b6fadc69b5c2b9bea0079520834d40a91f7dbc",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/svm/CMakeLists.txt" : {
      "ObjectId" : "7ca4f69c142ee0dbe346727ae61860d18ef43137",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/uniconvertor/CMakeLists.txt" : {
      "ObjectId" : "edf39e2772c87eca97dee9bc469ad79974e3bf82",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/viva/CMakeLists.txt" : {
      "ObjectId" : "6532188f845e8fbc6c1ff5b6490c48f731c5d571",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/vsd/CMakeLists.txt" : {
      "ObjectId" : "2661bfe11bc96f493ec2284703a74ddad503d8ac",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/wmf/CMakeLists.txt" : {
      "ObjectId" : "9b18edf1d155689820fb839eead2c6b0dee9f076",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/wpg/CMakeLists.txt" : {
      "ObjectId" : "edbbc04b6f7090c1409d0564f04b6cb5d2711bde",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/import/xar/CMakeLists.txt" : {
      "ObjectId" : "91e2462317110bd9a0f151572e5d7dc8f1c9e3f6",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tqtiocompressor.h\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tqtiocompressor.cpp\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scribus/plugins/import/xfig/CMakeLists.txt" : {
      "ObjectId" : "534946948846bcc97caf83de4c88b1ac747c6bd7",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/xps/CMakeLists.txt" : {
      "ObjectId" : "5e2a7385f0c3db6b33e279be07be1c2b59a08cb9",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/import/zmf/CMakeLists.txt" : {
      "ObjectId" : "27124efe093602d019c8a7e24408d1c95e70b32b",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/imposition/CMakeLists.txt" : {
      "ObjectId" : "c985dfde3bd7e92e96c70fa654da347604b52f70",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_IMPOSITION_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/myplugin/CMakeLists.txt" : {
      "ObjectId" : "3e078546957c6e4fc95838b127d90cf2aacc3295",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/newfromtemplateplugin/CMakeLists.txt" : {
      "ObjectId" : "7c4914d2fdbda146ec6368b1ff9aa89ea11b5260",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/picbrowser/CMakeLists.txt" : {
      "ObjectId" : "c9bccdb2baf2a2ac3b56679a522a49ceac32bf46",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/saveastemplateplugin/CMakeLists.txt" : {
      "ObjectId" : "0dfbf638a6414a00f7e51b5e4e63c4e66b1eab7e",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/scripter/CMakeLists.txt" : {
      "ObjectId" : "09ae030bd5914b4ad9cb0a9580a62964c769a31e",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(PYTHONIZE \"pythonize\")\n\n#set(PYTHONIZE_SOURCES \"pythonize.cpp\")\n\n#add_library(${PYTHONIZE} SHARED ${PYTHONIZE_SOURCES})\n\n#target_link_libraries(${PYTHONIZE} ${PYTHON_LIBRARIES})\n\n#install(TARGETS ${PYTHONIZE}\n\n#  LIBRARY\n\n#  DESTINATION ${PLUGINDIR}\n\n#  PERMISSIONS ${PLUGIN_PERMISSIONS}\n\n#)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/scriptplugin/CMakeLists.txt" : {
      "ObjectId" : "5a18994ab9e62eb175902df2df19cb661683552d",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Gentoo has an option for no examples. Let's make the ebuild simpler and open up the option to others, but leave as a default for us\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set_target_properties(${SCRIBUS_SCRIPTER_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scribus/plugins/scriptplugin/samples/CMakeLists.txt" : {
      "ObjectId" : "1e1368422589cf5960b92dd9ad993a47576f2d29",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/scriptplugin/scripts/CMakeLists.txt" : {
      "ObjectId" : "feced38786e16c59b1a6f23fdd7dc1d4d6ba49e1",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/shapes/CMakeLists.txt" : {
      "ObjectId" : "52289620e47e6d77cff4dfaaa241c6880f2028b9",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/short-words/CMakeLists.txt" : {
      "ObjectId" : "811216a3fc8dac6486039973ad94764c906a2471",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_FONTPREVIEW_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/tools/2geomtools/CMakeLists.txt" : {
      "ObjectId" : "9b6683cbb90924483c593770724fc404256d1bb3",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/2geomtools/meshdistortion/CMakeLists.txt" : {
      "ObjectId" : "7087fd429c12b803a6c437c9780af7608376fbd2",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/2geomtools/pathalongpath/CMakeLists.txt" : {
      "ObjectId" : "4d5c76f2ab8580b0152868f4dbbf92aa46f6429f",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/CMakeLists.txt" : {
      "ObjectId" : "42dda5be7af5812452ff67c45b219864b96628ad",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/tools/flattenpath/CMakeLists.txt" : {
      "ObjectId" : "60451c12ff4ad30eecf724b9a71c94ce350eee4e",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/hunspellcheck/CMakeLists.txt" : {
      "ObjectId" : "820961751b0d1f059882b4a62a07ffad2586a7b4",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_ASPELL_PLUGIN} PROPERTIES VERSION \"0.0.1\")\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/tools/lenseffects/CMakeLists.txt" : {
      "ObjectId" : "48bfe4653d4324ac3075a7936627a710324629e1",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_COLORWHEEL_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/tools/pathconnect/CMakeLists.txt" : {
      "ObjectId" : "3664585516cc407b5965fbfa54fedc1d05428663",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/pathcut/CMakeLists.txt" : {
      "ObjectId" : "fdad19b90c2f09850c5964b9ad49ac71e3af0dcc",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/pathfinder/CMakeLists.txt" : {
      "ObjectId" : "7e28eaae47107372529bdcf85c35c8da9b2fe75b",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/pathstroker/CMakeLists.txt" : {
      "ObjectId" : "ebd34fb8edb7d7773491d1200809450ca2103f9e",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/smoothpath/CMakeLists.txt" : {
      "ObjectId" : "e637d5f8d59d7e1551571511dd5cd824b919587a",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/plugins/tools/subdivide/CMakeLists.txt" : {
      "ObjectId" : "5747574ebddd12ea83960a38e28523f65b6d86a3",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set_target_properties(${SCRIBUS_COLORWHEEL_PLUGIN} PROPERTIES VERSION \"0.0.0\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/plugins/tools/transform/CMakeLists.txt" : {
      "ObjectId" : "87184f3cd243a962c04d5d243a9eff16cc198588",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/relaxng/CMakeLists.txt" : {
      "ObjectId" : "db262945b0928522d5454eca4e587ab994c4114f",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(QT4_WRAP_CPP)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# endif()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\n\n# main API.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "scribus/styles/CMakeLists.txt" : {
      "ObjectId" : "046640e169a95f6c9ea576372bbcbbba412f4e71",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\n\n# main API.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/tests/CMakeLists.txt" : {
      "ObjectId" : "5dca57d688f29c52563fe4c40ad20996936831b3",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#testIndex.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#testIndex.cpp\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\n\n# main API.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Regular unit tests below.\n\n#\n\n# These tests are built as standalone executables and runned using \"make test\"\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unit tests for CellArea\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "scribus/text/CMakeLists.txt" : {
      "ObjectId" : "af8a58bfa697579131a4ef0f69cd8af9f07f080f",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\n\n# main API.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/third_party/CMakeLists.txt" : {
      "ObjectId" : "c2d8a582285f3cadd39d03cac17107486651a544",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/third_party/lib2geom/CMakeLists.txt" : {
      "ObjectId" : "52f53df304034f4c0807c9e2d22b2bb14d3ba329",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\r\n\n# main API.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/third_party/pgf/CMakeLists.txt" : {
      "ObjectId" : "822a3f2ee87fea188e38b1f4352e43f29d5abf1a",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/third_party/prc/CMakeLists.txt" : {
      "ObjectId" : "09fdeed618b0e2577671398ecdb5fc0fd347cfea",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\n\n# main API.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/third_party/rtf-qt/CMakeLists.txt" : {
      "ObjectId" : "af222c3b8e66bce9b6b12d7ec2e62564c66efd8d",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/third_party/wpg/CMakeLists.txt" : {
      "ObjectId" : "d0ffeff41dce962bd12d7ecbf24c9e452a2be218",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a convenience library that for linkage purposes is part of Scribus's\r\n\n# main API.\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scribus/third_party/zip/CMakeLists.txt" : {
      "ObjectId" : "a781f8365be7f3395b158dfd06db41f62c5e0fec",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scribus/ui/qml/CMakeLists.txt" : {
      "ObjectId" : "e691c98a1339b00f66661ca17dd3d36a9ecf62af",
      "LastModified" : "2019-03-10T12:44:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 153,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 10353
}