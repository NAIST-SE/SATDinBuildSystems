{
  "Repository" : "68153",
  "Revision" : "HEAD",
  "ObjectId" : "a3fd05cf7e54abae5354e8e62b863c54a94e4acb",
  "CommitTime" : "2019-04-17T16:37:38Z",
  "Files" : {
    "AVR/1-Key-Keyboard/default/Makefile" : {
      "ObjectId" : "f9522f012e3c181230d48f11b154d36850cb95da",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project 1-Key-Keyboard\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Include Directories\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 40:13 token recognition error at: '\"F:\\D'\nline 40:28 token recognition error at: '\\A'\nline 40:32 token recognition error at: '\\1'\nline 40:47 token recognition error at: '\\u'\nline 40:61 token recognition error at: '\\D'\nline 40:73 token recognition error at: '\\A'\nline 40:77 token recognition error at: '\\1'\nline 40:94 token recognition error at: '\" \\r\\n\\r\\n## Objects that must be built in order to link\\r\\nOBJECTS = main.o oddebug.o usbdrv.o usbdrvasm.o \\r\\n\\r\\n## Objects explicitly added by the user\\r\\nLINKONLYOBJECTS = \\r\\n\\r\\n## Build\\r\\nall: $(TARGET) 1-Key-Keyboard.hex 1-Key-Keyboard.eep 1-Key-Keyboard.lss size\\r\\n\\r\\n## Compile\\r\\nmain.o: ../main.c\\r\\n\\t$(CC) $(INCLUDES) $(CFLAGS) -c  $<\\r\\n\\r\\noddebug.o: ../usbdrv/oddebug.c\\r\\n\\t$(CC) $(INCLUDES) $(CFLAGS) -c  $<\\r\\n\\r\\nusbdrv.o: ../usbdrv/usbdrv.c\\r\\n\\t$(CC) $(INCLUDES) $(CFLAGS) -c  $<\\r\\n\\r\\nusbdrvasm.o: ../usbdrv/usbdrvasm.S\\r\\n\\t$(CC) $(INCLUDES) $(ASMFLAGS) -c  $<\\r\\n\\r\\n##Link\\r\\n$(TARGET): $(OBJECTS)\\r\\n\\t $(CC) $(LDFLAGS) $(OBJECTS) $(LINKONLYOBJECTS) $(LIBDIRS) $(LIBS) -o $(TARGET)\\r\\n\\r\\n%.hex: $(TARGET)\\r\\n\\tavr-objcopy -O ihex $(HEX_FLASH_FLAGS)  $< $@\\r\\n\\r\\n%.eep: $(TARGET)\\r\\n\\t-avr-objcopy $(HEX_EEPROM_FLAGS) -O ihex $< $@ || exit 0\\r\\n\\r\\n%.lss: $(TARGET)\\r\\n\\tavr-objdump -h -S $< > $@\\r\\n\\r\\nsize: ${TARGET}\\r\\n\\t@echo\\r\\n\\t@avr-size -C --mcu=${MCU} ${TARGET}\\r\\n\\r\\n## Clean target\\r\\n.PHONY: clean\\r\\nclean:\\r\\n\\t-rm -rf $(OBJECTS) 1-Key-Keyboard.elf dep/* 1-Key-Keyboard.hex 1-Key-Keyboard.eep 1-Key-Keyboard.lss 1-Key-Keyboard.map\\r\\n\\r\\n\\r\\n## Other dependencies\\r\\n-include $(shell mkdir dep 2>/dev/null) $(wildcard dep/*)\\r\\n\\r\\n\u0000'\n"
    },
    "AVR/7seg/firmware/Makefile" : {
      "ObjectId" : "421789f929b2bab7268672aad80a951817e5dec1",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PROGRAMMER = -c avrisp2 -P usb \n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FUSES      = -U hfuse:w:0xd7:m -U lfuse:w:0xc2:m -U efuse:w:0xf9:m\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-U efuse:w:0xff:m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# file targets:\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/AVR-GCC-Algorithm/firmware/Makefile" : {
      "ObjectId" : "79dc42767d75f857d7ab1ada770fa57d5663bc27",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/AVR-GCC-Assembler/firmware/Makefile" : {
      "ObjectId" : "d9f0682694e8b71f0e17f12b6a350e0baf07ccba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/AVR-GCC-Demo/firmware/Makefile" : {
      "ObjectId" : "8b12791b3a1aa91d4a64f11479fe9d5222a8496d",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/AVR-GCC-Test/firmware/Makefile" : {
      "ObjectId" : "4ce0bbe0a3ff24903dada97638dfc888d5288e7d",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/AVR-Stick/firmware/Makefile" : {
      "ObjectId" : "c054edb490ec9bf7c71efa5d560a2907a54c7ecd",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: EasyLogger\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2007-06-23\n\n# Tabsize: 4\n\n# Copyright: (c) 2007 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GPLv2.\n\n# This Revision: $Id: Makefile 362 2007-06-25 14:38:21Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The two lines above are for \"avrdude\" and the STK500 programmer connected\n\n# to an USB to serial converter to a Mac running Mac OS X.\n\n# Choose your favorite programmer and interface.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NEVER compile the final product with debugging! Any debug output will\n\n# distort timing so that the specs can't be met.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fuse high byte:\n\n# 0xdd = 1 1 0 1   1 1 0 1\n\n#        ^ ^ ^ ^   ^ \\-+-/ \n\n#        | | | |   |   +------ BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | |   +---------- EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (disable external reset -> enabled)\n\n#\n\n# Fuse low byte:\n\n# 0xe1 = 1 1 1 0   0 0 0 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> HF PLL)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# file targets:\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# do the checksize script as our last action to allow successful compilation\n\n# on Windows with WinAVR where the Unix commands will fail.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "AVR/AVR-Stick_v12/Makefile" : {
      "ObjectId" : "adf974a920407e7de0c4c823ce5f8f34e95bb500",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: EasyLogger\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2007-06-23\n\n# Tabsize: 4\n\n# Copyright: (c) 2007 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GPLv2.\n\n# This Revision: $Id: Makefile 362 2007-06-25 14:38:21Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The two lines above are for \"avrdude\" and the STK500 programmer connected\n\n# to an USB to serial converter to a Mac running Mac OS X.\n\n# Choose your favorite programmer and interface.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NEVER compile the final product with debugging! Any debug output will\n\n# distort timing so that the specs can't be met.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fuse high byte:\n\n# 0xdd = 1 1 0 1   1 1 0 1\n\n#        ^ ^ ^ ^   ^ \\-+-/ \n\n#        | | | |   |   +------ BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | |   +---------- EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (disable external reset -> enabled)\n\n#\n\n# Fuse low byte:\n\n# 0xe1 = 1 1 1 0   0 0 0 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> HF PLL)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# file targets:\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# do the checksize script as our last action to allow successful compilation\n\n# on Windows with WinAVR where the Unix commands will fail.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "AVR/AVRRTC/default/Makefile" : {
      "ObjectId" : "a8af9d2a359fdb988a05f20ce46ab4023dbeb248",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project AVRRTC\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##Link\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/AVRStudioTest/default/Makefile" : {
      "ObjectId" : "4f455741b0d8fbf45abfd8cb4665f9f0ca80991b",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project AVRStudioTest\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##Link\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/AVR_Based_SCSI_Ramdisk/V0-1_PIA/V0.1/Makefile" : {
      "ObjectId" : "46e4e5568bcd9fd17bf9cac588d7b285f75f5451",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#*******************************************************************************\n\n#*\n\n#* Header\n\n#*\n\n#* Project:      SCSI controller\n\n#*\n\n#* Module:       PIA\n\n#* File:         Makefile\n\n#*\n\n#* Language:     make\n\n#*\n\n#*               Rules: clean, all, gen, hex\n\n#*\n\n#* Description:  Makefile for Parallel Interface Agent firmware\n\n#*\n\n#* Copyright:    (C) 2004 by Michael Baeuerle <micha@hilfe-fuer-linux.de>\n\n#* License:      All rights reserved.\n\n#*               Redistribution and use in source and binary forms, with or\n\n#*               without modification, are permitted provided that the\n\n#*               following conditions are met:\n\n#*               - Redistributions of source code must retain the above\n\n#*                 copyright notice, this list of conditions and the following\n\n#*                 disclaimer.\n\n#*               - Redistributions in binary form must reproduce the above\n\n#*                 copyright notice, this list of conditions and the following\n\n#*                 disclaimer in the documentation and/or other materials\n\n#*                 provided with the distribution.\n\n#*               THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n#*               CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n#*               INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\n#*               MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n#*               DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n#*               CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#*               SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n#*               NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n#*               LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n#*               HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n#*               CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n#*               OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n\n#*               EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#*\n\n#* Written for:  Interpreter : make\n\n#*               Platform    : all\n\n#*               OS          : UNIX\n\n#* Tested:       Interpreter : GNU make (Version 3.77)\n\n#*               Platform    : IA32-SMP (2x PentiumPro)\n\n#*               OS          : GNU/Linux (Kernel version: 2.2.17)\n\n#* Tested:       Interpreter : GNU make (Version 3.77)\n\n#*               Platform    : IA32-SMP (2x PentiumPro)\n\n#*               OS          : GNU/Linux (Kernel version: 2.2.26)\n\n#* Tested:       Interpreter : GNU make (Version 3.78.1)\n\n#*               Platform    : SPARC32-SMP (2x SuperSPARC)\n\n#*               OS          : GNU/Linux (Kernel version: 2.2.19)\n\n#*\n\n#* Changelog:    2004-09-18  Michael Baeuerle\n\n#*               Created\n\n#*\n\n#*               2004-09-25  Michael Baeuerle\n\n#*               Dependencies updated\n\n#*\n\n#*               2004-10-16  Michael Baeuerle\n\n#*               Added handling for 'buffer.s'\n\n#*\n\n#*\n\n#* To do:        -\n\n#*\n\n#*******************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#*******************************************************************************\n\n#*\n\n#* Macro definitions\n\n#*\n\n#*******************************************************************************\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target names\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Assemblers\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Assembler flags\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Converters\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Converter flags\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Directories\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#*******************************************************************************\n\n#*\n\n#* Main rules\n\n#*\n\n#*******************************************************************************\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Complete rebuild\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create target binary\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Convert binary in Atmel GENERIC format to Intel HEX format\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This forces a complete re-build for \"make all\"\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#*******************************************************************************\n\n#*\n\n#* Sub rules\n\n#*\n\n#*******************************************************************************\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# EOF\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "AVR/Candle/firmware/Makefile" : {
      "ObjectId" : "3960c5eb852f7fb711f1061e3ed179d5bb62db82",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U hfuse:w:0xdb:m -U lfuse:w:0xff:m \n",
        "Line" : 21,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "AVR/Clock168/default/Makefile" : {
      "ObjectId" : "4a3432b8c972fd93c579d28d21ca9f329ced01fc",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project Clock168\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##Link\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/HIDKeys2313/Makefile" : {
      "ObjectId" : "b7ee1c4c4da895f19165e02e858e5c549b621f8a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: HIDKeys\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2006-02-02\n\n# Tabsize: 4\n\n# Copyright: (c) 2006 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt) or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 301 2007-03-29 17:07:53Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SERIAL = `echo /dev/tty.KeySerial*`\n\n#UISP = uisp -dprog=avr910 -dserial=$(SERIAL) -dpart=auto\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The two lines above are for \"uisp\" and the AVR910 serial programmer connected\n\n# to a Keyspan USB to serial converter to a Mac running Mac OS X.\n\n# Choose your favorite programmer and interface.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (full output swing)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ WDTON (WDT not always on)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (BrownOut Detector enabled)\n\n#        +-------------------- BODLEVEL (2.7V)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\t$(UISP) --wr_fuse_h=0xc9 --wr_fuse_l=0x9f\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# file targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# do the checksize script as our last action to allow successful compilation\n\n# on Windows with WinAVR where the Unix commands will fail.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "AVR/LTC5940/firmware/Makefile" : {
      "ObjectId" : "38e6d74c24a8414fd3dafd020ee4dd853065e4af",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/LTC5940Tiny/default/Makefile" : {
      "ObjectId" : "08f8171bf10105afc9d41e59cf5e9f8e51a9107d",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project TLC5940Tiny\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Include Directories\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 40:13 token recognition error at: '\"C:\\D'\nline 40:39 token recognition error at: '\\s'\nline 40:43 token recognition error at: '\\M'\nline 40:56 token recognition error at: '\\T'\nline 40:80 token recognition error at: '\\P'\nline 40:94 token recognition error at: '\\a'\nline 40:107 token recognition error at: '\\h'\nline 40:116 token recognition error at: '\\a'\nline 40:124 token recognition error at: '\\c'\nline 40:130 token recognition error at: '\\a'\nline 40:138 token recognition error at: '\" \\r\\n\\r\\n## Objects that must be built in order to link\\r\\nOBJECTS = TLC5940Tiny.o \\r\\n\\r\\n## Objects explicitly added by the user\\r\\nLINKONLYOBJECTS = \\r\\n\\r\\n## Build\\r\\nall: $(TARGET) TLC5940Tiny.hex TLC5940Tiny.eep TLC5940Tiny.lss size\\r\\n\\r\\n## Compile\\r\\nTLC5940Tiny.o: ../TLC5940Tiny.c\\r\\n\\t$(CC) $(INCLUDES) $(CFLAGS) -c  $<\\r\\n\\r\\n##Link\\r\\n$(TARGET): $(OBJECTS)\\r\\n\\t $(CC) $(LDFLAGS) $(OBJECTS) $(LINKONLYOBJECTS) $(LIBDIRS) $(LIBS) -o $(TARGET)\\r\\n\\r\\n%.hex: $(TARGET)\\r\\n\\tavr-objcopy -O ihex $(HEX_FLASH_FLAGS)  $< $@\\r\\n\\r\\n%.eep: $(TARGET)\\r\\n\\t-avr-objcopy $(HEX_EEPROM_FLAGS) -O ihex $< $@ || exit 0\\r\\n\\r\\n%.lss: $(TARGET)\\r\\n\\tavr-objdump -h -S $< > $@\\r\\n\\r\\nsize: ${TARGET}\\r\\n\\t@echo\\r\\n\\t@avr-size -C --mcu=${MCU} ${TARGET}\\r\\n\\r\\n## Clean target\\r\\n.PHONY: clean\\r\\nclean:\\r\\n\\t-rm -rf $(OBJECTS) TLC5940Tiny.elf dep/* TLC5940Tiny.hex TLC5940Tiny.eep TLC5940Tiny.lss TLC5940Tiny.map\\r\\n\\r\\n\\r\\n## Other dependencies\\r\\n-include $(shell mkdir dep 2>/dev/null) $(wildcard dep/*)\\r\\n\\r\\n\u0000'\n"
    },
    "AVR/LUFA-111009/Bootloaders/HID/HostLoaderApp/Makefile" : {
      "ObjectId" : "2a602a946df416a74ba06ae35cc7fbef47d26618",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#OS ?= WINDOWS\r\n\n#OS ?= MACOSX\r\n\n#OS ?= BSD\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also works on FreeBSD\r\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "# works on NetBSD and OpenBSD\r\n",
        "Line" : 28,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 3
    },
    "AVR/LilyClock/firmware/Makefile" : {
      "ObjectId" : "ae048a6533eea14d6707b761730fa46b3ffc82aa",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/Pololu/libpololu-avr/Makefile" : {
      "ObjectId" : "37e728a7560006ab26dcf95241ad88b0c2a34f85",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTE: to compile with avr-gcc less than verson 4.2.3, you must\r\n\n# remove the atmega328p from the list of target devices below:\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to do our recursive make with cd, since WinAVR does not support make -C.\r\n\n# See WinAVR bug 1932584, \"recursive make call fails\"\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Change the path to allow make within sh to work: see WinAVR bug 1915456 \"make ignores parameters when executed from sh\"\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \"make install\" basically just copies the .a and files to the lib directory,\r\n\n# and the header files to the include directory.  The tricky thing is\r\n\n# determining which directories those are in this makefile.\r\n\n#\r\n\n# By default, this makefile will install .a files in $(LIB)\r\n\n# and header files in $(LIB)/../include/pololu, where LIB is determined\r\n\n# by running `avr-gcc -print-search-dirs`, looking on the libraries\r\n\n# line, taking the last directory listed.\r\n\n#\r\n\n# This seems to be a good choice on most systems because it points to\r\n\n# a path that does not include the avr-gcc version number.\r\n\n#\r\n\n# You can check what directories this makefile will use by running\r\n\n#    make show_prefix\r\n\n#\r\n\n# You can override this behavior by inserting a line below that manually\r\n\n# sets INCLUDE_POLOLU and LIB to a directory of your choice.\r\n\n# For example, you could uncomment these lines:\r\n\n#   LIB := /usr/lib/avr/lib\r\n\n#   INCLUDE_POLOLU := /usr/lib/avr/include\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Figure out what operating system we are running in.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Directories are separated with ;\r\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Directories are separated with :\r\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Normalize the directory names so they don't have \"..\" in them.\r\n\n# Doesn't work in Windows.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We make all of the examples from templates in the examples_templates\r\n\n# directory (which is not distributed), by running a bunch of commands\r\n\n# concatenated together with &&.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The 48 examples are the only ones that will work on the mega48.\r\n\n# They will also work on the orangutans, which could have either a 168\r\n\n# or a 328 processor.\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The following code creates the zip file.\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "AVR/Pololu/libpololu-avr/devices/Makefile" : {
      "ObjectId" : "88bf3e45f9bb52250cdd64da6a6e43b87f426c8c",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/devices/atmega1284p/Makefile" : {
      "ObjectId" : "c291b4955ab42f0b575e8684a99dc29bbac5a60d",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/devices/atmega168/Makefile" : {
      "ObjectId" : "19d27cd7cc51137152d221e66ca217f2f837105a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/devices/atmega324p/Makefile" : {
      "ObjectId" : "0d1c487239709bcc64800d463fa2f29a0eacf913",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/devices/atmega328p/Makefile" : {
      "ObjectId" : "1734e4de14751ffe499d6f8cc6136068464b4f9c",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/devices/atmega48/Makefile" : {
      "ObjectId" : "6dddfe77ce3b643cdff3543272f6c681daa71985",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/analog1/Makefile" : {
      "ObjectId" : "52c75f7f5ea362932e9fc116da7d0d4e6e8e5485",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/analog3/Makefile" : {
      "ObjectId" : "f2d9fff0e6cf5fea846f240a994b8c17b68b85c6",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/buzzer1/Makefile" : {
      "ObjectId" : "8ad2c2b3337fecc7c95c5ea87d3b363ac488dee6",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/buzzer2/Makefile" : {
      "ObjectId" : "52c75f7f5ea362932e9fc116da7d0d4e6e8e5485",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/buzzer3/Makefile" : {
      "ObjectId" : "52c75f7f5ea362932e9fc116da7d0d4e6e8e5485",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/digital1/Makefile" : {
      "ObjectId" : "52c75f7f5ea362932e9fc116da7d0d4e6e8e5485",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/lcd1/Makefile" : {
      "ObjectId" : "52c75f7f5ea362932e9fc116da7d0d4e6e8e5485",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/lcd2/Makefile" : {
      "ObjectId" : "52c75f7f5ea362932e9fc116da7d0d4e6e8e5485",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/led1/Makefile" : {
      "ObjectId" : "52c75f7f5ea362932e9fc116da7d0d4e6e8e5485",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/motors1/Makefile" : {
      "ObjectId" : "e0f38169e0d5b7bfff624307f08b89e92d991bd2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/motors2/Makefile" : {
      "ObjectId" : "e0f38169e0d5b7bfff624307f08b89e92d991bd2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/pushbuttons1/Makefile" : {
      "ObjectId" : "e0f38169e0d5b7bfff624307f08b89e92d991bd2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/simple-test/Makefile" : {
      "ObjectId" : "e0f38169e0d5b7bfff624307f08b89e92d991bd2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/simple_servo_control/Makefile" : {
      "ObjectId" : "e0f38169e0d5b7bfff624307f08b89e92d991bd2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/svp-demo-program/Makefile" : {
      "ObjectId" : "dd6d06b45526f6470fef33918c5d92057920fdf2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/svp-eight-servo/Makefile" : {
      "ObjectId" : "dd6d06b45526f6470fef33918c5d92057920fdf2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/svp-one-servo/Makefile" : {
      "ObjectId" : "dd6d06b45526f6470fef33918c5d92057920fdf2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/svp-sixteen-servo/Makefile" : {
      "ObjectId" : "dd6d06b45526f6470fef33918c5d92057920fdf2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/svp1/Makefile" : {
      "ObjectId" : "dd6d06b45526f6470fef33918c5d92057920fdf2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega1284p/wheel_encoders1/Makefile" : {
      "ObjectId" : "e0f38169e0d5b7bfff624307f08b89e92d991bd2",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/3pi-demo-program/Makefile" : {
      "ObjectId" : "6cdff9b2d5656615af51df6a6d32ea48881b04e5",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/3pi-linefollower-pid/Makefile" : {
      "ObjectId" : "6cdff9b2d5656615af51df6a6d32ea48881b04e5",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/3pi-linefollower/Makefile" : {
      "ObjectId" : "337dc49cd0662372c84a72ec76495b11f070357d",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#PORT ?= /dev/ttyUSB0\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/3pi-mazesolver/Makefile" : {
      "ObjectId" : "4c4fa18fac261058f4c98984720c28e6436994ce",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/3pi-serial-master/Makefile" : {
      "ObjectId" : "9795b79c88c9b96d4dfc303d5dc4ea6d11ea004a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/3pi-serial-slave/Makefile" : {
      "ObjectId" : "595760aee72523f9ed9bc4d400763871cb250b63",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/LV-xx8_demo_program/Makefile" : {
      "ObjectId" : "6bac115628c481931c81fc885a1c15a0ee5ea3e5",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/SV-xx8_demo_program/Makefile" : {
      "ObjectId" : "6cdff9b2d5656615af51df6a6d32ea48881b04e5",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/analog1/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/analog2/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/analog3/Makefile" : {
      "ObjectId" : "ff7188659b0126f033ee0f4d8dd4c2747a7c6b3d",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/buzzer1/Makefile" : {
      "ObjectId" : "3c6cd54194ffa97bc350621d5ffa6ca6bcf7ebca",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/buzzer2/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/buzzer3/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/digital1/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/lcd1/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/lcd2/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/led1/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/motors1/Makefile" : {
      "ObjectId" : "f5bdca8da536fb4e573877a25e3525f3a8d8e09a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/motors2/Makefile" : {
      "ObjectId" : "f5bdca8da536fb4e573877a25e3525f3a8d8e09a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/pushbuttons1/Makefile" : {
      "ObjectId" : "f5bdca8da536fb4e573877a25e3525f3a8d8e09a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/serial1/Makefile" : {
      "ObjectId" : "b9120b61b5f379a8fa42b7b66c0c29060a9fcfba",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/simple-test/Makefile" : {
      "ObjectId" : "f5bdca8da536fb4e573877a25e3525f3a8d8e09a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/simple_servo_control/Makefile" : {
      "ObjectId" : "f5bdca8da536fb4e573877a25e3525f3a8d8e09a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Pololu/libpololu-avr/examples/atmega328p/wheel_encoders1/Makefile" : {
      "ObjectId" : "f5bdca8da536fb4e573877a25e3525f3a8d8e09a",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/Teensy/blinky/Makefile" : {
      "ObjectId" : "de834bb804276cfa9ae23c79fb9b1046e8676d4c",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\n\n#----------------------------------------------------------------------------\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\n\n#\n\n# Released to the Public Domain\n\n#\n\n# Additional material for this makefile was written by:\n\n# Peter Fleury\n\n# Tim Henigan\n\n# Colin O'Flynn\n\n# Reiner Patommel\n\n# Markus Pfaff\n\n# Sander Pool\n\n# Frederik Rouleau\n\n# Carlos Lamas\n\n#\n\n#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device, using avrdude.\n\n#                Please customize the avrdude settings below first!\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging, \n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#\n\n#MCU = at90usb162       # Teensy 1.0\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Teensy 2.0\n",
        "Line" : 56,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "#MCU = at90usb646       # Teensy++ 1.0\n\n#MCU = at90usb1286      # Teensy++ 2.0\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#   Normally the first thing your program should do is set the clock prescaler,\n\n#   so your program will run at the correct speed.  You should also set this\n\n#   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Object files directory\n\n#     To put object files in current directory, use a dot (.), do NOT make\n\n#     this an empty or blank macro!\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\n\n#     will not be considered source files but generated files (assembler\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n#     it will preserve the spelling of the filenames, and gcc itself does\n\n#     care about how the name is spelled on its command-line.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s]. \n\n#     0 = turn off optimization. s = optimize for size.\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\n\n#     AVR Studio 4.10 requires dwarf-2.\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#     Each directory must be seperated by a space.\n\n#     Use forward slashes for directory separators.\n\n#     For a directory that has spaces, enclose it in quotes.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n#     c89   = \"ANSI\" C\n\n#     gnu89 = c89 plus GCC extensions\n\n#     c99   = ISO C99 standard (not yet fully implemented)\n\n#     gnu99 = c99 plus GCC extensions\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\n\n#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -mshort-calls\n\n#CFLAGS += -fno-unit-at-a-time\n\n#CFLAGS += -Wundef\n\n#CFLAGS += -Wunreachable-code\n\n#CFLAGS += -Wsign-compare\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\n\n#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CPPFLAGS += -mshort-calls\n\n#CPPFLAGS += -fno-unit-at-a-time\n\n#CPPFLAGS += -Wstrict-prototypes\n\n#CPPFLAGS += -Wunreachable-code\n\n#CPPFLAGS += -Wsign-compare\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------- Assembler Options ----------------\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\n\n#  -adhlns:   create listing\n\n#  -gstabs:   have the assembler create line number information; note that\n\n#             for use in COFF files, additional information about filenames\n\n#             and function names needs to be present in the assembler source\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex \n\n#       dump that will be displayed for a given single line of source input.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Library Options ----------------\n\n# Minimalistic printf version\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Minimalistic scanf version\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List any extra directories to look for libraries here.\n\n#     Each directory must be seperated by a space.\n\n#     Use forward slashes for directory separators.\n\n#     For a directory that has spaces, enclose it in quotes.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------- External Memory Options ----------------\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\n\n# used for variables (.data/.bss) and heap (malloc()).\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\n\n# only used for heap (malloc()).\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---------------- Linker Options ----------------\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#LDFLAGS += -T linker_script.x\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Programming hardware\n\n# Type: avrdude -c ?\n\n# to get a full listing.\n\n#\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# programmer connected to serial device\n",
        "Line" : 275,
        "CharPositionInLine" : 23
      },
      "43" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\n\n# Note that this counter needs to be initialized first using -Yn,\n\n# see avrdude manual.\n\n#AVRDUDE_ERASE_COUNTER = -y\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\n\n# performed after programming the device.\n\n#AVRDUDE_NO_VERIFY = -V\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude> \n\n# to submit bug reports.\n\n#AVRDUDE_VERBOSE = -v -v\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Debugging Options ----------------\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For simulavr only - target MCU frequency.\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\n\n# DEBUG_UI = gdb\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#DEBUG_BACKEND = simulavr\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# GDB Init Filename.\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# When using avarice settings for the JTAG\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\n\n#     just set to localhost unless doing some sort of crazy debugging when \n\n#     avarice is running on a different computer.\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#============================================================================\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define programs and commands.\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define Messages\n\n# English\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define all object files.\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all listing files.\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Compiler flags to generate dependency files.\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target.\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the build target to build a HEX file or a library.\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#build: lib\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Eye candy.\n\n# AVR Studio 3.x does not check make's exit code but relies on\n\n# the following magic strings to be generated by the compile job.\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Display size of file.\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#ELFSIZE = $(SIZE) --mcu=$(MCU) --format=avr $(TARGET).elf\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.  \n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\n\n#     define the reset signal, load the target file, connect to target, and set \n\n#     a breakpoint at main().\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "AVR/Templates/AVR-GCC-ATmega238p/firmware/Makefile" : {
      "ObjectId" : "63204d7708c953f6bfb71d47c194746e3862d4d1",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FUSES      = -U hfuse:w:0xd9:m -U lfuse:w:0x24:m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/Templates/AVR-GCC-Arduino/firmware/Makefile" : {
      "ObjectId" : "b113dac349a349c3fbade67b081aa9682eb994c9",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FUSES      = -U hfuse:w:0xd9:m -U lfuse:w:0x24:m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CORE_CPP_SRCS   = $(wildcard $(ARDUINO_CORE_PATH)/*.cpp)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# General arguments\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CPPFLAGS      = -mmcu=$(MCU) -DF_CPU=$(F_CPU) \\\n#\t\t\t-I. -I$(ARDUINO_CORE_PATH) \\\n#\t\t\t$(SYS_INCLUDES) -g -Os -w -Wall \\\n#\t\t\t-ffunction-sections -fdata-sections\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# core files\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# file targets:\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "AVR/Templates/AVR-GCC-Demo/firmware/Makefile" : {
      "ObjectId" : "8eecfd026c2c156083f30c1a75cb9a6c3cc238bf",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/Templates/AVR-GCC-TemplateProject/firmware/Makefile" : {
      "ObjectId" : "c7e30a25ef66d8ec72bdc0c0e0bfbd9cba80d3c4",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/Templates/AVR-GCC-assembler/firmware/Makefile" : {
      "ObjectId" : "694c41578b1111f202198c339516cbe7dd8a7df0",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/Templates/AVRStudio4-GCC-assembler/default/Makefile" : {
      "ObjectId" : "f86731e7ebb90b4e617e8dccc8a70f51baa77743",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project AVRStudio4-GCC-Assembler\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##Link\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/Templates/AVRStudio4-GCC-assembler/firmware/Makefile" : {
      "ObjectId" : "694c41578b1111f202198c339516cbe7dd8a7df0",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/Tiny85/firmware/Makefile" : {
      "ObjectId" : "acc3f479f10eb40d269012878cf8e4e9ee7995dc",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/TinyMBox/firmware/Makefile" : {
      "ObjectId" : "686569c38eb11855e9b91e90d9b211cd45872a2d",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -b 19200\n",
        "Line" : 19,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "AVR/TinyMonitor/firmware/Makefile" : {
      "ObjectId" : "bd20e7e86ff00ba23cf59038fd5cef64a37b1cb3",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CLOCK      = 8000000\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -U efuse:v:0xff:m\n\n# Tune the lines below only if you know what you are doing:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# file targets:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "AVR/TinyTest/firmware/Makefile" : {
      "ObjectId" : "e3f307cdb6c8233834e9163fe4861f47a94ed3fc",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/attiny2313clock/firmware/Makefile" : {
      "ObjectId" : "77dfc5aa3b2154a456cbd7d4280bdf0418a1ecfc",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/attiny2313selfprog/firmware/Makefile" : {
      "ObjectId" : "5f9d5be4a4fec2989d4eb48b36c165c59dd29b86",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/avrasm/sample/Makefile" : {
      "ObjectId" : "59ea2434e3a09a4a94ce903a16705c370c92bc92",
      "LastModified" : "2017-09-04T06:10:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#$ARDUINO_AVR_DIR/bin/avrdude -C$ARDUINO_AVR_DIR/etc/avrdude.conf -patmega328p -cstk500v1 -P/dev/cu.usbserial-A6008d1U -b 57600 -D -U flash:w:main.hex:i\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# file targets:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "AVR/avrcpm-nekojava/z80cpm20110723/src/Makefile" : {
      "ObjectId" : "1e75d121938b4a64356c404f0fcdb0289e2df841",
      "LastModified" : "2017-10-30T02:33:09Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "AVR/avrcpm-petersieg/avr-cpm/z80/Makefile" : {
      "ObjectId" : "840121f395d5cad7749f29e00cae324ec8c10488",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#WARNING! Do not run a 'make install' unless you know what you're doing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "AVR/avrcpm-petersieg/avrcpm_upd3/Makefile" : {
      "ObjectId" : "664425ff5a5c59c98b0dbb07251fa29a1ad79a8d",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# AVR-ASM Makefile, derived from the WinAVR template (which\n\n# is public domain), believed to be neutral to any flavor of \"make\"\n\n# (GNU make, BSD make, SysV make)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MCU = atmega8\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#BAUD = 19200\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#BAUD = 115200\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ASRC := $(ASRC0) svnrev.inc\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Place -D or -U options here\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\n\n# Note that this counter needs to be initialized first using -Yn,\n\n# see avrdude manual.\n\n#AVRDUDE_ERASE_COUNTER = -y\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\n\n# performed after programming the device.\n\n#AVRDUDE_NO_VERIFY = -V\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude> \n\n# to submit bug reports.\n\n#AVRDUDE_VERBOSE = -v -v\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define all listing files.\n\n#LST = $(ASRC:.asm=.lst)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Default target.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Program the device.  \n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#.SUFFIXES: .hex .eep .lst\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "AVR/avrcpm-petersieg/github/avr/Makefile" : {
      "ObjectId" : "664425ff5a5c59c98b0dbb07251fa29a1ad79a8d",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# AVR-ASM Makefile, derived from the WinAVR template (which\n\n# is public domain), believed to be neutral to any flavor of \"make\"\n\n# (GNU make, BSD make, SysV make)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MCU = atmega8\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#BAUD = 19200\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#BAUD = 115200\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ASRC := $(ASRC0) svnrev.inc\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Place -D or -U options here\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\n\n# Note that this counter needs to be initialized first using -Yn,\n\n# see avrdude manual.\n\n#AVRDUDE_ERASE_COUNTER = -y\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\n\n# performed after programming the device.\n\n#AVRDUDE_NO_VERIFY = -V\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude> \n\n# to submit bug reports.\n\n#AVRDUDE_VERBOSE = -v -v\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define all listing files.\n\n#LST = $(ASRC:.asm=.lst)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Default target.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Program the device.  \n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#.SUFFIXES: .hex .eep .lst\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "AVR/avrcpm-sprites-0.1/avr/Makefile" : {
      "ObjectId" : "fa5c223c196c4bbe0c333c8901f46307338be5c7",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#$ARDUINO_AVR_DIR/bin/avrdude -C$ARDUINO_AVR_DIR/etc/avrdude.conf -patmega328p -cstk500v1 -P/dev/cu.usbserial-A6008d1U -b 57600 -D -U flash:w:main.hex:i\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# file targets:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "AVR/avrcpm-sprites-0.1/z80/Makefile" : {
      "ObjectId" : "840121f395d5cad7749f29e00cae324ec8c10488",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#WARNING! Do not run a 'make install' unless you know what you're doing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "AVR/avrgcc-test/Makefile" : {
      "ObjectId" : "454f8356e398af229049eadc79c1419d3724f254",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\r\n\n# Author: <insert your name here>\r\n\n# Copyright: <insert your copyright message here>\r\n\n# License: <insert your license reference here>\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\r\n\n# You should at least check the settings for\r\n\n# DEVICE ....... The AVR device you compile for\r\n\n# CLOCK ........ Target AVR clock rate in Hertz\r\n\n# OBJECTS ...... The object files created from your source files. This list is\r\n\n#                usually the same as the list of source files with suffix \".o\".\r\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\r\n\n#                uploading to the AVR and the interface where this hardware\r\n\n#                is connected.\r\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\r\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\r\n\n# Example for 8 MHz internal oscillator\r\n\n# Fuse high byte:\r\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\r\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\r\n\n#        | | | |   | +-------- BOOTSZ1\r\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\r\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\r\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\r\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\r\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\r\n\n# Fuse low byte:\r\n\n# 0x24 = 0 0 1 0   0 1 0 0\r\n\n#        ^ ^ \\ /   \\--+--/\r\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\r\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\r\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\r\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\r\n\n# Fuse high byte:\r\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\r\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\r\n\n#        | | | |   | +-------- BOOTSZ1\r\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\r\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\r\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\r\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\r\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\r\n\n# Fuse low byte:\r\n\n# 0x9f = 1 0 0 1   1 1 1 1\r\n\n#        ^ ^ \\ /   \\--+--/\r\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\r\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\r\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\r\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ARDUINOVARIANT = ./arduino/variants/standard\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#AVRDUDE = avrdude $(PROG_DUE) -P$(COMPORT) -p $(DEVICE) \r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# symbolic targets:\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\r\n\n# file type for the .S (with capital S) extension. However, upper case\r\n\n# characters are not always preserved on Windows. To ensure WinAVR\r\n\n# compatibility define the file type manually.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#fuse:\r\n\n#\t$(AVRDUDE) $(FUSES)\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# file targets:\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\r\n\n# EEPROM and add it to the \"flash\" target.\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Targets for code debugging and analysis:\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "AVR/avrgcc-test/arduino/Makefile" : {
      "ObjectId" : "45deecfe6b83e8d5c646b776821b625dcde02871",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n# Automatically-generated file. Do not edit!\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All of the sources participating in the build are defined here\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add inputs and outputs from these tool invocations to the build variables \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All Target\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tool invocations\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Other Targets\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "AVR/avrgcc/Makefile" : {
      "ObjectId" : "d0a169d2d7067a2606341d939e709eebf9f3e9a5",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\r\n\n# Author: <insert your name here>\r\n\n# Copyright: <insert your copyright message here>\r\n\n# License: <insert your license reference here>\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\r\n\n# You should at least check the settings for\r\n\n# DEVICE ....... The AVR device you compile for\r\n\n# CLOCK ........ Target AVR clock rate in Hertz\r\n\n# OBJECTS ...... The object files created from your source files. This list is\r\n\n#                usually the same as the list of source files with suffix \".o\".\r\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\r\n\n#                uploading to the AVR and the interface where this hardware\r\n\n#                is connected.\r\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\r\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\r\n\n# Example for 8 MHz internal oscillator\r\n\n# Fuse high byte:\r\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\r\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\r\n\n#        | | | |   | +-------- BOOTSZ1\r\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\r\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\r\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\r\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\r\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\r\n\n# Fuse low byte:\r\n\n# 0x24 = 0 0 1 0   0 1 0 0\r\n\n#        ^ ^ \\ /   \\--+--/\r\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\r\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\r\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\r\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\r\n\n# Fuse high byte:\r\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\r\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\r\n\n#        | | | |   | +-------- BOOTSZ1\r\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\r\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\r\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\r\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\r\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\r\n\n# Fuse low byte:\r\n\n# 0x9f = 1 0 0 1   1 1 1 1\r\n\n#        ^ ^ \\ /   \\--+--/\r\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\r\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\r\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\r\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#AVRDUDE = avrdude $(PROG_DUE) -P$(COMPORT) -p $(DEVICE) \r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# symbolic targets:\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\r\n\n# file type for the .S (with capital S) extension. However, upper case\r\n\n# characters are not always preserved on Windows. To ensure WinAVR\r\n\n# compatibility define the file type manually.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#fuse:\r\n\n#\t$(AVRDUDE) $(FUSES)\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# file targets:\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\r\n\n# EEPROM and add it to the \"flash\" target.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets for code debugging and analysis:\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/avrgccasm/Makefile" : {
      "ObjectId" : "a84189eb5fcb23b5089339b719b3b9c4501cacc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PROGRAMMER = -c avrisp2 -P usb\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# file targets:\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "AVR/cp-mega88/Makefile" : {
      "ObjectId" : "70b24f996689dfd6b4e5a41bf77a3a1f229aaa88",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016, Takashi TOYOSHIMA <toyoshim@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# - Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n#\n\n# - Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# - Neither the name of the authors nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software with out\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUE\n\n# NTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#all: avr posix nacl32 nacl64 uboot_ac100 uboot_qemu_arm uboot_rpi uefi\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "AVR/cp-megaxxx0/Makefile" : {
      "ObjectId" : "9c6c6124ed426d6938f20f54b632e815670c0d42",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016, Takashi TOYOSHIMA <toyoshim@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# - Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n#\n\n# - Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# - Neither the name of the authors nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software with out\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUE\n\n# NTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# nacl32 nacl64 uboot_ac100 uboot_qemu_arm uboot_rpi uefi\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "AVR/megaclock/firmware/Makefile" : {
      "ObjectId" : "fc9f12b8ebdd32f3bf2e38511212785466cc2c79",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Author: <insert your name here>\n\n# Copyright: <insert your copyright message here>\n\n# License: <insert your license reference here>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\n\n# You should at least check the settings for\n\n# DEVICE ....... The AVR device you compile for\n\n# CLOCK ........ Target AVR clock rate in Hertz\n\n# OBJECTS ...... The object files created from your source files. This list is\n\n#                usually the same as the list of source files with suffix \".o\".\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\n\n#                uploading to the AVR and the interface where this hardware\n\n#                is connected.\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\n\n# Example for 8 MHz internal oscillator\n\n# Fuse high byte:\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x24 = 0 0 1 0   0 1 0 0\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\n\n# Fuse high byte:\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\n\n# Fuse low byte:\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# file targets:\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\n\n# EEPROM and add it to the \"flash\" target.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets for code debugging and analysis:\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "AVR/pepper/Makefile" : {
      "ObjectId" : "b3fc91bfe98fb1a0df1a04a4e3c3d29c10bea251",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for ginger & sugar\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "AVR/pepper/pepper45/Makefile" : {
      "ObjectId" : "ad1bdbed5afce0a260f438cb1a43f1adeb5f0a6b",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for pepper\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Include Directories\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Build\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Compile\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##Link\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Clean target\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/pepper/pepper85/Makefile" : {
      "ObjectId" : "d1a54cc22e536ab8494db32a98d5e4deac0dd866",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for pepper\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Include Directories\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Build\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Compile\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##Link\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Clean target\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "AVR/uart_mega/Makefile" : {
      "ObjectId" : "907709163d780b2ba30c92005f510fac88c4254f",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\r\n\n# Author: <insert your name here>\r\n\n# Copyright: <insert your copyright message here>\r\n\n# License: <insert your license reference here>\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a prototype Makefile. Modify it according to your needs.\r\n\n# You should at least check the settings for\r\n\n# DEVICE ....... The AVR device you compile for\r\n\n# CLOCK ........ Target AVR clock rate in Hertz\r\n\n# OBJECTS ...... The object files created from your source files. This list is\r\n\n#                usually the same as the list of source files with suffix \".o\".\r\n\n# PROGRAMMER ... Options to avrdude which define the hardware you use for\r\n\n#                uploading to the AVR and the interface where this hardware\r\n\n#                is connected.\r\n\n# FUSES ........ Parameters for avrdude to flash the fuses appropriately.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-U efuse:w:0x05m\r\n\n# ATMega8 fuse bits (fuse bits for other devices are different!):\r\n\n# Example for 8 MHz internal oscillator\r\n\n# Fuse high byte:\r\n\n# 0xd9 = 1 1 0 1   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\r\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\r\n\n#        | | | |   | +-------- BOOTSZ1\r\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\r\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\r\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\r\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\r\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\r\n\n# Fuse low byte:\r\n\n# 0x24 = 0 0 1 0   0 1 0 0\r\n\n#        ^ ^ \\ /   \\--+--/\r\n\n#        | |  |       +------- CKSEL 3..0 (8M internal RC)\r\n\n#        | |  +--------------- SUT 1..0 (slowly rising power)\r\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\r\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example for 12 MHz external crystal:\r\n\n# Fuse high byte:\r\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\r\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\r\n\n#        | | | |   | +-------- BOOTSZ1\r\n\n#        | | | |   +---------- EESAVE (set to 0 to preserve EEPROM over chip erase)\r\n\n#        | | | +-------------- CKOPT (clock option, depends on oscillator type)\r\n\n#        | | +---------------- SPIEN (if set to 1, serial programming is disabled)\r\n\n#        | +------------------ WDTON (if set to 0, watchdog is always on)\r\n\n#        +-------------------- RSTDISBL (if set to 0, RESET pin is disabled)\r\n\n# Fuse low byte:\r\n\n# 0x9f = 1 0 0 1   1 1 1 1\r\n\n#        ^ ^ \\ /   \\--+--/\r\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\r\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\r\n\n#        | +------------------ BODEN (if 0, brown-out detector is enabled)\r\n\n#        +-------------------- BODLEVEL (if 0: 4V, if 1: 2.7V)\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tune the lines below only if you know what you are doing:\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#AVRDUDE = avrdude $(PROG_DUE) -P$(COMPORT) -p $(DEVICE) \r\n\n#CCCOMPILE  = $(CROSSGCC) -Wall -Os -DF_CPU=$(CLOCK) -mmcu=$(DEVICE) -I$(ARDUINOINCDIR) -I$(ARDUINOVARIANT)\r\n\n#CPPCOMPILE = $(CROSSGXX) -Wall -Os -DF_CPU=$(CLOCK) -mmcu=$(DEVICE) -I$(ARDUINOINCDIR) -I$(ARDUINOVARIANT)\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# symbolic targets:\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\r\n\n# file type for the .S (with capital S) extension. However, upper case\r\n\n# characters are not always preserved on Windows. To ensure WinAVR\r\n\n# compatibility define the file type manually.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#fuse:\r\n\n#\t$(AVRDUDE) $(FUSES)\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Xcode uses the Makefile targets \"\", \"clean\" and \"install\"\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if you use a bootloader, change the command below appropriately:\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# file targets:\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\t$(CCCOMPILE) -o main.elf $(OBJECTS) $(CPPOBJECTS) -L$(ARDUINOCORELIBDIR) -l$(ARDUINOCORELIB)\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If you have an EEPROM section, you must also create a hex file for the\r\n\n# EEPROM and add it to the \"flash\" target.\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Targets for code debugging and analysis:\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "AVR/vusb-20090822/examples/custom-class/commandline/Makefile" : {
      "ObjectId" : "aaa948a2d15570199a5884a3a836b440a940f7b2",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: custom-class example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-06\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Concigure the following definitions according to your system.\n\n# This Makefile has been tested on Mac OS X, Linux and Windows.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the following 3 lines on Unix (uncomment the framework on Mac OS X):\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the following 3 lines on Windows and comment out the 3 above. You may\n\n# have to change the include paths to where you installed libusb-win32\n\n#USBFLAGS = -I/usr/local/include\n\n#USBLIBS = -L/usr/local/lib -lusb\n\n#EXE_SUFFIX = .exe\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "AVR/vusb-20090822/examples/custom-class/firmware/Makefile" : {
      "ObjectId" : "e909fc667a686c12a0bc3dcf4c9553abf7260fc1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: custom-class example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-07\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in Hz\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# see below for fuse values for particular devices\n",
        "Line" : 12,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# edit this line for your programmer\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Fuse values for particular devices\n\n##############################################################################\n\n# If your device is not listed here, go to\n\n# http://palmavr.sourceforge.net/cgi-bin/fc.cgi\n\n# and choose options for external crystal clock and no clock divider\n\n#\n\n################################## ATMega8 ##################################\n\n# ATMega8 FUSE_L (Fuse low byte):\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (BrownOut Detector enabled)\n\n#        +-------------------- BODLEVEL (2.7V)\n\n# ATMega8 FUSE_H (Fuse high byte):\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (full output swing)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ WDTON (WDT not always on)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATMega48/88/168 ##############################\n\n# ATMega*8 FUSE_L (Fuse low byte):\n\n# 0xdf = 1 1 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ CKOUT (if 0: Clock output enabled)\n\n#        +-------------------- CKDIV8 (if 0: divide by 8)\n\n# ATMega*8 FUSE_H (Fuse high byte):\n\n# 0xde = 1 1 0 1   1 1 1 0\n\n#        ^ ^ ^ ^   ^ \\-+-/\n\n#        | | | |   |   +------ BODLEVEL 0..2 (110 = 1.8 V)\n\n#        | | | |   + --------- EESAVE (preserve EEPROM over chip erase)\n\n#        | | | +-------------- WDTON (if 0: watchdog always on)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATTiny25/45/85 ###############################\n\n# ATMega*5 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATMega*5 FUSE_H (Fuse high byte):\n\n# 0xdd = 1 1 0 1   1 1 0 1\n\n#        ^ ^ ^ ^   ^ \\-+-/ \n\n#        | | | |   |   +------ BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | |   +---------- EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (disable external reset -> enabled)\n\n#\n\n################################ ATTiny2313 #################################\n\n# ATTiny2313 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATTiny2313 FUSE_H (Fuse high byte):\n\n# 0xdb = 1 1 0 1   1 0 1 1\n\n#        ^ ^ ^ ^   \\-+-/ ^\n\n#        | | | |     |   +---- RSTDISBL (disable external reset -> enabled)\n\n#        | | | |     +-------- BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        +-------------------- DWEN (debug wire enable)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rule for programming fuse bits:\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rule for uploading firmware:\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# rule for deleting dependent files (those which can be built by Make):\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generic rule for compiling C files:\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generic rule for assembling Assembler source files:\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generic rule for compiling C to assembler, used for debugging only.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# file targets:\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Since we don't want to ship the driver multipe times, we copy it into this project:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# usbdrv dependency only needed because we copy it\n",
        "Line" : 150,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "# debugging targets:\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "AVR/vusb-20090822/examples/hid-custom-rq/commandline/Makefile" : {
      "ObjectId" : "5894ca836dc9a95723738f25f318fbc403c1cae3",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: hid-custom-rq example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-06\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Concigure the following definitions according to your system.\n\n# This Makefile has been tested on Mac OS X, Linux and Windows.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the following 3 lines on Unix (uncomment the framework on Mac OS X):\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the following 3 lines on Windows and comment out the 3 above. You may\n\n# have to change the include paths to where you installed libusb-win32\n\n#USBFLAGS = -I/usr/local/include\n\n#USBLIBS = -L/usr/local/lib -lusb\n\n#EXE_SUFFIX = .exe\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "AVR/vusb-20090822/examples/hid-custom-rq/firmware/Makefile" : {
      "ObjectId" : "f2372db9b1711ce83fe4e0461eeaa786ead3cb94",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: hid-custom-rq example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-07\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in Hz\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# see below for fuse values for particular devices\n",
        "Line" : 12,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# edit this line for your programmer\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Fuse values for particular devices\n\n##############################################################################\n\n# If your device is not listed here, go to\n\n# http://palmavr.sourceforge.net/cgi-bin/fc.cgi\n\n# and choose options for external crystal clock and no clock divider\n\n#\n\n################################## ATMega8 ##################################\n\n# ATMega8 FUSE_L (Fuse low byte):\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (BrownOut Detector enabled)\n\n#        +-------------------- BODLEVEL (2.7V)\n\n# ATMega8 FUSE_H (Fuse high byte):\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (full output swing)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ WDTON (WDT not always on)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATMega48/88/168 ##############################\n\n# ATMega*8 FUSE_L (Fuse low byte):\n\n# 0xdf = 1 1 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ CKOUT (if 0: Clock output enabled)\n\n#        +-------------------- CKDIV8 (if 0: divide by 8)\n\n# ATMega*8 FUSE_H (Fuse high byte):\n\n# 0xde = 1 1 0 1   1 1 1 0\n\n#        ^ ^ ^ ^   ^ \\-+-/\n\n#        | | | |   |   +------ BODLEVEL 0..2 (110 = 1.8 V)\n\n#        | | | |   + --------- EESAVE (preserve EEPROM over chip erase)\n\n#        | | | +-------------- WDTON (if 0: watchdog always on)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATTiny25/45/85 ###############################\n\n# ATMega*5 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATMega*5 FUSE_H (Fuse high byte):\n\n# 0xdd = 1 1 0 1   1 1 0 1\n\n#        ^ ^ ^ ^   ^ \\-+-/ \n\n#        | | | |   |   +------ BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | |   +---------- EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (disable external reset -> enabled)\n\n#\n\n################################ ATTiny2313 #################################\n\n# ATTiny2313 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATTiny2313 FUSE_H (Fuse high byte):\n\n# 0xdb = 1 1 0 1   1 0 1 1\n\n#        ^ ^ ^ ^   \\-+-/ ^\n\n#        | | | |     |   +---- RSTDISBL (disable external reset -> enabled)\n\n#        | | | |     +-------- BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        +-------------------- DWEN (debug wire enable)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rule for programming fuse bits:\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rule for uploading firmware:\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# rule for deleting dependent files (those which can be built by Make):\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generic rule for compiling C files:\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generic rule for assembling Assembler source files:\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generic rule for compiling C to assembler, used for debugging only.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# file targets:\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Since we don't want to ship the driver multipe times, we copy it into this project:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# usbdrv dependency only needed because we copy it\n",
        "Line" : 150,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "# debugging targets:\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "AVR/vusb-20090822/examples/hid-data/commandline/Makefile" : {
      "ObjectId" : "dabfa42956269ba83b2e86b7a40adad6ce0b9bf5",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: hid-data example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-11\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please read the definitions below and edit them as appropriate for your\n\n# system:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the following 3 lines on Unix and Mac OS X:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the following 3 lines on Windows and comment out the 3 above:\n\n#USBFLAGS=\n\n#USBLIBS=    -lhid -lusb -lsetupapi\n\n#EXE_SUFFIX= .exe\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "AVR/vusb-20090822/examples/hid-data/firmware/Makefile" : {
      "ObjectId" : "5876ab022634d3537130f5617b72627acf321800",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: hid-data example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-07\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in Hz\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# see below for fuse values for particular devices\n",
        "Line" : 12,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# edit this line for your programmer\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Fuse values for particular devices\n\n##############################################################################\n\n# If your device is not listed here, go to\n\n# http://palmavr.sourceforge.net/cgi-bin/fc.cgi\n\n# and choose options for external crystal clock and no clock divider\n\n#\n\n################################## ATMega8 ##################################\n\n# ATMega8 FUSE_L (Fuse low byte):\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (BrownOut Detector enabled)\n\n#        +-------------------- BODLEVEL (2.7V)\n\n# ATMega8 FUSE_H (Fuse high byte):\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (full output swing)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ WDTON (WDT not always on)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATMega48/88/168 ##############################\n\n# ATMega*8 FUSE_L (Fuse low byte):\n\n# 0xdf = 1 1 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ CKOUT (if 0: Clock output enabled)\n\n#        +-------------------- CKDIV8 (if 0: divide by 8)\n\n# ATMega*8 FUSE_H (Fuse high byte):\n\n# 0xde = 1 1 0 1   1 1 1 0\n\n#        ^ ^ ^ ^   ^ \\-+-/\n\n#        | | | |   |   +------ BODLEVEL 0..2 (110 = 1.8 V)\n\n#        | | | |   + --------- EESAVE (preserve EEPROM over chip erase)\n\n#        | | | +-------------- WDTON (if 0: watchdog always on)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATTiny25/45/85 ###############################\n\n# ATMega*5 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATMega*5 FUSE_H (Fuse high byte):\n\n# 0xdd = 1 1 0 1   1 1 0 1\n\n#        ^ ^ ^ ^   ^ \\-+-/ \n\n#        | | | |   |   +------ BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | |   +---------- EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (disable external reset -> enabled)\n\n#\n\n################################ ATTiny2313 #################################\n\n# ATTiny2313 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATTiny2313 FUSE_H (Fuse high byte):\n\n# 0xdb = 1 1 0 1   1 0 1 1\n\n#        ^ ^ ^ ^   \\-+-/ ^\n\n#        | | | |     |   +---- RSTDISBL (disable external reset -> enabled)\n\n#        | | | |     +-------- BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        +-------------------- DWEN (debug wire enable)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rule for programming fuse bits:\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rule for uploading firmware:\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# rule for deleting dependent files (those which can be built by Make):\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generic rule for compiling C files:\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generic rule for assembling Assembler source files:\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generic rule for compiling C to assembler, used for debugging only.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# file targets:\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Since we don't want to ship the driver multipe times, we copy it into this project:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# usbdrv dependency only needed because we copy it\n",
        "Line" : 150,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "# debugging targets:\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "AVR/vusb-20090822/examples/hid-mouse/firmware/Makefile" : {
      "ObjectId" : "22b12276971616f7ebec88e540f25a836fac292d",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: hid-mouse example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-07\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in Hz\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# see below for fuse values for particular devices\n",
        "Line" : 12,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# edit this line for your programmer\n",
        "Line" : 14,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Fuse values for particular devices\n\n##############################################################################\n\n# If your device is not listed here, go to\n\n# http://palmavr.sourceforge.net/cgi-bin/fc.cgi\n\n# and choose options for external crystal clock and no clock divider\n\n#\n\n################################## ATMega8 ##################################\n\n# ATMega8 FUSE_L (Fuse low byte):\n\n# 0x9f = 1 0 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ BODEN (BrownOut Detector enabled)\n\n#        +-------------------- BODLEVEL (2.7V)\n\n# ATMega8 FUSE_H (Fuse high byte):\n\n# 0xc9 = 1 1 0 0   1 0 0 1 <-- BOOTRST (boot reset vector at 0x0000)\n\n#        ^ ^ ^ ^   ^ ^ ^------ BOOTSZ0\n\n#        | | | |   | +-------- BOOTSZ1\n\n#        | | | |   + --------- EESAVE (don't preserve EEPROM over chip erase)\n\n#        | | | +-------------- CKOPT (full output swing)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ WDTON (WDT not always on)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATMega48/88/168 ##############################\n\n# ATMega*8 FUSE_L (Fuse low byte):\n\n# 0xdf = 1 1 0 1   1 1 1 1\n\n#        ^ ^ \\ /   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (external >8M crystal)\n\n#        | |  +--------------- SUT 1..0 (crystal osc, BOD enabled)\n\n#        | +------------------ CKOUT (if 0: Clock output enabled)\n\n#        +-------------------- CKDIV8 (if 0: divide by 8)\n\n# ATMega*8 FUSE_H (Fuse high byte):\n\n# 0xde = 1 1 0 1   1 1 1 0\n\n#        ^ ^ ^ ^   ^ \\-+-/\n\n#        | | | |   |   +------ BODLEVEL 0..2 (110 = 1.8 V)\n\n#        | | | |   + --------- EESAVE (preserve EEPROM over chip erase)\n\n#        | | | +-------------- WDTON (if 0: watchdog always on)\n\n#        | | +---------------- SPIEN (allow serial programming)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (reset pin is enabled)\n\n#\n\n############################## ATTiny25/45/85 ###############################\n\n# ATMega*5 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATMega*5 FUSE_H (Fuse high byte):\n\n# 0xdd = 1 1 0 1   1 1 0 1\n\n#        ^ ^ ^ ^   ^ \\-+-/ \n\n#        | | | |   |   +------ BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | |   +---------- EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ DWEN (debug wire enable)\n\n#        +-------------------- RSTDISBL (disable external reset -> enabled)\n\n#\n\n################################ ATTiny2313 #################################\n\n# ATTiny2313 FUSE_L (Fuse low byte):\n\n# 0xef = 1 1 1 0   1 1 1 1\n\n#        ^ ^ \\+/   \\--+--/\n\n#        | |  |       +------- CKSEL 3..0 (clock selection -> crystal @ 12 MHz)\n\n#        | |  +--------------- SUT 1..0 (BOD enabled, fast rising power)\n\n#        | +------------------ CKOUT (clock output on CKOUT pin -> disabled)\n\n#        +-------------------- CKDIV8 (divide clock by 8 -> don't divide)\n\n# ATTiny2313 FUSE_H (Fuse high byte):\n\n# 0xdb = 1 1 0 1   1 0 1 1\n\n#        ^ ^ ^ ^   \\-+-/ ^\n\n#        | | | |     |   +---- RSTDISBL (disable external reset -> enabled)\n\n#        | | | |     +-------- BODLEVEL 2..0 (brownout trigger level -> 2.7V)\n\n#        | | | +-------------- WDTON (watchdog timer always on -> disable)\n\n#        | | +---------------- SPIEN (enable serial programming -> enabled)\n\n#        | +------------------ EESAVE (preserve EEPROM on Chip Erase -> not preserved)\n\n#        +-------------------- DWEN (debug wire enable)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rule for programming fuse bits:\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rule for uploading firmware:\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# rule for deleting dependent files (those which can be built by Make):\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generic rule for compiling C files:\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generic rule for assembling Assembler source files:\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generic rule for compiling C to assembler, used for debugging only.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# file targets:\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Since we don't want to ship the driver multipe times, we copy it into this project:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# usbdrv dependency only needed because we copy it\n",
        "Line" : 150,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "# debugging targets:\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "AVR/vusb-20090822/examples/usbtool/Makefile" : {
      "ObjectId" : "d41aba6b06a5deeae4250e3f3641316debae048b",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: usbtool\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-06\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 692 2008-11-07 15:07:40Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Concigure the following definitions according to your system.\n\n# This Makefile has been tested on Mac OS X, Linux and Windows.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the following 3 lines on Unix (uncomment the framework on Mac OS X):\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the following 3 lines on Windows and comment out the 3 above. You may\n\n# have to change the include paths to where you installed libusb-win32\n\n#USBFLAGS = -I/usr/local/include\n\n#USBLIBS = -L/usr/local/lib -lusb\n\n#EXE_SUFFIX = .exe\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "AVR/vusb-20090822/tests/Makefile" : {
      "ObjectId" : "74b2518c7229a375818e54e3002e4c9f81d4c25e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name: Makefile\n\n# Project: custom-class example\n\n# Author: Christian Starkjohann\n\n# Creation Date: 2008-04-07\n\n# Tabsize: 4\n\n# Copyright: (c) 2008 by OBJECTIVE DEVELOPMENT Software GmbH\n\n# License: GNU GPL v2 (see License.txt), GNU GPL v3 or proprietary (CommercialLicense.txt)\n\n# This Revision: $Id: Makefile 719 2009-03-16 18:51:56Z cs $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in Hz\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# symbolic targets:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The following rule is used to check the compiler\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#exclude devices without RAM for stack and atmega603 for gcc 3\n",
        "Line" : 79,
        "CharPositionInLine" : 9
      },
      "5" : {
        "Text" : "# rule for deleting dependent files (those which can be built by Make):\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generic rule for compiling C files:\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Generic rule for assembling Assembler source files:\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \"-x assembler-with-cpp\" should not be necessary since this is the default\n\n# file type for the .S (with capital S) extension. However, upper case\n\n# characters are not always preserved on Windows. To ensure WinAVR\n\n# compatibility define the file type manually.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generic rule for compiling C to assembler, used for debugging only.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# file targets:\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Since we don't want to ship the driver multipe times, we copy it into this project:\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# usbdrv dependency only needed because we copy it\n",
        "Line" : 120,
        "CharPositionInLine" : 28
      },
      "13" : {
        "Text" : "# usbdrv dependency only needed because we copy it\n",
        "Line" : 123,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 14
    },
    "Benchmarks/Makefile" : {
      "ObjectId" : "a0aa8e25f6dda638555e0a4a50cb2e1dc840336e",
      "LastModified" : "2019-02-24T17:58:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "BitStream/Makefile" : {
      "ObjectId" : "f2bef106d2717b5a5eca080efc9ec6612eb1aa00",
      "LastModified" : "2019-03-04T03:23:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "CUDA8.0/sortalgorithm/Makefile" : {
      "ObjectId" : "b0d18ad1a6d88a25797c06ed2e7bd8c37ee4627d",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#1>  template_vs2015.vcxproj -> C:\\Users\\sin\\Documents\\Workspace\\CUDA8.0\\sortalgorithm\\bin\\sortalg.exe\r\n\n#1>  template_vs2015.vcxproj -> bin\\sortalg.pdb (Full PDB)\r\n\n#========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 6:53 token recognition error at: '\"C:\\P'\nline 6:76 token recognition error at: '\\M'\nline 6:105 token recognition error at: '\\V'\nline 6:108 token recognition error at: '\\b'\nline 6:112 token recognition error at: '\\x'\nline 6:122 token recognition error at: '\"  -G  --keep-dir x64\\D'\nline 9:20 token recognition error at: '\\c'\nline 9:27 token recognition error at: '\\i'\nline 9:34 token recognition error at: '\"C:\\P'\nline 9:51 token recognition error at: '\\N'\nline 9:80 token recognition error at: '\\C'\nline 9:85 token recognition error at: '\\v'\nline 9:90 token recognition error at: '\\i'\nline 9:105 token recognition error at: '\\P'\nline 9:119 token recognition error at: '\\N'\nline 9:148 token recognition error at: '\\C'\nline 9:153 token recognition error at: '\\v'\nline 9:158 token recognition error at: '\\i'\nline 11:15 token recognition error at: '\\P'\nline 11:29 token recognition error at: '\\N'\nline 11:58 token recognition error at: '\\C'\nline 11:63 token recognition error at: '\\v'\nline 11:68 token recognition error at: '\\b'\nline 11:331 token recognition error at: '\\P'\nline 11:351 token recognition error at: '\\M'\nline 11:380 token recognition error at: '\\V'\nline 11:383 token recognition error at: '\\b'\nline 11:387 token recognition error at: '\\x'\nline 11:440 token recognition error at: '\\P'\nline 11:454 token recognition error at: '\\N'\nline 11:483 token recognition error at: '\\C'\nline 11:488 token recognition error at: '\\v'\nline 11:525 token recognition error at: '\\P'\nline 11:539 token recognition error at: '\\N'\nline 11:568 token recognition error at: '\\C'\nline 11:573 token recognition error at: '\\v'\nline 11:578 token recognition error at: '\\i'\nline 11:586 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 11:834 token recognition error at: '\"C:\\U'\nline 11:843 token recognition error at: '\\s'\nline 11:847 token recognition error at: '\\D'\nline 11:857 token recognition error at: '\\W'\nline 11:867 token recognition error at: '\\C'\nline 11:875 token recognition error at: '\\s'\nline 11:889 token recognition error at: '\\c'\nline 36:5 token recognition error at: '\\P'\nline 36:19 token recognition error at: '\\N'\nline 36:48 token recognition error at: '\\C'\nline 36:53 token recognition error at: '\\v'\nline 36:58 token recognition error at: '\\b'\nline 36:321 token recognition error at: '\\P'\nline 36:341 token recognition error at: '\\M'\nline 36:370 token recognition error at: '\\V'\nline 36:373 token recognition error at: '\\b'\nline 36:377 token recognition error at: '\\x'\nline 36:430 token recognition error at: '\\P'\nline 36:444 token recognition error at: '\\N'\nline 36:473 token recognition error at: '\\C'\nline 36:478 token recognition error at: '\\v'\nline 36:515 token recognition error at: '\\P'\nline 36:529 token recognition error at: '\\N'\nline 36:558 token recognition error at: '\\C'\nline 36:563 token recognition error at: '\\v'\nline 36:568 token recognition error at: '\\i'\nline 36:576 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 36:824 token recognition error at: '\"C:\\U'\nline 36:833 token recognition error at: '\\s'\nline 36:837 token recognition error at: '\\D'\nline 36:847 token recognition error at: '\\W'\nline 36:857 token recognition error at: '\\C'\nline 36:865 token recognition error at: '\\s'\nline 36:879 token recognition error at: '\\c'\nline 36:894 token recognition error at: '\"\\r\\n\\r\\n#1>------ Build started: Project: sortalg, Configuration: Debug x64 ------\\r\\n#1>  Compiling CUDA source file cdpHeapsort.cu...\\r\\n#1>  Compiling CUDA source file cdpBitonicSort.cu...\\r\\n#1>  Compiling CUDA source file cu_utils.cu...\\r\\n#1>  Compiling CUDA source file oddevensort.cu...\\r\\n#1>  Compiling CUDA source file main.cu...\\r\\n#1>  Compiling CUDA source file cdpQuicksort.cu...\\r\\n#1>\\r\\n#1>  C:\\U'\nline 46:13 token recognition error at: '\\s'\nline 46:17 token recognition error at: '\\D'\nline 46:27 token recognition error at: '\\W'\nline 46:37 token recognition error at: '\\C'\nline 46:45 token recognition error at: '\\s'\nline 46:60 token recognition error at: '\"C:\\P'\nline 46:77 token recognition error at: '\\N'\nline 46:106 token recognition error at: '\\C'\nline 46:111 token recognition error at: '\\v'\nline 46:116 token recognition error at: '\\b'\nline 46:379 token recognition error at: '\\P'\nline 46:399 token recognition error at: '\\M'\nline 46:428 token recognition error at: '\\V'\nline 46:431 token recognition error at: '\\b'\nline 46:435 token recognition error at: '\\x'\nline 46:488 token recognition error at: '\\P'\nline 46:502 token recognition error at: '\\N'\nline 46:531 token recognition error at: '\\C'\nline 46:536 token recognition error at: '\\v'\nline 46:573 token recognition error at: '\\P'\nline 46:587 token recognition error at: '\\N'\nline 46:616 token recognition error at: '\\C'\nline 46:621 token recognition error at: '\\v'\nline 46:626 token recognition error at: '\\i'\nline 46:634 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 46:864 token recognition error at: '\"C:\\U'\nline 46:873 token recognition error at: '\\s'\nline 46:877 token recognition error at: '\\D'\nline 46:887 token recognition error at: '\\W'\nline 46:897 token recognition error at: '\\C'\nline 46:905 token recognition error at: '\\s'\nline 46:919 token recognition error at: '\\c'\nline 46:934 token recognition error at: '\"\\r\\n#1>\\r\\n#1>  C:\\U'\nline 48:13 token recognition error at: '\\s'\nline 48:17 token recognition error at: '\\D'\nline 48:27 token recognition error at: '\\W'\nline 48:37 token recognition error at: '\\C'\nline 48:45 token recognition error at: '\\s'\nline 48:60 token recognition error at: '\"C:\\P'\nline 48:77 token recognition error at: '\\N'\nline 48:106 token recognition error at: '\\C'\nline 48:111 token recognition error at: '\\v'\nline 48:116 token recognition error at: '\\b'\nline 48:379 token recognition error at: '\\P'\nline 48:399 token recognition error at: '\\M'\nline 48:428 token recognition error at: '\\V'\nline 48:431 token recognition error at: '\\b'\nline 48:435 token recognition error at: '\\x'\nline 48:488 token recognition error at: '\\P'\nline 48:502 token recognition error at: '\\N'\nline 48:531 token recognition error at: '\\C'\nline 48:536 token recognition error at: '\\v'\nline 48:573 token recognition error at: '\\P'\nline 48:587 token recognition error at: '\\N'\nline 48:616 token recognition error at: '\\C'\nline 48:621 token recognition error at: '\\v'\nline 48:626 token recognition error at: '\\i'\nline 48:634 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 48:867 token recognition error at: '\"C:\\U'\nline 48:876 token recognition error at: '\\s'\nline 48:880 token recognition error at: '\\D'\nline 48:890 token recognition error at: '\\W'\nline 48:900 token recognition error at: '\\C'\nline 48:908 token recognition error at: '\\s'\nline 48:922 token recognition error at: '\\c'\nline 48:940 token recognition error at: '\"\\r\\n#1>\\r\\n#1>  C:\\U'\nline 50:13 token recognition error at: '\\s'\nline 50:17 token recognition error at: '\\D'\nline 50:27 token recognition error at: '\\W'\nline 50:37 token recognition error at: '\\C'\nline 50:45 token recognition error at: '\\s'\nline 50:60 token recognition error at: '\"C:\\P'\nline 50:77 token recognition error at: '\\N'\nline 50:106 token recognition error at: '\\C'\nline 50:111 token recognition error at: '\\v'\nline 50:116 token recognition error at: '\\b'\nline 50:379 token recognition error at: '\\P'\nline 50:399 token recognition error at: '\\M'\nline 50:428 token recognition error at: '\\V'\nline 50:431 token recognition error at: '\\b'\nline 50:435 token recognition error at: '\\x'\nline 50:488 token recognition error at: '\\P'\nline 50:502 token recognition error at: '\\N'\nline 50:531 token recognition error at: '\\C'\nline 50:536 token recognition error at: '\\v'\nline 50:573 token recognition error at: '\\P'\nline 50:587 token recognition error at: '\\N'\nline 50:616 token recognition error at: '\\C'\nline 50:621 token recognition error at: '\\v'\nline 50:626 token recognition error at: '\\i'\nline 50:634 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 50:861 token recognition error at: '\"C:\\U'\nline 50:870 token recognition error at: '\\s'\nline 50:874 token recognition error at: '\\D'\nline 50:884 token recognition error at: '\\W'\nline 50:894 token recognition error at: '\\C'\nline 50:902 token recognition error at: '\\s'\nline 50:916 token recognition error at: '\\c'\nline 50:928 token recognition error at: '\"\\r\\n#1>\\r\\n#1>  C:\\U'\nline 52:13 token recognition error at: '\\s'\nline 52:17 token recognition error at: '\\D'\nline 52:27 token recognition error at: '\\W'\nline 52:37 token recognition error at: '\\C'\nline 52:45 token recognition error at: '\\s'\nline 52:60 token recognition error at: '\"C:\\P'\nline 52:77 token recognition error at: '\\N'\nline 52:106 token recognition error at: '\\C'\nline 52:111 token recognition error at: '\\v'\nline 52:116 token recognition error at: '\\b'\nline 52:379 token recognition error at: '\\P'\nline 52:399 token recognition error at: '\\M'\nline 52:428 token recognition error at: '\\V'\nline 52:431 token recognition error at: '\\b'\nline 52:435 token recognition error at: '\\x'\nline 52:488 token recognition error at: '\\P'\nline 52:502 token recognition error at: '\\N'\nline 52:531 token recognition error at: '\\C'\nline 52:536 token recognition error at: '\\v'\nline 52:573 token recognition error at: '\\P'\nline 52:587 token recognition error at: '\\N'\nline 52:616 token recognition error at: '\\C'\nline 52:621 token recognition error at: '\\v'\nline 52:626 token recognition error at: '\\i'\nline 52:634 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 52:864 token recognition error at: '\"C:\\U'\nline 52:873 token recognition error at: '\\s'\nline 52:877 token recognition error at: '\\D'\nline 52:887 token recognition error at: '\\W'\nline 52:897 token recognition error at: '\\C'\nline 52:905 token recognition error at: '\\s'\nline 52:919 token recognition error at: '\\o'\nline 52:934 token recognition error at: '\"\\r\\n#1>\\r\\n#1>  C:\\U'\nline 54:13 token recognition error at: '\\s'\nline 54:17 token recognition error at: '\\D'\nline 54:27 token recognition error at: '\\W'\nline 54:37 token recognition error at: '\\C'\nline 54:45 token recognition error at: '\\s'\nline 54:60 token recognition error at: '\"C:\\P'\nline 54:77 token recognition error at: '\\N'\nline 54:106 token recognition error at: '\\C'\nline 54:111 token recognition error at: '\\v'\nline 54:116 token recognition error at: '\\b'\nline 54:379 token recognition error at: '\\P'\nline 54:399 token recognition error at: '\\M'\nline 54:428 token recognition error at: '\\V'\nline 54:431 token recognition error at: '\\b'\nline 54:435 token recognition error at: '\\x'\nline 54:488 token recognition error at: '\\P'\nline 54:502 token recognition error at: '\\N'\nline 54:531 token recognition error at: '\\C'\nline 54:536 token recognition error at: '\\v'\nline 54:573 token recognition error at: '\\P'\nline 54:587 token recognition error at: '\\N'\nline 54:616 token recognition error at: '\\C'\nline 54:621 token recognition error at: '\\v'\nline 54:626 token recognition error at: '\\i'\nline 54:634 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 54:865 token recognition error at: '\"C:\\U'\nline 54:874 token recognition error at: '\\s'\nline 54:878 token recognition error at: '\\D'\nline 54:888 token recognition error at: '\\W'\nline 54:898 token recognition error at: '\\C'\nline 54:906 token recognition error at: '\\s'\nline 54:920 token recognition error at: '\\c'\nline 54:936 token recognition error at: '\"\\r\\n#1>\\r\\n#1>  C:\\U'\nline 56:13 token recognition error at: '\\s'\nline 56:17 token recognition error at: '\\D'\nline 56:27 token recognition error at: '\\W'\nline 56:37 token recognition error at: '\\C'\nline 56:45 token recognition error at: '\\s'\nline 56:60 token recognition error at: '\"C:\\P'\nline 56:77 token recognition error at: '\\N'\nline 56:106 token recognition error at: '\\C'\nline 56:111 token recognition error at: '\\v'\nline 56:116 token recognition error at: '\\b'\nline 56:379 token recognition error at: '\\P'\nline 56:399 token recognition error at: '\\M'\nline 56:428 token recognition error at: '\\V'\nline 56:431 token recognition error at: '\\b'\nline 56:435 token recognition error at: '\\x'\nline 56:488 token recognition error at: '\\P'\nline 56:502 token recognition error at: '\\N'\nline 56:531 token recognition error at: '\\C'\nline 56:536 token recognition error at: '\\v'\nline 56:573 token recognition error at: '\\P'\nline 56:587 token recognition error at: '\\N'\nline 56:616 token recognition error at: '\\C'\nline 56:621 token recognition error at: '\\v'\nline 56:626 token recognition error at: '\\i'\nline 56:634 token recognition error at: '\"  -G   --keep-dir x64\\D'\nline 56:857 token recognition error at: '\"C:\\U'\nline 56:866 token recognition error at: '\\s'\nline 56:870 token recognition error at: '\\D'\nline 56:880 token recognition error at: '\\W'\nline 56:890 token recognition error at: '\\C'\nline 56:898 token recognition error at: '\\s'\nline 56:912 token recognition error at: '\\m'\nline 56:920 token recognition error at: '\"\\r\\n#1>  cdpBitonicSort.cu\\r\\n#1>  cdpQuicksort.cu\\r\\n#1>  cu_utils.cu\\r\\n#1>  cdpHeapsort.cu\\r\\n#1>  oddevensort.cu\\r\\n#1>C:/Users/sin/Documents/Workspace/CUDA8.0/sortalgorithm/main.cu(51): warning C4244: 'argument': conversion from 'time_t' to 'unsigned int', possible loss of data\\r\\n#1>C:/Users/sin/Documents/Workspace/CUDA8.0/sortalgorithm/main.cu(165): warning C4018: '<': signed/unsigned mismatch\\r\\n#1>C:/Users/sin/Documents/Workspace/CUDA8.0/sortalgorithm/cdpHeapsort.cu(27): warning C4018: '<': signed/unsigned mismatch\\r\\n#1>\\r\\n#1>  C:\\U'\nline 66:13 token recognition error at: '\\s'\nline 66:17 token recognition error at: '\\D'\nline 66:27 token recognition error at: '\\W'\nline 66:37 token recognition error at: '\\C'\nline 66:45 token recognition error at: '\\s'\nline 66:60 token recognition error at: '\"C:\\P'\nline 66:77 token recognition error at: '\\N'\nline 66:106 token recognition error at: '\\C'\nline 66:111 token recognition error at: '\\v'\nline 66:116 token recognition error at: '\\b'\nline 66:231 token recognition error at: '\\P'\nline 66:245 token recognition error at: '\\N'\nline 66:274 token recognition error at: '\\C'\nline 66:279 token recognition error at: '\\v'\nline 66:284 token recognition error at: '\\l'\nline 66:288 token recognition error at: '\\x'\nline 66:292 token recognition error at: '\" cudadevrt.lib cudart_static.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib  -gencode=arch=compute_35,code=sm_35 -gencode=arch=compute_50,code=sm_50 -gencode=arch=compute_60,code=sm_60 -gencode=arch=compute_62,code=sm_62 -G --machine 64 x64/Debug/cdpHeapsort.cu.obj x64/Debug/main.cu.obj x64/Debug/cdpBitonicSort.cu.obj x64/Debug/cu_utils.cu.obj x64/Debug/oddevensort.cu.obj x64/Debug/cdpQuicksort.cu.obj\\r\\n#1>CUDALINK : ptxas warning : .debug_abbrev section not found (target: sm_62)\\r\\n#1>CUDALINK : ptxas warning : .debug_info section not found (target: sm_62)\\r\\n#1>  cudadevrt.lib\\r\\n#1>  cudart_static.lib\\r\\n#1>  kernel32.lib\\r\\n#1>  user32.lib\\r\\n#1>  gdi32.lib\\r\\n#1>  winspool.lib\\r\\n#1>  comdlg32.lib\\r\\n#1>  advapi32.lib\\r\\n#1>  shell32.lib\\r\\n#1>  ole32.lib\\r\\n#1>  oleaut32.lib\\r\\n#1>  uuid.lib\\r\\n#1>  odbc32.lib\\r\\n#1>  odbccp32.lib\\r\\n#1>  cdpHeapsort.cu.obj\\r\\n#1>  main.cu.obj\\r\\n#1>  cdpBitonicSort.cu.obj\\r\\n#1>  cu_utils.cu.obj\\r\\n#1>  oddevensort.cu.obj\\r\\n#1>  cdpQuicksort.cu.obj\\r\\n#1>     Creating library bin\\s'\nline 89:55 token recognition error at: '\\s'\n"
    },
    "ChibiOS-AVR/demos/ARM7-AT91SAM7X-FATFS-GCC/Makefile" : {
      "ObjectId" : "0389049bf5b9e6e4e63e89fd25d32b6f78177f75",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS-AVR/demos/ARM7-AT91SAM7X-GCC/Makefile" : {
      "ObjectId" : "02da69ba2589c147a352aa99af5158f671c968f1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS-AVR/demos/ARM7-AT91SAM7X-LWIP-GCC/Makefile" : {
      "ObjectId" : "e9ac171160afbb0736422c3357948aae3546823a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS-AVR/demos/ARM7-AT91SAM7X-UIP-GCC/Makefile" : {
      "ObjectId" : "09d89a9aad16f9b5e72331073fd83932038537ad",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List of the required uIP source files.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS-AVR/demos/ARM7-LPC214x-FATFS-GCC/Makefile" : {
      "ObjectId" : "a0eaaffb723a48d8379eb8cd391f87fbcc3479ba",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS-AVR/demos/ARM7-LPC214x-G++/Makefile" : {
      "ObjectId" : "67b294b7c2ad668fd3134ab0040d4ca248ea22c1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS-AVR/demos/ARM7-LPC214x-GCC/Makefile" : {
      "ObjectId" : "6be46ea25da2e5a6fb1b6e9db2c37185a217841d",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS-AVR/demos/ARMCM0-LPC1114-LPCXPRESSO/Makefile" : {
      "ObjectId" : "9919f151949e5fad8f53417ba5758da1335b2792",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS-AVR/demos/ARMCM0-LPC11U14-LPCXPRESSO/Makefile" : {
      "ObjectId" : "dc2aa318fd582737766567a6c426795328025bb7",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS-AVR/demos/ARMCM0-STM32F051-DISCOVERY/Makefile" : {
      "ObjectId" : "808327ae4ceb6d90b4f3a422afd53c9b58af39e1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-GENERIC-KERNEL/Makefile" : {
      "ObjectId" : "13e548692f5910fc0f59749ebf4f264fedc23a0b",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-LPC1343-LPCXPRESSO/Makefile" : {
      "ObjectId" : "9b6daf3c0af7f13e413add73c0d6afd1c9a1fff2",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "ChibiOS-AVR/demos/ARMCM3-LPC1343-OLIMEX/Makefile" : {
      "ObjectId" : "c87f797bd1d2623f96fdebc0ef6d7f7a4b6c2411",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F100-DISCOVERY/Makefile" : {
      "ObjectId" : "1438aabd2352365382a9a4feeaaddf45fa84fd31",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F103-FATFS/Makefile" : {
      "ObjectId" : "33b6433fbea4047dd5d6709968c06d793ad1034a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F103-G++/Makefile" : {
      "ObjectId" : "7fa37b7b079f7db1361a786f91b7da6019b5f203",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n\n#LD   = $(TRGT)gcc\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F103/Makefile" : {
      "ObjectId" : "f9c6ec62a0532b4e574c6a7bb754d1f986529ff4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F103ZG-FATFS/Makefile" : {
      "ObjectId" : "f258f4faf1a88a25957b8ec096980ea16d28a227",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F107-FATFS/Makefile" : {
      "ObjectId" : "e3a7d620b877bdc6cfc0ee729c1c3451437fabf0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F107-LWIP/Makefile" : {
      "ObjectId" : "1f257231321c8eeedfb08e060deaf83272eb39b4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32F107/Makefile" : {
      "ObjectId" : "4d5d48b6301d6e93f9135387d2409e84bfbd15c9",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM3-STM32L152-DISCOVERY/Makefile" : {
      "ObjectId" : "dc82a2f042f04087d7d4019b9ea40f389510fe0a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/demos/ARMCM4-STM32F303-DISCOVERY/Makefile" : {
      "ObjectId" : "1c85a2ecbbd0483befb66ff1c4a1ff4461b8d503",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/demos/ARMCM4-STM32F407-DISCOVERY-MEMS/Makefile" : {
      "ObjectId" : "1ed33ade1b90bd2ee50e49641d84c82290e29ea3",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/demos/ARMCM4-STM32F407-DISCOVERY/Makefile" : {
      "ObjectId" : "95fe53ba61992eb884192944a3158fe5de072c07",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/demos/ARMCM4-STM32F407-LWIP-FATFS-USB/Makefile" : {
      "ObjectId" : "89cd7d532c64deccc6cabf4003530cf2af75106a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/demos/ARMCM4-STM32F407-LWIP/Makefile" : {
      "ObjectId" : "e8aec516ad9f319acb649de540164213e50c490e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/demos/AVR-AT90CANx-GCC/Makefile" : {
      "ObjectId" : "fa9309e2f470830f35dec54881f702cbd91215e4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\r\n\n#     processor frequency. You can then use this symbol in your source code to\r\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\r\n\n#     automatically to create a 32-bit value in your source code.\r\n\n#     Typical values are:\r\n\n#         F_CPU =  1000000\r\n\n#         F_CPU =  1843200\r\n\n#         F_CPU =  2000000\r\n\n#         F_CPU =  3686400\r\n\n#         F_CPU =  4000000\r\n\n#         F_CPU =  7372800\r\n\n#         F_CPU =  8000000\r\n\n#         F_CPU = 11059200\r\n\n#         F_CPU = 14745600\r\n\n#         F_CPU = 16000000\r\n\n#         F_CPU = 18432000\r\n\n#         F_CPU = 20000000\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 301,
        "CharPositionInLine" : 23
      },
      "43" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target.\r\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#build: lib\r\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 87
    },
    "ChibiOS-AVR/demos/AVR-ATmega128-GCC/Makefile" : {
      "ObjectId" : "0ea8e8cff3f2d1b438702e8f137627d9906bb514",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\r\n\n#     processor frequency. You can then use this symbol in your source code to\r\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\r\n\n#     automatically to create a 32-bit value in your source code.\r\n\n#     Typical values are:\r\n\n#         F_CPU =  1000000\r\n\n#         F_CPU =  1843200\r\n\n#         F_CPU =  2000000\r\n\n#         F_CPU =  3686400\r\n\n#         F_CPU =  4000000\r\n\n#         F_CPU =  7372800\r\n\n#         F_CPU =  8000000\r\n\n#         F_CPU = 11059200\r\n\n#         F_CPU = 14745600\r\n\n#         F_CPU = 16000000\r\n\n#         F_CPU = 18432000\r\n\n#         F_CPU = 20000000\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 301,
        "CharPositionInLine" : 23
      },
      "43" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target.\r\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#build: lib\r\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 87
    },
    "ChibiOS-AVR/demos/AVR-ATmega2560-GCC/Makefile" : {
      "ObjectId" : "afb0a22e34c35a6cb2c661e02f5610a5f4654a2e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 31
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ChibiOS-AVR/demos/AVR-ATmega328-GCC/Makefile" : {
      "ObjectId" : "79764a3a733f2adb228386a5bc8aaabf5871559b",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 31
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ChibiOS-AVR/demos/AVR-ATmega644-GCC/Makefile" : {
      "ObjectId" : "f5ef73550e4f1305406bf66245a2ead9e81a2620",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 31
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ChibiOS-AVR/demos/AVR-ArduinoMega-GCC/Makefile" : {
      "ObjectId" : "9113e88fc5c3e70b431e9dfbd20f8d1ebd5df28e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 23
      },
      "43" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 87
    },
    "ChibiOS-AVR/demos/MSP430-MSP430F5437/Makefile" : {
      "ObjectId" : "555794276a7548cdbf9011406733e11338b2bf8a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable register caching optimization (read documentation).\r\n\n# Option not tested on MSP430, DO NOT USE.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "ChibiOS-AVR/demos/MSP430-MSP430x1611-GCC/Makefile" : {
      "ObjectId" : "f454a45001bf522bf3ca4d19794143f6dd7b3067",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable register caching optimization (read documentation).\r\n\n# Option not tested on MSP430, DO NOT USE.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "ChibiOS-AVR/demos/PPC-SPC560P-GCC/Makefile" : {
      "ObjectId" : "62303fdd1fa083dc17dda04d5ca8493307349a8f",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data.\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in VLE mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#MCU  = e500mc -meabi -msdata=none -mnew-mnemonics -mregnames\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#TRGT = powerpc-eabi-\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "ChibiOS-AVR/demos/PPC-SPC563M-GCC/Makefile" : {
      "ObjectId" : "a19a93cd8eb7bced12b06c5296289759af798445",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data.\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in VLE mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#MCU  = e500mc -meabi -msdata=none -mnew-mnemonics -mregnames\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#TRGT = powerpc-eabi-\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "ChibiOS-AVR/demos/Posix-GCC/Makefile" : {
      "ObjectId" : "f5eae1c05d505b62cc857f5ff421edaf6e60bc0f",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#       !!!! Do NOT edit this makefile with an editor which replace tabs by spaces !!!!\r\n\n#\r\n\n##############################################################################################\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Create project\r\n\n#\r\n\n# make clean = Clean project files.\r\n\n#\r\n\n# To rebuild project do \"make clean\" and \"make all\".\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################################\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List C source files here\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define optimisation level here\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################################\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Linux, or other\r\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generate dependency information\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# makefile rules\r\n\n#\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Include the dependency files, should be the last of the makefile\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# *** EOF ***\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "ChibiOS-AVR/demos/Win32-MinGW/Makefile" : {
      "ObjectId" : "73e938d44b5438d722a43bc592f1a95ded0c4f7e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#       !!!! Do NOT edit this makefile with an editor which replace tabs by spaces !!!!\r\n\n#\r\n\n##############################################################################################\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Create project\r\n\n#\r\n\n# make clean = Clean project files.\r\n\n#\r\n\n# To rebuild project do \"make clean\" and \"make all\".\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################################\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List C source files here\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define optimisation level here\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################################\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generate dependency information\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# makefile rules\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Include the dependency files, should be the last of the makefile\r\n\n#\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# *** EOF ***\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "ChibiOS-AVR/test/coverage/Makefile" : {
      "ObjectId" : "d19014202d5071e519f9da6603bf05b7a2a8421e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#       !!!! Do NOT edit this makefile with an editor which replace tabs by spaces !!!!\r\n\n#\r\n\n##############################################################################################\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Create project\r\n\n#\r\n\n# make clean = Clean project files.\r\n\n#\r\n\n# To rebuild project do \"make clean\" and \"make all\".\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Must be a directory in ${CHIBIOS}/os/hal/platforms\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################################\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List C source files here\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Define optimisation level here\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################################\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Generate dependency information\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# makefile rules\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Include the dependency files, should be the last of the makefile\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# *** EOF ***\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "ChibiOS-AVR/testhal/AVR/ADC/Makefile" : {
      "ObjectId" : "cf71304a4f086a7db37e34ee4a885606174b2513",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 31
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ChibiOS-AVR/testhal/AVR/GPT/Makefile" : {
      "ObjectId" : "c08bf1e965a96608d33d73bed0d057592df4b722",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 31
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ChibiOS-AVR/testhal/AVR/PWM/Makefile" : {
      "ObjectId" : "cf71304a4f086a7db37e34ee4a885606174b2513",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 31
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ChibiOS-AVR/testhal/AVR/SPI/Makefile" : {
      "ObjectId" : "cf71304a4f086a7db37e34ee4a885606174b2513",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 31
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ChibiOS-AVR/testhal/LPC11xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "2dd75ef7132bab4a030deb46df9363f06b9b7634",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS-AVR/testhal/LPC13xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "08157975438a74039a24f7929938d8c846697eef",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "ChibiOS-AVR/testhal/STM32F0xx/ADC/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F0xx/EXT/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F0xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F0xx/PWM-ICU/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F0xx/UART/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/ADC/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/CAN/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/EXT/Makefile" : {
      "ObjectId" : "190662d496121644e276425f1cdfe0d05f0ec7b7",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/testhal/STM32F1xx/GPT/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/I2C/Makefile" : {
      "ObjectId" : "24cebda3b516e7b579e2edbca7aebcdfc804638c",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#USE_OPT = -O2 -ggdb -fomit-frame-pointer -falign-functions=16 -Wall -Wextra\r\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F1xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/PWM-ICU/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/RTC/Makefile" : {
      "ObjectId" : "3d28124f25b2e60fc6260c58d08707074983e320",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/RTC_FATTIME/Makefile" : {
      "ObjectId" : "347169ba97baf09ba55cd229f5ed41722d886902",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/testhal/STM32F1xx/SDC/Makefile" : {
      "ObjectId" : "4e25ee84529f35c5b7ddbaa0a13f015324d1ce08",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F1xx/SPI/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/UART/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32F1xx/USB_CDC/Makefile" : {
      "ObjectId" : "0c781d14ce848fc934a5dd4b6b154bd4ab5d5bd3",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/testhal/STM32F1xx/USB_CDC_F107/Makefile" : {
      "ObjectId" : "9b861f6d39f23e7569a7f9ae69a96b9ed056b13a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/testhal/STM32F1xx/USB_MSC/Makefile" : {
      "ObjectId" : "1f76375fe0b380418969263c377104d252d139dd",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS-AVR/testhal/STM32F4xx/ADC/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/CAN/Makefile" : {
      "ObjectId" : "62d0516f0d5023d8df910681121a63a4a04fd057",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/DMA_STORM/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/EXT/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/GPT/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/I2C/Makefile" : {
      "ObjectId" : "d52f5d4e88f791899abf00445387aa2476f1fd15",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/IRQ_STORM_FPU/Makefile" : {
      "ObjectId" : "8391b78dccc863620b62a45774ca68f80691839e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/PWM-ICU/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/RTC/Makefile" : {
      "ObjectId" : "e383fef8572aa793fdea02d164e65d633d41cf70",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/RTC_FATTIME/Makefile" : {
      "ObjectId" : "ffd36e3d21a9e376ae8b118ee98a6bcc11330526",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-mhard-float -mfpu=fpv4-sp-d16 -fsingle-precision-constant\r\n",
        "Line" : 8,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "ChibiOS-AVR/testhal/STM32F4xx/SDC/Makefile" : {
      "ObjectId" : "1c0adc089242310056189a9b1956010544abbaae",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-mhard-float -mfpu=fpv4-sp-d16 -fsingle-precision-constant\r\n",
        "Line" : 8,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "ChibiOS-AVR/testhal/STM32F4xx/SPI/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/UART/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32F4xx/USB_CDC/Makefile" : {
      "ObjectId" : "8c329e2d767d2ccd43af984af6483fd2612488e9",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS-AVR/testhal/STM32L1xx/ADC/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32L1xx/EXT/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32L1xx/GPT/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32L1xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32L1xx/PWM-ICU/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32L1xx/SPI/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS-AVR/testhal/STM32L1xx/UART/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/demos/ARM7-AT91SAM7X-FATFS-GCC/Makefile" : {
      "ObjectId" : "0389049bf5b9e6e4e63e89fd25d32b6f78177f75",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS_2.5.2/demos/ARM7-AT91SAM7X-GCC/Makefile" : {
      "ObjectId" : "02da69ba2589c147a352aa99af5158f671c968f1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS_2.5.2/demos/ARM7-AT91SAM7X-LWIP-GCC/Makefile" : {
      "ObjectId" : "e9ac171160afbb0736422c3357948aae3546823a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS_2.5.2/demos/ARM7-AT91SAM7X-UIP-GCC/Makefile" : {
      "ObjectId" : "09d89a9aad16f9b5e72331073fd83932038537ad",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List of the required uIP source files.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS_2.5.2/demos/ARM7-LPC214x-FATFS-GCC/Makefile" : {
      "ObjectId" : "a0eaaffb723a48d8379eb8cd391f87fbcc3479ba",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS_2.5.2/demos/ARM7-LPC214x-G++/Makefile" : {
      "ObjectId" : "67b294b7c2ad668fd3134ab0040d4ca248ea22c1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS_2.5.2/demos/ARM7-LPC214x-GCC/Makefile" : {
      "ObjectId" : "6be46ea25da2e5a6fb1b6e9db2c37185a217841d",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "ChibiOS_2.5.2/demos/ARMCM0-LPC1114-LPCXPRESSO/Makefile" : {
      "ObjectId" : "9919f151949e5fad8f53417ba5758da1335b2792",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS_2.5.2/demos/ARMCM0-LPC11U14-LPCXPRESSO/Makefile" : {
      "ObjectId" : "dc2aa318fd582737766567a6c426795328025bb7",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS_2.5.2/demos/ARMCM0-STM32F051-DISCOVERY/Makefile" : {
      "ObjectId" : "808327ae4ceb6d90b4f3a422afd53c9b58af39e1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-GENERIC-KERNEL/Makefile" : {
      "ObjectId" : "13e548692f5910fc0f59749ebf4f264fedc23a0b",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-LPC1343-LPCXPRESSO/Makefile" : {
      "ObjectId" : "9b6daf3c0af7f13e413add73c0d6afd1c9a1fff2",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "ChibiOS_2.5.2/demos/ARMCM3-LPC1343-OLIMEX/Makefile" : {
      "ObjectId" : "c87f797bd1d2623f96fdebc0ef6d7f7a4b6c2411",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F100-DISCOVERY/Makefile" : {
      "ObjectId" : "1438aabd2352365382a9a4feeaaddf45fa84fd31",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F103-FATFS/Makefile" : {
      "ObjectId" : "33b6433fbea4047dd5d6709968c06d793ad1034a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F103-G++/Makefile" : {
      "ObjectId" : "7fa37b7b079f7db1361a786f91b7da6019b5f203",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n\n#LD   = $(TRGT)gcc\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F103/Makefile" : {
      "ObjectId" : "f9c6ec62a0532b4e574c6a7bb754d1f986529ff4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F103ZG-FATFS/Makefile" : {
      "ObjectId" : "f258f4faf1a88a25957b8ec096980ea16d28a227",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F107-FATFS/Makefile" : {
      "ObjectId" : "e3a7d620b877bdc6cfc0ee729c1c3451437fabf0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F107-LWIP/Makefile" : {
      "ObjectId" : "1f257231321c8eeedfb08e060deaf83272eb39b4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32F107/Makefile" : {
      "ObjectId" : "4d5d48b6301d6e93f9135387d2409e84bfbd15c9",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM3-STM32L152-DISCOVERY/Makefile" : {
      "ObjectId" : "dc82a2f042f04087d7d4019b9ea40f389510fe0a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/demos/ARMCM4-SAM4L/Makefile" : {
      "ObjectId" : "9dd0f73cf1ae37b9a21f1efb59d68af51445b613",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/demos/ARMCM4-STM32F303-DISCOVERY/Makefile" : {
      "ObjectId" : "7e6c0f2ebad5d9f99e4f0fa83dc72057adf8b609",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/demos/ARMCM4-STM32F407-DISCOVERY-G++/Makefile" : {
      "ObjectId" : "cd538851417f1191ca50c9e7674dfeea36eba184",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/demos/ARMCM4-STM32F407-DISCOVERY-MEMS/Makefile" : {
      "ObjectId" : "1ed33ade1b90bd2ee50e49641d84c82290e29ea3",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/demos/ARMCM4-STM32F407-DISCOVERY/Makefile" : {
      "ObjectId" : "95fe53ba61992eb884192944a3158fe5de072c07",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/demos/ARMCM4-STM32F407-LWIP-FATFS-USB/Makefile" : {
      "ObjectId" : "89cd7d532c64deccc6cabf4003530cf2af75106a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/demos/ARMCM4-STM32F407-LWIP/Makefile" : {
      "ObjectId" : "e8aec516ad9f319acb649de540164213e50c490e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/demos/AVR-AT90CANx-GCC/Makefile" : {
      "ObjectId" : "fa9309e2f470830f35dec54881f702cbd91215e4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\r\n\n#     processor frequency. You can then use this symbol in your source code to\r\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\r\n\n#     automatically to create a 32-bit value in your source code.\r\n\n#     Typical values are:\r\n\n#         F_CPU =  1000000\r\n\n#         F_CPU =  1843200\r\n\n#         F_CPU =  2000000\r\n\n#         F_CPU =  3686400\r\n\n#         F_CPU =  4000000\r\n\n#         F_CPU =  7372800\r\n\n#         F_CPU =  8000000\r\n\n#         F_CPU = 11059200\r\n\n#         F_CPU = 14745600\r\n\n#         F_CPU = 16000000\r\n\n#         F_CPU = 18432000\r\n\n#         F_CPU = 20000000\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 301,
        "CharPositionInLine" : 23
      },
      "43" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target.\r\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#build: lib\r\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 87
    },
    "ChibiOS_2.5.2/demos/AVR-ATmega128-GCC/Makefile" : {
      "ObjectId" : "0ea8e8cff3f2d1b438702e8f137627d9906bb514",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\r\n\n#     processor frequency. You can then use this symbol in your source code to\r\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\r\n\n#     automatically to create a 32-bit value in your source code.\r\n\n#     Typical values are:\r\n\n#         F_CPU =  1000000\r\n\n#         F_CPU =  1843200\r\n\n#         F_CPU =  2000000\r\n\n#         F_CPU =  3686400\r\n\n#         F_CPU =  4000000\r\n\n#         F_CPU =  7372800\r\n\n#         F_CPU =  8000000\r\n\n#         F_CPU = 11059200\r\n\n#         F_CPU = 14745600\r\n\n#         F_CPU = 16000000\r\n\n#         F_CPU = 18432000\r\n\n#         F_CPU = 20000000\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be separated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 301,
        "CharPositionInLine" : 23
      },
      "43" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target.\r\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#build: lib\r\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 87
    },
    "ChibiOS_2.5.2/demos/AVR-ArduinoMega-GCC/Makefile" : {
      "ObjectId" : "9113e88fc5c3e70b431e9dfbd20f8d1ebd5df28e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#----------------------------------------------------------------------------\r\n\n# WinAVR Makefile Template written by Eric B. Weddington, J�rg Wunsch, et al.\r\n\n#\r\n\n# Released to the Public Domain\r\n\n#\r\n\n# Additional material for this makefile was written by:\r\n\n# Peter Fleury\r\n\n# Tim Henigan\r\n\n# Colin O'Flynn\r\n\n# Reiner Patommel\r\n\n# Markus Pfaff\r\n\n# Sander Pool\r\n\n# Frederik Rouleau\r\n\n# Carlos Lamas\r\n\n#\r\n\n#----------------------------------------------------------------------------\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF.\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF.\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.\r\n\n#                Please customize the avrdude settings below first!\r\n\n#\r\n\n# make debug = Start either simulavr or avarice as specified for debugging,\r\n\n#              with avr-gdb or avr-insight as the front end for debugging.\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only.\r\n\n#\r\n\n# make filename.i = Create a preprocessed source file for use in submitting\r\n\n#                   bug reports to the GCC project.\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n\n#----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Processor frequency.\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Object files directory\r\n\n#     To put object files in current directory, use a dot (.), do NOT make\r\n\n#     this an empty or blank macro!\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List Assembler source files here.\r\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n#     will not be considered source files but generated files (assembler\r\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\r\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n#     it will preserve the spelling of the filenames, and gcc itself does\r\n\n#     care about how the name is spelled on its command-line.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\r\n\n#     0 = turn off optimization. s = optimize for size.\r\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debugging format.\r\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\r\n\n#     AVR Studio 4.10 requires dwarf-2.\r\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n#     c89   = \"ANSI\" C\r\n\n#     gnu89 = c89 plus GCC extensions\r\n\n#     c99   = ISO C99 standard (not yet fully implemented)\r\n\n#     gnu99 = c99 plus GCC extensions\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Place -D or -U options here for C sources\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place -D or -U options here for ASM sources\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for C++ sources\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\r\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------- Compiler Options C ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#CFLAGS += -fno-strict-aliasing\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#CFLAGS += -mshort-calls\r\n\n#CFLAGS += -fno-unit-at-a-time\r\n\n#CFLAGS += -Wundef\r\n\n#CFLAGS += -Wunreachable-code\r\n\n#CFLAGS += -Wsign-compare\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CPPFLAGS += -mshort-calls\r\n\n#CPPFLAGS += -fno-unit-at-a-time\r\n\n#CPPFLAGS += -Wstrict-prototypes\r\n\n#CPPFLAGS += -Wunreachable-code\r\n\n#CPPFLAGS += -Wsign-compare\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------- Assembler Options ----------------\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -adhlns:   create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\r\n\n#       dump that will be displayed for a given single line of source input.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Library Options ----------------\r\n\n# Minimalistic printf version\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\r\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\r\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\r\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List any extra directories to look for libraries here.\r\n\n#     Each directory must be seperated by a space.\r\n\n#     Use forward slashes for directory separators.\r\n\n#     For a directory that has spaces, enclose it in quotes.\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------- External Memory Options ----------------\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---------------- Linker Options ----------------\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#LDFLAGS += -T linker_script.x\r\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd\r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# programmer connected to serial device\r\n",
        "Line" : 284,
        "CharPositionInLine" : 23
      },
      "43" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Debugging Options ----------------\r\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# For simulavr only - target MCU frequency.\r\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\r\n\n# DEBUG_UI = gdb\r\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#DEBUG_BACKEND = simulavr\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# GDB Init Filename.\r\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# When using avarice settings for the JTAG\r\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\r\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\r\n\n#     just set to localhost unless doing some sort of crazy debugging when\r\n\n#     avarice is running on a different computer.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#============================================================================\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target.\r\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the build target to build a HEX file or a library.\r\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#build: lib\r\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Program the device.\r\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\r\n\n#     define the reset signal, load the target file, connect to target, and set\r\n\n#     a breakpoint at main().\r\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create library from object files.\r\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile: create object files from C++ source files.\r\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create assembler files from C++ source files.\r\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\r\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Create object files directory\r\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 87
    },
    "ChibiOS_2.5.2/demos/MSP430-MSP430F5437/Makefile" : {
      "ObjectId" : "555794276a7548cdbf9011406733e11338b2bf8a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable register caching optimization (read documentation).\r\n\n# Option not tested on MSP430, DO NOT USE.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "ChibiOS_2.5.2/demos/MSP430-MSP430x1611-GCC/Makefile" : {
      "ObjectId" : "f454a45001bf522bf3ca4d19794143f6dd7b3067",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable register caching optimization (read documentation).\r\n\n# Option not tested on MSP430, DO NOT USE.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "ChibiOS_2.5.2/demos/PPC-SPC560B-GCC/Makefile" : {
      "ObjectId" : "ae63962f4a870cfaae43aac66a51369dad6b86a4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data.\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in VLE mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#MCU  = e500mc -meabi -msdata=none -mnew-mnemonics -mregnames\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#TRGT = powerpc-eabi-\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "ChibiOS_2.5.2/demos/PPC-SPC560P-GCC/Makefile" : {
      "ObjectId" : "62303fdd1fa083dc17dda04d5ca8493307349a8f",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data.\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in VLE mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#MCU  = e500mc -meabi -msdata=none -mnew-mnemonics -mregnames\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#TRGT = powerpc-eabi-\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "ChibiOS_2.5.2/demos/PPC-SPC563M-GCC/Makefile" : {
      "ObjectId" : "8ba97d6b04566d1dbc41f682632aee81dc1c8bcd",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data.\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in VLE mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C sources here.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# C++ sources here.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#MCU  = e500mc -meabi -msdata=none -mnew-mnemonics -mregnames\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#TRGT = powerpc-eabi-\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "ChibiOS_2.5.2/demos/Posix-GCC/Makefile" : {
      "ObjectId" : "5d77f6a8ec883b22e80e38cd3960d3d4fb304210",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#       !!!! Do NOT edit this makefile with an editor which replace tabs by spaces !!!!\r\n\n#\r\n\n##############################################################################################\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Create project\r\n\n#\r\n\n# make clean = Clean project files.\r\n\n#\r\n\n# To rebuild project do \"make clean\" and \"make all\".\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################################\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List C source files here\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define optimisation level here\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################################\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Linux, or other\r\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generate dependency information\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# makefile rules\r\n\n#\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Include the dependency files, should be the last of the makefile\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# *** EOF ***\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "ChibiOS_2.5.2/demos/Win32-MinGW/Makefile" : {
      "ObjectId" : "1b77c241c089bc9be114925ba2ea0065487899c6",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#       !!!! Do NOT edit this makefile with an editor which replace tabs by spaces !!!!\r\n\n#\r\n\n##############################################################################################\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Create project\r\n\n#\r\n\n# make clean = Clean project files.\r\n\n#\r\n\n# To rebuild project do \"make clean\" and \"make all\".\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################################\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List C source files here\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Define optimisation level here\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################################\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generate dependency information\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# makefile rules\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Include the dependency files, should be the last of the makefile\r\n\n#\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# *** EOF ***\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "ChibiOS_2.5.2/test/coverage/Makefile" : {
      "ObjectId" : "d19014202d5071e519f9da6603bf05b7a2a8421e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#       !!!! Do NOT edit this makefile with an editor which replace tabs by spaces !!!!\r\n\n#\r\n\n##############################################################################################\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Create project\r\n\n#\r\n\n# make clean = Clean project files.\r\n\n#\r\n\n# To rebuild project do \"make clean\" and \"make all\".\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Must be a directory in ${CHIBIOS}/os/hal/platforms\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################################\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List C source files here\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Define optimisation level here\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################################\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Generate dependency information\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# makefile rules\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Include the dependency files, should be the last of the makefile\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# *** EOF ***\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "ChibiOS_2.5.2/testhal/LPC11xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "2dd75ef7132bab4a030deb46df9363f06b9b7634",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "ChibiOS_2.5.2/testhal/LPC13xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "08157975438a74039a24f7929938d8c846697eef",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "ChibiOS_2.5.2/testhal/STM32F0xx/ADC/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F0xx/EXT/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F0xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F0xx/PWM-ICU/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F0xx/SPI/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F0xx/UART/Makefile" : {
      "ObjectId" : "0b2d556fb7f94458bc33b370a38b90e68c5abb53",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/ADC/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/CAN/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/EXT/Makefile" : {
      "ObjectId" : "190662d496121644e276425f1cdfe0d05f0ec7b7",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/GPT/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/I2C/Makefile" : {
      "ObjectId" : "24cebda3b516e7b579e2edbca7aebcdfc804638c",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#USE_OPT = -O2 -ggdb -fomit-frame-pointer -falign-functions=16 -Wall -Wextra\r\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/PWM-ICU/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/RTC/Makefile" : {
      "ObjectId" : "3d28124f25b2e60fc6260c58d08707074983e320",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/RTC_FATTIME/Makefile" : {
      "ObjectId" : "347169ba97baf09ba55cd229f5ed41722d886902",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/SDC/Makefile" : {
      "ObjectId" : "4e25ee84529f35c5b7ddbaa0a13f015324d1ce08",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/SPI/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/UART/Makefile" : {
      "ObjectId" : "0f7e2031767e697441e0a91bcaa2f2316933cc49",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/USB_CDC/Makefile" : {
      "ObjectId" : "0c781d14ce848fc934a5dd4b6b154bd4ab5d5bd3",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/USB_CDC_F107/Makefile" : {
      "ObjectId" : "9b861f6d39f23e7569a7f9ae69a96b9ed056b13a",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/testhal/STM32F1xx/USB_MSC/Makefile" : {
      "ObjectId" : "1f76375fe0b380418969263c377104d252d139dd",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/ADC/Makefile" : {
      "ObjectId" : "792e6e86ed7b99164a8ce6c312179ff44059103e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/ADC_DUAL/Makefile" : {
      "ObjectId" : "792e6e86ed7b99164a8ce6c312179ff44059103e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/CAN/Makefile" : {
      "ObjectId" : "792e6e86ed7b99164a8ce6c312179ff44059103e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/EXT/Makefile" : {
      "ObjectId" : "fac110b8cbc95888c9ed7920043010655085ada7",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "792e6e86ed7b99164a8ce6c312179ff44059103e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/PWM-ICU/Makefile" : {
      "ObjectId" : "792e6e86ed7b99164a8ce6c312179ff44059103e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/SPI/Makefile" : {
      "ObjectId" : "792e6e86ed7b99164a8ce6c312179ff44059103e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/UART/Makefile" : {
      "ObjectId" : "fac110b8cbc95888c9ed7920043010655085ada7",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F3xx/USB_CDC/Makefile" : {
      "ObjectId" : "0e2cb9a0d8b6e51bb3b262a4d764fa09c3bfe655",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/ADC/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/CAN/Makefile" : {
      "ObjectId" : "62d0516f0d5023d8df910681121a63a4a04fd057",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/DMA_STORM/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/EXT/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/GPT/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/I2C/Makefile" : {
      "ObjectId" : "d52f5d4e88f791899abf00445387aa2476f1fd15",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/IRQ_STORM_FPU/Makefile" : {
      "ObjectId" : "8391b78dccc863620b62a45774ca68f80691839e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/PWM-ICU/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/RTC/Makefile" : {
      "ObjectId" : "e383fef8572aa793fdea02d164e65d633d41cf70",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/RTC_FATTIME/Makefile" : {
      "ObjectId" : "ffd36e3d21a9e376ae8b118ee98a6bcc11330526",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-mhard-float -mfpu=fpv4-sp-d16 -fsingle-precision-constant\r\n",
        "Line" : 8,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/SDC/Makefile" : {
      "ObjectId" : "1c0adc089242310056189a9b1956010544abbaae",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-mhard-float -mfpu=fpv4-sp-d16 -fsingle-precision-constant\r\n",
        "Line" : 8,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/SPI/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/UART/Makefile" : {
      "ObjectId" : "86de6d81c2ebd7afc4fad8c93e13e2bce80982d1",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32F4xx/USB_CDC/Makefile" : {
      "ObjectId" : "8c329e2d767d2ccd43af984af6483fd2612488e9",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\r\n\n# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDSCRIPT= $(PORTLD)/STM32F407xG_CCM.ld\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "ChibiOS_2.5.2/testhal/STM32L1xx/ADC/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32L1xx/EXT/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32L1xx/GPT/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32L1xx/IRQ_STORM/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32L1xx/PWM-ICU/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32L1xx/SPI/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ChibiOS_2.5.2/testhal/STM32L1xx/UART/Makefile" : {
      "ObjectId" : "0d3a8e2b22209ab71d7b8c8791d55bd72ebbdbc0",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\r\n\n# Build global options\r\n\n# NOTE: Can be overridden externally.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\r\n\n# Build global options\r\n\n##############################################################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\r\n\n# Architecture or project specific options\r\n\n#\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\r\n\n# Architecture or project specific options\r\n\n##############################################################################\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\r\n\n# Project, sources and paths\r\n\n#\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Define project name here\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Imported source files and paths\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define linker script file here\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\r\n\n# setting.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\r\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\r\n\n#       option that results in lower performance and larger code size.\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List ASM source files here\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\r\n\n# Project, sources and paths\r\n\n##############################################################################\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\r\n\n# Compiler settings\r\n\n#\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TRGT = arm-elf-\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\r\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\r\n\n#       runtime support makes code size explode.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++\r\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\r\n\n# Compiler settings\r\n\n##############################################################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\r\n\n# Start of default section\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\r\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\r\n\n# End of default section\r\n\n##############################################################################\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\r\n\n# Start of user section\r\n\n#\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\r\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\r\n\n# End of user defines\r\n\n##############################################################################\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "MOD-IO_I2C-Slave_v1.02/Project_avrStudio4/default/Makefile" : {
      "ObjectId" : "e0c472c0c495b52485d8705bb4b7f68dd1a072af",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Makefile for the project DemoSoft\r\n\n###############################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## General Flags\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Options common to compile, link and assembly rules\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Compile options common for all C compilation units.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Assembly specific flags\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Linker flags\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Intel Hex file production flags\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Objects that must be built in order to link\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Objects explicitly added by the user\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Build\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Compile\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##Link\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Clean target\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Other dependencies\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "POCKTOOL/Makefile" : {
      "ObjectId" : "f2b4301b25e5eae49acb724ffb7bc90d54643a4e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "PocketPC/Makefile" : {
      "ObjectId" : "56413802e1c5ae07f0326d87fed937370d8189cc",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "SDL-1.2.15/Makefile" : {
      "ObjectId" : "38ae7e0ec0e9e00ed96375407441e8b3eac9472e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile to build and install the SDL library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#(cd $(srcdir) && sh autogen.sh && sh configure)\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Create a SVN snapshot that people can run update on\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "SDL-1.2.15/src/main/macos/exports/Makefile" : {
      "ObjectId" : "5f37ae0760c14dd475d5cda17e4968a5b51554df",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "SDL-1.2.15/src/video/ps3/spulibs/Makefile" : {
      "ObjectId" : "dc580d94360c1505db233f34165ec2862f16b52e",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile is for building the CELL BE SPU libs\n\n# libfb_writer_spu.so, libyuv2rgb_spu.so, libbilin_scaler_spu.so\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Toolchain\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Usually /usr/lib, depending on your distribution\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# fb_writer\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# yuv2rgb_converter\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# bilin_scaler\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "SQLTimeTabling/SQLTimeTabling.desktop/build.xml" : {
      "ObjectId" : "9c0419898d96771f6d94a6dab94b3e63d0957555",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " java source folder ",
        "Line" : 3,
        "CharPositionInLine" : 67
      },
      "1" : {
        "Text" : " intermediate build products ",
        "Line" : 4,
        "CharPositionInLine" : 76
      },
      "2" : {
        "Text" : " jar files ",
        "Line" : 5,
        "CharPositionInLine" : 60
      },
      "3" : {
        "Text" : " local libraries linked against ",
        "Line" : 6,
        "CharPositionInLine" : 79
      },
      "4" : {
        "Text" : " build product location ",
        "Line" : 7,
        "CharPositionInLine" : 73
      },
      "5" : {
        "Text" : " location of general java resources ",
        "Line" : 8,
        "CharPositionInLine" : 95
      },
      "6" : {
        "Text" : " location of Mac OS X specific resources ",
        "Line" : 9,
        "CharPositionInLine" : 114
      },
      "7" : {
        "Text" : " lib directory should contain any pre-built jar files needed to build the project ",
        "Line" : 12,
        "CharPositionInLine" : 91
      },
      "8" : {
        "Text" : " Initialization target, for any prelimary setup needed to build ",
        "Line" : 21,
        "CharPositionInLine" : 73
      },
      "9" : {
        "Text" : " Inject resources ",
        "Line" : 39,
        "CharPositionInLine" : 29
      },
      "10" : {
        "Text" : " Merge library jars into final jar file ",
        "Line" : 43,
        "CharPositionInLine" : 51
      },
      "11" : {
        "Text" : " Copy jars ",
        "Line" : 50,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 12
    },
    "SQLTimeTabling/SQLTimeTabling/build.xml" : {
      "ObjectId" : "9c0419898d96771f6d94a6dab94b3e63d0957555",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " java source folder ",
        "Line" : 3,
        "CharPositionInLine" : 67
      },
      "1" : {
        "Text" : " intermediate build products ",
        "Line" : 4,
        "CharPositionInLine" : 76
      },
      "2" : {
        "Text" : " jar files ",
        "Line" : 5,
        "CharPositionInLine" : 60
      },
      "3" : {
        "Text" : " local libraries linked against ",
        "Line" : 6,
        "CharPositionInLine" : 79
      },
      "4" : {
        "Text" : " build product location ",
        "Line" : 7,
        "CharPositionInLine" : 73
      },
      "5" : {
        "Text" : " location of general java resources ",
        "Line" : 8,
        "CharPositionInLine" : 95
      },
      "6" : {
        "Text" : " location of Mac OS X specific resources ",
        "Line" : 9,
        "CharPositionInLine" : 114
      },
      "7" : {
        "Text" : " lib directory should contain any pre-built jar files needed to build the project ",
        "Line" : 12,
        "CharPositionInLine" : 91
      },
      "8" : {
        "Text" : " Initialization target, for any prelimary setup needed to build ",
        "Line" : 21,
        "CharPositionInLine" : 73
      },
      "9" : {
        "Text" : " Inject resources ",
        "Line" : 39,
        "CharPositionInLine" : 29
      },
      "10" : {
        "Text" : " Merge library jars into final jar file ",
        "Line" : 43,
        "CharPositionInLine" : 51
      },
      "11" : {
        "Text" : " Copy jars ",
        "Line" : 50,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 12
    },
    "SchoolTimeTabling/co/Makefile" : {
      "ObjectId" : "d8f7e4320d6394008864c35ccdcc6c8547bf8dd9",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#LIB = /usr/local/mysql/lib/mysql\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INC = /usr/local/mysql/include/mysql\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-lz -lnsl -lsocket -lz\n",
        "Line" : 7,
        "CharPositionInLine" : 83
      },
      "CommentCount" : 3
    },
    "classes/Makefile" : {
      "ObjectId" : "336c3dabc73c0975995467ef3de653f78be3981b",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "classes/tsp/Makefile" : {
      "ObjectId" : "238690fd0846b4fa93cb561710ddb67d1bb8c8cf",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ddcalg/ARITH/Makefile" : {
      "ObjectId" : "4ba6cfd6888770dff54ff068d902c683ec4a9ec4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Makefile\n\n# Created on: 2017/01/19\n\n#     Author: sin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#*#\n",
        "Line" : 25,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 3
    },
    "ddcalg/HUFFMAN/Makefile" : {
      "ObjectId" : "0eff028fbb1bcd81f3d23cbcf8e8ea2af415e9e4",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Makefile\n\n# Created on: 2017/01/19\n\n#     Author: sin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#*#\n",
        "Line" : 25,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 3
    },
    "ddcalg/LZB/Makefile" : {
      "ObjectId" : "effd710b012d07c97553df68b354b881a3113b48",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Makefile\n\n# Created on: 2017/01/19\n\n#     Author: sin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ffsample/fm3/Makefile" : {
      "ObjectId" : "1c96a744d961d921e2ec0eb3595398baa7dc0237",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Project name (also used for output file name)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Source files and search directories\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Optimization level (0, 1, 2, 3, 4 or s)\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### C Standard level (c89, gnu89, c99 or gnu99)\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Processor type and Thumb(-2) mode for CSRC/ASRC files (YES or NO)\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Linker script for the target MCU\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Output directory\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Output file type (hex, bin or both) and debugger type\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Include dirs, library dirs and definitions\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Warning contorls\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### Programs to build porject\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define all object files\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Compiler flags\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags for C files\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Assembler flags\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Linker flags\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Default target.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create final output file from ELF output file.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile: create object files from C source files. ARM or Thumb(-2)\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile: create object files from C source files. ARM-only\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM or Thumb(-2)\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM-only\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "ffsample/generic/Makefile" : {
      "ObjectId" : "f482d1cba97df360416256ed3e7e1c7bcd446dab",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Project name (also used for output file name)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Source files and search directory\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Target device\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Optimization level (0, 1, 2, 3, 4 or s)\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### C Standard level (c89, gnu89, c99 or gnu99)\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Include dirs, library dirs and definitions\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Warning contorls\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Output directory\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Output file format (hex, bin or both) and debugger type\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Programs to build porject\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define all object files\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Flags for C files\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Assembler flags\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Linker flags\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Default target.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create final output file from ELF output file.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Compile: create object files from C source files. ARM or Thumb(-2)\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM or Thumb(-2)\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "ffsample/lpc176x/Makefile" : {
      "ObjectId" : "3f6430def95cd1ffde9ee7d5e0e81a901421b65c",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Project name (also used for output file name)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Source files and search directories\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Optimization level (0, 1, 2, 3, 4 or s)\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### C Standard level (c89, gnu89, c99 or gnu99)\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Processor type and Thumb(-2) mode for CSRC/ASRC files (YES or NO)\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Linker script for the target MCU\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Output file type (hex, bin or both) and debugger type\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Include dirs, library dirs and definitions\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Warning contorls\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Object output directory\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### Programs to build porject\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define all object files\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Compiler flags\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags for C files\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Assembler flags\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Linker flags\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Default target.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create final output file (.hex or .bin) from ELF output file.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile: create object files from C source files. ARM or Thumb(-2)\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile: create object files from C source files. ARM-only\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM or Thumb(-2)\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM-only\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "ffsample/lpc23xx/Makefile" : {
      "ObjectId" : "cf39550ff39f4c97dcf1662e8dbcb8c22048e809",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Project name (also used for output file name)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Source files and search directories\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Optimization level (0, 1, 2, 3, 4 or s)\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### C Standard level (c89, gnu89, c99 or gnu99)\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Processor type and Thumb(-2) mode for CSRC/ASRC files (YES or NO)\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Linker script for the target MCU\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Output file type (hex, bin or both) and debugger type\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Include dirs, library dirs and definitions\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Warning contorls\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Object output directory\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### Programs to build porject\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define all object files\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Compiler flags\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags for C files\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Assembler flags\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Linker flags\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Default target.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create final output file (.hex or .bin) from ELF output file.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile: create object files from C source files. ARM or Thumb(-2)\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile: create object files from C source files. ARM-only\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM or Thumb(-2)\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM-only\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "ffsample/pic24/Makefile" : {
      "ObjectId" : "04406ec6f42ee54e1be9386d0a3d0f6d7a2fbd4c",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Exported from MPLAB IDE project `picmmc.mcp' on Mon Dec 24 13:13:53 2007.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 4:1 token recognition error at: '\"C:\\P'\nline 4:18 token recognition error at: '\\M'\nline 4:28 token recognition error at: '\\M'\nline 4:38 token recognition error at: '\\b'\nline 4:42 token recognition error at: '\\p'\nline 7:4 token recognition error at: '\\P'\nline 7:18 token recognition error at: '\\M'\nline 7:28 token recognition error at: '\\M'\nline 7:38 token recognition error at: '\\b'\nline 7:42 token recognition error at: '\\p'\nline 7:145 token recognition error at: '\\P'\nline 7:159 token recognition error at: '\\M'\nline 7:169 token recognition error at: '\\M'\nline 7:179 token recognition error at: '\\l'\nline 9:23 token recognition error at: '\\u'\nline 9:28 token recognition error at: '\\P'\nline 9:32 token recognition error at: '\\p'\nline 9:39 token recognition error at: '\\i'\nline 9:54 token recognition error at: '\\u'\nline 9:59 token recognition error at: '\\P'\nline 9:63 token recognition error at: '\\p'\nline 9:70 token recognition error at: '\\c'\nline 9:82 token recognition error at: '\\u'\nline 9:87 token recognition error at: '\\P'\nline 9:91 token recognition error at: '\\p'\nline 9:98 token recognition error at: '\\p'\nline 9:112 token recognition error at: '\\p'\nline 9:126 token recognition error at: '\\m'\nline 9:136 token recognition error at: '\\m'\nline 9:146 token recognition error at: '\\b'\nline 9:153 token recognition error at: '\\s'\nline 9:161 token recognition error at: '\\h'\nline 9:163 token recognition error at: '\\p'\nline 9:183 token recognition error at: '\\p'\nline 9:197 token recognition error at: '\\m'\nline 9:207 token recognition error at: '\\m'\nline 9:217 token recognition error at: '\\b'\nline 9:224 token recognition error at: '\\i'\nline 9:232 token recognition error at: '\\y'\nline 9:245 token recognition error at: '\\p'\nline 9:259 token recognition error at: '\\m'\nline 9:269 token recognition error at: '\\m'\nline 9:279 token recognition error at: '\\b'\nline 9:286 token recognition error at: '\\i'\nline 9:294 token recognition error at: '\\s'\nline 9:308 token recognition error at: '\\u'\nline 9:313 token recognition error at: '\\P'\nline 9:317 token recognition error at: '\\p'\nline 9:324 token recognition error at: '\\c'\nline 10:4 token recognition error at: '\\P'\nline 10:18 token recognition error at: '\\M'\nline 10:28 token recognition error at: '\\M'\nline 10:38 token recognition error at: '\\b'\nline 10:42 token recognition error at: '\\p'\nline 12:19 token recognition error at: '\\u'\nline 12:24 token recognition error at: '\\P'\nline 12:28 token recognition error at: '\\p'\nline 12:35 token recognition error at: '\\d'\nline 12:49 token recognition error at: '\\u'\nline 12:54 token recognition error at: '\\P'\nline 12:58 token recognition error at: '\\p'\nline 12:65 token recognition error at: '\\i'\nline 12:80 token recognition error at: '\\u'\nline 12:85 token recognition error at: '\\P'\nline 12:89 token recognition error at: '\\p'\nline 12:96 token recognition error at: '\\f'\nline 12:106 token recognition error at: '\\p'\nline 12:120 token recognition error at: '\\m'\nline 12:130 token recognition error at: '\\m'\nline 12:140 token recognition error at: '\\b'\nline 12:147 token recognition error at: '\\i'\nline 12:155 token recognition error at: '\\y'\nline 12:168 token recognition error at: '\\p'\nline 12:182 token recognition error at: '\\m'\nline 12:192 token recognition error at: '\\m'\nline 12:202 token recognition error at: '\\b'\nline 12:209 token recognition error at: '\\i'\nline 12:217 token recognition error at: '\\s'\nline 12:231 token recognition error at: '\\u'\nline 12:236 token recognition error at: '\\P'\nline 12:240 token recognition error at: '\\p'\nline 12:247 token recognition error at: '\\f'\nline 13:4 token recognition error at: '\\P'\nline 13:18 token recognition error at: '\\M'\nline 13:28 token recognition error at: '\\M'\nline 13:38 token recognition error at: '\\b'\nline 13:42 token recognition error at: '\\p'\nline 15:23 token recognition error at: '\\u'\nline 15:28 token recognition error at: '\\P'\nline 15:32 token recognition error at: '\\p'\nline 15:39 token recognition error at: '\\f'\nline 15:49 token recognition error at: '\\u'\nline 15:54 token recognition error at: '\\P'\nline 15:58 token recognition error at: '\\p'\nline 15:65 token recognition error at: '\\d'\nline 15:79 token recognition error at: '\\u'\nline 15:84 token recognition error at: '\\P'\nline 15:88 token recognition error at: '\\p'\nline 15:95 token recognition error at: '\\m'\nline 15:110 token recognition error at: '\\u'\nline 15:115 token recognition error at: '\\P'\nline 15:119 token recognition error at: '\\p'\nline 15:126 token recognition error at: '\\i'\nline 15:141 token recognition error at: '\\u'\nline 15:146 token recognition error at: '\\P'\nline 15:150 token recognition error at: '\\p'\nline 15:157 token recognition error at: '\\c'\nline 15:169 token recognition error at: '\\u'\nline 15:174 token recognition error at: '\\P'\nline 15:178 token recognition error at: '\\p'\nline 15:185 token recognition error at: '\\p'\nline 15:199 token recognition error at: '\\p'\nline 15:213 token recognition error at: '\\m'\nline 15:223 token recognition error at: '\\m'\nline 15:233 token recognition error at: '\\b'\nline 15:240 token recognition error at: '\\s'\nline 15:248 token recognition error at: '\\h'\nline 15:250 token recognition error at: '\\p'\nline 15:270 token recognition error at: '\\p'\nline 15:284 token recognition error at: '\\m'\nline 15:294 token recognition error at: '\\m'\nline 15:304 token recognition error at: '\\b'\nline 15:311 token recognition error at: '\\i'\nline 15:319 token recognition error at: '\\y'\nline 15:332 token recognition error at: '\\p'\nline 15:346 token recognition error at: '\\m'\nline 15:356 token recognition error at: '\\m'\nline 15:366 token recognition error at: '\\b'\nline 15:373 token recognition error at: '\\i'\nline 15:381 token recognition error at: '\\s'\nline 15:395 token recognition error at: '\\u'\nline 15:400 token recognition error at: '\\P'\nline 15:404 token recognition error at: '\\p'\nline 15:411 token recognition error at: '\\m'\nline 16:4 token recognition error at: '\\P'\nline 16:18 token recognition error at: '\\M'\nline 16:28 token recognition error at: '\\M'\nline 16:38 token recognition error at: '\\b'\nline 16:42 token recognition error at: '\\p'\nline 18:21 token recognition error at: '\\u'\nline 18:26 token recognition error at: '\\P'\nline 18:30 token recognition error at: '\\p'\nline 18:37 token recognition error at: '\\i'\nline 18:52 token recognition error at: '\\u'\nline 18:57 token recognition error at: '\\P'\nline 18:61 token recognition error at: '\\p'\nline 18:68 token recognition error at: '\\d'\nline 18:82 token recognition error at: '\\p'\nline 18:96 token recognition error at: '\\m'\nline 18:106 token recognition error at: '\\m'\nline 18:116 token recognition error at: '\\b'\nline 18:123 token recognition error at: '\\s'\nline 18:131 token recognition error at: '\\h'\nline 18:133 token recognition error at: '\\p'\nline 18:153 token recognition error at: '\\u'\nline 18:158 token recognition error at: '\\P'\nline 18:162 token recognition error at: '\\p'\nline 18:169 token recognition error at: '\\m'\nline 19:4 token recognition error at: '\\P'\nline 19:18 token recognition error at: '\\M'\nline 19:28 token recognition error at: '\\M'\nline 19:38 token recognition error at: '\\b'\nline 19:42 token recognition error at: '\\p'\nline 21:29 token recognition error at: '\\u'\nline 21:34 token recognition error at: '\\P'\nline 21:38 token recognition error at: '\\p'\nline 21:45 token recognition error at: '\\c'\nline 21:57 token recognition error at: '\\u'\nline 21:62 token recognition error at: '\\P'\nline 21:66 token recognition error at: '\\p'\nline 21:73 token recognition error at: '\\i'\nline 21:88 token recognition error at: '\\u'\nline 21:93 token recognition error at: '\\P'\nline 21:97 token recognition error at: '\\p'\nline 21:104 token recognition error at: '\\m'\nline 21:119 token recognition error at: '\\p'\nline 21:133 token recognition error at: '\\m'\nline 21:143 token recognition error at: '\\m'\nline 21:153 token recognition error at: '\\b'\nline 21:160 token recognition error at: '\\i'\nline 21:168 token recognition error at: '\\y'\nline 21:181 token recognition error at: '\\p'\nline 21:195 token recognition error at: '\\m'\nline 21:205 token recognition error at: '\\m'\nline 21:215 token recognition error at: '\\b'\nline 21:222 token recognition error at: '\\i'\nline 21:230 token recognition error at: '\\s'\nline 21:244 token recognition error at: '\\u'\nline 21:249 token recognition error at: '\\P'\nline 21:253 token recognition error at: '\\p'\nline 21:260 token recognition error at: '\\m'\nline 22:4 token recognition error at: '\\P'\nline 22:18 token recognition error at: '\\M'\nline 22:28 token recognition error at: '\\M'\nline 22:38 token recognition error at: '\\b'\nline 22:42 token recognition error at: '\\p'\nline 25:74 token recognition error at: '\"\\r\\n\\r\\n\u0000'\n"
    },
    "ffsample/stm32/Makefile" : {
      "ObjectId" : "d144f59ade2f4fadcc2bf190031bb2c3522019e9",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Project name (also used for output file name)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Source files and search directories\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Optimization level (0, 1, 2, 3, 4 or s)\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### C Standard level (c89, gnu89, c99 or gnu99)\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Processor type and Thumb(-2) mode for CSRC/ASRC files (YES or NO)\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Linker script for the target MCU\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Output file type (hex, bin or both) and debugger type\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Include dirs, library dirs and definitions\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Warning contorls\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Object output directory\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### Programs to build porject\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define all object files\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Compiler flags\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags for C files\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Assembler flags\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Linker flags\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Default target.\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create final output file (.hex or .bin) from ELF output file.\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile: create object files from C source files. ARM or Thumb(-2)\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile: create object files from C source files. ARM-only\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM or Thumb(-2)\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM-only\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "pfsample/avr/Makefile" : {
      "ObjectId" : "420a6aa112a397d203d08ba40db8a0ba4942a729",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### Project name (also used for output file name)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Source files and search directory\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Target device\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Optimization level (0, 1, 2, 3, 4 or s)\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### C Standard level (c89, gnu89, c99 or gnu99)\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Include dirs, library dirs and definitions\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Warning contorls\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Output directory\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Output file format (hex, bin or both) and debugger type\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Programs to build porject\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define all object files\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Flags for C files\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Assembler flags\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Linker flags\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Default target.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create final output file from ELF output file.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Compile: create object files from C source files. ARM or Thumb(-2)\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM or Thumb(-2)\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "pfsample/avr_boot/Makefile" : {
      "ObjectId" : "6ac4c5d38d3dddd192f5b7f1f79abda55bf03411",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#------------------------------------------------------------------\r\n\n# Makefile for stand-alone MMC boot strap loader\r\n\n#------------------------------------------------------------------\r\n\n# Change these three defs for the target device\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target device to be used (32K or lager)\n",
        "Line" : 6,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : "# Boot start address [byte] (depends on BOOTSZ)\r\n\n# CPU clock frequency [Hz]\n",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Project name (also used for output file name)\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Source files and search directory\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Optimization level (0, 1, 2, 3, 4 or s)\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### C Standard level (c89, gnu89, c99 or gnu99)\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Include dirs, library dirs and definitions\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Warning contorls\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### Output directory\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### Output file format (hex, bin or both) and debugger type\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Programs to build porject\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define all object files\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Flags for C files\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Assembler flags\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Linker flags\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Default target.\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create final output file from ELF output file.\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile: create object files from C source files. ARM or Thumb(-2)\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Assemble: create object files from assembler source files. ARM or Thumb(-2)\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "pfsample/pic/Makefile" : {
      "ObjectId" : "04406ec6f42ee54e1be9386d0a3d0f6d7a2fbd4c",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Exported from MPLAB IDE project `picmmc.mcp' on Mon Dec 24 13:13:53 2007.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 4:1 token recognition error at: '\"C:\\P'\nline 4:18 token recognition error at: '\\M'\nline 4:28 token recognition error at: '\\M'\nline 4:38 token recognition error at: '\\b'\nline 4:42 token recognition error at: '\\p'\nline 7:4 token recognition error at: '\\P'\nline 7:18 token recognition error at: '\\M'\nline 7:28 token recognition error at: '\\M'\nline 7:38 token recognition error at: '\\b'\nline 7:42 token recognition error at: '\\p'\nline 7:145 token recognition error at: '\\P'\nline 7:159 token recognition error at: '\\M'\nline 7:169 token recognition error at: '\\M'\nline 7:179 token recognition error at: '\\l'\nline 9:23 token recognition error at: '\\u'\nline 9:28 token recognition error at: '\\P'\nline 9:32 token recognition error at: '\\p'\nline 9:39 token recognition error at: '\\i'\nline 9:54 token recognition error at: '\\u'\nline 9:59 token recognition error at: '\\P'\nline 9:63 token recognition error at: '\\p'\nline 9:70 token recognition error at: '\\c'\nline 9:82 token recognition error at: '\\u'\nline 9:87 token recognition error at: '\\P'\nline 9:91 token recognition error at: '\\p'\nline 9:98 token recognition error at: '\\p'\nline 9:112 token recognition error at: '\\p'\nline 9:126 token recognition error at: '\\m'\nline 9:136 token recognition error at: '\\m'\nline 9:146 token recognition error at: '\\b'\nline 9:153 token recognition error at: '\\s'\nline 9:161 token recognition error at: '\\h'\nline 9:163 token recognition error at: '\\p'\nline 9:183 token recognition error at: '\\p'\nline 9:197 token recognition error at: '\\m'\nline 9:207 token recognition error at: '\\m'\nline 9:217 token recognition error at: '\\b'\nline 9:224 token recognition error at: '\\i'\nline 9:232 token recognition error at: '\\y'\nline 9:245 token recognition error at: '\\p'\nline 9:259 token recognition error at: '\\m'\nline 9:269 token recognition error at: '\\m'\nline 9:279 token recognition error at: '\\b'\nline 9:286 token recognition error at: '\\i'\nline 9:294 token recognition error at: '\\s'\nline 9:308 token recognition error at: '\\u'\nline 9:313 token recognition error at: '\\P'\nline 9:317 token recognition error at: '\\p'\nline 9:324 token recognition error at: '\\c'\nline 10:4 token recognition error at: '\\P'\nline 10:18 token recognition error at: '\\M'\nline 10:28 token recognition error at: '\\M'\nline 10:38 token recognition error at: '\\b'\nline 10:42 token recognition error at: '\\p'\nline 12:19 token recognition error at: '\\u'\nline 12:24 token recognition error at: '\\P'\nline 12:28 token recognition error at: '\\p'\nline 12:35 token recognition error at: '\\d'\nline 12:49 token recognition error at: '\\u'\nline 12:54 token recognition error at: '\\P'\nline 12:58 token recognition error at: '\\p'\nline 12:65 token recognition error at: '\\i'\nline 12:80 token recognition error at: '\\u'\nline 12:85 token recognition error at: '\\P'\nline 12:89 token recognition error at: '\\p'\nline 12:96 token recognition error at: '\\f'\nline 12:106 token recognition error at: '\\p'\nline 12:120 token recognition error at: '\\m'\nline 12:130 token recognition error at: '\\m'\nline 12:140 token recognition error at: '\\b'\nline 12:147 token recognition error at: '\\i'\nline 12:155 token recognition error at: '\\y'\nline 12:168 token recognition error at: '\\p'\nline 12:182 token recognition error at: '\\m'\nline 12:192 token recognition error at: '\\m'\nline 12:202 token recognition error at: '\\b'\nline 12:209 token recognition error at: '\\i'\nline 12:217 token recognition error at: '\\s'\nline 12:231 token recognition error at: '\\u'\nline 12:236 token recognition error at: '\\P'\nline 12:240 token recognition error at: '\\p'\nline 12:247 token recognition error at: '\\f'\nline 13:4 token recognition error at: '\\P'\nline 13:18 token recognition error at: '\\M'\nline 13:28 token recognition error at: '\\M'\nline 13:38 token recognition error at: '\\b'\nline 13:42 token recognition error at: '\\p'\nline 15:23 token recognition error at: '\\u'\nline 15:28 token recognition error at: '\\P'\nline 15:32 token recognition error at: '\\p'\nline 15:39 token recognition error at: '\\f'\nline 15:49 token recognition error at: '\\u'\nline 15:54 token recognition error at: '\\P'\nline 15:58 token recognition error at: '\\p'\nline 15:65 token recognition error at: '\\d'\nline 15:79 token recognition error at: '\\u'\nline 15:84 token recognition error at: '\\P'\nline 15:88 token recognition error at: '\\p'\nline 15:95 token recognition error at: '\\m'\nline 15:110 token recognition error at: '\\u'\nline 15:115 token recognition error at: '\\P'\nline 15:119 token recognition error at: '\\p'\nline 15:126 token recognition error at: '\\i'\nline 15:141 token recognition error at: '\\u'\nline 15:146 token recognition error at: '\\P'\nline 15:150 token recognition error at: '\\p'\nline 15:157 token recognition error at: '\\c'\nline 15:169 token recognition error at: '\\u'\nline 15:174 token recognition error at: '\\P'\nline 15:178 token recognition error at: '\\p'\nline 15:185 token recognition error at: '\\p'\nline 15:199 token recognition error at: '\\p'\nline 15:213 token recognition error at: '\\m'\nline 15:223 token recognition error at: '\\m'\nline 15:233 token recognition error at: '\\b'\nline 15:240 token recognition error at: '\\s'\nline 15:248 token recognition error at: '\\h'\nline 15:250 token recognition error at: '\\p'\nline 15:270 token recognition error at: '\\p'\nline 15:284 token recognition error at: '\\m'\nline 15:294 token recognition error at: '\\m'\nline 15:304 token recognition error at: '\\b'\nline 15:311 token recognition error at: '\\i'\nline 15:319 token recognition error at: '\\y'\nline 15:332 token recognition error at: '\\p'\nline 15:346 token recognition error at: '\\m'\nline 15:356 token recognition error at: '\\m'\nline 15:366 token recognition error at: '\\b'\nline 15:373 token recognition error at: '\\i'\nline 15:381 token recognition error at: '\\s'\nline 15:395 token recognition error at: '\\u'\nline 15:400 token recognition error at: '\\P'\nline 15:404 token recognition error at: '\\p'\nline 15:411 token recognition error at: '\\m'\nline 16:4 token recognition error at: '\\P'\nline 16:18 token recognition error at: '\\M'\nline 16:28 token recognition error at: '\\M'\nline 16:38 token recognition error at: '\\b'\nline 16:42 token recognition error at: '\\p'\nline 18:21 token recognition error at: '\\u'\nline 18:26 token recognition error at: '\\P'\nline 18:30 token recognition error at: '\\p'\nline 18:37 token recognition error at: '\\i'\nline 18:52 token recognition error at: '\\u'\nline 18:57 token recognition error at: '\\P'\nline 18:61 token recognition error at: '\\p'\nline 18:68 token recognition error at: '\\d'\nline 18:82 token recognition error at: '\\p'\nline 18:96 token recognition error at: '\\m'\nline 18:106 token recognition error at: '\\m'\nline 18:116 token recognition error at: '\\b'\nline 18:123 token recognition error at: '\\s'\nline 18:131 token recognition error at: '\\h'\nline 18:133 token recognition error at: '\\p'\nline 18:153 token recognition error at: '\\u'\nline 18:158 token recognition error at: '\\P'\nline 18:162 token recognition error at: '\\p'\nline 18:169 token recognition error at: '\\m'\nline 19:4 token recognition error at: '\\P'\nline 19:18 token recognition error at: '\\M'\nline 19:28 token recognition error at: '\\M'\nline 19:38 token recognition error at: '\\b'\nline 19:42 token recognition error at: '\\p'\nline 21:29 token recognition error at: '\\u'\nline 21:34 token recognition error at: '\\P'\nline 21:38 token recognition error at: '\\p'\nline 21:45 token recognition error at: '\\c'\nline 21:57 token recognition error at: '\\u'\nline 21:62 token recognition error at: '\\P'\nline 21:66 token recognition error at: '\\p'\nline 21:73 token recognition error at: '\\i'\nline 21:88 token recognition error at: '\\u'\nline 21:93 token recognition error at: '\\P'\nline 21:97 token recognition error at: '\\p'\nline 21:104 token recognition error at: '\\m'\nline 21:119 token recognition error at: '\\p'\nline 21:133 token recognition error at: '\\m'\nline 21:143 token recognition error at: '\\m'\nline 21:153 token recognition error at: '\\b'\nline 21:160 token recognition error at: '\\i'\nline 21:168 token recognition error at: '\\y'\nline 21:181 token recognition error at: '\\p'\nline 21:195 token recognition error at: '\\m'\nline 21:205 token recognition error at: '\\m'\nline 21:215 token recognition error at: '\\b'\nline 21:222 token recognition error at: '\\i'\nline 21:230 token recognition error at: '\\s'\nline 21:244 token recognition error at: '\\u'\nline 21:249 token recognition error at: '\\P'\nline 21:253 token recognition error at: '\\p'\nline 21:260 token recognition error at: '\\m'\nline 22:4 token recognition error at: '\\P'\nline 22:18 token recognition error at: '\\M'\nline 22:28 token recognition error at: '\\M'\nline 22:38 token recognition error at: '\\b'\nline 22:42 token recognition error at: '\\p'\nline 25:74 token recognition error at: '\"\\r\\n\\r\\n\u0000'\n"
    },
    "rogue3.6.4-src/Makefile" : {
      "ObjectId" : "4e88d85864af4a666bd0ea830b85908724747ce5",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for rogue\n\n# %W% (Berkeley) %G%\n\n#\n\n# Rogue: Exploring the Dungeons of Doom\n\n# Copyright (C) 1980, 1981 Michael Toy, Ken Arnold and Glenn Wichman\n\n# All rights reserved.\n\n#\n\n# See the file LICENSE.TXT for full copyright and licensing information.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DOCSRC= rogue.6 rogue.r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\t$(RM) core $(PROGRAM) $(PROGRAM).exe $(DISTNAME).tar $(DISTNAME).tar.gz \n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\ttar cf $(DISTNAME)-src.tar $(CFILES) $(HDRS) $(MISC) $(DOCS)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\ttbl rogue.r | nroff -ms | colcrt - > $(PROGRAM).doc\n\n#\tnroff -man rogue.6 | colcrt - > $(PROGRAM).cat\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\ttbl rogue.r | nroff -ms | colcrt - > $(ROGUE).doc\n\n#\tnroff -man rogue.6 | colcrt - > $(ROGUE).cat\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\tgroff -P-c -t -ms -Tascii rogue.r | sed -e 's/.\\x08//g' > $(PROGRAM).doc\n\n#\tgroff -man rogue.6 | sed -e 's/.\\x08//g' > $(PROGRAM).cat\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\tgroff -P-c -t -ms -Tascii rogue.r | sed -e 's/.\\x08//g' > $(PROGRAM).doc\n\n#\tgroff -man rogue.6 | sed -e 's/.\\x08//g' > $(PROGRAM).cat\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\tgroff -P-c -t -ms -Tascii rogue.r | sed -e 's/.\\x08//g' > $(PROGRAM).doc\n\n#\tgroff -man rogue.6 | sed -e 's/.\\x08//g' > $(PROGRAM).cat\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\tgroff -P-c -t -ms -Tascii rogue.r | sed -e 's/.\\x08//g' > $(PROGRAM).doc\n\n#\tgroff -man rogue.6 | sed -e 's/.\\x08//g' > $(PROGRAM).cat\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\tgroff -P-b -P-u -t -ms -Tascii rogue.r > $(PROGRAM).doc\n\n#\tgroff -P-b -P-u -man -Tascii rogue.6 > $(PROGRAM).cat\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\tgroff -P-c -t -ms -Tascii rogue.r | sed -e 's/.\\x08//g' > $(PROGRAM).doc\n\n#\tgroff -P-c -man -Tascii rogue.6 | sed -e 's/.\\x08//g' > $(PROGRAM).cat\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Use MINGW32-MAKE to build this target\n\n#\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Seperate doc targets for DJGPP prevent strange SIGSEGV in groff\n\n# in that environment.\n\n#\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\t@$(MAKE) --no-print-directory doc.djgpp\n\n#\t@$(MAKE) --no-print-directory cat.djgpp\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Use NMAKE to build this target\n\n#\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16,
      "Errorlog" : "line 144:43 token recognition error at: '\\x'\nline 147:41 token recognition error at: '\\x'\nline 164:10 token recognition error at: '\"/NODEFAULTLIB:LIBC ..\\p'\nline 164:41 token recognition error at: '\\p'\nline 165:51 token recognition error at: '\\p'\nline 166:24 token recognition error at: '\" $(PROGRAM).exe\\n\\t-del $(DISTNAME)-win32.zip\\n\\tzip $(DISTNAME)-win32.zip $(PROGRAM).exe LICENSE.TXT $(DOCS)\\n\u0000'\n"
    },
    "rogue5.2.2-src/Makefile" : {
      "ObjectId" : "9d65e82cfdf5ebee3cee22433ee1b5cece4b6ba9",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for rogue\n\n# @(#)Makefile\t4.13 (Berkeley) 1/23/82\n\n#\n\n# Rogue: Exploring the Dungeons of Doom\n\n# Copyright (C) 1980, 1981, 1982 Michael Toy, Ken Arnold and Glenn Wichman\n\n# All rights reserved.\n\n#\n\n# See the file LICENSE.TXT for full copyright and licensing information.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tSCOREFILE=\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MACHDEP=\t-DMAXLOAD=40 -DLOADAV -DCHECKTIME=4\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t@cpp -P $(CFLAGS) $*.c | ./xstr -v -c -\n\n#\t@cc -c $(CFLAGS) x.c\n\n#\t@mv x.o $*.o\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# xs.o\n",
        "Line" : 50,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "#\t@rm -f x.c\n\n#\t$(CC) $(LDFLAGS) xs.o $(OBJS) $(CRLIB) \n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\trm -f $(POBJS) $(OBJS) core a.out p.out rogue strings make.out rogue.tar vgrind.* x.c x.o xs.c xs.o linterrs findpw distmod.o xs.po xstr rogue rogue.exe rogue.tar.gz rogue.cat rogue.doc xstr.exe\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\ttbl rogue.me | nroff -me | colcrt - > rogue.doc\n\n#\tnroff -man rogue.6 | colcrt - > rogue.cat\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\ttbl rogue.me | nroff -me | colcrt - > rogue.doc\n\n#\tnroff -man rogue.6 | colcrt - > rogue.cat\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\tgroff -P-c -t -me -Tascii rogue.me | sed -e 's/.\\x08//g' > rogue.doc\n\n#\tgroff -man rogue.6 | sed -e 's/.\\x08//g' > rogue.cat\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\tgroff -P-c -t -me -Tascii rogue.me | sed -e 's/.\\x08//g' > rogue.doc\n\n#\tgroff -man rogue.6 | sed -e 's/.\\x08//g' > rogue.cat\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\tgroff -P-b -P-u -t -me -Tascii rogue.me > rogue.doc\n\n#\tgroff -P-b -P-u -man -Tascii rogue.6 > rogue.cat\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\tgroff -P-c -t -me -Tascii rogue.me | sed -e 's/.\\x08//g' > rogue.doc\n\n#\tgroff -P-c -man -Tascii rogue.6 | sed -e 's/.\\x08//g' > rogue.cat\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\tgroff -t -me -Tascii rogue.me | sed -e 's/.\\x08//g' > rogue.doc\n\n#\tgroff -man -Tascii rogue.6 | sed -e 's/.\\x08//g' > rogue.cat\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "xrogue80_06-Src/Makefile" : {
      "ObjectId" : "00c0ca567988d513be0eaa4ca4f80b487a28f938",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#   XRogue: Expeditions into the Dungeons of Doom\n\n#   Copyright (C) 1991 Robert Pietkivitch\n\n#   All rights reserved.\n\n#\n\n#   Based on \"Advanced Rogue\"\n\n#   Copyright (C) 1984, 1985 Michael Morgan, Ken Dalka and AT&T\n\n#   All rights reserved.\n\n#\n\n#   Based on \"Rogue: Exploring the Dungeons of Doom\"\n\n#   Copyright (C) 1980, 1981 Michael Toy, Ken Arnold and Glenn Wichman\n\n#   All rights reserved.\n\n#\n\n#   See the file LICENSE.TXT for full copyright and licensing information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 113:29 token recognition error at: '\"..\\p'\nline 113:153 token recognition error at: '\" $(PROGRAM)\\n\\t-del $(DISTNAME)-win32.zip\\n\\tzip $(DISTNAME)-win32.zip $(PROGRAM).exe README.TXT LICENSE.TXT\\n\u0000'\n"
    },
    "z80/cpmtools-2.20/Makefile" : {
      "ObjectId" : "f1326f3a6f685e056b634b496dfd3f3b3a7d0cc3",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# I'm only a novice and I haven't worked out how to autoconf this one\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MAKEDEPEND=\tmkdep -d\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MAKEDEPEND=\tmakedepend -f-\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "z80/cpmtools-2.20/badfs/Makefile" : {
      "ObjectId" : "75c4ee0008956833de8594386a733dda76f29f35",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Dummy makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "z80/z80pack-1.35/cpmsim/srccpm2/Makefile" : {
      "ObjectId" : "13cc5bd3219c264f6210bb7f434c6d953af24039",
      "LastModified" : "2017-12-20T01:54:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "z80/z80pack-1.35/cpmsim/srccpm3/Makefile" : {
      "ObjectId" : "c7af8d6a8084faebf799bacd47f390fff14c4519",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "z80/z80pack-1.35/cpmsim/srcmpm/Makefile" : {
      "ObjectId" : "c7af8d6a8084faebf799bacd47f390fff14c4519",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "z80/z80pack-1.35/cpmsim/srctools/Makefile" : {
      "ObjectId" : "9a96c6ad4261ec7455f8abd776c7ee307a57ec28",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# some places where the tools usually are installed\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INSTALLDIR=/usr/local/bin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CC = cc\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "z80/z80pack-1.35/cpmsim/srcucsd-iv/Makefile" : {
      "ObjectId" : "0093f8594a04dc7fce304336b00b5331688be060",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "z80/z80pack-1.35/imsaisim/srcucsd-iv/Makefile" : {
      "ObjectId" : "0093f8594a04dc7fce304336b00b5331688be060",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "z80/z80pack-1.35/z80asm/Makefile" : {
      "ObjectId" : "29e46b6e0df99a7783ca0177f36083324b8d21a5",
      "LastModified" : "2017-11-13T13:35:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CC = cc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 329,
    "ANT" : 2
  },
  "ElapsedTime" : 13318
}