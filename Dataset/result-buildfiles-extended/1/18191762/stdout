{
  "Repository" : "18191762",
  "Revision" : "HEAD",
  "ObjectId" : "d81c1014e461ba94ea49537f9ddbb2c88c161d20",
  "CommitTime" : "2019-04-10T12:47:53Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7f5188a8bfaef1662caedcd80948434f419700ef",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# suppress warning about MACOSX_RPATH\n",
        "Line" : 2,
        "CharPositionInLine" : 26
      },
      "1" : {
        "Text" : "# We need this before 'project(BOHRIUM)' since cmake defines CMAKE_BUILD_TYPE at project()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Everyting else should come after 'project(BOHRIUM)' since 'project()' defines many of the CMAKE_BUILD_* vars\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Shared modules\n",
        "Line" : 17,
        "CharPositionInLine" : 84
      },
      "4" : {
        "Text" : "# Sets LIBDIR\n",
        "Line" : 21,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# Write all compile commands to 'compile_commands.json', which can be used by YouCompleteMe\n\n# and other auto-completion software\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For the Clion IDE\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# .local is default\n",
        "Line" : 30,
        "CharPositionInLine" : 84
      },
      "8" : {
        "Text" : "####################################\n\n# Default compile-flags for Bohrium\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# C Flags\n",
        "Line" : 36,
        "CharPositionInLine" : 60
      },
      "10" : {
        "Text" : "########################################\n\n# C99 for restrict, for(var name=0;...)\n\n# gnu99 for MAP_ANONYMOUS\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# C++ Flags\n",
        "Line" : 66,
        "CharPositionInLine" : 60
      },
      "12" : {
        "Text" : "# Sigh...\n",
        "Line" : 74,
        "CharPositionInLine" : 60
      },
      "13" : {
        "Text" : "###################\n\n# Warning as error\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Let's get the BH_VERSION_MAJOR, _MINOR, and _PATCH variables\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################\n\n# External dependencies\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Used for autogen\n",
        "Line" : 104,
        "CharPositionInLine" : 84
      },
      "17" : {
        "Text" : "# Everything\n",
        "Line" : 109,
        "CharPositionInLine" : 91
      },
      "18" : {
        "Text" : "# For older versions of Boost, we need this macro defined:\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Everything\n",
        "Line" : 116,
        "CharPositionInLine" : 47
      },
      "20" : {
        "Text" : "# We do not want MacOSX to set \"@path\" when installing because of the MacOSX wheel tool `delocate`.\n\n# Instead, we set the installation path manually.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#####################\n\n# Bohrium components\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############################\n\n# Install thirdparty headers\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#########################################\n\n# Install JIT-kernels dependency headers\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###############\n\n# Bohrium Cache\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# When using the default cache location, we will install the cache dir and set permissions to 777.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#############################\n\n# Bohrium configuration file\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Fill out the config-template\n",
        "Line" : 189,
        "CharPositionInLine" : 84
      },
      "CommentCount" : 28
    },
    "bridge/c/CMakeLists.txt" : {
      "ObjectId" : "680c198c087d83a227e3b4a01d4eb88796cecfd3",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Let's generate the source files of the C bridge\n\n#Note that we concatenate all header files in to one 'bhc.h'\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We depend on bhxx.so\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finally, let's install the compiled library and the combined header file\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "bridge/cxx/CMakeLists.txt" : {
      "ObjectId" : "d692a7dc15e64bf894676514abf773fcdaac6bc5",
      "LastModified" : "2017-11-13T18:23:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_custom_target(BHXX_CODEGEN DEPENDS ${SRC_H})\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include the headers of Bohrium\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include the headers of bhxx\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the bhxx library\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We depend on bh.so\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# And we depend on the code generated files\n\n#add_dependencies(bhxx BHXX_CODEGEN)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Let's install header files (both static and generated headers)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Let's install the library\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "bridge/cxx/examples/CMakeLists.txt" : {
      "ObjectId" : "b6b1e2f56ad057dc2f69614fbe18686813500759",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ... and header files of the C++ Bridge\n",
        "Line" : 5,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 1
    },
    "bridge/npbackend/CMakeLists.txt" : {
      "ObjectId" : "092bc82c87cef647e336949d53af9114f5edab36",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Notice, all dependecy checks on Python, pip, virtualenv etc is done by the `py_api` module.\n\n# The dependency on cython and NumPy is automatically installed in the virtualenv\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For each interpreter in the user specified list `PY_EXE_LIST`, we build a package.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define `VR_PATH` which should point to the virtualenv over at the `py_api` module\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# We run `build.bash` in order to generate the wheel package.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The `npbackend` target is always called, but it will only call the `add_custom_command()` above when it's\n\n# depdendencies (the files in ${SRC}) changes.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Exporting the wheel package to `PY_WHEEL`.\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Install using `pip install --user -I` command where `PYTHONUSERBASE` is set to CMAKE_INSTALL_PREFIX\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "bridge/py_api/CMakeLists.txt" : {
      "ObjectId" : "0443d9e62eabdea4cb527d471205a80305cd16b1",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The user can set `PY_WHEEL` to export Python wheel packages instead of install them\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For each interpreter in the user specified list `PY_EXE_LIST`, we build a package.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define `VR_PATH` based on the `PY_EXE` path in order to avoid name clash\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# We run `build.bash` in order to generate the wheel package.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The `py_api` target is always called, but it will only call the `add_custom_command()` above when it's\n\n# depdendencies (the files in ${SRC}) changes.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Exporting the wheel package to `PY_WHEEL`.\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Install using `pip install --user -I` command where `PYTHONUSERBASE` is set to CMAKE_INSTALL_PREFIX\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cmake/Modules/BuildMonoBenchmark.cmake" : {
      "ObjectId" : "79e97e31c147e5869ffba3397e182ba807e952e5",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enumerate over all .tt files and apply T4 to them\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Find source files\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Add a target, and register a simple name\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindCBLAS.cmake" : {
      "ObjectId" : "da3184cffde6a8bc9b8590be27cf45fa076f50bb",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find cBLAS\n\n# Find the cBLAS includes and library\n\n#\n\n#  CBLAS_INCLUDES    - where to find cblas.h/Accelerate.h\n\n#  CBLAS_LIBRARIES   - List of libraries when using CBLAS.\n\n#  CBLAS_FOUND       - True if CBLAS found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for optional argument\n",
        "Line" : 15,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# check if given symbol is present\n",
        "Line" : 21,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# reset variables\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# check Apple CBLAS\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OpenBLAS\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generic cblas / ATLAS\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# generic blas\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/FindCLBLAS.cmake" : {
      "ObjectId" : "85a0c3b5347c50a3b17e21106a90b2d6abeae180",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find CLBLAS\n\n# Find the CLBLAS includes and library\n\n#\n\n#  CLBLAS_INCLUDES    - where to find cblas.h/Accelerate.h/clblas.h\n\n#  CLBLAS_LIBRARIES   - List of libraries when using CLBLAS.\n\n#  CLBLAS_FOUND       - True if CLBLAS found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CLBLAS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindCython.cmake" : {
      "ObjectId" : "4cec7f01a06f153c964ec7ada3049ce2d9d3449f",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find cython\n\n#\n\n# defines\n\n#\n\n# CYTHON_FOUND - system has cython\n\n# CYTHON_VERSION - cython version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Finding cython involves calling the Python interpreter\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindFFTW.cmake" : {
      "ObjectId" : "f57d14367ad601f2af69f83cef95bac9ed8446a7",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FFTW\n\n# Find the native FFTW includes and library\n\n#\n\n#  FFTW_INCLUDES    - where to find fftw3.h\n\n#  FFTW_LIBRARIES   - List of libraries when using FFTW.\n\n#  FFTW_FOUND       - True if FFTW found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FFTW_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindJupyter.cmake" : {
      "ObjectId" : "caeda4dc900c9a85f8d1825932b52a0a8eb087b2",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Jupyter\n\n#\n\n# defines\n\n#\n\n# JUPYTER_FOUND - system has jupyter\n\n# JUPYTER_EXECUTABLE - where to find 'jupyter'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLAPACKE.cmake" : {
      "ObjectId" : "16cb73be2ea69f89dceb4082e916f20b2d22ee5a",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and link to LAPACKE.\n\n#\n\n# Variables defined::\n\n#\n\n#   LAPACKE_FOUND\n\n#   LAPACKE_LIBRARIES\n\n#   LAPACKE_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibSigSegv.cmake" : {
      "ObjectId" : "e3ee201748f57c92e4a30920f62358869a82a318",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017      Abhimanyu Rawat\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindMono.cmake" : {
      "ObjectId" : "68f78df27db7eb9dc9fd2bfc2d19c1fb75312880",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the mono, mcs, gmcs and gacutil\n\n#\n\n# defines\n\n#\n\n# MONO_FOUND - system has mono, mcs, gmcs and gacutil\n\n# MONO_EXECUTABLE - where to find 'mono'\n\n# XBUILD_EXECUTABLE - where to find 'xbuild'\n\n# MCS_EXECUTABLE - where to find 'mcs'\n\n# GMCS_EXECUTABLE - where to find 'gmcs'\n\n# GACUTIL_EXECUTABLE - where to find 'gacutil'\n\n#\n\n# copyright (c) 2007 Arno Rehn arno@arnorehn.de\n\n# modified to look for xbuild by Kenneth Skovhede 2014\n\n#\n\n# Redistribution and use is allowed according to the terms of the GPL license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindNumPy.cmake" : {
      "ObjectId" : "761150d670e539170eedb67d48051a846691c0c1",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\r\n\n# This module finds if NumPy is installed, and sets the following variables\r\n\n# indicating where it is.\r\n\n#\r\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\r\n\n#\r\n\n#  NUMPY_FOUND               - was NumPy found\r\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\r\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\r\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\r\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\r\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\r\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\r\n\n# Copyright 2012 Continuum Analytics, Inc.\r\n\n#\r\n\n# MIT License\r\n\n#\r\n\n# Permission is hereby granted, free of charge, to any person obtaining\r\n\n# a copy of this software and associated documentation files\r\n\n# (the \"Software\"), to deal in the Software without restriction, including\r\n\n# without limitation the rights to use, copy, modify, merge, publish,\r\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\r\n\n# persons to whom the Software is furnished to do so, subject to\r\n\n# the following conditions:\r\n\n#\r\n\n# The above copyright notice and this permission notice shall be included\r\n\n# in all copies or substantial portions of the Software.\r\n\n#\r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\r\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n\n# OTHER DEALINGS IN THE SOFTWARE.\r\n\n#\r\n\n#============================================================================\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\r\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Make sure all directory separators are '/'\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the major and minor version numbers\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/FindOpenCL.cmake" : {
      "ObjectId" : "185e37991839c54a23fc142276faf12ff9302f94",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n## file Copyright.txt or https://cmake.org/licensing for details.\n\n#\n\n##[=======================================================================[.rst:\n\n#FindOpenCL\n\n#----------\n\n#\n\n#Try to find OpenCL\n\n#\n\n#IMPORTED Targets\n\n#^^^^^^^^^^^^^^^^\n\n#\n\n#This module defines :prop_tgt:`IMPORTED` target ``OpenCL::OpenCL``, if\n\n#OpenCL has been found.\n\n#\n\n#Result Variables\n\n#^^^^^^^^^^^^^^^^\n\n#\n\n#This module defines the following variables::\n\n#\n\n#  OpenCL_FOUND          - True if OpenCL was found\n\n#  OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#  OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#  OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#  OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#  OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n\n#\n\n#The module will also define two cache variables::\n\n#\n\n#  OpenCL_INCLUDE_DIR    - the OpenCL include directory\n\n#  OpenCL_LIBRARY        - the path to the OpenCL library\n\n#\n\n##]=======================================================================]\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindOpenCV.cmake" : {
      "ObjectId" : "8ae29d477e34dac7273deaa3992afe8c66bbcb7e",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpenCV\n\n# ----------\n\n#\n\n# Find OpenCV - variables set::\n\n#\n\n#  OpenCV_FOUND\n\n#  OpenCV_LIBRARIES\n\n#  OpenCV_INCLUDE_DIRS\n\n#\n\n# This script is a combination from multiple sources that use\n\n# different variable names; the names are reconciled at the end\n\n# of the script.\n\n#\n\n# .. todo:: Check if this module is still needed with recent CMake releases.\n\n# .. todo:: Check if the license is correct\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Benoit Rat\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of YCM, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################\n\n#                  Find OpenCV Library\n\n# See http://sourceforge.net/projects/opencvlibrary/\n\n#----------------------------------------------------------\n\n#\n\n## 1: Setup:\n\n# The following variables are optionally searched for defaults\n\n#  OpenCV_DIR:            Base directory of OpenCv tree to use.\n\n#\n\n## 2: Variable\n\n# The following are set after configuration is done:\n\n#\n\n#  OpenCV_FOUND\n\n#  OpenCV_LIBS\n\n#  OpenCV_INCLUDE_DIR\n\n#  OpenCV_VERSION (OpenCV_VERSION_MAJOR, OpenCV_VERSION_MINOR, OpenCV_VERSION_PATCH)\n\n#\n\n#\n\n# Deprecated variable are used to maintain backward compatibility with\n\n# the script of Jan Woetzel (2006/09): www.mip.informatik.uni-kiel.de/~jw\n\n#  OpenCV_INCLUDE_DIRS\n\n#  OpenCV_LIBRARIES\n\n#  OpenCV_LINK_DIRECTORIES\n\n#\n\n## 3: Version\n\n#\n\n# 2010/04/07 Benoit Rat, Correct a bug when OpenCVConfig.cmake is not found.\n\n# 2010/03/24 Benoit Rat, Add compatibility for when OpenCVConfig.cmake is not found.\n\n# 2010/03/22 Benoit Rat, Creation of the script.\n\n#\n\n#\n\n# tested with:\n\n# - OpenCV 2.1:  MinGW, MSVC2008\n\n# - OpenCV 2.0:  MinGW, MSVC2008, GCC4\n\n#\n\n#\n\n## 4: Licence:\n\n#\n\n# Copyright: 2009 Benoit Rat\n\n# CopyPolicy: LGPLv2.1\n\n# \n\n#----------------------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Lorenzo Natale -- Feb 2011\n\n# Improve compatibility with OpenCV package in Ubuntu 10.10\n\n# Lorenzo Natale -- March 2011\n\n# Removing OpenCV_INCLUDE_DIRS from required arguments\n\n# Since not all version of OpenCV set OpenCV_INCLUDE_DIRS. Problem detected with OpenCV 2.0 OpenCVConfig.cmake\n\n# directly calls INCLUDE_DIRECTORIES() and does not propagate any OpenCV_INCLUDE_ variable\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# let's skip module mode, and see if a OpenCVConfig.cmake file is around\n\n# this searches in system directories and ${OpenCV_DIR}\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## OpenCVConfig.cmake sets OpenCV_LIBS OpenCV_INCLUDE_DIRS\n\n## but we need OpenCV_LIBRARIES\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "### If the above failed continues with traditional search method\n\n## To keep backward compatibility we keep the whole script\n\n## intact, however there is probably a lot of redundancy now\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##====================================================\n\n## Find OpenCV libraries\n\n##----------------------------------------------------\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#When its possible to use the Config script use it.\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "## Include the standard CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "## Search for a specific version\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#Otherwise it try to guess it.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#Find OpenCV version by looking at cvver.h\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "## Initiate the variable before the loop\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "## Loop over each components\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#Remove the cache value\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#both debug/release\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#only debug\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#only release\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#no library found\n",
        "Line" : 162,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#Add to the general list\n",
        "Line" : 167,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "##====================================================\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# Try another method to find OpenCV library\n\n# Once run this will define:\n\n#\n\n# OPENCV_FOUND\n\n# OPENCV_INCLUDE_DIR\n\n# OPENCV_LIBRARIES\n\n# OPENCV_LINK_DIRECTORIES\n\n##\n\n# deprecated:\n\n# (JW)-- OPENCV_EXE_LINKER_FLAGS\n\n#\n\n# 2004/05 Jan Woetzel, Friso, Daniel Grest \n\n# 2006 complete rewrite by Jan Woetzel\n\n##\n\n# www.mip.informatik.uni-kiel.de/\n\n# --------------------------------\n\n#\n\n# Modified by nat for YARP\n\n# - nat modified to work on win: added \"$ENV{OPENCV_DIR}/otherlibs/highgui/include\"\n\n# - nat, 19-oct 06: cxcore does not seem required by the opencv pakage that is\n\n# distributed with Debian stable. Still a requirement in windows\n\n# - nat, 20-oct 06: not smart enough to handle possible clashes between\n\n# different versions of opencv if installed in the system. Be careful.\n\n# - nat, 23-oct 06: First check OPENCV_DIR, OPENCV_ROOT or OPENCV_HOME\n\n# - paulfitz, 5-nov 06: made link with libhighgui be default true\n\n#   so that the opencv driver can be compiled. Nat, can you explain again \n\n#   which systems don't have this?\n\n# - nat, 13-nov 06: differentiated LINK_LIBHIGHGUI default on windows and linux\n\n#   still both true by default. I got a problem linking libhighgui on linux (did not\n\n#   have time to debug it) and found that in any case this lib is no longer required\n\n#   by opencv 0.9.9 (as a dependency). If older versions of opencv require libhighgui \n\n#   we can leave the default to TRUE. The libhighgui problem needs to be solved \n\n#   anyway...\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#     message(\"DBG OpenCV for 3.x\")\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# else(CXX_COMPILER_VERSION MATCHES \".*3\\\\.[0-9].*\")\n\n#     message(\"DBG not 3.x\")\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#     message(\"DBG OpenCV for 4.x\")\n",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# else(CXX_COMPILER_VERSION MATCHES \".*4\\\\.[0-9].*\")\n\n#     message(\"DBG not 4.x\")\n",
        "Line" : 246,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# CHECK OPENCV_ROOT\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# CHECK OPENCV_DIR\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# CHECK OPENCV_HOME\n",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#message(\"DBG (OPENCV_POSSIBLE_INCDIRS=${OPENCV_POSSIBLE_INCDIRS}\")\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# candidates for OpenCV library directories:\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#message(\"DBG (OPENCV_POSSIBLE_LIBRARY_PATHS=${OPENCV_POSSIBLE_LIBRARY_PATHS}\")\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# find (all) header files for include directories:\n",
        "Line" : 345,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#message(\"DBG OPENCV_INCLUDE_DIR_CV=${OPENCV_INCLUDE_DIR_CV}\")\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# find (all) libraries - some dont exist on Linux\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# optional CVCAM libs (WIN32 only)\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "###########################################\n\n## CHECK HEADER FILES\n",
        "Line" : 383,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# REQUIRED LIBS\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# some people write opencv/foo.h, some write foo.h\n",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# CVCAM exists only on Windows (check this -- nat)\n",
        "Line" : 402,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# exists only on Windows, thus only there required\n",
        "Line" : 407,
        "CharPositionInLine" : 12
      },
      "42" : {
        "Text" : "# message(\"DBG OPENCV_INCLUDE_DIR=${OPENCV_INCLUDE_DIR}\")\n",
        "Line" : 415,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# libcxcore does not seem to be always required (different distribution behave\n\n# differently)\n",
        "Line" : 417,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#required in win\n",
        "Line" : 422,
        "CharPositionInLine" : 18
      },
      "45" : {
        "Text" : "#################################\n\n## LIBRARIES\n",
        "Line" : 439,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# REQUIRED LIBRARIES\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "#this is required on windows\n",
        "Line" : 455,
        "CharPositionInLine" : 18
      },
      "48" : {
        "Text" : "# CVCAM exists only on Windows (check this -- nat)\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# message(\"DBG OPENCV_LIBRARIES=${OPENCV_LIBRARIES}\")\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "#this is required on windows\n",
        "Line" : 478,
        "CharPositionInLine" : 22
      },
      "51" : {
        "Text" : "# get the link directory for rpath to be used with LINK_DIRECTORIES:\n",
        "Line" : 485,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# display help message\n",
        "Line" : 490,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "##====================================================\n\n## Print message\n\n##----------------------------------------------------\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# make FIND_PACKAGE friendly\n",
        "Line" : 519,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "##====================================================\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "##====================================================\n\n## Backward compatibility\n\n##----------------------------------------------------\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "##====================================================\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# support old variable names\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Not all version of OpenCV set OpenCV_INCLUDE_DIRS, removing it from required arguments\n\n# Lorenzo Natale March 2011. See notes on top of file.\n\n# find_package_handle_standard_args(OpenCV DEFAULT_MSG OpenCV_LIBRARIES OpenCV_INCLUDE_DIRS)\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 60
    },
    "cmake/Modules/GetVersion.cmake" : {
      "ObjectId" : "c8f71ebf35df1ad839bf62cdbc274951445c6aef",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file defines BH_VERSION_STRING, BH_VERSION_MAJOR, BH_VERSION_MINOR, and BH_VERSION_PATCH\n\n# And generate a version C header\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read version information from the VERSION file\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract the MAJOR, MINOR, and PATCH version\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The PATCH version might not exist\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Write the version C header\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/LibVsLib64.cmake" : {
      "ObjectId" : "fb5fede71a914537a0fd91ad5a384b0198e7cb19",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Sets LIBDIR to 'lib' or 'lib64'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Debian or Ubuntu?\n",
        "Line" : 3,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "837a0101f1ecdd03901144a5a5c34c401cde8261",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake features\n",
        "Line" : 1,
        "CharPositionInLine" : 56
      },
      "1" : {
        "Text" : "# Rules for how to generate bh_opcode.cpp and bh_opcode.h\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bh_component depends on dlopen etc.\n\n# A shit ton of stuff depends on boost\n\n# bh_mem_signal depends on LibSigSegv\n",
        "Line" : 19,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 3
    },
    "doc/Makefile" : {
      "ObjectId" : "c9129f0381bb8e756b4d1d46af272555609590e1",
      "LastModified" : "2019-02-18T14:45:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "extmethods/blas/CMakeLists.txt" : {
      "ObjectId" : "a6ef04ac9d79425e6bd76f9c1c00ba794c8f3a41",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#External dependencies\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We depend on bh.so\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "extmethods/clblas/CMakeLists.txt" : {
      "ObjectId" : "da33465f1a55eea41f1352b726dedbac28ce79cb",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#External dependencies\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We depend on bh.so\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "extmethods/lapack/CMakeLists.txt" : {
      "ObjectId" : "0d22a08dd2bd2ffc5111bd80b8045a29e1eb41a6",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#External dependencies\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We depend on bh.so\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "extmethods/opencv/CMakeLists.txt" : {
      "ObjectId" : "c4b226c3d7660afc8e9379bb2c2182cc522289c7",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extmethods/visualizer/CMakeLists.txt" : {
      "ObjectId" : "4507469048ce24f6575198fd5716c4e98104fdc1",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if found all requirements\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#We depend on bh.so\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add visualizer to OpenMP and OpenCL libs\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "filter/bccon/CMakeLists.txt" : {
      "ObjectId" : "1a599ed8130592efdc0e8391c8c9fe0d2dfc67b4",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We depend on bh.so\n",
        "Line" : 14,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 1
    },
    "filter/bcexp/CMakeLists.txt" : {
      "ObjectId" : "10f1bd42a23e98d925f785322c28f9913466e60c",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We depend on bh.so\n",
        "Line" : 14,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 1
    },
    "filter/noneremover/CMakeLists.txt" : {
      "ObjectId" : "266370038efc9abb40e70761d7e3a803e9c7da02",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#We depend on bh.so\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "filter/pprint/CMakeLists.txt" : {
      "ObjectId" : "58a75a3967ee838b3c62d713d2d0ca2d1819e3fb",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#We depend on bh.so\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "b94356779f7f5ba0bbd468281b1d1a39fa76173e",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Add all tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/python/CMakeLists.txt" : {
      "ObjectId" : "8763b26488c5722c6135e45f1cad45d7ca0ed882",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ve/cuda/CMakeLists.txt" : {
      "ObjectId" : "d42ca292ef8f977ed1efbbf09ed4a98b3008dcb6",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Notice, CUDA_LIBRARIES only contains cudart but since we use the CUDA Driver API,\n\n# so we also need to link against cuda by itself.\n\n# We try to find it by searching relative to the libraries we already found.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ve/opencl/CMakeLists.txt" : {
      "ObjectId" : "721aeb466af86c302b0eed6ae4a43d87aeb25473",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ve/openmp/CMakeLists.txt" : {
      "ObjectId" : "282f02972ace39c63f1a51115ec5b0cfbb718149",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The rest of the this file is finding the compiler and flags to write in the config file\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Import and detect OpenMP features\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check OpenMP SIMD support\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for the SIMD flag\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Check for SIMD support\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Check highly RECOMMENDED flags\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# JIT-compiler capabilities: optimization, and parallelization\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Optimizations\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# With Clang, -O3 gives a warning about not being able to vectorize loops\n\n# TODO: Figure out if we can actually have clang vectorize the loops\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Do the user want OpenMP?\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Let's set the openmp-simd flag if it is supported and wanted\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Parallelization\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Let the user overwrite the compile command\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# We need to cleanup the variables for the config file\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "vem/node/CMakeLists.txt" : {
      "ObjectId" : "b230af9afe15e4c13cd7aef16dac926be482a33c",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#We depend on bh.so\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vem/proxy/CMakeLists.txt" : {
      "ObjectId" : "6d0eb62c3d6c941e28bb44189d8bb4c5a54acc2c",
      "LastModified" : "2019-02-12T17:50:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#We depend on bh.so\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 37,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 3393
}