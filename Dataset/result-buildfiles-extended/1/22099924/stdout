{
  "Repository" : "22099924",
  "Revision" : "HEAD",
  "ObjectId" : "33f566392db21d73b1e752900d6e87e7d489b3a8",
  "CommitTime" : "2019-03-23T15:19:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "48dc3132a7af42168c2d4489ad8409cbe5ca4464",
      "LastModified" : "2019-03-11T00:41:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround gtest really wanting to compile with /Mtd vs /MD\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# googlemock also includes googletest\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Cryptlib\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FMT\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "bbs/CMakeLists.txt" : {
      "ObjectId" : "dff0fa1e127c80edd88b91a1fe3c14636c49a2c4",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bbs/admin/gfiles/menus/wwiv/main.pro" : {
      "ObjectId" : "eb2ce044bbeef64b4b5556454b744baa8663a866",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "bbs/admin/gfiles/menus/wwiv/sysop.pro" : {
      "ObjectId" : "88cbc7de86ad741b9bc8ec31e086a041d363875c",
      "LastModified" : "2016-12-31T21:02:21Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "bbs/admin/gfiles/menus/wwiv/vissys.pro" : {
      "ObjectId" : "567fc96f6bb3b7fcdc8ad4857205d3b88640d00c",
      "LastModified" : "2016-12-31T21:02:21Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "bbs/admin/gfiles/menus/wwiv/xfer.pro" : {
      "ObjectId" : "485df75cbf13c00ea37fbba4890ec9304fda9fa8",
      "LastModified" : "2016-12-31T21:02:21Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "bbs_test/CMakeLists.txt" : {
      "ObjectId" : "8cad234c948a35d24b7315eff403a62c2e932313",
      "LastModified" : "2018-08-21T04:21:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Common.cmake" : {
      "ObjectId" : "2e2005102aeb75b15fb08fedeff072f486033c38",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Common CMake module for WWIV\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To silence cereal warnings that they know about already\n\n# bug: https://github.com/USCiLab/cereal/issues/456\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#message(STATUS \"Setting Warning Level 4\")\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/FindWWIVCurses.cmake" : {
      "ObjectId" : "81fb32ff9bd2b3ba443ef2a3deb8b7dcd0144d07",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FindWWIVCurses.\n\n#\n\n# On Windows, WWIV uses PDCurses. On all other platforms, use ncurses.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# message(\"FindWWIVCurses: Using PDCurses\")\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# message(\"FindWWIVCurses: PDCURSES_INCLUDE_DIRS: ${PDCURSES_INCLUDE_DIRS}\")\n\n# message(\"FindWWIVCurses: CURSES_LIBRARIES: ${CURSES_LIBRARIES}\")\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# message(\"FindWWIVCurses: Curses Library: ${CURSES_LIBRARIES}\") \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindGMock.cmake" : {
      "ObjectId" : "de5be1484e7b14c9c2314fe8eb1dafec7b8cf852",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGMock.cmake\n\n# - Try to find benchmark\n\n#\n\n# The following variables are optionally searched for defaults\n\n#  GMOCK_ROOT_DIR:  Base directory where all googletest components are found\n\n#\n\n# Once done this will define\n\n#  GMOCK_FOUND - System has GMOCK\n\n#  GMOCK_INCLUDE_DIRS - The GMOCK include directories\n\n#  GMOCK_LIBRARIES - The libraries needed to use GMOCKmessage(\"WWIV FindGMock\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make googletest happy.\n\n# TODO(rushfan): Test on Linux too.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GMOCK_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindGTest.cmake" : {
      "ObjectId" : "333503cf3aeb6b4cc59a22b223962f1db472cbae",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGTest.cmake\n\n# - Try to find benchmark\n\n#\n\n# The following variables are optionally searched for defaults\n\n#  GTEST_ROOT_DIR:  Base directory where all googletest components are found\n\n#\n\n# Once done this will define\n\n#  GTEST_FOUND - System has GTest\n\n#  GTEST_INCLUDE_DIRS - The GTest include directories\n\n#  GTEST_LIBRARIES - The libraries needed to use GTest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO(rushfan): Test on Linux too.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Used by cctz and others.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GTEST_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/Findbenchmark.cmake" : {
      "ObjectId" : "f92e3670c2337c21f2707449cdc6ce9623985510",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Findbenchmark.cmake\n\n# - Try to find benchmark\n\n#\n\n# The following variables are optionally searched for defaults\n\n#  benchmark_ROOT_DIR:  Base directory where all benchmark components are found\n\n#\n\n# Once done this will define\n\n#  benchmark_FOUND - System has benchmark\n\n#  benchmark_INCLUDE_DIRS - The benchmark include directories\n\n#  benchmark_LIBRARIES - The libraries needed to use benchmark\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set benchmark_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/sanitizers/FindASan.cmake" : {
      "ObjectId" : "064b5b6b39363b2f13662b0048b2b43d40e89c87",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2013 Matthew Arsenault\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n#\n\n# This module tests if address sanitizer is supported by the compiler,\n\n# and creates a ASan build type (i.e. set CMAKE_BUILD_TYPE=ASan to use\n\n# it). This sets the following variables:\n\n#\n\n# CMAKE_C_FLAGS_ASAN - Flags to use for C with asan\n\n# CMAKE_CXX_FLAGS_ASAN  - Flags to use for C++ with asan\n\n# HAVE_ADDRESS_SANITIZER - True or false if the ASan build type is available\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set -Werror to catch \"argument unused during compilation\" warnings\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 35,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 38,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# Clang 3.2+ use this version\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Older deprecated flag for ASan\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/Modules/sanitizers/FindMSan.cmake" : {
      "ObjectId" : "2a7a2a8c357363b6bbd2103452c7e435b4e898f2",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2013 Matthew Arsenault\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module tests if memory sanitizer is supported by the compiler,\n\n# and creates a MSan build type (i.e. set CMAKE_BUILD_TYPE=MSan to use\n\n# it). This sets the following variables:\n\n#\n\n# CMAKE_C_FLAGS_MSAN - Flags to use for C with msan\n\n# CMAKE_CXX_FLAGS_MSAN  - Flags to use for C++ with msan\n\n# HAVE_MEMORY_SANITIZER - True or false if the MSan build type is available\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set -Werror to catch \"argument unused during compilation\" warnings\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 36,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 39,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "# Clang 3.2+ use this version\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Older deprecated flag for MSan\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/Modules/sanitizers/FindTSan.cmake" : {
      "ObjectId" : "283ae7f2bc6f730d4fe81d988d5c83988a2f881b",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2013 Matthew Arsenault\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module tests if thread sanitizer is supported by the compiler,\n\n# and creates a TSan build type (i.e. set CMAKE_BUILD_TYPE=TSan to use\n\n# it). This sets the following variables:\n\n#\n\n# CMAKE_C_FLAGS_TSAN - Flags to use for C with tsan\n\n# CMAKE_CXX_FLAGS_TSAN  - Flags to use for C++ with tsan\n\n# HAVE_THREAD_SANITIZER - True or false if the TSan build type is available\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set -Werror to catch \"argument unused during compilation\" warnings\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 37,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 40,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "# A special test that uses threads seems to not be necessary. tsan\n\n# symbols are used even in just int main() { return 0; }\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Clang 3.2+ use this version\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Older deprecated flag for TSan\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/Modules/sanitizers/FindUBSan.cmake" : {
      "ObjectId" : "a31c68f217e7086aec5e44abf4ba29a89eb218c1",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2013 Matthew Arsenault\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if the compiler supports a working ubsan. Provides a UBSan\n\n# build type, which is essentially Debug + ubsan. The flag can be used\n\n# independently to compose it with other build types or sanitizers.\n\n#\n\n# Sets these variables:\n\n#\n\n# HAVE_UNDEFINED_BEHAVIOR_SANITIZER - True or false if the UBSan is available\n\n# UNDEFINED_BEHAVIOR_SANITIZER_FLAG - Flag to add to compiler to use ubsan if supported\n\n#\n\n# CMAKE_C_FLAGS_UBSAN - Flags to use for C with ubsan\n\n# CMAKE_CXX_FLAGS_UBSAN  - Flags to use for C++ with ubsan\n\n##\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set -Werror to catch \"argument unused during compilation\" warnings\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It isn't sufficient to check if the flag works since the\n\n# check_c_compiler_flag test doesn't link the output.\n\n#\n\n# Most clang packages ship broken packages (the autotools build\n\n# produces a broken package which doesn't include the ubsan\n\n# compiler-rt, so check that it actually works with a linked program\n\n# before trying to use it\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "4f47e68594991ef2a4a3e537317e7533c9209adc",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core_test/CMakeLists.txt" : {
      "ObjectId" : "8d5a2edd1e3334f402ab4f93edc9b04b3e12bd11",
      "LastModified" : "2018-07-09T03:38:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/cl342/CMakeLists.txt" : {
      "ObjectId" : "c71d3020f72c85ac609d47e3ab5c2067e620fbcd",
      "LastModified" : "2017-12-29T03:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is needed to put it in to the root CMakeCache.txt\n\n# but only works if it's been built... sigh \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Awful looking solution hacked up from:\n\n# http://stackoverflow.com/questions/7876753\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "deps/gflags-2.1.1/CMakeLists.txt" : {
      "ObjectId" : "17d38b4bb0e3d4dc920c5809ea618f4dc6d5a7af",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# includes\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# package information\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# options\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# system checks\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# used by CheckTypeSize module\n",
        "Line" : 85,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "# the following are used in #if directives not #ifdef\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# use of special characters in strings to circumvent bug #0008226\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# source files - excluding root subdirectory and/or .in suffix\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# configure source files\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# whenever we build a shared library (DLL on Windows), configure the public\n\n# headers of the API for use of this library rather than the optionally\n\n# also build statically linked library; users can override GFLAGS_DLL_DECL\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# output directories\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# add library targets\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# static vs. shared\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# whether or not targets are a DLL\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# multi-threaded vs. single-threaded\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# installation\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# support direct use of build tree\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# testing - MUST follow the generation of the build tree config file\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# packaging\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# default package generators\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# used package generators\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# common package information\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# RPM package information -- used in cmake/package.cmake.in also for DEB\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# system/architecture\n",
        "Line" : 387,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# source package settings\n",
        "Line" : 420,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# default binary package settings\n",
        "Line" : 425,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# generator specific configuration file\n\n#\n\n# allow package maintainers to use their own configuration file\n\n# $ cmake -DCPACK_PROJECT_CONFIG_FILE:FILE=/path/to/package/config\n",
        "Line" : 432,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# BUILD_PACKAGING\n",
        "Line" : 446,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 28
    },
    "deps/gflags-2.1.1/cmake/CMakeCXXInformation.cmake" : {
      "ObjectId" : "4d0a14aaa5c683961f9dc1a07bfad884073dafe7",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copied from master branch of CMake (commit SHA 34a49dea) before release of\n\n# this newer version which seems to fix a bug of the one coming with CMake 2.8-12.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This file sets the basic flags for the C++ language in CMake.\n\n# It also loads the available platform file for the system-compiler\n\n# if it exists.\n\n# It also loads a system - compiler - processor (or target hardware)\n\n# specific file, which is mainly useful for crosscompiling and embedded systems.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# some compilers use different extensions (e.g. sdcc uses .rel)\n\n# so set the extension here first so it can be overridden by the compiler specific file\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Load compiler-specific information.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# since the gnu compiler has several names force g++\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# load a hardware specific file, mostly useful for embedded compilers\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# load the system- and compiler specific files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We specify the compiler information in the system file for some\n\n# platforms, but this language may not have been enabled when the file\n\n# was first included.  Include it again to get the language info.\n\n# Remove this when all compiler info is removed from system files.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This should be included before the _INIT variables are\n\n# used to initialize the cache.  Since the rule variables\n\n# have if blocks on them, users can still define them here.\n\n# But, it should still be after the platform file so changes can\n\n# be made to those values.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Save the full path of the file so try_compile can use it.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Create a set of shared library variable specific to C++\n\n# For 90% of the systems, these are the same flags as the C versions\n\n# so if these are not set just copy the flags from the c version\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# repeat for modules\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Initialize CXX link type selection flags from C versions.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# add the flags to the cache based\n\n# on the initial values computed in the platform/*.cmake files\n\n# use _INIT variables so that this only happens the first time\n\n# and you can set these flags in the cmake cache\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# avoid just having a space as the initial value for the cache\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# now define the following rules:\n\n# CMAKE_CXX_CREATE_SHARED_LIBRARY\n\n# CMAKE_CXX_CREATE_SHARED_MODULE\n\n# CMAKE_CXX_COMPILE_OBJECT\n\n# CMAKE_CXX_LINK_EXECUTABLE\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# variables supplied by the generator at use time\n\n# <TARGET>\n\n# <TARGET_BASE> the target without the suffix\n\n# <OBJECTS>\n\n# <OBJECT>\n\n# <LINK_LIBRARIES>\n\n# <FLAGS>\n\n# <LINK_FLAGS>\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# CXX compiler information\n\n# <CMAKE_CXX_COMPILER>\n\n# <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS>\n\n# <CMAKE_CXX_SHARED_MODULE_CREATE_FLAGS>\n\n# <CMAKE_CXX_LINK_FLAGS>\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Static library tools\n\n# <CMAKE_AR>\n\n# <CMAKE_RANLIB>\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# create a shared C++ library\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# create a c++ shared module copy the shared library rule by default\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Create a static archive incrementally for large object file counts.\n\n# If CMAKE_CXX_CREATE_STATIC_LIBRARY is set it will override these.\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# compile a C++ file into an object file\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "deps/gflags-2.1.1/cmake/CheckCXXLibraryExists.cmake" : {
      "ObjectId" : "0d1747db7d089cf8562b4c400b4352befbb261ac",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CheckLibraryExists\n\n# ------------------\n\n#\n\n# Check if the function exists.\n\n#\n\n# CHECK_LIBRARY_EXISTS (LIBRARY FUNCTION LOCATION VARIABLE)\n\n#\n\n# ::\n\n#\n\n#   LIBRARY  - the name of the library you are looking for\n\n#   FUNCTION - the name of the function\n\n#   LOCATION - location where the library should be found\n\n#   VARIABLE - variable to store the result\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/gflags-2.1.1/cmake/CheckTypeSize.cmake" : {
      "ObjectId" : "a4376705fdf0a990ff05b09b4282600d33664e18",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copied from master branch of CMake (commit SHA 34a49dea) and\n\n# modified to use CheckIncludeFileCXX instead of CheckIncludeFile\n\n# when the LANGUAGE is CXX. Modified the try_compile call to\n\n# not pass any LINK_LIBRARIES as this option is only supported by\n\n# CMake since version 2.8.11\n\n# -andreas\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# CheckTypeSize\n\n# -------------\n\n#\n\n# Check sizeof a type\n\n#\n\n# ::\n\n#\n\n#   CHECK_TYPE_SIZE(TYPE VARIABLE [BUILTIN_TYPES_ONLY]\n\n#                                 [LANGUAGE <language>])\n\n#\n\n# Check if the type exists and determine its size.  On return,\n\n# \"HAVE_${VARIABLE}\" holds the existence of the type, and \"${VARIABLE}\"\n\n# holds one of the following:\n\n#\n\n# ::\n\n#\n\n#    <size> = type has non-zero size <size>\n\n#    \"0\"    = type has arch-dependent size (see below)\n\n#    \"\"     = type does not exist\n\n#\n\n# Furthermore, the variable \"${VARIABLE}_CODE\" holds C preprocessor code\n\n# to define the macro \"${VARIABLE}\" to the size of the type, or leave\n\n# the macro undefined if the type does not exist.\n\n#\n\n# The variable \"${VARIABLE}\" may be \"0\" when CMAKE_OSX_ARCHITECTURES has\n\n# multiple architectures for building OS X universal binaries.  This\n\n# indicates that the type size varies across architectures.  In this\n\n# case \"${VARIABLE}_CODE\" contains C preprocessor tests mapping from\n\n# each architecture macro to the corresponding type size.  The list of\n\n# architecture macros is stored in \"${VARIABLE}_KEYS\", and the value for\n\n# each key is stored in \"${VARIABLE}-${KEY}\".\n\n#\n\n# If the BUILTIN_TYPES_ONLY option is not given, the macro checks for\n\n# headers <sys/types.h>, <stdint.h>, and <stddef.h>, and saves results\n\n# in HAVE_SYS_TYPES_H, HAVE_STDINT_H, and HAVE_STDDEF_H.  The type size\n\n# check automatically includes the available headers, thus supporting\n\n# checks of types defined in the headers.\n\n#\n\n# If LANGUAGE is set, the specified compiler will be used to perform the\n\n# check. Acceptable values are C and CXX\n\n#\n\n# Despite the name of the macro you may use it to check the size of more\n\n# complex expressions, too.  To check e.g.  for the size of a struct\n\n# member you can do something like this:\n\n#\n\n# ::\n\n#\n\n#   check_type_size(\"((struct something*)0)->member\" SIZEOF_MEMBER)\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_EXTRA_INCLUDE_FILES = list of extra headers to include\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Helper function.  DO NOT CALL DIRECTLY.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include header files.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Perform the check.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# The check compiled.  Load information from the binary.\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Parse the information strings.\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Get the type size.\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get the architecture map key.\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Update the architecture-to-size map.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The check failed to compile.\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# parse arguments\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# change to MATCHES for more keys\n",
        "Line" : 200,
        "CharPositionInLine" : 43
      },
      "15" : {
        "Text" : "# Optionally check for standard headers.\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Compute or load the size or size map.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Create preprocessor code.\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "deps/gflags-2.1.1/cmake/FindThreadsCXX.cmake" : {
      "ObjectId" : "91c795c390798de0cb27c128d1cce4bda5d6cdfa",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindThreads\n\n# -----------\n\n#\n\n# This module determines the thread library of the system.\n\n#\n\n# The following variables are set\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_LIBS_INIT     - the thread library\n\n#   CMAKE_USE_SPROC_INIT       - are we using sproc?\n\n#   CMAKE_USE_WIN32_THREADS_INIT - using WIN32 threads?\n\n#   CMAKE_USE_PTHREADS_INIT    - are we using pthreads\n\n#   CMAKE_HP_PTHREADS_INIT     - are we using hp pthreads\n\n#\n\n# For systems with multiple thread libraries, caller can set\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_PREFER_PTHREAD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do we have sproc?\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We have sproc\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Do we have pthreads?\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# We have pthread.h\n\n# Let's check for the library now.\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check if pthread functions are in normal C library\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Do we have -lpthreads\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Ok, how about -lpthread\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# On sun also check for -lthread\n",
        "Line" : 87,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# If we did not found -lpthread, -lpthreads, or -lthread, look for -pthread\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Use libcma if it exists and can be used.  It provides more\n\n# symbols than the plain pthread library.  CMA threads\n\n# have actually been deprecated:\n\n#   http://docs.hp.com/en/B3920-90091/ch12s03.html#d0e11395\n\n#   http://docs.hp.com/en/947/d8.html\n\n# but we need to maintain compatibility here.\n\n# The CMAKE_HP_PTHREADS setting actually indicates whether CMA threads\n\n# are available.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "deps/gflags-2.1.1/cmake/execute_test.cmake" : {
      "ObjectId" : "df008cf465e442459f78817b4394890960d3f991",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# sanitize string stored in variable for use in regular expression.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# script arguments\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set a few environment variables (useful for --tryfromenv)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# execute test command\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# check test result\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "deps/gflags-2.1.1/cmake/utils.cmake" : {
      "ObjectId" : "97c9a66eeb58260134590e0ea98e54396984ece5",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Utility CMake functions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Convert boolean value to 0 or 1\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Extract version numbers from version string.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Configure public header files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Configure source files with .in suffix\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n## Add usage test\n\n#\n\n# Using PASS_REGULAR_EXPRESSION and FAIL_REGULAR_EXPRESSION would\n\n# do as well, but CMake/CTest does not allow us to specify an\n\n# expected exit status. Moreover, the execute_test.cmake script\n\n# sets environment variables needed by the --fromenv/--tryfromenv tests.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/gflags-2.1.1/test/CMakeLists.txt" : {
      "ObjectId" : "ff074740cf434b494b61ff6f5f3286bbef133a47",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## gflags tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# output directories\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set working directory of test commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# common include directories and link libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# STRIP_FLAG_HELP\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the --help output doesn't print the stripped text.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure the stripped text isn't in the binary at all.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# unit tests\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# First, just make sure the  gflags_unittest  works as-is\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --help should show all flags, including flags from gflags_reporting\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Make sure that --help prints even very long helpstrings.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Make sure --help reflects flag changes made before flag-parsing\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# And on the command-line, too\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# --nohelp and --help=false should be as if we didn't say anything\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --helpfull is the same as help\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --helpshort should show only flags from the  gflags_unittest  itself\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --helpshort should show the tldflag we created in the  gflags_unittest  dir\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --helpshort should work if the main source file is suffixed with [_-]main\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --helpon needs an argument\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# --helpon argument indicates what file we'll show args from\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# another way of specifying the argument\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# test another argument\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# helpmatch is like helpon but takes substrings\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# if no flags are found with helpmatch or helpon, suggest --help\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# helppackage shows all the flags in the same dir as this unittest\n\n# --help should show all flags, including flags from google.cc\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# xml!\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# just print the version info and exit\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# --undefok is a fun flag...\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If you say foo is ok to be undefined, we'll accept --nofoo as well\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# It's ok if the foo is in the middle\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# But the spelling has to be just right...\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# See if we can successfully load our flags from the flagfile\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Also try to load flags from the environment\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Here, the --version overrides the fromenv\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Make sure -- by itself stops argv processing\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# And we should die if the flag value doesn't pass the validator\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# And if locking in validators fails\n\n# TODO(andreas): Worked on Windows 7 Release configuration, but causes\n\n#                debugger abort() intervention in case of Debug configuration.\n\n#add_gflags_test(deadlock_if_cant_lock 0 \"PASS\" \"\"  gflags_unittest  --deadlock_if_cant_lock)\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# use gflags_declare.h\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# (negative) compilation tests\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "deps/gflags-2.1.1/test/gflags_strip_flags_test.cmake" : {
      "ObjectId" : "bd419c4f0f4b644f679f0824bf975ff59389a28f",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/gflags-2.1.1/test/nc/CMakeLists.txt" : {
      "ObjectId" : "823fc674cd1f99cfa080a88c1df57d403a772bb5",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## gflags negative compilation tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/infozip/unzip60/flexos/hc.pro" : {
      "ObjectId" : "6b235dbe1a1332461ff022597a2b3c28c83c4d34",
      "LastModified" : "2017-12-27T03:32:59Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#define PORTLIB\n\n#define FLEXOS 1\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "local_io/CMakeLists.txt" : {
      "ObjectId" : "a66f98d0cf9814d0b56fffb5ff0c4ae006ca50e4",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "localui/CMakeLists.txt" : {
      "ObjectId" : "a14cf88e036effc04c587faca93fd3423f4d0425",
      "LastModified" : "2018-07-30T03:14:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_link_libraries(localui )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "net_core/CMakeLists.txt" : {
      "ObjectId" : "caffdabe86e0ce81a8b6a036df9f9ef331f0b858",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "net_core_test/CMakeLists.txt" : {
      "ObjectId" : "558bbf797429c9e1a7f4280f3dc9c5996f8f0842",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "network/CMakeLists.txt" : {
      "ObjectId" : "db7e3ba678ee46c101c172af1acc7becb55a6715",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "network1/CMakeLists.txt" : {
      "ObjectId" : "1523175c63a7717acf74bf7d6e92088074e01c71",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "network2/CMakeLists.txt" : {
      "ObjectId" : "bdd65dec502ca6c1d9eaf6a754efb4d5944295a3",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "network3/CMakeLists.txt" : {
      "ObjectId" : "db788aac354fcc078291f4b24447a9fb738d7800",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "networkb/CMakeLists.txt" : {
      "ObjectId" : "46cd2c4df97eaa9d87408598b820a9788e0aa2d2",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "networkb_test/CMakeLists.txt" : {
      "ObjectId" : "926c3f356b23723cf2a0f8d2d16e621df112357b",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "networkc/CMakeLists.txt" : {
      "ObjectId" : "0bf03f7e0d0370a644b8ffabc7069bbfe77851da",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "networkf/CMakeLists.txt" : {
      "ObjectId" : "512f7b403778b3b08355f6dcc1c319cc7a9396ef",
      "LastModified" : "2019-03-12T00:15:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdk/CMakeLists.txt" : {
      "ObjectId" : "1b4515367103ac2786439639303a86de565f5af7",
      "LastModified" : "2018-08-28T04:55:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO also add  -Wno-long-long -pedantic\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "sdk_test/CMakeLists.txt" : {
      "ObjectId" : "a9cc9d7bfb24ac37937eb440b5c4c50b6d5430bb",
      "LastModified" : "2018-09-02T15:01:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wwivconfig/CMakeLists.txt" : {
      "ObjectId" : "d3fdf04fcc6d6c80199c0584eb291a31db5ec3fd",
      "LastModified" : "2018-07-30T03:14:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wwivd/CMakeLists.txt" : {
      "ObjectId" : "4060ed741a02ef45e1b19c8f9cca50ffe3888f4c",
      "LastModified" : "2018-07-30T03:14:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV Daemon\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wwivd_test/CMakeLists.txt" : {
      "ObjectId" : "f428cbf0063b606728e04d209ccef62e918a4125",
      "LastModified" : "2018-07-30T03:14:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "wwivutil/CMakeLists.txt" : {
      "ObjectId" : "a5e1f0564992c17f256282b3b4a10522b780f413",
      "LastModified" : "2018-09-02T15:01:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake for WWIV 5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 43,
    "QMAKE" : 5
  },
  "ElapsedTime" : 4900
}