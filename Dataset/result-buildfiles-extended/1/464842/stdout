{
  "Repository" : "464842",
  "Revision" : "HEAD",
  "ObjectId" : "d308fe62045e241a4822bb855df97ee087420d9b",
  "CommitTime" : "2015-05-19T16:26:57Z",
  "Files" : {
    "3D/InpaintingRGBD.cmake" : {
      "ObjectId" : "b35bbb1d5cc0bcf76e223b4dcc7e34516b501a5d",
      "LastModified" : "2012-07-19T13:31:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#NearestNeighbor/VisualSelectionBest.hpp\n",
        "Line" : 7,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "Algorithms/CMakeLists.txt" : {
      "ObjectId" : "c00a033e111ec4f8882d87bcadd008d6d3354609",
      "LastModified" : "2012-08-28T19:33:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "5c06ab4250f21ea3ae8b28e196736af143b8739f",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake >= 2.8.6 is required for AutoMOC (http://blogs.kde.org/2011/11/01/cool-new-stuff-cmake-286-automoc)\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# This line lets us run 'ctest' from the root build directory. Without it, if we only build the\n\n# DifferenceFunctions tests, for example, running 'ctest' from the root build directory would\n\n# produce \"no test configuration file found!\", but running 'ctest' from build/DifferenceFunctions would work.\n\n# Additionally, with this here, we don't need it anywhere else in the project.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Suggested build flags are\n\n# -fopenmp to enable parallelism (runs ~2x faster)\n\n# -msse3 to enable intrinsics (runs ~2x faster)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To use CMake's Automoc, headers (.h files, or .hpp if the class is declared directly in the .hpp)\n\n# must be added to the add_executable list.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fixes Parse error at \"BOOST_JOIN\" error (https://bugreports.qt-project.org/browse/QTBUG-22829)\n",
        "Line" : 25,
        "CharPositionInLine" : 70
      },
      "5" : {
        "Text" : "# Where to copy executables when 'make install' is run\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#fix the dynamic linking error (RPATH) that would occur without this\n",
        "Line" : 29,
        "CharPositionInLine" : 44
      },
      "7" : {
        "Text" : "# This is needed for shared_ptr and the trick using enable_if and if_fundamental to allow scalars to be treated as the 0th component of a vector.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Let Qt find it's MOCed headers in the build directory.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# VTK\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ITK\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Boost\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check for Qt4. If it is available, build the PatchBasedInpainting library\n\n# using it so that SelfPatchCompare can use QtConcurrent. We must do this\n\n# AFTER including the submodules, as the Interactive directory\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#FIND_PACKAGE(Qt4)\n\n#INCLUDE(${QT_USE_FILE})\n\n#list(APPEND compileflags \"USE_QT_PARALLEL\")\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Submodules\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# BoostHelpers\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We must do this AFTER including the submodules, as the Interactive directory\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create a library of the core source files. We must do this BEFORE the add_subdirectory calls,\n\n# as some of the subdirectory tests need this library.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Build the Testing library first so that subdirectories can use it if we have requested to build their tests.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add the library to the list of libraries that are required to use this as a submodule.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Allow this project to be detected and used as a submodule\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "############ Executables ###########\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################## Interactive versions ################\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# InteractiveInpaintingGMH\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ClassicalImageInpaintingBasicViewer\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "############################\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Add options to allow enabling/disabling of the set of variables starting with Inpainting_\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Display where this code was used from (if it is used as a submodule, there may be multiple instances of this submodule in the project, only the first of which is used)\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "ClassicalImageInpaintingWithVisualOutput.cmake" : {
      "ObjectId" : "c3436e526b038ad9370c5114c942c5be2b239ad6",
      "LastModified" : "2012-08-28T19:33:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Concepts/CMakeLists.txt" : {
      "ObjectId" : "17c811a88f5f40569eee18d11d209e4e1a7cc6c1",
      "LastModified" : "2012-11-14T15:42:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Concepts/Tests/CMakeLists.txt" : {
      "ObjectId" : "d292ee54b20d64a2320aa972d66b917c21fb16fb",
      "LastModified" : "2012-08-28T19:33:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Demos/CMakeLists.txt" : {
      "ObjectId" : "865e33eb2dbfbbfafad0aec54b2ee3dd6459f00b",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need to build Clustering\n\n#add_executable(DemoClusterColors DemoClusterColors.cpp)\n\n#target_link_libraries(DemoClusterColors PatchBasedInpainting ${VTK_LIBRARIES} ${ITK_LIBRARIES})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need to build Clustering\n\n#add_executable(DemoClusterColorsClusterCenters DemoClusterColorsClusterCenters.cpp)\n\n#target_link_libraries(DemoClusterColorsClusterCenters PatchBasedInpainting ${VTK_LIBRARIES} ${ITK_LIBRARIES} ${QT_LIBRARIES})\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Need to build Clustering\n\n#add_executable(DemoClusterColorsLabelImage DemoClusterColorsLabelImage.cpp)\n\n#target_link_libraries(DemoClusterColorsLabelImage PatchBasedInpainting ${VTK_LIBRARIES} ${ITK_LIBRARIES} ${QT_LIBRARIES})\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Need to update to new API (SelfPatchCompare no longer exists)\n\n#add_executable(DemoColorImageByScore DemoColorImageByScore.cpp)\n\n#target_link_libraries(DemoColorImageByScore PatchBasedInpainting ${VTK_LIBRARIES} ${ITK_LIBRARIES} ${QT_LIBRARIES})\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# PatchDifference function no longer exists\n\n#add_executable(DemoPatchDifference DemoPatchDifference.cpp)\n\n#target_link_libraries(DemoPatchDifference PatchBasedInpainting ${VTK_LIBRARIES} ${ITK_LIBRARIES} Mask)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_executable(DemoFillOrder DemoFillOrder.cpp)\n\n#target_link_libraries(DemoFillOrder PatchBasedInpainting ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${QT_LIBRARIES} Mask)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###################################\n\n# add_executable(DemoBadPatchComparison DemoBadPatchComparison.cpp)\n\n# target_link_libraries(DemoBadPatchComparison PatchBasedInpainting ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${QT_LIBRARIES} libHelpers)\n\n# \n\n# QT4_WRAP_UI(DemoBadPatchRealImageUISrcs ${ROOT_SOURCE_DIR}/Interactive/TopPatchesDialog.ui)\n\n# QT4_WRAP_CPP(DemoBadPatchRealImageMOCSrcs ${ROOT_SOURCE_DIR}/Interactive/TopPatchesDialog.h\n\n#  ${ROOT_SOURCE_DIR}/Interactive/Delegates/PixmapDelegate.h)\n\n# add_executable(DemoBadPatchRealImage DemoBadPatchRealImage.cpp\n\n# ${ROOT_SOURCE_DIR}/Interactive/Delegates/PixmapDelegate.cpp\n\n# ${DemoBadPatchRealImageUISrcs} ${DemoBadPatchRealImageMOCSrcs})\n\n# target_link_libraries(DemoBadPatchRealImage PatchBasedInpainting ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${QT_LIBRARIES} libHelpers)\n\n###################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# New api - MaskedLaplacian() is no longer a function\n\n#add_executable(DemoMaskedLaplacian DemoMaskedLaplacian.cpp)\n\n#target_link_libraries(DemoMaskedLaplacian PatchBasedInpainting ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${QT_LIBRARIES} libHelpers)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add_executable(DemoMaskedLaplacianSynthetic DemoMaskedLaplacianSynthetic.cpp)\n\n# target_link_libraries(DemoMaskedLaplacianSynthetic PatchBasedInpainting ${ITK_LIBRARIES} ${VTK_LIBRARIES} ${QT_LIBRARIES} libHelpers)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "DifferenceFunctions/CMakeLists.txt" : {
      "ObjectId" : "2a64eb5ed8baf7a81c1bae26c8fa895de13e6442",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DifferenceFunctions/Other/CMakeLists.txt" : {
      "ObjectId" : "1bc3f9d9b0420d4f4dcc23ecc298d429cf1280e0",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DifferenceFunctions/Other/Tests/CMakeLists.txt" : {
      "ObjectId" : "d2d8778862dcd395451ceb4f041a6bbaa975ac5c",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DifferenceFunctions/Patch/CMakeLists.txt" : {
      "ObjectId" : "9109ddc63595976e935930f8855b872a7bda4da3",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DifferenceFunctions/Patch/Tests/CMakeLists.txt" : {
      "ObjectId" : "65e6b5b7ba245e5e61e30595e2a2a5ac8b71be8c",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow Qt to find it's MOCed files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "DifferenceFunctions/Pixel/CMakeLists.txt" : {
      "ObjectId" : "1524939dd5789bae088210070e15f1dc59e7c041",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DifferenceFunctions/Pixel/Tests/CMakeLists.txt" : {
      "ObjectId" : "06361e1fd1ba0fa698511156f729de35264e44e0",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Drivers/CMakeLists.txt" : {
      "ObjectId" : "6cc2a8eb0a2db15d599c5fe789d892cd7b23faf7",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Gradient Magnitude Histogram test\n",
        "Line" : 18,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 1
    },
    "Examples/CMakeLists.txt" : {
      "ObjectId" : "f16401fb7ff8b25f0e30e2fcd5f942810a67d817",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ImageProcessing/CMakeLists.txt" : {
      "ObjectId" : "401da0677e019dcc732e738708acce8cdb756821",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ImageProcessing/Tests/CMakeLists.txt" : {
      "ObjectId" : "f5d3a44a14ce517860923dd78934857b79884ad5",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# so we can access the headers normally (e.g. #include \"Patch.h\") from the tests\n",
        "Line" : 1,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : "#####################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This test should be moved to the Mask submodule\n\n# add_executable(TestMask TestMask.cpp ../Mask.cpp ${ROOT_SOURCE_DIR}/Helpers/ITKHelpers.cpp ${ROOT_SOURCE_DIR}/Helpers/Helpers.cpp)\n\n# target_link_libraries(TestMask ${VTK_LIBRARIES} ${ITK_LIBRARIES})\n\n# add_test(TestMask TestMask)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add_executable(TestDerivatives TestDerivatives.cpp ../Derivatives.cpp ../Mask.cpp)\n\n# target_link_libraries(TestDerivatives ${VTK_LIBRARIES} ${ITK_LIBRARIES} libTesting libHelpers)\n\n# add_test(TestDerivatives TestDerivatives)\n\n# \n\n# add_executable(TestIsophotes TestIsophotes.cpp ../Derivatives.cpp ../Isophotes.cpp ../Mask.cpp)\n\n# target_link_libraries(TestIsophotes ${VTK_LIBRARIES} ${ITK_LIBRARIES} libTesting libHelpers)\n\n# add_test(TestIsophotes TestIsophotes)\n\n# \n\n# add_executable(TestMaskOperations TestMaskOperations.cpp ../MaskOperations.cpp ../Mask.cpp)\n\n# target_link_libraries(TestMaskOperations ${VTK_LIBRARIES} ${ITK_LIBRARIES} libTesting libHelpers)\n\n# add_test(TestMaskOperations TestMaskOperations)\n\n# \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n\n# add_executable(TestPixelFilterFunctors TestPixelFilterFunctors.cpp)\n\n# target_link_libraries(TestPixelFilterFunctors ${VTK_LIBRARIES} ${ITK_LIBRARIES})\n\n# add_test(TestPixelFilterFunctors TestPixelFilterFunctors)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add_executable(TestMaskedLaplacian TestMaskedLaplacian.cpp ../Mask.cpp ../MaskOperations.cpp)\n\n# target_link_libraries(TestMaskedLaplacian ${VTK_LIBRARIES} ${ITK_LIBRARIES} libHelpers)\n\n# add_test(TestMaskedLaplacian TestMaskedLaplacian)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Initializers/CMakeLists.txt" : {
      "ObjectId" : "550b286fe69bbcd2286813fc898fa7c436198cf3",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Inpainters/CMakeLists.txt" : {
      "ObjectId" : "e98096d59d98dd837a3ff8d6b19885b6613bc234",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "InpaintingAutomatic.cmake" : {
      "ObjectId" : "bfc12f577279802b718b21896ea7dc57c3e720fa",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#NearestNeighbor/VisualSelectionBest.hpp\n",
        "Line" : 7,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "InpaintingCIELab.cmake" : {
      "ObjectId" : "0578e02e2682e98c8af77868b187c5a52ec8d8a7",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "InpaintingVectorized.cmake" : {
      "ObjectId" : "125e8b5b12a0cfad21c3a53d1ac33845e5407f2d",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#NearestNeighbor/VisualSelectionBest.hpp\n",
        "Line" : 9,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "InpaintingWithLocalSearch.cmake" : {
      "ObjectId" : "421c4d04c02283c950f4f43df22696ea0b5c4164",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "InpaintingWithManualSelection.cmake" : {
      "ObjectId" : "1b8634a8cfcd982f39d41960b79c5be4e5718f7e",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "InpaintingWithTopPatchDisplay.cmake" : {
      "ObjectId" : "520ad38471d53a80e02a2c7c3e88201e9cbe09d2",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "InpaintingWithVerification.cmake" : {
      "ObjectId" : "d3427c34a0384feada93942f29b1f07d636c8a8f",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interactive/CMakeLists.txt" : {
      "ObjectId" : "670625fc8af6bd57825ea80d44ff730d5a3c27f7",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we did not build the PatchBasedInpainting library with Qt, then find Qt now,\n\n# it is definitely required for the interactive executable.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Let Qt find it's MOCed headers in the build directory.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_subdirectory(Widgets)\n\n#add_subdirectory(ModelView)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#QT4_WRAP_UI(UISrcs PatchBasedInpainting.ui FileSelector.ui)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable(PatchBasedInpaintingInteractive\n\n#ColorPalette.cpp\n\n#DisplayState.cpp\n\n#FileSelector.cpp\n\n#ImageInput.cpp\n\n#InpaintingComputationObject.cpp\n\n#InpaintingIterationRecord.cpp\n\n#InpaintingIterationRecordViewer.cpp\n\n#PatchBasedInpaintingGUI.cpp\n\n#PatchBasedInpaintingGUISlots.cpp\n\n#PatchBasedInpaintingInteractive.cpp #driver (contains main())\n\n#InpaintingDisplaySettings.cpp\n\n#VectorLayer.cpp\n\n#${UISrcs})\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#target_link_libraries(PatchBasedInpaintingInteractive\n\n#${PatchBasedInpainting_libraries}\n\n#InpaintingGUI\n\n#libWidgets libModelView\n\n#)\n\n#INSTALL( TARGETS PatchBasedInpaintingInteractive RUNTIME DESTINATION ${INSTALL_DIR} )\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Inpainting viewer\n\n# if(BuildViewer)\n\n#   message(\"Interactive/Building the viewer.\")\n\n#   QT4_WRAP_UI(UISrcs FullInspectionWidget.ui)\n\n# \n\n#   add_executable(PatchBasedInpaintingViewer\n\n#   ColorPalette.cpp\n\n#   FullInspectionWidget.cpp\n\n#   PatchBasedInpaintingViewer.cpp #driver (contains main())\n\n#   InpaintingDisplaySettings.cpp\n\n#   ${UISrcs})\n\n# \n\n#   target_link_libraries(PatchBasedInpaintingViewer ${PatchBasedInpainting_libraries} InpaintingGUI)\n\n#   INSTALL( TARGETS PatchBasedInpaintingViewer RUNTIME DESTINATION ${INSTALL_DIR} )\n\n# endif(BuildViewer)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Interactive/Delegates/CMakeLists.txt" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interactive/ModelView/CMakeLists.txt" : {
      "ObjectId" : "1bd5bf06093840cc67f4d26b061e804271d4e019",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interactive/Tests/CMakeLists.txt" : {
      "ObjectId" : "b08b81f6948a8980628a034c8882e7bd76f7fc7e",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Interactive directory\n",
        "Line" : 3,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : "# The main PatchBasedInpainting}directory\n",
        "Line" : 4,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "# Allow Qt to find it's MOCed files\n\n#include_directories(${CMAKE_CURRENT_BINARY_DIR})\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add_executable(TestInpaintingIterationRecordViewer TestInpaintingIterationRecordViewer.cpp)\n\n# target_link_libraries(TestInpaintingIterationRecordViewer)\n\n# add_test(TestInpaintingIterationRecordViewer TestInpaintingIterationRecordViewer)\n\n# \n\n# add_executable(TestNamedITKImage TestNamedITKImage.cpp)\n\n# target_link_libraries(TestNamedITKImage ${ITK_LIBRARIES})\n\n# add_test(TestNamedITKImage TestNamedITKImage)\n\n# \n\n# add_executable(TestNamedVTKImage TestNamedVTKImage.cpp ../NamedVTKImage.cpp)\n\n# target_link_libraries(TestNamedVTKImage ${VTK_LIBRARIES})\n\n# add_test(TestNamedVTKImage TestNamedVTKImage)\n\n# \n\n# add_executable(TestColorPalette TestColorPalette.cpp)\n\n# target_link_libraries(TestColorPalette)\n\n# add_test(TestColorPalette TestColorPalette)\n\n# \n\n# add_executable(TestNamedITKImageCollection TestNamedITKImageCollection.cpp\n\n#                ../NamedITKImageCollection.cpp)\n\n# target_link_libraries(TestNamedITKImageCollection ${ITK_LIBRARIES} libHelpers)\n\n# add_test(TestNamedITKImageCollection TestNamedITKImageCollection)\n\n# \n\n# add_executable(TestDisplayState TestDisplayState.cpp ../DisplayState.cpp)\n\n# target_link_libraries(TestDisplayState)\n\n# add_test(TestDisplayState TestDisplayState)\n\n# \n\n# add_executable(TestDisplayStyle TestDisplayStyle.cpp)\n\n# target_link_libraries(TestDisplayStyle)\n\n# add_test(TestDisplayStyle TestDisplayStyle)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add_executable(TestImageInput TestImageInput.cpp)\n\n# target_link_libraries(TestImageInput)\n\n# add_test(TestImageInput TestImageInput)\n\n# \n\n# add_executable(TestInpaintingDisplaySettings TestInpaintingDisplaySettings.cpp)\n\n# target_link_libraries(TestInpaintingDisplaySettings)\n\n# add_test(TestInpaintingDisplaySettings TestInpaintingDisplaySettings)\n\n# \n\n# add_executable(TestInpaintingIterationRecord TestInpaintingIterationRecord.cpp)\n\n# target_link_libraries(TestInpaintingIterationRecord)\n\n# add_test(TestInpaintingIterationRecord TestInpaintingIterationRecord)\n\n# \n\n# add_executable(TestLayer TestLayer.cpp)\n\n# target_link_libraries(TestLayer)\n\n# add_test(TestLayer TestLayer)\n\n# \n\n# add_executable(TestVectorLayer TestVectorLayer.cpp)\n\n# target_link_libraries(TestVectorLayer)\n\n# add_test(TestVectorLayer TestVectorLayer)\n\n# \n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# QT4_WRAP_UI(TopPatchesWidgetUISrcs ../TopPatchesWidget.ui)\n\n# add_executable(TestTopPatchesWidget TestTopPatchesWidget.cpp\n\n#                 ../TopPatchesWidget.h ../Delegates/PixmapDelegate.h\n\n#                 ../Delegates/PixmapDelegate.cpp ../HelpersQt.cpp ${TopPatchesWidgetUISrcs})\n\n# target_link_libraries(TestTopPatchesWidget ${PatchBasedInpainting_libraries} InpaintingGUI)\n\n# add_test(TestTopPatchesWidget TestTopPatchesWidget)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Ideally we would like to not duplicate TopPatchesDialog and TopPatchesWidget, but rather derive one from the other.\n\n# QT4_WRAP_UI(TopPatchesWidgetUISrcs ../TopPatchesWidget.ui)\n\n# add_executable(TestTopPatchesDialog TestTopPatchesDialog.cpp ../Delegates/PixmapDelegate.cpp\n\n#                ${TopPatchesWidgetUISrcs} ../TopPatchesWidget.h ../TopPatchesDialog.h ../Delegates/PixmapDelegate.h)\n\n# target_link_libraries(TestTopPatchesDialog ${PatchBasedInpainting_libraries} InpaintingGUI)\n\n# add_test(TestTopPatchesDialog TestTopPatchesDialog)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# QT4_WRAP_UI(TopPatchesDialogUISrcs ../TopPatchesDialog.ui)\n\n# add_executable(TestTopPatchesDialog TestTopPatchesDialog.cpp ../Delegates/PixmapDelegate.cpp\n\n# ../TopPatchesDialog.h ../Delegates/PixmapDelegate.h\n\n#                ${TopPatchesDialogUISrcs} ${TopPatchesDialogMOCSrcs})\n\n# target_link_libraries(TestTopPatchesDialog ${PatchBasedInpainting_libraries} InpaintingGUI)\n\n# add_test(TestTopPatchesDialog TestTopPatchesDialog)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# QT4_WRAP_UI(TestPriorityViewerWidgetUISrcs ../PriorityViewerWidget.ui)\n\n# add_executable(TestPriorityViewerWidget TestPriorityViewerWidget.cpp # ../PriorityViewerWidget.cpp\n\n#                ${TestPriorityViewerWidgetUISrcs} ../PriorityViewerWidget.h)\n\n# target_link_libraries(TestPriorityViewerWidget ${PatchBasedInpainting_libraries} InpaintingGUI)\n\n# add_test(TestPriorityViewerWidget TestPriorityViewerWidget)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Interactive/Widgets/CMakeLists.txt" : {
      "ObjectId" : "474cb49bce47cd1278fc574d6da21e2c8d6d5e69",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "NearestNeighbor/CMakeLists.txt" : {
      "ObjectId" : "0cabb6e30afe2c1d3d4cd3ee7aa788b47780f61c",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(BuildTests)\n\n#   add_subdirectory(Tests)\n\n# endif(BuildTests)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "NearestNeighbor/LinearSearchBest/CMakeLists.txt" : {
      "ObjectId" : "cf6037bb210c95d38ba7723cbad9477db01b235d",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(BuildTests)\n\n#   add_subdirectory(Tests)\n\n# endif(BuildTests)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "NearestNeighbor/LinearSearchBest/Tests/CMakeLists.txt" : {
      "ObjectId" : "6301f113277de636032275b64b2f37b5799615a5",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "NearestNeighbor/Tests/CMakeLists.txt" : {
      "ObjectId" : "d1c63559560bab11efbca36e7a25f8050559b432",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "PixelDescriptors/CMakeLists.txt" : {
      "ObjectId" : "e43926d13459124fbacae5e62d330c952efa357e",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "PrecomputedInpainting.cmake" : {
      "ObjectId" : "cff8199b99008d7ecfe654a4f5530c72d5f2b55d",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Priority/CMakeLists.txt" : {
      "ObjectId" : "a62299b31addda0c80405a5c7fa6deefcd8827ff",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Priority/Tests/CMakeLists.txt" : {
      "ObjectId" : "a97409997ab322d1eef8540d1b163dd2d61f3f83",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# so we can access the headers normally (e.g. #include \"Patch.h\") from the tests\n",
        "Line" : 1,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : "# add_executable(TestPriorityFactory TestPriorityFactory.cpp ../PriorityFactory.cpp ../Priority.cpp ../PriorityCriminisi.cpp ../PriorityDepth.cpp ../PriorityManual.cpp\n\n# ../PriorityOnionPeel.cpp ../DebugOutputs.cpp ../Mask.cpp ../PriorityRandom.cpp ../Isophotes.cpp ../Derivatives.cpp ../MaskOperations.cpp)\n\n# target_link_libraries(TestPriorityFactory ${ITK_LIBRARIES} ${VTK_LIBRARIES} libHelpers libTesting)\n\n# add_test(TestPriorityFactory TestPriorityFactory)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Scripts/CMakeLists.txt" : {
      "ObjectId" : "4e12991231a10b3e57cd2f1c2f03c01c1eab6596",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "SearchRegions/CMakeLists.txt" : {
      "ObjectId" : "de54bb18fcd4ac85a389dc77baaa8a2cca5b6f81",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "SpeedTests/CMakeLists.txt" : {
      "ObjectId" : "99f169c421a66483950d89d8aa00679f5979d2f2",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_executable(NormVsSum NormVsSum.cpp)\n\n# target_link_libraries(NormVsSum ${ITK_LIBRARIES} libHelpers)\n\n# \n\n# add_executable(IteratorVsIndex IteratorVsIndex.cpp)\n\n# target_link_libraries(IteratorVsIndex ${ITK_LIBRARIES} libHelpers)\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/CMakeLists.txt" : {
      "ObjectId" : "0cc433374367317e44141e6a98ff61b441acf7ed",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Tests/CMakeLists.txt" : {
      "ObjectId" : "c236c616cb793fef7c35564742e8ba14041bdcfb",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# so we can access the headers normally (e.g. #include \"Patch.h\") from the tests\n",
        "Line" : 3,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : "#####################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build an inpainting algorithm that uses the GUI objects but goes very fast by simply choosing the first patch.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/CMakeLists.txt" : {
      "ObjectId" : "9bd5ea578288b589af5c14387eaeebc55e27e432",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Even with this line, we have to #include <Utilities/Histogram/Histogram.h>\n\n# I don't understand why #include <Histogram/Histogram.h> doesn't work...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/Tests/CMakeLists.txt" : {
      "ObjectId" : "ea23b15ae4d89e7bf18e8e04103b7de3c074549b",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# so we can access the headers normally (e.g. #include \"Patch.h\") from the tests\n",
        "Line" : 1,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "Visitors/AcceptanceVisitors/CMakeLists.txt" : {
      "ObjectId" : "b7e63527db4cdaa3034955d206932a74f0ecb821",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Visitors/CMakeLists.txt" : {
      "ObjectId" : "4a66ef6991500635f6fdace475d90e083bc5faff",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Visitors/DescriptorVisitors/CMakeLists.txt" : {
      "ObjectId" : "83cfde19dbfdc7ab36aef3902f554eff9eec8e0c",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Visitors/InformationVisitors/CMakeLists.txt" : {
      "ObjectId" : "9000e5780324840ad6f6a45312fe20a3d73f2b14",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#DisplayVisitor.hpp\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Visitors/InpaintingVisitors/CMakeLists.txt" : {
      "ObjectId" : "3ef3140da841c2246280bd1d38e1ed4311cce7c2",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Visitors/Tests/CMakeLists.txt" : {
      "ObjectId" : "488880351ce3a6d5eee819afe03ec3a95f3617ef",
      "LastModified" : "2015-04-24T02:23:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 53
  },
  "ElapsedTime" : 1147
}