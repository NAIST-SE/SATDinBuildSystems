{
  "Repository" : "10725358",
  "Revision" : "HEAD",
  "ObjectId" : "438559f70926a5ae59a761b9f7736514ab1cec4c",
  "CommitTime" : "2019-03-12T08:13:49Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2816c43a665d0921bb300ec9d8a45eb060657c56",
      "LastModified" : "2019-01-03T21:07:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Defines the CMAKE_INSTALL_LIBDIR, CMAKE_INSTALL_BINDIR and many other useful macros\n\n# See https://cmake.org/cmake/help/latest/module/GNUInstallDirs.html\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finding dependencies\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Custom workaround for chocolatey distributed Gazebo and OGRE\n\n# See https://github.com/ms-iot/ROSOnWindows/issues/48 for the original issue\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# It is tipically better to use target_include_directories in place of\n\n# global include_directories, but in this case it is more compact to use include_directories\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add Gazebo CXX flags, to support Gazebo 6 reckless dependency on C++11\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# On Windows, export all symbols by default as *nix\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add local cmake scripts\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#used for dir suffixes\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# hack: by default this would be 'lib/x86_64-linux-gnu' on linux\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Define (depending on CMAKE_BUILD_TYPE) the DEBUG macro\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Enable all possible warning if CMAKE_BUILD_TYPE is debug\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#this is required for all plugins\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#build common libraries first\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#build RPC libraries\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#now build plugins\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Install the files necessary to call find_package(GazeboYarpPlugins) in CMake projects\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# add a dox target to generate doxygen documentation\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "cmake/AddDebugMacro.cmake" : {
      "ObjectId" : "8a15783f5320cab093cf98c8a7a64054a6252461",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddDebugMacro\n\n# ------------------\n\n#\n\n# Add the DEBUG macro for your project\n\n#\n\n# ::\n\n#\n\n# include(AddDebugMacro)\n\n#\n\n#\n\n#=============================================================================\n\n# Copyright 2008-2013 Kitware, Inc.\n\n# Copyright 2014 RBCS, Istituto Italiano di Tecnologia\n\n# @author Francesco Romano <francesco.romano@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define debug flag\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#define debug flag\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/AddDebugWarnings.cmake" : {
      "ObjectId" : "8305eb7e35daa3ee4e6303717b1ed136c65e359c",
      "LastModified" : "2014-11-13T11:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddDebugWarnings\n\n# ------------------\n\n#\n\n# Enable all the possible warnings if the CMAKE_BUILD_TYPE is DEBUG\n\n#\n\n# ::\n\n#\n\n# include(AddDebugWarnings)\n\n#\n\n#\n\n#=============================================================================\n\n# Copyright 2008-2013 Kitware, Inc.\n\n# Copyright 2014 RBCS, Istituto Italiano di Tecnologia\n\n# @author Francesco Romano <francesco.romano@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "##Other systems\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#disable padding alignment warnings. Cast align is more subtle. On X86 it should not create any problem but for different architecture we should handle this warning better.\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"Clang compiler - Debug configuration flags: -Weverything -pedantic -Wnon-virtual-dtor -Woverloaded-virtual\")\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#MESSAGE(STATUS \"Gcc compiler - Debug configuration flags: -Wall -Wextra -pedantic -Weffc++ -Woverloaded-virtual\")\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake/AddGazeboYarpPluginTarget.cmake" : {
      "ObjectId" : "20043bbee63881a9d82a8ed89c061d6694bd3c68",
      "LastModified" : "2019-01-03T21:07:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddGazeboYarpPluginTarget\n\n# ----------------------\n\n#\n\n#\n\n#\n\n#=======================================================================\n\n# Copyright 2014 RBCS, Istituto Italiano di Tecnologia\n\n# @author Francesco Romano <francesco.romano@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=======================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Visual Studio, it is necessary to define this Windows-specific macros\n\n# to get Gazebo headers to compile without problems, for more details\n\n# see https://stackoverflow.com/questions/5971332/redefinition-errors-in-winsock2-h\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Add install target\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/AddInstallRPATHSupport.cmake" : {
      "ObjectId" : "17ed3567317e008d7235813dbec2232353212aca",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddInstallRPATHSupport\n\n# ----------------------\n\n#\n\n# Add support to RPATH during installation to your project::\n\n#\n\n#   add_install_rpath_support([BIN_DIRS dir [dir]]\n\n#                             [LIB_DIRS dir [dir]]\n\n#                             [DEPENDS condition]\n\n#                             [USE_LINK_PATH])\n\n#\n\n# Normally (depending on the platform) when you install a shared\n\n# library you can either specify its absolute path as the install name,\n\n# or leave just the library name itself. In the former case the library\n\n# will be correctly linked during run time by all executables and other\n\n# shared libraries, but it must not change its install location. This\n\n# is often the case for libraries installed in the system default\n\n# library directory (e.g. ``/usr/lib``).\n\n# In the latter case, instead, the library can be moved anywhere in the\n\n# file system but at run time the dynamic linker must be able to find\n\n# it. This is often accomplished by setting environmental variables\n\n# (i.e. ``LD_LIBRARY_PATH`` on Linux).\n\n# This procedure is usually not desirable for two main reasons:\n\n#\n\n# - by setting the variable you are changing the default behaviour\n\n#   of the dynamic linker thus potentially breaking executables (not as\n\n#   destructive as ``LD_PRELOAD``)\n\n# - the variable will be used only by applications spawned by the shell\n\n#   and not by other processes.\n\n#\n\n# RPATH is aimed to solve the issues introduced by the second\n\n# installation method. Using run-path dependent libraries you can\n\n# create a directory structure containing executables and dependent\n\n# libraries that users can relocate without breaking it.\n\n# A run-path dependent library is a dependent library whose complete\n\n# install name is not known when the library is created.\n\n# Instead, the library specifies that the dynamic loader must resolve\n\n# the library’s install name when it loads the executable that depends\n\n# on the library. The executable or the other shared library will\n\n# hardcode in the binary itself the additional search directories\n\n# to be passed to the dynamic linker. This works great in conjunction\n\n# with relative paths.\n\n# This macro will enable support to RPATH to your project.\n\n# It will enable the following things:\n\n#\n\n#  - If the project builds shared libraries it will generate a run-path\n\n#    enabled shared library, i.e. its install name will be resolved\n\n#    only at run time.\n\n#  - In all cases (building executables and/or shared libraries)\n\n#    dependent shared libraries with RPATH support will be properly\n\n#\n\n# The macro has the following parameters:\n\n#\n\n# Options:\n\n#  - ``USE_LINK_PATH``: if passed the macro will automatically adds to\n\n#    the RPATH the path to all the dependent libraries\n\n#\n\n# Arguments:\n\n#  - ``BIN_DIRS`` list of directories when the targets (bins or shared\n\n#    libraries) will be installed\n\n#  - ``LIB_DIRS`` list of directories to be added to the RPATH. These\n\n#    directories will be added \"relative\" w.r.t. the ``BIN_DIRS``\n\n#  - ``DEPENDS`` boolean variable. If ``TRUE`` RPATH will be enabled.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=======================================================================\n\n# Copyright 2014 RBCS, Istituto Italiano di Tecnologia\n\n# @author Francesco Romano <francesco.romano@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=======================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Check CMake version in OS X. Required >= 2.8.12\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Enable RPATH on OSX. This also suppress warnings on CMake >= 3.0\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Find system implicit lib directories\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 106,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# This is relative RPATH for libraries built in the same project\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/AddUninstallTarget.cmake" : {
      "ObjectId" : "36a1c5a3eb7c026078e7311f521ffd0bbf27c171",
      "LastModified" : "2014-11-13T11:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# AddUninstallTarget\n\n# ------------------\n\n#\n\n# Add the \"uninstall\" target for your project\n\n#\n\n# ::\n\n#\n\n#   include(AddUninstallTarget)\n\n#\n\n#\n\n# will create a file cmake_uninstall.cmake in the build directory and add a\n\n# custom target uninstall that will remove the files installed by your package\n\n# (using install_manifest.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2013 Kitware, Inc.\n\n# Copyright 2013  iCub Facility, Istituto Italiano di Tecnologia\n\n#     @author Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "1c795ac7bd8b47fb6b550405ffaa53d666cfbe77",
      "LastModified" : "2017-06-15T11:05:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# WARNING: OUTDATED COPY OF CMakePackageConfigHelpers for compatibility with CMake 3.0 \n\n# See https://github.com/robotology/gazebo-yarp-plugins/issues/303\n\n# REMOVE ONCE THE CMAKE MINIMUM REQUIRED VERSION IS CMAKE 3.1\n\n#.rst:\n\n# CMakePackageConfigHelpers\n\n# -------------------------\n\n#\n\n# Helpers functions for creating config files that can be included by other\n\n# projects to find and use a package.\n\n#\n\n# Adds the :command:`configure_package_config_file()` and\n\n# :command:`write_basic_package_version_file()` commands.\n\n#\n\n# Generating a Package Configuration File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: configure_package_config_file\n\n#\n\n#  Create a config file for a project::\n\n#\n\n#     configure_package_config_file(<input> <output> INSTALL_DESTINATION <path>\n\n#                                                    [PATH_VARS <var1> <var2> ... <varN>]\n\n#                                                    [NO_SET_AND_CHECK_MACRO]\n\n#                                                    [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#                                                    [INSTALL_PREFIX <path>])\n\n#\n\n#\n\n# ``configure_package_config_file()`` should be used instead of the plain\n\n# :command:`configure_file()` command when creating the ``<Name>Config.cmake``\n\n# or ``<Name>-config.cmake`` file for installing a project or library.  It helps\n\n# making the resulting package relocatable by avoiding hardcoded paths in the\n\n# installed ``Config.cmake`` file.\n\n#\n\n# In a ``FooConfig.cmake`` file there may be code like this to make the install\n\n# destinations know to the using project:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n\n#    set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n\n#    set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n\n#    ...logic to determine installedPrefix from the own location...\n\n#    set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\n#\n\n# All 4 options shown above are not sufficient, since the first 3 hardcode the\n\n# absolute directory locations, and the 4th case works only if the logic to\n\n# determine the ``installedPrefix`` is correct, and if ``CONFIG_INSTALL_DIR``\n\n# contains a relative path, which in general cannot be guaranteed.  This has the\n\n# effect that the resulting ``FooConfig.cmake`` file would work poorly under\n\n# Windows and OSX, where users are used to choose the install location of a\n\n# binary package at install time, independent from how\n\n# :variable:`CMAKE_INSTALL_PREFIX` was set at build/cmake time.\n\n#\n\n# Using ``configure_package_config_file`` helps.  If used correctly, it makes\n\n# the resulting ``FooConfig.cmake`` file relocatable.  Usage:\n\n#\n\n#    1. write a ``FooConfig.cmake.in`` file as you are used to\n\n#    2. insert a line containing only the string ``@PACKAGE_INIT@``\n\n#    3. instead of ``set(FOO_DIR \"@SOME_INSTALL_DIR@\")``, use\n\n#       ``set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")`` (this must be after the\n\n#       ``@PACKAGE_INIT@`` line)\n\n#    4. instead of using the normal :command:`configure_file()`, use\n\n#       ``configure_package_config_file()``\n\n#\n\n#\n\n#\n\n# The ``<input>`` and ``<output>`` arguments are the input and output file, the\n\n# same way as in :command:`configure_file()`.\n\n#\n\n# The ``<path>`` given to ``INSTALL_DESTINATION`` must be the destination where\n\n# the ``FooConfig.cmake`` file will be installed to.  This path can either be\n\n# absolute, or relative to the ``INSTALL_PREFIX`` path.\n\n#\n\n# The variables ``<var1>`` to ``<varN>`` given as ``PATH_VARS`` are the\n\n# variables which contain install destinations.  For each of them the macro will\n\n# create a helper variable ``PACKAGE_<var...>``.  These helper variables must be\n\n# used in the ``FooConfig.cmake.in`` file for setting the installed location.\n\n# They are calculated by ``configure_package_config_file`` so that they are\n\n# always relative to the installed location of the package.  This works both for\n\n# relative and also for absolute locations.  For absolute locations it works\n\n# only if the absolute location is a subdirectory of ``INSTALL_PREFIX``.\n\n#\n\n# If the ``INSTALL_PREFIX`` argument is passed, this is used as base path to\n\n# calculate all the relative paths.  The ``<path>`` argument must be an absolute\n\n# path.  If this argument is not passed, the :variable:`CMAKE_INSTALL_PREFIX`\n\n# variable will be used instead.  The default value is good when generating a\n\n# FooConfig.cmake file to use your package from the install tree.  When\n\n# generating a FooConfig.cmake file to use your package from the build tree this\n\n# option should be used.\n\n#\n\n# By default ``configure_package_config_file`` also generates two helper macros,\n\n# ``set_and_check()`` and ``check_required_components()`` into the\n\n# ``FooConfig.cmake`` file.\n\n#\n\n# ``set_and_check()`` should be used instead of the normal ``set()`` command for\n\n# setting directories and file locations.  Additionally to setting the variable\n\n# it also checks that the referenced file or directory actually exists and fails\n\n# with a ``FATAL_ERROR`` otherwise.  This makes sure that the created\n\n# ``FooConfig.cmake`` file does not contain wrong references.\n\n# When using the ``NO_SET_AND_CHECK_MACRO``, this macro is not generated\n\n# into the ``FooConfig.cmake`` file.\n\n#\n\n# ``check_required_components(<package_name>)`` should be called at the end of\n\n# the ``FooConfig.cmake`` file if the package supports components.  This macro\n\n# checks whether all requested, non-optional components have been found, and if\n\n# this is not the case, sets the ``Foo_FOUND`` variable to ``FALSE``, so that\n\n# the package is considered to be not found.  It does that by testing the\n\n# ``Foo_<Component>_FOUND`` variables for all requested required components.\n\n# When using the ``NO_CHECK_REQUIRED_COMPONENTS_MACRO`` option, this macro is\n\n# not generated into the ``FooConfig.cmake`` file.\n\n#\n\n# For an example see below the documentation for\n\n# :command:`write_basic_package_version_file()`.\n\n#\n\n# Generating a Package Version File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: write_basic_package_version_file\n\n#\n\n#  Create a version file for a project::\n\n#\n\n#     write_basic_package_version_file(<filename>\n\n#                                      [VERSION <major.minor.patch>]\n\n#                                      COMPATIBILITY <AnyNewerVersion|SameMajorVersion|ExactVersion> )\n\n#\n\n#\n\n# Writes a file for use as ``<package>ConfigVersion.cmake`` file to\n\n# ``<filename>``.  See the documentation of :command:`find_package()` for\n\n# details on this.\n\n#\n\n# ``<filename>`` is the output filename, it should be in the build tree.\n\n# ``<major.minor.patch>`` is the version number of the project to be installed.\n\n#\n\n# If no ``VERSION`` is given, the :variable:`PROJECT_VERSION` variable is used.\n\n# If this hasn't been set, it errors out.\n\n#\n\n# The ``COMPATIBILITY`` mode ``AnyNewerVersion`` means that the installed\n\n# package version will be considered compatible if it is newer or exactly the\n\n# same as the requested version.  This mode should be used for packages which\n\n# are fully backward compatible, also across major versions.\n\n# If ``SameMajorVersion`` is used instead, then the behaviour differs from\n\n# ``AnyNewerVersion`` in that the major version number must be the same as\n\n# requested, e.g.  version 2.0 will not be considered compatible if 1.0 is\n\n# requested.  This mode should be used for packages which guarantee backward\n\n# compatibility within the same major version.\n\n# If ``ExactVersion`` is used, then the package is only considered compatible if\n\n# the requested version matches exactly its own version number (not considering\n\n# the tweak version).  For example, version 1.2.3 of a package is only\n\n# considered compatible to requested version 1.2.3.  This mode is for packages\n\n# without compatibility guarantees.\n\n# If your project has more elaborated version matching rules, you will need to\n\n# write your own custom ``ConfigVersion.cmake`` file instead of using this\n\n# macro.\n\n#\n\n# Internally, this macro executes :command:`configure_file()` to create the\n\n# resulting version file.  Depending on the ``COMPATIBLITY``, either the file\n\n# ``BasicConfigVersion-SameMajorVersion.cmake.in`` or\n\n# ``BasicConfigVersion-AnyNewerVersion.cmake.in`` is used.  Please note that\n\n# these two files are internal to CMake and you should not call\n\n# :command:`configure_file()` on them yourself, but they can be used as starting\n\n# point to create more sophisticted custom ``ConfigVersion.cmake`` files.\n\n#\n\n# Example Generating Package Files\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Example using both :command:`configure_package_config_file` and\n\n# ``write_basic_package_version_file()``:\n\n#\n\n# ``CMakeLists.txt``:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n\n#    set(LIB_INSTALL_DIR lib/ ... CACHE )\n\n#    set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n\n#    ...\n\n#    include(CMakePackageConfigHelpers)\n\n#    configure_package_config_file(FooConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#                                  INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n\n#                                  PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n\n#    write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#                                     VERSION 1.2.3\n\n#                                     COMPATIBILITY SameMajorVersion )\n\n#    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#            DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n#\n\n# ``FooConfig.cmake.in``:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(FOO_VERSION x.y.z)\n\n#    ...\n\n#    @PACKAGE_INIT@\n\n#    ...\n\n#    set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n\n#    set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n#\n\n#    check_required_components(Foo)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/InstallBasicPackageFiles.cmake" : {
      "ObjectId" : "dd60bd1e56390fda9831244f4e67b89ef90d51b9",
      "LastModified" : "2017-06-15T11:05:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# InstallBasicPackageFiles\n\n# ------------------------\n\n#\n\n# A helper module to make your package easier to be found by other\n\n# projects.\n\n#\n\n#\n\n# .. command:: install_basic_package_files\n\n#\n\n# Create and install a basic version of cmake config files for your\n\n# project::\n\n#\n\n#  install_basic_package_files(<Name>\n\n#                              VERSION <version>\n\n#                              COMPATIBILITY <compatibility>\n\n#                              TARGETS_PROPERTY <property_name>\n\n#                              [NO_SET_AND_CHECK_MACRO]\n\n#                              [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#                              [VARS_PREFIX <prefix>] # (default = \"<name>\")\n\n#                              [DESTINATION <destination>]\n\n#                              [NAMESPACE <namespace>] # (default = \"<name>::\")\n\n#                              [EXTRA_PATH_VARS_SUFFIX path1 [path2 ...]]\n\n#                              [UPPERCASE_FILENAMES | LOWERCASE_FILENAMES]\n\n#                             )\n\n#\n\n# Depending on UPPERCASE_FILENAMES and LOWERCASE_FILENAMES, this\n\n# function generates 3 files:\n\n#\n\n#  - ``<Name>ConfigVersion.cmake`` or ``<name>-config-version.cmake``\n\n#  - ``<Name>Config.cmake`` or ``<name>-config.cmake``\n\n#  - ``<Name>Targets.cmake`` or ``<name>-targets.cmake``\n\n#\n\n# If neither UPPERCASE_FILENAMES nor LOWERCASE_FILENAMES is set, a file\n\n# ``<Name>ConfigVersion.cmake.in`` or\n\n# ``<name>-config-version.cmake.in`` is searched, and the convention\n\n# is chosed according to the file found. If no file was found, the\n\n# uppercase convention is used.\n\n#\n\n# Each file is generated twice, one for the build directory and one for\n\n# the installation directory.  The ``DESTINATION`` argument can be\n\n# passed to install the files in a location different from the default\n\n# one (``CMake`` on Windows, ``${CMAKE_INSTALL_LIBDIR}/cmake/${name}``\n\n# on other platforms.\n\n#\n\n#\n\n# The ``<Name>ConfigVersion.cmake`` is generated using\n\n# ``write_basic_package_version_file``.  The ``VERSION``,\n\n# ``COMPATIBILITY``, ``NO_SET_AND_CHECK_MACRO``, and\n\n# ``NO_CHECK_REQUIRED_COMPONENTS_MACRO`` are passed to this function.\n\n# See the documentation for the :module:`CMakePackageConfigHelpers`\n\n# module for further information. The files in the build and install\n\n# directory are exactly the same.\n\n#\n\n#\n\n# The ``<Name>Config.cmake`` is generated using\n\n# ``configure_package_config_file``.  See the documentation for the\n\n# :module:`CMakePackageConfigHelpers` module for further information.\n\n# The module expects to find a ``<Name>Config.cmake.in`` or\n\n# ``<name>-config.cmake.in`` file in the root directory of the project.\n\n# If the file does not exist, a very basic file is created.\n\n#\n\n# A set of variables are checked and passed to\n\n# ``configure_package_config_file`` as ``PATH_VARS``. For each of the\n\n# ``SUFFIX`` considered, if one of the variables::\n\n#\n\n#     <VARS_PREFIX>_(BUILD|INSTALL)_<SUFFIX>\n\n#     (BUILD|INSTALL)_<VARS_PREFIX>_<SUFFIX>\n\n#\n\n# is defined, the ``<VARS_PREFIX>_<SUFFIX>`` variable will be defined\n\n# before configuring the package.  In order to use that variable in the\n\n# config file, you have to add a line::\n\n#\n\n#   set_and_check(<VARS_PREFIX>_<SUFFIX> \\\"@PACKAGE_<VARS_PREFIX>_<SUFFIX>@\\\")\n\n#\n\n# if the path must exist or just::\n\n#\n\n#   set(<VARS_PREFIX>_<SUFFIX> \\\"@PACKAGE_<VARS_PREFIX>_<SUFFIX>@\\\")\n\n#\n\n# if the path could be missing.\n\n#\n\n# These variable will have different values whether you are using the\n\n# package from the build tree or from the install directory.  Also these\n\n# files will contain only relative paths, meaning that you can move the\n\n# whole installation and the CMake files will still work.\n\n#\n\n# Default ``PATH_VARS`` suffixes are::\n\n#\n\n#   BINDIR          BIN_DIR\n\n#   SBINDIR         SBIN_DIR\n\n#   LIBEXECDIR      LIBEXEC_DIR\n\n#   SYSCONFDIR      SYSCONF_DIR\n\n#   SHAREDSTATEDIR  SHAREDSTATE_DIR\n\n#   LOCALSTATEDIR   LOCALSTATE_DIR\n\n#   LIBDIR          LIB_DIR\n\n#   INCLUDEDIR      INCLUDE_DIR\n\n#   OLDINCLUDEDIR   OLDINCLUDE_DIR\n\n#   DATAROOTDIR     DATAROOT_DIR\n\n#   DATADIR         DATA_DIR\n\n#   INFODIR         INFO_DIR\n\n#   LOCALEDIR       LOCALE_DIR\n\n#   MANDIR          MAN_DIR\n\n#   DOCDIR          DOC_DIR\n\n#\n\n# more suffixes can be added using the ``EXTRA_PATH_VARS_SUFFIX``\n\n# argument.\n\n#\n\n#\n\n# The ``<name>Targets.cmake`` is generated using\n\n# :command:`export(TARGETS)` in the build tree and\n\n# :command:`install(EXPORT)` in the installation directory.\n\n# The targets are exported using the value for the ``NAMESPACE``\n\n# argument as namespace.\n\n# The targets should be listed in a global property, that must be passed\n\n# to the function using the ``TARGETS_PROPERTY`` argument\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 iCub Facility, Istituto Italiano di Tecnologia\n\n#   Authors: Daniele E. Domenichelli <daniele.domenichelli@iit.it>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO check that _Name does not contain \"-\" characters\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Path for installed cmake files\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Make relative paths absolute (needed later on) and append the\n\n# defined variables to _(build|install)_path_vars_suffix\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get targets from GLOBAL PROPERTY\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# <name>ConfigVersion.cmake file (same for build tree and intall)\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# If there is no Config.cmake.in file, write a basic one\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# <name>Config.cmake (build tree)\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# <name>Config.cmake (installed)\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# <name>Targets.cmake (build tree)\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# <name>Targets.cmake (installed)\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "fd2db1db94ba322ee6040558869368dd21a0ab48",
      "LastModified" : "2017-06-30T09:49:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright: (C) 2017 Fondazione Istituto Italiano di Tecnologia\r\n\n# Authors: Paul Fitzpatrick\r\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search dot program\r\n\n# for setting the DOT_PATH variable in the Doxyfile\r\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "libraries/CMakeLists.txt" : {
      "ObjectId" : "965f3bc36db9e1c592a9024fe3c767597c1d9e5d",
      "LastModified" : "2017-06-30T09:49:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/common/CMakeLists.txt" : {
      "ObjectId" : "7cc87c4d3754ecdf04aa65ac5a28804c50925a02",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/singleton/CMakeLists.txt" : {
      "ObjectId" : "fd800899cefc8e72df0bdabbe0bddb21a2509aa4",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "08c4b5eaaac03579b2878c3a285c2b013c009ea1",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This plugin will be removed soon ( https://github.com/robotology/gazebo-yarp-plugins/issues/213 )\n\n# for the time being do not update it for compliance with Gazebo 9\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/basestate/CMakeLists.txt" : {
      "ObjectId" : "73d47e283ab2babfa6782a2daf1bff7f8533c975",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2018 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: see AUTHORS file.\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/camera/CMakeLists.txt" : {
      "ObjectId" : "c8d1071d90567937f538ce4ec7fec69d92bffc16",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/clock/CMakeLists.txt" : {
      "ObjectId" : "8b3760367510827f3e17341783d283a5b82f69d0",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/contactloadcellarray/CMakeLists.txt" : {
      "ObjectId" : "64744638d7d3bf0deda57723b6d76b28b88f5da9",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2018 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: see AUTHORS file.\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/controlboard/CMakeLists.txt" : {
      "ObjectId" : "7bc8025951f0e7579680ff76de958a3774e7fc11",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copied from YARP\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/depthCamera/CMakeLists.txt" : {
      "ObjectId" : "f5da0f011bb845fec91345fdf4b4855e5cbf1ef3",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Alberto Cardellino, Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/externalwrench/CMakeLists.txt" : {
      "ObjectId" : "b27b0263550e37b9a6d7e937944b940a2f25a8cd",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Jorhabib Eljaik, Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro and Alessandro Settimi\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/fakecontrolboard/CMakeLists.txt" : {
      "ObjectId" : "e3c9699e76eb8c748635d1d7a194623692bf0d0c",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2017 Istituto Italiano di Tecnologia \n\n# Authors: see AUTHORS file.\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/forcetorque/CMakeLists.txt" : {
      "ObjectId" : "1dfec21a29dc5ca37a5db921de1c2a76e3863b1c",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/imu/CMakeLists.txt" : {
      "ObjectId" : "c72457fa2867d067c248279dbec95eda1a6bf7ce",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/inertialmtb/CMakeLists.txt" : {
      "ObjectId" : "7ea7094c0732781251557396372bbe2684104132",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2017 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi, Francesco Romano and Nuno Guedelha\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/inertialmtbPart/CMakeLists.txt" : {
      "ObjectId" : "07699756dedd10d9c649c0ceaa8c86bf17301206",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2016 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi, Francesco Romano and Nuno Guedelha\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/jointsensors/CMakeLists.txt" : {
      "ObjectId" : "5dd01f304df90737be8349984b74132cd0d864af",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/lasersensor/CMakeLists.txt" : {
      "ObjectId" : "491d54c7626f30dc90378f60ad70d5055f4236fb",
      "LastModified" : "2018-06-21T12:13:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016 Istituto Italiano di Tecnologia iCub Facility\n\n# Authors: Marco Randazzo\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/linkattacher/CMakeLists.txt" : {
      "ObjectId" : "562574f1cccf41513dc269310161d9fcbbf7994f",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016 Istituto Italiano di Tecnologia iCub Facility & RBCS Department\n\n# Authors: Yeshasvi Tirupachuri\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/maissensor/CMakeLists.txt" : {
      "ObjectId" : "dc3720ab19f291ff7be06c832e7a653cb6a7e097",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016 Istituto Italiano di Tecnologia iCub Facility \n\n# Authors: Marco Randazzo\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/modelposepublisher/CMakeLists.txt" : {
      "ObjectId" : "cfabedcf9e41285bcd116231ae4afa15534975f7",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2018 Istituto Italiano di Tecnologia \n\n# Authors: see AUTHORS file.\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/multicamera/CMakeLists.txt" : {
      "ObjectId" : "4cb6ba6a240e41868f2563f7376e67d57626591a",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/showmodelcom/CMakeLists.txt" : {
      "ObjectId" : "cc3060c0b06ff3a5847c34e083555f2ce1d482a7",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/videotexture/CMakeLists.txt" : {
      "ObjectId" : "5a5ef8c730d06a4e98481d11cbe282a3925e10b4",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016 iCub Facility\n\n# Authors: Marco Randazzo\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find opencv dependency\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/worldinterface/CMakeLists.txt" : {
      "ObjectId" : "91ae8ebac12d26100c1d47580a0b9c225a3cb460",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 iCub Facility\n\n# Authors: Lorenzo Natale\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thrift/CMakeLists.txt" : {
      "ObjectId" : "7b7fbeddd089643c65dbb86d520c30672ab191b4",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thrift/clock/CMakeLists.txt" : {
      "ObjectId" : "12582970409019c2e487f2c4fab499d78880821e",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2015 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: Enrico Mingo, Alessio Rocchi, Mirko Ferrati, Silvio Traversaro, Alessandro Settimi and Francesco Romano\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thrift/clock/autogenerated/clock_rpc_thrift.cmake" : {
      "ObjectId" : "f39ac91f956edaf85302bf2d81fec07e3339b0aa",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2006-2018 Istituto Italiano di Tecnologia (IIT)\n\n# All rights reserved.\n\n#\n\n# This software may be modified and distributed under the terms of the\n\n# BSD-3-Clause license. See the accompanying LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## This is an automatically-generated file.\n\n## It could get re-generated if the ALLOW_IDL_GENERATION flag is on\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thrift/linkattacher/CMakeLists.txt" : {
      "ObjectId" : "89b6ab9310bb8943d73cfa6cfed105e978cdc1a7",
      "LastModified" : "2019-01-03T21:07:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016 Istituto Italiano di Tecnologia iCub Facility & RBCS Department\n\n# Authors: Yeshasvi Tirupachuri\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thrift/linkattacher/autogenerated/linkattacher_rpc_thrift.cmake" : {
      "ObjectId" : "719169e0fe143ea2912a72dea284dc18bc241c4f",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2006-2018 Istituto Italiano di Tecnologia (IIT)\n\n# All rights reserved.\n\n#\n\n# This software may be modified and distributed under the terms of the\n\n# BSD-3-Clause license. See the accompanying LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## This is an automatically-generated file.\n\n## It could get re-generated if the ALLOW_IDL_GENERATION flag is on\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thrift/worldinterface/CMakeLists.txt" : {
      "ObjectId" : "629ba5b2882bba5b8f7f2ace3c98ef2abf495bf1",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2015 iCub Facility\n\n# Authors: Lorenzo Natale\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "thrift/worldinterface/autogenerated/worldinterface_rpc_thrift.cmake" : {
      "ObjectId" : "bb60da889a57137ae7a0b1ce6d66ae92a3ae5569",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2006-2018 Istituto Italiano di Tecnologia (IIT)\n\n# All rights reserved.\n\n#\n\n# This software may be modified and distributed under the terms of the\n\n# BSD-3-Clause license. See the accompanying LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## This is an automatically-generated file.\n\n## It could get re-generated if the ALLOW_IDL_GENERATION flag is on\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tutorial/CMakeLists.txt" : {
      "ObjectId" : "aae58e25a7e972f37b7badce9f874b49280e6e60",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tutorial/controller/CMakeLists.txt" : {
      "ObjectId" : "56df2f0c1fd7d73bd460c448398bf20e4ce6dcf1",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014 CoDyCo\n\n# Author: Daniele Pucci, Francesco Romano\n\n# CopyPolicy: Released under the terms of the GNU GPL v2.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(ICUB)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include(iCubHelpers)\n\n# include(iCubOptions)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tutorial/model/model_pose_publisher/CMakeLists.txt" : {
      "ObjectId" : "1a3db096f396caf5b24dcdded3fbfa880593a50d",
      "LastModified" : "2018-09-21T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2018 Istituto Italiano di Tecnologia ADVR & iCub Facility & RBCS Department\n\n# Authors: see AUTHORS file.\n\n# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 45
  },
  "ElapsedTime" : 1006
}