{
  "Repository" : "14514528",
  "Revision" : "HEAD",
  "ObjectId" : "ea95aa5911b5c975b185acfe153435b5973f8f7e",
  "CommitTime" : "2019-04-06T09:07:45Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c487df6ee24e483c51f5983572fe5fd151d999a5",
      "LastModified" : "2019-02-14T12:22:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download cotire automatically\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\r\n\n# Project definition\r\n\n################################################################################\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\r\n\n# Available build options\r\n\n################################################################################\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# global cmake options\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# setup paths\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# hide some settings\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#if(ROR_USING_VISUAL_STUDIO_PROFESSIONAL)\r\n\n#  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /analyze\") # /analyze only available when using VS professional\r\n\n#endif(ROR_USING_VISUAL_STUDIO_PROFESSIONAL)\r\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# some general flags\r\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# fix executable paths for windows\r\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# add additional gdb debugging stuff\r\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "################################################################################\r\n\n# Check for dependencies\r\n\n################################################################################\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\r\n\n# Recurse into subdirectories\r\n\n################################################################################\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/3rdparty/FindOIS.cmake" : {
      "ObjectId" : "aa58779c2b075e53f5d3118a3dd1542223b9379b",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OIS\n\n# Once done, this will define\n\n#\n\n#  OIS_FOUND - system has OIS\n\n#  OIS_INCLUDE_DIRS - the OIS include directories \n\n#  OIS_LIBRARIES - link these to use OIS\n\n#  OIS_BINARY_REL / OIS_BINARY_DBG - DLL names (windows only)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For OIS, prefer static library over framework (important when referencing OIS source build)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OIS uses the 'includes' path for its headers in the source release, not 'include'\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# OIS source build on Mac stores libs in a different location\n\n# Also this is for static build\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add parent of OIS folder to support OIS/OIS.h\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Reset framework finding\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/3rdparty/FindPkgMacros.cmake" : {
      "ObjectId" : "8e1e79b91d59f3893df0edb9f6e78aa3dfd4c14a",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 17
    },
    "cmake/3rdparty/FindThreads.cmake" : {
      "ObjectId" : "0ba37b5499fcb3cd9e310af164003a6343011bd1",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindThreads\n\n# -----------\n\n#\n\n# This module determines the thread library of the system.\n\n#\n\n# The following variables are set\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_LIBS_INIT     - the thread library\n\n#   CMAKE_USE_SPROC_INIT       - are we using sproc?\n\n#   CMAKE_USE_WIN32_THREADS_INIT - using WIN32 threads?\n\n#   CMAKE_USE_PTHREADS_INIT    - are we using pthreads\n\n#   CMAKE_HP_PTHREADS_INIT     - are we using hp pthreads\n\n#\n\n# The following import target is created\n\n#\n\n# ::\n\n#\n\n#   Threads::Threads\n\n#\n\n# For systems with multiple thread libraries, caller can set\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_PREFER_PTHREAD\n\n#\n\n# If the use of the -pthread compiler and linker flag is prefered then the\n\n# caller can set\n\n#\n\n# ::\n\n#\n\n#   THREADS_PREFER_PTHREAD_FLAG\n\n#\n\n# Please note that the compiler flag can only be used with the imported\n\n# target. Use of both the imported target as well as this switch is highly\n\n# recommended for new code.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n# Copyright 2011-2015 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2016 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# ------------------------------------------------------------------------------\n\n# \n\n# The above copyright and license notice applies to distributions of\n\n# CMake in source and binary form.  Some source files contain additional\n\n# notices of original copyright by their contributors; see each source\n\n# for details.  Third-party software packages supplied with CMake under\n\n# compatible licenses provide their own copyright notices documented in\n\n# corresponding subdirectories.\n\n# \n\n# ------------------------------------------------------------------------------\n\n# \n\n# CMake was initially developed by Kitware with the following sponsorship:\n\n# \n\n#  * National Library of Medicine at the National Institutes of Health\n\n#    as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n# \n\n#  * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#    Visualization Initiative.\n\n# \n\n#  * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#    National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#    Grant U54 EB005149.\n\n# \n\n#  * Kitware, Inc.\n\n# \n\n#=============================================================================\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do we have sproc?\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal helper macro.\n\n# Do NOT even think about using it outside of this file!\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Internal helper macro.\n\n# Do NOT even think about using it outside of this file!\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we did not found -lpthread, -lpthread, or -lthread, look for -pthread\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# We have sproc\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Do we have pthreads?\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#\n\n# We have pthread.h\n\n# Let's check for the library now.\n\n#\n",
        "Line" : 195,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Check if pthread functions are in normal C library\n",
        "Line" : 201,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Check for -pthread first if enabled. This is the recommended\n\n# way, but not backwards compatible as one must also pass -pthread\n\n# as compiler flag then.\n",
        "Line" : 209,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# On sun also check for -lthread\n",
        "Line" : 219,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Use libcma if it exists and can be used.  It provides more\n\n# symbols than the plain pthread library.  CMA threads\n\n# have actually been deprecated:\n\n#   http://docs.hp.com/en/B3920-90091/ch12s03.html#d0e11395\n\n#   http://docs.hp.com/en/947/d8.html\n\n# but we need to maintain compatibility here.\n\n# The CMAKE_HP_PTHREADS setting actually indicates whether CMA threads\n\n# are available.\n",
        "Line" : 241,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 13
    },
    "cmake/3rdparty/PreprocessorUtils.cmake" : {
      "ObjectId" : "8f1a231f824c39bd5a95fece13fd5441930e53f3",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DependenciesConfig.cmake" : {
      "ObjectId" : "34f8ee0f671d1e59add7e011f6fa806ce3943ef7",
      "LastModified" : "2019-02-14T12:22:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# components\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# some obsolete options:\r\n\n# disabled some options for now\r\n\n#set(ROR_FEAT_TIMING     \"FALSE\" CACHE BOOL \"enable beam statistics. For core development only\")\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find packages\r\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# directX\r\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindAngelScript.cmake" : {
      "ObjectId" : "6a8fc3cf7f8c5535948a2530dadc551ec6db91a4",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\r\n\n#\r\n\n# Copyright (c) 2015 Fabian Killus\r\n\n# \r\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\n# of this software and associated documentation files (the \"Software\"), to deal\r\n\n# in the Software without restriction, including without limitation the rights\r\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\n# copies of the Software, and to permit persons to whom the Software is\r\n\n# furnished to do so, subject to the following conditions:\r\n\n# \r\n\n# The above copyright notice and this permission notice shall be included in all\r\n\n# copies or substantial portions of the Software.\r\n\n# \r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n\n# SOFTWARE.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find AngelScript\r\n\n# ----------------\r\n\n#\r\n\n# Find AngelScript include directories and libraries.\r\n\n# This module will set the following variables:\r\n\n#\r\n\n# * AngelScript_FOUND       - True if AngelScript is found\r\n\n# * AngelScript_INCLUDE_DIR - The include directory\r\n\n# * AngelScript_LIBRARY     - The libraries to link against\r\n\n#\r\n\n# In addition the following imported targets are defined:\r\n\n#\r\n\n# * AngelScript::AngelScript\r\n\n# * AngelScript::use_namespace\r\n\n#\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindCaelum.cmake" : {
      "ObjectId" : "98e369bda87d0e1a7127375df7ade41ed3a0f7d4",
      "LastModified" : "2018-09-18T19:26:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Fabian Killus\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Caelum\n\n# -----------\n\n#\n\n# Find Caelum include directories and libraries.\n\n# This module will set the following variables:\n\n#\n\n# * Caelum_FOUND         - True if Caelum is found\n\n# * Caelum_INCLUDE_DIRS  - The include directory\n\n# * Caelum_LIBRARIES     - The libraries to link against\n\n#\n\n# In addition the following imported targets are defined:\n\n#\n\n# * Caelum::Caelum\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindMoFileReader.cmake" : {
      "ObjectId" : "fea77b91da82843fb9cc5091c4f00b69ec323848",
      "LastModified" : "2018-12-15T12:24:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\r\n\n#\r\n\n# Copyright (c) 2015 Fabian Killus\r\n\n# \r\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\n# of this software and associated documentation files (the \"Software\"), to deal\r\n\n# in the Software without restriction, including without limitation the rights\r\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\n# copies of the Software, and to permit persons to whom the Software is\r\n\n# furnished to do so, subject to the following conditions:\r\n\n# \r\n\n# The above copyright notice and this permission notice shall be included in all\r\n\n# copies or substantial portions of the Software.\r\n\n# \r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n\n# SOFTWARE.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find MoFileReader\r\n\n# -----------------\r\n\n#\r\n\n# Find MoFileReader include directories and libraries.\r\n\n# This module will set the following variables:\r\n\n#\r\n\n# * MoFileReader_FOUND         - True if MoFileReader is found\r\n\n# * MoFileReader_INCLUDE_DIRS  - The include directory\r\n\n# * MoFileReader_LIBRARIES     - The libraries to link against\r\n\n#\r\n\n# In addition the following imported targets are defined:\r\n\n#\r\n\n# * MoFileReader::MoFileReader\r\n\n#\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindMyGUI.cmake" : {
      "ObjectId" : "57a4216a57c2bea3ec17f7de850b8179b6cbff2f",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Fabian Killus\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find MyGUI\n\n# ----------\n\n#\n\n# Find MyGUI include directories and libraries.\n\n# This module will set the following variables:\n\n#\n\n# * MyGUI_INCLUDE_DIRS  - True if MyGUI is found\n\n# * MyGUI_LIBRARIES     - The include directory\n\n# * MyGUI_FOUND         - The libraries to link against\n\n#\n\n# In addition the following imported targets are defined:\n\n#\n\n# * MyGUI::MyGUI\n\n# * MyGUI::OgrePlatform\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find release libraries\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find debug libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set include directories and libraries\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindSocketW.cmake" : {
      "ObjectId" : "7d6e8a8b16a47918331390136c28b65f5bc5c47b",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\r\n\n#\r\n\n# Copyright (c) 2015 Fabian Killus\r\n\n# \r\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\n# of this software and associated documentation files (the \"Software\"), to deal\r\n\n# in the Software without restriction, including without limitation the rights\r\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\n# copies of the Software, and to permit persons to whom the Software is\r\n\n# furnished to do so, subject to the following conditions:\r\n\n# \r\n\n# The above copyright notice and this permission notice shall be included in all\r\n\n# copies or substantial portions of the Software.\r\n\n# \r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n\n# SOFTWARE.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find SocketW\r\n\n# ------------\r\n\n#\r\n\n# Find SocketW include directories and libraries.\r\n\n# This module will set the following variables:\r\n\n#\r\n\n# * SocketW_FOUND         - True if SocketW is found\r\n\n# * SocketW_INCLUDE_DIRS  - The include directory\r\n\n# * SocketW_LIBRARIES     - The libraries to link against\r\n\n#\r\n\n# In addition the following imported targets are defined:\r\n\n#\r\n\n# * SocketW::SocketW\r\n\n#\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/GenerateVersionInfo.cmake" : {
      "ObjectId" : "d2e56677fc7205e602e52719b82be8f35ecd9d15",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\r\n\n#\r\n\n# Copyright (c) 2016 Fabian Killus\r\n\n#\r\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\r\n\n# associated documentation files (the \"Software\"), to deal in the Software without restriction,\r\n\n# including without limitation the rights to use, copy, modify, merge, publish, distribute,\r\n\n# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\r\n\n# furnished to do so, subject to the following conditions:\r\n\n#\r\n\n# The above copyright notice and this permission notice shall be included in all copies or\r\n\n# substantial portions of the Software.\r\n\n#\r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\r\n\n# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n\n# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GenerateVersionInfo\r\n\n# ===================\r\n\n#\r\n\n# This script generates an output file from a given input template by filling in the version\r\n\n# information provided in the following variables\r\n\n#\r\n\n#  * VERSION_MAJOR\r\n\n#  * VERSION_MINOR\r\n\n#  * VERSION_PATCH\r\n\n#  * VERSION_TWEAK\r\n\n#  * BUILD_DEV_VERSION\r\n\n#  * BUILD_CUSTOM_VERSION\r\n\n#  * CUSTOM_VERSION\r\n\n#\r\n\n# The git executable is expected to be specified in\r\n\n#\r\n\n#  * GIT_EXECUTABLE\r\n\n#\r\n\n# The input template and the output file destination are defined via\r\n\n#\r\n\n#  * VERSION_FILE_INPUT\r\n\n#  * VERSION_FILE_OUTPUT\r\n\n#\r\n\n# This implementation was inspired by\r\n\n# https://github.com/minetest/minetest/blob/master/cmake/Modules/GenerateVersion.cmake\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define a suffix to append to the version string in case of a development build (as opposed to\r\n\n# an official release). This suffix contains additional information gathered from the git VCS.\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if we are inside an actual git repository\r\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Find hash of the latest git commit\r\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Check if the code has been modified since the latest commit\r\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Define the version string suffix containing\r\n\n#   * 'dev' to indicate development build\r\n\n#   * sha1sum of latest commit\r\n\n#   * 'dirty' flag in case of local modifications\r\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Use the following version string suffix if git is not available or not inside a valid\r\n\n# git repository\r\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# This whole if and else can replaced, when using cmake >= 3.8 (as it then uses environment variable SOURCE_DATE_EPOCH), with this:\r\n\n# STRING(TIMESTAMP BUILD_DATE \"%b %d %Y\" UTC)\r\n\n# STRING(TIMESTAMP BUILD_TIME \"%H:%M\" UTC)\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# more correct would be \"%b %d %Y\" but this is only supported from cmake >= 3.7\r\n",
        "Line" : 118,
        "CharPositionInLine" : 48
      },
      "10" : {
        "Text" : "# Fill in the actual version information in the provided template\r\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/Macros.cmake" : {
      "ObjectId" : "19f9d2f4a877ed8887e3b0ffe37972e3c4d4d877",
      "LastModified" : "2018-12-15T12:24:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#make_directory(${destDir})\r\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#if(${${name}_LIBRARY_DIRS})\r\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#endif(${${name}_LIBRARY_DIRS})\r\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "cmake/SourceFileUtils.cmake" : {
      "ObjectId" : "30a8921e4077cb408b347e30ba5649a1b789c271",
      "LastModified" : "2017-10-10T07:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2016 Fabian Killus\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n\n# associated documentation files (the \"Software\"), to deal in the Software without restriction,\n\n# including without limitation the rights to use, copy, modify, merge, publish, distribute,\n\n# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all copies or\n\n# substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n\n# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\n# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ================================================================================================ #\n\n#  EXPAND_FILE_EXTENSIONS( RESULT <file_pattern>...                                                #\n\n#                                                                                                  #\n\n# This function expands filenames specified with multiple extensions into separate filenames for\n\n# each provided extension. For example\n\n#\n\n#   path/to/file.{h,cpp}\n\n#   path/to/definitions.h\n\n#\n\n# is transformed into\n\n#\n\n#   path/to/file.h\n\n#   path/to/file.cpp\n\n#   path/to/definitions.h\n\n#\n\n# Intention: For the purpose of building only source files are actually required to be specified.\n\n# However, it often makes sense to additionally provide accompanying header files if an IDE such\n\n# as Visual Studio is used (otherwise the header files are not shown in the IDE). The downside is\n\n# that it becomes annoying to explicitely specify both (header and source) files. This helper\n\n# function allows to specify this information in a compact manner.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for file extension pattern\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Obtain basename without extension pattern (e.g. \"path/to/file\")\n",
        "Line" : 54,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Convert extension pattern to list (e.g. \".{h,cpp}\" -> \"h;cpp\")\n",
        "Line" : 57,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Append concatenated entries for each extension to expanded sources\n",
        "Line" : 62,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# ================================================================================================ #\n\n#  GENERATE_SOURCE_GROUPS( SOURCE_FILES )                                                          #\n\n#                                                                                                  #\n\n# In CMake the source_group() command can be used to provide guidance for IDEs such as Visual\n\n# Studio or XCode how to organize source files.\n\n# This function takes a list of source files and creates sensible source groups based on the\n\n# path provided for each file. In addition header and source files are sorted into separate super\n\n# groups. For example:\n\n#\n\n#   path/to/file.cpp\n\n#   path/to/file.h\n\n#\n\n# might be displayed in an IDE somewhat like this\n\n#\n\n#   |-Header Files\n\n#   ||-path\n\n#   | |-to\n\n#   |  |-file.h\n\n#   |-Source Files\n\n#   ||-path\n\n#   | |-to\n\n#   |  |-file.cpp\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Split filename into its components\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Extract group name from directory path\n",
        "Line" : 107,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# sort according to filetype\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "7c3014416a22993cfdf1bcc6e3efa461f620ed95",
      "LastModified" : "2017-04-26T08:51:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################################################\n\n# Doxygen Documentation\n\n####################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The doxygen package is required in order to build documentation\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Setup source and destination paths\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Generate Doxygen configuration file from template by replacing specific CMake variables with\n\n# corresponding values (e.g. project name, project version). The resulting config file is copied\n\n# to the directory where the documentation is going to be built.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Provide custom target which allows to build the documentation using the generated configuration file.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "d85034e2653148e3c317015ea674ad2dc3b10615",
      "LastModified" : "2019-02-14T12:22:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################################################\r\n\n#  Setup content and resources for Rigs of Rods\r\n\n####################################################################################################\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy resources needed for execution to the build directory\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/angelscript_addons/CMakeLists.txt" : {
      "ObjectId" : "c41ae9819d69d8d4c710e58b5a7d32bf529e4612",
      "LastModified" : "2019-02-14T12:22:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO list explicitely\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/main/CMakeLists.txt" : {
      "ObjectId" : "b062ea36e07b971fb132ed689cbd6f3e1700f2e6",
      "LastModified" : "2019-04-06T09:07:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################################################\n\n#  SOURCE FILES\n\n####################################################################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Expand file extensions (i.e. path/to/file.{h,cpp} becomes path/to/file.h;path/to/file.cpp)\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate source groups for use in IDEs\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clang-cl doesn't support resource files\n",
        "Line" : 284,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "####################################################################################################\n\n#  EXECUTABLE TARGET\n\n####################################################################################################\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####################################################################################################\n\n#  PREPROCESSOR DEFINITIONS\n\n####################################################################################################\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# build with support for Mumble positional audio, has no dependencies but requires linking against librt on UNIX\n",
        "Line" : 309,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "#FEAT_DEBUG_MUTEX\n",
        "Line" : 310,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "####################################################################################################\n\n#  INCLUDE DIRECTORIES\n\n####################################################################################################\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "####################################################################################################\n\n# EXTERNAL DEPENDENCIES\n\n#\n\n# In CMake searching for external dependencies is done with the help of FindModule scripts. These\n\n# are run by calling the find_package() command.\n\n# CMake already ships with many ready-made FindModules (e.g. for OpenAL). Additional FindModule\n\n# scripts that can be used are placed in the CMakeModule directory `<ror_root>/cmake`. These\n\n# scripts typically define a set of variables, such as\n\n#\n\n#   <dependency_name>_FOUND           # indicates if the dependecy was found\n\n#   <dependency_name>_INCLUDE_DIRS    # directories with headers to include\n\n#   <dependency_name>_LIBRARIES       # libraries to link against\n\n#\n\n# Instead of directly using these variables, in modern CMake it is common to use additionally\n\n# provided 'imported targets' for the sought dependency. This greatly facilitates dealing with\n\n# dependencies. Adding a dependency to  an executable target is now simply a matter of specifying\n\n# the imported target of the dependency in the target_link_libraries() command.\n\n#\n\n####################################################################################################\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  REQUIRED DEPENDENCIES\n\n# -----------------------\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TODO\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# disable some annoying VS warnings:\n\n# warning C4244: 'initializing' : conversion from 'const float' to 'int', possible loss of data\n\n# warning C4305: 'initializing' : truncation from 'double' to 'const float'\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#  include_directories(${GTK_INCLUDE_DIRS})\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# --- Threading support (still needed for GCC even with C++11)\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --- Ogre 3D graphics engine ---\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Object Oriented Input System ---\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --- MoFileReader ---\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --- MyGUI - graphical user inferface ---\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#  OPTIONAL DEPENDENCIES\n\n# -----------------------\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# --- OpenAL - audio library ---\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --- SocketW - networking library ---\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add openssl\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# --- AngelScript - scripting interface ---\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO angelscript_addons\n",
        "Line" : 501,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# --- cURL ---\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# --- rapidjson ---\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# --- Caelum -- Ogre addon for realistic sky rendering ---\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "####################################################################################################\n\n#  POST-BUILD STEPS\n\n####################################################################################################\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# configure plugins.cfg\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "source/version_info/CMakeLists.txt" : {
      "ObjectId" : "5c83bcf03dd8555a086f395a72914e062cf67aff",
      "LastModified" : "2018-12-15T12:24:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################################\r\n\n# Build a library which provides the versioning info defined for the current CMake project\r\n\n###################################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Temporary generated files\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for Git executable\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake custom targets are always out of date. Therefore the following target will update the\r\n\n# versioning information on each build. It executes the GenerateVersionInfo.cmake script which\r\n\n# generates the version_info.cpp and version_def.h files.\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The version_info library target\r\n\n# Other targets can make use of the version information with `target_link_libraries( <target> version_info )`\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 19
  },
  "ElapsedTime" : 2498
}