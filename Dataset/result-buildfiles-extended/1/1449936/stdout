{
  "Repository" : "1449936",
  "Revision" : "HEAD",
  "ObjectId" : "7c37bd65837403fac2d909dde99ec4299fc5547c",
  "CommitTime" : "2017-05-30T11:03:07Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "00ae010f1740fae244de4d87a30b02bc98841a07",
      "LastModified" : "2016-08-19T09:23:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure build type (Release when no one is selected)\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find asm compiler\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define asm sources\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#compile all asm files\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_definitions(\"-DX86_32\")\r\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#find_package(CRYPTOPP_FOUND)\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build executable\r\n",
        "Line" : 386,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Link executable\r\n",
        "Line" : 388,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Set include directory specific for this file. Avoid conflicts when including SDL.h\r\n\n# if both SDL and SDL2 are installed\r\n",
        "Line" : 390,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Build executable\r\n",
        "Line" : 396,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Link executable\r\n",
        "Line" : 398,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Set include directory specific for this file. Avoid conflicts when including SDL.h\r\n\n# if both SDL and SDL2 are installed\r\n",
        "Line" : 400,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# uninstall target\r\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "MyCMakeScripts/AddCompilerFlag.cmake" : {
      "ObjectId" : "77eff4dd1de4cbfa1e05774ebf1e2e2f9d97b3d0",
      "LastModified" : "2014-04-28T14:55:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a given compiler flag to flags variables.\n\n# AddCompilerFlag(<flag> [<var>])\n\n# or\n\n# AddCompilerFlag(<flag> [C_FLAGS <var>] [CXX_FLAGS <var>] [C_RESULT <var>]\n\n#                        [CXX_RESULT <var>])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiling with FMA3 support may fail only at the assembler level.\n\n# In that case we need to have such an instruction in the test code\n",
        "Line" : 121,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Compiling with libc++ not only requires a compiler that understands it, but also\n\n# the libc++ headers itself\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "MyCMakeScripts/CheckCCompilerFlag.cmake" : {
      "ObjectId" : "7008e85db7ae44346f2d8797851462ccb0df2ebf",
      "LastModified" : "2014-04-28T14:55:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the C compiler supports a given flag.\n\n# CHECK_C_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_c_source_compiles macro.\n\n# See help for CheckCSourceCompiles for a listing of variables\n\n# that can modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "MyCMakeScripts/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "f50ea97ad341fa29a4763288d61cf98792037460",
      "LastModified" : "2014-04-28T14:55:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "MyCMakeScripts/CheckMicCCompilerFlag.cmake" : {
      "ObjectId" : "eae725b790a5368270a814cc8be88cacfafb60b8",
      "LastModified" : "2014-04-28T14:55:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the MIC C compiler supports a given flag.\n\n# CHECK_MIC_C_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_c_source_compiles macro.  See help\n\n# for CheckCSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n",
        "Line" : 62,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 3
    },
    "MyCMakeScripts/CheckMicCXXCompilerFlag.cmake" : {
      "ObjectId" : "c0444c4cc2d06a36041032225f495287d85f1b59",
      "LastModified" : "2014-04-28T14:55:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the MIC CXX compiler supports a given flag.\n\n# CHECK_MIC_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n",
        "Line" : 62,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 3
    },
    "MyCMakeScripts/FindCRYPTOPP_FOUND.cmake" : {
      "ObjectId" : "9d54a292663679c5f937d976279e478dfa70be6e",
      "LastModified" : "2016-06-08T21:19:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- cmake -*-\n\n#\n\n# Find cryptopp library or sources.\n\n#\n\n# Input variables:\n\n#   CRYPTOPP_DIR        - set this to specify the cryptopp source to be built.\n\n#\n\n# Output variables:\n\n#\n\n#   CRYPTOPP_FOUND                      - set if library was found\n\n#       CRYPTOPP_INCLUDE_DIR    - Set to where include files ar found (or sources)\n\n#       CRYPTOPP_LIBRARIES              - Set to library\n\n#   CRYPTOPP_IS_LIB                     - set if library was found\n\n#   CRYPTOPP_IS_SOURCE          - set if sources were found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "MyCMakeScripts/FindCSFML.cmake" : {
      "ObjectId" : "f6869445f5a2aa21abfdd291f0f4594edd14d151",
      "LastModified" : "2016-06-08T21:19:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMake module is an adapted version of the FindSFML.cmake script found in SFML.\n\n# See https://github.com/LaurentGomila/SFML/blob/master/cmake/Modules/FindSFML.cmake .\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Locate the CSFML library\n\n#\n\n# This module defines the following variables:\n\n# - For each module XXX (SYSTEM, WINDOW, GRAPHICS, NETWORK, AUDIO, MAIN):\n\n#   - CSFML_XXX_LIBRARY_DEBUG, the name of the debug library of the xxx module (set to CSFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - CSFML_XXX_LIBRARY_RELEASE, the name of the release library of the xxx module (set to CSFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - CSFML_XXX_LIBRARY, the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - CSFML_XXX_FOUND, true if either the debug or release library of the xxx module is found\n\n# - CSFML_LIBRARIES, the list of all libraries corresponding to the required modules\n\n# - CSFML_FOUND, true if all the required modules are found\n\n# - CSFML_INCLUDE_DIR, the path where CSFML headers are located (the directory containing the CSFML/Config.h file)\n\n#\n\n# By default, the dynamic libraries of CSFML will be found. To find the static ones instead,\n\n# you must set the CSFML_STATIC_LIBRARIES variable to TRUE before calling find_package(CSFML ...).\n\n# In case of static linking, the CSFML_STATIC macro will also be defined by this script.\n\n#\n\n# On Mac OS X if CSFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that CSFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If CSFML is not installed in a standard path, you can use the CSFMLDIR CMake variable or environment variable\n\n# to tell CMake where CSFML is.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define the CSFML_STATIC macro if static build was chosen\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# deduce the libraries suffix from the options\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find the CSFML include directory\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fink\n\n# DarwinPorts\n\n# Blastwave\n",
        "Line" : 47,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# check the version number\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extract the major and minor version numbers from CSFML/Config.hpp\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# compare them\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# CSFML version is < 2.0\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# find the requested modules\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 84,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# debug library\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# release library\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# library found\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# if both are found, set CSFML_XXX_LIBRARY to contain both\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# debug and not release\n",
        "Line" : 129,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# release and not debug\n",
        "Line" : 134,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# library not found\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# mark as advanced\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# handle errors\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# CSFML version not ok\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# fatal error\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# error but continue\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# handle success\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "MyCMakeScripts/FindSDL2.cmake" : {
      "ObjectId" : "d94679c3892e71f1251c461d07b99795b007c0f9",
      "LastModified" : "2016-06-08T21:19:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "MyCMakeScripts/FindYasm.cmake" : {
      "ObjectId" : "22b8e931319ce1459d041caff2fec93b5dd75a03",
      "LastModified" : "2016-06-08T21:19:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------------\n\n# Copyright (c) 2012-2013, Lars Baehren <lbaehren@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#--------------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Check for the presence of YASM\n\n#\n\n# The following variables are set when YASM is found:\n\n#  YASM_FOUND      = Set to true, if all components of YASM have been found.\n\n#  YASM_INCLUDES   = Include path for the header files of YASM\n\n#  YASM_LIBRARIES  = Link these to use YASM\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##_____________________________________________________________________________\n\n## Check for the header files\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##_____________________________________________________________________________\n\n## Check for the library\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "##_____________________________________________________________________________\n\n## Check for the executable\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "##_____________________________________________________________________________\n\n## Actions taken when all components have been found\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(YASM DEFAULT_MSG YASM_LIBRARIES YASM_INCLUDES)\n\n# FIND_PACKAGE_HANDLE_STANDARD_ARGS(YASM DEFAULT_MSG YASM_INCLUDES)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##_____________________________________________________________________________\n\n## Mark advanced variables\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "MyCMakeScripts/OptimizeForArchitecture.cmake" : {
      "ObjectId" : "9afbd747e6b8df1669c7e276868876361fd1082a",
      "LastModified" : "2016-06-08T21:19:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Any recent Intel CPU except NetBurst\n",
        "Line" : 73,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "# Xeon E7 4860\n",
        "Line" : 84,
        "CharPositionInLine" : 37
      },
      "3" : {
        "Text" : "# Xeon 7500 series\n",
        "Line" : 86,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "# Xeon TNG\n",
        "Line" : 88,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# Xeon 5600 series\n",
        "Line" : 90,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# Core TNG\n",
        "Line" : 92,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# Core i7/i5/i3\n",
        "Line" : 94,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# Core i7/i5\n",
        "Line" : 96,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : "# Core i7/i5\n",
        "Line" : 98,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# Itanium (not supported)\n",
        "Line" : 119,
        "CharPositionInLine" : 34
      },
      "11" : {
        "Text" : "# NetBurst\n",
        "Line" : 121,
        "CharPositionInLine" : 35
      },
      "12" : {
        "Text" : "# Not sure whether this must be 3 or even 4 instead\n",
        "Line" : 123,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "# 16h\n",
        "Line" : 128,
        "CharPositionInLine" : 31
      },
      "14" : {
        "Text" : "# 15h\n",
        "Line" : 130,
        "CharPositionInLine" : 35
      },
      "15" : {
        "Text" : "# 14h\n",
        "Line" : 136,
        "CharPositionInLine" : 35
      },
      "16" : {
        "Text" : "# 12h\n\n# 10h\n",
        "Line" : 138,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# I don't know the right number to put here. This is just a guess from the hardware I have access to\n",
        "Line" : 143,
        "CharPositionInLine" : 35
      },
      "18" : {
        "Text" : "# add this clause to remove it from the else clause\n",
        "Line" : 264,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# we want SSE intrinsics to result in instructions using the VEX prefix.\n\n# Otherwise integer ops (which require the older SSE intrinsics) would\n\n# always have a large penalty.\n",
        "Line" : 348,
        "CharPositionInLine" : 9
      },
      "20" : {
        "Text" : "# MSVC on 32 bit can select /arch:SSE2 (since 2010 also /arch:AVX)\n\n# MSVC on 64 bit cannot select anything (should have changed with MSVC 2010)\n",
        "Line" : 371,
        "CharPositionInLine" : 9
      },
      "21" : {
        "Text" : "# ICC (on Linux)\n",
        "Line" : 389,
        "CharPositionInLine" : 56
      },
      "22" : {
        "Text" : "# If the target host is an AMD machine then we still want to use -xSSE2 because the binary would refuse to run at all otherwise\n",
        "Line" : 416,
        "CharPositionInLine" : 30
      },
      "23" : {
        "Text" : "# not MSVC and not ICC => GCC, Clang, Open64\n",
        "Line" : 438,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 24
    },
    "gpac/modules/openhevc_dec/Makefile" : {
      "ObjectId" : "b5078d4ea9d5cdbf41bb83c2ed96d8b069dd13d7",
      "LastModified" : "2016-06-08T21:19:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#common obj\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 11,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 4210
}