{
  "Repository" : "29262032",
  "Revision" : "HEAD",
  "ObjectId" : "17a608818785e5c7fec87e462bdec0920cb1da00",
  "CommitTime" : "2019-04-18T03:02:21Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7855cdb58b420c8b42f0323e2411dce135ce0721",
      "LastModified" : "2019-04-15T21:15:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add an include directory for the CoreFoundation framework headers to satisfy\n\n# the dependency on TargetConditionals.h\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME(SR9138) Silence \"locally defined symbol '…' imported in function '…'\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# NOTE(compnerd) this is a horrible hack to work around the fact that we do not\n\n# have a proper library target for Foundation which can link against the\n\n# CoreFoundation target.  When we gain proper CMake support for Swift, we should\n\n# be able to remove this and just use\n\n# `target_link_libraries(Foundation PRIVATE CoreFoundation)`.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test Cases\n",
        "Line" : 384,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# TODO(compnerd) honour lib vs lib64\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO(compnerd) install as a Framework as that is how swift actually is built\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CoreFoundation/CMakeLists.txt" : {
      "ObjectId" : "a8880a145ff15cd6cc2b4b2f4ea07bcff8b89228",
      "LastModified" : "2019-04-09T01:30:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO(compnerd): this should be re-enabled once CoreFoundation annotations have\n\n# been reconciled.  Hidden visibility should ensure that internal interfaces are\n\n# not accidentally exposed on platforms without exports lists and explicit\n\n# annotations (i.e. ELFish and MachO targets).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base\n",
        "Line" : 60,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# Collections\n",
        "Line" : 71,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# Error\n",
        "Line" : 75,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Locale\n",
        "Line" : 77,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# NumberDate\n",
        "Line" : 86,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Parsing\n",
        "Line" : 88,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# PlugIn\n",
        "Line" : 92,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# RunLoop\n",
        "Line" : 97,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# Stream\n",
        "Line" : 100,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# String\n",
        "Line" : 104,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# StringEncodings\n",
        "Line" : 113,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# URL\n",
        "Line" : 123,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "# FIXME: PrivateHeaders referenced by public headers\n",
        "Line" : 128,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# AppServices\n",
        "Line" : 150,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "# Base\n",
        "Line" : 153,
        "CharPositionInLine" : 16
      },
      "16" : {
        "Text" : "# Collections\n",
        "Line" : 161,
        "CharPositionInLine" : 16
      },
      "17" : {
        "Text" : "# Error\n",
        "Line" : 170,
        "CharPositionInLine" : 16
      },
      "18" : {
        "Text" : "# Locale\n",
        "Line" : 172,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# NumberDate\n",
        "Line" : 177,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "# Parsing\n",
        "Line" : 181,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "# PlugIn\n",
        "Line" : 185,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "# Preferences\n",
        "Line" : 189,
        "CharPositionInLine" : 16
      },
      "23" : {
        "Text" : "# RunLoop\n",
        "Line" : 191,
        "CharPositionInLine" : 16
      },
      "24" : {
        "Text" : "# Stream\n",
        "Line" : 196,
        "CharPositionInLine" : 16
      },
      "25" : {
        "Text" : "# String\n",
        "Line" : 198,
        "CharPositionInLine" : 16
      },
      "26" : {
        "Text" : "# URL\n",
        "Line" : 203,
        "CharPositionInLine" : 16
      },
      "27" : {
        "Text" : "# Base\n",
        "Line" : 209,
        "CharPositionInLine" : 16
      },
      "28" : {
        "Text" : "# Collections\n",
        "Line" : 220,
        "CharPositionInLine" : 16
      },
      "29" : {
        "Text" : "# Error\n",
        "Line" : 231,
        "CharPositionInLine" : 16
      },
      "30" : {
        "Text" : "# Locale\n",
        "Line" : 233,
        "CharPositionInLine" : 16
      },
      "31" : {
        "Text" : "# NumberData\n",
        "Line" : 244,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "# Parsing\n",
        "Line" : 249,
        "CharPositionInLine" : 16
      },
      "33" : {
        "Text" : "# PlugIn\n",
        "Line" : 258,
        "CharPositionInLine" : 16
      },
      "34" : {
        "Text" : "# Preferences\n",
        "Line" : 275,
        "CharPositionInLine" : 16
      },
      "35" : {
        "Text" : "# RunLoop\n\n# TODO(compnerd) make this empty on non-Mach targets\n\n# RunLoop.subproj/CFMachPort.c\n\n# RunLoop.subproj/CFMachPort_Lifetime.c\n\n# RunLoop.subproj/CFMessagePort.c\n",
        "Line" : 279,
        "CharPositionInLine" : 16
      },
      "36" : {
        "Text" : "# Stream\n",
        "Line" : 286,
        "CharPositionInLine" : 16
      },
      "37" : {
        "Text" : "# String\n",
        "Line" : 290,
        "CharPositionInLine" : 16
      },
      "38" : {
        "Text" : "# StringEncodings\n",
        "Line" : 304,
        "CharPositionInLine" : 16
      },
      "39" : {
        "Text" : "# URL\n",
        "Line" : 313,
        "CharPositionInLine" : 16
      },
      "40" : {
        "Text" : "# NOTE(compnerd) the WindowsOlsonMapping.plist and OlsonWindowsMapping.plist\n\n# are embedded Windows resources that we use to map the Windows timezone to\n\n# the Olson name.  Ensure that we rebuild on regeneration of the files.\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# NOTE(compnerd) we only support building with the dynamic CRT as using the\n\n# static CRT causes problems for users of the library.\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 42
    },
    "CoreFoundation/cmake/modules/CoreFoundationAddFramework.cmake" : {
      "ObjectId" : "53f6a1ee7e3af6fd3a652a217680c99e265720f5",
      "LastModified" : "2019-04-09T01:30:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CoreFoundation/cmake/modules/FindICU.cmake" : {
      "ObjectId" : "448414febf316521ece6541c30773b950cc7bcf0",
      "LastModified" : "2018-11-08T01:27:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libicu's libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up search paths, taking compiler into account.  Search ICU_ROOT, with\n\n# ICU_ROOT in the environment as a fallback if unset.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Find the include directory.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get the version.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find all ICU programs.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find all ICU libraries.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindICU.cmake" : {
      "ObjectId" : "864d13efac63684e006c6373d2e171b756c79a55",
      "LastModified" : "2019-04-09T01:30:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libicu's libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up search paths, taking compiler into account.  Search ICU_ROOT, with\n\n# ICU_ROOT in the environment as a fallback if unset.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Find the include directory.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get the version.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find all ICU programs.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find all ICU libraries.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindUUID.cmake" : {
      "ObjectId" : "6de7930857d7f6af5e896e9c49d7b05f910fb4b5",
      "LastModified" : "2018-11-08T01:27:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst\n\n# FindUUID\n\n# --------\n\n#\n\n# Find libuuid library and headers\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   uuid_FOUND        - true if libuuid was found\n\n#   uuid_INCLUDE_DIRS - include search path\n\n#   uuid_LIBRARIES    - libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/SwiftSupport.cmake" : {
      "ObjectId" : "0325008d096c85c762a9ad8cac71e6dfa07fa71e",
      "LastModified" : "2019-04-11T19:17:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Creates an output file map give a target and its list of sources at\n\n# output_path\n\n#\n\n# Usage:\n\n#   create_output_file_map(target sources output_path)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Returns the current architecture name in a variable\n\n#\n\n# Usage:\n\n#   get_swift_host_arch(result_var_name)\n\n#\n\n# If the current architecture is supported by Swift, sets ${result_var_name}\n\n# with the sanitized host architecture name derived from CMAKE_SYSTEM_PROCESSOR.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 2351
}