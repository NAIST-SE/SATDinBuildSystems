{
  "Repository" : "15627045",
  "Revision" : "HEAD",
  "ObjectId" : "b03d2888218a95cf0624b4a197ff9b4c066e1a3d",
  "CommitTime" : "2019-04-15T22:17:41Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3fd215549ab8f19c428a08105f8a2c60deb13a3d",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define macro to identify Windows system (without Cygwin)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update CFLAGS\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Output paths\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fluent Bit Version\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build Options\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Metrics: Experimental Feature, disabled by default on 0.12 series\n\n# but enabled in the upcoming 0.13 release. Note that development\n\n# mode enable this feature.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Proxy Plugins\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Advanced options for Flushing methods\n\n# =====================================\n\n# Flush methods defines under what kind of context/environment the plugins\n\n# flush callback is invoked. Since this is done through co-routines\n\n# there are two options available:\n\n#\n\n# FLB_FLUSH_LIBCO: set by default, use lib/flb_libco implementation which\n\n# supports amd64, arm, x86 and ppc.\n\n#\n\n# FLB_FLUSH_UCONTEXT (DEPRECATED): It uses POSIX ucontext for co-routines\n\n# implementation.\n\n# Despites this is POSIX deprecated, it's supported on Linux and BSD\n\n# systems, but specific old-toolchains do not implement it.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build-in Plugins\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable all features\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Global\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Input plugins\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Output plugins\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Tweak build targets for Windows\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Tweak build targets for macOS\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Macro to set definitions\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable Debug symbols if specified\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Is sanitize_address defined ?\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# General Headers\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# On Windows, the core uses libevent\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# mk_core is aware about jemalloc usage, we need to disable this as\n\n# fluent-bit do not use it.\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# MsgPack options\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Chunk I/O\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Lib: build the core libraries used by Fluent-Bit\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Runtime Tests (filter_kubernetes) requires HTTP Server\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# MK Core\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Build Monkey HTTP Server\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# SSL/TLS: add encryption support\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Metrics\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Systemd Journald support\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Valgrind support\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# fork(2) support\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# mtrace support\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# timespec_get() support\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# gmtoff support\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# clock_get_time() support for macOS.\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# unix socket support\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Build tools/xxd-c\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Static configuration generator (using xxd-c)\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Special definition to set the coroutine stack size\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# TD Agent options\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# strptime(2) support\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Memory Allocator\n\n# ================\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Link to Jemalloc as an external dependency\n",
        "Line" : 508,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# LibBacktrace (friendly stacktrace support)\n\n# =========================================\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Onigmo (Regex Engine)\n\n# =====================\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# LuaJIT (Scripting Support)\n\n# ==========================\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Pthread Local Storage\n\n# =====================\n\n# By default we expect the compiler already support thread local storage\n\n# through __thread type, otherwise Fluent Bit fallback to the old POSIX\n\n# pthread mode (pthread_key_t), or it can be forced setting FLB_POSIX_TLS\n\n# for testing/compatibility purposes.\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# accept(4)\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# inotify_init(2)\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Installation Directories\n\n# ========================\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Instruct CMake to build the Fluent Bit Core\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Installer Generation (Cpack)\n\n# ============================\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53
    },
    "cmake/FindJournald.cmake" : {
      "ObjectId" : "f5a3a832b2605ead4ddd65f8c599508a31921579",
      "LastModified" : "2017-06-09T18:16:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Journald library.\n\n# Once done this will define\n\n#\n\n#  JOURNALD_FOUND - system has Journald\n\n#  JOURNALD_INCLUDE_DIR - the Journald include directory\n\n#  JOURNALD_LIBRARIES - Link these to use Journald\n\n#  JOURNALD_DEFINITIONS - Compiler switches required for using Journald\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2015 David Edmundson\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# show the JOURNALD_INCLUDE_DIR and JOURNALD_LIBRARY variables only in the advanced view\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindMonkey.cmake" : {
      "ObjectId" : "483f51aac577b9f5a281066593a5c2074bd0c194",
      "LastModified" : "2019-01-17T20:31:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Monkey HTTP Server core/library\n\n# ===========================================\n\n#\n\n#   http://monkey-project.com\n\n#\n\n# Definitions:\n\n#\n\n#  - MONKEY_FOUND      : source code found\n\n#  - MONKEY_INCLUDE_DIR: root include directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/armadillo-iot.cmake" : {
      "ObjectId" : "26d9c91fb6921a15b9b9624c7c985e2030c8bdd2",
      "LastModified" : "2017-06-09T18:16:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/homebrew.cmake" : {
      "ObjectId" : "9c259dd02b5410196fd421b482d78ad051ddc723",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search homebrewed keg-only versions of Bison and Flex on macOS.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/luajit.cmake" : {
      "ObjectId" : "d1f29a74a16f12d21eca0ecaf6731fd1e51316cc",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file provides 'libluajit' target for both UNIX and Windows.\n\n#\n\n# To enable LuaJIT, include this file and link the build target:\n\n#\n\n#    include(cmake/luajit.cmake)\n\n#    target_link_libraries(fluent-bit libluajit)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Global Settings\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# luajit (UNIX)\n\n# =============\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# luajit (Windows)\n\n# ================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hook the buld definition to 'libluajit' target\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/onigmo.cmake" : {
      "ObjectId" : "1edf961456920ead447f659ef9fb9207f908fd7d",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file provides 'libonigmo' target for both UNIX and Windows.\n\n#\n\n# To enable Onigmo, include this file and link the build target:\n\n#\n\n#    include(cmake/onigmo.cmake)\n\n#    target_link_libraries(fluent-bit libonigmo)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Global Settings\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Onigmo (UNIX)\n\n# =============\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Onigmo (Windows)\n\n# ================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hook the buld definition to 'libonigmo' target\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We need this line in order to link libonigmo.lib statically.\n\n# Read onigmo/README for details.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/sanitizers-cmake/CMakeLists.txt" : {
      "ObjectId" : "d249a4db5cc67c7540f0e59606491b910ddb8a37",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of CMake-sanitizers.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n#\n\n# Copyright (c)\n\n#   2013-2015 Matt Arsenault\n\n#   2015      RWTH Aachen University, Federal Republic of Germany\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# project information\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# minimum required cmake version\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project name\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# cmake configuration\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# add tests\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/sanitizers-cmake/cmake/FindASan.cmake" : {
      "ObjectId" : "98ea7cb311ca05384d3fc1f6c3f1575bb9cc6de7",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang 3.2+ use this version. The no-omit-frame-pointer option is optional.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Older deprecated flag for ASan\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/sanitizers-cmake/cmake/FindMSan.cmake" : {
      "ObjectId" : "22d0050e97c5e42ea387c972d258e4d9578e3e44",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/sanitizers-cmake/cmake/FindSanitizers.cmake" : {
      "ObjectId" : "101bab8439f8d9560a01653a7a6795be6f8cb383",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If any of the used compiler is a GNU compiler, add a second option to static\n\n# link against the sanitizers.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If no sanitizer is enabled, return immediately.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check if this target will be compiled by exactly one compiler. Other-\n\n# wise sanitizers can't be used and a warning should be printed once.\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# If the target is compiled by no or no known compiler, give a warning.\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Add sanitizers for target.\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake/sanitizers-cmake/cmake/FindTSan.cmake" : {
      "ObjectId" : "3cba3c03b6bd1f2994e6d87e04b7119d89a9adcc",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ThreadSanitizer is not compatible with MemorySanitizer.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/sanitizers-cmake/cmake/FindUBSan.cmake" : {
      "ObjectId" : "ae103f71725f485a005d22f6323f81642e4f4ea9",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/sanitizers-cmake/cmake/sanitize-helpers.cmake" : {
      "ObjectId" : "3649b074237bb900ac18d2eb191bab5dc73ea901",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper function to get the language of a source file.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If extension is empty return. This can happen for extensionless headers\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Get shortest extension as some files can have dot in their names\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Helper function to get compilers used by a target.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if all sources for target use the same compiler. If a target uses\n\n# e.g. C and Fortran mixed and uses different compilers (e.g. clang and\n\n# gfortran) this can trigger huge problems, because different compilers may\n\n# use different implementations for sanitizers.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If expression was found, FILE is a generator-expression for an object\n\n# library. Object libraries will be ignored.\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Helper function to check compiler flags for language compiler.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# CheckFortranCompilerFlag was introduced in CMake 3.x. To be compatible\n\n# with older Cmake versions, we will check if this module is present\n\n# before we use it. Otherwise we will define Fortran coverage support as\n\n# not available.\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Helper function to test compiler flags.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Sanitizer flags are not dependend on language, but the used compiler.\n\n# So instead of searching flags foreach language, search flags foreach\n\n# compiler used.\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# If compiler is a GNU compiler, search for static flag, if\n\n# SANITIZE_LINK_STATIC is enabled.\n",
        "Line" : 125,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Helper to assign sanitizer flags for TARGET.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Get list of compilers used by target and check, if sanitizer is available\n\n# for this target. Other compiler checks like check for conflicting\n\n# compilers will be done in add_sanitizers function.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Set compile- and link-flags for target.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "cmake/sanitizers-cmake/tests/CMakeLists.txt" : {
      "ObjectId" : "8553e63267f6c07c126c109857dda106db1e8581",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of CMake-sanitizers.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n#\n\n# Copyright (c)\n\n#   2013-2015 Matt Arsenault\n\n#   2015      RWTH Aachen University, Federal Republic of Germany\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to add testcases.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove ${TESTNAME} from ${ARGV} to use ${ARGV} as ${SOURCEFILES}\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# add a new executable\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# add a testcase for executable\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Function to add testcases with asan enabled.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# search for sanitizers\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# add testcases\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/windows-setup.cmake" : {
      "ObjectId" : "ba5f14017b0fec2e3c08e38f35bd61f411e0b39e",
      "LastModified" : "2019-04-15T04:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Custom build settings for Windows (MSVC)\n\n#\n\n# Not all plugins are supported on Windows yet. This file tweaks\n\n# the build flags so that we can compile fluent-bit on it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows does not support strptime(3)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INPUT plugins\n\n# =============\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OUTPUT plugins\n\n# ==============\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FILTER plugins\n\n# ==============\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search bison and flex executables\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "1cacfc9787ea6048540960560d195908ab065305",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/hello_world/CMakeLists.txt" : {
      "ObjectId" : "2e55b75f0ed4991d44c417f7fc6a0f594e9389be",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/hello_world_cpp/CMakeLists.txt" : {
      "ObjectId" : "0aeada8ee6b7d9bce23a6bc7ebc489cddc672910",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/out_lib/CMakeLists.txt" : {
      "ObjectId" : "db04ff1c1ad1e3584cb7ca208d65403283f1b01b",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/td_cpp/CMakeLists.txt" : {
      "ObjectId" : "8ba1b7af5b8d4602f188f6fa01cf25f508e561f9",
      "LastModified" : "2019-03-29T23:40:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gen_static_conf/CMakeLists.txt" : {
      "ObjectId" : "eadc40aab1660f0fcb74d5dcea7cbe326a3e8f4a",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate and process configuration files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Output directory for generated header files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Iterate list creating custom commands for each entry\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert configuration file using xxd-c\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Generate main flb_static_conf.h header using the template\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Register the custom target, this will be a later dependency\n\n# of fluent-bit-static target\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "81d88fa4b514fd414d7b84d95bba1b6739926803",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install fluent-bit headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/LuaJIT-2.1.0-beta3/Makefile" : {
      "ObjectId" : "0f9330893fdea4de73d0da82c49aa336f4e556d5",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT top level Makefile for installation. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Note: src/Makefile has many more configurable options.\n\n#\n\n# ##### This Makefile is NOT useful for Windows! #####\n\n# For MSVC, please follow the instructions given in src/msvcbuild.bat.\n\n# For MinGW and Cygwin, cd to src and run make with the Makefile there.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#\n\n# Change the installation path as needed. This automatically adjusts\n\n# the paths in src/luaconf.h, too. Note: PREFIX must be an absolute path!\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/LuaJIT-2.1.0-beta3/src/Makefile" : {
      "ObjectId" : "f56465d1384300978c0917234ed20df6eb38845b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT Makefile. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Also works with MinGW and Cygwin on Windows.\n\n# Please check msvcbuild.bat for building with MSVC on Windows.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#############################  COMPILER OPTIONS  #############################\n\n##############################################################################\n\n# These options mainly affect the speed of the JIT compiler itself, not the\n\n# speed of the JIT-compiled code. Turn any of the optional settings on by\n\n# removing the '#' in front of them. Make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\" if you change any options.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# LuaJIT builds as a native 32 or 64 bit binary by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Use this if you want to force a 32 bit build on a 64 bit multilib OS.\n\n#CC= $(DEFAULT_CC) -m32\n\n#\n\n# Since the assembler part does NOT maintain a frame pointer, it's pointless\n\n# to slow down the C part by not omitting it. Debugging, tracebacks and\n\n# unwinding are not affected -- the assembler part has frame unwind\n\n# information and GCC emits it where needed (x64) or with -g (see CCDEBUG).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this if you want to generate a smaller binary (but it's slower):\n\n#CCOPT= -Os -fomit-frame-pointer\n\n# Note: it's no longer recommended to use -O3 with GCC 4.x.\n\n# The I-Cache bloat usually outweighs the benefits from aggressive inlining.\n\n#\n\n# Target-specific compiler options:\n\n#\n\n# x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute\n\n# the binaries to a different machine you could also use: -march=native\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Uncomment the next line to generate debug information:\n\n#CCDEBUG= -g\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Uncomment the next line to enable more warnings:\n\n#CCWARN+= -Wextra -Wdeclaration-after-statement -Wredundant-decls -Wshadow -Wpointer-arith\n\n#\n\n##############################################################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n################################  BUILD MODE  ################################\n\n##############################################################################\n\n# The default build mode is mixed mode on POSIX. On Windows this is the same\n\n# as dynamic mode.\n\n#\n\n# Mixed mode creates a static + dynamic library and a statically linked luajit.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Static mode creates a static library and a statically linked luajit.\n\n#BUILDMODE= static\n\n#\n\n# Dynamic mode creates a dynamic library and a dynamically linked luajit.\n\n# Note: this executable will only run when the library is installed!\n\n#BUILDMODE= dynamic\n\n#\n\n##############################################################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n#################################  FEATURES  #################################\n\n##############################################################################\n\n# Enable/disable these features as needed, but make sure you force a full\n\n# recompile with \"make clean\", followed by \"make\".\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Permanently disable the FFI extension to reduce the size of the LuaJIT\n\n# executable. But please consider that the FFI library is compiled-in,\n\n# but NOT loaded by default. It only allocates any memory, if you actually\n\n# make use of it.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_FFI\n\n#\n\n# Features from Lua 5.2 that are unlikely to break existing code are\n\n# enabled by default. Some other features that *might* break some existing\n\n# code (e.g. __pairs or os.execute() return values) can be enabled here.\n\n# Note: this does not provide full compatibility with Lua 5.2 at this time.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_LUA52COMPAT\n\n#\n\n# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_JIT\n\n#\n\n# Some architectures (e.g. PPC) can use either single-number (1) or\n\n# dual-number (2) mode. Uncomment one of these lines to override the\n\n# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=1\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\n\n#\n\n# Enable GC64 mode for x64.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_GC64\n\n#\n\n##############################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n############################  DEBUGGING SUPPORT  #############################\n\n##############################################################################\n\n# Enable these options as needed, but make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\".\n\n# Note that most of these are NOT suitable for benchmarking or release mode!\n\n#\n\n# Use the system provided memory allocator (realloc) instead of the\n\n# bundled memory allocator. This is slower, but sometimes helpful for\n\n# debugging. This option cannot be enabled on x64 without GC64, since\n\n# realloc usually doesn't return addresses in the right address range.\n\n# OTOH this option is mandatory for Valgrind's memcheck tool on x64 and\n\n# the only way to get useful results from it for all other architectures.\n\n#XCFLAGS+= -DLUAJIT_USE_SYSMALLOC\n\n#\n\n# This define is required to run LuaJIT under Valgrind. The Valgrind\n\n# header files must be installed. You should enable debug information, too.\n\n# Use --suppressions=lj.supp to avoid some false positives.\n\n#XCFLAGS+= -DLUAJIT_USE_VALGRIND\n\n#\n\n# This is the client for the GDB JIT API. GDB 7.0 or higher is required\n\n# to make use of it. See lj_gdbjit.c for details. Enabling this causes\n\n# a non-negligible overhead, even when not running under GDB.\n\n#XCFLAGS+= -DLUAJIT_USE_GDBJIT\n\n#\n\n# Turn on assertions for the Lua/C API to debug problems with lua_* calls.\n\n# This is rather slow -- use only while developing C libraries/embeddings.\n\n#XCFLAGS+= -DLUA_USE_APICHECK\n\n#\n\n# Turn on assertions for the whole LuaJIT VM. This significantly slows down\n\n# everything. Use only if you suspect a problem with LuaJIT itself.\n\n#XCFLAGS+= -DLUA_USE_ASSERT\n\n#\n\n##############################################################################\n\n# You probably don't need to change anything below this line!\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Host system detection.\n\n##############################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################################################################\n\n# Flags and options for host and target.\n\n##############################################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# You can override the following variables at the make command line:\n\n#   CC       HOST_CC       STATIC_CC       DYNAMIC_CC\n\n#   CFLAGS   HOST_CFLAGS   TARGET_CFLAGS\n\n#   LDFLAGS  HOST_LDFLAGS  TARGET_LDFLAGS  TARGET_SHLDFLAGS\n\n#   LIBS     HOST_LIBS     TARGET_LIBS\n\n#   CROSS    HOST_SYS      TARGET_SYS      TARGET_FLAGS\n\n#\n\n# Cross-compilation examples:\n\n#   make HOST_CC=\"gcc -m32\" CROSS=i586-mingw32msvc- TARGET_SYS=Windows\n\n#   make HOST_CC=\"gcc -m32\" CROSS=powerpc-linux-gnu-\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If left blank, minilua is built and used. You can supply an installed\n\n# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\n\n# Target system detection.\n\n##############################################################################\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################################################################\n\n# Files and pathnames.\n\n##############################################################################\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################################################################\n\n# Build mode handling.\n\n##############################################################################\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mixed mode defaults.\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Mixed mode is not supported on Windows. And static mode doesn't work well.\n\n# C modules cannot be loaded, because they bind to lua51.dll.\n",
        "Line" : 533,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#Q=\n\n#E= @:\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n# Make targets.\n\n##############################################################################\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24,
      "Errorlog" : "line 557:19 token recognition error at: '\\m'\nline 558:19 token recognition error at: '\\b'\nline 615:10 token recognition error at: '\"s| [^ ]*/dasm_\\S'\nline 616:29 token recognition error at: '\\1'\nline 617:24 token recognition error at: '\\S'\nline 618:22 token recognition error at: '\\S'\nline 619:21 token recognition error at: '\\S'\nline 714:42 token recognition error at: '\"\\n\\n##############################################################################\\n\u0000'\n"
    },
    "lib/chunkio/CMakeLists.txt" : {
      "ObjectId" : "401c4f4092c1db1e101c1ffb749432463e94a948",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CFLAGS\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set __FILENAME__\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ChunkIO options\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force Option value\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Development/Test mode\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macro to set definitions\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check if Address Sanitizer is enabled\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note that this package don't define Sanitizers_FOUND:\n\n# https://github.com/arsenm/sanitizers-cmake/issues/16\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "lib/chunkio/cmake/sanitizers-cmake/CMakeLists.txt" : {
      "ObjectId" : "d249a4db5cc67c7540f0e59606491b910ddb8a37",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of CMake-sanitizers.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n#\n\n# Copyright (c)\n\n#   2013-2015 Matt Arsenault\n\n#   2015      RWTH Aachen University, Federal Republic of Germany\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# project information\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# minimum required cmake version\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# project name\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# cmake configuration\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# add tests\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/chunkio/cmake/sanitizers-cmake/cmake/FindASan.cmake" : {
      "ObjectId" : "98ea7cb311ca05384d3fc1f6c3f1575bb9cc6de7",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Clang 3.2+ use this version. The no-omit-frame-pointer option is optional.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Older deprecated flag for ASan\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "lib/chunkio/cmake/sanitizers-cmake/cmake/FindMSan.cmake" : {
      "ObjectId" : "22d0050e97c5e42ea387c972d258e4d9578e3e44",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/chunkio/cmake/sanitizers-cmake/cmake/FindSanitizers.cmake" : {
      "ObjectId" : "a11809b0bb49b013a31e9e305a6682d479e2bcd6",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If any of the used compiler is a GNU compiler, add a second option to static\n\n# link against the sanitizers.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If no sanitizer is enabled, return immediately.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check if this target will be compiled by exactly one compiler. Other-\n\n# wise sanitizers can't be used and a warning should be printed once.\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# If the target is compiled by no known compiler, ignore it.\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Add sanitizers for target.\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "lib/chunkio/cmake/sanitizers-cmake/cmake/FindTSan.cmake" : {
      "ObjectId" : "3cba3c03b6bd1f2994e6d87e04b7119d89a9adcc",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ThreadSanitizer is not compatible with MemorySanitizer.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/chunkio/cmake/sanitizers-cmake/cmake/FindUBSan.cmake" : {
      "ObjectId" : "ae103f71725f485a005d22f6323f81642e4f4ea9",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/chunkio/cmake/sanitizers-cmake/cmake/sanitize-helpers.cmake" : {
      "ObjectId" : "610f8957420b1165a998d924c42e24b9653dc4af",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c)\n\n#   2013 Matthew Arsenault\n\n#   2015-2016 RWTH Aachen University, Federal Republic of Germany\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper function to get the language of a source file.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get shortest extension as some files can have dot in their names\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Helper function to get compilers used by a target.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check if all sources for target use the same compiler. If a target uses\n\n# e.g. C and Fortran mixed and uses different compilers (e.g. clang and\n\n# gfortran) this can trigger huge problems, because different compilers may\n\n# use different implementations for sanitizers.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# If expression was found, FILE is a generator-expression for an object\n\n# library. Object libraries will be ignored.\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Helper function to check compiler flags for language compiler.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CheckFortranCompilerFlag was introduced in CMake 3.x. To be compatible\n\n# with older Cmake versions, we will check if this module is present\n\n# before we use it. Otherwise we will define Fortran coverage support as\n\n# not available.\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Helper function to test compiler flags.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Sanitizer flags are not dependend on language, but the used compiler.\n\n# So instead of searching flags foreach language, search flags foreach\n\n# compiler used.\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If compiler is a GNU compiler, search for static flag, if\n\n# SANITIZE_LINK_STATIC is enabled.\n",
        "Line" : 120,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# Helper to assign sanitizer flags for TARGET.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get list of compilers used by target and check, if sanitizer is available\n\n# for this target. Other compiler checks like check for conflicting\n\n# compilers will be done in add_sanitizers function.\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set compile- and link-flags for target.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "lib/chunkio/cmake/sanitizers-cmake/tests/CMakeLists.txt" : {
      "ObjectId" : "8553e63267f6c07c126c109857dda106db1e8581",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of CMake-sanitizers.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n#\n\n# Copyright (c)\n\n#   2013-2015 Matt Arsenault\n\n#   2015      RWTH Aachen University, Federal Republic of Germany\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function to add testcases.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove ${TESTNAME} from ${ARGV} to use ${ARGV} as ${SOURCEFILES}\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# add a new executable\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# add a testcase for executable\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Function to add testcases with asan enabled.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# search for sanitizers\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# add testcases\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "lib/chunkio/deps/crc32/CMakeLists.txt" : {
      "ObjectId" : "8ae182348d9377e8e6c51330bd4e25fcef2560e9",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/chunkio/src/CMakeLists.txt" : {
      "ObjectId" : "b923c3b0655fb1433cc72afafe1b9dc941dec3ce",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/chunkio/tests/CMakeLists.txt" : {
      "ObjectId" : "b41ec94eeb38d6cbe99e380f18368e31c3669b7f",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prepare list of unit tests\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/chunkio/tests/lib/acutest/CMakeLists.txt" : {
      "ObjectId" : "4a741a424dd9e10e6b7f3bad30215d78098cffde",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Specify proper C runtime library:\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Specify proper C runtime library:\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "lib/chunkio/tools/CMakeLists.txt" : {
      "ObjectId" : "0fe1845f6c36db0a60e5c8f92d02e4834e3ba0a7",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/flb_libco/CMakeLists.txt" : {
      "ObjectId" : "786350de73176dfac04fef2d4398aaaf22dea446",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/jsmn/CMakeLists.txt" : {
      "ObjectId" : "3ee5421f3a7a61f04f79453a97c6c516b00f2b3c",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/libbacktrace-5a99ff7f/Makefile.am" : {
      "ObjectId" : "56a3d1b13ff55ab4e2d86cd02a8e43d4a3add4ee",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Backtrace Makefile.\n\n# Copyright (C) 2012-2018 Free Software Foundation, Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#     (1) Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#     (2) Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in\n\n#     the documentation and/or other materials provided with the\n\n#     distribution.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#     (3) The name of the author may not be used to\n\n#     endorse or promote products derived from this software without\n\n#     specific prior written permission.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n\n# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n\n# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n\n# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testsuite.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We can't use automake's automatic dependency tracking, because it\n\n# breaks when using bootstrap-lean.  Automatic dependency tracking\n\n# with GCC bootstrap will cause some of the objects to depend on\n\n# header files in prev-gcc/include, e.g., stddef.h and stdarg.h.  When\n\n# using bootstrap-lean, prev-gcc is removed after each stage.  When\n\n# running \"make install\", those header files will be gone, causing the\n\n# library to be rebuilt at install time.  That may not succeed.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These manual dependencies do not include dependencies on unwind.h,\n\n# even though that is part of GCC, because where to find it depends on\n\n# whether we are being built as a host library or a target library.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "lib/luajit-2.0.5/Makefile" : {
      "ObjectId" : "ecce9ec5f3fa8c81b19769d837552b2110213b84",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT top level Makefile for installation. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Note: src/Makefile has many more configurable options.\n\n#\n\n# ##### This Makefile is NOT useful for Windows! #####\n\n# For MSVC, please follow the instructions given in src/msvcbuild.bat.\n\n# For MinGW and Cygwin, cd to src and run make with the Makefile there.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#\n\n# Change the installation path as needed. This automatically adjusts\n\n# the paths in src/luaconf.h, too. Note: PREFIX must be an absolute path!\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/luajit-2.0.5/src/Makefile" : {
      "ObjectId" : "f7f81a4e6084e2c19fc0d29b0b9f3d76c20e5d0a",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT Makefile. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Also works with MinGW and Cygwin on Windows.\n\n# Please check msvcbuild.bat for building with MSVC on Windows.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#############################  COMPILER OPTIONS  #############################\n\n##############################################################################\n\n# These options mainly affect the speed of the JIT compiler itself, not the\n\n# speed of the JIT-compiled code. Turn any of the optional settings on by\n\n# removing the '#' in front of them. Make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\" if you change any options.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# LuaJIT builds as a native 32 or 64 bit binary by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Use this if you want to force a 32 bit build on a 64 bit multilib OS.\n\n#CC= $(DEFAULT_CC) -m32\n\n#\n\n# Since the assembler part does NOT maintain a frame pointer, it's pointless\n\n# to slow down the C part by not omitting it. Debugging, tracebacks and\n\n# unwinding are not affected -- the assembler part has frame unwind\n\n# information and GCC emits it where needed (x64) or with -g (see CCDEBUG).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this if you want to generate a smaller binary (but it's slower):\n\n#CCOPT= -Os -fomit-frame-pointer\n\n# Note: it's no longer recommended to use -O3 with GCC 4.x.\n\n# The I-Cache bloat usually outweighs the benefits from aggressive inlining.\n\n#\n\n# Target-specific compiler options:\n\n#\n\n# x86 only: it's recommended to compile at least for i686. Better yet,\n\n# compile for an architecture that has SSE2, too (-msse -msse2).\n\n#\n\n# x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute\n\n# the binaries to a different machine you could also use: -march=native\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Uncomment the next line to generate debug information:\n\n#CCDEBUG= -g\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Uncomment the next line to enable more warnings:\n\n#CCWARN+= -Wextra -Wdeclaration-after-statement -Wredundant-decls -Wshadow -Wpointer-arith\n\n#\n\n##############################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n################################  BUILD MODE  ################################\n\n##############################################################################\n\n# The default build mode is mixed mode on POSIX. On Windows this is the same\n\n# as dynamic mode.\n\n#\n\n# Mixed mode creates a static + dynamic library and a statically linked luajit.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Static mode creates a static library and a statically linked luajit.\n\n#BUILDMODE= static\n\n#\n\n# Dynamic mode creates a dynamic library and a dynamically linked luajit.\n\n# Note: this executable will only run when the library is installed!\n\n#BUILDMODE= dynamic\n\n#\n\n##############################################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n#################################  FEATURES  #################################\n\n##############################################################################\n\n# Enable/disable these features as needed, but make sure you force a full\n\n# recompile with \"make clean\", followed by \"make\".\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Permanently disable the FFI extension to reduce the size of the LuaJIT\n\n# executable. But please consider that the FFI library is compiled-in,\n\n# but NOT loaded by default. It only allocates any memory, if you actually\n\n# make use of it.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_FFI\n\n#\n\n# Features from Lua 5.2 that are unlikely to break existing code are\n\n# enabled by default. Some other features that *might* break some existing\n\n# code (e.g. __pairs or os.execute() return values) can be enabled here.\n\n# Note: this does not provide full compatibility with Lua 5.2 at this time.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_LUA52COMPAT\n\n#\n\n# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_JIT\n\n#\n\n# Some architectures (e.g. PPC) can use either single-number (1) or\n\n# dual-number (2) mode. Uncomment one of these lines to override the\n\n# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=1\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\n\n#\n\n##############################################################################\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n############################  DEBUGGING SUPPORT  #############################\n\n##############################################################################\n\n# Enable these options as needed, but make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\".\n\n# Note that most of these are NOT suitable for benchmarking or release mode!\n\n#\n\n# Use the system provided memory allocator (realloc) instead of the\n\n# bundled memory allocator. This is slower, but sometimes helpful for\n\n# debugging. This option cannot be enabled on x64, since realloc usually\n\n# doesn't return addresses in the right address range.\n\n# OTOH this option is mandatory for Valgrind's memcheck tool on x64 and\n\n# the only way to get useful results from it for all other architectures.\n\n#XCFLAGS+= -DLUAJIT_USE_SYSMALLOC\n\n#\n\n# This define is required to run LuaJIT under Valgrind. The Valgrind\n\n# header files must be installed. You should enable debug information, too.\n\n# Use --suppressions=lj.supp to avoid some false positives.\n\n#XCFLAGS+= -DLUAJIT_USE_VALGRIND\n\n#\n\n# This is the client for the GDB JIT API. GDB 7.0 or higher is required\n\n# to make use of it. See lj_gdbjit.c for details. Enabling this causes\n\n# a non-negligible overhead, even when not running under GDB.\n\n#XCFLAGS+= -DLUAJIT_USE_GDBJIT\n\n#\n\n# Turn on assertions for the Lua/C API to debug problems with lua_* calls.\n\n# This is rather slow -- use only while developing C libraries/embeddings.\n\n#XCFLAGS+= -DLUA_USE_APICHECK\n\n#\n\n# Turn on assertions for the whole LuaJIT VM. This significantly slows down\n\n# everything. Use only if you suspect a problem with LuaJIT itself.\n\n#XCFLAGS+= -DLUA_USE_ASSERT\n\n#\n\n##############################################################################\n\n# You probably don't need to change anything below this line!\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Host system detection.\n\n##############################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################################################################\n\n# Flags and options for host and target.\n\n##############################################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# You can override the following variables at the make command line:\n\n#   CC       HOST_CC       STATIC_CC       DYNAMIC_CC\n\n#   CFLAGS   HOST_CFLAGS   TARGET_CFLAGS\n\n#   LDFLAGS  HOST_LDFLAGS  TARGET_LDFLAGS  TARGET_SHLDFLAGS\n\n#   LIBS     HOST_LIBS     TARGET_LIBS\n\n#   CROSS    HOST_SYS      TARGET_SYS      TARGET_FLAGS\n\n#\n\n# Cross-compilation examples:\n\n#   make HOST_CC=\"gcc -m32\" CROSS=i586-mingw32msvc- TARGET_SYS=Windows\n\n#   make HOST_CC=\"gcc -m32\" CROSS=powerpc-linux-gnu-\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If left blank, minilua is built and used. You can supply an installed\n\n# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\n\n# Target system detection.\n\n##############################################################################\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################################################################\n\n# Files and pathnames.\n\n##############################################################################\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################################################################\n\n# Build mode handling.\n\n##############################################################################\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mixed mode defaults.\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Mixed mode is not supported on Windows. And static mode doesn't work well.\n\n# C modules cannot be loaded, because they bind to lua51.dll.\n",
        "Line" : 510,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#Q=\n\n#E= @:\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n# Make targets.\n\n##############################################################################\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24,
      "Errorlog" : "line 534:19 token recognition error at: '\\m'\nline 535:19 token recognition error at: '\\b'\nline 588:10 token recognition error at: '\"s| [^ ]*/dasm_\\S'\nline 589:29 token recognition error at: '\\1'\nline 590:24 token recognition error at: '\\S'\nline 591:22 token recognition error at: '\\S'\nline 592:21 token recognition error at: '\\S'\nline 687:42 token recognition error at: '\"\\n\\n##############################################################################\\n\u0000'\n"
    },
    "lib/mbedtls-2.14.1/CMakeLists.txt" : {
      "ObjectId" : "8386c3a7fd1d690b8b8ebccce21d66e0e1a9d915",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the test suites currently have compile errors with MSVC\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Warning string - created as a list for compatibility with CMake 2.8\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_package(Perl)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If 128-bit keys are configured for CTR_DRBG, display an appropriate warning\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If NULL Entropy is configured, display an appropriate warning\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Create a symbolic link from ${base_name} in the binary directory\n\n# to the corresponding path in the source directory.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get OS dependent path to use in `execute_process`\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# some warnings we want are not available with old GCC versions\n\n# note: starting with CMake 2.8 we could use CMAKE_C_COMPILER_VERSION\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Strictest warnings, and treat as errors\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# additional convenience targets for Unix only\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Make scripts needed for testing available in an out-of-source build.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#link_to_source(scripts)\n\n# Copy (don't link) DartConfiguration.tcl, needed for memcheck, to\n\n# keep things simple with the sed commands in the memcheck target.\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "lib/mbedtls-2.14.1/Makefile" : {
      "ObjectId" : "f4c0a00215400b97b8f0d34ac8b5758697b34a69",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Post build steps\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If 128-bit keys are configured for CTR_DRBG, display an appropriate warning\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# If NULL Entropy is configured, display an appropriate warning\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# note: for coverage testing, build with:\n\n# make CFLAGS='--coverage -g3 -O0'\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/mbedtls-2.14.1/include/CMakeLists.txt" : {
      "ObjectId" : "1b581a54ddfa9f448e7ff3cf5a6d0bec173df3d7",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make config.h available in an out-of-source build. ssl-opt.sh requires it.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/mbedtls-2.14.1/library/CMakeLists.txt" : {
      "ObjectId" : "5e69d420974a77ea911ae0f47ab5bb68299a12df",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/mbedtls-2.14.1/library/Makefile" : {
      "ObjectId" : "430c59881239ddf0cc732ee251b1efcdf1d25f95",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Also see \"include/mbedtls/config.h\"\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MicroBlaze specific options:\n\n# CFLAGS += -mno-xl-soft-mul -mxl-barrel-shift\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To compile on Plan9:\n\n# CFLAGS += -D_BSD_EXTENSION\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if were running on Windows build for Windows\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To compile as a shared library:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# all code is position-indep with mingw, avoid warning about useless flag\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set AR_DASH= (empty string) to use an ar implentation that does not accept\n\n# the - prefix for command line options (e.g. llvm-ar)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Windows shared library extension:\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Mac OS X shared library extension:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# tls\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# x509\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# crypto\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "lib/monkey/CMakeLists.txt" : {
      "ObjectId" : "60bdd05c84c873e36cb6339f3dd784ee6b3051d8",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Let's have fun!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake includes\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set default compiler options\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Monkey Version\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ============================================\n\n# ============= BUILD OPTIONS ================\n\n# ============================================\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Project\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Monkey Core\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Plugins: what should be build ?, these options\n\n# will be processed later on the plugins/CMakeLists.txt file\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Options to build Monkey with/without binary and\n\n# static/dynamic library modes (default is always just\n\n# one target binary).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If building just for a \"library\" mode, disable plugins\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Variable to be populated by plugins/CMakeLists.txt. It will contain the\n\n# code required to initialize any static plugin.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ===========================================\n\n# ============== DEPENDENCIES ===============\n\n# ===========================================\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find pthreads\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# It set's a definition and register into the mk_info.h file */\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Enable experimental (dev) HTTP/2 support\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check for accept(2) v/s accept(4)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for Linux Kqueue library emulator\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check Trace\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check Uclib library\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check Musl library\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check Backtrace support\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Check for LTTng-UST\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Use old Pthread TLS\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Valgrind support\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Use system memory allocator instead of Jemalloc\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Prepare the Jemalloc build\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Link to Jemalloc as an external dependency\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ============================================\n\n# =========== CONFIGURATION FILES=============\n\n# ============================================\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Default values for conf/monkey.conf\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Default values for conf/sites/default\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Paths\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# This mode aims to be backward compatible with older versions of Monkey where\n\n# a './configure && make' were enough to have the server running without installing\n\n# any component.\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Custom SYSCONFDIR\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Custom LOGDIR\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Custom PIDPATH\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Custom PIDFILE\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Custom WEBROOT\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Headers\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# General Headers\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Instruct CMake to build the the code base\n\n# =========================================\n\n# mk_core  : generic utilities\n\n# plugins  : plugins for mk_server\n\n# mk_server: server code base: plugins, protocols, scheduler.. (no executable)\n\n# mk_bin   : server executable\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Configuration, headers generation and others\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Install (missings ?) paths\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "lib/monkey/api/CMakeLists.txt" : {
      "ObjectId" : "f413b07d405a9ac71151ef66c86ffeec5395249b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/cmake/FindLibkqueue.cmake" : {
      "ObjectId" : "131fc98a3a3f4feeac088cee246923f4700b2c0b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/conf/CMakeLists.txt" : {
      "ObjectId" : "8ace5bae864e7d436a261cb1aa9879a0e7d004fa",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate conf/monkey.conf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate (copy) conf/monkey.mime\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate conf/sites/default\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/monkey/deps/flb_libco/CMakeLists.txt" : {
      "ObjectId" : "786350de73176dfac04fef2d4398aaaf22dea446",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/deps/rbtree/CMakeLists.txt" : {
      "ObjectId" : "739260e2cca894b8a16c4527bb9e89fca3821e89",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/fuzz/CMakeLists.txt" : {
      "ObjectId" : "48100f5f386c01e30a52612cc5a8a0139045538c",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/htdocs/CMakeLists.txt" : {
      "ObjectId" : "e8fe169679746e28fbb6cfcc16bdedb50afefa36",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/include/CMakeLists.txt" : {
      "ObjectId" : "4175d3657f5daff5d0e1f79c1b77616a2daba209",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MK_CORE\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/monkey/man/CMakeLists.txt" : {
      "ObjectId" : "1ed0dc63485e01b7602d5c181fec5be6c390a6b2",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/mk_bin/CMakeLists.txt" : {
      "ObjectId" : "b3edc2e9251fa469ff4eee4eb473752263db2feb",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/mk_core/CMakeLists.txt" : {
      "ObjectId" : "12657afdbb5d1bd7d0791b8875e8327eb899fa9f",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It set's a definition and register into the mk_core_info.h file */\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set threading system\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for full stat(2) support\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check if sys/uio.h exists\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for unistd.h\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Lookup event-loop mechanism: do we need to fallback to select(2) ?\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Validate timerfd_create()\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Validate eventfd()\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Validate memrchr()\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "lib/monkey/mk_core/deps/CMakeLists.txt" : {
      "ObjectId" : "19cc115c728a14d41e80fc1909474e0448f01b84",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/mk_core/deps/libevent/CMakeLists.txt" : {
      "ObjectId" : "7a839decf140d1fc5b66a13d8e485b8dcdb4ea71",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Libevent CMake project\n\n#\n\n# Based on initial work by:\n\n#    Alexey Ozeritsky\n\n#\n\n# Additional changes:\n\n#   Brodie Thiesfield\n\n#   Joakim Soderberg\n\n#   Trond Norbye\n\n#   Sergei Nikulov\n\n#\n\n#   Build example:\n\n#\n\n#       cd libevent\n\n#       md build\n\n#       cd build\n\n#       cmake -G \"Visual Studio 10\" ..\n\n#       start libevent.sln\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get rid of the extra default configurations\n\n# what? why would you get id of other useful build types? - Ellzey\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# only a subset of names can be used, defaults to \"beta\"\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# a list that defines what can set for EVENT_STAGE_VERSION\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# attempt to find the EVENT__STAGE_VERSION in the allowed list\n\n# of accepted stage names, the return value is stord in\n\n# EVENT__STAGE_RET\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: Add --disable-largefile     omit support for large files\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Put the libaries and binaries that get built into directories at the\n\n# top of the build tree rather than in hard-to-find leaf directories.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Setup compiler flags for coverage.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GCC specific options.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO: Add --gc-sections support. We need some checks for NetBSD to ensure this works.\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# We need to test for at least gcc 2.95 here, because older versions don't\n\n# have -fno-strict-aliasing\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Get rid of deprecated warnings for OpenSSL on OSX 10.7 and greater.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Winsock.\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check if _GNU_SOURCE is available.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Get the gethostbyname_r prototype.\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# These aren't available until Windows Vista.\n\n# But you can still link them. They just won't be found when running the exe.\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check for different inline keyword versions.\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# XXX we should functionalize these size and type sets. --elley\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Winssck.\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# we're just getting lazy now.\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Tests file offset bits.\n\n# TODO: Add AIX test for if -D_LARGE_FILES is needed.\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# XXX: Why is this here? we don't even use it. Well, we don't even use it\n\n#      on top of that, why is it set in the config.h?! IT_MAKES_NO_SENSE\n\n#      I'm commenting it out for now.\n\n#      - ellzey\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#CHECK_FILE_OFFSET_BITS()\n\n#set(EVENT___FILE_OFFSET_BITS _FILE_OFFSET_BITS)\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Verify kqueue works with pipes.\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check for sockaddr structure sizes.\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Group the source files.\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Zlib is only used for testing.\n",
        "Line" : 714,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# We use BEFORE here so we don't accidentally look in system directories\n\n# first for some previous versions of the headers that are installed.\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Generate the configure headers.\n\n# (Place them in the build dir so we don't polute the source tree with generated files).\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n# Create the libraries.\n\n#\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# TODO: Add dynamic versions of the libraries as well.\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# library exists for historical reasons; it contains the contents of\n\n# both libevent_core and libevent_extra. You shouldn’t use it; it may\n\n# go away in a future version of Libevent.\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Prepare static library to be linked to tests that need hidden symbols\n",
        "Line" : 827,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#\n\n# Samples.\n\n#\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Special sample with more than one file.\n",
        "Line" : 884,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Requires OpenSSL.\n",
        "Line" : 897,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "#\n\n# Generate Regress tests.\n\n#\n",
        "Line" : 941,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# (We require python2 to generate the regress tests)\n",
        "Line" : 946,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# While building the test suite we don't want the visibility\n\n# header trying to \"dllimport\" the symbols on windows (it\n\n# generates a ton of warnings due to different link\n\n# attributes for all of the symbols)\n",
        "Line" : 1018,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "#\n\n# Test programs.\n\n#\n",
        "Line" : 1034,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# all of these, including the cmakelists.txt should be moved\n\n# into the dirctory 'tests' first.\n\n#\n\n# doing this, we can remove all the DISABLE_TESTS stuff, and simply\n\n# do something like:\n\n#\n\n# add_custom_targets(tests)\n\n# add_executable(... EXCLUDE_FROM_ALL ...c)\n\n# add_dependencis(tests testa testb testc)\n\n# add_test(....)\n\n#\n\n# then you can just run 'make tests' instead of them all\n\n# auto-compile|running\n\n# - ellzey\n",
        "Line" : 1037,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# Create test program executables.\n",
        "Line" : 1063,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "#\n\n# We run all tests with the different backends turned on one at a time.\n\n#\n",
        "Line" : 1076,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Add event backends based on system introspection result.\n",
        "Line" : 1080,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Default environment variables turns off all event systems,\n\n# then we enable each one, one at a time when creating the tests.\n",
        "Line" : 1112,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Macro that creates the ctest test for a backend.\n",
        "Line" : 1120,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Dump events test.\n",
        "Line" : 1136,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Regress tests.\n",
        "Line" : 1158,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# Add the tests for each backend.\n",
        "Line" : 1176,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Enable this backend only.\n",
        "Line" : 1178,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Epoll has some extra settings.\n",
        "Line" : 1182,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "#\n\n# Rate limiter tests.\n\n#\n",
        "Line" : 1197,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Group limits, no connection limit.\n",
        "Line" : 1201,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Connection limit, no group limit.\n",
        "Line" : 1212,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Connection limit and group limit.\n",
        "Line" : 1221,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Connection limit and group limit with independent drain.\n",
        "Line" : 1232,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Add a \"make verify\" target, same as for autoconf.\n\n# (Important! This will unset all EVENT_NO* environment variables.\n\n#  If they are set in the shell the tests are running using simply \"ctest\" or \"make test\" will fail)\n",
        "Line" : 1244,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Windows doesn't have \"unset\". But you can use \"set VAR=\" instead.\n\n# We need to guard against the possibility taht EVENT_NOWIN32 is set, and all test failing\n\n# since no event backend being available.\n",
        "Line" : 1248,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# On some platforms doing exec(unset) as CMake does won't work, so make sure\n\n# we run the unset command in a shell instead.\n\n# First we write the script contents.\n",
        "Line" : 1278,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# Then we copy the file (this allows us to set execute permission on it)\n",
        "Line" : 1288,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# Create the target that runs the script.\n",
        "Line" : 1300,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# Coverage target name \"make verify_coverage\"\n\n# Test runner.\n\n# Output directory.\n\n# Arguments passed to test runner. \"make verify\"\n",
        "Line" : 1317,
        "CharPositionInLine" : 28
      },
      "62" : {
        "Text" : "#\n\n# Installation preparation.\n\n#\n",
        "Line" : 1328,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Allow the user to override installation directories.\n",
        "Line" : 1332,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Make sure the paths are absolute.\n",
        "Line" : 1345,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Export targets (This is used for other CMake projects to easily find the libraries and include files).\n",
        "Line" : 1353,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Generate the config file for the build-tree.\n",
        "Line" : 1358,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Generate the config file for the installation tree.\n",
        "Line" : 1371,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Calculate the relative directory from the Cmake dir.\n",
        "Line" : 1375,
        "CharPositionInLine" : 36
      },
      "69" : {
        "Text" : "# Note the EVENT_CMAKE_DIR is defined in LibeventConfig.cmake.in,\n\n# we escape it here so it's evaluated when it is included instead\n\n# so that the include dirs are givenrelative to where the\n\n# config file is located.\n",
        "Line" : 1377,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Generate version info for both build-tree and install-tree.\n",
        "Line" : 1388,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Define the public headers.\n",
        "Line" : 1393,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#\n\n# Install targets.\n\n#\n",
        "Line" : 1397,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Install compat headers\n",
        "Line" : 1407,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Install the configs.\n",
        "Line" : 1413,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Install exports for the install-tree.\n",
        "Line" : 1421,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 76
    },
    "lib/monkey/mk_core/deps/libevent/Makefile.am" : {
      "ObjectId" : "c7f1d19a1ead3b360e41ec04a3fe5ccc43583b46",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am for libevent\n\n# Copyright 2000-2007 Niels Provos\n\n# Copyright 2007-2012 Niels Provos and Nick Mathewson\n\n#\n\n# See LICENSE for copying information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the \"Release\" of the Libevent ABI.  It takes precedence over\n\n# the VERSION_INFO, so that two versions of Libevent with the same\n\n# \"Release\" are never binary-compatible.\n\n#\n\n# This number incremented once for the 2.0 release candidate, and\n\n# will increment for each series until we revise our interfaces enough\n\n# that we can seriously expect ABI compatibility between series.\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the version info for the libevent binary API.  It has three\n\n# numbers:\n\n#   Current  -- the number of the binary API that we're implementing\n\n#   Revision -- which iteration of the implementation of the binary\n\n#               API are we supplying?\n\n#   Age      -- How many previous binary API versions do we also\n\n#               support?\n\n#\n\n# To increment a VERSION_INFO (current:revision:age):\n\n#    If the ABI didn't change:\n\n#        Return (current:revision+1:age)\n\n#    If the ABI changed, but it's backward-compatible:\n\n#        Return (current+1:0:age+1)\n\n#    If the ABI changed and it isn't backward-compatible:\n\n#        Return (current+1:0:0)\n\n#\n\n# Once an RC is out, DO NOT MAKE ANY ABI-BREAKING CHANGES IN THAT SERIES\n\n# UNLESS YOU REALLY REALLY HAVE TO.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# History:          RELEASE    VERSION_INFO\n\n#  2.0.1-alpha --     2.0        1:0:0\n\n#  2.0.2-alpha --                2:0:0\n\n#  2.0.3-alpha --                2:0:0  (should have incremented; didn't.)\n\n#  2.0.4-alpha --                3:0:0\n\n#  2.0.5-beta  --                4:0:0\n\n#  2.0.6-rc    --     2.0        2:0:0\n\n#  2.0.7-rc    --     2.0        3:0:1\n\n#  2.0.8-rc    --     2.0        4:0:2\n\n#  2.0.9-rc    --     2.0        5:0:0 (ABI changed slightly)\n\n#  2.0.10-stable--    2.0        5:1:0 (No ABI change)\n\n#  2.0.11-stable--    2.0        6:0:1 (ABI changed, backward-compatible)\n\n#  2.0.12-stable--    2.0        6:1:1 (No ABI change)\n\n#  2.0.13-stable--    2.0        6:2:1 (No ABI change)\n\n#  2.0.14-stable--    2.0        6:3:1 (No ABI change)\n\n#  2.0.15-stable--    2.0        6:3:1 (Forgot to update :( )\n\n#  2.0.16-stable--    2.0        6:4:1 (No ABI change)\n\n#  2.0.17-stable--    2.0        6:5:1 (No ABI change)\n\n#  2.0.18-stable--    2.0        6:6:1 (No ABI change)\n\n#  2.0.19-stable--    2.0        6:7:1 (No ABI change)\n\n#  2.0.20-stable--    2.0        6:8:1 (No ABI change)\n\n#  2.0.21-stable--    2.0        6:9:1 (No ABI change)\n\n#\n\n# For Libevent 2.1:\n\n#  2.1.1-alpha --     2.1        1:0:0\n\n#  2.1.2-alpha --     2.1        1:0:0 (should have been 2:0:1)\n\n#  2.1.3-alpha --     2.1        3:0:0 (ABI changed slightly)\n\n#  2.1.4-alpha --     2.1        4:0:0 (ABI changed slightly)\n\n#  2.1.5-beta  --     2.1        5:0:0 (ABI changed slightly)\n\n#  2.1.6-beta  --     2.1        6:0:0 (ABI changed slightly)\n\n#  2.1.7-beta  --     2.1        6:1:0 (ABI changed slightly)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ABI version history for this package effectively restarts every time\n\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n\n#\n\n# Ideally, we would not be using RELEASE at all; instead we could just\n\n# use the VERSION_INFO field to label our backward-incompatible ABI\n\n# changes, and those would be few and far between.  Unfortunately,\n\n# Libevent still exposes far too many volatile structures in its\n\n# headers, so we pretty much have to assume that most development\n\n# series will break ABI compatibility.  For now, it's simplest just to\n\n# keep incrementing the RELEASE between series and resetting VERSION_INFO.\n\n#\n\n# Eventually, when we get to the point where the structures in the\n\n# headers are all non-changing (or not there at all!), we can shift to\n\n# a more normal worldview where backward-incompatible ABI changes are\n\n# nice and rare.  For the next couple of years, though, 'struct event'\n\n# is user-visible, and so we can pretty much guarantee that release\n\n# series won't be binary-compatible.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These sources are conditionally added by configure.ac or conditionally\n\n# included from other files.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/monkey/mk_core/deps/libevent/cmake/AddCompilerFlags.cmake" : {
      "ObjectId" : "9dc21d03adc51a5fb9aefe3099bbdf2d5939ae66",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/mk_core/deps/libevent/cmake/CheckFileOffsetBits.cmake" : {
      "ObjectId" : "12534401605c0dd7dc3ea5996b8f36a2e3c41ece",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if _FILE_OFFSET_BITS macro needed for large files\n\n# CHECK_FILE_OFFSET_BITS ()\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n# Copyright (c) 2009, Michihiro NAKAJIMA\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INCLUDE(CheckCSourceCompiles)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/monkey/mk_core/deps/libevent/cmake/CheckFunctionExistsEx.cmake" : {
      "ObjectId" : "78bc2ecc1b9c3a3a93cb3ddbe6cc62b30eecf0c6",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if a C function can be linked\n\n# CHECK_FUNCTION_EXISTS(<function> <variable>)\n\n#\n\n# Check that the <function> is provided by libraries on the system and\n\n# store the result in a <variable>.  This does not verify that any\n\n# system header file declares the function, only that it can be found\n\n# at link time (considure using CheckSymbolExists).\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/monkey/mk_core/deps/libevent/cmake/CheckFunctionKeywords.cmake" : {
      "ObjectId" : "3d968b8a6b1a552faf900a4b1180023aecb3d7c5",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/mk_core/deps/libevent/cmake/CheckPrototypeDefinition.cmake" : {
      "ObjectId" : "940d1ff0ce38bda1a873cb913f6eac2c67840b5e",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the protoype we expect is correct.\n\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n\n#\n\n#  FUNCTION - The name of the function (used to check if prototype exists)\n\n#  PROTOTYPE- The prototype to check.\n\n#  RETURN - The return value of the function.\n\n#  HEADER - The header files required.\n\n#  VARIABLE - The variable to store the result.\n\n#\n\n# Example:\n\n#\n\n# check_prototype_definition(getpwent_r\n\n#     \"struct passwd *getpwent_r(struct passwd *src, char *buf, int buflen)\"\n\n#     \"NULL\"\n\n#     \"unistd.h;pwd.h\"\n\n#     SOLARIS_GETPWENT_R)\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/monkey/mk_core/deps/libevent/cmake/CheckWaitpidSupportWNOWAIT.cmake" : {
      "ObjectId" : "1a73db37b93956151afbdd394359c5ab74291eb9",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/mk_core/deps/libevent/cmake/CheckWorkingKqueue.cmake" : {
      "ObjectId" : "47bf4e838a9174913307e4f788d815647c95502b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/mk_core/deps/libevent/cmake/CodeCoverage.cmake" : {
      "ObjectId" : "eba85b3fb77e5cb17903be8ed6f29f511b32922e",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Boost Software License - Version 1.0 - August 17th, 2003\n\n#\n\n# Permission is hereby granted, free of charge, to any person or organization\n\n# obtaining a copy of the software and accompanying documentation covered by\n\n# this license (the \"Software\") to use, reproduce, display, distribute,\n\n# execute, and transmit the Software, and to prepare derivative works of the\n\n# Software, and to permit third-parties to whom the Software is furnished to\n\n# do so, all subject to the following:\n\n# \n\n# The copyright notices in the Software and this entire statement, including\n\n# the above license grant, this restriction and the following disclaimer,\n\n# must be included in all copies of the Software, in whole or in part, and\n\n# all derivative works of the Software, unless such copies or derivative\n\n# works are solely in the form of machine-executable object code generated by\n\n# a source language processor.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\n\n# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\n\n# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2016-11-02, Azat Khuzhin\n\n# - Adopt for C compiler only (libevent)\n\n#\n\n# USAGE:\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage: \n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#  \n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCC\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors. \n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 100,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 104,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 131,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 142,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 146,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 165,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "lib/monkey/mk_core/deps/libevent/cmake/FindGit.cmake" : {
      "ObjectId" : "2abbfe4e9df6f8994294a6990a6e9deb323b4ff8",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The module defines the following variables:\n\n#   GIT_EXECUTABLE - path to git command line client\n\n#   GIT_FOUND - true if the command line client was found\n\n# Example usage:\n\n#   find_package(Git)\n\n#   if(GIT_FOUND)\n\n#     message(\"git found: ${GIT_EXECUTABLE}\")\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/monkey/mk_core/deps/libevent/cmake/VersionViaGit.cmake" : {
      "ObjectId" : "c0f83d5536d05ec5b24db96fff316b977a44cfd9",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines the following variables utilizing\n\n# git to determine the parent tag. And if found the macro\n\n# will attempt to parse them in the github tag fomat\n\n#\n\n# Usful for auto-versionin in ou CMakeLists\n\n#\n\n#  EVENT_GIT___VERSION_FOUND - Version variables foud\n\n#  EVENT_GIT___VERSION_MAJOR - Major version.\n\n#  EVENT_GIT___VERSION_MINOR - Minor version\n\n#  EVENT_GIT___VERSION_STAGE - Stage version\n\n#\n\n# Example usage:\n\n#\n\n# event_fuzzy_version_from_git()\n\n# if (EVENT_GIT___VERSION_FOUND)\n\n#    message(\"Libvent major=${EVENT_GIT___VERSION_MAJOR}\")\n\n#    message(\"        minor=${EVENT_GIT___VERSION_MINOR}\")\n\n#    message(\"        patch=${EVENT_GIT___VERSION_PATCH}\")\n\n#    message(\"        stage=${EVENT_GIT___VERSION_STAGE}\")\n\n# endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set our defaults.\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "lib/monkey/mk_core/deps/libevent/evconfig-private.h.cmake" : {
      "ObjectId" : "32f04794d28c575660745102a06e8083bf0d4656",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Enable extensions on AIX 3, Interix.  */",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Enable GNU extensions on systems that have them.  */",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Enable threading extensions on Solaris.  */",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Enable extensions on HP NonStop.  */",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Enable general extensions on Solaris.  */",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if on MINIX. */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 2 if the system does not provide POSIX.1 features except with\n   this defined. */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you need to in order for `stat' and other things to work. */",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "lib/monkey/mk_core/deps/libevent/event-config.h.cmake" : {
      "ObjectId" : "c1355be9148578b23d0d8db030594843f28d01fb",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* event-config.h\n *\n * This file was generated by cmake when the makefiles were generated.\n *\n * DO NOT EDIT THIS FILE.\n *\n * Do not rely on macros in this file existing in later versions.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Numeric representation of the version */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Version number of package */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Name of package */",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define if libevent should build without support for a debug mode */",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define if libevent should not allow replacing the mm functions */",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define if libevent should not be compiled with thread support */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the `accept4' function. */",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the `arc4random' function. */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the `arc4random_buf' function. */",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define if clock_gettime is available in libc */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define is no secure id variant is available */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the <arpa/inet.h> header file. */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to 1 if you have the `clock_gettime' function. */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the declaration of `CTL_KERN'. */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have the declaration of `KERN_ARND'. */",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the declaration of `KERN_RANDOM'. */",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define if /dev/poll is available */",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to 1 if you have the <netdb.h> header file. */",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to 1 if fd_mask type is defined */",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to 1 if the <sys/queue.h> header file defines TAILQ_FOREACH. */",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define if your system supports the epoll system calls */",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to 1 if you have the `epoll_create1' function. */",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to 1 if you have the `epoll_ctl' function. */",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to 1 if you have the `eventfd' function. */",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define if your system supports event ports */",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to 1 if you have the `fcntl' function. */",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the `getaddrinfo' function. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to 1 if you have the `getegid' function. */",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to 1 if you have the `geteuid' function. */",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* TODO: Check for different gethostname argument counts. CheckPrototypeDefinition.cmake can be used. */\n/* Define this if you have any gethostbyname_r() */",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define this if gethostbyname_r takes 3 arguments */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define this if gethostbyname_r takes 5 arguments */",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define this if gethostbyname_r takes 6 arguments */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the `getifaddrs' function. */",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have the `getnameinfo' function. */",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the `getprotobynumber' function. */",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if you have the `getservbyname' function. */",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the <ifaddrs.h> header file. */",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the `inet_ntop' function. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the `inet_pton' function. */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the `issetugid' function. */",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if you have the `kqueue' function. */",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define if the system has zlib */",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if you have the `mach_absolute_time' function. */",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if you have the <mach/mach_time.h> header file. */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have the `mmap' function. */",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the `nanosleep' function. */",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the `usleep' function. */",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Define to 1 if you have the <netinet/in6.h> header file. */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Define to 1 if you have the <netinet/in.h> header file. */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Define to 1 if you have the <netinet/tcp.h> header file. */",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define if the system has openssl */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Define to 1 if you have the `pipe' function. */",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* Define to 1 if you have the `pipe2' function. */",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* Define to 1 if you have the `poll' function. */",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* Define to 1 if you have the <poll.h> header file. */",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* Define to 1 if you have the `port_create' function. */",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* Define to 1 if you have the <port.h> header file. */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Define if we have pthreads on this system */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* Define to 1 if you have the `putenv' function. */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* Define to 1 if the system has the type `sa_family_t'. */",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* Define to 1 if you have the `select' function. */",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* Define to 1 if you have the `setenv' function. */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define if F_SETFD is defined in <fcntl.h> */",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to 1 if you have the `setrlimit' function. */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to 1 if you have the `sendfile' function. */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define if F_SETFD is defined in <fcntl.h> */",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define to 1 if you have the `sigaction' function. */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* Define to 1 if you have the `signal' function. */",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define to 1 if you have the `splice' function. */",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Define to 1 if you have the <stdarg.h> header file. */",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Define to 1 if you have the <stddef.h> header file. */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Define to 1 if you have the `strlcpy' function. */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* Define to 1 if you have the `strsep' function. */",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* Define to 1 if you have the `strtok_r' function. */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* Define to 1 if you have the `strtoll' function. */",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* Define to 1 if the system has the type `struct addrinfo'. */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* Define to 1 if the system has the type `struct in6_addr'. */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* Define to 1 if `s6_addr16' is member of `struct in6_addr'. */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to 1 if `s6_addr32' is member of `struct in6_addr'. */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define to 1 if the system has the type `struct sockaddr_in6'. */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define to 1 if `sin6_len' is member of `struct sockaddr_in6'. */",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* Define to 1 if `sin_len' is member of `struct sockaddr_in'. */",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* Define to 1 if the system has the type `struct sockaddr_storage'. */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* Define to 1 if `ss_family' is a member of `struct sockaddr_storage'. */",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* Define to 1 if `__ss_family' is a member of `struct sockaddr_storage'. */",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Define to 1 if you have the `sysctl' function. */",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Define to 1 if you have the <sys/devpoll.h> header file. */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Define to 1 if you have the <sys/epoll.h> header file. */",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* Define to 1 if you have the <sys/eventfd.h> header file. */",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* Define to 1 if you have the <sys/event.h> header file. */",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Define to 1 if you have the <sys/ioctl.h> header file. */",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* Define to 1 if you have the <sys/mman.h> header file. */",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "/* Define to 1 if you have the <sys/param.h> header file. */",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "/* Define to 1 if you have the <sys/queue.h> header file. */",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "/* Define to 1 if you have the <sys/resource.h> header file. */",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "/* Define to 1 if you have the <sys/select.h> header file. */",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "/* Define to 1 if you have the <sys/sendfile.h> header file. */",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "/* Define to 1 if you have the <sys/socket.h> header file. */",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "/* Define to 1 if you have the <sys/sysctl.h> header file. */",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "/* Define to 1 if you have the <sys/timerfd.h> header file. */",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "/* Define to 1 if you have the <sys/time.h> header file. */",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "/* Define to 1 if you have the <sys/uio.h> header file. */",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "/* Define to 1 if you have the <sys/wait.h> header file. */",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "/* Define if TAILQ_FOREACH is defined in <sys/queue.h> */",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "/* Define if timeradd is defined in <sys/time.h> */",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "/* Define if timerclear is defined in <sys/time.h> */",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "/* Define if timercmp is defined in <sys/time.h> */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "/* Define to 1 if you have the `timerfd_create' function. */",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "/* Define if timerisset is defined in <sys/time.h> */",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "/* Define to 1 if the system has the type `uint8_t'. */",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "/* Define to 1 if the system has the type `uint16_t'. */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "/* Define to 1 if the system has the type `uint32_t'. */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "/* Define to 1 if the system has the type `uint64_t'. */",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "/* Define to 1 if the system has the type `uintptr_t'. */",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "/* Define to 1 if you have the `umask' function. */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "/* Define to 1 if you have the `unsetenv' function. */",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "/* Define to 1 if you have the `vasprintf' function. */",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "/* Define if kqueue works correctly with pipes */",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "/* Define to necessary symbol if this constant uses a non-standard name on your system. */\n/* XXX: Hello, this isn't even used, nor is it defined anywhere... - Ellzey */",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "/* The size of `pthread_t', as computed by sizeof. */",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "/* The size of a `int', as computed by sizeof. */",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "/* The size of a `long', as computed by sizeof. */",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "/* The size of a `long long', as computed by sizeof. */",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "/* The size of `off_t', as computed by sizeof. */",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "/* The size of a `short', as computed by sizeof. */",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "/* The size of `size_t', as computed by sizeof. */",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "/* The size of `socklen_t', as computed by sizeof. */",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "/* The size of 'void *', as computer by sizeof */",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "/* set an alias for whatever __func__ __FUNCTION__ is, what sillyness */",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */\n/* Ellzey is not satisfied */",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */\n/* lolwut? - ellzey */",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "/* why not c++?\n *\n *  and are we really expected to use EVENT__inline everywhere,\n *  shouldn't we just do:\n *     ifdef EVENT__inline\n *     define inline EVENT__inline\n *\n * - Ellzey\n */",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "/* Define to `int' if <sys/tyes.h> does not define. */",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "/* Define to `unsigned' if <sys/types.h> does not define. */",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "/* Define to unsigned int if you dont have it */",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "/* Define to `int' if <sys/types.h> does not define. */",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "/* Define to 1 if you have ERR_remove_thread_stat(). */",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "/* Define if waitpid() supports WNOWAIT */",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 161
    },
    "lib/monkey/mk_core/include/CMakeLists.txt" : {
      "ObjectId" : "29400d7b8e1d89b447542061a19764884799875a",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install headers\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/monkey/mk_server/CMakeLists.txt" : {
      "ObjectId" : "8c1a6f198570030e6d56377b77d27b743e06c1c2",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always build a static library, thats our core :)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Linux Kqueue emulation\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/monkey/plugins/CMakeLists.txt" : {
      "ObjectId" : "6f7c46cacbf643f5eafd64ccccd364833303fe87",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CHECK_STATIC_PLUGIN: Check if a plugin will be linked statically\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MONKEY_PLUGIN: Used by plugins to register and create the targets\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MK_BUILD_PLUGIN: This macro determinate if the plugin is enabled through the\n\n# option MK_PLUGIN_NAME defined on the root CMakeLists.txt\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if the plugin is enabled\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Is this a static plugin ?\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Let Monkey and CMake aware about this is a static plugin. A static plugin\n\n# requires a different handling: link the object and register the plugin\n\n# struct reference on mk_static_plugins.h\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# append message to stdout\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Try to configure/build all plugins\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate include/monkey/mk_static_plugins.h\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generate conf/plugins.load\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "lib/monkey/plugins/auth/CMakeLists.txt" : {
      "ObjectId" : "a6fd27a06cd5b2144fbd6fc24898e15f23adcf5b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/auth/tools/CMakeLists.txt" : {
      "ObjectId" : "63b445cf711e0358206af82a8be8ed6df54fa504",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/cgi/CMakeLists.txt" : {
      "ObjectId" : "121144aa10b8cc206ed929ec198bae2f35b1cd9f",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/cheetah/CMakeLists.txt" : {
      "ObjectId" : "ca760c33790bba12b646b9fd78f59da1d3e9ba2c",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/cheetah/conf/CMakeLists.txt" : {
      "ObjectId" : "b7224f3513422c3445da1e08bacba40e13ae4b64",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/dirlisting/CMakeLists.txt" : {
      "ObjectId" : "7432e1091151129c37944df5e4a351cf28f99feb",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/dirlisting/conf/CMakeLists.txt" : {
      "ObjectId" : "4faf80a4d573c2b1edd69d9c304d1a5b8eb063ee",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/fastcgi/CMakeLists.txt" : {
      "ObjectId" : "46056eead7c5761cb9ffeacb03b06cd453f92a11",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/fastcgi/conf/CMakeLists.txt" : {
      "ObjectId" : "0623bf68b650b455418381fb12c70cdbd6084037",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/liana/CMakeLists.txt" : {
      "ObjectId" : "1f3797dcd99c3702a8431620f790a8a921f33dfe",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/logger/CMakeLists.txt" : {
      "ObjectId" : "156a0847f62fb67326a0c1184b37eb744234f984",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Validate splice()\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/monkey/plugins/logger/conf/CMakeLists.txt" : {
      "ObjectId" : "2c4e9b069d1a29333583e389baf623132e3e1c83",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/mandril/CMakeLists.txt" : {
      "ObjectId" : "ba2e957178e9bc79ed471680b84b5ce9a87112d4",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/mandril/conf/CMakeLists.txt" : {
      "ObjectId" : "44e95175c28b9480a9540aaf723f51c783493558",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/tls/CMakeLists.txt" : {
      "ObjectId" : "2bde86cacf2e96a55ac33848bf5396b2d8a96a17",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/monkey/plugins/tls/conf/CMakeLists.txt" : {
      "ObjectId" : "c1886d340c442b893d15253496cf019a8c0c0fb6",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/msgpack-3.1.1/CMakeLists.txt" : {
      "ObjectId" : "01f3122574cbf6f7b5765e749384d48b4735286b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add alias for subdirectories\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# enable regression testing\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MEMORYCHECK_COMMAND_OPTIONS needs to place prior to CTEST_MEMORYCHECK_COMMAND\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Doxygen\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/msgpack-3.1.1/Files.cmake" : {
      "ObjectId" : "d3a204fbb6f3416c05672ae7cca879de29766d96",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/onigmo/Makefile.am" : {
      "ObjectId" : "a6b01dcaf7aa891e323108c11c9e625e662146dd",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Makefile.am for Onigmo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# character-types-table source generator\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TEST\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(srcdir)/testc.c: $(srcdir)/test.rb $(srcdir)/testconv.rb\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#$(srcdir)/testu.c: $(srcdir)/test.rb $(srcdir)/testconvu.rb\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#$(srcdir)/win32/testc.c: $(srcdir)/test.rb $(srcdir)/testconv.rb\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Python TEST\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# lcov\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Collect coverage data and write to coverage.info, then create HTML output\n\n# in the coverage directory.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Clear coverage data.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## END OF FILE\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "lib/onigmo/sample/Makefile.am" : {
      "ObjectId" : "6bca32a550cc5f4e997c28ee839ef539bf9dd198",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/onigmo/tool/Makefile" : {
      "ObjectId" : "4b1a3775c3e55ff6562914041dfeeceb25b90e3c",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/onigmo/win32/Makefile" : {
      "ObjectId" : "0e21c4f47f0d7b4d4e2d62a247ce9b7fc04762eb",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Onigmo Makefile for Win32\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Comment out the next line, if you don't want to use LTCG.\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Comment out the next line, if you don't want to use multiprocess build.\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable the next line, if you want to enable .pdb file on release build.\r\n\n#ENABLE_PDB = 1\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable the next line, if you want to use a .def file.\r\n\n#DEFFILE = onigmo.def\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set ARCH. \"x64\" or \"x86\".\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the version of cl.exe.\r\n\n#  1. Write the version to a work file (mscver$(_NMAKE_VER).~).\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  2. Include it.\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  3. Clean up.\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable multiprocess build on VC2010+.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Debug Build\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Enable debug information.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Debug flags. (see regint.h)\r\n\n#CFLAGS = $(CFLAGS) -DONIG_DEBUG_PARSE_TREE -DONIG_DEBUG_COMPILE -DONIG_DEBUG_SEARCH -DONIG_DEBUG_MATCH -DONIG_DONT_OPTIMIZE\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# DEBUG\r\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Release Build\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Use LTCG (Link Time Code Generation) on VC++ 7.0 or later.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DEBUG\r\n",
        "Line" : 100,
        "CharPositionInLine" : 7
      },
      "17" : {
        "Text" : "# Use a .def file to export APIs.\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# batch-mode inference rules\r\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# targets\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#$(WORKDIR)\\koi8.obj:       $(encdir)\\koi8.c   regenc.h win32\\config.h\r\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Tests\r\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C library test\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C library test (Unicode)\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# POSIX C library test\r\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Python test\r\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#$(testc)u.c: test.rb testconvu.rb\r\n\n#\truby -Ke testconvu.rb test.rb > $@\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27,
      "Errorlog" : "line 124:12 token recognition error at: '\\s'\nline 128:26 token recognition error at: '\\e'\nline 128:48 token recognition error at: '\\s'\nline 129:12 token recognition error at: '\\w'\nline 131:26 token recognition error at: '\\i'\nline 131:53 token recognition error at: '\\i'\nline 132:12 token recognition error at: '\\i'\nline 132:39 token recognition error at: '\\i'\nline 133:12 token recognition error at: '\\i'\nline 133:39 token recognition error at: '\\i'\nline 134:12 token recognition error at: '\\i'\nline 134:39 token recognition error at: '\\i'\nline 135:12 token recognition error at: '\\i'\nline 135:39 token recognition error at: '\\i'\nline 136:12 token recognition error at: '\\i'\nline 136:39 token recognition error at: '\\i'\nline 137:12 token recognition error at: '\\i'\nline 137:39 token recognition error at: '\\i'\nline 138:12 token recognition error at: '\\i'\nline 140:26 token recognition error at: '\\a'\nline 140:47 token recognition error at: '\\u'\nline 141:12 token recognition error at: '\\u'\nline 142:12 token recognition error at: '\\u'\nline 142:36 token recognition error at: '\\u'\nline 143:12 token recognition error at: '\\u'\nline 143:36 token recognition error at: '\\u'\nline 145:12 token recognition error at: '\\e'\nline 145:34 token recognition error at: '\\e'\nline 145:56 token recognition error at: '\\b'\nline 146:12 token recognition error at: '\\g'\nline 147:12 token recognition error at: '\\k'\nline 147:34 token recognition error at: '\\k'\nline 148:12 token recognition error at: '\\w'\nline 148:40 token recognition error at: '\\w'\nline 149:12 token recognition error at: '\\w'\nline 149:40 token recognition error at: '\\w'\nline 150:12 token recognition error at: '\\w'\nline 150:40 token recognition error at: '\\w'\nline 152:26 token recognition error at: '\\o'\nline 175:65 token recognition error at: '\\u'\nline 181:60 token recognition error at: '\\u'\nline 207:57 token recognition error at: '\\c'\nline 208:57 token recognition error at: '\\c'\nline 209:57 token recognition error at: '\\c'\nline 210:57 token recognition error at: '\\c'\nline 211:69 token recognition error at: '\\c'\nline 212:69 token recognition error at: '\\c'\nline 213:69 token recognition error at: '\\c'\nline 214:69 token recognition error at: '\\c'\nline 215:70 token recognition error at: '\\c'\nline 216:54 token recognition error at: '\\c'\nline 217:67 token recognition error at: '\\c'\nline 218:59 token recognition error at: '\\c'\nline 219:10 token recognition error at: '\\s'\nline 219:54 token recognition error at: '\\c'\nline 221:10 token recognition error at: '\\a'\nline 221:36 token recognition error at: '\\a'\nline 221:59 token recognition error at: '\\c'\nline 222:10 token recognition error at: '\\u'\nline 222:36 token recognition error at: '\\u'\nline 222:70 token recognition error at: '\\c'\nline 222:89 token recognition error at: '\\u'\nline 222:97 token recognition error at: '\\c'\nline 222:118 token recognition error at: '\\u'\nline 223:10 token recognition error at: '\\u'\nline 223:36 token recognition error at: '\\u'\nline 223:59 token recognition error at: '\\c'\nline 224:10 token recognition error at: '\\u'\nline 224:36 token recognition error at: '\\u'\nline 224:62 token recognition error at: '\\c'\nline 225:10 token recognition error at: '\\u'\nline 225:36 token recognition error at: '\\u'\nline 225:62 token recognition error at: '\\c'\nline 226:10 token recognition error at: '\\u'\nline 226:36 token recognition error at: '\\u'\nline 226:62 token recognition error at: '\\c'\nline 227:10 token recognition error at: '\\u'\nline 227:36 token recognition error at: '\\u'\nline 227:62 token recognition error at: '\\c'\nline 228:10 token recognition error at: '\\e'\nline 228:36 token recognition error at: '\\e'\nline 228:60 token recognition error at: '\\c'\nline 228:79 token recognition error at: '\\j'\nline 228:83 token recognition error at: '\\p'\nline 229:10 token recognition error at: '\\e'\nline 229:36 token recognition error at: '\\e'\nline 229:60 token recognition error at: '\\c'\nline 230:10 token recognition error at: '\\e'\nline 230:36 token recognition error at: '\\e'\nline 230:60 token recognition error at: '\\c'\nline 231:10 token recognition error at: '\\s'\nline 231:36 token recognition error at: '\\s'\nline 231:58 token recognition error at: '\\s'\nline 231:85 token recognition error at: '\\c'\nline 231:104 token recognition error at: '\\j'\nline 231:108 token recognition error at: '\\p'\nline 232:10 token recognition error at: '\\w'\nline 232:37 token recognition error at: '\\w'\nline 232:61 token recognition error at: '\\s'\nline 232:88 token recognition error at: '\\c'\nline 232:107 token recognition error at: '\\j'\nline 232:111 token recognition error at: '\\p'\nline 233:10 token recognition error at: '\\i'\nline 233:37 token recognition error at: '\\i'\nline 233:65 token recognition error at: '\\c'\nline 234:10 token recognition error at: '\\i'\nline 234:37 token recognition error at: '\\i'\nline 234:65 token recognition error at: '\\c'\nline 235:10 token recognition error at: '\\i'\nline 235:37 token recognition error at: '\\i'\nline 235:65 token recognition error at: '\\c'\nline 236:10 token recognition error at: '\\i'\nline 236:37 token recognition error at: '\\i'\nline 236:65 token recognition error at: '\\c'\nline 237:10 token recognition error at: '\\i'\nline 237:37 token recognition error at: '\\i'\nline 237:65 token recognition error at: '\\c'\nline 238:10 token recognition error at: '\\i'\nline 238:37 token recognition error at: '\\i'\nline 238:65 token recognition error at: '\\c'\nline 239:10 token recognition error at: '\\i'\nline 239:37 token recognition error at: '\\i'\nline 239:65 token recognition error at: '\\c'\nline 240:10 token recognition error at: '\\i'\nline 240:37 token recognition error at: '\\i'\nline 240:65 token recognition error at: '\\c'\nline 241:10 token recognition error at: '\\i'\nline 241:37 token recognition error at: '\\i'\nline 241:65 token recognition error at: '\\c'\nline 242:10 token recognition error at: '\\i'\nline 242:37 token recognition error at: '\\i'\nline 242:66 token recognition error at: '\\c'\nline 243:10 token recognition error at: '\\i'\nline 243:37 token recognition error at: '\\i'\nline 243:66 token recognition error at: '\\c'\nline 244:10 token recognition error at: '\\i'\nline 244:37 token recognition error at: '\\i'\nline 244:66 token recognition error at: '\\c'\nline 245:10 token recognition error at: '\\i'\nline 245:37 token recognition error at: '\\i'\nline 245:66 token recognition error at: '\\c'\nline 246:10 token recognition error at: '\\i'\nline 246:37 token recognition error at: '\\i'\nline 246:66 token recognition error at: '\\c'\nline 247:10 token recognition error at: '\\i'\nline 247:37 token recognition error at: '\\i'\nline 247:66 token recognition error at: '\\c'\nline 249:10 token recognition error at: '\\k'\nline 249:36 token recognition error at: '\\k'\nline 249:60 token recognition error at: '\\c'\nline 250:10 token recognition error at: '\\k'\nline 250:36 token recognition error at: '\\k'\nline 250:60 token recognition error at: '\\c'\nline 251:10 token recognition error at: '\\w'\nline 251:38 token recognition error at: '\\w'\nline 251:68 token recognition error at: '\\c'\nline 252:10 token recognition error at: '\\w'\nline 252:38 token recognition error at: '\\w'\nline 252:68 token recognition error at: '\\c'\nline 253:10 token recognition error at: '\\w'\nline 253:38 token recognition error at: '\\w'\nline 253:68 token recognition error at: '\\c'\nline 254:10 token recognition error at: '\\w'\nline 254:38 token recognition error at: '\\w'\nline 254:68 token recognition error at: '\\c'\nline 255:10 token recognition error at: '\\w'\nline 255:38 token recognition error at: '\\w'\nline 255:68 token recognition error at: '\\c'\nline 256:10 token recognition error at: '\\w'\nline 256:38 token recognition error at: '\\w'\nline 256:68 token recognition error at: '\\c'\nline 257:10 token recognition error at: '\\b'\nline 257:36 token recognition error at: '\\b'\nline 257:60 token recognition error at: '\\c'\nline 258:10 token recognition error at: '\\g'\nline 258:36 token recognition error at: '\\g'\nline 258:63 token recognition error at: '\\c'\nline 260:10 token recognition error at: '\\o'\nline 260:28 token recognition error at: '\\o'\nline 301:21 token recognition error at: '\\m'\nline 302:16 token recognition error at: '\\m'\nline 309:52 token recognition error at: '\\s'\nline 309:59 token recognition error at: '\\s'\nline 310:52 token recognition error at: '\\s'\nline 310:59 token recognition error at: '\\p'\nline 311:52 token recognition error at: '\\s'\nline 312:52 token recognition error at: '\\s'\nline 312:59 token recognition error at: '\\l'\nline 313:52 token recognition error at: '\\s'\nline 313:59 token recognition error at: '\\s'\nline 314:52 token recognition error at: '\\s'\nline 314:59 token recognition error at: '\\e'\nline 315:52 token recognition error at: '\\s'\nline 315:59 token recognition error at: '\\s'\nline 316:52 token recognition error at: '\\s'\nline 316:59 token recognition error at: '\\c'\n"
    },
    "lib/rbtree/CMakeLists.txt" : {
      "ObjectId" : "739260e2cca894b8a16c4527bb9e89fca3821e89",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/sqlite-amalgamation-3240000/CMakeLists.txt" : {
      "ObjectId" : "b0337b49414de0dcf10375df82c7312be12b4e6a",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "cb26e1c5e1bae6b05b7eceb5c029fd070b709141",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# REGISTER_IN_PLUGIN\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# REGISTER_OUT_PLUGIN\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# REGISTER_FILTER_PLUGIN\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FLB_PLUGIN: used by plugins to perform registration and linking\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ======================\n\n#  Plugins Registration\n\n# ======================\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These plugins works only on Linux\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# FILTERS\n\n# =======\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Register external input and output plugins\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate the header from the template\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "plugins/filter_grep/CMakeLists.txt" : {
      "ObjectId" : "056b940920e29047041c196c6807218ee88fb49b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_kubernetes/CMakeLists.txt" : {
      "ObjectId" : "7a32007c806c865d05ca646d071df16c427bbec3",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_lua/CMakeLists.txt" : {
      "ObjectId" : "745e74aff574dab1eb6636578d5c7b0b7450ad46",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_modify/CMakeLists.txt" : {
      "ObjectId" : "e63bf25b240ba4886b7b0b05dab6c240c3335852",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_nest/CMakeLists.txt" : {
      "ObjectId" : "a78f591b2c5dfcc270c167e2afa595c8ec5e0483",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_parser/CMakeLists.txt" : {
      "ObjectId" : "e9a2d8a7f1aebff2c63910f0eef43554bcb928c1",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_record_modifier/CMakeLists.txt" : {
      "ObjectId" : "d971fa203e0df2718ee8b2246c22c18e1e25ea34",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_stdout/CMakeLists.txt" : {
      "ObjectId" : "7c7794d72070349f3f5e1b6741228adbab9c8d50",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/filter_throttle/CMakeLists.txt" : {
      "ObjectId" : "adc7b8f4c37137a2084401247ee0ef92106be753",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_cpu/CMakeLists.txt" : {
      "ObjectId" : "8efdb3d4a1a5758241dda38cd92aa2d8c67c7d7f",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_disk/CMakeLists.txt" : {
      "ObjectId" : "a969ad47e4eba36ebc170c38ca0b8565c71aedb1",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_dummy/CMakeLists.txt" : {
      "ObjectId" : "52b03a2c85fb9c3a3f3aab131bf2a33375597364",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_exec/CMakeLists.txt" : {
      "ObjectId" : "73b601dcd442e28d5bf55158f4680f6da5173bce",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_forward/CMakeLists.txt" : {
      "ObjectId" : "ce4f6272839d7ef9f4e88c10dc2553df0a809fa0",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_head/CMakeLists.txt" : {
      "ObjectId" : "2410c9ebedeb486049c025062afb66eadafb3152",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_health/CMakeLists.txt" : {
      "ObjectId" : "afb509ece62c8afa3c6a84e005483b0c9991f099",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_http/CMakeLists.txt" : {
      "ObjectId" : "f6a629213329a171bfb375c3c05ffeac3ad804e8",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration files\n\n# ===================\n\n# Default values for conf/in_http.conf\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Virtual Host\n\n# ============\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/in_kmsg/CMakeLists.txt" : {
      "ObjectId" : "a4272294d09aace6a08c65d1f34980f430d41e5b",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_lib/CMakeLists.txt" : {
      "ObjectId" : "87a19c5b29edec05ffcc6b9e21c99f5bf8de4866",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: there is something wrong when linking objects and this\n\n# static plugin, I should not require to link to a specific symbol\n\n# if the object was already linked from fluent-bit core on src/, also\n\n# jsmn should not be required.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/in_mem/CMakeLists.txt" : {
      "ObjectId" : "613abd69f80ef9f80f0ab455a02ff0abbd9507eb",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_mqtt/CMakeLists.txt" : {
      "ObjectId" : "53259d5418dd49dedcce57a18e0cb1abc0155b70",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_netif/CMakeLists.txt" : {
      "ObjectId" : "952e7b3c835caa7e961828d9cc89cd836f4ceec3",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_proc/CMakeLists.txt" : {
      "ObjectId" : "92f1071fc023fe68f577ee6d00f470d17ec12e15",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_random/CMakeLists.txt" : {
      "ObjectId" : "2cb59e83dac2e7ebfad802dcaba699f13a9b4061",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_serial/CMakeLists.txt" : {
      "ObjectId" : "cf15742c295e14eeee17530e811cffdec78115ef",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_stdin/CMakeLists.txt" : {
      "ObjectId" : "3c2e2bdfedb1adcc21a31ea366c6156a0c916d08",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: there is something wrong when linking objects and this\n\n# static plugin, I should not require to link to a specific symbol\n\n# if the object was already linked from fluent-bit core on src/, also\n\n# jsmn should not be required.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/in_storage_backlog/CMakeLists.txt" : {
      "ObjectId" : "ae2da63417e8004fc823ddb244dd120ba9aab9dc",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_stream_processor/CMakeLists.txt" : {
      "ObjectId" : "fa6a4b408ef9a18392e00696dce3b0949b212900",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_syslog/CMakeLists.txt" : {
      "ObjectId" : "88f698b1206527b7a8cd12986c23876257a8d8e1",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_systemd/CMakeLists.txt" : {
      "ObjectId" : "5244276cbb0d581548bc8b890c62401a464ec5b1",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_tail/CMakeLists.txt" : {
      "ObjectId" : "db53d1834577a725c20270ebd4d1bde171444710",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/in_tcp/CMakeLists.txt" : {
      "ObjectId" : "df6763cd6d84fd535ed9ba580b67c3f4f81b34c9",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_azure/CMakeLists.txt" : {
      "ObjectId" : "d8a5ba5e7561e33eceb6c3ec47b1d2e6e0fbc7e6",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_bigquery/CMakeLists.txt" : {
      "ObjectId" : "042b71bec2a8f3540c8e8db18aa6e96de9b2979a",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_counter/CMakeLists.txt" : {
      "ObjectId" : "63f205699f87e533fe39d94c03082d64b0159007",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_es/CMakeLists.txt" : {
      "ObjectId" : "4fad4f27cecf95926a55bc8ce3b2bda74b91e0f8",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_exit/CMakeLists.txt" : {
      "ObjectId" : "d9b7168e2d5c8ddf344fe28faeb1857277411043",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_file/CMakeLists.txt" : {
      "ObjectId" : "8db7675a485bf013ec5ba723359ca4c8fdeb8015",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_flowcounter/CMakeLists.txt" : {
      "ObjectId" : "7699b196abe016d9b6d4ba31fcedf662cbb2bf67",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_forward/CMakeLists.txt" : {
      "ObjectId" : "08f7a2800573671a867fd4932d0690b6d69db453",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_gelf/CMakeLists.txt" : {
      "ObjectId" : "7a880d470f14a883416e0425aad4d555ef7caace",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_http/CMakeLists.txt" : {
      "ObjectId" : "2165610174f43e3b7429f885cf716704a0138979",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_influxdb/CMakeLists.txt" : {
      "ObjectId" : "75d85a6b5882506d23cb948e88f20b134729e424",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_kafka/CMakeLists.txt" : {
      "ObjectId" : "34128cff44333ca360b6b0e09cb4f7f96e101877",
      "LastModified" : "2019-04-15T04:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build librdkafka\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# librdkafka headers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fluent Bit Kafka Output plugin\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/out_kafka/librdkafka-0.11.6/CMakeLists.txt" : {
      "ObjectId" : "ec37ee5311c17013bbf3d96f9e6d2bfd48f514d2",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options. No 'RDKAFKA_' prefix to match old C++ code. {\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This option doesn't affect build in fact, only C code\n\n# (see 'rd_kafka_version_str'). In CMake the build type feature usually used\n\n# (like Debug, Release, etc.).\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ZLIB {\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# }\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# LibDL {\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# }\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# WITH_PLUGINS {\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# }\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# OpenSSL {\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# option from 'h2o' parent project\n",
        "Line" : 46,
        "CharPositionInLine" : 21
      },
      "10" : {
        "Text" : "# }\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# SASL {\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# }\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# }\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# In:\n\n# * TRYCOMPILE_SRC_DIR\n\n# Out:\n\n# * HAVE_ATOMICS_32\n\n# * HAVE_ATOMICS_32_SYNC\n\n# * HAVE_ATOMICS_64\n\n# * HAVE_ATOMICS_64_SYNC\n\n# * HAVE_REGEX\n\n# * HAVE_STRNDUP\n\n# * LINK_ATOMIC\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# In:\n\n# * WITHOUT_OPTIMIZATION\n\n# * ENABLE_DEVEL\n\n# * ENABLE_REFCNT_DEBUG\n\n# * ENABLE_SHAREDPTR_DEBUG\n\n# * HAVE_ATOMICS_32\n\n# * HAVE_ATOMICS_32_SYNC\n\n# * HAVE_ATOMICS_64\n\n# * HAVE_ATOMICS_64_SYNC\n\n# * WITH_ZLIB\n\n# * WITH_SSL\n\n# * WITH_SASL\n\n# * HAVE_REGEX\n\n# * HAVE_STRNDUP\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Installation (https://github.com/forexample/package-example) {\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# In:\n\n#   * targets_export_name\n\n#   * PROJECT_NAME\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# }\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "plugins/out_kafka/librdkafka-0.11.6/Makefile" : {
      "ObjectId" : "b0663c335cbf110c761bf4847cea97d735137494",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Jenkins CI integration\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_kafka/librdkafka-0.11.6/examples/CMakeLists.txt" : {
      "ObjectId" : "a72e457cbf9a70d4e4825f06ccff0a9267c04c6f",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The targets below has Unix include dirs and do not compile on Windows.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_kafka/librdkafka-0.11.6/examples/Makefile" : {
      "ObjectId" : "d3e08328c6615df1468a599854b6295a7a820f86",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# librdkafka must be compiled with -gstrict-dwarf, but rdkafka_example must not,\n\n# due to some clang bug on OSX 10.9\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_kafka/librdkafka-0.11.6/packaging/cmake/try_compile/rdkafka_setup.cmake" : {
      "ObjectId" : "b5a3535cf71d06055e816d632c86b73a057e423f",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Atomic 32 tests {\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# }\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Atomic 64 tests {\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# }\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/out_kafka/librdkafka-0.11.6/packaging/rpm/Makefile" : {
      "ObjectId" : "24e9ae6ed6d9a16f8a71dfbddb61b89a59d53d69",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Jenkins CI integration\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare ubuntu 14.04 for building RPMs with mock.\n\n#  - older versions of mock needs the config file to reside in /etc/mock,\n\n#    so we copy it there.\n\n#  - add a mock system group (if not already exists)\n\n#  - add the current user to the mock group.\n\n#  - prepare mock environment with some needed packages.\n\n# NOTE: This target should be run with sudo.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/out_kafka/librdkafka-0.11.6/src-cpp/CMakeLists.txt" : {
      "ObjectId" : "a6221adba6f07471318586b02de5900fe128b006",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Support '#include <rdkafcpp.h>'\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_kafka/librdkafka-0.11.6/src-cpp/Makefile" : {
      "ObjectId" : "c55007deb19d1931f4464f0ad8f9f5f604014418",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# No linker script/symbol hiding for C++ library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OSX and Cygwin requires linking required libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ignore previously defined library dependencies for the C library,\n\n# we'll get those dependencies through the C library linkage.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/out_kafka/librdkafka-0.11.6/src/CMakeLists.txt" : {
      "ObjectId" : "93334c51d3d51e7f022f117c635011b2494579ca",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define flags with cmake instead of by defining them on win32_config.h\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support '#include <rdkafka.h>'\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need 'dummy' directory to support `#include \"../config.h\"` path\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# option from 'h2o' parent project\n",
        "Line" : 145,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# Set up path to these sources for other sub-projects (tests, examples)\n\n# to be able to reach them.\n\n#set(rdkafka_SRC_DIR ${PROJECT_SOURCE_DIR}\n\n#    CACHE INTERNAL \"${PROJECT_NAME} source dir\" FORCE)\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/out_kafka/librdkafka-0.11.6/src/Makefile" : {
      "ObjectId" : "ce9bbb9abb880c07ff604532fd697caafae228dd",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Add librdkafka version string from git tag if this is a git checkout\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use built-in liblz4\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile LZ4 with -O3\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable linker script if supported by platform\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/out_kafka/librdkafka-0.11.6/tests/CMakeLists.txt" : {
      "ObjectId" : "b1a4ca032905c2c6c419ecf4f63bfa86ac497a78",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_kafka/librdkafka-0.11.6/tests/Makefile" : {
      "ObjectId" : "a0c05b475ae8065a76a948ec9158080b93b5817e",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Run the full test suite(s)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Delete all test topics (based on prefix)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Clean test output files\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "plugins/out_kafka/librdkafka-0.11.6/tests/interceptor_test/CMakeLists.txt" : {
      "ObjectId" : "c606bc426612ef9e5e85f931a0b20f8037c292e2",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove \"lib\" prefix\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_kafka/librdkafka-0.11.6/tests/interceptor_test/Makefile" : {
      "ObjectId" : "125e360322d2e6adc59a1901ece3f71723cdc369",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# For rdkafka.h\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_kafka/librdkafka-0.11.6/tests/java/Makefile" : {
      "ObjectId" : "a0603cda6fbbb86197fe3499f0720bab10557d73",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "plugins/out_kafka/librdkafka-0.11.6/tests/plugin_test/Makefile" : {
      "ObjectId" : "a39f18270e89381d3b782d6bbbe4c57b945c84ec",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# For rdkafka.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_kafka_rest/CMakeLists.txt" : {
      "ObjectId" : "39df92f7750f14eb3ab204211bc40c833dee8e92",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_lib/CMakeLists.txt" : {
      "ObjectId" : "b50ecc2ed76a0c0def4cbf6bc836d544d9fd52bd",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(flb-plugin-out_lib msgpack)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/out_nats/CMakeLists.txt" : {
      "ObjectId" : "9dabb2f2c2389ffdfea134561330d7246b7ec37e",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_null/CMakeLists.txt" : {
      "ObjectId" : "77a80fe9007b1e5aaaa7ba105b4d8ce3fb0832b7",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_plot/CMakeLists.txt" : {
      "ObjectId" : "e3cd96db5da0cd8dcb03aab343ea90a6248d12e2",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_retry/CMakeLists.txt" : {
      "ObjectId" : "e206ff719327573416764b2428198b2874f9f7a1",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_splunk/CMakeLists.txt" : {
      "ObjectId" : "da66bca70459e8437531bff373827bf684e89b46",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_stackdriver/CMakeLists.txt" : {
      "ObjectId" : "0ff3289d8df708a658069612125968c77278f260",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_stdout/CMakeLists.txt" : {
      "ObjectId" : "2331680c116b60e23241bbbd49d295e0c57edc25",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/out_td/CMakeLists.txt" : {
      "ObjectId" : "b684b527252ce4e9cbc40469f62af80d713e3743",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tweak Miniz library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "1df4a4610eb612c021c2a9f05bf78cdd12c1203f",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Core Source\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fluent Bit have TLS support\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Register the TLS interface and functions\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make sure our output targets links to the TLS library\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Link to libco\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Core dependencies\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link timer library\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Stream Processor\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# HTTP Server\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Proxy interfaces\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# HTTP Server\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set static dependencies\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Stream Processor\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Shared Library\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Windows doesn't provide pthread (see winpthreads.c in mk_core).\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Library install routines\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Static Library\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Rename the output for Windows environment to avoid naming issues\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Binary / Executable\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Detect init system, install upstart, systemd or init.d script\n",
        "Line" : 302,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# FIXME: should we support Sysv init script ?\n",
        "Line" : 320,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "src/http_server/CMakeLists.txt" : {
      "ObjectId" : "b070db825277b4104ffc819151cedc7bbeb1c6d5",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Core Source\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# api/v1\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/http_server/api/v1/CMakeLists.txt" : {
      "ObjectId" : "fa53a563b553423361408eacc1d64a78e05e3dce",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# api/v1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/proxy/CMakeLists.txt" : {
      "ObjectId" : "2e07e7681abc28b27de428b4f74e242a24d6d67c",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/proxy/go/CMakeLists.txt" : {
      "ObjectId" : "94c199e983e9b570c58721568e97a5f8254bcc05",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/stream_processor/CMakeLists.txt" : {
      "ObjectId" : "d864073d22ec290840d6d596d6779a072ccadb07",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/stream_processor/parser/CMakeLists.txt" : {
      "ObjectId" : "0e51dca01f79b9fae04e3e6f32b852e3698fa1c6",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(test-sp-parser\n\n#    ${sources}\n\n#    \"${CMAKE_CURRENT_BINARY_DIR}/sql_lex.c\"\n\n#    \"${CMAKE_CURRENT_BINARY_DIR}/sql_parser.c\"\n\n#    )\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/internal/CMakeLists.txt" : {
      "ObjectId" : "790925bfe5f6563af1dae6d06d029c333c52520c",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Move data files to the path the test binaries can find them\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prepare list of unit tests\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/runtime/CMakeLists.txt" : {
      "ObjectId" : "b53a6a4b480d0e2e17b60c726a8f1dc2108ea666",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro to set definitions\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input Plugins\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These plugins works only on Linux\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Filter Plugins\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Output Plugins\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/xxd-c/CMakeLists.txt" : {
      "ObjectId" : "7c5d81f3bda06fae0a2f8d27498a2a7c28d51479",
      "LastModified" : "2019-04-12T19:06:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 161,
    "CMAKESOURCE" : 2,
    "MAKEFILE" : 17,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 3548
}