{
  "Repository" : "2768044",
  "Revision" : "HEAD",
  "ObjectId" : "575b96e32e3a926bc9f56f15e865feaddf5c2abc",
  "CommitTime" : "2019-04-09T15:21:55Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6367ddf4bcef906299c21eec02d56168e036cf51",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# General Advice\n\n#\n\n# For selecting between DEBUG / RELEASE, use -DCMAKE_BUILD_TYPE=DEBUG or =RELEASE\n\n#   debug builds include source level debug info and extra logging\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Select features recommended for PC distro packaging\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Major individual features\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# TLS library options... all except mbedTLS are basically OpenSSL variants.\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Event library options (may select multiple, or none for default poll()\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Static / Dynamic build options\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Specific platforms\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Client / Server / Test Apps build control\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Extensions (permessage-deflate)\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Helpers + misc\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# End of user settings\n\n#\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# libev + libevent cannot coexist at build-time\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# do you care about this?  Then send me a patch where it disables it on travis\n\n# but allows it on APPLE\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# microsoft... that's why you can't have nice things\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Try to find the current Git hash.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# append the build user and hostname\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# translate old functionality enables to set up ROLE enables so nothing changes\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# sshd plugin\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sshd plugin\n",
        "Line" : 355,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# set(LWS_WITHOUT_CLIENT ON)\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# this implies no pthreads in the lib\n",
        "Line" : 377,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# confirm H1 relationships\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# confirm HTTP relationships\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Allow the user to override installation directories.\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Allow the user to use the old CyaSSL options/library in stead of wolfSSL\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Copy CyaSSL options to the wolfSSL options\n",
        "Line" : 449,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# boringssl deprecated EVP_PKEY\n",
        "Line" : 484,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# The base dir where the test-apps look for the SSL certs.\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# LWS_OPENSSL_SUPPORT deprecated... use LWS_WITH_TLS\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check for different inline keyword versions.\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Put the libraries and binaries that get built into directories at the\n\n# top of the build tree rather than in hard-to-find leaf directories. \n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Put absolute path of dynamic libraries into the object code. Some\n\n# architectures, notably Mac OS X, need this.\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# look in fedora and debian / ubuntu place\n",
        "Line" : 802,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# look in fedora... debian / ubuntu has the ARCH in the path...\n",
        "Line" : 811,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# libuv changed the location in 1.21.0. Retain both\n\n# checks temporarily to ensure a smooth transition.\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# TODO: These can also be tested to see whether they actually work...\n",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Turn off stupid microsoft security warnings.\n",
        "Line" : 888,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Group headers and sources.\n\n# Some IDEs use this for nicer file structure.\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# select the active platform files\n",
        "Line" : 1188,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Add helper files for Windows.\n",
        "Line" : 1334,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Unix.\n",
        "Line" : 1350,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# jeez clang understands -pthread but dies if he sees it at link time!\n\n# http://stackoverflow.com/questions/2391194/what-is-gs-pthread-equiv-in-clang\n",
        "Line" : 1392,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# otherwise osx blows a bunch of openssl deprecated api errors\n",
        "Line" : 1400,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "#\n\n# Create the lib.\n\n#\n",
        "Line" : 1412,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Windows uses the same .lib ending for static libraries and shared\n\n# library linker files, so rename the static library.\n",
        "Line" : 1428,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# We want the shared lib to be named \"libwebsockets\"\n\n# not \"libwebsocket_shared\".\n",
        "Line" : 1462,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# Compile as DLL (export function declarations)\n",
        "Line" : 1469,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Set the so version of the lib.\n\n# Equivalent to LDFLAGS=-version-info x:x:x\n",
        "Line" : 1502,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n# Find libraries.\n\n#\n",
        "Line" : 1514,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#\n\n# ZLIB (needed for deflate extension and if LWS_WITH_HTTP_STREAM_COMPRESSION)\n\n#\n",
        "Line" : 1518,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Make sure zlib_internal is compiled before the libs.\n",
        "Line" : 1544,
        "CharPositionInLine" : 3
      },
      "51" : {
        "Text" : "#\n\n# OpenSSL\n\n#\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Use wolfSSL as OpenSSL replacement.\n\n# TODO: Add a find_package command for this also.\n",
        "Line" : 1571,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Additional to the root directory we need to include\n\n# the wolfssl/ subdirectory which contains the OpenSSL\n\n# compatibility layer headers.\n",
        "Line" : 1576,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# TODO: Add support for STATIC also.\n",
        "Line" : 1608,
        "CharPositionInLine" : 3
      },
      "55" : {
        "Text" : "# older (0.98) Openssl lacks this\n",
        "Line" : 1626,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "#\n\n# Platform specific libs.\n\n#\n",
        "Line" : 1710,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Setup the linking for all libs.\n",
        "Line" : 1737,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# it's trying to delete internal zlib entry\n",
        "Line" : 1748,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "# not supported in esp-idf openssl wrapper yet, but is in our version\n",
        "Line" : 1774,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# ideally we want to use pipe2()\n",
        "Line" : 1791,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# tcp keepalive needs this on linux to work practically... but it only exists\n\n# after kernel 2.6.37\n",
        "Line" : 1795,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Generate the lws_config.h that includes all the public compilation settings.\n",
        "Line" : 1801,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Generate the lws_config.h that includes all the private compilation settings.\n",
        "Line" : 1806,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Generate self-signed SSL certs for the test-server.\n",
        "Line" : 1811,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# The \"type\" command is a bit picky with paths.\n",
        "Line" : 1857,
        "CharPositionInLine" : 3
      },
      "66" : {
        "Text" : "# Unix.\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "#\t\tOUTPUT_QUIET ERROR_QUIET\n",
        "Line" : 1883,
        "CharPositionInLine" : 3
      },
      "68" : {
        "Text" : "#\n\n# Test applications\n\n#\n",
        "Line" : 1901,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#\n\n# Helper function for adding a test app.\n\n#\n",
        "Line" : 1906,
        "CharPositionInLine" : 1
      },
      "70" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 1968,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# Prefix the binary names with libwebsockets.\n",
        "Line" : 1974,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# Add to the list of tests.\n",
        "Line" : 1979,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# libev generates a big mess of warnings with gcc, maintainer claims gcc to blame\n",
        "Line" : 1991,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "#\n\n# test-server\n\n#\n",
        "Line" : 1997,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "#\n\n# test-server-extpoll\n\n#\n",
        "Line" : 2021,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Set defines for this executable only.\n",
        "Line" : 2032,
        "CharPositionInLine" : 3
      },
      "77" : {
        "Text" : "# We need to link against winsock code.\n",
        "Line" : 2040,
        "CharPositionInLine" : 3
      },
      "78" : {
        "Text" : "# Data files for running the test server.\n",
        "Line" : 2057,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Copy the file needed to run the server so that the test apps can\n\n# reach them from their default output location\n",
        "Line" : 2074,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "#\n\n# test-client\n\n#\n",
        "Line" : 2086,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 2131,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "#\t\tset_target_properties(${PLUGIN_NAME}\n\n#\t\t\tPROPERTIES\n\n#\t\t\tOUTPUT_NAME ${PLUGIN_NAME})\n",
        "Line" : 2140,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#\n\n# Copy OpenSSL dlls to the output directory on Windows.\n\n# (Otherwise we'll get an error when trying to run)\n\n#\n",
        "Line" : 2232,
        "CharPositionInLine" : 1
      },
      "84" : {
        "Text" : "#\n\n# Win32: if we are using libuv, also need to copy it in the output dir\n\n#\n",
        "Line" : 2250,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 2289,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# Generate and install pkgconfig.\n\n# (This is not indented, because the tabs will be part of the output)\n",
        "Line" : 2298,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#\n\n# Installation preparations.\n\n#\n",
        "Line" : 2338,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Export targets (This is used for other CMake projects to easily find the libraries and include files).\n",
        "Line" : 2350,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Generate the config file for the build-tree.\n",
        "Line" : 2358,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Generate the config file for the installation tree.\n",
        "Line" : 2367,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Calculate the relative directory from the cmake dir.\n",
        "Line" : 2373,
        "CharPositionInLine" : 43
      },
      "92" : {
        "Text" : "# Note the EVENT_CMAKE_DIR is defined in JanssonConfig.cmake.in, \n\n# we escape it here so it's evaluated when it is included instead\n\n# so that the include dirs are given relative to where the \n\n# config file is located.\n",
        "Line" : 2375,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Generate version info for both build-tree and install-tree.\n",
        "Line" : 2385,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#\n\n# Installation.\n\n#\n",
        "Line" : 2393,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Install libs and headers.\n",
        "Line" : 2400,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Windows DLLs\n",
        "Line" : 2405,
        "CharPositionInLine" : 67
      },
      "97" : {
        "Text" : "# Install test apps.\n",
        "Line" : 2411,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# lwsws\n",
        "Line" : 2419,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Programs shared files used by the test-server.\n",
        "Line" : 2425,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# plugins\n",
        "Line" : 2450,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Install the LibwebsocketsConfig.cmake and LibwebsocketsConfigVersion.cmake\n",
        "Line" : 2504,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Install exports for the install-tree.\n",
        "Line" : 2510,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# build subdir is not part of sources\n",
        "Line" : 2516,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Most people are more used to \"make dist\" compared to \"make package_source\"\n",
        "Line" : 2519,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# These will be available to parent projects including libwebsockets using add_subdirectory()\n",
        "Line" : 2594,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# This must always be last!\n",
        "Line" : 2630,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 107
    },
    "cmake/FindGit.cmake" : {
      "ObjectId" : "65b946ce15953b5a8d61e29b299b39d105fd25e0",
      "LastModified" : "2013-02-18T10:34:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n#  Program: 3D Slicer\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  See COPYRIGHT.txt\n\n#  or http://www.slicer.org/copyright/copyright.txt for details.\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n#  This file was originally developed by Jean-Christophe Fillion-Robin, Kitware Inc.\n\n#  and was partially funded by NIH grant 3P41RR013218-12S1\n\n#\n\n#  AG 2013-02-18: I got it from here\n\n#  https://github.com/Slicer/Slicer/blob/master/CMake/FindGit.cmake\n\n#  license is BSD\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The module defines the following variables:\n\n#   GIT_EXECUTABLE - path to git command line client\n\n#   GIT_FOUND - true if the command line client was found\n\n#\n\n# If the command line client executable is found the macro\n\n#  GIT_WC_INFO(<dir> <var-prefix>)\n\n# is defined to extract information of a git working copy at\n\n# a given location.\n\n#\n\n# The macro defines the following variables:\n\n#  <var-prefix>_WC_REVISION_HASH - Current SHA1 hash\n\n#  <var-prefix>_WC_REVISION - Current SHA1 hash\n\n#  <var-prefix>_WC_REVISION_NAME - Name associated with <var-prefix>_WC_REVISION_HASH\n\n#  <var-prefix>_WC_URL - output of command `git config --get remote.origin.url'\n\n#  <var-prefix>_WC_ROOT - Same value as working copy URL\n\n#  <var-prefix>_WC_GITSVN - Set to false\n\n#\n\n# ... and also the following ones if it's a git-svn repository:\n\n#  <var-prefix>_WC_GITSVN - Set to True if it is a\n\n#  <var-prefix>_WC_INFO - output of command `git svn info'\n\n#  <var-prefix>_WC_URL - url of the associated SVN repository\n\n#  <var-prefix>_WC_ROOT - root url of the associated SVN repository\n\n#  <var-prefix>_WC_REVISION - current SVN revision number\n\n#  <var-prefix>_WC_LAST_CHANGED_AUTHOR - author of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_DATE - date of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_REV - revision of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_LOG - last log of base revision\n\n#\n\n# Example usage:\n\n#   find_package(Git)\n\n#   if(GIT_FOUND)\n\n#    GIT_WC_INFO(${PROJECT_SOURCE_DIR} Project)\n\n#    message(\"Current revision is ${Project_WC_REVISION_HASH}\")\n\n#    message(\"git found: ${GIT_EXECUTABLE}\")\n\n#   endif()\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: Due to a bug in 'git.cmd' preventing it from returning the exit code of 'git',\n\n#       we excluded it from the list of executables to search.\n\n# See http://code.google.com/p/msysgit/issues/detail?id=428\n\n# TODO Check if 'git' exists, get the associated version, if the corresponding version\n\n#      is known to have a working version of 'git.cmd', use it.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check if this git is likely to be a git-svn repository\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# In case git-svn is used, attempt to extract svn info\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# If there is no 'remote.origin', default to \"NA\" value and print a warning message.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindLibWebSockets.cmake" : {
      "ObjectId" : "1dfe11579f54bae942a97877a386e29f849673ea",
      "LastModified" : "2017-09-27T00:24:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module tries to find libWebsockets library and include files\n\n#\n\n# LIBWEBSOCKETS_INCLUDE_DIR, path where to find libwebsockets.h\n\n# LIBWEBSOCKETS_LIBRARY_DIR, path where to find libwebsockets.so\n\n# LIBWEBSOCKETS_LIBRARIES, the library to link against\n\n# LIBWEBSOCKETS_FOUND, If false, do not try to use libWebSockets\n\n#\n\n# This currently works probably only for Linux\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindOpenSSLbins.cmake" : {
      "ObjectId" : "5611c04cde1ecb6164427efe7e8134d820836553",
      "LastModified" : "2017-09-27T00:24:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Windows, we need to copy the OpenSSL dlls \n\n# to the output directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/UseRPMTools.cmake" : {
      "ObjectId" : "36f9d3dc753a9ad01f0d1c9e203ffb6aa4f90ad9",
      "LastModified" : "2018-05-26T01:20:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find tools needed for building RPM Packages\n\n#   on Linux systems and defines macro that helps to\n\n#   build source or binary RPM, the MACRO assumes\n\n#   CMake 2.4.x which includes CPack support.\n\n#   CPack is used to build tar.gz source tarball\n\n#   which may be used by a custom user-made spec file.\n\n#\n\n# - Define RPMTools_ADD_RPM_TARGETS which defines\n\n#   two (top-level) CUSTOM targets for building\n\n#   source and binary RPMs\n\n#\n\n# Those CMake macros are provided by the TSP Developer Team\n\n# https://savannah.nongnu.org/projects/tsp\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for RPM builder executable\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Detect if CPack was included or not\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# - first arg  (ARGV0) is RPM name\n\n# - second arg (ARGV1) is the RPM spec file path [optional]\n\n# - third arg  (ARGV2) is the RPM ROOT DIRECTORY used to build RPMs [optional]\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# If no spec file is provided create a minimal one\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Verify whether if RPM_ROOTDIR was provided or not\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Prepare RPM build tree\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#\n\n# We check whether if the provided spec file is\n\n# to be configure or not.\n\n#\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# This is a 'ready-to-use' spec file which does not need to be CONFIGURED\n",
        "Line" : 139,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# This is a to-be-configured spec file\n",
        "Line" : 147,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "contrib/cross-aarch64.cmake" : {
      "ObjectId" : "c8d880d6391b5f384b802c098d63aefb6ba6e54c",
      "LastModified" : "2019-03-10T00:02:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on ARM.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../cross-arm-linux-gnueabihf.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Different build system distros set release optimization level to different\n\n# things according to their local policy, eg, Fedora is -O2 and Ubuntu is -O3\n\n# here.  Actually the build system's local policy is completely unrelated to\n\n# our desire for cross-build release optimization policy for code built to run\n\n# on a completely different target than the build system itself.\n\n#\n\n# Since this goes last on the compiler commandline we have to override it to a\n\n# sane value for cross-build here.  Notice some gcc versions enable broken\n\n# optimizations with -O3.\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-nostdlib\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/cross-arm-android-gnueabi.cmake" : {
      "ObjectId" : "da9aaae604c1f8731e40a3a9f20dab2a387d9689",
      "LastModified" : "2019-03-10T00:02:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on ARM.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../cross-arm-linux-gnueabihf.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Target build dynamic libs.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Different build system distros set release optimization level to different\n\n# things according to their local policy, eg, Fedora is -O2 and Ubuntu is -O3\n\n# here.  Actually the build system's local policy is completely unrelated to\n\n# our desire for cross-build release optimization policy for code built to run\n\n# on a completely different target than the build system itself.\n\n#\n\n# Since this goes last on the compiler commandline we have to override it to a\n\n# sane value for cross-build here.  Notice some gcc versions enable broken\n\n# optimizations with -O3.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/cross-arm-linux-gnueabihf.cmake" : {
      "ObjectId" : "289f27a5a72a5fc7bbf941b01ea919d1a0701820",
      "LastModified" : "2019-03-10T00:02:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on ARM.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../cross-arm-linux-gnueabihf.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Different build system distros set release optimization level to different\n\n# things according to their local policy, eg, Fedora is -O2 and Ubuntu is -O3\n\n# here.  Actually the build system's local policy is completely unrelated to\n\n# our desire for cross-build release optimization policy for code built to run\n\n# on a completely different target than the build system itself.\n\n#\n\n# Since this goes last on the compiler commandline we have to override it to a\n\n# sane value for cross-build here.  Notice some gcc versions enable broken\n\n# optimizations with -O3.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/cross-esp32.cmake" : {
      "ObjectId" : "2c8996b74ef93df9757636be2c9bcb53a4ad44fe",
      "LastModified" : "2019-03-10T00:02:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on ARM.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../cross-arm-linux-gnueabihf.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Different build system distros set release optimization level to different\n\n# things according to their local policy, eg, Fedora is -O2 and Ubuntu is -O3\n\n# here.  Actually the build system's local policy is completely unrelated to\n\n# our desire for cross-build release optimization policy for code built to run\n\n# on a completely different target than the build system itself.\n\n#\n\n# Since this goes last on the compiler commandline we have to override it to a\n\n# sane value for cross-build here.  Notice some gcc versions enable broken\n\n# optimizations with -O3.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/cross-ming.cmake" : {
      "ObjectId" : "1b21014583615fe01a062f2bcd60b7239d330911",
      "LastModified" : "2019-03-10T00:02:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on MingW.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../cross-ming.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_CXX_COMPILER \"${CROSS_PATH}/x86_64-w64-mingw32-g++\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Different build system distros set release optimization level to different\n\n# things according to their local policy, eg, Fedora is -O2 and Ubuntu is -O3\n\n# here.  Actually the build system's local policy is completely unrelated to\n\n# our desire for cross-build release optimization policy for code built to run\n\n# on a completely different target than the build system itself.\n\n#\n\n# Since this goes last on the compiler commandline we have to override it to a\n\n# sane value for cross-build here.  Notice some gcc versions enable broken\n\n# optimizations with -O3.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/cross-w32.cmake" : {
      "ObjectId" : "05128857bc342afb82c11371946d2028b1247c5f",
      "LastModified" : "2019-03-10T00:02:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on 32bit Windows platforms.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../contrib/cross-w32.cmake -DLWS_WITH_SSL=0\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Different build system distros set release optimization level to different\n\n# things according to their local policy, eg, Fedora is -O2 and Ubuntu is -O3\n\n# here.  Actually the build system's local policy is completely unrelated to\n\n# our desire for cross-build release optimization policy for code built to run\n\n# on a completely different target than the build system itself.\n\n#\n\n# Since this goes last on the compiler commandline we have to override it to a\n\n# sane value for cross-build here.  Notice some gcc versions enable broken\n\n# optimizations with -O3.\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/cross-w64.cmake" : {
      "ObjectId" : "4fff88256ce281775e02e4e7c54685729f534afa",
      "LastModified" : "2019-03-10T00:02:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on 64bit Windows platforms.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../contrib/cross-w64.cmake -DLWS_WITH_SSL=0\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Different build system distros set release optimization level to different\n\n# things according to their local policy, eg, Fedora is -O2 and Ubuntu is -O3\n\n# here.  Actually the build system's local policy is completely unrelated to\n\n# our desire for cross-build release optimization policy for code built to run\n\n# on a completely different target than the build system itself.\n\n#\n\n# Since this goes last on the compiler commandline we have to override it to a\n\n# sane value for cross-build here.  Notice some gcc versions enable broken\n\n# optimizations with -O3.\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "minimal-examples/api-tests/api-test-fts/CMakeLists.txt" : {
      "ObjectId" : "023e837ad7b644c48a797629b5de6c6cebb7fcf9",
      "LastModified" : "2018-10-26T05:53:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/api-tests/api-test-gencrypto/CMakeLists.txt" : {
      "ObjectId" : "f2a8480351cff11cec41b17bcb2ae19ba3fc0a38",
      "LastModified" : "2019-01-29T07:28:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/api-tests/api-test-jose/CMakeLists.txt" : {
      "ObjectId" : "64e8bdecbe8c71cc89b1525f7313462008bd5e04",
      "LastModified" : "2019-01-29T07:28:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/api-tests/api-test-lws_struct-json/CMakeLists.txt" : {
      "ObjectId" : "a0900f866b2530e039d41b28b48c0dabb2543d57",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/api-tests/api-test-lws_tokenize/CMakeLists.txt" : {
      "ObjectId" : "7bfc6f6515bbc738be47bb73aa5f73b3c57fb7a2",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/api-tests/api-test-lwsac/CMakeLists.txt" : {
      "ObjectId" : "a73c6807e9c8669ed78910d801c8e0926fb8ab3a",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/client-server/minimal-ws-proxy/CMakeLists.txt" : {
      "ObjectId" : "a2654964b484d834a8b7a366818ae36574418976",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/crypto/minimal-crypto-jwe/CMakeLists.txt" : {
      "ObjectId" : "05f737669fc67d2d03ed4735e017562655322107",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/crypto/minimal-crypto-jwk/CMakeLists.txt" : {
      "ObjectId" : "fb8c3e37297510856998d5d5f0936cb28ee99eaa",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/crypto/minimal-crypto-jws/CMakeLists.txt" : {
      "ObjectId" : "ddf957969d6e5b0c6659655c0f3a7b8cb1e1a1a9",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/crypto/minimal-crypto-x509/CMakeLists.txt" : {
      "ObjectId" : "327cdcd96a034cd83d5f1e65c74bbf1f2786b205",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/dbus-client/minimal-dbus-client/CMakeLists.txt" : {
      "ObjectId" : "674bb096a79d14b559b1ac711b0caa13ed46fa16",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# look in fedora and debian / ubuntu place\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# look in fedora... debian / ubuntu has the ARCH in the path...\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "minimal-examples/dbus-client/minimal-dbus-ws-proxy-testclient/CMakeLists.txt" : {
      "ObjectId" : "dda46bf13f5967c9e44866d216686d99d1f282f2",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# look in fedora and debian / ubuntu place\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# look in fedora... debian / ubuntu has the ARCH in the path...\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "minimal-examples/dbus-server/minimal-dbus-server/CMakeLists.txt" : {
      "ObjectId" : "7260d5a4d519f63bcdb5cb4d84b396355e816d9b",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# look in fedora and debian / ubuntu place\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# look in fedora... debian / ubuntu has the ARCH in the path...\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "minimal-examples/dbus-server/minimal-dbus-ws-proxy/CMakeLists.txt" : {
      "ObjectId" : "bad9ec3318f997e008e95af8990c7c6877446843",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# look in fedora and debian / ubuntu place\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# look in fedora... debian / ubuntu has the ARCH in the path...\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "minimal-examples/http-client/minimal-http-client-certinfo/CMakeLists.txt" : {
      "ObjectId" : "1bc44df3a852f8e4cfe76887bf95f017329ebe2a",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-client/minimal-http-client-custom-headers/CMakeLists.txt" : {
      "ObjectId" : "a81d45dbfd464d6612b277117a4e5a8936a21cd6",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-client/minimal-http-client-hugeurl/CMakeLists.txt" : {
      "ObjectId" : "22a30115f935a2aeb2ad3f8444ad404323a0392e",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-client/minimal-http-client-multi/CMakeLists.txt" : {
      "ObjectId" : "be0314e14b05223437e9c5996063e724a74276e8",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-client/minimal-http-client-post/CMakeLists.txt" : {
      "ObjectId" : "9fe8d5150af63d0c23ba07f861e06e60ce19b7a1",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-client/minimal-http-client/CMakeLists.txt" : {
      "ObjectId" : "61813719b03d1e8b1468dbef0ef258256810c664",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-basicauth/CMakeLists.txt" : {
      "ObjectId" : "c1bb2ce5800525fffc99a79bedf637184a8c8403",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-custom-headers/CMakeLists.txt" : {
      "ObjectId" : "92d0d18254561a9f42a1426ff33ebec520fe9f4b",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-deaddrop/CMakeLists.txt" : {
      "ObjectId" : "d5f518803667d099ca1f5e1cdf8188bfc4dfd9f4",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE... if you are building this standalone, you must point LWS_PLUGINS_DIR\n\n# to the lws plugins dir so it can pick up the plugin source.  Eg,\n\n# cmake . -DLWS_PLUGINS_DIR=~/libwebsockets/plugins\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "minimal-examples/http-server/minimal-http-server-dynamic/CMakeLists.txt" : {
      "ObjectId" : "5b5794c79a553d23a53eca0c4004e7cb809ec5aa",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-eventlib-demos/CMakeLists.txt" : {
      "ObjectId" : "593d6871606f697d691b744cf9eda3f4e74d94e0",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-eventlib-foreign/CMakeLists.txt" : {
      "ObjectId" : "2d804a70cf9ed5c08639ccb58de866d49ab1589e",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-eventlib-smp/CMakeLists.txt" : {
      "ObjectId" : "a60b3d60a9feebe5f70214b10eb1ec94273978d2",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-eventlib/CMakeLists.txt" : {
      "ObjectId" : "66a4452329cdd8d1fa3025c6e373914e3b386fee",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-form-get/CMakeLists.txt" : {
      "ObjectId" : "1b43056d8e3b74d84633a353f2b4707a783ece2b",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-form-post-file/CMakeLists.txt" : {
      "ObjectId" : "1cffb9836706279ac50d41ed9bcaf3c3ad447330",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-form-post-lwsac/CMakeLists.txt" : {
      "ObjectId" : "eec5b06a8eaaed38a9dc67184ba6de956cc97ce4",
      "LastModified" : "2019-04-05T23:34:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-form-post/CMakeLists.txt" : {
      "ObjectId" : "32a9f76a3c8319fc248fe122ef6ad12855eb32bb",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-fulltext-search/CMakeLists.txt" : {
      "ObjectId" : "60328456e095b7b0d81718875e41a05c6c9222bf",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-mimetypes/CMakeLists.txt" : {
      "ObjectId" : "d270d7b58d46148b53363b62d6f5d00aec1cb3af",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-multivhost/CMakeLists.txt" : {
      "ObjectId" : "ace0d7c78e79799d6a8a3a00eaaf08ec25123d5e",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-proxy/CMakeLists.txt" : {
      "ObjectId" : "4c582a03f02a3bcc6661c9474c2586ee2b84d9dd",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-smp/CMakeLists.txt" : {
      "ObjectId" : "ab2718e815f797a253d50344859272a8130c253a",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-sse-ring/CMakeLists.txt" : {
      "ObjectId" : "464cfbeff00d05034b91a36688e319694fa76415",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-sse/CMakeLists.txt" : {
      "ObjectId" : "c22a71fc4cfe135b0fe24ffd98326ad5bfef1dc7",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-tls-80/CMakeLists.txt" : {
      "ObjectId" : "01305f83f5e3d89b3cf1b46165d7df1cabb9c9b6",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-tls-mem/CMakeLists.txt" : {
      "ObjectId" : "e6ea90aab980b654146ea038e35d51afcff0d6bc",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server-tls/CMakeLists.txt" : {
      "ObjectId" : "758d973ba0e306abac3812d195a07c04517d541a",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/http-server/minimal-http-server/CMakeLists.txt" : {
      "ObjectId" : "a0fa4ec05417e5e24aa273d2974181bb6eb3bd9b",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/raw/minimal-raw-adopt-tcp/CMakeLists.txt" : {
      "ObjectId" : "6ee4fb84b370f924075df6bfd76e91416f541f4a",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/raw/minimal-raw-adopt-udp/CMakeLists.txt" : {
      "ObjectId" : "72627055ace54980dc8e5efd59affe40fa59c2ae",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/raw/minimal-raw-fallback-http-server/CMakeLists.txt" : {
      "ObjectId" : "f0cb7b4d1251a4854ac301dfd77f44ad61beaa91",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/raw/minimal-raw-file/CMakeLists.txt" : {
      "ObjectId" : "dc0f8633b8e7129c7b51dce988898b0d6e2e64b5",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/raw/minimal-raw-netcat/CMakeLists.txt" : {
      "ObjectId" : "ba3997d070f3d4c285fa8e7f49144ce55aa361c0",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/raw/minimal-raw-proxy-fallback/CMakeLists.txt" : {
      "ObjectId" : "c0f72cee48e350663c6004cf8636640174e09562",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE... if you are building this standalone, you must point LWS_PLUGINS_DIR\n\n# to the lws plugins dir so it can pick up the plugin source.  Eg,\n\n# cmake . -DLWS_PLUGINS_DIR=~/libwebsockets/plugins\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "minimal-examples/raw/minimal-raw-proxy/CMakeLists.txt" : {
      "ObjectId" : "da033dde9eb3034a11250267481ff01789711dcc",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE... if you are building this standalone, you must point LWS_PLUGINS_DIR\n\n# to the lws plugins dir so it can pick up the plugin source.  Eg,\n\n# cmake . -DLWS_PLUGINS_DIR=~/libwebsockets/plugins\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "minimal-examples/raw/minimal-raw-vhost/CMakeLists.txt" : {
      "ObjectId" : "db4810b90af6bbf7cd44834b0db7bec0fba046f8",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-client/minimal-ws-client-echo/CMakeLists.txt" : {
      "ObjectId" : "d5162b061e5f5ceadbc01da06bea484b9f0b2b8c",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-client/minimal-ws-client-ping/CMakeLists.txt" : {
      "ObjectId" : "b9a265e6962540d4e9a06ab3a1f345b43e8b827a",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-client/minimal-ws-client-pmd-bulk/CMakeLists.txt" : {
      "ObjectId" : "ace89a569bb8bd981d7708dea6a9dd18362e4924",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#require_lws_config(LWS_WITHOUT_EXTENSIONS 0 requirements)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "minimal-examples/ws-client/minimal-ws-client-rx/CMakeLists.txt" : {
      "ObjectId" : "fb8c938b4d6e312b7c9d93a11fc351c1f86e0b3c",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-client/minimal-ws-client-spam/CMakeLists.txt" : {
      "ObjectId" : "25b9d7218698276cace24a2a4803253cfcd0e265",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-client/minimal-ws-client-tx/CMakeLists.txt" : {
      "ObjectId" : "47f2dc69b50135a5ba5ea921b8dfaf496733f15f",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-broker/CMakeLists.txt" : {
      "ObjectId" : "719147d3b75d1ab1763a85100c39c98274d52c4e",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server-echo/CMakeLists.txt" : {
      "ObjectId" : "78823eae0271b27c37810d6e2677e61501676509",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server-pmd-bulk/CMakeLists.txt" : {
      "ObjectId" : "d27769fae817aa00f06512a148b3ebae1e2c4704",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#require_lws_config(LWS_WITHOUT_EXTENSIONS 0 requirements)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "minimal-examples/ws-server/minimal-ws-server-pmd-corner/CMakeLists.txt" : {
      "ObjectId" : "1098d50e644894ddb8d2825b3f262a8ceacd531a",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server-pmd/CMakeLists.txt" : {
      "ObjectId" : "db9f03e0ec50be4637f3adccca15febc0d67f3fe",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server-ring/CMakeLists.txt" : {
      "ObjectId" : "e199801c7966de50794f15cd78f62c7c92edc0c1",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server-threadpool/CMakeLists.txt" : {
      "ObjectId" : "951e9f642377ae71d15bd23cd7f02294e1168fc3",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server-threads-smp/CMakeLists.txt" : {
      "ObjectId" : "32ecbf5da3a55c813feacf848e40babf37579be5",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server-threads/CMakeLists.txt" : {
      "ObjectId" : "bf67791d712c6f663ac49bce4d693f831424538d",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "minimal-examples/ws-server/minimal-ws-server/CMakeLists.txt" : {
      "ObjectId" : "6b938b103ff6a66d8bb519108aa510dbfed05711",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are being built as part of lws, confirm current build config supports\n\n# reqconfig, else skip building ourselves.\n\n#\n\n# If we are being built externally, confirm installed lws was configured to\n\n# support reqconfig, else error out with a helpful message about the problem.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugin-standalone/CMakeLists.txt" : {
      "ObjectId" : "2d213e99693ab820772cff9c5cabff281d2cb562",
      "LastModified" : "2019-04-05T22:08:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This shows one way to build a standalone plugin\n\n# outside of lws itself\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# space-separated list of sources\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find the current Git hash.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 81
  },
  "ElapsedTime" : 3378
}