{
  "Repository" : "74026845",
  "Revision" : "HEAD",
  "ObjectId" : "f6076052bdd654d2a8f64ca9ca42afd10ff3601e",
  "CommitTime" : "2019-04-18T21:11:50Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "3213ca3ea1108c96ab55587744ad1bb40745d8fb",
      "LastModified" : "2019-04-12T20:11:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTE: This defaults the container image version to the branch that's active\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python packages to install only from source (not from binary wheels)\n\n# Comma separated list\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine appropriate shasum command\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the branch information from git\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TAR build parameters\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI flag files\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove ui build artifacts\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove temporary build files, compiled Python files.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# convenience target to assert environment variables are defined\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Install third-party requirements needed for AWX's environment.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#$(VENV_BASE)/awx/bin/pip uninstall --yes -r requirements/requirements_tower_uninstall.txt\n",
        "Line" : 182,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# \"Install\" awx package in development mode.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Do any one-time init tasks.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Refresh development environment after pulling new code.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create Django superuser.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create database tables and apply any new migrations.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Run after making changes to the models to create a new migration.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# access database shell, asks for password\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Use with iterm2's native tmux protocol support\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Alternate approach to tmux to run all development tasks specified in\n\n# Procfile.\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Run the built-in development webserver (by default on http://localhost:8013).\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Run to start the background task dispatcher for development.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Run to start the zeromq callback receiver\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# pyflakes pylint\n",
        "Line" : 364,
        "CharPositionInLine" : 19
      },
      "24" : {
        "Text" : "# Run all API unit tests.\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Run all API unit tests with coverage enabled.\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Output test coverage as HTML (into htmlcov directory).\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Run API unit tests across multiple Python/Django versions with Tox.\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Make fake data\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# l10n TASKS\n\n# --------------------------------------\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# check for UI po files\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Should be 'Language: zh-CN' but not 'Language: zh_CN' in zh_CN.po\n",
        "Line" : 417,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# generate UI .pot\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# generate django .pot .po\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# generate l10n .json .mo\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# End l10n TASKS\n\n# --------------------------------------\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# UI RELEASE TASKS\n\n# --------------------------------------\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# END UI RELEASE TASKS\n\n# --------------------------------------\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# UI TASKS\n\n# --------------------------------------\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Native docker. Builds UI and raises BrowserSync & filesystem polling.\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Builds UI with development UI without raising browser-sync or filesystem polling.\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# A standard go-to target for API developers to use building the frontend\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# END UI TASKS\n\n# --------------------------------------\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Build a pip-installable package into dist/ with a timestamped version number.\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Build a pip-installable package into dist/ with the release version number.\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Build setup bundle tarball\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Docker isolated rampart\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Docker Compose Development environment\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48,
      "Errorlog" : "line 571:9 token recognition error at: '\"\\0'\nline 571:126 token recognition error at: '\\0'\nline 644:23 token recognition error at: '\"\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1796
}