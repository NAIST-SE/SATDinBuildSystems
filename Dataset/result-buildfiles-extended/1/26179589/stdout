{
  "Repository" : "26179589",
  "Revision" : "HEAD",
  "ObjectId" : "dfdb7d4c25a7da1c7837c48a3fb392e6b872c8a3",
  "CommitTime" : "2018-12-16T10:28:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cea578906cebdca466dcd0ffc0fa71e458b28e75",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Workarounds\n\n# -----------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Project options\n\n# -----------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Compiler flags\n\n# -----------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# Directories\n\n# -----------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# External libraries\n\n# -----------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# Sources\n\n# -----------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------\n\n# Platform\n\n# -----------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------\n\n# Tests\n\n# -----------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -----------------------------------------------\n\n# Multiplatform examples\n\n# -----------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -----------------------------------------------\n\n# Benchmarks\n\n# -----------------------------------------------\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "benchmarks/CMakeLists.txt" : {
      "ObjectId" : "ed4e544f4303d0af61aad7522fedd8e0939ef5dd",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Policies\n\n# -----------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Includes\n\n# -----------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Sources\n\n# -----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# Binary\n\n# -----------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# Dependencies\n\n# -----------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# Linked libraries\n\n# -----------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------\n\n# Benchmark specific\n\n# -----------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------\n\n# Directories\n\n# -----------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "benchmarks/caches/CMakeLists.txt" : {
      "ObjectId" : "fcb5d1328b6b6e3b56405a7a2b3e684089f637a2",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Policies\n\n# -----------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Includes\n\n# -----------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Sources\n\n# -----------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# Binary\n\n# -----------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# Dependencies\n\n# -----------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# Linked libraries\n\n# -----------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------\n\n# Benchmark specific\n\n# -----------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "benchmarks/engine/CMakeLists.txt" : {
      "ObjectId" : "539f41acf6ab2286b5113e1a172eebe9e8982391",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Policies\n\n# -----------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Includes\n\n# -----------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Sources\n\n# -----------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# Binary\n\n# -----------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# Dependencies\n\n# -----------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# Linked libraries\n\n# -----------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------\n\n# Benchmark specific\n\n# -----------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/compiler/clang.cmake" : {
      "ObjectId" : "f7a844bc909c0bf6330306d7221278fd9eaaaa2b",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# possible to fix\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TQuery\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# assimp\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# external 3d noise generation\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# stb\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# freetype\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ok to ignore\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Log mechanism declares static string for each compilation unit.\n\n# This string will be destructed at exit, but it suppose to.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/compiler/common.cmake" : {
      "ObjectId" : "de6000693580f51e740f9a7bc669dfdd3059d879",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/compiler/gcc.cmake" : {
      "ObjectId" : "0c6d40e606a55d47f43087ad0ef59bd354e3faf1",
      "LastModified" : "2018-12-16T10:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Flags added beacuse of externals librabry, GLM and STB.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# STB library warnings\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#stb\n",
        "Line" : 36,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : "# stb, assimp\n",
        "Line" : 37,
        "CharPositionInLine" : 71
      },
      "4" : {
        "Text" : "# stb assimp\n",
        "Line" : 38,
        "CharPositionInLine" : 83
      },
      "5" : {
        "Text" : "# stb\n",
        "Line" : 39,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# stb\n",
        "Line" : 40,
        "CharPositionInLine" : 75
      },
      "7" : {
        "Text" : "# stb\n",
        "Line" : 41,
        "CharPositionInLine" : 70
      },
      "8" : {
        "Text" : "# OpenMP\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# glm\n",
        "Line" : 52,
        "CharPositionInLine" : 59
      },
      "10" : {
        "Text" : "# assimp built internally\n",
        "Line" : 53,
        "CharPositionInLine" : 71
      },
      "11" : {
        "Text" : "# assimp built internally\n",
        "Line" : 54,
        "CharPositionInLine" : 67
      },
      "12" : {
        "Text" : "# assimp built internally\n",
        "Line" : 55,
        "CharPositionInLine" : 75
      },
      "13" : {
        "Text" : "# assimp built internally\n",
        "Line" : 56,
        "CharPositionInLine" : 67
      },
      "14" : {
        "Text" : "# assimp built internally\n",
        "Line" : 57,
        "CharPositionInLine" : 59
      },
      "15" : {
        "Text" : "# assimp built internally\n\n# assimp built internally\n\n# assimp built internally\n",
        "Line" : 58,
        "CharPositionInLine" : 63
      },
      "16" : {
        "Text" : "# assimp built internally\n",
        "Line" : 61,
        "CharPositionInLine" : 67
      },
      "17" : {
        "Text" : "# Log mechanism\n",
        "Line" : 65,
        "CharPositionInLine" : 68
      },
      "18" : {
        "Text" : "# Sanitizer. Use when needed.\n\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -O1 -g -Wno-error=unsafe-loop-optimizations\")\n\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-omit-frame-pointer\")\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "cmake/compiler/msvc.cmake" : {
      "ObjectId" : "56200876ae01276460cf5619d73088785ffd04e1",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no flags at the moment",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/data.cmake" : {
      "ObjectId" : "2ec1200f6c0780725a16cba2b8517a6a29fb636c",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/external.cmake" : {
      "ObjectId" : "242bca77b6099add7a703d85de559a12eefd20c2",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Model loader\n\n# -----------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Backend\n\n# -----------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Texture loader\n\n# -----------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/options.cmake" : {
      "ObjectId" : "3532e0eed693f1295d69fe31723262d1cf22ac68",
      "LastModified" : "2018-10-03T07:25:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Compilation options\n\n# -----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Backend options\n\n# -----------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Tests related options\n\n# -----------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# External libraries options\n\n# -----------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# Build components Options\n\n# -----------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# Benchmark options\n\n# -----------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------\n\n# Additional Options\n\n# -----------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------\n\n# CI Options\n\n# -----------------------------------------------",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/platform/Linux.cmake" : {
      "ObjectId" : "43313ea407c35b0aba8fd03f4ebf141392d9df20",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Package type\n\n# -----------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Includes\n\n# -----------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#uglt freetype2 needs /usr/local/include/freetype2/ft2build.h\n",
        "Line" : 21,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# Targets\n\n# -----------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# Subprojects\n\n# -----------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needs randr libraries\n",
        "Line" : 46,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : "# -----------------------------------------------\n\n# Linker\n\n# -----------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------\n\n# Test app\n\n# -----------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -----------------------------------------------\n\n# Speed up building\n\n# -----------------------------------------------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/platform/Windows.cmake" : {
      "ObjectId" : "a71f387e900a4e62303b85e3b13572840687077f",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Project version cmake policy\n\n#Project dependency cmake policy\n",
        "Line" : 3,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Subprojects\n\n# -----------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Includes\n\n# -----------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# Targets\n\n# -----------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# Linker\n\n# -----------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# Installation\n\n# -----------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/sources.cmake" : {
      "ObjectId" : "9c2fa893d248f29b8aed15268d7bfa040e6e0dbf",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/tests.cmake" : {
      "ObjectId" : "c9d7b5bc2aa6ac699d15d161ac40e7cd5a9140bd",
      "LastModified" : "2018-10-03T07:25:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This adds another subdirectory, which has 'project(gtest)'.\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Include the gtest library. gtest_SOURCE_DIR is available due to\n\n# 'project(gtest)' above.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "##############\n\n# Unit Tests\n\n##############\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Remove warnings from\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Standard linking to gtest stuff.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This is so you can do 'make test' to see all your tests run, instead of\n\n# manually running the executable runUnitTests to see those specific tests.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# You can also omit NAME and COMMAND. The second argument could be some other\n\n# test executable.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "examples/glfw/CMakeLists.txt" : {
      "ObjectId" : "1e87fc99aeb89d43b7e6ea784de9d434a45a0cc7",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------\n\n# Project cmake file\n\n# -----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Main compilation details\n\n# -----------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Compiler configuration\n\n# -----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# Cmake macros\n\n# -----------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# Include directories\n\n# -----------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# Add sub-directories to be included\n\n# -----------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "examples/glfw/cmake/Modules/FindFreeGLUT.cmake" : {
      "ObjectId" : "b87fe79fa63895df19efed551529e96b77908f0f",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FreeGLUT\n\n# Once done this will define\n\n#  FREEGLUT_FOUND - System has LibXml2\n\n#  FREEGLUT_INCLUDE_DIRS - The LibXml2 include directories\n\n#  FREEGLUT_LIBRARIES - The libraries needed to use LibXml2\n\n#  FREEGLUT_DEFINITIONS - Compiler switches required for using LibXml2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FREEGLUT_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/glfw/cmake/Modules/FindFreetypeGL.cmake" : {
      "ObjectId" : "4c9429ccd94b8e1c5775906f20fd040346a1b31e",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL 3.3\n\n# Once done, this will define\n\n#\n\n# GL_FOUND - system has GL\n\n# GL_INCLUDE_DIRS - the GL include directories\n\n# GL_LIBRARIES - link these to use GL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include dir\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "examples/glfw/cmake/Modules/FindGLEW.cmake" : {
      "ObjectId" : "4c9429ccd94b8e1c5775906f20fd040346a1b31e",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL 3.3\n\n# Once done, this will define\n\n#\n\n# GL_FOUND - system has GL\n\n# GL_INCLUDE_DIRS - the GL include directories\n\n# GL_LIBRARIES - link these to use GL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include dir\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "examples/glfw/cmake/Modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "964e8514effb0134212d63f82955183e4d13008c",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/glfw/cmake/Modules/LibFindMacros.cmake" : {
      "ObjectId" : "ee2c1893994043f3d2ae065fc7a1710585a7d336",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 1.0 (2013-04-12)\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic@zi.fi>\n\n# Published at http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If you improve the script, please modify the forementioned wiki page because\n\n# I no longer maintain my scripts (hosted as static files at zi.fi). Feel free\n\n# to remove this entire header if you use real version control instead.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Changelog:\n\n# 2013-04-12  Added version number (1.0) and this header, no other changes\n\n# 2009-10-08  Originally published\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "examples/glfw/cmake/Resources.cmake" : {
      "ObjectId" : "d1057484ec82b8170214c285e1cc63fef7a92647",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#remember to clean the target directory\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "examples/glfw/src/CMakeLists.txt" : {
      "ObjectId" : "54fb589d8b9bad51a0d613bce4c9558bf98b74f0",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CMAKE_POLICY(SET CMP0048 OLD) #Project version cmake policy\n\n#CMAKE_POLICY(SET CMP0046 OLD) #Project dependency cmake policy\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------\n\n# Source files\n\n# -----------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------\n\n# Executable/programs to build\n\n# -----------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------\n\n# ANDROID\n\n# -----------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------\n\n# APPLE\n\n# -----------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------\n\n# WINDOWS\n\n# -----------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------\n\n# LINUX\n\n# -----------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------\n\n# APITRACE DEBUG\n\n# -----------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ext/CMakeLists.txt" : {
      "ObjectId" : "9108e0a24ce82f50ed49232c8e45d50c2740d6d3",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/backend/opengl45/CMakeLists.txt" : {
      "ObjectId" : "c0a55fa8b4ccd97d97ee0aee1ad8f4a799f29ad9",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/backend/opengles20/CMakeLists.txt" : {
      "ObjectId" : "c0a55fa8b4ccd97d97ee0aee1ad8f4a799f29ad9",
      "LastModified" : "2018-09-29T17:09:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/backend/opengles30/CMakeLists.txt" : {
      "ObjectId" : "c0a55fa8b4ccd97d97ee0aee1ad8f4a799f29ad9",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/fontgenerator/CMakeLists.txt" : {
      "ObjectId" : "c7da5df32e8b0b2225f38b808f884326bfc72934",
      "LastModified" : "2018-12-16T10:28:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/freetype2/CMakeLists.txt" : {
      "ObjectId" : "8b859a57e9839e8cbd3890719ee12fee9913f49c",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013, 2014 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# Say\n\n#\n\n#   cmake CMakeLists.txt\n\n#\n\n# to create a Makefile that builds a static version of the library.\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake CMakeLists.txt -DBUILD_SHARED_LIBS:BOOL=true\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake CMakeLists.txt -DBUILD_FRAMEWORK:BOOL=true -G Xcode\n\n#\n\n# instead.\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake CMakeLists.txt -DIOS_PLATFORM=OS -G Xcode\n\n#\n\n# or\n\n#\n\n#   cmake CMakeLists.txt -DIOS_PLATFORM=SIMULATOR -G Xcode\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' will overwrite FreeType's original (top-level) `Makefile' file.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt'  is provided as-is since it is not used by the\n\n#   developer team.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Compiler definitions for building the library\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify library include directories\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For the auto-generated ftconfig.h file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Installations\n\n# Note the trailing slash in the argument to the `DIRECTORY' directive\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Packaging\n\n# CPack version numbers for release tarball name.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add make dist target\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# eof\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "ext/freetype2/Makefile" : {
      "ObjectId" : "c1fa16cee542044c2b91397de1bd931260d2d0ce",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2000, 2002, 2006 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ext/freetype2/builds/cmake/iOS.cmake" : {
      "ObjectId" : "a41a7acf2accd9572ce2f224b09dc7e258ad03f9",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iOS.cmake\n\n#\n\n# Copyright 2014 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by David Wimsey <david@wimsey.us>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# This file is derived from the files `Platform/Darwin.cmake' and\n\n# `Platform/UnixPaths.cmake', which are part of CMake 2.8.4.  It has been\n\n# altered for iOS development.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n\n# -------\n\n#\n\n#   IOS_PLATFORM = OS | SIMULATOR\n\n#\n\n#     This decides whether SDKS are selected from the `iPhoneOS.platform' or\n\n#     `iPhoneSimulator.platform' folders.\n\n#\n\n#     OS - the default, used to build for iPhone and iPad physical devices,\n\n#       which have an ARM architecture.\n\n#     SIMULATOR - used to build for the Simulator platforms, which have an\n\n#       x86 architecture.\n\n#\n\n#   CMAKE_IOS_DEVELOPER_ROOT = /path/to/platform/Developer folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     IOS_PLATFORM value above.  If you manually set this variable, it\n\n#     overrides the default location and forces the use of a particular\n\n#     Developer Platform.\n\n#\n\n#   CMAKE_IOS_SDK_ROOT = /path/to/platform/Developer/SDKs/SDK folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     CMAKE_IOS_DEVELOPER_ROOT value.  In this case it is always the most\n\n#     up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.  If you\n\n#     manually set this variable, it forces the use of a specific SDK\n\n#     version.\n\n#\n\n#\n\n# Macros\n\n# ------\n\n#\n\n#   set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#\n\n#     A convenience macro for setting Xcode specific properties on targets.\n\n#\n\n#     Example:\n\n#\n\n#       set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n#   find_host_package (PROGRAM ARGS)\n\n#\n\n#     A macro to find executable programs on the host system, not within the\n\n#     iOS environment.  Thanks to the `android-cmake' project for providing\n\n#     the command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required as of cmake 2.8.10\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# determine the cmake host system version so we know where to find the iOS\n\n# SDKs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# force the compilers to gcc for iOS\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# skip the platform compiler checks for cross compiling\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# all iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hidden visibility is required for cxx on iOS\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# hack: If a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n#       build tree (where `install_name_tool' was hardcoded), and where\n\n#       CMAKE_INSTALL_NAME_TOOL isn't in the cache and still cmake didn't\n\n#       fail in `CMakeFindBinUtils.cmake' (because it isn't rerun), hardcode\n\n#       CMAKE_INSTALL_NAME_TOOL here to `install_name_tool' so it behaves as\n\n#       it did before.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set up iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check the platform selection and setup for developer root\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# set up iOS developer location unless specified manually with\n\n# CMAKE_IOS_DEVELOPER_ROOT --\n\n# note that Xcode 4.3 changed the installation location; choose the most\n\n# recent one available\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# find and use the most recent iOS SDK unless specified manually with\n\n# CMAKE_IOS_SDK_ROOT\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the sysroot default to the most recent SDK\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set the architecture for iOS --\n\n# note that currently both ARCHS_STANDARD_32_BIT and\n\n# ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# only search the iOS SDKs, not the remainder of the host filesystem\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this little macro lets you set any Xcode specific property\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# this macro lets you find executable programs on the host system\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# eof\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "ext/freetype2/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "2e619299cdfcdb13ec98282f200b013d60a002c3",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ext/nv_helpers_gl/CMakeLists.txt" : {
      "ObjectId" : "a9e5cc598830f5d46928404b510961617d4f6197",
      "LastModified" : "2018-12-16T10:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-missing-declarations\")\n\n#set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-cast-qual\")\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "8321d8aed4ea87fa016719986a2277b30449d128",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/level_editor/CMakeLists.txt" : {
      "ObjectId" : "8a8b63f79d93a96ef88f6d631464a4e30b6b12b7",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/level_editor/src/CMakeLists.txt" : {
      "ObjectId" : "7a393abdc3606f2143c1b0c135e31dc2b5335564",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory (${CMAKE_CURRENT_SOURCE_DIR}/loader)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/level_editor/src/common/CMakeLists.txt" : {
      "ObjectId" : "e63625815ecec7a1a17ce5f7f9eb7a7daa93a43f",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/level_editor/src/objects/CMakeLists.txt" : {
      "ObjectId" : "cc18846f20a17cd7721d262ff4087c291b97730d",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/level_editor/src/scene/CMakeLists.txt" : {
      "ObjectId" : "41e1930666b2a67ec2e3ef776130e73649aad253",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/level_editor/tests/CMakeLists.txt" : {
      "ObjectId" : "2ce1e85cfa6b5c3a0f96bf82009fa4e15a31248d",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(${gtest_SOURCE_DIR}/include ${gtest_SOURCE_DIR})\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/level_editor/tests/test/CMakeLists.txt" : {
      "ObjectId" : "47b11246ecc2b856d0c689492985d9488686358a",
      "LastModified" : "2018-10-02T19:48:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############\n\n# Unit Tests\n\n##############\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard linking to gtest stuff.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 39,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 3502
}