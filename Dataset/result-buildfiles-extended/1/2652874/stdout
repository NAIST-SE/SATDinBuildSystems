{
  "Repository" : "2652874",
  "Revision" : "HEAD",
  "ObjectId" : "0a76990b198fb77474f0b6dfb7c9f97ed8a8b88e",
  "CommitTime" : "2019-04-16T19:29:07Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "0c3dbceb7cfc16ffb309398e87b5d3ab96c05ac1",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# top-level Makefile for NUT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include directory for aclocal\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subdirectories to build and distribute. The order matters, as\n\n# several subdirectories depend on stuff in \"common\" or tools being built first\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# COPYING is included automatically.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# flags to pass to ./configure when calling \"make distcheck\" and \"make\n\n# distcheck-light\". Try to check as many features as possible! Also\n\n# need to give augeas-lenses-dir, hotplug-dir and udev-dir, so that\n\n# staged install does not fail.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make a distcheck (and check in particular) with enabled valgrind and debug info\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# workaround the dist generated files that are also part of the distribution\n\n# Note that distcleancheck is disabled for now, while waiting for a proper\n\n# solution, that do not break older unix systems\n\n#distcleancheck_listfiles = \\\n#\tfind . -type f -exec sh -c 'test -f $(srcdir)/{} || echo {}' ';'\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Hook the documentation building and validating recipes\n\n# Note: these are optionally available (as determined during configure runs)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This target adds syntax-checking for committed shell script files,\n\n# to avoid surprises and delays in finding fatal typos after packaging\n\n###\n\n### Note: currently, shellcheck target calls check-scripts-syntax\n\n### so when both are invoked at once, in the end the check is only\n\n### executed once. Later it is anticipated that shellcheck would\n\n### be implemented by requiring, configuring and calling the tool\n\n### named \"shellcheck\" for even more code inspection and details.\n\n### Still, there remains value in also checking the script syntax\n\n### by the very version of the shell interpreter that would run\n\n### these scripts in production usage of the resulting packages.\n\n###\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Automatically generate the ChangeLog from Git logs:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Older boundary of the ChangeLog commits range\n\n# It can be a tag ('v2.2.0'), a commit hash, a date, ...\n\n# See gitrevisions for more information on specifying ranges\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Force ChangeLog regeneration upon make dist (due to nonexistant 'dummy-stamp'),\n\n# in case it has already been generated previously\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Maintainers targets: distribution signature and hashes\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# targets from old build system (pre-automake).\n\n# supported for a period of time for backward \"compatibility\".\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The target install-data already has a standardized meaning under automake\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "clients/Makefile.am" : {
      "ObjectId" : "1c4f277daac0954d5c55bbf324f9b627286f6d6c",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: clients\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# by default, link programs in this directory with libcommon.a\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid per-target CFLAGS, because this will prevent re-use of object\n\n# files. In any case, CFLAGS are only -I options, so there is no harm,\n\n# but only add them if we really use the target.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# not LDADD.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Below we set API versions of public libraries\n\n# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n\n# Note that changes here may have to be reflected in packaging (the shared\n\n# object .so names would differ)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# libupsclient version information\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# libnutclient version information and build\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "common/Makefile.am" : {
      "ObjectId" : "e2a4acb697c9b97281df6ad3e9f920d0182f086f",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: common\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# do not hard depend on '../include/nut_version.h', since it blocks\n\n# 'dist', and is only required for actual build, in which case\n\n# BUILT_SOURCES (in ../include) will ensure nut_version.h will\n\n# be built before anything else\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ensure inclusion of local implementation of missing systems functions\n\n# using LTLIBOBJS. Refer to configure.in/.ac -> AC_REPLACE_FUNCS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "conf/Makefile.am" : {
      "ObjectId" : "124174ce67f698faea5a03ef1c3076257dcb76bc",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: conf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/Makefile.am" : {
      "ObjectId" : "36d3dd72be4cbe385db5a70d5339c177fb792ff4",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: data\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/html/Makefile.am" : {
      "ObjectId" : "956e66b8842566a7517d304c9794dce7d7e8376f",
      "LastModified" : "2006-12-27T04:17:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: data/html                                                  \n\n# install these only if configured --with-cgi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/Makefile.am" : {
      "ObjectId" : "cb04e88ea7ace70ed1d6a6793e66da0397013504",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Only track here the local deps\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also build the HTML manpages with these targets\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### TODO: automatic dependency generation\n\n# Add other directory deps (not for local EXTRA_DIST) and generated contents\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: without the \"-v\", asciidoc (circa 8.6.2) sometimes hangs when\n\n# generating the chunked HTML. In this case, export the environment\n\n# variable ASCIIDOC_VERBOSE to \"-v\", ie:\n\n#   $ ASCIIDOC_VERBOSE=-v make\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE: a2x newer than 8.6.8 says \"--destination-dir\" is only valid for HTML.\n\n# As of version 8.6.9 it lies, and the argument is required for our distcheck.\n\n# For more details see issues https://github.com/asciidoc/asciidoc/issues/44\n\n# and https://github.com/networkupstools/nut/pull/281 (in short, attempts\n\n# to \"fix\" this warning broke NUT build). If this is to be retried later, see\n\n# https://github.com/networkupstools/nut/pull/281/commits/fe17861c4ea12679b3ebfefa8a6d692d79d99f2d\n\n# and do not forget to fix up docs/man/Makefile.am too ;)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOTE: a2x tends to copy some files into its working area, preserving original\n\n# permissions. If those files are read-only in origin (e.g. packaged stylesheet\n\n# or our resources coming from EXTRA_DIST) the next a2x can not overwrite it.\n\n# Also note that such hoarding of files has potential to break parallel builds\n\n# (or cause them to produce undefined results if some bad timing happens).\n\n# As a brutal workaround for the former problem, we chmod. For second one we\n\n# might try magic with .SEQUENTIAL recipe hints, but that is gmake-dependent.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Non-interactively spell check all documentation source files.\n\n# This is useful for Buildbot and automated QA processing\n\n# FIXME: how to present output (std{out,err}, single file or per target)?\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note: de-facto our documentation is beyond ASCII (at least in names of\n\n# international committers). The grep tests below look if the aspell output\n\n# contained something other than the OK lines (tagged with asterisk) and\n\n# aspell's version (tagged with @) and if it did - those lines must be the\n\n# spellcheck complaints. Empty OUT is ok.\n\n# We also must indent the input, because certain piped-in characters are\n\n# interpreted as commands, and seems this feature can not be turned off.\n\n# See also http://aspell.net/man-html/Through-A-Pipe.html\n\n# TODO: Is \"grep -a\" or \"grep -b\" (treat input as ascii/bin) portable enough?\n\n# Is \"egrep == grep -E\" always valid? (maybe all a job for configure.ac)\n\n# Set SPELLCHECK_ERROR_FATAL=no if there are some unavoidable issues\n\n# due to spellchecking, to temporarily not fail builds due to this.\n\n# For Travis CI in particular, see ci_build.sh in NUT codebase root.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 173:7 token recognition error at: '\"ASPELL automatic execution line is : ( sed 's,^\\(.*\\)$$, \\1'\nline 179:26 token recognition error at: '\\1'\nline 248:77 token recognition error at: '\"\\nendif !HAVE_ASPELL\\n\\n.PHONY: html html-single pdf\\n\u0000'\n"
    },
    "docs/man/Makefile.am" : {
      "ObjectId" : "fef33f6db068f29016599fd3ce44ebeeb5e1b824",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: man\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Notes:\n\n# - sources (.txt) and groff formats are both distributed,\n\n# - only sources are versioned ; groff files are generated at worst\n\n#   during 'make dist' (while preparing a release tarball)\n\n# - HTML files are built upon request, if AsciiDoc is available,\n\n# - groff update will only happen if AsciiDoc is available too,\n\n# - all this can probably (and hopefully) be improved, but I've not\n\n#   found a way to do pattern replacement on the fly for target deps!\n\n#   FIXME: investigate an autogen.sh hook\n\n# - Ref: http://www.gnu.org/software/hello/manual/automake/Man-pages.html\n\n# - WITH_MANS can be enabled if either we are building man-pages, or if\n\n#   the --with-doc=man=auto detected an inability to build the man-pages\n\n#   but enabled the DOC_INSTALL_DISTED_MANS toggle so we deliver disted\n\n#   files from source tree\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Base configuration and client manpages, always installed\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CGI (--with-cgi) related manpages\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Development (--with-dev) related manpages\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOTE: nutclient_*.3 has no source counterpart (libnutclient_*.txt)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# WITH_DEV\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Drivers related manpages\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (--with-drivers=...)\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# (--with-serial)\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# (--with-snmp)\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# (--with-usb)\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# (--with-serial / --with-usb)\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# (--with-neon)\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# (--with-powerman)\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# (--with-ipmi)\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# SOME_DRIVERS\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# distribute everything, even those not installed by default\n\n# Note that 'dist' target requires AsciiDoc!\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Cause \"make dist\" to fail, unless caller (like the stack of distcheck-dmf)\n\n# runs ./configure --with-doc=skip (or --with-doc=man=skip specifically)\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For builds done from dist'ed sources, there may be a conflict of timestamps\n\n# between original *.txt files and pre-built manpages etc. leading to skipping\n\n# of manpage re-generation even if that activity is possible and requested.\n\n# Possibly a cleaner, but less portable, solution would be to touch the\n\n# generated files to long ago. Current solution assumes good valid clocks :)\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# For builds with allowed installation of prebuild man pages, check that\n\n# they exist in sources (make would pull them automatically as a fallback\n\n# from failed lookup in build products). For builds that require rebuild\n\n# of man pages, abort with error if build product is missing.\n",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "### Prior to Asciidoc ~8.6.8, the --destination-dir flag didn't seem to affect the location of the intermediate .xml file.\n\n### This parameter is currently required; see docs/Makefile.am for more detail.\n",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "drivers/Makefile.am" : {
      "ObjectId" : "dcc260ce4521ecf5829dfcb486bb9250fda0596c",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: drivers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# by default, link programs in this directory with libcommon.la\n\n# (libtool version of the static lib, in order to access LTLIBOBJS)\n\n#FIXME: SERLIBS is only useful for LDADD_DRIVERS_SERIAL not for LDADD_COMMON\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# most targets are drivers, so make this the default\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid per-target CFLAGS, because this will prevent re-use of object\n\n# files. In any case, CFLAGS are only -I options, so there is no harm,\n\n# but only add them if we really use the target.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# distribute all drivers, even ones that are not built by default\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# construct the list of drivers to build\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# always build upsdrvctl\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ==========================================================================\n\n# Driver build details\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# upsdrvctl: the all-singing all-dancing driver control program\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# serial drivers: all of them use standard LDADD and CFLAGS\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# non-serial drivers: these use custom LDADD and/or CFLAGS\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# dummy\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Clone drivers\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# apcupsd client driver\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# sample skeleton driver\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# USB\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# HID-over-serial\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# per-target CFLAGS are necessary here\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# SNMP\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# NEON XML/HTTP\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Powerman\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# IPMI PSU\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Mac OS X metadriver\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Modbus driver\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Asem\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# nutdrv_qx USB/Serial\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# List of header files. The purpose of this list is not dependency\n\n# tracking (which is automatic), but to ensure these files are\n\n# distributed by \"make dist\".\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define a dummy library so that Automake builds rules for the\n\n# corresponding object files.  This library is not actually built,\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "include/Makefile.am" : {
      "ObjectId" : "527d0995b365fef112a25664834523f9babaa002",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# http://www.gnu.org/software/automake/manual/automake.html#Clean\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# magic to include Git version information in NUT version string\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# counter part of BUILT_SOURCES: since nut_version is not a direct\n\n# deps of a local target, we must clean it by ourself before the\n\n# distribution\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3,
      "Errorlog" : "line 11:66 token recognition error at: '\\1'\n"
    },
    "lib/Makefile.am" : {
      "ObjectId" : "d164e1bc966d5f0d7ff9981230b7b6e9d2dc662d",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: lib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/HP-UX/Makefile" : {
      "ObjectId" : "11190cb3e95938b26e9281a2c6e77225819890da",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# directory definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/Makefile.am" : {
      "ObjectId" : "2d54b5b0852a0e825d27779453850427203647f0",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "scripts/Solaris/Makefile.am" : {
      "ObjectId" : "baa4ee3713183b3b8c70a69c60191154ff51535b",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# OS equivalent of /lib/svc/method and /var/svc/manifest/application\n\n# but we can just use then from this location\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: Reduce build dependencies (implicit!) on python and perl\n\n#       by shelling the scripts used below\n\n# NOTE: This assumes the rest of the product has already been built\n\n#       and installed under PROTOTYPE_DIR, but declares no explicit\n\n#       dependency on that\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Define support for IPS packaging (provide p5m files and make rules)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "scripts/Windows/Makefile" : {
      "ObjectId" : "abf1b97368191c9e721622f3a3181bc094a56783",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "scripts/augeas/Makefile.am" : {
      "ObjectId" : "db304fbd0c3ef703bc70f9f60f61eb5ced8428c7",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# only call the script to generate Augeas ups.conf lens upon \"make dist\",\n\n# and if Python is present\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This needs augparse from augeas-tools\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME\n\n#\taugparse -I $(srcdir)/ $(srcdir)/tests/test_nut.aug\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now \"make install\" should cover delivery of Augeas lenses...\n\n# The \"auglensdir\" value should be set up by configure\n\n# The *.aug files are generated by rule above or by autogen.sh and/or configure\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "scripts/devd/Makefile.am" : {
      "ObjectId" : "e5a9bbcce995135713d09e740bdb03f4993ff756",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# we should never remove this one, apart from a distclean-check\n\n#MAINTAINERCLEANFILES = nut-usbups.rules.in\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/hotplug/Makefile.am" : {
      "ObjectId" : "c36cd7dad1d3a39a50d09deb1aa6245cd34335fb",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# we should never remove this one, apart from a distclean-check\n\n#MAINTAINERCLEANFILES = libhid.usermap\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/python/Makefile.am" : {
      "ObjectId" : "03267257dee599670d14293998c9692db7348512",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: data/html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/systemd/Makefile.am" : {
      "ObjectId" : "c7c7a9f3c944acf45e3a505f78b6819fce005e3b",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "scripts/udev/Makefile.am" : {
      "ObjectId" : "1973ccf89b1720ced449cf0efdf7656d03102a13",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# we should never remove this one, apart from a distclean-check\n\n#MAINTAINERCLEANFILES = nut-usbups.rules.in\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/upsdrvsvcctl/Makefile.am" : {
      "ObjectId" : "7d7a0f235efe7c3c90df501a4ba067262a7656d1",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "server/Makefile.am" : {
      "ObjectId" : "8146568a0961a31b25d06318bc30bf05a51b8954",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: server\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid per-target CFLAGS, because this will prevent re-use of object\n\n# files. In any case, CFLAGS are only -I options, so there is no harm,\n\n# but only add them if we really use the target.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/Makefile.am" : {
      "ObjectId" : "9388c5899da6a236e34155d6e0ed95eb5ff01e35",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Network UPS Tools: tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: per configure script this \"SHOULD\" also assume\n\n# that we HAVE_CXX11 - but better have it explicit\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of src files for CppUnit tests\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/Makefile.am" : {
      "ObjectId" : "daf420bd763df1795c886d534aadd4c517c74929",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# SUBDIRS are explicitly a listing of all the directories that make\n\n# must recurse into BEFORE processing the current directory.\n\n#\n\n# These python scripts must be moved into a sub-directory, and _only_\n\n# executed IF they need to be, and all the nut-scanner sources need\n\n# to be moved out of a sub-directory into this directory.\n\n#\n\n# Anyway, for the time being, we force build in ./ before nut-scanner,\n\n# to have nutscan-{usb,snmp}.h built before going into the nut-scanner\n\n# sub-directory. For good measure we also call this from nut-scanner's\n\n# make, to handle developer workflow (editing the *.c sources this uses).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hotplug output file\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# udev output file\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# BSD devd output file\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# UPower output file\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This target is called from the making of nut-scanner to ensure its bits\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Aliases for particular files, if someone has a need:\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# call the USB info script upon \"make dist\", and if Perl is present\n\n# call the SNMP info script upon \"make dist\", and if Python is present\n\n# and call both for building nut-scanner\n\n# Also ensure that data/driver.list is well formatted\n\n# NOTE: Beware that current working directory for the script should be builddir\n\n# so it may write the files in \"dist\" case (read-only sources), but the script\n\n# is called from the distdir where its copy is present.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tools/nut-scanner/Makefile.am" : {
      "ObjectId" : "4932f3246b81b1eb7dd5e5f8b1e59d15110bee68",
      "LastModified" : "2019-04-05T13:56:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Generally, list headers and/or sources which are re-generated\n\n# for nut-scanner in the parent dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General set of nut-scanner dependencies generated in the parent dir\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure we have the freshest files (no-op if built earlier and then\n\n# no driver sources and other dependencies were edited by a developer)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only build nut-scanner, and its library, if libltdl was found (required!)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Below we set API versions of public libraries\n\n# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n\n# Note that changes here may have to be reflected in packaging (the shared\n\n# object .so names would differ)\n\n#\n\n# libnutscan version information\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C is not a header, but there is no dist_noinst_SOURCES\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2,
    "AUTOMAKE" : 24
  },
  "ElapsedTime" : 7078
}