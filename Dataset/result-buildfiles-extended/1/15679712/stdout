{
  "Repository" : "15679712",
  "Revision" : "HEAD",
  "ObjectId" : "04fe62b9df93cf0d86fd7416196fbd7b4a3bc5bc",
  "CommitTime" : "2018-05-23T07:14:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "380ed7b9a7d69b5670465bbc1ecfd84ea6a822a7",
      "LastModified" : "2018-05-23T06:27:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n# Author:      jongough aka. Jon Gough\n\n## Copyright:\n\n## License:     wxWidgets License\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#For more, see http://clang.llvm.org/extra/clang-tidy/\n\n#set(CLANG_TIDY_CHECKS \"-*,modernize-*\")\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# delete it\n",
        "Line" : 75,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "#SET_DIRECTORY_PROPERTIES(dummy ADDITIONAL_MAKE_CLEAN_FILES ${PROJECT_SOURCE_DIR}/include/version.h)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindTinyXML.cmake" : {
      "ObjectId" : "2f3bc3c6bb22baefda37762eb58ed0e642e47d90",
      "LastModified" : "2015-04-25T15:51:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find TinyXML\n\n# Find the native TinyXML includes and library\n\n#\n\n#   TINYXML_FOUND       - True if TinyXML found.\n\n#   TINYXML_INCLUDE_DIR - where to find tinyxml.h, etc.\n\n#   TINYXML_LIBRARIES   - List of libraries when using TinyXML.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TINYXML_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/PluginConfigure.cmake" : {
      "ObjectId" : "605a3ea7f7393e40ebd77f7a3ae197329f1b636f",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian (Based on the work of Sean D'Epagnier)\n\n## Copyright:   2014\n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  Do the version.h & wxWTranslateCatalog configuration into the build output directory,\n\n#  thereby allowing building from a read-only source tree.\n\n# The removes are to get rid of old copies - this can be removed at next release version, i.e. > 1.1.0\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SET(PROFILING 1)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  IF NOT DEBUGGING CFLAGS=\"-O2 -march=native\"\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  ADD_DEFINITIONS( \"-Wall -Wno-unused-result -g -O2 -fexceptions\" )\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add some definitions to satisfy MS\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this is just a hack. I think the bug is in FindwxWidgets.cmake\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#    MESSAGE (STATUS \"ocpnUSE_GLES defined for workaround\")\n\n#    ADD_DEFINITIONS(-DocpnUSE_GLES)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/PluginInstall.cmake" : {
      "ObjectId" : "d34867d54e5d21fcd45942937cc0d31e0650778d",
      "LastModified" : "2017-07-16T04:17:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian (Based on the work of Sean D'Epagnier)\n\n## Copyright:   2014\n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    TARGET_LINK_LIBRARIES(${PACKAGE_NAME}\n\n#\tgdiplus.lib\n\n#\tglu32.lib)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# assuming wxwidgets is compiled with unicode, this is needed for mingw headers\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Based on code from nohal\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# default\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#      SET (LIB_INSTALL_DIR \"lib64\")\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#    SET(TENTATIVE_PREFIX \"/usr/local\")\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#    SET (PACKAGE_DEPS  \"wxGTK mesa-libGLU mesa-libGL gettext zlib bzip2 portaudio\")\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#    SET (PACKAGE_DEPS  \"libwx_baseu-2_8-0-wxcontainer MesaGLw libbz2-1 portaudio\")\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#      IF (CMAKE_OSX_64)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#      ENDIF (CMAKE_OSX_64)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# On WIN32 probably CMAKE_SIZEOF_VOID_P EQUAL 8, but we don't use it at all now...\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#fix for missing dll's\n\n#FILE(GLOB gtkdll_files \"${CMAKE_CURRENT_SOURCE_DIR}/buildwin/gtk/*.dll\")\n\n#    INSTALL(FILES ${gtkdll_files} DESTINATION \".\")\n\n#    FILE(GLOB expatdll_files \"${CMAKE_CURRENT_SOURCE_DIR}/buildwin/expat-2.1.0/*.dll\")\n\n#    INSTALL(FILES ${expatdll_files} DESTINATION \".\")\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# For Apple build, we need to copy the \"data\" directory contents to the build directory, so that the packager can pick them up.\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "cmake/PluginLocalization.cmake" : {
      "ObjectId" : "2e951d9dcbe341cee7ab7c28f29b731838610ac8",
      "LastModified" : "2016-03-08T07:08:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian / Sean D'Epagnier\n\n## Copyright:   \n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert crlf to lf for consistency and make copy_if_different work correctly\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/PluginPackage.cmake" : {
      "ObjectId" : "d901735840d58242c985837b87c57e16fed77b96",
      "LastModified" : "2016-03-08T07:08:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian (Based on the work of Sean D'Epagnier)\n\n## Copyright:   2014\n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build a CPack driven installer package\n\n#include (InstallRequiredSystemLibraries)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to protect against confusable windows users, let us _not_ generate zip packages\n\n#  SET(CPACK_GENERATOR \"NSIS;ZIP\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# override install directory to put package files in the opencpn directory\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CPACK_NSIS_DIR ??\n\n# CPACK_BUILDWIN_DIR ??\n\n# CPACK_PACKAGE_ICON ??\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Let cmake find NSIS.template.in\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#  These lines set the name of the Windows Start Menu shortcut and the icon that goes with it\n\n#  SET(CPACK_NSIS_INSTALLED_ICON_NAME \"${PACKAGE_NAME}\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  SET(CPACK_PACKAGE_FILE_NAME \"${PACKAGE_NAME}_${VERSION_MAJOR}.${VERSION_MINOR}_setup\" )\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Gunther\n",
        "Line" : 42,
        "CharPositionInLine" : 69
      },
      "9" : {
        "Text" : "#Gunther\n",
        "Line" : 43,
        "CharPositionInLine" : 60
      },
      "10" : {
        "Text" : "#    MESSAGE(STATUS \"Using generic cpack package description file.\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#SET(CPACK_SOURCE_GENERATOR \"TGZ\")\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The following components are regex's to match anywhere (unless anchored)\n\n# in absolute path + filename to find files or directories to be excluded\n\n# from source tarball.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#    INCLUDE(UseRPMTools)\n\n#    IF(RPMTools_FOUND)\n\n#        RPMTools_ADD_RPM_TARGETS(packagename ${PROJECT_SOURCE_DIR}/package.spec)\n\n#    ENDIF(RPMTools_FOUND)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# need apt-get install rpm, for rpmbuild\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# don't bother with rpm on armhf\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# note: in a chroot must use \"setarch i686 make package\"\n",
        "Line" : 93,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# requires my patches to cmake\n",
        "Line" : 103,
        "CharPositionInLine" : 44
      },
      "18" : {
        "Text" : "#    SET(CPACK_RPM_PACKAGE_GROUP \"Applications/Engineering\")\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#    SET(CPACK_RPM_USER_BINARY_SPECFILE \"${PROJECT_SOURCE_DIR}/opencpn.spec.in\")\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    SET(CPACK_SET_DESTDIR ON)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# configure_file(${PROJECT_SOURCE_DIR}/src/opencpn.rc.in ${PROJECT_SOURCE_DIR}/src/opencpn.rc)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this dummy target is necessary to make sure the ADDITIONAL_MAKE_CLEAN_FILES directive is executed.\n\n# apparently, the base CMakeLists.txt file must have \"some\" target to activate all the clean steps.\n\n#ADD_CUSTOM_TARGET(dummy COMMENT \"dummy: Done.\" DEPENDS ${PACKAGE_NAME})\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#  Copy a bunch of files so the Packages installer builder can find them\n\n#  relative to ${CMAKE_CURRENT_BINARY_DIR}\n\n#  This avoids absolute paths in the chartdldr_pi.pkgproj file\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Patch the pkgproj.in file to make the output package name conform to Xxx-Plugin_x.x.pkg format\n\n#  Key is:\n\n#  <key>NAME</key>\n\n#  <string>${VERBOSE_NAME}-Plugin_${VERSION_MAJOR}.${VERSION_MINOR}</string>\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 25
    },
    "ocpninclude/wxcurl/include/curl/curlbuild.h.cmake" : {
      "ObjectId" : "60bc7a70ec547e2dd7a950657f6bc31c901742ad",
      "LastModified" : "2016-03-08T07:08:32Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at http://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* ================================================================ */\n/*               NOTES FOR CONFIGURE CAPABLE SYSTEMS                */\n/* ================================================================ */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n * NOTE 1:\n * -------\n *\n * Nothing in this file is intended to be modified or adjusted by the\n * curl library user nor by the curl library builder.\n *\n * If you think that something actually needs to be changed, adjusted\n * or fixed in this file, then, report it on the libcurl development\n * mailing list: http://cool.haxx.se/mailman/listinfo/curl-library/\n *\n * This header file shall only export symbols which are 'curl' or 'CURL'\n * prefixed, otherwise public name space would be polluted.\n *\n * NOTE 2:\n * -------\n *\n * Right now you might be staring at file include/curl/curlbuild.h.in or\n * at file include/curl/curlbuild.h, this is due to the following reason:\n *\n * On systems capable of running the configure script, the configure process\n * will overwrite the distributed include/curl/curlbuild.h file with one that\n * is suitable and specific to the library being configured and built, which\n * is generated from the include/curl/curlbuild.h.in template file.\n *\n */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* ================================================================ */\n/*  DEFINITION OF THESE SYMBOLS SHALL NOT TAKE PLACE ANYWHERE ELSE  */\n/* ================================================================ */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* ================================================================ */\n/*  EXTERNAL INTERFACE SETTINGS FOR CONFIGURE CAPABLE SYSTEMS ONLY  */\n/* ================================================================ */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file ws2tcpip.h must be included by the external interface. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system   */\n/* header file sys/types.h must be included by the external interface. */",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system */\n/* header file stdint.h must be included by the external interface.  */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file inttypes.h must be included by the external interface. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system    */\n/* header file sys/socket.h must be included by the external interface. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file sys/poll.h must be included by the external interface. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Integral data type used for curl_socklen_t. */",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* The size of `curl_socklen_t', as computed by sizeof. */",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Data type definition of curl_socklen_t. */",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Signed integral data type used for curl_off_t. */",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Data type definition of curl_off_t. */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* curl_off_t formatting string directive without \"%\" conversion specifier. */",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* unsigned curl_off_t formatting string without \"%\" conversion specifier. */",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* curl_off_t formatting string directive with \"%\" conversion specifier. */",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* The size of `curl_off_t', as computed by sizeof. */",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* curl_off_t constant suffix. */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* unsigned curl_off_t constant suffix. */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    }
  },
  "FileTypes" : {
    "CMAKE" : 6,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 1966
}