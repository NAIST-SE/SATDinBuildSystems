{
  "Repository" : "33517492",
  "Revision" : "HEAD",
  "ObjectId" : "1ecade03d980285cb543fe16aa7f64573a651d45",
  "CommitTime" : "2019-04-17T18:54:49Z",
  "Files" : {
    "AndroidSDKTesting/app/proguard-rules.pro" : {
      "ObjectId" : "0abe5c314b40d06477add672a748a5031da62ee7",
      "LastModified" : "2016-11-22T22:45:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /home/local/ANT/bambrose/Android/Sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CI/install-test/CMakeLists.txt" : {
      "ObjectId" : "e26ae0dab069ae98f0bdf05519c4963696ba0f65",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "6a8c79183c0bb6a0b7821e9034392c2428ca378e",
      "LastModified" : "2019-04-17T18:37:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# support IN_LIST\n",
        "Line" : 30,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# 3.0 or higher is strongly suggested; build settings (target_compile_options/etc...) sometimes do not get propagated properly under certain conditions prior to this version\n\n# Making this a hard requirement is potentially disruptive to existing customers who aren't affected by the bad behavior though, so just warn for now\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# git is required for Android builds and building third-party dependencies\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Cmake invocation variables:\n\n#   CUSTOM_MEMORY_MANAGEMENT - if set to 1, generates the sdk project files with custom memory management enabled, otherwise disables it\n\n#   BUILD_ONLY - only build project identified by this variable, a semi-colon delimited list, if this is set we will build only the projects listed. Core will always be built as will its unit tests.\n\n#                    Also if a high level client is specified then we will build its dependencies as well. If a project has tests, the tests will be built.\n\n#   REGENERATE_CLIENTS - all clients being built on this run will be regenerated from the api definitions, this option involves some setup of python, java 8, jdk 1.8, and maven\n\n#   ADD_CUSTOM_CLIENTS - semi-colon delimited list of format serviceName=<yourserviceName>,version=<theVersionNumber>;serviceName2=<yourOtherServiceName>,version=<versionNumber2>\n\n#                          to use these arguments, you should add the api definition .normal.json file for your service to the api-description folder in the generator.\n\n#   NDK_DIR - directory where the android NDK is installed; if not set, the location will be read from the ANDROID_NDK environment variable\n\n#   CUSTOM_PLATFORM_DIR - directory where custom platform scripts, modules, and source resides\n\n#   AWS_SDK_ADDITIONAL_LIBRARIES - names of additional libraries to link into aws-cpp-sdk-core in order to support unusual/unanticipated linking setups (static curl against static-something-other-than-openssl for example)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: convert boolean invocation variables to options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# backwards compatibility with old command line params\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MINIMIZE_SIZE always implies UNITY_BUILD\n",
        "Line" : 92,
        "CharPositionInLine" : 31
      },
      "8" : {
        "Text" : "# CMAKE_MODULE_PATH is a CMAKE variable. It contains a list of paths \n\n# which could be used to search CMAKE modules by \"include()\" or \"find_package()\", but the default value is empty.\n\n# Add cmake dir to search list\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# include() will \"load and run\" cmake script\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# use response files to prevent command-line-too-big errors for large libraries like iam\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# build third-party targets\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If building third party dependencies, we will move them to the same directory where SDK has been installed during installation.\n\n# Therefore, we should set rpath to $ORIGIN to let SDK find these third party dependencies.\n\n# Otherwise, customers are responsible for handling the linkage to these libraries.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# build the sdk targets\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# http client, encryption, zlib\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Setup for easy debugging. No optimizations.\n\n# An optimized version of Debug.\n\n# Fully optimized, no debugging information.\n\n# A debuggable version of Release.\n\n# Like Release, but optimized for memory rather than speed.\n",
        "Line" : 211,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# Instead of calling functions/macros inside included cmake scripts, we should call them in our main CMakeList.txt\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# setup user specified installation directory if any, regardless previous platform default settings\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# for user friendly cmake usage\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# for generating make uninstall target\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "android-build/CurlAndroidCrossCompile.cmake" : {
      "ObjectId" : "c35a1e8e0a40475e04af3d3d6e7428852c0ff370",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "android-build/cmakefiles/openssl-cmake/CMakeLists.txt" : {
      "ObjectId" : "ca63ee636f785fdce852377e31d706f5bf634726",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on original work by David Manura\n\n# Copyright (C) 2007-2012 LuaDist.\n\n# Copyright (C) 2013 Brian Sidebotham\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Redistribution and use of this file is allowed according to the terms of the\n\n# MIT license.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#bambrose 2015-06-01 commented out unneeded features that were breaking android build. Since this is only for android, we removed ocsp and wincrypt since they were not needed anyways.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# avoid conflict: ocsp.h and wincrypt.h\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Generate the package target\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "android-build/cmakefiles/openssl-cmake/apps/CMakeLists.txt" : {
      "ObjectId" : "7ff78a9c9fe7d18b52ced6017972b5aa5d93c10e",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on original work by David Manura\n\n# Copyright (C) 2007-2012 LuaDist.\n\n# Copyright (C) 2013 Brian Sidebotham\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Redistribution and use of this file is allowed according to the terms of the\n\n# MIT license.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#bambrose 2015-06-01 commented out unneeded compile deps.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 31,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 4
    },
    "android-build/cmakefiles/openssl-cmake/crypto/CMakeLists.txt" : {
      "ObjectId" : "49203d547aa2e5c5334062e9ffefe45bc3d0c2ec",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on original work by David Manura\n\n# Copyright (C) 2007-2012 LuaDist.\n\n# Copyright (C) 2013 Brian Sidebotham\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Redistribution and use of this file is allowed according to the terms of the\n\n# MIT license.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#bambrose 2015-06-01 commented out unneeded features.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#~2DO: set BUILDINF_DATE to `date LC_ALL=C LC_TIME=C`\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message( STATUS \"{dir} ${dir}\" )\n\n#message( STATUS \"{add_submodule_UNPARSED_ARGUMENTS} ${add_submodule_UNPARSED_ARGUMENTS}\" )\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message( STATUS \"{add_submodule_EXHEADERS} ${add_submodule_EXHEADERS}\" )\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# avoid conflict: ocsp.h and wincrypt.h\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set_property( SOURCE ../engines/ccgost/gost_asn1.c APPEND PROPERTY COMPILE_DEFINITIONS\n\n# WIN32_LEAN_AND_MEAN )\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# bf_lbuf.c\n",
        "Line" : 117,
        "CharPositionInLine" : 44
      },
      "9" : {
        "Text" : "# dirs not included: threads\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "android-build/cmakefiles/openssl-cmake/crypto/buildinf.h.cmake" : {
      "ObjectId" : "0b9465448c6f3f74a8adca8710d2a08811ead4f4",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* auto-generated by crypto/Makefile for crypto/cversion.c */",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "/* ~2DO: is the above ok? */",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "android-build/cmakefiles/openssl-cmake/ssl/CMakeLists.txt" : {
      "ObjectId" : "d090c63292318693e2dc67e3017fec1686e0ebec",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on original work by David Manura\n\n# Copyright (C) 2007-2012 LuaDist.\n\n# Copyright (C) 2013 Brian Sidebotham\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Redistribution and use of this file is allowed according to the terms of the\n\n# MIT license.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "android-unified-tests/CMakeLists.txt" : {
      "ObjectId" : "ca87c3c54b8cdb385e22b11af00f72ccf6447437",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# commented-out tests are not working on android yet due to file permissions/location/management issues\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "aws-cpp-sdk-AWSMigrationHub/CMakeLists.txt" : {
      "ObjectId" : "d78d0880ab2794851ac5a03f543ce360dda8c786",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-access-management/CMakeLists.txt" : {
      "ObjectId" : "4037bf2f91d02c648d4a2e204bd9c6edfa0da7a5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-acm-pca/CMakeLists.txt" : {
      "ObjectId" : "8aaeeaff38bda38ff9d8db2066c3b8425d4d66ea",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-acm/CMakeLists.txt" : {
      "ObjectId" : "0fe0de7b6b75e339a26469799d93c6f6b67a80f2",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-alexaforbusiness/CMakeLists.txt" : {
      "ObjectId" : "b78159cd70e7ff014ec8a079135650ff56467fd8",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-amplify/CMakeLists.txt" : {
      "ObjectId" : "1cca8fda36c21afa987470e9c24e4185850ea785",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-apigateway/CMakeLists.txt" : {
      "ObjectId" : "98e0cac66149c13aa4d85f1cc6978850df122f4c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-apigatewaymanagementapi/CMakeLists.txt" : {
      "ObjectId" : "0a1ab9625c1534922752360e89696f48a17e2602",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-apigatewayv2/CMakeLists.txt" : {
      "ObjectId" : "460823d8f6cf9f0cec9e8ed5d5b1e2e2683e5220",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-application-autoscaling/CMakeLists.txt" : {
      "ObjectId" : "e0b325d5eacbfc593cb0d7302c5c70812b61dc84",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-appmesh/CMakeLists.txt" : {
      "ObjectId" : "65a57a7f308ba3b7fbf98cf6a93a3281dae3019a",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-appstream/CMakeLists.txt" : {
      "ObjectId" : "7e1c7496f881d9b2c1ad8a86397a6599f8ede565",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-appsync/CMakeLists.txt" : {
      "ObjectId" : "0a087925c2a2cf13b945c3220fcbb46f03b6afda",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-athena/CMakeLists.txt" : {
      "ObjectId" : "fc1073b39779af1358f25abaa20a55f110f949e4",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-autoscaling-plans/CMakeLists.txt" : {
      "ObjectId" : "e24738a00105720e937829d1eb2033ff1bc0a26c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-autoscaling/CMakeLists.txt" : {
      "ObjectId" : "8faa500bff0a69f7e74fdb049d4b651650d03a7f",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-awstransfer/CMakeLists.txt" : {
      "ObjectId" : "5e83113a2a947061479bcdc07496958cad0fa54b",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-backup/CMakeLists.txt" : {
      "ObjectId" : "6d7ad8256c89b26d96ec34dee5030bc019307739",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-batch/CMakeLists.txt" : {
      "ObjectId" : "c94d9a799da2c0ab046f6da791e118c58d30104c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-budgets/CMakeLists.txt" : {
      "ObjectId" : "1c6aabf1cc3497b9fbb2b8e364d56f09c44119ce",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-ce/CMakeLists.txt" : {
      "ObjectId" : "16e7d9fed4dd71bb3133333d32be743e04765606",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-chime/CMakeLists.txt" : {
      "ObjectId" : "4c02641cecab128f4cba1d9be29a72dc68cee93d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloud9/CMakeLists.txt" : {
      "ObjectId" : "bc2e72ebd3e3ab0f3a371b440b2e5afe540d4ce0",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-clouddirectory/CMakeLists.txt" : {
      "ObjectId" : "4e5b86a3f5a63512464b7f2cf6f4a8ba5c5c1948",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudformation/CMakeLists.txt" : {
      "ObjectId" : "df4a6a2fd4e1643854d63be2e381a882e1bdbd30",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudfront-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "445b5197aecae268a80d15f75ae7dd30cdd8565e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudfront/CMakeLists.txt" : {
      "ObjectId" : "d0cef02315bfb715f978f304d7d5af23125c702d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudhsm/CMakeLists.txt" : {
      "ObjectId" : "b55b48ec985c439689ff78cb845413774486b53f",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudhsmv2/CMakeLists.txt" : {
      "ObjectId" : "02b289b317789c0c2d1f6c5da194c6956a45505b",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudsearch/CMakeLists.txt" : {
      "ObjectId" : "5c1bda9f8fbc5754217dc2fc584559965761c332",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudsearchdomain/CMakeLists.txt" : {
      "ObjectId" : "5511d3c7342bfc311cb3f13a112e1b08aef6b666",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cloudtrail/CMakeLists.txt" : {
      "ObjectId" : "600aa6a44582cca0535077f7c2829991ee10a609",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-codebuild/CMakeLists.txt" : {
      "ObjectId" : "e974a26f09b111b2c4fff4ed51774cf5b657166a",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-codecommit/CMakeLists.txt" : {
      "ObjectId" : "c2fc2aa2dcf02821718268485760ec1194662576",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-codedeploy/CMakeLists.txt" : {
      "ObjectId" : "ca039091fd5a4eb6fa3737428e9d31526396c9c2",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-codepipeline/CMakeLists.txt" : {
      "ObjectId" : "92b4e568fbc6c60b8e3c99188bd8b39becd62f12",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-codestar/CMakeLists.txt" : {
      "ObjectId" : "d68792dd569b5aaa25341e781fb5315bd2f84383",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cognito-identity/CMakeLists.txt" : {
      "ObjectId" : "7f7c53be039197454e880ee8fb1fd261f32bf65d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cognito-idp/CMakeLists.txt" : {
      "ObjectId" : "81b4688d4132eea428f3a7bbfbe05c357d304cfd",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cognito-sync/CMakeLists.txt" : {
      "ObjectId" : "433c722a9a5fc626779ecaaa72cee708566a7be0",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-cognitoidentity-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "2bf338faedf8c9d9571ead4a3b530c308a323852",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-comprehend/CMakeLists.txt" : {
      "ObjectId" : "e95ea686f52c45abc984db53ec3d451ccfd4c613",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-comprehendmedical/CMakeLists.txt" : {
      "ObjectId" : "da28939b8d394c4c47d09044c6eab411e577fda5",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-config/CMakeLists.txt" : {
      "ObjectId" : "0a357013ef4826cdf4692a0353ce7c5b12b2d436",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-connect/CMakeLists.txt" : {
      "ObjectId" : "4ab6daded1fe6c971ba13260404bc64eeabf7930",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-core-tests/CMakeLists.txt" : {
      "ObjectId" : "f4acf047497be4b6b51c8320d482665e914a1d23",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-core/CMakeLists.txt" : {
      "ObjectId" : "a79b000ea7d8df051a02f191da1fb94c5a6d39bb",
      "LastModified" : "2019-04-17T18:37:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If building shared libraries, custom memory management enabled is the default, otherwise regular memory management is the default.\n\n# We make custom memory management the default on shared library builds because it is safer and much more difficult to accidentally\n\n# allocate in one DLLs heap while freeing in another (which will lead to runtime crashes)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pretty sure we can use a regex here...\n\n# Go ahead and glob every directory so we can work around Visual Studio's crap.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http client implementations\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add winhttp since IXmlHttpRequest2 can't bypass proxy\n",
        "Line" : 106,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Strating with Windows 10, version 1507, WinINet supports HTTP2.\n\n# https://docs.microsoft.com/en-us/windows/desktop/WinInet/option-flags#INTERNET_OPTION_ENABLE_HTTP_PROTOCOL\n\n# Starting with Windows 10, version 1607, WinHttp supports HTTP2.\n\n# https://docs.microsoft.com/en-us/windows/desktop/WinHttp/option-flags#WINHTTP_OPTION_ENABLE_HTTP_PROTOCOL\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# encryption implementations\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# misc platform-specific, not related to features (encryption/http clients)\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add your windows specific impl stuff here.\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#add unix specific impl stuff here.\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Visual studio project directory structure\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# http client conditional headers\n",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# encryption conditional headers\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# http client conditional source\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# encryption conditional source\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# http client headers\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# encryption headers\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "aws-cpp-sdk-cur/CMakeLists.txt" : {
      "ObjectId" : "132940e906bb5b48d4224392504783bf5d6e5148",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-custom-service-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "cf76d22a33b2778170d42881528a18fac59b3c42",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "aws-cpp-sdk-datapipeline/CMakeLists.txt" : {
      "ObjectId" : "6e03f4fd7aea778b6c21c1068aff6f7d5aeddb63",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-datasync/CMakeLists.txt" : {
      "ObjectId" : "84a3d924948b652cad3a408d73713b72c0b70353",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-dax/CMakeLists.txt" : {
      "ObjectId" : "15d610b64fe75dc15475674aaffc159db164f904",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-devicefarm/CMakeLists.txt" : {
      "ObjectId" : "ca31ce1840d10b4f06d7e47aac23b87a8e20bc7f",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-directconnect/CMakeLists.txt" : {
      "ObjectId" : "cfcfa910c42b8c8b84a903c895420a56873530d9",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-discovery/CMakeLists.txt" : {
      "ObjectId" : "99c4d28dd9f87cd47a6f8062b857838a63c2b077",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-dlm/CMakeLists.txt" : {
      "ObjectId" : "218a290eb08eb3655504b2ce5098e393a508ff14",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-dms/CMakeLists.txt" : {
      "ObjectId" : "817c39dbbb3cc0638a8df3555ca1ab4979bfe701",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-docdb/CMakeLists.txt" : {
      "ObjectId" : "79891b17936c96fe3392d27d4b3e928e01250b03",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-ds/CMakeLists.txt" : {
      "ObjectId" : "3b23809bd9c68d79bff0234ad0d78e1654cbdec9",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-dynamodb-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "e30730740c176961e4464382cf9c322500ab5ac4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-dynamodb/CMakeLists.txt" : {
      "ObjectId" : "f717d57feff32f035603a049fb95d6ae0efa565c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-dynamodbstreams/CMakeLists.txt" : {
      "ObjectId" : "e6c1bbf368c1f3327a60ed74891129b21ae40147",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-ec2-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "f54eafb13390ba68bf7941b112900518e3eb4064",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-ec2/CMakeLists.txt" : {
      "ObjectId" : "e991ba3637b30d852143ede250eec5f377d92c5f",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-ecr/CMakeLists.txt" : {
      "ObjectId" : "92cb3e64edd67bdb2787bddd97c16357425bd79c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-ecs/CMakeLists.txt" : {
      "ObjectId" : "4e9664d6b769ff9958ef7caa5ea54c99c9a64300",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-eks/CMakeLists.txt" : {
      "ObjectId" : "b12ed592fee54fef6a9a16d1bc4639d817f8384c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-elasticache/CMakeLists.txt" : {
      "ObjectId" : "fbbdcb5138e9013978045e320bc4a513a5f996ec",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-elasticbeanstalk/CMakeLists.txt" : {
      "ObjectId" : "a1be3111bb5dd638309200b9b144990e3e07e8f8",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-elasticfilesystem/CMakeLists.txt" : {
      "ObjectId" : "fa99a7daf4791a0d362c4506fdaf43e707b0c0a9",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-elasticloadbalancing/CMakeLists.txt" : {
      "ObjectId" : "f5671fe95482e45fc1ec7641cac9680e12103c78",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-elasticloadbalancingv2/CMakeLists.txt" : {
      "ObjectId" : "120619369a1bd5dc22ed53287fba88b1a3ba6693",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-elasticmapreduce/CMakeLists.txt" : {
      "ObjectId" : "755dd8bee54914940ffc9fd71ff1777584ebb33f",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-elastictranscoder/CMakeLists.txt" : {
      "ObjectId" : "3990cfaa7c3cfab36c2ff2b9989a4feb8ecc9943",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-email/CMakeLists.txt" : {
      "ObjectId" : "8d9c15976676c6c8331906c73067d8da08376c19",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-es/CMakeLists.txt" : {
      "ObjectId" : "3dc1043c3aa8ed0ae2a5287065b153172ace141a",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-events/CMakeLists.txt" : {
      "ObjectId" : "1e62cd3671efe87e559765e09c5c39589fbb4d2d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-firehose/CMakeLists.txt" : {
      "ObjectId" : "ace0199b8a1a5b609e3667aa6c65dd6262677748",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-fms/CMakeLists.txt" : {
      "ObjectId" : "ee1bbf1cc9577108540ec281ebd4aaed05bc77e2",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-fsx/CMakeLists.txt" : {
      "ObjectId" : "6b94eaf8d95938eb2456201f4a71663b54987ac6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-gamelift/CMakeLists.txt" : {
      "ObjectId" : "2d9e680d211359ed088d52d7958db2762c60c56c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-glacier/CMakeLists.txt" : {
      "ObjectId" : "cec14311e415f72ce6f71dd37077da9024b9c34a",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-globalaccelerator/CMakeLists.txt" : {
      "ObjectId" : "979f66ccd81cba4161009a1643441615b8babab5",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-glue/CMakeLists.txt" : {
      "ObjectId" : "6ca37d3b57996db08991d3c92210176281340a55",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-greengrass/CMakeLists.txt" : {
      "ObjectId" : "555be692ef3fd0aa10a3fd5d8380b265431557b6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-guardduty/CMakeLists.txt" : {
      "ObjectId" : "15ac022d71630297f89e909a3f26ee012b872ad0",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-health/CMakeLists.txt" : {
      "ObjectId" : "5696ebdbbd96bc749b022fda598accae1701c985",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-iam/CMakeLists.txt" : {
      "ObjectId" : "6e2cb03ba01d7f2bb6293ef5bc2c74f4898a8ddc",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-identity-management-tests/CMakeLists.txt" : {
      "ObjectId" : "332e18416af1efee54f4f4e71d876f8a8aa99fb4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-identity-management/CMakeLists.txt" : {
      "ObjectId" : "a41734f6d060d77af0dc1c588351e7bd9ecdbc69",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-importexport/CMakeLists.txt" : {
      "ObjectId" : "c8572e2c29fdb2356228952beeacabaa7d2ee924",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-inspector/CMakeLists.txt" : {
      "ObjectId" : "e376db0008293c6e82f6f490e9125ec632bfa470",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-iot-data/CMakeLists.txt" : {
      "ObjectId" : "ee995e33ac1cb3b8db4bbd7aff9b543535e63a0a",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-iot-jobs-data/CMakeLists.txt" : {
      "ObjectId" : "95896f6b0cff0db466b5a80dfe6bfc94032892b6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-iot/CMakeLists.txt" : {
      "ObjectId" : "2833c9757580ce81025d4215d47296a638be766d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-iot1click-devices/CMakeLists.txt" : {
      "ObjectId" : "9e23d54f960744721cc48ca23e3e057a03fadcba",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-iot1click-projects/CMakeLists.txt" : {
      "ObjectId" : "d0c1241a7ce5574735b890f5ec11814694d1eed4",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-iotanalytics/CMakeLists.txt" : {
      "ObjectId" : "ec786526cf251f3ace2682926c9079ac42529f59",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kafka/CMakeLists.txt" : {
      "ObjectId" : "471481174746413d4431fb25a4ee36a1cec2b265",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kinesis-video-archived-media/CMakeLists.txt" : {
      "ObjectId" : "ca7de37d192a66f0037165f6df6167cf8384d59f",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kinesis-video-media/CMakeLists.txt" : {
      "ObjectId" : "304360095a3ad05eed327334c8560b9c009b4156",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kinesis/CMakeLists.txt" : {
      "ObjectId" : "3e2d8adcfed0fed6c1f31659591f5defe09c2d40",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kinesisanalytics/CMakeLists.txt" : {
      "ObjectId" : "04406a7365e6c35256189a6bc46f5cb17a5e3e65",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kinesisanalyticsv2/CMakeLists.txt" : {
      "ObjectId" : "91d993ee3116fb75457c4d6af1977b6f95f12410",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kinesisvideo/CMakeLists.txt" : {
      "ObjectId" : "4ed0c5e513c8590048ece7c75d9d4b5ec46437c4",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-kms/CMakeLists.txt" : {
      "ObjectId" : "fc9544c712bfe11f1d4f1b3396997122dcd11016",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-lambda-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "29cd1c44e2571a9059778231420175dbf8aba5c6",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-lambda/CMakeLists.txt" : {
      "ObjectId" : "366868923af18ace4bf7f2e58ce14c5af3593a5e",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-lex-models/CMakeLists.txt" : {
      "ObjectId" : "ff5cb1f2dd1fd2af39c3b86aea1357a7a8c21938",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-lex/CMakeLists.txt" : {
      "ObjectId" : "85b29c15c51a406ba0afe94c9778230aa43e0a83",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-license-manager/CMakeLists.txt" : {
      "ObjectId" : "20d4e4409e7f85d369c9f5e6fb265f88e3a47801",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-lightsail/CMakeLists.txt" : {
      "ObjectId" : "e2f1b8cb6ebcf1f63e48cded3249f6ff43126789",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-logs/CMakeLists.txt" : {
      "ObjectId" : "38f4b65d13491f61b89d09fea3d4867faa75e8e1",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-machinelearning/CMakeLists.txt" : {
      "ObjectId" : "fb1bb5cc2533310dba28718241643635c663c584",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-macie/CMakeLists.txt" : {
      "ObjectId" : "2ffa44af9051b37e17466e8aa7c2b9d4fe3681a6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-marketplace-entitlement/CMakeLists.txt" : {
      "ObjectId" : "56a438fc5e9ee85b76f499216e7cd3d392121d60",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-marketplacecommerceanalytics/CMakeLists.txt" : {
      "ObjectId" : "57a0c9a496409357c9be0958140d4642ff8e7a70",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mediaconnect/CMakeLists.txt" : {
      "ObjectId" : "229ecee1057a54ad0c2f76d4729c35fa0dc581ad",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mediaconvert/CMakeLists.txt" : {
      "ObjectId" : "743ec2f9ba7ad03a9ecb9d32d802a55b24a5baea",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-medialive/CMakeLists.txt" : {
      "ObjectId" : "cbb98f5e5ff8e4a8c98d9b33f0ac931e8ca75414",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mediapackage/CMakeLists.txt" : {
      "ObjectId" : "6ee6a54fbcecea09f5f3960d6f248588e43a3601",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mediastore-data/CMakeLists.txt" : {
      "ObjectId" : "42564a28e5e4c49a3189470733ca14a3f1f14580",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mediastore/CMakeLists.txt" : {
      "ObjectId" : "3a45db64238dd1cc5724f045cfeaa9e66a8bb17e",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mediatailor/CMakeLists.txt" : {
      "ObjectId" : "cd47f345accd95c214571e2283997ac223409c76",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-meteringmarketplace/CMakeLists.txt" : {
      "ObjectId" : "9fff8f58a49f8b5662dbd8c7f571c494657b3737",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mobile/CMakeLists.txt" : {
      "ObjectId" : "a87ae08ab4077336b32db5c294762c7e025f5309",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mobileanalytics/CMakeLists.txt" : {
      "ObjectId" : "ea8ba1eee7bbe80f2e918d1f451c51313cc741b7",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-monitoring/CMakeLists.txt" : {
      "ObjectId" : "00ffbe6809bb0d55e9368be80642ad4af60d4a94",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mq/CMakeLists.txt" : {
      "ObjectId" : "68830a3cca8078731395d31e3498b5b65c4b2fa3",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-mturk-requester/CMakeLists.txt" : {
      "ObjectId" : "d16d7ad3fd1f1bee65101969c31c2ec899cc1b08",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-neptune/CMakeLists.txt" : {
      "ObjectId" : "349aa3cf09d7735fc8b73c14a432d1ccc9c2013e",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-opsworks/CMakeLists.txt" : {
      "ObjectId" : "6b807e0feebb134e9b03e8f42b81f33b5ace978b",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-opsworkscm/CMakeLists.txt" : {
      "ObjectId" : "9227a7f4dfef697ccc0abbca6b0865e623f3a072",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-organizations/CMakeLists.txt" : {
      "ObjectId" : "ffba9d5076844f64025427cf486d5818337a88d0",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-pi/CMakeLists.txt" : {
      "ObjectId" : "9fbe1ece6705aeae4bdc6fa7ea5c901c70a92dba",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-pinpoint-email/CMakeLists.txt" : {
      "ObjectId" : "c48e1a038420bad215d751cd1e1ac6e7994c1e07",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-pinpoint/CMakeLists.txt" : {
      "ObjectId" : "4cf5ba95925918e84fd446f1b72ea6b9de697e75",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-polly-sample/CMakeLists.txt" : {
      "ObjectId" : "ccb3af854c8ffec0f4cdfc02d408b2488fc9974e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-polly/CMakeLists.txt" : {
      "ObjectId" : "f0b5f935e14e6385b5095c7cb7d56560266ea903",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-pricing/CMakeLists.txt" : {
      "ObjectId" : "a3a3de3da7b6154cb272609145056e3313eca4e8",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-queues/CMakeLists.txt" : {
      "ObjectId" : "3b49d2475df50fe9f1fa237fdbcaeb6b966bc346",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-quicksight/CMakeLists.txt" : {
      "ObjectId" : "676a70ceee65443b03ee84c69f45df882cb77cd3",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-ram/CMakeLists.txt" : {
      "ObjectId" : "1cd990908fae4924dbd73a51efd18b2d0c54bc69",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-rds-data/CMakeLists.txt" : {
      "ObjectId" : "49debffe23b65b9d8e2a388d81ae5fd86d37f858",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-rds/CMakeLists.txt" : {
      "ObjectId" : "63e3da6e71f887eeae46e1f4598984e08096d4c0",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-redshift-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "79327e87d3328270e19df2dec472701bf249f8d9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-redshift/CMakeLists.txt" : {
      "ObjectId" : "ece39128456b61044d4fc224b5012d2570c04864",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-rekognition/CMakeLists.txt" : {
      "ObjectId" : "702ac171b797b6ead4908d51c2fe65ecbb29e747",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-resource-groups/CMakeLists.txt" : {
      "ObjectId" : "736f75f1a79e889d43d18aaf2ce839867d521f29",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-resourcegroupstaggingapi/CMakeLists.txt" : {
      "ObjectId" : "1d7d06abe8dd9afc408cb5e5f95452efb1539447",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-robomaker/CMakeLists.txt" : {
      "ObjectId" : "388dcac1994b047ed48279ad311c703a36cea14d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-route53/CMakeLists.txt" : {
      "ObjectId" : "e1a47db61ef994bb3819768b29be44c5a3486e4e",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-route53domains/CMakeLists.txt" : {
      "ObjectId" : "ed8f1c3852382be414c802979c3fd062805e6857",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-route53resolver/CMakeLists.txt" : {
      "ObjectId" : "2411ed871b9d46152c1c50204fa2d77a267947e0",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-s3-encryption-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "554d6759d6a250dbfb5d54b032b276db0e433307",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-s3-encryption-tests/CMakeLists.txt" : {
      "ObjectId" : "4b943f4e99ae6b196909db042acf7b2560aee376",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-s3-encryption/CMakeLists.txt" : {
      "ObjectId" : "71bdeb1d765bb3ea884e9d4a8b8b26240cf85313",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-s3-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "34bd15751e8b6dd164eea0c0ace810c4d9062d16",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-s3/CMakeLists.txt" : {
      "ObjectId" : "1f3253b596c6e93c836ac9c4295b2fc258fbd66a",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-s3control-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "c25f54311232f07eb84964e1c0025aebf60cf1a4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-s3control/CMakeLists.txt" : {
      "ObjectId" : "0bff68c39a5c92fb33cb9d28f1052605dd0b20a8",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sagemaker-runtime/CMakeLists.txt" : {
      "ObjectId" : "0d7ade459a75af6944d1139b75e89b749d1def14",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sagemaker/CMakeLists.txt" : {
      "ObjectId" : "bc3a69d5d07e650edd0bbdfd795f0a935ad47a88",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sdb/CMakeLists.txt" : {
      "ObjectId" : "91d9096f09f0299b928ee1d70c0309d987a4bf0d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-secretsmanager/CMakeLists.txt" : {
      "ObjectId" : "31876a74b532915bf8d7ee840cd0979df77fbe42",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-securityhub/CMakeLists.txt" : {
      "ObjectId" : "b5399297cdaf66ae2511618247d191eb16711991",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-serverlessrepo/CMakeLists.txt" : {
      "ObjectId" : "cae350331328c53f5dc98f755b6aa1ad3f1619fb",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-servicecatalog/CMakeLists.txt" : {
      "ObjectId" : "29119d7e4b26083cae7080ed612bf1eac10682f7",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-servicediscovery/CMakeLists.txt" : {
      "ObjectId" : "468062f9dae5eb8ec24e11049bde4200956680d6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-shield/CMakeLists.txt" : {
      "ObjectId" : "49608fe117ae43ccfff9cf5095f16e53830d3ab4",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-signer/CMakeLists.txt" : {
      "ObjectId" : "4cc8dd745cbcc8f970f4307d42e405ec2e54056d",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sms-voice/CMakeLists.txt" : {
      "ObjectId" : "c8a31dbf67ea2c6429d868e48c89b7a8233be4b5",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sms/CMakeLists.txt" : {
      "ObjectId" : "65dc79a5968cdd7b7c5496a0b3c9a7c2cad507f9",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-snowball/CMakeLists.txt" : {
      "ObjectId" : "0980142870bc8d0e3b16e559b1e19ee340ce19c9",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sns/CMakeLists.txt" : {
      "ObjectId" : "d487572a6783c2236d4116e882f67a41e3222a5e",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sqs-integration-tests/CMakeLists.txt" : {
      "ObjectId" : "11191354f1cd573c37596cfa58a040f0efeb2f1b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-sqs/CMakeLists.txt" : {
      "ObjectId" : "b575540c620dffa37dbeff3581c50fd072841ffc",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-ssm/CMakeLists.txt" : {
      "ObjectId" : "c33602b701ca2d931eaa609c760ab19c51c3d966",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-states/CMakeLists.txt" : {
      "ObjectId" : "579b3e64207722d05d2ada34f8dd14b581a260d3",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-storagegateway/CMakeLists.txt" : {
      "ObjectId" : "5e01387b5cc92b4eaa532b24556f7d0fe679a0e6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-sts/CMakeLists.txt" : {
      "ObjectId" : "e21b846093612ac0dfc0c8fda2fa1159edcc7278",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-support/CMakeLists.txt" : {
      "ObjectId" : "e5214ea1930371741996d05c870e0915b1a6304b",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-swf/CMakeLists.txt" : {
      "ObjectId" : "1d0511651f904cc336903f73ed806a7f4cc2182c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-text-to-speech-tests/CMakeLists.txt" : {
      "ObjectId" : "644dbed1c025aaa6022766f03f1c276ec666ab2b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-text-to-speech/CMakeLists.txt" : {
      "ObjectId" : "551fd784e6f43fad681a9543916e6576ee09fb64",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-textract/CMakeLists.txt" : {
      "ObjectId" : "e3676524c3964f207d5bb82a7ce46ea40b7fe48c",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-transcribe/CMakeLists.txt" : {
      "ObjectId" : "7d59e33b5e861fb2e9cf24a30af3a31d432db6d8",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-transfer-tests/CMakeLists.txt" : {
      "ObjectId" : "e29a1186e37f2f589c93b8de79127c0507468b7c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Headers are included in the source so that they show up in Visual Studio.\n\n# They are included elsewhere for consistency.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-transfer/CMakeLists.txt" : {
      "ObjectId" : "70994e9ab65ef5dd9d07b83574e61c6c038231d3",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aws-cpp-sdk-translate/CMakeLists.txt" : {
      "ObjectId" : "2a10d9ea2aab887d3cc825ad22a848c76591be1a",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-waf-regional/CMakeLists.txt" : {
      "ObjectId" : "4dee221c4b40347c259c2ae7e66b492711389429",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-waf/CMakeLists.txt" : {
      "ObjectId" : "498076a7f0c61179c20f253e6fab479485ffa368",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-workdocs/CMakeLists.txt" : {
      "ObjectId" : "5ea188a2382d566ba3d72db95c372408f1a84dd0",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-worklink/CMakeLists.txt" : {
      "ObjectId" : "044d3cd500fe713f068eeadf829d8e6eb3c9ce07",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-workmail/CMakeLists.txt" : {
      "ObjectId" : "ded05af9786096e4c429b94858253e3d9f8c04ac",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-workspaces/CMakeLists.txt" : {
      "ObjectId" : "ae4177f5c452e884aef3e76dd1ed9334dcbf87e6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "aws-cpp-sdk-xray/CMakeLists.txt" : {
      "ObjectId" : "150614d7b901370fa370edc10232685c529f01f6",
      "LastModified" : "2019-04-17T18:54:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if we are compiling for visual studio, create a sane directory tree.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/AWSSDKConfig.cmake" : {
      "ObjectId" : "e87252123e55ed17fe6d927a286e194d5d422b59",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When using AWSSDK package, users need to tell the installation root dir\n\n# by setting up variable as set(AWSSDK_ROOT_DIR, \"<path/to/dir>\")\n\n# In Windows the dir is like C:/Progra~1/AWSSDK/\n\n# In Unix like system the dir is like /usr/local/\n\n# if AWSSDK_ROOT_DIR doesn't appear, this module will identify it automatically\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# By default:\n\n#   The cmake files will all be in <prefix>/lib/cmake dir\n\n#   The headers will all be in <prefix>/include dir\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   The libraries will all be in <prefix>/lib/<platform_prefix> dir\n\n#   The binaries will all be in <prefix>/bin/<platform_prefix> dir\n\n#   The archives will all be in <prefix>/lib/<platform_prefix> dir if target is shared, \n\n#   otherwise will be in <prefix>/bin/<platform_prefix> dir.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Platfrom_prefix is determined on compile time nbu option SIMPLE_INSTALL\n\n# such as \"<linux/intel64>\"\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On Windows, dlls are treated as runtime target and installed in bindir\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If installed CMake scripts are associated with dll library, define USE_IMPORT_EXPORT for customers\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Compute the default installation root relative to this file.\n\n# from prefix/lib/cmake/AWSSDK/xx.cmake to prefix\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# currently AWSSDK_ROOT_DIR is either empty or user specified\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# based on core header file path, inspects the actual AWSSDK_ROOT_DIR\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# based on AWSSDK_CORE_LIB_FILE path, inspects the actual AWSSDK_PLATFROM_PREFIX\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# copy libs of services in SERVICE_LIST and all there dependent libs to DEST_DIR\n\n# CONFIG denote copy release or debug version\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# output link libs command to OUTPUT_VAR which required by all services from SERVCE_LIST\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Order the dependencies correctly\n\n# Change order from e.g. \"core;transfer;s3;s3-encryption;kms\" to \"transfer;s3-encryption;kms;s3;core\".\n\n# This is important for static linked user application.\n\n# They way of doing this is to keep checking libs after current lib till the end, if current lib is a dependency of checking lib,\n\n# then move current lib to the end of list, after moving, current index stay and start another round of checking. If no libs after\n\n# current lib is a dependency of current lib, move current index to next and start anohter round of checking.\n\n# Example: \"s3;core;transfer\"\n\n#-> s3(cur);core(checking);transfer  s3 is not a dependency of core\n\n#-> s3(cur);core;transfer(checking)  s3 is a dependency of transfer\n\n#-> core(cur);transfer(checking);s3  core is a dependency of transfer\n\n#-> transfer(cur);s3(checking);core  transfer is not a dependency of s3\n\n#-> transfer(cur);s3;core(checking)  transfer is not a dependency of core\n\n#-> transfer;s3(cur);core(checking)  s3 is not a dependency of core\n\n#-> transfer;s3;core(cur)            end of checking\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Get index of last element.\n",
        "Line" : 227,
        "CharPositionInLine" : 34
      },
      "15" : {
        "Text" : "# If more than 1 element.\n",
        "Line" : 228,
        "CharPositionInLine" : 26
      },
      "16" : {
        "Text" : "# No need to process last element\n",
        "Line" : 230,
        "CharPositionInLine" : 30
      },
      "17" : {
        "Text" : "# NEXT_SVC depend on SVC\n",
        "Line" : 241,
        "CharPositionInLine" : 43
      },
      "18" : {
        "Text" : "# Move SVC to end\n",
        "Line" : 242,
        "CharPositionInLine" : 54
      },
      "19" : {
        "Text" : "# make index point to new element but with the same index.\n",
        "Line" : 244,
        "CharPositionInLine" : 40
      },
      "20" : {
        "Text" : "# as long as we moved SVC to end, the inner loop can be broke.\n",
        "Line" : 245,
        "CharPositionInLine" : 28
      },
      "21" : {
        "Text" : "#CMake with some older versions (at least 3.6.0) do not support negative numbers in math expr e.g.: math(EXPR i -1+1)\n",
        "Line" : 249,
        "CharPositionInLine" : 26
      },
      "22" : {
        "Text" : "# output high level lib dependencies such as for transfer; sqs; dynamodb etc.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# for static sdk, platform dependencies will be included in AWSSDK_LINK_LIBRARIES.\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 24
    },
    "cmake/build_external.cmake" : {
      "ObjectId" : "bcf3edd6a63749e7a29560c651707aa5601e3ef1",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The NDK does not provide any http or crypto functionality out of the box; we build versions of zlib, openssl, and curl to account for this.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we patch the install process for each dependency to match what we need for 3rd party installation\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# zlib\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#zlib\n\n#based on http://stackoverflow.com/questions/16842218/how-to-use-cmake-externalproject-add-or-alternatives-in-a-cross-platform-way\n\n#likely, some of the things here are unnecessary\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# OpenSSL\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# 1.0.2j\n",
        "Line" : 76,
        "CharPositionInLine" : 61
      },
      "6" : {
        "Text" : "# curl\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# 7.52.1\n",
        "Line" : 127,
        "CharPositionInLine" : 65
      },
      "CommentCount" : 8
    },
    "cmake/compiler_settings.cmake" : {
      "ObjectId" : "66399c9540af4f878fb35e358475fbaab50ccd65",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiler recognition\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ToDo: extend as necessary and remove common assumptions\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# when using clang with libc and API lower than 21 we need to include Android support headers and ignore the gnu-include-next warning.\n",
        "Line" : 55,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# NDK lower than 12 doesn't support ignoring the gnu-include-next warning so we need to disable pedantic mode.\n",
        "Line" : 57,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Put all runtime outputs, including DLLs, executables into one directory, so as to avoid copying DLLs.\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Based on the FORCE_SHARED_CRT and BUILD_SHARED_LIBS options, make sure our compile/link flags bring in the right CRT library\n\n# modified from gtest's version; while only the else clause is actually necessary, do both for completeness/future-proofing\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# enable parallel builds\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# some of the clients are exceeding the 16-bit code section limit when building x64 debug, so use /bigobj when we build\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# special windows build options:\n\n#   debug info: pdbs with dlls, embedded in static libs\n\n#   release optimisations to purely focus on size, override debug info settings as necessary\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# put Z7 in config-specific flags so we can strip from release if we're concerned about size\n",
        "Line" : 110,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# strip debug info from release\n",
        "Line" : 116,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# strip optimization settings and replace with\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# pure size flags\n",
        "Line" : 123,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "#remove bogus errors at generation time if these variables haven't been manually set\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# warnings as errors, max warning level (4)\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# taken from http://stackoverflow.com/questions/2368811/how-to-set-warning-level-in-cmake\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "cmake/dependencies.cmake" : {
      "ObjectId" : "30c665341f09f1cea5806fd4be48e438b66cbb83",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from http://stackoverflow.com/questions/34637980/cmake-sort-a-list-of-target-considering-their-dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compute list of all target links (direct and indirect) for given library\n\n# Result is stored in LINK_LIBRARIES_ALL target property.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Immediately return if output property is already set.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Initialize output property.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Prevent recursion for the same lib\n",
        "Line" : 22,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# Do not iterate over `-NOTFOUND` value in case of absence of the property.\n",
        "Line" : 27,
        "CharPositionInLine" : 17
      },
      "6" : {
        "Text" : "# For each direct link append it and its links\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Collect only target links\n",
        "Line" : 32,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# Remove duplicates\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Sort given list of targets, so for any target its links come before the target itself.\n\n#\n\n# Uses selection sort (stable).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Special case of empty input list. Futher code assumes list to be non-empty.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Assume first element as minimal\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Check that given element is actually minimal\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# First iteration should always fail, so skip it.\n",
        "Line" : 74,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : "# Choose linked library as new minimal element.\n",
        "Line" : 77,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# Move minimal element from the input list to the output one.\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Directly append the only element in the current input list to the resulted variable.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "cmake/external_dependencies.cmake" : {
      "ObjectId" : "b3ef42bce6ab69c1124400f2f04204f35b3b90f5",
      "LastModified" : "2019-04-17T18:37:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Encryption control\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ssl depends on libcrypto\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Http client control\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/initialize_project_version.cmake" : {
      "ObjectId" : "7e52a3fb6fa327907b21bad27da2f3f7d0ac2cc4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# extract it from the existing generated header file\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/make_uninstall.cmake" : {
      "ObjectId" : "b93fc0e3ed4545606838fdceee4b9ff2f8f6f2c8",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for make uninstall\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/platform/android.cmake" : {
      "ObjectId" : "f3029f879b66b14a16f13c628fc1dabebf56a1ae",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: don't do this if the user is supplying their own curl/openssl/zlib\n\n# minimum version of cmake that \n\n#   (1) supports ExternalProject_Add URL_HASH\n\n#   (2) correctly extracts OPENSSL's version number from openssl/opensslv.h in version 1.0.2d\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# TODO: don't do this if the user is supplying their own curl/openssl/zlib\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# API levels below 9 will not build with libc++\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# With gnustl, API level can go as low as 3, but let's make a reasonably modern default\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# RELEASE.txt disappeared starting with r11, grumble\n",
        "Line" : 99,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# guess based on install directory name\n",
        "Line" : 103,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# if not explicitly disabled, generate a standalone toolchain\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Releases prior to 12 use a shell script to make standalone toolchains\n",
        "Line" : 152,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# new releases use a python script with (naturally) different argument names\n",
        "Line" : 182,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# android-specific required overrrides\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# android-specific parameter defaults\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Workaround for problem when ndk 13, gcc, and libc++ are used together.\n\n# See https://www.bountysource.com/issues/38341727-stddef-h-no-such-file-or-directory\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/platform/android.toolchain.cmake" : {
      "ObjectId" : "000e0a8da2a0c8c3c4fb112f58d9ed01129f3180",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10d\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 387,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 405,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 433,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 460,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 472,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 477,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 481,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 488,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 572,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 593,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 606,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 695,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 723,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 830,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 901,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 910,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 925,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "#TODO: use string manip to collapse this\n",
        "Line" : 951,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# clang\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 997,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# do nothing\n",
        "Line" : 1003,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# before r7\n",
        "Line" : 1013,
        "CharPositionInLine" : 42
      },
      "51" : {
        "Text" : "# before r8d\n",
        "Line" : 1021,
        "CharPositionInLine" : 46
      },
      "52" : {
        "Text" : "# before r7\n",
        "Line" : 1026,
        "CharPositionInLine" : 42
      },
      "53" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1038,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1056,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1058,
        "CharPositionInLine" : 137
      },
      "56" : {
        "Text" : "# r7-r8\n",
        "Line" : 1060,
        "CharPositionInLine" : 110
      },
      "57" : {
        "Text" : "# before r7\n",
        "Line" : 1062,
        "CharPositionInLine" : 36
      },
      "58" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1082,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1085,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# ccache support\n",
        "Line" : 1088,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1101,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1144,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1171,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1187,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1193,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1208,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# NDK flags\n",
        "Line" : 1215,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1232,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1259,
        "CharPositionInLine" : 62
      },
      "70" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1266,
        "CharPositionInLine" : 72
      },
      "71" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1269,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1280,
        "CharPositionInLine" : 91
      },
      "73" : {
        "Text" : "# STL\n",
        "Line" : 1295,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# C objects:\n",
        "Line" : 1306,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1324,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# before r7\n",
        "Line" : 1325,
        "CharPositionInLine" : 40
      },
      "77" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1326,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# linker flags\n",
        "Line" : 1346,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1350,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1357,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# after r8b\n",
        "Line" : 1378,
        "CharPositionInLine" : 48
      },
      "82" : {
        "Text" : "# version 4.6\n",
        "Line" : 1386,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# cache flags\n",
        "Line" : 1408,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1419,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# finish flags\n",
        "Line" : 1425,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# pie/pic\n",
        "Line" : 1442,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure rtti\n",
        "Line" : 1452,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1461,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1472,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1474,
        "CharPositionInLine" : 111
      },
      "91" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1477,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# setup output directories\n",
        "Line" : 1514,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1531,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1543,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1547,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1550,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1578,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1600,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1637,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1639,
        "CharPositionInLine" : 1
      },
      "102" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1641,
        "CharPositionInLine" : 37
      },
      "103" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1645,
        "CharPositionInLine" : 1
      },
      "104" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10d; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   TOOL_OS_CLANG_SUFFIX : \"\" or \".cmd\" depending on host platform (on a windows standalone toolchain, a .cmd file is used to point to the compiler rather than a sym link)\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1650,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 105
    },
    "cmake/platform/apple.cmake" : {
      "ObjectId" : "770b543336336c5e95c3798f5859275b8d2059c5",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/platform/custom.cmake" : {
      "ObjectId" : "31bbf851a17a3ba95ade0f10efa804b561432d82",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/platform/linux.cmake" : {
      "ObjectId" : "621bd2c55ad8576f233af5b503aec4b8a9ca422b",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libatomic - some arches need to link against libatomic.so, some don't\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/platform/unix.cmake" : {
      "ObjectId" : "953197c85809c55831e1d3eb6f8bce8d3d8b968c",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/platform/windows.cmake" : {
      "ObjectId" : "96f71b988c27e22326f73b22bd20d1a2aec513fb",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/resolve_platform.cmake" : {
      "ObjectId" : "b2cb95e065a8f4a167e6489aba5723a7448f2aa9",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Platform recognition\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# directory defaults; linux overrides these on SIMPLE_INSTALL builds\n\n# user sepficied cmake variables (cmake -DVAR=xx) will further overrides these\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default settings is unix platform\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if not specified to custom platform, settings above will be reset by specific platform settings\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# only usable in .cpp files\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/sdks.cmake" : {
      "ObjectId" : "b862895d1fef6d077022e586595710cdc604d3bf",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# remove any missing targets from the build list, factoring in dependencies appropriately\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# SDK_BUILD_LIST is now a list of present SDKs that can be processed unconditionally\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#at this point, if user has specified some customized clients, generate them and add them to the build here.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# when building a fixed target set, missing SDKs are an error\n\n# when building \"everything\", we forgive missing SDKs; should this become an option instead?\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make sure all the sdks/c2js are present; a missing sdk-directory or c2j file is a build error when building a manually-specified set\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# test dependencies should also be built from source instead of locating by calling find_package\n\n# which may cause version conflicts as well as double targeting built targets\n",
        "Line" : 145,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#testing\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# android-unified-tests includes all the tests in our code base, those tests related services may not be incldued in BUILD_ONLY,\n\n# means, those services will not be built, but will be tried to linked against with test targets, which will cause link time error.\n\n# See https://github.com/aws/aws-sdk-cpp/issues/786. We should only build android-unified-tests when doing a full build.\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# before we add the test, make sure all of its dependencies are present\n",
        "Line" : 189,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "# the catch-all config needs to list all the targets in a dependency-sorted order\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# make an everything config by just including all the individual configs\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "cmake/sdksCommon.cmake" : {
      "ObjectId" : "a6d75a89784a653ba77521543c3587e1fc06423f",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# helper function that that gives primitive map functionality by treating a colon as the key-value separator, while the list semi-colon separates pairs\n\n# to use, pass the list-map in as a third parameter (see helper functions below)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# a bunch of key-value retrieval functions for the list-maps we defined above\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \"core\" is the default dependency for every sdk. \n\n# Since we removed the hand-written C2J_LIST and instead auto generating it based on models,\n\n# and location of models may not exist or incorrect when SDK is installed and then source has been deleted by customers.\n\n# we end up getting an incomplete C2J_LIST when customers call find_package(AWSSDK). But C2J_LIST is only used in customers code for dependencies completing.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# returns all sdks, including itself, that depend on the supplied sdk\n\n# this is kind of a reverse function of get_dependencies_for_sdk\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# function that automatically picks up models from <sdkrootdir>/code-generation/api-descriptions/ directory and build\n\n# C2J_LIST needed for generation, services have multiple models will use the latest model (decided by model files' date)\n\n# services have the name format abc.def.ghi will be renamed to ghi-def-abc (dot will not be accepted as Windows directory name ) \n\n# and put into C2J_SPECIAL_NAME_LIST, but rumtime.lex will be renamed to lex based on historical reason.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#special svc name conversion, e.g: runtime.lex->lex; abc.def.ghi->ghi-def-abc\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# ec2 isn't building for android on windows atm due to an internal compiler error, TODO: investigate further\n",
        "Line" : 105,
        "CharPositionInLine" : 55
      },
      "8" : {
        "Text" : "# make a list of the generated clients\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/setup_cmake_find_module.cmake" : {
      "ObjectId" : "7f52f56dc47ac7fc9a35ee68b07afd98a6c4165b",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create a new version file for AWSSDK, then find_package will return latest PACKAGE_VERSION\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# copy version file to destination\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# platform external dependencies\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# copy all cmake files to destination, these files include useful macros, functions and variables for users.\n\n# useful macros and variables will be included in this cmake file for user to use\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# copy third party dependencies\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# following two files are vital for cmake to find correct package, but since we copied all files from above\n\n# we left the code here to give you bettern understanding\n\n#install(\n\n#    FILES \"${AWS_NATIVE_SDK_ROOT}/cmake/${PROJECT_NAME}Config.cmake\"\n\n#    DESTINATION \"${LIBRARY_DIRECTORY}/cmake/${PROJECT_NAME}\")\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# to make compile time settings consistent with user usage time settings, we copy common settings to \n\n# destination. These settings will be included by ${PROJECT_NAME}-config.cmake\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# internal dependencies\n\n#install(\n\n#    FILES \"${AWS_NATIVE_SDK_ROOT}/cmake/sdksCommon.cmake\"\n\n#    DESTINATION \"${LIBRARY_DIRECTORY}/cmake/${PROJECT_NAME}/\")\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/utilities.cmake" : {
      "ObjectId" : "283a14a138022ba4740a1919d6011c84c8366815",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this function is based on the unity build function described at: https://cheind.wordpress.com/2009/12/10/reducing-compilation-time-unity-builds/\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate a unique filename for the unity build translation unit\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Exclude all translation units from compilation\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Open the ub file\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add include statement for each translation unit\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Complement list of translation units with the name of ub\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "code-generation/generator/pom.xml" : {
      "ObjectId" : "1b67c232838aacbefcdcd69e9ab3a239b6b9313d",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "Dependicies for lambda function",
        "Line" : 104,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 1
    },
    "testing-resources/CMakeLists.txt" : {
      "ObjectId" : "356e9766ebacdb8b1a5e79c82b16fac18ddeeb0d",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n\n# You may not use this file except in compliance with the License.\n\n# A copy of the License is located at\n\n# \n\n#  http://aws.amazon.com/apache2.0\n\n# \n\n# or in the \"license\" file accompanying this file. This file is distributed\n\n# on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n\n# express or implied. See the License for the specific language governing\n\n# permissions and limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third-party/CMakeLists.txt" : {
      "ObjectId" : "87a979027b40b13ab461d1272dfcf55b9df73149",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/cmake/BuildAwsCCommon.cmake" : {
      "ObjectId" : "da9baa20a2cccfd98e2810fad2fea447acc3b82f",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/cmake/BuildAwsChecksums.cmake" : {
      "ObjectId" : "e0cb4dbe615fe36885b043a83a004d25122c4356",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third-party/cmake/BuildAwsEventStream.cmake" : {
      "ObjectId" : "a1a38339e1ddf70d401105a810a18f398cfd150f",
      "LastModified" : "2019-04-16T22:51:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All the dependencies(aws-c-common and aws-checksums) should live in the same directory as aws-c-event-stream,\n\n# therefore we set rpath for aws-c-event-stream to \"$ORIGIN\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "toolchains/cmakeProjectConfig.cmake" : {
      "ObjectId" : "f40ebfa88826895e7105ec47293315690bfa752b",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "toolchains/core-config.cmake" : {
      "ObjectId" : "372c80f12defb858df470345482f1cfe7a68ec40",
      "LastModified" : "2019-02-04T20:41:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 231,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 23024
}