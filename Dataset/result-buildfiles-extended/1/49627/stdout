{
  "Repository" : "49627",
  "Revision" : "HEAD",
  "ObjectId" : "8ea9a32a610fc5d4f0f208e5889df690cfa6d376",
  "CommitTime" : "2019-04-17T17:27:16Z",
  "Files" : {
    "libretro/Makefile" : {
      "ObjectId" : "2d011fc26196485c583b442e399e4bd566788e5e",
      "LastModified" : "2019-02-13T00:27:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Unix\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARM\n",
        "Line" : 66,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Raspberry Pi\n",
        "Line" : 69,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# OS X\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#this breaks compiling on Mac OS Mojave\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Nintendo Switch (libnx)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Classic Platforms ####################\n\n# Platform affix = classic_<ISA>_<ÂµARCH>\n\n# Help at https://modmyclassic.com/comp\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# (armv7 a7, hard point, neon based) ### \n\n# NESC, SNESC, C64 mini \n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If gcc is 5.0 or later\n",
        "Line" : 133,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#######################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# iOS\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Theos\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# QNX\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Vita\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PS3\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# sncps3\n",
        "Line" : 217,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# PS3\n",
        "Line" : 224,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Lightweight PS3 Homebrew SDK\n",
        "Line" : 230,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Xbox 360\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Nintendo Game Cube / Wii / WiiU\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Nintendo WiiU\n",
        "Line" : 259,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# Nintendo Wii\n",
        "Line" : 263,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# Nintendo Game Cube\n",
        "Line" : 267,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# Emscripten\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Genode\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Windows MSVC 2003 Xbox 1\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Windows MSVC 2010 Xbox 360\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Windows MSVC 2017 all architectures\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Specific to this core\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Windows MSVC 2010 x64\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30,
      "Errorlog" : "line 363:72 token recognition error at: '\\S'\nline 363:81 token recognition error at: '\\W'\nline 363:93 token recognition error at: '\\M'\nline 363:103 token recognition error at: '\\M'\nline 363:118 token recognition error at: '\\W'\nline 363:126 token recognition error at: '\\v'\nline 364:71 token recognition error at: '\\S'\nline 364:80 token recognition error at: '\\W'\nline 364:92 token recognition error at: '\\M'\nline 364:102 token recognition error at: '\\M'\nline 364:117 token recognition error at: '\\W'\nline 364:125 token recognition error at: '\\v'\nline 365:72 token recognition error at: '\\S'\nline 365:81 token recognition error at: '\\M'\nline 365:91 token recognition error at: '\\M'\nline 365:106 token recognition error at: '\\W'\nline 365:114 token recognition error at: '\\v'\nline 366:71 token recognition error at: '\\S'\nline 366:80 token recognition error at: '\\M'\nline 366:90 token recognition error at: '\\M'\nline 366:105 token recognition error at: '\\W'\nline 366:113 token recognition error at: '\\v'\nline 392:50 token recognition error at: '\"$(WindowsSdkDir)\\I'\nline 392:96 token recognition error at: '\\s'\nline 393:65 token recognition error at: '\\I'\nline 393:94 token recognition error at: '\\u'\nline 394:63 token recognition error at: '\\I'\nline 394:92 token recognition error at: '\\u'\nline 395:61 token recognition error at: '\\L'\nline 395:86 token recognition error at: '\\u'\nline 396:59 token recognition error at: '\\L'\nline 396:84 token recognition error at: '\\u'\nline 399:17 token recognition error at: '\" opening a shared library), and vice-versa.\\n\\t# Work around it for now by using the strictly x86 compiler for x86, and x64 for x64.\\n\\t# NOTE: What about ARM?\\n\\tifneq (,$(findstring x64,$(TargetArchMoniker)))\\n\\t\\tVCCompilerToolsBinDir := $(VcCompilerToolsDir)\\b'\nline 403:52 token recognition error at: '\\H'\nline 405:48 token recognition error at: '\\b'\nline 405:52 token recognition error at: '\\H'\nline 434:35 token recognition error at: '\"HKLM\\S'\nline 434:49 token recognition error at: '\\M'\nline 434:59 token recognition error at: '\\M'\nline 434:74 token recognition error at: '\\W'\nline 434:82 token recognition error at: '\\v'\nline 435:40 token recognition error at: '\\S'\nline 435:49 token recognition error at: '\\M'\nline 435:59 token recognition error at: '\\M'\nline 435:74 token recognition error at: '\\W'\nline 435:82 token recognition error at: '\\v'\nline 437:43 token recognition error at: '\\S'\nline 437:52 token recognition error at: '\\M'\nline 437:62 token recognition error at: '\\M'\nline 437:77 token recognition error at: '\\W'\nline 437:85 token recognition error at: '\\v'\nline 438:43 token recognition error at: '\\S'\nline 438:52 token recognition error at: '\\M'\nline 438:62 token recognition error at: '\\M'\nline 438:77 token recognition error at: '\\W'\nline 438:85 token recognition error at: '\\v'\nline 460:40 token recognition error at: '\\S'\nline 460:49 token recognition error at: '\\M'\nline 460:59 token recognition error at: '\\M'\nline 460:74 token recognition error at: '\\W'\nline 460:82 token recognition error at: '\\v'\nline 461:40 token recognition error at: '\\S'\nline 461:49 token recognition error at: '\\M'\nline 461:59 token recognition error at: '\\M'\nline 461:74 token recognition error at: '\\W'\nline 461:82 token recognition error at: '\\v'\nline 463:43 token recognition error at: '\\S'\nline 463:52 token recognition error at: '\\M'\nline 463:62 token recognition error at: '\\M'\nline 463:77 token recognition error at: '\\W'\nline 463:85 token recognition error at: '\\v'\nline 464:43 token recognition error at: '\\S'\nline 464:52 token recognition error at: '\\M'\nline 464:62 token recognition error at: '\\M'\nline 464:77 token recognition error at: '\\W'\nline 464:85 token recognition error at: '\\v'\nline 508:64 token recognition error at: '\")\\n\\nWindowsSdkDir := $(INETSDK)\\n\\nexport INCLUDE := $(INCLUDE);$(INETSDK)/Include;libretro-common/include/compat/msvc\\nexport LIB := $(LIB);$(WindowsSdkDir);$(INETSDK)/Lib\\nTARGET := $(TARGET_NAME)_libretro.dll\\nPSS_STYLE :=2\\nLDFLAGS += -DLL\\nCFLAGS += -D_CRT_SECURE_NO_DEPRECATE\\nCXXFLAGS += -D_CRT_SECURE_NO_DEPRECATE\\n# Windows\\nelse\\n   CFLAGS += $(LTO)\\n   CXXFLAGS += $(LTO)\\n   LDFLAGS += $(LTO)\\n   TARGET := $(TARGET_NAME)_libretro.dll\\n   CC = gcc\\n   CXX = g++\\n   SHARED := -shared -static-libgcc -static-libstdc++ -s -Wl,--version-script=link.T\\n   CXXFLAGS += -D__WIN32__\\nendif\\n\\nCORE_DIR := ..\\n\\nifeq ($(DEBUG), 1)\\n   ifneq (,$(findstring msvc,$(platform)))\\n      CFLAGS += -Od -Zi -DDEBUG -D_DEBUG\\n      CXXFLAGS += -Od -Zi -DDEBUG -D_DEBUG\\n\\n      ifeq ($(STATIC_LINKING),1)\\n         CFLAGS += -MTd\\n         CXXFLAGS += -MTd\\n      else\\n         CFLAGS += -MDd\\n         CXXFLAGS += -MDd\\n      endif\\n   else\\n      CFLAGS += -O0 -g -DDEBUG\\n      CXXFLAGS += -O0 -g -DDEBUG\\n   endif\\nelse\\nifneq (,$(findstring msvc,$(platform)))\\n   CFLAGS += -O2 -DNDEBUG\\n   CXXFLAGS += -O2 -DNDEBUG\\nelse\\n   CFLAGS += -O3 -DNDEBUG\\n   CXXFLAGS += -O3 -DNDEBUG\\nendif\\n\\n   ifneq (,$(findstring msvc,$(platform)))\\n      ifeq ($(STATIC_LINKING),1)\\n         CFLAGS += -MT\\n         CXXFLAGS += -MT\\n      else\\n         CFLAGS += -MD\\n         CXXFLAGS += -MD\\n      endif\\n   endif\\nendif\\n\\ninclude Makefile.common\\n\\nOBJECTS := $(SOURCES_CXX:.cpp=.o) $(SOURCES_C:.c=.o)\\n\\nifeq ($(platform), sncps3)\\n   WARNINGS_DEFINES =\\n   CODE_DEFINES =\\nelse ifneq (,$(findstring msvc,$(platform)))\\n   WARNINGS_DEFINES =\\n   CODE_DEFINES =\\nelse\\n   WARNINGS_DEFINES = -Wall -W -Wno-unused-parameter\\n   CODE_DEFINES = -fomit-frame-pointer\\nendif\\n\\nCXXFLAGS\\t+= $(CODE_DEFINES) $(WARNINGS_DEFINES) $(fpic)\\nCXXFLAGS\\t+= -DRIGHTSHIFT_IS_SAR -D__LIBRETRO__ -DALLOW_CPU_OVERCLOCK\\nCFLAGS\\t\\t= $(CXXFLAGS)\\nCFLAGS          += -DHAVE_STDINT_H\\nCXXFLAGS        += -DHAVE_STDINT_H\\nifeq (,$(findstring msvc,$(platform)))\\nifeq ($(HAVE_STRINGS_H), 1)\\nCXXFLAGS += -DHAVE_STRINGS_H\\nendif\\nCXXFLAGS += -fno-rtti -pedantic \\nifneq ($(HAVE_EXCEPTIONS), 1)\\n   CXXFLAGS += -fno-exceptions\\nendif\\nendif\\n\\nOBJOUT   = -o\\nLINKOUT  = -o \\n\\nifneq (,$(findstring msvc,$(platform)))\\n\\tOBJOUT = -Fo\\n\\tLINKOUT = -out:\\nifeq ($(STATIC_LINKING),1)\\n\\tLD ?= lib.exe\\n\\tSTATIC_LINKING=0\\nelse\\n\\tLD = link.exe\\nendif\\nelse ifneq ($(platform),genode)\\n\\tLD = $(CXX)\\nendif\\n\\nINCFLAGS += $(INCFLAGS_PLATFORM)\\n\\nifeq ($(platform), theos_ios)\\nCOMMON_FLAGS := -DIOS -DARM $(COMMON_DEFINES) $(INCFLAGS) -I$(THEOS_INCLUDE_PATH) -Wno-error\\n$(LIBRARY_NAME)_CFLAGS += $(CFLAGS) $(COMMON_FLAGS)\\n$(LIBRARY_NAME)_CXXFLAGS += $(CXXFLAGS) $(COMMON_FLAGS)\\n${LIBRARY_NAME}_FILES = $(SOURCES_CXX) $(SOURCES_C)\\ninclude $(THEOS_MAKE_PATH)/library.mk\\nelse\\nall: $(TARGET)\\n\\n$(TARGET): $(OBJECTS)\\nifeq ($(STATIC_LINKING), 1)\\n\\t$(AR) rcs $@ $(OBJECTS)\\nelse\\n\\t+$(LD) $(fpic) $(SHARED) $(LINKOUT)$@ $(OBJECTS) $(LDFLAGS) $(LIBS)\\nendif\\n\\n%.o: %.cpp \\n\\t$(CXX) $(INCFLAGS) $(CPPFLAGS) $(CXXFLAGS) -c $(OBJOUT)$@ $<\\n\\n%.o: %.c\\n\\t$(CC) $(INCFLAGS) $(CPPFLAGS) $(CFLAGS) -c $(OBJOUT)$@ $<\\n\\nclean:\\n\\trm -f $(OBJECTS) $(TARGET)\\nendif\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1592
}