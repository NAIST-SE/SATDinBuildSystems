{
  "Repository" : "4612733",
  "Revision" : "HEAD",
  "ObjectId" : "a86f35b75b494505c42d9dd971546638bb73288d",
  "CommitTime" : "2019-04-18T15:41:38Z",
  "Files" : {
    "dependencies/GoogleTest/CMakeLists.txt" : {
      "ObjectId" : "8fa1af895823ae68ca203ed1c909ee9caf82effa",
      "LastModified" : "2014-05-06T08:23:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 53,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_gtest_samples=ON flag when running cmake.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "developer/cmake/CMakeLists.txt" : {
      "ObjectId" : "e0079e16893a940174b57336a1d4bb143f890c96",
      "LastModified" : "2015-01-07T21:17:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# OpenStudio\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy dlls at configuration time\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Boost\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Qt\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Sample target\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "developer/cmake/tpl.cmake" : {
      "ObjectId" : "4e13b197465a7b66e3ba1e377a5cff047cccc90b",
      "LastModified" : "2014-05-09T23:37:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Boost ######################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt #########################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OpenStudio #################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# disable autolinking\n",
        "Line" : 50,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# disable autolinking\n",
        "Line" : 51,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : "# disable autolinking\n",
        "Line" : 52,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : "#find_library(${name}_DEBUG_LIB\n\n#  NAME ${name}\n\n#  PATHS ${OPENSTUDIOCORE_LIB_DIR}\n\n#        ${OPENSTUDIOCORE_LIB_DIR}Debug\n\n#  NO_DEFAULT_PATH\n\n#)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "meta/CMakeLists.txt" : {
      "ObjectId" : "500be0ad41825def4036c1b741a763e45a7c0cac",
      "LastModified" : "2019-03-28T03:55:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# git sha\n",
        "Line" : 28,
        "CharPositionInLine" : 78
      },
      "1" : {
        "Text" : "# Search for modules in the openstudiocore dir first to override cmake ones\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build C++ documentation using Doxygen\n\n# Requires: doxygen\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build CSharp bindings\n\n# Requires: SWIG\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build Java bindings\n\n# Requires: SWIG\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build Node V8 bindings\n\n# Requires: SWIG\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build Python bindings\n\n# Requires: SWIG Python\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build ctest testing\n\n# Requires: EnergyPlus\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build package\n\n# Requires: EnergyPlus\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build regressions\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build shared libraries, configuration affects OpenStudioCore\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#if(MSVC)\n\n#  # Visual Studio compiler check\n\n#  # http://en.wikipedia.org/wiki/Visual_C%2B%2B#32-bit_and_64-bit_versions\n\n#  if    (${CMAKE_C_COMPILER_VERSION} VERSION_LESS \"18.0.21005.1\")\n\n#    message(FATAL_ERROR \"Visual Studio earlier than VS2013 is not supported\")\n\n#  elseif(${CMAKE_C_COMPILER_VERSION} VERSION_EQUAL \"18.0.21005.1\")\n\n#    # VS2013\n\n#    message(SEND_ERROR \"Update 4 for Visual Studio 2013 is required\")\n\n#  elseif(${CMAKE_C_COMPILER_VERSION} VERSION_EQUAL \"18.00.30501\")\n\n#    # VS2013 Update 2:\n\n#    message(SEND_ERROR \"Update 4 for Visual Studio 2013 is required\")\n\n#  elseif(${CMAKE_C_COMPILER_VERSION} VERSION_EQUAL \"18.00.30723\")\n\n#    message(WARNING \"Update 4 for Visual Studio 2013 is strongly recommended\")\n\n#  elseif(${CMAKE_C_COMPILER_VERSION} VERSION_EQUAL \"18.00.31101\")\n\n#    # VS2013 Update 4: no-op\n\n#  elseif(${CMAKE_C_COMPILER_VERSION} VERSION_EQUAL \"18.00.40629\")\n\n#    # VS2013 Update 5: no-op\n\n#  endif()\n\n#\n\n#  if (\"${CMAKE_GENERATOR}\" STREQUAL \"Visual Studio 12 2013 Win64\")\n\n#    set(CMAKE_GENERATOR_TOOLSET \"v120</PlatformToolset><PreferredToolArchitecture>x64</PreferredToolArchitecture><PlatformToolset>v120\")\n\n#  elseif (\"${CMAKE_GENERATOR}\" STREQUAL \"Visual Studio 14 2015 Win64\")\n\n#    set(CMAKE_GENERATOR_TOOLSET \"v140</PlatformToolset><PreferredToolArchitecture>x64</PreferredToolArchitecture><PlatformToolset>v140\")\n\n#  else()\n\n#    message(STATUS \"This version of Visual Studio will not use the 64 bit linker. Build times will likely suffer.\")\n\n#  endif()\n\n#\n\n#  # Build with Multiple Processes\n\n#  set(BUILD_WITH_MULTIPLE_PROCESSES ON CACHE BOOL \"/MP compiler flag for full processor utilization\")\n\n#  mark_as_advanced(BUILD_WITH_MULTIPLE_PROCESSES)\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Apple Sanity Check\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#if(NOT CMAKE_OSX_DEPLOYMENT_TARGET)\n\n#  message(FATAL_ERROR \"OSX Deployment Target Must Be Set\")\n\n#endif()\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#set(CMAKE_OSX_ARCHITECTURES \"x86_64\" CACHE STRING \"Arch\" FORCE)\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#if(NOT CMAKE_OSX_SYSROOT)\n\n#  message(FATAL_ERROR \"OSX Sysroot must be set\")\n\n#elseif(CMAKE_OSX_SYSROOT MATCHES \".*10\\\\.9.*\")\n\n#  set(OSX_SDK \"10.9\")\n\n#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c11 -std=c++11 -stdlib=libc++\")\n\n#elseif(CMAKE_OSX_SYSROOT MATCHES \".*10\\\\.10.*\")\n\n#  set(OSX_SDK \"10.10\")\n\n#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c11 -std=c++11 -stdlib=libc++\")\n\n#elseif(CMAKE_OSX_SYSROOT MATCHES \".*10\\\\.11.*\")\n\n#  set(OSX_SDK \"10.11\")\n\n#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c11 -std=c++11 -stdlib=libc++\")\n\n#else()\n\n#  message(FATAL_ERROR \"OSX Sysroot must use the 10.9, 10.10, or 10.11 SDK\")\n\n#endif()\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Build Node for linking to Node modules\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Use PCH\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set number of cores to be used when building boost and qt, idea is you will do make -jX so boost and qt will build in parallel\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Build with OpenSSL support\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OSX can work with a static ruby library\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Ruby\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# DLM: still missing: curses, dbm, gdbm\n\n# sudo apt-get -y install ruby autoconf automake libtool bison libgdbm-dev zlib1g-dev libffi-dev libssl-dev\n\n# sudo apt-get -y install build-essential libssl-dev libreadline-dev zlib1g-dev\n",
        "Line" : 296,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# KSB: For Mac, you may need to install some things...\n\n# brew install homebrew/dupes/zlib\n\n# brew link --overwrite --force homebrew/dupes/zlib\n\n# brew install autoconf automake libtool\n\n# brew link autoconf automake libtool\n",
        "Line" : 302,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# cd ext/openssl && ../../ruby extconf.rb && cd ../readline && ../../ruby extconf.rb && cd ../../ && $(MAKE)\n",
        "Line" : 313,
        "CharPositionInLine" : 28
      },
      "25" : {
        "Text" : "# This will require bison, sed, and at least ruby 1.8 in your path\n\n# Please install DevKit even though the build will be done by msvc the ruby build system uses some traditionally unix tools\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# OpenStudio Gems\n\n# DLM: moved to https://github.com/NREL/openstudio-gems\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Boost\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The call to cmd and VS_UNICODE_OUTPUT is to fix an oddity where boost configuration complains about missing ICU when it shouldn't\n\n# be trying to find it\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# install deps according to here http://doc.qt.io/qt-5/linux-requirements.html\n\n# also reference https://wiki.qt.io/Building_Qt_5_from_Git\n\n# need to apply the workaround at https://bugreports.qt.io/browse/QTBUG-52605 manually\n",
        "Line" : 429,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# to initialize command prompt run: \"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" amd64\n",
        "Line" : 450,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Set up the dependencies for OpenStudioCore\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#if(BUILD_QT AND MSVC)\n\n#  file(GLOB dlls ${CMAKE_BINARY_DIR}/Qt-prefix/src/Qt-install/bin/*.dll)\n\n#  foreach(dll ${dlls})\n\n#    get_filename_component(filename \"${dll}\" NAME_WE)\n\n#    ExternalProject_Add_Step(OSCore \"Install${filename}ReleaseDLL\"\n\n#      COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${dll}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/Release\"\n\n#      DEPENDERS configure\n\n#    )\n\n#    ExternalProject_Add_Step(OSCore \"Install${filename}DebugDLL\"\n\n#      COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${dll}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/Debug\"\n\n#      DEPENDERS configure\n\n#    )\n\n#    ExternalProject_Add_Step(OSCore \"Install${filename}RelWithDebInfoDLL\"\n\n#      COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${dll}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/RelWithDebInfo\"\n\n#      DEPENDERS configure\n\n#    )\n\n#    ExternalProject_Add_Step(OSCore \"Install${filename}MinSizeRelDLL\"\n\n#      COMMAND ${CMAKE_COMMAND} -E copy_if_different \"${dll}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/MinSizeRel\"\n\n#      DEPENDERS configure\n\n#    )\n\n#  endforeach()\n\n#endif()\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#if(MSVC)\n\n#  ExternalProject_Add_Step(OSCore MakeRubyReleaseFolder\n\n#    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/Release\n\n#    DEPENDERS configure\n\n#  )\n\n#  ExternalProject_Add_Step(OSCore MakeRubyDebugFolder\n\n#    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/Debug\n\n#    DEPENDERS configure\n\n#  )\n\n#  ExternalProject_Add_Step(OSCore MakeRubyRelWithDebInfoFolder\n\n#    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/RelWithDebInfo\n\n#    DEPENDERS configure\n\n#  )\n\n#  ExternalProject_Add_Step(OSCore MakeRubyMinSizeRelFolder\n\n#    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/MinSizeRel\n\n#    DEPENDERS configure\n\n#  )\n\n#\n\n#\n\n#  ExternalProject_Add_Step(OSCore MakeRubyReleaseDLL\n\n#    COMMAND ${CMAKE_COMMAND} -E copy \"${RUBY_DLLPATH}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/Release/${RUBY_DLL}\"\n\n#    DEPENDERS configure\n\n#  )\n\n#  ExternalProject_Add_Step(OSCore MakeRubyDebugDLL\n\n#    COMMAND ${CMAKE_COMMAND} -E copy \"${RUBY_DLLPATH}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/Debug/${RUBY_DLL}\"\n\n#    DEPENDERS configure\n\n#  )\n\n#  ExternalProject_Add_Step(OSCore MakeRubyRelWithDebInfoDLL\n\n#    COMMAND ${CMAKE_COMMAND} -E copy \"${RUBY_DLLPATH}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/RelWithDebInfo/${RUBY_DLL}\"\n\n#    DEPENDERS configure\n\n#  )\n\n#  ExternalProject_Add_Step(OSCore MakeRubyMinSizeRelDLL\n\n#    COMMAND ${CMAKE_COMMAND} -E copy \"${RUBY_DLLPATH}\" \"${CMAKE_BINARY_DIR}/OSCore-prefix/src/OSCore-build/Products/MinSizeRel/${RUBY_DLL}\"\n\n#    DEPENDERS configure\n\n#  )\n\n#\n\n#endif()\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###############################################################################\n\n# Use CPack\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###############################################################################\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "openstudiocore/CMake/CMakeParseArguments.cmake" : {
      "ObjectId" : "8553f38f5f090a2305c095ba5a8ef34427c19ed5",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakeParseArguments\n\n# -------------------\n\n#\n\n#\n\n#\n\n# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords>\n\n# <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions\n\n# for parsing the arguments given to that macro or function.  It\n\n# processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e.  keywords which can be used when calling the macro without any\n\n# value following, like e.g.  the OPTIONAL keyword of the install()\n\n# command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g.  DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this\n\n# macro which can be followed by more than one value, like e.g.  the\n\n# TARGETS or FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.  These\n\n# variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see\n\n# whether your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments\n\n# as the real install() command:\n\n#\n\n# ::\n\n#\n\n#    function(MY_INSTALL)\n\n#      set(options OPTIONAL FAST)\n\n#      set(oneValueArgs DESTINATION RENAME)\n\n#      set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#      cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\"\n\n#                            \"${multiValueArgs}\" ${ARGN} )\n\n#      ...\n\n#\n\n#\n\n#\n\n# Assume my_install() has been called like this:\n\n#\n\n# ::\n\n#\n\n#    my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n#\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the\n\n# following variables:\n\n#\n\n# ::\n\n#\n\n#    MY_INSTALL_OPTIONAL = TRUE\n\n#    MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#    MY_INSTALL_DESTINATION = \"bin\"\n\n#    MY_INSTALL_RENAME = \"\" (was not used)\n\n#    MY_INSTALL_TARGETS = \"foo;bar\"\n\n#    MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#    MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n#\n\n#\n\n# You can then continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g.  if directly after a\n\n# one_value_keyword another recognized keyword follows, this is\n\n# interpreted as the beginning of the new option.  E.g.\n\n# my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION\n\n# would be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 123,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 124,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 125,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "openstudiocore/CMake/FindEnergyPlus.cmake" : {
      "ObjectId" : "19228e4dcc1e8764f5f1a911ac571a24f10f4f7a",
      "LastModified" : "2019-03-04T02:19:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find EnergyPlus, the main assumption of this finder is that EnergyPlus\n\n#   is installed in the default location, or is pointed to by environment\n\n#   variable ENERGYPLUSDIR.\n\n#\n\n# We anticipate energyPlus builds from the official release as well as internal\n\n# pre-release and post-release bug fixes.  The official release is installed in\n\n# 'EnergyPlusV${Major}-${Minor}-${Patch}', the internal releases are installed in\n\n# 'EnergyPlusV${Major}-${Minor}-${Patch}-${Build}'.  This finder assumes that\n\n# internal releases of the same major/minor/patch versions are prefered to official\n\n# release builds.\n\n# Note: after 9.1.0 included, E+ doesn't ship with a sublevel 'EnergyPlusV${Major}-${Minor}-${Patch}' anymore\n\n#\n\n# The module defines the following variables:\n\n#  ENERGYPLUS_FOUND - was a compatible version of EnergyPlus found\n\n#  ENERGYPLUS_EXE - path to the EnergyPlus executable\n\n#  ENERGYPLUS_IDD - path to the idd\n\n#  ENERGYPLUS_WEATHER_DIR - path to the weather dir\n\n#\n\n# Example usage:\n\n#  find_package(EnergyPlus 5.0.0) # find release or internal versions, prefers internal builds\n\n#  find_package(EnergyPlus 5.0.0.15) # find only internal versions of specific build\n\n#  find_package(EnergyPlus 5.0.0 EXACT) # find only release\n\n#  find_package(EnergyPlus 5.0.0.15 EXACT) # find only internal version of specific build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update for 8.2.0 and above:\n\n# As of version 8.2.0, EnergyPlus has a build SHA instead of a possible fourth digit in the version string.\n\n# Finding a specific build with the syntax find_package(EnergyPlus 5.0.0.15) is meaningless for these versions.\n\n# Instead this module will consider the variable ENERGYPLUS_BUILD_SHA, and if set it will only succeed in\n\n# finding EnergyPlus if a version of EnergyPlus with that SHA has been found.  This behavior is independent of\n\n# the keyword \"EXACT\" in the find_package signature. In other words having ENERGYPLUS_BUILD_SHA defined implies EXACT.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if(WIN32)\n\n#  file(GLOB ENERGYPLUS_POSSIBLE_PATHS \"C:/[eE]nergy[pP]lus?*\")\n\n#elseif(APPLE)\n\n#  file(GLOB ENERGYPLUS_POSSIBLE_PATHS \"/Applications/[eE]nergy[pP]lus?*\")\n\n#else()\n\n#  file(GLOB ENERGYPLUS_POSSIBLE_PATHS \"/usr/local/[eE]nergy[pP]lus?*\")\n\n#endif()\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# sort possible paths in reverse order, favoring the ENERGYPLUSDIR environment variable\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If modifying this file, you may want to uncomment these lines (they are only cleared when redownloading the E+ package)\n\n# unset(ENERGYPLUS_FOUND CACHE)\n\n# unset(ENERGYPLUS_EXE CACHE)\n\n# unset(ENERGYPLUS_IDD CACHE)\n\n# unset(ENERGYPLUS_WEATHER_DIR CACHE)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to find the first path that matches all of the version requirements where EnergyPlus is found\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extract version from path, in the format X.Y.Z.buildsha (where '.' here can also be '-', and build sha could be omitted)\n\n# (could also just get BUILD_SHA there isn't of opening IDD below...)\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# if 8.2.0 or greater then look for a build number in the idd file\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check that the file actually exists first, if not skip iteration\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# we just need to read the first part of this large file\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# set is match false\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# if a build SHA is provided then assume we need an exact match\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# EnergyPlus_FIND_VERSION is the argument passed by `find_package(EnergyPlus \"${ENERGYPLUS_VERSION}\" REQUIRED)`\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# if the cmake finder was passed the EXACT flag then check the version for exact match\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# need greater than or equal\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# but need equal major and minor versions too for I/O compatibility\n\n# This is risky above 8.2.0, because of possible iteration schema changes within the third digit, but go ahead and allow it\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# if match, try to find program and other variables\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# break if found everything\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# These checks may seem redundant to above, but here we add log messages.\n\n# We also check that found version still matches what is requested.\n\n# This is important because found version is cached and may \"stick\" even after the requested version changes in the project.\n\n# find_package_handle_standard_args takes this into account except it doesn't know that E+ is not backwards\n\n# compatible and it also doesn't know about EnergyPlus build SHA.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Even if find_package didn't ask for exact match we need to check this, because E+ is not backwards compatible.\n\n# find_package_handle_standard_args does not know about this quirk.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "openstudiocore/CMake/FindMongoDB.cmake" : {
      "ObjectId" : "1429da32677b5101ebc7961b55bcf2dd7e8f2664",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MongoDB\n\n# Find the MongoDB includes and client library\n\n# This module defines\n\n#  MongoDB_INCLUDE_DIR, where to find mongo/client/dbclient.h\n\n#  MongoDB_LIBRARIES, the libraries needed to use MongoDB.\n\n#  MongoDB_FOUND, If false, do not try to use MongoDB.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/CMake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "1be38af2b2862af4ba48fc67d4d2cf324b353e27",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[=======================================================================[.rst:\nFindPackageHandleStandardArgs\n-----------------------------\n\nThis module provides a function intended to be used in :ref:`Find Modules`\nimplementing :command:`find_package(<PackageName>)` calls.  It handles the\n``REQUIRED``, ``QUIET`` and version-related arguments of ``find_package``.\nIt also sets the ``<PackageName>_FOUND`` variable.  The package is\nconsidered found if all variables listed contain valid results, e.g.\nvalid filepaths.\n\n.. command:: find_package_handle_standard_args\n\n  There are two signatures::\n\n    find_package_handle_standard_args(<PackageName>\n      (DEFAULT_MSG|<custom-failure-message>)\n      <required-var>...\n      )\n\n    find_package_handle_standard_args(<PackageName>\n      [FOUND_VAR <result-var>]\n      [REQUIRED_VARS <required-var>...]\n      [VERSION_VAR <version-var>]\n      [HANDLE_COMPONENTS]\n      [CONFIG_MODE]\n      [FAIL_MESSAGE <custom-failure-message>]\n      )\n\n  The ``<PackageName>_FOUND`` variable will be set to ``TRUE`` if all\n  the variables ``<required-var>...`` are valid and any optional\n  constraints are satisfied, and ``FALSE`` otherwise.  A success or\n  failure message may be displayed based on the results and on\n  whether the ``REQUIRED`` and/or ``QUIET`` option was given to\n  the :command:`find_package` call.\n\n  The options are:\n\n  ``(DEFAULT_MSG|<custom-failure-message>)``\n    In the simple signature this specifies the failure message.\n    Use ``DEFAULT_MSG`` to ask for a default message to be computed\n    (recommended).  Not valid in the full signature.\n\n  ``FOUND_VAR <result-var>``\n    Obselete.  Specifies either ``<PackageName>_FOUND`` or\n    ``<PACKAGENAME>_FOUND`` as the result variable.  This exists only\n    for compatibility with older versions of CMake and is now ignored.\n    Result variables of both names are always set for compatibility.\n\n  ``REQUIRED_VARS <required-var>...``\n    Specify the variables which are required for this package.\n    These may be named in the generated failure message asking the\n    user to set the missing variable values.  Therefore these should\n    typically be cache entries such as ``FOO_LIBRARY`` and not output\n    variables like ``FOO_LIBRARIES``.\n\n  ``VERSION_VAR <version-var>``\n    Specify the name of a variable that holds the version of the package\n    that has been found.  This version will be checked against the\n    (potentially) specified required version given to the\n    :command:`find_package` call, including its ``EXACT`` option.\n    The default messages include information about the required\n    version and the version which has been actually found, both\n    if the version is ok or not.\n\n  ``HANDLE_COMPONENTS``\n    Enable handling of package components.  In this case, the command\n    will report which components have been found and which are missing,\n    and the ``<PackageName>_FOUND`` variable will be set to ``FALSE``\n    if any of the required components (i.e. not the ones listed after\n    the ``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are\n    missing.\n\n  ``CONFIG_MODE``\n    Specify that the calling find module is a wrapper around a\n    call to ``find_package(<PackageName> NO_MODULE)``.  This implies\n    a ``VERSION_VAR`` value of ``<PackageName>_VERSION``.  The command\n    will automatically check whether the package configuration file\n    was found.\n\n  ``FAIL_MESSAGE <custom-failure-message>``\n    Specify a custom failure message instead of using the default\n    generated message.  Not recommended.\n\nExample for the simple signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibXml2 DEFAULT_MSG\n    LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\nThe ``LibXml2`` package is considered to be found if both\n``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` are valid.\nThen also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found\nand ``REQUIRED`` was used, it fails with a\n:command:`message(FATAL_ERROR)`, independent whether ``QUIET`` was\nused or not.  If it is found, success will be reported, including\nthe content of the first ``<required-var>``.  On repeated CMake runs,\nthe same message will not be printed again.\n\nExample for the full signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibArchive\n    REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n    VERSION_VAR LibArchive_VERSION)\n\nIn this case, the ``LibArchive`` package is considered to be found if\nboth ``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid.\nAlso the version of ``LibArchive`` will be checked by using the version\ncontained in ``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given,\nthe default messages will be printed.\n\nAnother example for the full signature:\n\n.. code-block:: cmake\n\n  find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n  find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\nIn this case, a ``FindAutmoc4.cmake`` module wraps a call to\n``find_package(Automoc4 NO_MODULE)`` and adds an additional search\ndirectory for ``automoc4``.  Then the call to\n``find_package_handle_standard_args`` produces a proper success/failure\nmessage.\n#]=======================================================================]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 180,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# check with DEFINED here as the requested or found version may be \"0\"\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# exact version required\n",
        "Line" : 309,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# count the dots in the version string\n",
        "Line" : 310,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# add one dot because there is one dot more than there are components\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Because of the C++ implementation of find_package() ${_NAME}_FIND_VERSION_COUNT\n\n# is at most 4 here. Therefore a simple lookup table is used.\n",
        "Line" : 315,
        "CharPositionInLine" : 10
      },
      "19" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 345,
        "CharPositionInLine" : 17
      },
      "20" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 356,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# print the result:\n",
        "Line" : 377,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "openstudiocore/CMake/FindPackageMessage.cmake" : {
      "ObjectId" : "a0349d3db99a3b446c421d9bdc14142ab278e72f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "openstudiocore/CMake/FindRuby.cmake" : {
      "ObjectId" : "f0d58362307c84f7f368e76ba54788276e1ae6a0",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindRuby\n\n# --------\n\n#\n\n# Find Ruby\n\n#\n\n# This module finds if Ruby is installed and determines where the\n\n# include files and libraries are.  Ruby 1.8, 1.9, 2.0 and 2.1 are\n\n# supported.\n\n#\n\n# The minimum required version of Ruby can be specified using the\n\n# standard syntax, e.g.  find_package(Ruby 1.8)\n\n#\n\n# It also determines what the name of the library is.  This code sets\n\n# the following variables:\n\n#\n\n# ``RUBY_EXECUTABLE``\n\n#   full path to the ruby binary\n\n# ``RUBY_INCLUDE_DIRS``\n\n#   include dirs to be used when using the ruby library\n\n# ``RUBY_LIBRARY``\n\n#   full path to the ruby library\n\n# ``RUBY_VERSION``\n\n#   the version of ruby which was found, e.g. \"1.8.7\"\n\n# ``RUBY_FOUND``\n\n#   set to true if ruby ws found successfully\n\n#\n\n# Also:\n\n#\n\n# ``RUBY_INCLUDE_PATH``\n\n#   same as RUBY_INCLUDE_DIRS, only provided for compatibility reasons, don't use it\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2008-2009 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   RUBY_ARCHDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"archdir\"@:>@)'`\n\n#   RUBY_SITEARCHDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"sitearchdir\"@:>@)'`\n\n#   RUBY_SITEDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"sitelibdir\"@:>@)'`\n\n#   RUBY_LIBDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"libdir\"@:>@)'`\n\n#   RUBY_LIBRUBYARG=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"LIBRUBYARG_SHARED\"@:>@)'`\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment the following line to get debug output for this file\n\n# set(_RUBY_DEBUG_OUTPUT TRUE)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Determine the list of possible names of the ruby executable depending\n\n# on which version of ruby is required\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if 1.9 is required, don't look for ruby18 and ruby1.8, default to version 1.8\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we can't construct that if only major version is given\n",
        "Line" : 63,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# if we want a version below 1.9, also look for ruby 1.8\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# query the ruby version\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# query the different directories\n",
        "Line" : 108,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# site_ruby\n",
        "Line" : 116,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# vendor_ruby available ?\n",
        "Line" : 120,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# save the results in the cache so we don't have to run ruby the next time again\n",
        "Line" : 129,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# In case RUBY_EXECUTABLE could not be executed (e.g. cross compiling)\n\n# try to detect which version we found. This is not too good.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# by default assume 1.8.0\n",
        "Line" : 165,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# check whether we found 1.9.x\n",
        "Line" : 169,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# check whether we found 2.0.x\n",
        "Line" : 174,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# check whether we found 2.1.x\n",
        "Line" : 179,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# if ruby > 1.8 is required or if ruby > 1.8 was found, search for the config.h dir\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Determine the list of possible names for the ruby library\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set some variables for compatibility with previous version of this file\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "openstudiocore/CMake/FixupBundleOverrides.cmake" : {
      "ObjectId" : "a29d12dcef3bf9b36e648f18662e02f6878cf63f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/CMakeLists.txt" : {
      "ObjectId" : "e24deffbcc969c2ac34d6d90a660277e0cafac7c",
      "LastModified" : "2019-04-16T18:45:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use ccache is available, has to be before \"project()\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support Unix Makefiles and Ninja\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Project version information\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# git sha\n",
        "Line" : 30,
        "CharPositionInLine" : 65
      },
      "4" : {
        "Text" : "# git sha\n",
        "Line" : 49,
        "CharPositionInLine" : 80
      },
      "5" : {
        "Text" : "# OpenStudio version\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# EnergyPlus Idd version\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build SHA is not required to have a value, but if it does OpenStudio will require this build.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ENERGYPLUS_RELEASE_NAME is used to locate the E+ download\n\n# from the github releases\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Radiance\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# configure file with version information\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# universal configuration for mac plists\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# compiler id for about boxes\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "###############################################################################\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n# Build options\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Build C++ documentation using Doxygen\n\n# Requires: doxygen\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Build CSharp bindings\n\n# Requires: SWIG\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build Java bindings\n\n# Requires: SWIG\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Build V8 Node bindings\n\n# Requires: SWIG, Node\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Build Python bindings\n\n# Requires: SWIG Python\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Build ctest testing\n\n# Requires: EnergyPlus\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Build package\n\n# Requires: EnergyPlus, Radiance\n\n# TODO: this option is actually unused...\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Build with OpenSSL support\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Build shared OS libraries\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Build the OpenStudio Application\n\n# This option will require shared libs\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Enable runtime checking features\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Enable libgtest linking\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Use PCH\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Build with Multiple Processes\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "###############################################################################\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###############################################################################\n\n# CMake control\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# High level project configuration\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Include project specific macros\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Search for modules in the root dir first to override cmake ones\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Use CTest\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# global list\n",
        "Line" : 263,
        "CharPositionInLine" : 28
      },
      "39" : {
        "Text" : "###############################################################################\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###############################################################################\n\n# Compiler and system specific options\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# all warnings\n",
        "Line" : 276,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# all warnings\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# effective c++\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Weffc++\")\n\n# treat warnings as errors\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\")\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# wchar not supported for MinGW\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# warning level 3\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# warning level 4 - DLM: we should shoot for this\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /W4\")\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# all warnings - DLM: probably too high to ever use\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /Wall\")\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# create compiler processes on all effective processors\n",
        "Line" : 312,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#Enable warning on thread un-safe static member initialization - DLM: we have been bit by this many times\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# ignore decorated name length exceeded\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# ignore needs to have dll-interface to be used by clients of class\n\n# we will not rely on exporting templates instead all libraries must\n\n# be linked against the same runtime\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# ignore conversion from size_t to int for now\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# treat warnings as errors\n\n# DLM: only do this for our code, added in later\n\n# add_definitions(/WX)\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# ignore warnings about the stl being insecure\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Add Color Output if Using Ninja\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Clang\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# g++\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# For some reason it doesn't say its supported, but it works...\n\n# AddCXXFlagIfSupported(-fdiagnostics-color COMPILER_SUPPORTS_fdiagnostics-color)\n",
        "Line" : 361,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "##############################################################################\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "###############################################################################\n\n# Check version of gcc\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "###############################################################################\n\n# Dependencies\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# EnergyPlus\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# TODO: There aren't any redhat releases anymore, see PR #3145 too\n",
        "Line" : 388,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Remove the old extracted dir if exists\n",
        "Line" : 408,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "## TODO: update md5 hash, but not present on GitHub as .zip, only .exe for now at least\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# Remove the old extracted dir if exists\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Allows placing the archive manually in the build dir too\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Prior to E+ 9.1.0 (OS 2.7.2), zip/tar.gz would extract to something like `./EnergyPlus-9.0.0-buildsha-Linux-x86_64/EnergyPlus-9-0-0`\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# After 9.1.0, due to QtIFW/Mac packaging (NREL/EnergPlus#7148), it is going directly to `./EnergyPlus-9.1.0-buildsha-Linux-x86_64/`\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# Find EnergyPlus, which will set the ENERGYPLUS_XXX variables and cache them\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Radiance\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# DLM: note that the installer expects the extracted directory to be named radiance-5.0.a.12-Linux\n",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "#set(RADIANCE_ARCH 32)\n\n#set(RADIANCE_EXPECTED_HASH 78eda5d4b0215cd675cc3ec8975e6122)\n",
        "Line" : 501,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Perl\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Ruby\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Mingw based ruby lib (only the dll stub library) from Ruby Installer\n\n# We need this for stand alone ruby bindings\n\n# target to use with typical ruby installations (those that are not msvc)\n\n# Only need this on Windows systems\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# openstudio gems\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# build and release openstudio gems at https://github.com/NREL/OpenStudio-gems\n\n# upload the openstudio-gems-DATE.tar.gz to the dependencies location on s3, then update the MD5sum and url below\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# OpenSSL / libssh support\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "#install(FILES \"${LIBEAY32_PATH}\" \"${SSLEAY32_PATH}\" DESTINATION ${RUBY_MODULE_ARCH_DIR})\n",
        "Line" : 688,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# DView\n",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# SWIG\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Xcode/Ninja generators undefined MAKE\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# using forked version of SWIG at https://github.com/macumber/swig/tree/openstudio_swig_3_0_12\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# We patch it up with a version of pcre we provide to avoid having to have the requirement locally\n",
        "Line" : 751,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# SWIG requires MinGW to compile on windows, so we just copy in the prebuilt binary\n",
        "Line" : 763,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# global list\n",
        "Line" : 781,
        "CharPositionInLine" : 33
      },
      "88" : {
        "Text" : "# build rdoc\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# C#\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# global list of library dependencies of the generated wrapper cxx files\n",
        "Line" : 804,
        "CharPositionInLine" : 37
      },
      "91" : {
        "Text" : "# global list of generated wrapper cxx files\n",
        "Line" : 805,
        "CharPositionInLine" : 35
      },
      "92" : {
        "Text" : "# global list targets that build generated wrapper cxx files\n",
        "Line" : 806,
        "CharPositionInLine" : 37
      },
      "93" : {
        "Text" : "# JAVA\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# global list\n\n# global list\n",
        "Line" : 813,
        "CharPositionInLine" : 35
      },
      "95" : {
        "Text" : "# need python\n\n# TODO: add support for 3.x\n",
        "Line" : 823,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# global list of python bindings\n",
        "Line" : 828,
        "CharPositionInLine" : 30
      },
      "97" : {
        "Text" : "# global list of library dependencies of the generated wrapper cxx files\n",
        "Line" : 829,
        "CharPositionInLine" : 37
      },
      "98" : {
        "Text" : "# global list of generated wrapper cxx files\n",
        "Line" : 830,
        "CharPositionInLine" : 35
      },
      "99" : {
        "Text" : "# global list targets that build generated wrapper cxx files\n",
        "Line" : 831,
        "CharPositionInLine" : 37
      },
      "100" : {
        "Text" : "# Required dependencies\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Threading library\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Zlib\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# make sure zconf.h can be found\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# force gtest to build as a static library no matter what, otherwise we get error about undefined death test symbols when building shared libs\n",
        "Line" : 851,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# Google test library\n",
        "Line" : 855,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# in case we are linking with shared or static os libraries\n",
        "Line" : 856,
        "CharPositionInLine" : 75
      },
      "107" : {
        "Text" : "# restore BUILD_SHARED_LIBS\n",
        "Line" : 864,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# GeographicLib\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# Boost\n",
        "Line" : 878,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "#message(\"LSB_RELEASE_ID_SHORT = ${LSB_RELEASE_ID_SHORT}\")\n",
        "Line" : 903,
        "CharPositionInLine" : 1
      },
      "111" : {
        "Text" : "# ubuntu 16.04\n",
        "Line" : 905,
        "CharPositionInLine" : 3
      },
      "112" : {
        "Text" : "# ubuntu 14.04\n",
        "Line" : 909,
        "CharPositionInLine" : 3
      },
      "113" : {
        "Text" : "# require these run time checks\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# use chrono as a header only library\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# do not autolink with serialization\n",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# SQLite definitions, used in sqlite and litesql\n",
        "Line" : 955,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# 1 is default, serial access\n",
        "Line" : 956,
        "CharPositionInLine" : 39
      },
      "118" : {
        "Text" : "# Qt\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# download qt\n",
        "Line" : 963,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "#find_package(Qt53DCore 5.6.1 REQUIRED PATHS ${QT_INSTALL_DIR} NO_DEFAULT_PATH)\n\n#find_package(Qt53DInput 5.6.1 REQUIRED PATHS ${QT_INSTALL_DIR} NO_DEFAULT_PATH)\n\n#find_package(Qt53DRender 5.6.1 REQUIRED PATHS ${QT_INSTALL_DIR} NO_DEFAULT_PATH)\n",
        "Line" : 1017,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "#list(APPEND QT_WEB_LIBS Qt5::3DCore)\n\n#list(APPEND QT_WEB_LIBS Qt5::3DInput)\n\n#list(APPEND QT_WEB_LIBS Qt5::3DRender)\n",
        "Line" : 1036,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# there does not appear to be a normal qt finder for this\n",
        "Line" : 1059,
        "CharPositionInLine" : 6
      },
      "123" : {
        "Text" : "# download qt static\n",
        "Line" : 1097,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# http://doc.qt.io/qt-5/linux-requirements.html\n\n# DLM: the order of linking for static archives matter because symbols will only be included if they are needed by previous libraries\n\n# in some cases we may need to relink libraries a second time\n\n#list(APPEND QT_STATIC_LIBS \"${QT_STATIC_INSTALL_DIR}/plugins/platforms/libqxcb.a\")\n\n#list(APPEND QT_STATIC_LIBS \"${QT_STATIC_INSTALL_DIR}/plugins/sqldrivers/libqsqlite.a\")\n",
        "Line" : 1167,
        "CharPositionInLine" : 2
      },
      "125" : {
        "Text" : "# DLM: the order of linking for static archives matter because symbols will only be included if they are needed by previous libraries\n\n# in some cases we may need to relink libraries a second time\n",
        "Line" : 1222,
        "CharPositionInLine" : 2
      },
      "126" : {
        "Text" : "###############################################################################\n\n## jsoncpp\n",
        "Line" : 1277,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "###############################################################################\n",
        "Line" : 1280,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "################################################################################\n\n## sqlite\n",
        "Line" : 1282,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "################################################################################\n",
        "Line" : 1285,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "###############################################################################\n\n# Add to include path\n",
        "Line" : 1287,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "# Project source directory\n",
        "Line" : 1290,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# For QWinWidget\n",
        "Line" : 1293,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# Project binary directory\n",
        "Line" : 1296,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "###############################################################################\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "###############################################################################\n\n# Add project sub directories\n",
        "Line" : 1300,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# treat warnings as errors\n",
        "Line" : 1304,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# Each subfolder of src is a major sub-project\n",
        "Line" : 1314,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "# Include the resources, should happen after find EnergyPlus\n",
        "Line" : 1342,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "# csharp, after loading projects\n",
        "Line" : 1355,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# java, after loading projects\n",
        "Line" : 1360,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# python, after loading projects\n",
        "Line" : 1365,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# v8-node\n",
        "Line" : 1370,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "###############################################################################\n",
        "Line" : 1375,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "###############################################################################\n\n# Targets that combine all bindings targets\n",
        "Line" : 1377,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "#add_dependencies(ALL_PYTHON_BINDINGS python_sdk ${ALL_PYTHON_BINDING_TARGETS})\n",
        "Line" : 1384,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "#add_dependencies(ALL_JAVA_BINDINGS java_sdk ${ALL_JAVA_BINDING_TARGETS})\n",
        "Line" : 1395,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "###############################################################################\n\n# Targets that combine all documentation targets\n",
        "Line" : 1408,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# Doxygen\n",
        "Line" : 1411,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# need doxygen\n",
        "Line" : 1413,
        "CharPositionInLine" : 2
      },
      "150" : {
        "Text" : "# if have dot you have more options\n\n#if(DOXYGEN_DOT_FOUND)\n",
        "Line" : 1416,
        "CharPositionInLine" : 2
      },
      "151" : {
        "Text" : "#endif()\n",
        "Line" : 1419,
        "CharPositionInLine" : 2
      },
      "152" : {
        "Text" : "# Add the idd files to the documentation list as a separate entry, along with shared_gui_components\n",
        "Line" : 1424,
        "CharPositionInLine" : 2
      },
      "153" : {
        "Text" : "# Remove directories we don't want documentation generated for\n",
        "Line" : 1427,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# Specific settings\n",
        "Line" : 1446,
        "CharPositionInLine" : 4
      },
      "155" : {
        "Text" : "# We want to build the idd documentation separately because of the generated files\n",
        "Line" : 1448,
        "CharPositionInLine" : 6
      },
      "156" : {
        "Text" : "# Exclude the idd directory when building the utilities documentation\n",
        "Line" : 1451,
        "CharPositionInLine" : 6
      },
      "157" : {
        "Text" : "# Set up dependencies after all targets have been created\n",
        "Line" : 1475,
        "CharPositionInLine" : 2
      },
      "158" : {
        "Text" : "# Zip documentation\n",
        "Line" : 1498,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "###############################################################################\n\n# Export targets and generate OpenStudioCoreConfig.cmake\n",
        "Line" : 1523,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "#gbXMLToIdf\n",
        "Line" : 1557,
        "CharPositionInLine" : 2
      },
      "161" : {
        "Text" : "# Install additional Documents, such as release notes\n",
        "Line" : 1581,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "###############################################################################\n",
        "Line" : 1587,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "#set(CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_SKIP ON)\n",
        "Line" : 1592,
        "CharPositionInLine" : 2
      },
      "164" : {
        "Text" : "# Trusty (14.04) uses 3.0-0, all other including Xenial (16.04) use 3.0-0v5\n",
        "Line" : 1605,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "# Default the debian package name to include version to allow several versions to be installed concurrently instead of overwriting any existing one\n",
        "Line" : 1607,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "# CPACK_DEBIAN_PACKAGE_DESCRIPTION defaults to this one too. dpkg-deb -I xxx.deb will show this description\n",
        "Line" : 1609,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "# The actual .deb file name on disk\n",
        "Line" : 1613,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "# Default method doesn't use IFW but Deb, so this one is probably useless (but harmless)\n",
        "Line" : 1620,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# These two will set the .deb install path correctly\n",
        "Line" : 1622,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# Add a symlink to the CLI: /usr/local/bin/openstudio should point to /usr/local/openstudio-${OpenStudio_VERSION}/bin/openstudio\n\n# Add an arbitrary link (broken) at build/openstudio (if build/ is your build folder) that already points to the **future** /usr/local/openstudio-x.y.z/bin/openstudio\n",
        "Line" : 1625,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# Plus a versioned one\n",
        "Line" : 1628,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# Have this link be installed with the .deb package in /usr/local/bin\n",
        "Line" : 1630,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# Same for OpenStudioApp\n",
        "Line" : 1634,
        "CharPositionInLine" : 2
      },
      "174" : {
        "Text" : "# Have this link be installed with the .deb package in /usr/local/bin\n",
        "Line" : 1638,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "# Create a proper App with file associations\n",
        "Line" : 1643,
        "CharPositionInLine" : 2
      },
      "176" : {
        "Text" : "# Install the .desktop manifest (allows the App to be seen in the Dash and adding to the dock, and to map it a mimetype)\n",
        "Line" : 1645,
        "CharPositionInLine" : 2
      },
      "177" : {
        "Text" : "# Install the XML mime info\n",
        "Line" : 1647,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# Copy the icons\n\n# Cf. http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html#directory_layout\n",
        "Line" : 1650,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# Copy OS App icons\n",
        "Line" : 1653,
        "CharPositionInLine" : 4
      },
      "180" : {
        "Text" : "# Install OSM mimetypes icons\n",
        "Line" : 1659,
        "CharPositionInLine" : 4
      },
      "181" : {
        "Text" : "# OS App has a 512 and 1024 too\n",
        "Line" : 1667,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# Copy OS App icons\n",
        "Line" : 1669,
        "CharPositionInLine" : 4
      },
      "183" : {
        "Text" : "## try to set up the menu system\n\n#find_program(XDG-MIME_EXECUTABLE xdg-mime)\n\n#find_program(XDG-DESKTOP-MENU_EXECUTABLE xdg-desktop-menu)\n\n#find_program(UPDATE-MIME-DATABASE-EXECUTABLE update-mime-database)\n\n#find_program(GTK-UPDATE-ICON-CACHE-EXECUTABLE gtk-update-icon-cache)\n",
        "Line" : 1677,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "## Install the Desktop Menu\n\n## xdg-desktop-menu install --novendor /usr/share/applications/openstudioapp.desktop\n\n#INSTALL(CODE \"execute_process(COMMAND ${XDG-DESKTOP-MENU_EXECUTABLE} install --novendor --mode system /usr/share/applications/openstudioapp.desktop)\")\n",
        "Line" : 1684,
        "CharPositionInLine" : 2
      },
      "185" : {
        "Text" : "## Register the mime description: this places it in /usr/share/mime/packages/\n\n## sudo xdg-mime install --novendor --mode system x-openstudio.xml\n\n#INSTALL(CODE \"execute_process(COMMAND ${MIME_EXECUTABLE} install --novendor --mode system /usr/share/mime/application/x-openstudio.xml)\")\n\n#INSTALL(CODE \"execute_process(COMMAND echo COUCOU)\")\n",
        "Line" : 1688,
        "CharPositionInLine" : 2
      },
      "186" : {
        "Text" : "## Register the application launcher with the registered mimetype\n\n## sudo xdg-mime default openstudio.desktop application/x-openstudio\n\n#INSTALL(CODE \"execute_process(COMMAND ${MIME_EXECUTABLE} default /usr/share/applications/openstudio.desktop application/x-openstudio)\")\n",
        "Line" : 1693,
        "CharPositionInLine" : 2
      },
      "187" : {
        "Text" : "## Update the mime cache and icon cache\n\n## sudo update-mime-database /usr/share/mime\n\n#INSTALL(CODE \"execute_process(COMMAND ${UPDATE-MIME-DATABASE-EXECUTABLE} /usr/share/mime)\")\n\n## sudo gtk-update-icon-cache /usr/share/icons/hicolor/ -f\n\n#INSTALL(CODE \"execute_process(COMMAND ${GTK-UPDATE-ICON-CACHE-EXECUTABLE} /usr/share/icons/hicolor/ -f)\")\n",
        "Line" : 1698,
        "CharPositionInLine" : 2
      },
      "188" : {
        "Text" : "#install(PROGRAMS \"${ENERGYPLUS_PATH}/libgfortran.3.dylib\" DESTINATION ./EnergyPlus/)\n\n#install(PROGRAMS \"${ENERGYPLUS_PATH}/libquadmath.0.dylib\" DESTINATION ./EnergyPlus/)\n",
        "Line" : 1748,
        "CharPositionInLine" : 2
      },
      "189" : {
        "Text" : "#install(PROGRAMS \"${ENERGYPLUS_PATH}/libgfortran.3.dylib\" DESTINATION ./EnergyPlus/)\n\n#install(PROGRAMS \"${ENERGYPLUS_PATH}/libquadmath.0.dylib\" DESTINATION ./EnergyPlus/)\n",
        "Line" : 1751,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 190
    },
    "openstudiocore/CTestConfig.cmake" : {
      "ObjectId" : "187a0911b2ef54c3f75cb72656f16df30bded224",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to use Dart and CDash\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CTEST_USE_LAUNCHERS 1) # Wraps all build and test processes so that more detailed reports can be pushed to CDash\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# no memory check suppressions\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# custom src excludes and exclude generated code and unit tests\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "openstudiocore/ProjectMacros.cmake" : {
      "ObjectId" : "5962f9bbc1fd60f75d907cbf0d8eb85f81826ffb",
      "LastModified" : "2018-12-17T16:14:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"LOOKING FOR ${NAMES} in default locations\")\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#message(\"LOOKING FOR ${NAMES} in ${P}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#message(\"Cannot find ${NAMES}, using ${FIRST_NAME}\")\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(\"LOOKING FOR ${NAMES_D} in default locations\")\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(\"LOOKING FOR ${NAMES_D} in ${P}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(\"Cannot find ${NAMES_D} or ${NAMES}, using ${FIRST_NAME}\")\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add google tests macro\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create source groups automatically based on file path\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create test targets\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# don't link base name\n",
        "Line" : 107,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# also link base name\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# don't link base name\n",
        "Line" : 114,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "## suppress deprecated warnings in unit tests\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# add a swig target\n\n# KEY_I_FILE should include path, see src/utilities/CMakeLists.txt.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##\n\n## Begin collection of requirements to reduce SWIG regenerations\n\n## and fix parallel build issues\n\n##\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Get all of the source files for the parent target this SWIG library is wrapping\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Get the extension of the source file\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# If it's a header file (\"*.h*\") add it to the list of headers\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Now, append all of the .i* files provided to the macro to the\n\n# list of required headers.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# RequiredHeaders now represents all of the headers and .i files that all\n\n# of the SWIG targets generated by this macro call rely on.\n\n# And GeneratedHeaders contains all .ixx and .hxx files needed to make\n\n# these SWIG targets\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Now we loop through all of the parent swig targets and collect the requirements from them\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#message(STATUS \"${target_files}\")\n\n# This is the real data collection\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Reduce the size of the RequiredHeaders list\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Here we now have:\n\n#  RequiredHeaders: flat list of all of the headers from the library we are currently wrapping and\n\n#                   all of the libraries that it depends on\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Export the required headers variable up to the next level so that further SWIG targets can look it up\n\n#set(exportname \"${NAME}RequiredHeaders\")\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Oh, and also export it to this level, for peers, like the Utilities breakouts and the Model breakouts\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Add a command to generate the generated headers discovered at this point.\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# And a target that calls the above command\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Now we say that our PARENT_TARGET depends on this new GeneratedHeaders\n\n# target. This is where the magic happens. By making both the parent\n\n# and this *_swig.cxx files below rely on this new target we force all\n\n# of the generated files to be generated before either the\n\n# PARENT_TARGET is built or the cxx files are generated. This solves the problems with\n\n# parallel builds trying to generate the same file multiple times while still\n\n# allowing files to compile in parallel\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "##\n\n## Finish requirements gathering\n\n##\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Ruby bindings\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# check if this is the OpenStudioUtilities project\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# wrapper file output\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# ruby dlls should be all lowercase\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# utilities goes into OpenStudio:: directly, everything else is nested\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#message(STATUS \"${${NAME}_SWIG_Depends}\")\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#set(RUBY_AUTODOC \"\")\n\n#if(BUILD_DOCUMENTATION)\n\n#  set(RUBY_AUTODOC -features autodoc=1)\n\n#endif()\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# run rdoc\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Add this documentation target to the list of all targets\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#set_target_properties(${swig_target} PROPERTIES PREFIX \"\")\n\n#set_target_properties(${swig_target} PROPERTIES OUTPUT_NAME \"${LOWER_NAME}\")\n\n#if(APPLE)\n\n#  set_target_properties(${swig_target} PROPERTIES SUFFIX \".bundle\" )\n\n#  #set_target_properties(${swig_target} PROPERTIES LINK_FLAGS \"-undefined dynamic_lookup\")\n\n#  #set_target_properties(${swig_target} PROPERTIES LINK_FLAGS \"-undefined suppress -flat_namespace\")\n\n#endif()\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#set_target_properties(${swig_target} PROPERTIES COMPILE_FLAGS \"-DRUBY_EXTCONF_H=<osruby_config.h> -DRUBY_EMBEDDED /bigobj /wd4996\") ## /wd4996 suppresses deprecated warning\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "## /wd4996 suppresses deprecated warning\n",
        "Line" : 379,
        "CharPositionInLine" : 85
      },
      "42" : {
        "Text" : "# If 'AppleClang' or 'Clang'\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Prevent excessive warnings from generated swig files, suppress deprecated declarations\n",
        "Line" : 383,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "#if(CMAKE_COMPILER_IS_GNUCXX)\n\n#  if(GCC_VERSION VERSION_GREATER 4.6 OR GCC_VERSION VERSION_EQUAL 4.6)\n\n#    set_source_files_properties(${SWIG_WRAPPER} PROPERTIES COMPILE_FLAGS \"-Wno-uninitialized -Wno-unused-but-set-variable\")\n\n#  else()\n\n#    set_source_files_properties(${SWIG_WRAPPER} PROPERTIES COMPILE_FLAGS \"-Wno-uninitialized\")\n\n#  endif()\n\n#endif()\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#if(RUBY_VERSION_MAJOR EQUAL \"2\" AND MSVC)\n\n#  # Ruby 2 requires modules to have a .so extension, even on windows\n\n#  set_target_properties(${swig_target} PROPERTIES SUFFIX \".so\")\n\n#endif()\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "####Remove binding install related stuff. At least for now. Might need some of this to support sketchup\n\n####if(APPLE)\n\n####  set(_NAME \"${LOWER_NAME}.bundle\")\n\n####  # the following script will change the bindings to prefer the version of libruby included with SketchUp to the system library, preventing loading two different copies of libruby\n\n####  add_custom_command(TARGET ${swig_target} POST_BUILD COMMAND ${RUBY_EXECUTABLE} \"${CMAKE_SOURCE_DIR}/SketchUpInstallName.rb\" \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ruby/${_NAME}\")\n\n####elseif(RUBY_VERSION_MAJOR EQUAL \"2\" AND MSVC)\n\n####  set(_NAME \"${LOWER_NAME}.so\")\n\n####else()\n\n####  set(_NAME \"${LOWER_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}\")\n\n####endif()\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "####if(WIN32 OR APPLE)\n\n####  install(TARGETS ${swig_target} DESTINATION Ruby/openstudio/)\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "####  install(CODE \"\n\n####    #message(\\\"INSTALLING SWIG_TARGET: ${swig_target}  with NAME = ${_NAME}\\\")\n\n####    include(GetPrerequisites)\n\n####    get_prerequisites(\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/${_NAME} PREREQUISITES 1 1 \\\"\\\" \\\"${Prereq_Dirs}\\\")\n\n####    #message(\\\"PREREQUISITES = \\${PREREQUISITES}\\\")\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "####    if(WIN32)\n\n####      list(REVERSE PREREQUISITES)\n\n####    endif()\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "####    foreach(PREREQ IN LISTS PREREQUISITES)\n\n####\n\n####      if(APPLE AND PREREQ MATCHES \\\".*libruby.*\\\")\n\n####        # skip updating references to libruby, we do not install this with the bindings\n\n####      else()\n\n####        gp_resolve_item(\\\"\\\" \\${PREREQ} \\\"\\\" \\\"${Prereq_Dirs}\\\" resolved_item_var)\n\n####        execute_process(COMMAND \\\"${CMAKE_COMMAND}\\\" -E copy \\\"\\${resolved_item_var}\\\" \\\"\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/\\\")\n\n####\n\n####        get_filename_component(PREREQNAME \\${resolved_item_var} NAME)\n\n####\n\n####        if(APPLE)\n\n####          execute_process(COMMAND \\\"install_name_tool\\\" -change \\\"\\${PREREQ}\\\" \\\"@loader_path/\\${PREREQNAME}\\\" \\\"\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/${_NAME}\\\")\n\n####          foreach(PR IN LISTS PREREQUISITES)\n\n####            gp_resolve_item(\\\"\\\" \\${PR} \\\"\\\" \\\"\\\" PRPATH)\n\n####            get_filename_component( PRNAME \\${PRPATH} NAME)\n\n####            execute_process(COMMAND \\\"install_name_tool\\\" -change \\\"\\${PR}\\\" \\\"@loader_path/\\${PRNAME}\\\" \\\"\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/\\${PREREQNAME}\\\")\n\n####          endforeach()\n\n####        else()\n\n####          if(EXISTS \\\"\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/thirdparty.rb\\\")\n\n####            file(READ \\\"\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/thirdparty.rb\\\" TEXT)\n\n####          else()\n\n####            set(TEXT \\\"\\\")\n\n####          endif()\n\n####          string(REGEX MATCH \\${PREREQNAME} MATCHVAR \\\"\\${TEXT}\\\")\n\n####          if(NOT (\\\"\\${MATCHVAR}\\\" STREQUAL \\\"\\${PREREQNAME}\\\"))\n\n####            file(APPEND \\\"\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/thirdparty.rb\\\" \\\"DL::dlopen \\\\\\\"\\\\\\#{File.dirname(__FILE__)}/\\${PREREQNAME}\\\\\\\"\\n\\\")\n\n####          endif()\n\n####      endif()\n\n####      endif()\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "####    endforeach()\n\n####  \")\n\n####else()\n\n####  install(TARGETS ${swig_target} DESTINATION \"${RUBY_MODULE_ARCH_DIR}\")\n\n####endif()\n\n####if(UNIX)\n\n####  # do not write file on unix, existence of file is checked before it is loaded\n\n####  #install(CODE \"\n\n####  #  file(WRITE \\\"\\${CMAKE_INSTALL_PREFIX}/Ruby/openstudio/thirdparty.rb\\\" \\\"# Nothing to see here\\\")\n\n####  #\")\n\n####endif()\n",
        "Line" : 467,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# add this target to a \"global\" variable so ruby tests can require these\n",
        "Line" : 481,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Doesn't look like this is used\n\n# add this target to a \"global\" variable so ruby tests can require these\n\n#list(APPEND ALL_RDOCIFY_FILES \"${SWIG_WRAPPER}\")\n\n#set(ALL_RDOCIFY_FILES \"${ALL_RDOCIFY_FILES}\" PARENT_SCOPE)\n",
        "Line" : 485,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# add this target to a \"global\" variable so ruby tests can require these\n",
        "Line" : 490,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# add this target to a \"global\" variable so ruby tests can require these\n",
        "Line" : 494,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Python bindings\n",
        "Line" : 498,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# utilities goes into OpenStudio. directly, everything else is nested\n\n# DLM: SWIG generates a file ${MODULE}.py for each module, however we have several libraries in the same module\n\n# so these clobber each other.  Making these unique, e.g. MODULE = TOLOWER \"${NAME}\", generates unique .py wrappers\n\n# but the module names are unknown and the bindings fail to load.  I think we need to write our own custom OpenStudio.py\n\n# wrapper that imports all of the libraries/python wrappers into the appropriate modules.\n\n# http://docs.python.org/2/tutorial/modules.html\n\n# http://docs.python.org/2/library/imp.html\n",
        "Line" : 502,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Add the -py3 flag if the version used is Python 3\n",
        "Line" : 526,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "#add_custom_target(${SWIG_TARGET}\n\n#  DEPENDS ${SWIG_WRAPPER_FULL_PATH}\n\n#)\n",
        "Line" : 554,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "## /wd4996 suppresses deprecated warning, /wd4005 suppresses macro redefinition warning\n",
        "Line" : 573,
        "CharPositionInLine" : 95
      },
      "61" : {
        "Text" : "# add this target to a \"global\" variable so python tests can require these\n",
        "Line" : 587,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# csharp\n",
        "Line" : 601,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# keep the following lists aligned with translator_wrappers in \\openstudiocore\\csharp\\CMakeLists.txt\n",
        "Line" : 605,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "#add_library(\n\n#  ${swig_target}\n\n#  STATIC\n\n#  ${SWIG_WRAPPER}\n\n#)\n",
        "Line" : 687,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "#set_target_properties(${swig_target} PROPERTIES OUTPUT_NAME \"${CSHARP_OUTPUT_NAME}\")\n\n#set_target_properties(${swig_target} PROPERTIES PREFIX \"\")\n\n#set_target_properties(${swig_target} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY \"${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/csharp/\")\n\n#set_target_properties(${swig_target} PROPERTIES LIBRARY_OUTPUT_DIRECTORY \"${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/csharp/\")\n\n#set_target_properties(${swig_target} PROPERTIES RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/csharp/\")\n\n#if(MSVC)\n\n#  set_target_properties(${swig_target} PROPERTIES COMPILE_FLAGS \"/bigobj /wd4996\")  ## /wd4996 suppresses deprecated warnings\n\n#endif()\n\n#target_link_libraries(${swig_target} ${PARENT_TARGET} ${DEPENDS})\n",
        "Line" : 693,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "#ADD_DEPENDENCIES(\"${swig_target}\" \"${PARENT_TARGET}_resources\")\n",
        "Line" : 703,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# add this target to a \"global\" variable so csharp tests can require these\n",
        "Line" : 706,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "#if(WIN32)\n\n#  install(TARGETS ${swig_target} DESTINATION CSharp/openstudio/)\n\n#\n\n#  install(CODE \"\n\n#    include(GetPrerequisites)\n\n#    get_prerequisites(\\${CMAKE_INSTALL_PREFIX}/CSharp/openstudio/openstudio_${NAME}_csharp.dll PREREQUISITES 1 1 \\\"\\\" \\\"${Prereq_Dirs}\\\")\n\n#\n\n#    if(WIN32)\n\n#      list(REVERSE PREREQUISITES)\n\n#    endif()\n\n#\n\n#    foreach(PREREQ IN LISTS PREREQUISITES)\n\n#      gp_resolve_item(\\\"\\\" \\${PREREQ} \\\"\\\" \\\"${Prereq_Dirs}\\\" resolved_item_var)\n\n#      execute_process(COMMAND \\\"${CMAKE_COMMAND}\\\" -E copy \\\"\\${resolved_item_var}\\\" \\\"\\${CMAKE_INSTALL_PREFIX}/CSharp/openstudio/\\\")\n\n#\n\n#      get_filename_component(PREREQNAME \\${resolved_item_var} NAME)\n\n#    endforeach()\n\n#  \")\n\n#endif()\n",
        "Line" : 716,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# java\n",
        "Line" : 737,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "#set( NAMESPACE \"OpenStudio.${NAME}\")\n",
        "Line" : 748,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "#-features autodoc=1\n",
        "Line" : 767,
        "CharPositionInLine" : 14
      },
      "72" : {
        "Text" : "#-dllimport \"${JAVA_OUTPUT_NAME}\"\n",
        "Line" : 771,
        "CharPositionInLine" : 14
      },
      "73" : {
        "Text" : "#set_target_properties(${swig_target} PROPERTIES PREFIX \"\")\n",
        "Line" : 794,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "## /wd4996 suppresses deprecated warnings\n",
        "Line" : 799,
        "CharPositionInLine" : 87
      },
      "75" : {
        "Text" : "#add_dependencies(\"${swig_target}\" \"${PARENT_TARGET}_resources\")\n",
        "Line" : 811,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# add this target to a \"global\" variable so java tests can require these\n",
        "Line" : 813,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# v8\n",
        "Line" : 854,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "#set(NAMESPACE \"OpenStudio.${NAME}\")\n",
        "Line" : 862,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "#set(CSHARP_GENERATED_SRC_DIR \"${CMAKE_BINARY_DIR}/csharp_wrapper/generated_sources/${NAME}\")\n\n#file(MAKE_DIRECTORY ${CSHARP_GENERATED_SRC_DIR})\n",
        "Line" : 871,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "#-namespace ${NAMESPACE}\n\n#-features autodoc=1\n\n#-outdir \"${CSHARP_GENERATED_SRC_DIR}\"\n",
        "Line" : 886,
        "CharPositionInLine" : 14
      },
      "81" : {
        "Text" : "## /wd4996 suppresses deprecated warnings\n",
        "Line" : 928,
        "CharPositionInLine" : 114
      },
      "82" : {
        "Text" : "#add_dependencies(\"${swig_target}\" \"${PARENT_TARGET}_resources\")\n",
        "Line" : 938,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# add this target to a \"global\" variable so v8 tests can require these\n",
        "Line" : 940,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# add target dependencies\n\n# this will add targets to a \"global\" variable marking\n\n# them to have their dependencies installed later.\n",
        "Line" : 994,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# run energyplus\n\n# appends output (eplusout.err) to list ENERGYPLUS_OUTPUTS\n",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# run energyplus\n\n# appends output (eplusout.err) to list ENERGYPLUS_OUTPUTS\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# adds custom command to update a resource\n",
        "Line" : 1034,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# adds custom command to update a resource via configure\n",
        "Line" : 1045,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Would like to wrap this up in a custom command, but no luck thus far.\n\n# ADD_CUSTOM_COMMAND(\n\n#  OUTPUT \"${SRC}\"\n\n#  DEPENDS \"${CMAKE_CURRENT_SOURCE_DIR}/${SRC}\"\n\n#  COMMAND ${CMAKE_COMMAND}\n\n#  ARGS -Dfile_name=${SRC} -Dinclude_name=${include_name} -E\n",
        "Line" : 1048,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "#)\n",
        "Line" : 1057,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# This function is nearly identical to QT5_WRAP_CPP (from Qt5CoreMacros.cmake), except that it removes Boost\n\n# from the include directories and outputs .cxx files\n",
        "Line" : 1062,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# qt5_wrap_cpp_minimally(outfiles inputfile ...)\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Remove Boost and possibly other include directories\n",
        "Line" : 1067,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# Restore include directories\n",
        "Line" : 1118,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# adds custom command to update a resource via configure\n",
        "Line" : 1122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 96
    },
    "openstudiocore/csharp/CMakeLists.txt" : {
      "ObjectId" : "609858ec8ef421c2cbbe04d7f5f67c931afbed9e",
      "LastModified" : "2018-05-23T02:16:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#only building C# bindings with Visual Studio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(ALL_CSHARP_WRAPPER_FILES\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesCore_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesIdd_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesIdf_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesBCL_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesData_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesGeometry_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesSql_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesTime_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesUnits_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilitiesFileTypes_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/utilities/csharp_OpenStudioUtilities_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModelCore_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModelSimulation_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModelResources_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModelGeometry_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModelHVAC_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModelRefrigeration_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModelGenerators_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/model/csharp_OpenStudioModel_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/energyplus/csharp_OpenStudioEnergyPlus_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/gbxml/csharp_OpenStudioGBXML_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/airflow/csharp_OpenStudioAirflow_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/osversion/csharp_OpenStudioOSVersion_wrap.cxx\n\n#\tC:/OpenStudio/build-32/src/sdd/csharp_OpenStudioSDD_wrap.cxx\n\n#)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#This is generating odd errors about needing to convert the included project file, but it seems like it would be a good\n\n#way to move forward, if it worked. Leaving here as a note.\n\n#include_external_msproject(OpenStudio \"${CMAKE_SOURCE_DIR}/csharp/developer/OpenStudio/OpenStudio.csproj\" ${CSHARP_LIBRARIES})\n\n#in lieu of the above, we are using the following:\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# the main OpenStudio dll\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# custom command to make OPENSTUDIO_CSHARP_DLL\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# DLM: currently there are some multiply defined symbols, force them for now, investigate later\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ignore deprecated warnings since we will export deprecated methods\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# keep the following lists aligned with translator_names in \\openstudiocore\\ProjectMacros.cmake\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#message(\"model_wrapper_files = ${model_wrapper_files}\")\n\n#message(\"translator_wrapper_files = ${translator_wrapper_files}\")\n\n#message(\"core_wrapper_files = ${core_wrapper_files}\")\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# build dlls to link all the static C# bindings with\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# convenience target to build the SDK\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "openstudiocore/embedded/CMakeLists.txt" : {
      "ObjectId" : "b01768c3721c76a63add5f0ba766badceea7b8a6",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/embedded/EmbedFiles.cmake" : {
      "ObjectId" : "b81db70afd419416ff0cc3f8bed3edef3805de71",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FILES is a list of file paths to embed\n\n# EMBEDDED_LOCATIONS is a indexed matched list of paths for each embedded file\n\n# CXX_OUTPUT_FILES is a variable that will be set to a list of cxx files to compile executable or library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# EMBED_SOURCE_FILE is the fully qualified path to a cxx file with the embedded data\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Fixup the name. We want to make sure it starts with :/\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# don't do anything, already in embedded form\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# file names\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# lengths\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# datas\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "openstudiocore/java/CMakeLists.txt" : {
      "ObjectId" : "e64f119d1a1cb158584d8f0f935c67dc96a1304c",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the main OpenStudio jar file\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# custom command to make OPENSTUDIO_JAVA_JAR\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# convenience target to just build the SDK\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Hand run commands we are replicating here\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  jason@ubuntu12:~/OpenStudio-main/openstudiocore/java$ /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/javac TestOpenStudio.java -classpath ~/openstudio-main-build/OSCore-prefix/src/OSCore-build/Products/java/OpenStudio.jar\n\n#  jason@ubuntu12:~/OpenStudio-main/openstudiocore/java$ LD_LIBRARY_PATH=~/openstudio-main-build/OSCore-prefix/src/OSCore-build/Products/java /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/java -classpath ~/openstudio-main-build/OSCore-prefix/src/OSCore-build/Products/java/OpenStudio.jar:.  TestOpenStudio\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "openstudiocore/pat/BuildPat.cmake" : {
      "ObjectId" : "0a808aa715ac9a637eff1420731686378984ba8c",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/pat/CMakeLists.txt" : {
      "ObjectId" : "c6235b97fc0eed18952b96b400c5f4c279c4c051",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO figure out what the package structure is like on windows and install that\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/pat/DownloadPat.cmake" : {
      "ObjectId" : "dff7145a9526b1fa9eb7df2b460ab2c9dc16b5d9",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clean out old stuff\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Make github public and use a direct github url please\n\n#file(DOWNLOAD \"https://github.com/NREL/OpenStudio-PAT/archive/${PAT_SHA}.zip\"\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "openstudiocore/python/CMakeLists.txt" : {
      "ObjectId" : "9fd0e5312a181a70179af4a4eabd4a1cd27b7314",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DLM: currently there are some multiply defined symbols, force them for now, investigate later\n\n#set(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} /FORCE:MULTIPLE\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ignore deprecated warnings since we will export deprecated methods\n\n#add_definitions(/wd4996)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ignore macro redefinition\n\n#add_definitions(/wd4005)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## build a single python dll\n\n#add_library(\n\n#  openstudio_python\n\n#  MODULE\n\n#  ${ALL_PYTHON_WRAPPER_FILES}\n\n#)\n\n#add_dependencies(openstudio_python ${ALL_PYTHON_WRAPPER_TARGETS})\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set_source_files_properties(${ALL_PYTHON_WRAPPER_FILES} PROPERTIES GENERATED TRUE)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#target_link_libraries(openstudio_python\n\n# ${ALL_PYTHON_BINDING_DEPENDS}\n\n# ${Boost_LIBRARIES}\n\n# ${PYTHON_LIBRARY}\n\n#)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#install(TARGETS openstudio_python DESTINATION Python CONFIGURATIONS COMPONENT \"Python\")\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# convenience target to build the SDK\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "openstudiocore/resources/CMakeLists.txt" : {
      "ObjectId" : "9710e41499306fbd1bf7dfb16a19238832433ed0",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure a header file to point to the resources directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure a lst file for use in transitioning between EnergyPlus versions\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################\n\n# utilities resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# update the resources\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add target\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########################################################\n\n# model resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# update the resources\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add target\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# modeleditor resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# update the resources\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# add target\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################\n\n# openstudio resources\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# update the resources\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# add target\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################\n\n# openstudio_lib resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# update the resources\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# add target\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################\n\n# measure resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# update the resources\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add target\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "########################################################\n\n# energyplus resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# not run\n",
        "Line" : 213,
        "CharPositionInLine" : 37
      },
      "22" : {
        "Text" : "# update the resources\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# add runs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# add target\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "########################################################\n\n# radiance resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# update the resources\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# add target\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "########################################################\n\n# resultsviewer resources\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# update the resources\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# add runs\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# add target\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "########################################################\n\n# gbxml resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# update the resources\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# add target\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "########################################################\n\n# sdd resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# update the resources\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# add target\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "########################################################\n\n# isomodel resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# update the resources\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# add target\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "########################################################\n\n# bimserver resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# update the resources\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# add target\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "########################################################\n\n# CONTAM resources\n\n# clear runs, calls to RUN_ENERGYPLUS will populate this\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# update the resources\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# add target\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "openstudiocore/ruby/CMakeLists.txt" : {
      "ObjectId" : "7e94d34fb6acb8c410d4ab32459f119427d920b5",
      "LastModified" : "2019-04-04T01:46:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# using Clang\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# using GCC\n\n#set(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} --unresolved-symbols=ignore-all\")\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#add_definitions(-DQT_NO_VERSION_TAGGING)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# common library for openstudio.so and openstudio.exe\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##ruby_OpenStudioModelEditor # linked by openstudio.so only, for SketchUp plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#openstudio_utilities\n\n#${Boost_LIBRARIES}\n\n#${QT_STATIC_LIBS}\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# openstudio ruby bindings to load into normal ruby\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# change output directory so the openstudio.pdb file does not conflict between this target and the CLI\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DLM: dependencies of Qt Static plugins do not seem to be linked in to openstudio.so on Unix. Force these to link fully.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "openstudiocore/sketchup_plugin/CMakeLists.txt" : {
      "ObjectId" : "9faecbc430453d3a09b3d9c81d341e8d8a38cd4c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sketchup plugin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/airflow/CMakeLists.txt" : {
      "ObjectId" : "ca0c9f19e17574e0f6d7fb30cff3499c90bbc7be",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# resource files\n\n# DLM: TODO, replace with embed_files\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate rules for building source files from the resources\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Someone should make sure these are all really needed\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# No need to install static library\n\n#if(NOT APPLE)\n\n#install(TARGETS ${target_name}\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib\n\n#)\n\n#endif()\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "openstudiocore/src/bimserver/CMakeLists.txt" : {
      "ObjectId" : "0716b5d2c1b7861d279f34b9fdb7995d9567a91f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(NOT APPLE)\n\n#install(TARGETS ${target_name}\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib\n\n#)\n\n#endif()\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MAKE_SWIG_TARGET(OpenStudioGBXML gbXML \"${CMAKE_CURRENT_SOURCE_DIR}/gbXML.i\" \"${${target_name}_swig_src}\" ${target_name} OpenStudioEnergyPlus)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/cli/CMakeLists.txt" : {
      "ObjectId" : "787ac4952f03dc1abd38a9c3b35a51da110ade80",
      "LastModified" : "2019-03-21T02:26:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DLM: this is temporary, these files should live somewhere else and be included in the shared Ruby lib\n",
        "Line" : 65,
        "CharPositionInLine" : 93
      },
      "1" : {
        "Text" : "# DLM: this is temporary, these files should live somewhere else and be included in the shared Ruby lib\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#list(APPEND FILES \"${CMAKE_CURRENT_SOURCE_DIR}/scope_test.rb\")\n\n#list(APPEND EMBEDDED_PATHS \"scope_test.rb\")\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#list(APPEND FILES \"${CMAKE_CURRENT_SOURCE_DIR}/openstudio.rb\")\n\n#list(APPEND EMBEDDED_PATHS \"openstudio.rb\")\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find all tests\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add a test for each unit test\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "openstudiocore/src/energyplus/CMakeLists.txt" : {
      "ObjectId" : "b279f2cf8f35e697c1eacf5505e44584213f7710",
      "LastModified" : "2019-03-21T20:50:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test/AvailabilityManagerAssignmentList_GTest.cpp\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "### resource files\n\n#set(${target_name}_qrc\n\n#  EnergyPlus.qrc\n\n#)\n\n#\n\n## generate rules for building source files from the resources\n\n##qt5_add_resources(${target_name}_qrcs ${${target_name}_qrc})\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# No need to install static lib\n\n#if(NOT APPLE)\n\n#  install(TARGETS ${target_name}\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CREATE_SRC_GROUPS(\"${${target_name}_test_src}\")\n\n#CREATE_SRC_GROUPS(\"${${target_name}_swig_src}\")\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "openstudiocore/src/gbxml/CMakeLists.txt" : {
      "ObjectId" : "1da8dc50b0e0f2d7415e9ce12b5df962b8606777",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#zkexpat\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#No need to install static library\n\n#if(NOT APPLE)\n\n#install(TARGETS ${target_name}\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib\n\n#)\n\n#endif()\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_executable(gbXMLToIdf gbXMLToIdf.cpp)\n\n#AddPCH(gbXMLToIdf)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#target_link_libraries(gbXMLToIdf\n\n#  ${${target_name}_depends}\n\n#  openstudio_gbxml\n\n#  ${QT_LIBS}  \t\n\n#)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install(TARGETS gbXMLToIdf\n\n#  BUNDLE DESTINATION .\n\n#  RUNTIME DESTINATION bin\n\n#)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "openstudiocore/src/generateiddfactory/CMakeLists.txt" : {
      "ObjectId" : "58bfc6b555d4b443c500bf1075a527cada2954bf",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# source files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate the IddFactory files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/geographic_lib/CMakeLists.txt" : {
      "ObjectId" : "0dde2f21503e4061e637eabeb63480f4fe3491a8",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version information\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# majic (version 0.1.9 and later) invokes cmake defining, e.g.,\n\n#   -D CPACK_PACKAGE_VERSION=1.37-001-SNAPSHOT\n\n#   -D CPACK_PACKAGE_VERSION_COUNT=2\n\n#   -D CPACK_PACKAGE_VERSION_MAJOR=1\n\n#   -D CPACK_PACKAGE_VERSION_MINOR=36\n\n#   -D CPACK_PACKAGE_VERSION_SUFFIX=-001-SNAPSHOT\n\n# Check that the version numbers are consistent.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The library version tracks the numbering given by libtool in the\n\n# autoconf set up.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This version was released 2011-02-16\n",
        "Line" : 50,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : "# User-settable variables\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# (1) COMMON_INSTALL_PATH governs the installation convention.  If it\n\n# is on ON (the Linux default), the installation is to a common\n\n# directory, e.g., /usr/local.  If it is OFF (the Windows default),\n\n# the installation directory contains the package name, e.g.,\n\n# c:/pkg/GeographicLib-1.22.  The installation directories for the\n\n# documentation, cmake configuration, python and matlab interfaces all\n\n# depend on the variable with deeper paths relative to\n\n# CMAKE_INSTALL_PREFIX being used when it's ON.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The use of PACKAGE_PATH and INSTALL_PATH is now DEPRECATED.\n\n# (2) PACKAGE_PATH and INSTALL_PATH govern the find_package search\n\n# path and the installation directory.  (find_package is not used by\n\n# GeographicLib since it doesn't depend on other packages.  However\n\n# PACKAGE_PATH is used here for uniformity with other packages which\n\n# adopt the same conventions.)\n\n#\n\n# If PACKAGE_PATH is defined, it is prepended to CMAKE_PREFIX_PATH.\n\n#\n\n# If INSTALL_PATH is not specified but PACKAGE_PATH is, then\n\n# INSTALL_PATH is set to\n\n#   ${PACKAGE_PATH}, if COMMON_INSTALL_PATH is ON;\n\n#   ${PACKAGE_PATH}/${PROJECT_NAME}-${PROJECT_VERSION}, otherwise.\n\n#\n\n# If INSTALL_PATH is now defined, then set CMAKE_INSTALL_PREFIX to\n\n# INSTALL_PATH.\n\n#\n\n# Typically, only PACKAGE_PATH needs to be specified, e.g.,\n\n# cmake -D PACKAGE_PATH=/opt .. (on Linux)\n\n#   => CMAKE_PREFIX_PATH=/opt   CMAKE_INSTALL_PREFIX=/opt\n\n# cmake -D PACKAGE_PATH=C:/pkg .. (on Windows)\n\n#   => CMAKE_PREFIX_PATH=C:/pkg CMAKE_INSTALL_PREFIX=C:/pkg/GeographicLib-1.22\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# (3) Where to look for data files.  Various classes look in the geoids,\n\n# gravity, magnetic, subdirectories of ${GEOGRAPHICLIB_DATA}.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The binary installers for the data files for Windows are created\n\n# with Inno Setup which uses {commonappdata} which (since Windows\n\n# Vista) is C:/ProgramData.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# (4) Build which libraries?  Possible values are SHARED, STATIC, BOTH.\n\n#if (MSVC)\n\n#  set (GEOGRAPHICLIB_LIB_TYPE STATIC CACHE STRING\n\n#    \"Types of library generated: SHARED, STATIC (default), or BOTH\")\n\n#else ()\n\n#  set (GEOGRAPHICLIB_LIB_TYPE SHARED CACHE STRING\n\n#    \"Types of library generated: SHARED (default), STATIC, or BOTH\")\n\n#endif ()\n\n#set_property (CACHE GEOGRAPHICLIB_LIB_TYPE\n\n#  PROPERTY STRINGS \"SHARED\" \"STATIC\" \"BOTH\")\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# (5) Create the documentation?  This depends on whether doxygen can be\n\n# found.  If this is OFF, then links will be provided to the online\n\n# documentation on Sourceforge.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# (6) Build .NET wrapper library NETGeographicLib.  This only applies to\n\n# Windows.  Default is OFF, because, currently, most people don't use\n\n# this interface.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# (7) Set the default \"real\" precision.  This should probably be left\n\n# at 2 (double).\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# (8) When making a binary package, should we include the debug version\n\n# of the library?  This applies to MSVC only, because that's the\n\n# platform where debug and release compilations do not inter-operate.\n\n# It requires building as follows:\n\n#   cmake --build . --config Debug   --target ALL_BUILD\n\n#   cmake --build . --config Release --target ALL_BUILD\n\n#   cmake --build . --config Release --target PACKAGE\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For multi-config systems and for Visual Studio, the debug version of\n\n# the library is called Geographic_d.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set the run time path for shared libraries for non-Windows machines.\n\n# (1) include link path for external packages (not needed with\n\n# GeographicLib because there are no external packages).  This only\n\n# makes sense for native builds.\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# (2) include installed path for GeographicLib.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Use relative path so that package is relocatable\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Use absolute path with MacOSx\n",
        "Line" : 222,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# cmake 2.8.12 introduced a way to make the package relocatable.\n\n# See also INSTALL_RPATH property on the tools.\n",
        "Line" : 225,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Make the compiler more picky.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Turn on parallel builds for Visual Studio\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# check for C++11 support.  This flag is *not* propagated to clients\n\n# that use GeographicLib.  However, this is of no consequence.  When\n\n# the client code is being compiled (and the GeographicLib headers\n\n# being included), work-alike substitutions are used.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Not yet ready for C++14 (problem with MPFR C++)\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Check whether the C++11 math function: std::expm1, std::atanh,\n\n# etc. are available.  This flag is *not* propagated to clients that use\n\n# GeographicLib.  However, this is of no consequence.  When the client\n\n# code is being compiled (and the GeographicLib headers being included),\n\n# work-alike substitutions are used.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check whether the C++11 static_assert macro is available.  This flag\n\n# is *not* propagated to clients that use GeographicLib.  However, this\n\n# is of no consequence.  When the client code is being compiled (and the\n\n# GeographicLib headers being included), a work-alike substitution is\n\n# used.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Set the include directories.  Look in ${PROJECT_BINARY_DIR}/include\n\n# first because that's where Config.h will be\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This is the default\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# quad precision numbers appeared in Boost 1.54.\n",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Enable Q suffix for quad precision in g++ 4.8 and later\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Suppress the warnings that boost can spew out, e.g.,\n\n#   \"typedef 'boost_concept_check905' locally defined but not used\"\n",
        "Line" : 331,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# Install MPFR C++ version 3.6.2 or later from\n\n# http://www.holoborodko.com/pavel/mpfr and install mpreal.h in the\n\n# include directory.  NOTE: MPFR C++ is covered by the GPL; be sure\n\n# to abide by the terms of this license.\n\n#\n\n# For Linux, use system versions of mpfr and gmp.  For Apple, use\n\n# brew install mpfr.  Recent versions of mpfr (3.0 or later) work\n\n# fine.  For Windows, download MPFR-MPIR-x86-x64-MSVC2010.zip from\n\n# the MPFR C++ site and unpack in the top-level directory.  The\n\n# Windows build only works with GEOGRAPHICLIB_LIB_TYPE=STATIC.\n\n# NOTE: mpfr, gmp, and mpir are covered by the LGPL; be sure to\n\n# abide by the terms of this license.\n\n#\n\n# Need Visual Studio 12 2013 or later, g++ 4.5 or later; not sure\n\n# about clang.\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# These are C libraries so it's OK to use release versions for\n\n# debug builds.  Also these work for later versions of Visual\n\n# Studio (specifically version 12).\n",
        "Line" : 366,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Suppress the myriad of \"conditional expression is constant\"\n\n# warnings\n",
        "Line" : 372,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# g++ before 4.5 doesn't work (no explicit cast operator)\n",
        "Line" : 381,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# Create a Config.h to expose system information to the compiler\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# The documentation depends on doxygen.\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Version 1.8.7 or later needed for &hellip;\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# The man pages are written as pod files and converted to nroff format,\n\n# C++ code, and html.  Because this require tools that may not be\n\n# available on an end-user's system, the creation of the final\n\n# documentation is therefore only done in \"MAINTAINER\" mode.  The\n\n# maintainer runs \"make distrib-all\" which installs the transformed\n\n# documentation files into the source tree.  Skip Apple here because\n\n# man/makeusage.sh uses \"head --lines -4\" to drop the last 4 lines of a\n\n# file and there's no simple equivalent for MacOSX\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Set a default build type for single-configuration cmake generators\n\n# if no build type is set.\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Set output directories for Windows so that executables and dlls are\n\n# put in the same place\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# static libaries\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# shared libraries\n",
        "Line" : 450,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# executables and dlls\n",
        "Line" : 452,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# The list of tools (to be installed into, e.g., /usr/local/bin)\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# The list of scripts (to be installed into, e.g., /usr/local/sbin)\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# The list of subdirectories to process\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#add_subdirectory (tools)\n\n#add_subdirectory (man)\n\n#add_subdirectory (doc)\n\n#add_subdirectory (js)\n\n#add_subdirectory (matlab)\n\n#add_subdirectory (python/geographiclib)\n\n#add_subdirectory (examples)\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "## Packaging support; we deal with\n\n## (1) a source distribution: cmake make a tar.gz file and the zip file\n\n## is created from this.  Only the maintainer can do this, because of\n\n## the need to generate additional documentation files.\n\n## (2) a binary distribution: code is included for Linux, Apple, and\n\n## Windows, but only the Windows distribution has been exercised.\n\n#\n\n## Need to ensure that system dlls get included in a binary distribution\n\n#if (NOT DEFINED CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_NO_WARNINGS)\n\n#  # Visual Studio Express does include redistributable components so\n\n#  # squelch the warning.\n\n#  set (CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_NO_WARNINGS ON)\n\n#endif ()\n\n#set (CMAKE_INSTALL_DEBUG_LIBRARIES ON)\n\n#include (InstallRequiredSystemLibraries)\n\n#\n\n## The configuration of CPack is via variable that need to be set before\n\n## the include (CPack).\n\n#set (CPACK_PACKAGE_CONTACT charles@karney.com)\n\n#set (CPACK_PACKAGE_VENDOR \"GeographicLib\")\n\n#set (CPACK_PACKAGE_DESCRIPTION_SUMMARY\n\n#  \"GeographicLib library, utilities, and documentation\")\n\n## The list of files to be excluded from the source distribution.\n\n#set (CPACK_SOURCE_IGNORE_FILES\n\n#  \"#\"\n\n#  \"~\\$\"\n\n#  \"/\\\\\\\\.git\"\n\n#  \"${PROJECT_SOURCE_DIR}/BUILD\"\n\n#  \"${PROJECT_SOURCE_DIR}/(tests|testdata|cgi-bin|.*\\\\\\\\.cache)/\"\n\n#  \"${PROJECT_SOURCE_DIR}/(distrib|.*-distrib|.*-installer|geodesic-papers)/\"\n\n#  \"${PROJECT_SOURCE_DIR}/[^/]*\\\\\\\\.(html|kmz|pdf)\\$\"\n\n#  \"${PROJECT_SOURCE_DIR}/(autogen|biblio)\\\\\\\\.sh\\$\"\n\n#  \"${PROJECT_SOURCE_DIR}/(geodesic-biblio.txt|makefile-admin|[^/]*\\\\\\\\.png)\\$\"\n\n#  \"${PROJECT_SOURCE_DIR}/matlab/.*blurb.txt\\$\" )\n\n#set (CPACK_SOURCE_GENERATOR TGZ)\n\n#\n\n#set (CPACK_RESOURCE_FILE_LICENSE ${PROJECT_SOURCE_DIR}/LICENSE.txt)\n\n#set (CPACK_PACKAGE_INSTALL_DIRECTORY \"${PROJECT_NAME}-${PROJECT_VERSION}\")\n\n#set (CPACK_SOURCE_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_INSTALL_DIRECTORY}\")\n\n#\n\n#if (WIN32)\n\n#  # The Windows binary packager is NSIS.  Set the necessary variables\n\n#  # for this.\n\n#  set (CPACK_NSIS_CONTACT \"charles@karney.com\")\n\n#  set (CPACK_NSIS_URL_INFO_ABOUT \"http://geographiclib.sf.net\")\n\n#  set (CPACK_NSIS_HELP_LINK \"mailto:charles@karney.com\")\n\n#  if (CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#    # Hardcode the prefix for Visual Studio 11\n\n#    set (CPACK_NSIS_INSTALL_ROOT \"C:\\\\\\\\pkg-vc11-x64\")\n\n#    set (CPACK_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_INSTALL_DIRECTORY}-win64\")\n\n#    set (CPACK_NSIS_PACKAGE_NAME \"${PROJECT_NAME} x64 ${PROJECT_VERSION}\")\n\n#    set (CPACK_PACKAGE_INSTALL_REGISTRY_KEY\n\n#      \"${PROJECT_NAME}-x64-${PROJECT_VERSION}\")\n\n#  else ()\n\n#    # Hardcode the prefix for Visual Studio 11\n\n#    set (CPACK_NSIS_INSTALL_ROOT \"C:\\\\\\\\pkg-vc11\")\n\n#    set (CPACK_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_INSTALL_DIRECTORY}-win32\")\n\n#    set (CPACK_NSIS_PACKAGE_NAME \"${PROJECT_NAME} ${PROJECT_VERSION}\")\n\n#    set (CPACK_PACKAGE_INSTALL_REGISTRY_KEY\n\n#      \"${PROJECT_NAME}-${PROJECT_VERSION}\")\n\n#  endif ()\n\n#  set (CPACK_NSIS_DISPLAY_NAME ${CPACK_NSIS_PACKAGE_NAME})\n\n#  set (CPACK_NSIS_MENU_LINKS\n\n#    \"http://geographiclib.sf.net/${PROJECT_VERSION}/index.html\"\n\n#    \"Library documentation\"\n\n#    \"http://geographiclib.sf.net/${PROJECT_VERSION}/utilities.html\"\n\n#    \"Utilities documentation\"\n\n#    \"http://geographiclib.sf.net\" \"GeographicLib home page\"\n\n#    \"https://sf.net/projects/geographiclib/\" \"Main project page\")\n\n#  set (CPACK_NSIS_MODIFY_PATH ON)\n\n#elseif (APPLE)\n\n#  # Not tested\n\n#  set (CPACK_GENERATOR Bundle)\n\n#  set (CPACK_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_INSTALL_DIRECTORY}-darwin\")\n\n#else ()\n\n#  # Not tested\n\n#  set (CPACK_GENERATOR TGZ)\n\n#endif ()\n\n#\n\n#include (CPack)\n\n#\n\n## Another maintainer-specific target is building the source distribution\n\n## via the target dist.  This calls package_source to make a tar.gz file.\n\n## However this needs to be touched up to support the vanilla Makefiles\n\n## provided with GeographicLib.  This entails\n\n## (1) creating Makefile (which includes Makefile.mk);\n\n## (2) creating a bare-bones Config.h (with just the version information);\n\n## (3) making sure that make thinks the generated documentation files are\n\n## up-to-date.\n\n## Then a new tar.gz file and zip file are created.  To avoid potential\n\n## problems with directory permissions, tar and zip are told only to\n\n## archive the files.\n\n#if (MAINTAINER)\n\n#  add_custom_target (dist\n\n#    COMMAND ${CMAKE_MAKE_PROGRAM} package_source\n\n#    COMMAND\n\n#      cd _CPack_Packages/Linux-Source/TGZ/${CPACK_SOURCE_PACKAGE_FILE_NAME} &&\n\n#      echo include Makefile.mk > Makefile &&\n\n#      sed -e \"s/Unconfigured/${PROJECT_VERSION}/\"\n\n#      -e \"s/MAJOR .*/MAJOR ${CPACK_PACKAGE_VERSION_MAJOR}/\"\n\n#      -e \"s/MINOR .*/MINOR ${CPACK_PACKAGE_VERSION_MINOR}/\"\n\n#      -e \"s/PATCH .*/PATCH ${CPACK_PACKAGE_VERSION_PATCH}/\"\n\n#      include/GeographicLib/Config.h > include/GeographicLib/Config.h.new &&\n\n#      mv include/GeographicLib/Config.h.new include/GeographicLib/Config.h\n\n#    COMMAND\n\n#      cd _CPack_Packages/Linux-Source/TGZ/${CPACK_SOURCE_PACKAGE_FILE_NAME} &&\n\n#      touch man/[A-Za-z]*.usage man/[A-Za-z]*.1 man/[A-Za-z]*.1.html &&\n\n#      chmod -R g-w .\n\n#    COMMAND\n\n#      cd _CPack_Packages/Linux-Source/TGZ &&\n\n#      find ${CPACK_SOURCE_PACKAGE_FILE_NAME} -type f |\n\n#      tar cfzT ${CMAKE_BINARY_DIR}/${CPACK_SOURCE_PACKAGE_FILE_NAME}.tar.gz -\n\n#    COMMAND\n\n#      rm -f ${CMAKE_BINARY_DIR}/${CPACK_SOURCE_PACKAGE_FILE_NAME}.zip &&\n\n#      rsync -a --delete\n\n#      _CPack_Packages/Linux-Source/TGZ/${CPACK_SOURCE_PACKAGE_FILE_NAME}\n\n#      _CPack_Packages/Linux-Source/TGZ.DOS/ &&\n\n#      cd _CPack_Packages/Linux-Source/TGZ.DOS &&\n\n#      find . -type f |\n\n#      egrep -v '/\\(compile|config[^/]*|depcomp|install-sh|missing|[Mm]akefile[^/]*|[^/]*\\\\.\\(ac|am|csproj|eps|kmz|m4|pdf|png|resx|settings|sh|sln|vcproj|vcxproj\\)\\)$$' |\n\n#      xargs unix2dos -q -k &&\n\n#      find ${CPACK_SOURCE_PACKAGE_FILE_NAME} -type f |\n\n#      zip -q ${CMAKE_BINARY_DIR}/${CPACK_SOURCE_PACKAGE_FILE_NAME}.zip -@\n\n#  )\n\n#  add_dependencies (dist distrib-all)\n\n#endif ()\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Add a test target; the tests are in tools.\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "openstudiocore/src/geographic_lib/Makefile" : {
      "ObjectId" : "c7745fa8cc466028bf1a72e4936edd056c56ce79",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/Makefile.am" : {
      "ObjectId" : "25ba129b18bc5f1678e32ee60da2a8e0ebd37167",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2009, Francesco P. Lovergine <frankie@debian.org>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Custom rules\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/geographic_lib/cmake/CMakeLists.txt" : {
      "ObjectId" : "9fec3c22579ad8bba15174024f4fd90cdc835672",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## config file support for find_package (GeographicLib).  This needs to\n\n## deal with two environments: (1) finding the build tree and (2)\n\n## finding the install tree.  geographiclib-config.cmake detects which\n\n## situation it is handing by looking at @PROJECT_ROOT_DIR@.  If\n\n## this is an absolute path, it's in the build tree; otherwise, it's in the\n\n## install tree.  (Note that the whole install tree can be relocated.)\n\n#\n\n## geographiclib-config.cmake for the build tree\n\n#set (PROJECT_ROOT_DIR \"${PROJECT_BINARY_DIR}\")\n\n#set (PROJECT_INCLUDE_DIRS\n\n#  \"${PROJECT_BINARY_DIR}/include\" \"${PROJECT_SOURCE_DIR}/include\" )\n\n#configure_file (project-config.cmake.in\n\n#  \"${PROJECT_BINARY_DIR}/${PROJECT_NAME_LOWER}-config.cmake\" @ONLY)\n\n#configure_file (project-config-version.cmake.in\n\n#  \"${PROJECT_BINARY_DIR}/${PROJECT_NAME_LOWER}-config-version.cmake\" @ONLY)\n\n#export (TARGETS ${PROJECT_SHARED_LIBRARIES} ${PROJECT_STATIC_LIBRARIES} #${TOOLS}\n\n#  FILE \"${PROJECT_BINARY_DIR}/${PROJECT_NAME_LOWER}-targets.cmake\")\n\n#\n\n## geographiclib-config.cmake for the install tree.  It's installed in\n\n## ${INSTALL_CMAKE_DIR} and @PROJECT_ROOT_DIR@ is the relative\n\n## path to the root from there.  (Note that the whole install tree can\n\n## be relocated.)\n\n#if (COMMON_INSTALL_PATH)\n\n#  # Install under lib${LIB_SUFFIX} so that 32-bit and 64-bit packages\n\n#  # can be installed on a single machine.\n\n#  set (INSTALL_CMAKE_DIR \"lib${LIB_SUFFIX}/cmake/${PROJECT_NAME}\")\n\n#  set (PROJECT_ROOT_DIR \"../../..\")\n\n#else ()\n\n#  set (INSTALL_CMAKE_DIR \"cmake\")\n\n#  set (PROJECT_ROOT_DIR \"..\")\n\n#endif ()\n\n## @PROJECT_INCLUDE_DIRS@ is not used in the install tree; reset\n\n## it to prevent the source and build paths appearing in the installed\n\n## config files\n\n#set (PROJECT_INCLUDE_DIRS)\n\n#configure_file (project-config.cmake.in project-config.cmake @ONLY)\n\n#configure_file (project-config-version.cmake.in\n\n#  project-config-version.cmake @ONLY)\n\n#install (FILES\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/project-config.cmake\"\n\n#  DESTINATION \"${INSTALL_CMAKE_DIR}\"\n\n#  RENAME \"${PROJECT_NAME_LOWER}-config.cmake\")\n\n#install (FILES\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/project-config-version.cmake\"\n\n#  DESTINATION \"${INSTALL_CMAKE_DIR}\"\n\n#  RENAME \"${PROJECT_NAME_LOWER}-config-version.cmake\")\n\n## Make information about the cmake targets (the library and the tools)\n\n## available.\n\n#install (EXPORT targets\n\n#  FILE ${PROJECT_NAME_LOWER}-targets.cmake\n\n#  DESTINATION \"${INSTALL_CMAKE_DIR}\")\n\n#\n\n#if (MSVC AND PACKAGE_DEBUG_LIBS)\n\n#  install (FILES\n\n#    \"${PROJECT_BINARY_DIR}/cmake/CMakeFiles/Export/cmake/${PROJECT_NAME_LOWER}-targets-debug.cmake\"\n\n#    DESTINATION \"${INSTALL_CMAKE_DIR}\" CONFIGURATIONS Release)\n\n#endif ()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/cmake/FindGeographicLib.cmake" : {
      "ObjectId" : "9c52b3e7fa91eaabfa18fbca95bceed58923c82f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for GeographicLib\n\n#\n\n# Set\n\n#  GEOGRAPHICLIB_FOUND = TRUE\n\n#  GeographicLib_INCLUDE_DIRS = /usr/local/include\n\n#  GeographicLib_LIBRARIES = /usr/local/lib/libGeographic.so\n\n#  GeographicLib_LIBRARY_DIRS = /usr/local/lib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/cmake/Makefile.am" : {
      "ObjectId" : "212e9f39328dfd872ea7adafa349be7c4e89f06e",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2011, Charles Karney <charles@karney.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/doc/CMakeLists.txt" : {
      "ObjectId" : "760e1af5b80d558ef74570afdb8108ecd1f0b716",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Where the html versions of the man pages (extension .1.html) are\n\n# found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build up a list of the .1.html files.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Run doxygen, if available\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First assemble a list of all the files the documentation uses.  Add a\n\n# dependency on htmlman (from man/CMakeLists.txt).  Use html/index.html\n\n# as the make target.  To make this target, copy the non-doxygen\n\n# generated files into html/.  Run doxfile.in thru cmake's config\n\n# process so that absolute path names are used and so that the pathnames\n\n# are properly stripped by doxygen (via STRIP_FROM_PATH). The\n\n# distrib-doc target copies the html directory into the source tree.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If doxygen is not available, only the install step (from the source\n\n# tree) is done.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Need to absolute path on destination to support old versions of cmake\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "openstudiocore/src/geographic_lib/doc/Makefile.am" : {
      "ObjectId" : "8bdb88fd4bc9424cbf6564de6feb446e02f52f3f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/dotnet/NETGeographicLib/CMakeLists.txt" : {
      "ObjectId" : "7100d84067e29203a5ad3152baba1eb1e3fc2da6",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the .NET library...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include all the .cpp files in the library.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable \"already imported\" and \"unsupported default parameter\"\n\n# warnings with VS 10\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set the version number on the library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where the library is installed, adding it to the export targets\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Suppress 3.0 warnings about use of the LOCATION target property\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Install pdb file.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Put all the library into a folder in the IDE\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "openstudiocore/src/geographic_lib/dotnet/examples/ManagedCPP/CMakeLists.txt" : {
      "ObjectId" : "44e3334206d876604a570add476a4618d930170f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile (but don't install) a bunch of tiny example programs for\n\n# NETGeographic.  These are mainly for including as examples within the\n\n# doxygen documentation; however, compiling them catches most obvious\n\n# blunders.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is set up for Release builds only.  Change\n\n# Release/NETGeographic.dll to Debug/NETGeographic_d.dll for Debug\n\n# builds.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Disable \"already imported\" and \"unsupported default parameter\"\n\n# warnings with VS 10\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Copy the shared library on Windows systems to this directory\n\n# (examples) so that the tests can be run.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Put all the examples into a folder in the IDE\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "openstudiocore/src/geographic_lib/examples/CMakeLists.txt" : {
      "ObjectId" : "df97f27f569027c97686e13cbf01cd018e74a97e",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile a bunch of tiny example programs.  These are built with the\n\n# \"exampleprograms\" target.  These are mainly for including as examples\n\n# within the doxygen documentation; however, compiling them catches some\n\n# obvious blunders.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These examples all assume real = double\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Put all the examples into a folder in the IDE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "openstudiocore/src/geographic_lib/examples/Makefile.am" : {
      "ObjectId" : "2009c067171c8fdac958bb1967dd4c3e35778124",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2011, Charles Karney <charles@karney.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/include/GeographicLib/CMakeLists.txt" : {
      "ObjectId" : "4df602be7c77a8ecfa20bd7ff9bef7bb66a0d658",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install the header files including the generated Config.h (which is in\n\n# the build tree).\n\n#file (GLOB HEADERS [A-Za-z]*.hpp)\n\n#install (FILES ${HEADERS} DESTINATION include/GeographicLib)\n\n#install (FILES ${CMAKE_CURRENT_BINARY_DIR}/Config.h\n\n#  DESTINATION include/GeographicLib)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/include/Makefile.am" : {
      "ObjectId" : "2415eb4631e2f1e4228f7c3bb9ffa4fbc04ecf8f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2009, Francesco P. Lovergine <frankie@debian.org>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/java/direct/pom.xml" : {
      "ObjectId" : "2c229f9eedfd6903825a3afd58ee2256b20699a3",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/java/inverse/pom.xml" : {
      "ObjectId" : "78bccebfe74c9aece40f6e4b3f5846bab7c722e9",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/java/planimeter/pom.xml" : {
      "ObjectId" : "6f66d4586c2d0efef5801ee708a0cfb09e9cb523",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/java/pom.xml" : {
      "ObjectId" : "684aa597417d952a769fd7edaf788bff4d9dc7bd",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/js/CMakeLists.txt" : {
      "ObjectId" : "719c5ba0e81d3f75dae0cdcce8025ba8ac6fbe25",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This list governs the order in which the JavaScript sources are\n\n# concatenated.  This shouldn't be changed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Combine JavaScript into a single file if necessary\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Normalize the line endings.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# export GeographlicLib\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Normalize the line endings.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# This matches /*...*/ style comments, where ... is any number of\n\n# \\*[^/] and [^*].  This has the defect that the it won't detect,\n\n# e.g., **/ as the end of the comment.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# export GeographlicLib\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# \"make javascript\" will reconfigure cmake if necessary, since\n\n# geographiclib.js and geographiclib.min.js are created during\n\n# configuration.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install the JavaScript files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "openstudiocore/src/geographic_lib/js/Makefile.am" : {
      "ObjectId" : "188a34aa407262a2d4b9d301d001861630091e1a",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The order here is significant\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/legacy/C/CMakeLists.txt" : {
      "ObjectId" : "5241df4893e907563da55b85ffefc523ef62a679",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set a default build type for single-configuration cmake generators if\n\n# no build type is set.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make the compiler more picky.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn on testing\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Run the test suite\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "openstudiocore/src/geographic_lib/legacy/Fortran/CMakeLists.txt" : {
      "ObjectId" : "83d51644f3a070385b77f4ab2566978d517ab01f",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set a default build type for single-configuration cmake generators if\n\n# no build type is set.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Work alikes for NGS geodesic tools.  This uses legacy code from NGS\n\n# and so they trigger multiple errors and warnings if compiled with the\n\n# compile flags above.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn on testing\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Run the test suite\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "openstudiocore/src/geographic_lib/man/CMakeLists.txt" : {
      "ObjectId" : "3f3929fda97548bedd33e7bce4c4ab3248fc1025",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The man pages are maintained as .pod (plain old documentatoin) files.\n\n# In maintainer mode, there are used to create real man pages (extension\n\n# .1), usage files (extension .usage) for including in the tool itself,\n\n# and html versions of the man pages (extension .1.html) for use from\n\n# the doxygen generated documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only the maintainer tries to generate the derived files and the .usage\n\n# files are in the build tree.  For non-maintainers, the .usages files\n\n# are in the source tree.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Loop over the tools building up lists of the derived files.  Also in\n\n# maintainer mode, specify how the derived files are created.  The sed\n\n# replacements for the .1.html files glue in a style sheet and implement\n\n# cross-referencing between the tools.  The .usage files are generated\n\n# by a shell script makeusage.sh.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the extra maintainer tasks into the dependency list.  The\n\n# distrib-man target copies the derived documentation files into the\n\n# source tree.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install the man pages.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "openstudiocore/src/geographic_lib/man/Makefile.am" : {
      "ObjectId" : "d0c3638766609f8958deefa26eb929e83d9f76d8",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2011, Charles Karney <charles@karney.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 51:161 token recognition error at: '\"\\1'\nline 51:165 token recognition error at: '\\2'\nline 162:51 token recognition error at: '\" \\\\n\\t$(srcdir)/script.8.in > $@\\n\\ngeographiclib-get-geoids.8:\\n\\t$(SCRIPTMANCMD)\\ngeographiclib-get-gravity.8:\\n\\t$(SCRIPTMANCMD)\\ngeographiclib-get-magnetic.8:\\n\\t$(SCRIPTMANCMD)\\n\\nEXTRA_DIST = Makefile.mk CMakeLists.txt makeusage.sh \\\\n\\tGeoConvert.pod TransverseMercatorProj.pod \\\\n\\tCartConvert.pod ConicProj.pod GeodSolve.pod GeodesicProj.pod \\\\n\\tGeoidEval.pod Gravity.pod MagneticField.pod Planimeter.pod \\\\n\\tRhumbSolve.pod $(MANPAGES) $(USAGE) $(HTMLMAN) \\\\n\\tdummy.usage.in dummy.1.in dummy.1.html.in script.8.in\\n\\nmaintainer-clean-local:\\n\\trm -rf *.usage *.1.html *.1 *.8\\n\u0000'\n"
    },
    "openstudiocore/src/geographic_lib/matlab/CMakeLists.txt" : {
      "ObjectId" : "cad60bcb9c59e6acd01f51f3312c6e05a867c6fd",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install matlab files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# More Octave friendly would be \"share/octave/site/m\"\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Install \"private\" functions\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install \"legacy\" functions\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "openstudiocore/src/geographic_lib/matlab/Makefile.am" : {
      "ObjectId" : "e0626d9fd6a16b859102b6b4a7104fddd9d74c73",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2011, Charles Karney <charles@karney.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/pom.xml" : {
      "ObjectId" : "1790516fc3b4c80d146290a97b204e347c7d2eae",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/python/Makefile.am" : {
      "ObjectId" : "278a43b0b042040eaa7b4dd1d3684a429681a4d0",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2011, Charles Karney <charles@karney.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't install setup.py because it ends up in e.g.,\n\n# /usr/local/lib/python/site-packages/setup.py\n\n#\t$(INSTALL) -m 644 setup.py $(DESTDIR)$(pythondir)/../\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/geographic_lib/python/geographiclib/CMakeLists.txt" : {
      "ObjectId" : "eb5db69964a7dc2dbd08976f2b26d5d1e4b5aab2",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install the python files.\n\n# Probably full-time python users should install the python package from\n\n# http://pypi.python.org/pypi/geographiclib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only install setup.py under Windows because the installation tree is,\n\n# e.g., c:/Program Files/GeographicLib/${INSTALL_PYTHON_PATH}.  Don't\n\n# install on other systems where this command would create, e.g.,\n\n# /usr/local/${INSTALL_PYTHON_PATH}/setup.py which is likely to cause\n\n# conflicts.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/geographic_lib/src/CMakeLists.txt" : {
      "ObjectId" : "a9b999f4ba424d3459905ad1502b8ab73856a751",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the library...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include all the .cpp files in the library.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the library and specify whether it is shared or not.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the version number on the library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Specify where the library is installed, adding it to the export targets\n\n#install (TARGETS ${PROJECT_SHARED_LIBRARIES} ${PROJECT_STATIC_LIBRARIES}\n\n#  EXPORT targets\n\n#  # A potentially useful option.  However it's only supported in recent\n\n#  # versions of cmake (2.8.12 and later?).  So comment out for now.\n\n#  # INCLUDES DESTINATION include\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib${LIB_SUFFIX}\n\n#  ARCHIVE DESTINATION lib${LIB_SUFFIX})\n\n#\n\n#if (MSVC AND PACKAGE_DEBUG_LIBS)\n\n#  if (GEOGRAPHICLIB_SHARED_LIB)\n\n#    install (FILES\n\n#      \"${PROJECT_BINARY_DIR}/lib/Debug/${LIBNAME}${CMAKE_DEBUG_POSTFIX}-i.lib\"\n\n#      DESTINATION lib${LIB_SUFFIX} CONFIGURATIONS Release)\n\n#    install (PROGRAMS\n\n#      \"${PROJECT_BINARY_DIR}/bin/Debug/${LIBNAME}${CMAKE_DEBUG_POSTFIX}.dll\"\n\n#      DESTINATION bin CONFIGURATIONS Release)\n\n#  endif ()\n\n#  if (GEOGRAPHICLIB_STATIC_LIB)\n\n#    install (FILES\n\n#      \"${PROJECT_BINARY_DIR}/lib/Debug/${LIBNAME}${CMAKE_DEBUG_POSTFIX}.lib\"\n\n#      DESTINATION lib${LIB_SUFFIX} CONFIGURATIONS Release)\n\n#  endif ()\n\n#endif ()\n\n#\n\n#if (MSVC AND GEOGRAPHICLIB_SHARED_LIB)\n\n#  if (NOT CMAKE_VERSION VERSION_LESS 3.0)\n\n#    # Suppress 3.0 warnings about use of the LOCATION target property\n\n#    cmake_policy (SET CMP0026 OLD)\n\n#  endif ()\n\n#  # Install pdb file for shared library.\n\n#  foreach (_c ${CMAKE_CONFIGURATION_TYPES})\n\n#    string (TOUPPER ${_c} _C)\n\n#    get_target_property (_P ${PROJECT_SHARED_LIBRARIES} LOCATION_${_C})\n\n#    get_filename_component (_D ${_P} PATH)\n\n#    get_filename_component (_N ${_P} NAME_WE)\n\n#    set (_PDB ${_D}/${_N}.pdb)\n\n#    install (FILES ${_PDB} DESTINATION bin CONFIGURATIONS ${_c} OPTIONAL)\n\n#  endforeach ()\n\n#endif ()\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Put the library into a folder in the IDE\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "openstudiocore/src/geographic_lib/src/GeographicLib.pro" : {
      "ObjectId" : "db5f3a0173637725b38274cfa7b6d33e1892ca4c",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/src/geographic_lib/src/Makefile.am" : {
      "ObjectId" : "e85e08f34f52aaabaed88126c0809c8310993d1c",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2009, Francesco P. Lovergine <frankie@debian.org>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 94:10 token recognition error at: '\\b'\nline 94:19 token recognition error at: '\\b'\nline 94:22 token recognition error at: '\\b'\nline 94:39 token recognition error at: '\\b'\nline 94:57 token recognition error at: '\\b'\n"
    },
    "openstudiocore/src/geographic_lib/tools/CMakeLists.txt" : {
      "ObjectId" : "16522ad341e433be58c152a73317691300461187",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the tools...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Where to find the *.usage files for the --help option.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Only needed if target_compile_definitions is not supported\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Loop over all the tools, specifying the source and library.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add _d suffix for your debug versions of the tools\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Ensure that the package is relocatable\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Specify where the tools are installed, adding them to the export targets\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Put all the tools into a folder in the IDE\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the scripts for downloading the data files on non-Windows\n\n# systems.  This needs to substitute ${GEOGRAPHICLIB_DATA} as the\n\n# default data directory.  These are installed under sbin, because it is\n\n# expected to be run with write access to /usr/local.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The test suite -- split into a separate file because it's rather large.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "openstudiocore/src/geographic_lib/tools/Makefile.am" : {
      "ObjectId" : "2023dfab81ab722e367e1d911358c6698480cc64",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Makefile.am\n\n#\n\n# Copyright (C) 2009, Francesco P. Lovergine <frankie@debian.org>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/geographic_lib/tools/tests.cmake" : {
      "ObjectId" : "5a59068a625965707421f15b79576dbb6a3eb7eb",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Here are the tests for GeographicLib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First turn on testing\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The tests consist of calling the various tools with --input-string and\n\n# matching the output against regular expressions.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# I/O for boost-quadmath has a bug where precision 0 is interpreted as\n\n# printed all the digits of the number (instead of printing the integer\n\n# portion).  Problem reported on 2014-06-07:\n\n# https://svn.boost.org/trac/boost/ticket/10103.  GeographicLib 1.42\n\n# includes a workaround for this bug.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check fix for DMS::Decode bug fixed on 2011-03-22\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check fix for DMS::Decode double rounding bug fixed on 2012-11-15\n\n# This test is known to fail for VS 11 and 12 bug reported 2013-01-10\n\n# http://connect.microsoft.com/VisualStudio/feedback/details/776287\n\n# OK to skip this test for these compilers because this is a question\n\n# of accuracy of the least significant bit.  The bug is fixed in VS 14.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# This invokes MGRS::Check()\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check fix to PolarStereographic es initialization blunder (2015-05-18)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check that integer(minutes) >= 60 and decimal(minutes) > 60 fail.\n\n# Latter used to succeed; fixed 2015-06-11.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check that integer(minutes) < 60 and decimal(minutes) <= 60 succeed.\n\n# Latter used to fail with 60.; fixed 2015-06-11.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check DMS::Encode does round ties to even.  Fixed 2015-06-11.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check MGRS::Forward improved rounding fix, 2015-07-22\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check MGRS::Forward digit consistency fix, 2015-07-23\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check fix for antipodal prolate bug found 2010-09-04\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Another check for similar bug\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check fix for short line bug found 2010-05-21\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check fix for point2=pole bug found 2010-05-03 (but only with long double)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check fix for volatile sbet12a bug found 2011-06-25 (gcc 4.4.4 x86 -O3)\n\n# Found again on 2012-03-27 with tdm-mingw32 (g++ 4.6.1).\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check fix for volatile x bug found 2011-06-25 (gcc 4.4.4 x86 -O3)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check fix for adjust tol1_ bug found 2011-06-25 (Visual Studio 10 rel + debug)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check fix for bet2 = -bet1 bug found 2011-06-25 (Visual Studio 10 rel + debug)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Check fix for inverse geodesics on extreme prolate/oblate ellipsoids\n\n# Reported 2012-08-29 Stefan Guenther <stefan.gunther@embl.de>; fixed 2012-10-07\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# mpfr (nan == 0 is true) and boost-quadmath (nan > 0 is true) have\n\n# bugs in handling nans, so skip this test.  Problems reported on\n\n# 2015-03-31, https://svn.boost.org/trac/boost/ticket/11159.  MFPR C++\n\n# version 3.6.2 fixes its nan problem.\n\n#\n\n# Check fix for inverse ignoring lon12 = nan\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Initial implementation of Math::eatanhe was wrong for e^2 < 0.  This\n\n# checks that this is fixed.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check fix for LONG_UNROLL bug found on 2015-05-07\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check fix for inaccurate rounding in DMS::Decode, e.g., verify that\n\n# 7:33:36 = 7.56; fixed on 2015-06-11.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Check 0/0 problem with area calculation on sphere 2015-09-08\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Check for bad placement of assignment of r.a12 with |f| > 0.01 (bug in\n\n# Java implementation fixed on 2015-05-19).\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check longitude unrolling with inverse calculation 2015-09-16\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check max(-0.0,+0.0) issues 2015-08-22 (triggered by bugs in Octave --\n\n# sind(-0.0) = +0.0 -- and in some version of Visual Studio --\n\n# fmod(-0.0, 360.0) = +0.0.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check fix for nan + point on equator or pole not returning all nans in\n\n# Geodesic::Inverse, found 2015-09-23.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check fix for pole-encircling bug found 2011-03-16\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Check fix for Planimeter pole crossing bug found 2011-06-24\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Check fix for Planimeter lon12 rounding bug found 2012-12-03\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Area of Wyoming\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Area of arctic circle\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Check encircling pole twice\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Check fix for AlbersEqualArea::Reverse bug found 2011-05-01\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Check fix for AlbersEqualArea prolate bug found 2012-05-15\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Check fix for LambertConformalConic::Forward bug found 2012-07-14\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Check fixes for LambertConformalConic::Reverse overflow bugs found 2012-07-14\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Test fix to bad meridian convergence at pole with\n\n# TransverseMercatorExact found 2013-06-26\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Test fix to bad scale at pole with TransverseMercatorExact\n\n# found 2013-06-30 (quarter meridian = 10001965.7293127228128889202m)\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Test fix to bad handling of pole by RhumbSolve -i\n\n# Reported  2015-02-24 by Thomas Murray <thomas.murray56@gmail.com>\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Test fix to CassiniSoldner::Forward bug found 2015-06-20\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Check fix for single-cell cache bug found 2010-11-23\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Test case from WMM2010_Report.pdf, Sec 1.5, pp 14-15:\n\n# t = 2012.5, lat = -80, lon = 240, h = 100e3\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# In third number, allow a final digit 5 (instead of correct 4) to\n\n# accommodate Visual Studio 12 and 14.  The relative difference is\n\n# \"only\" 2e-15; on the other hand, this might be a lurking bug in\n\n# these compilers.  (Visual Studio 10 and 11 are OK.)\n",
        "Line" : 463,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Tests from EMM2015_TEST_VALUES.txt including cases of linear\n\n# interpolation and extrapolation.\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Verify no overflow at poles with high degree model\n",
        "Line" : 492,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Check fix for invR bug in GravityCircle found by Mathieu Peyrega on\n\n# 2013-04-09\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Check close to zero gravity in geostationary orbit\n",
        "Line" : 510,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 52
    },
    "openstudiocore/src/google_test/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "openstudiocore/src/google_test/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "openstudiocore/src/google_test/cmake/internal_utils.cmake" : {
      "ObjectId" : "5630ea77fab10b8a681b7ee7488cc8a95c34196b",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "openstudiocore/src/google_test/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "openstudiocore/src/google_test/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2016-12-14T20:08:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "openstudiocore/src/install_utility/CMakeLists.txt" : {
      "ObjectId" : "037f7de286f27d0535367353e57df4381ac71ceb",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/src/isomodel/CMakeLists.txt" : {
      "ObjectId" : "ea4ed1d75e7e9cec891fc74e2048bf87e94420c6",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#zkexpat\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#No need to install static library\n\n#if(NOT APPLE)\n\n#install(TARGETS ${target_name}\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib\n\n#)\n\n#endif()\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/jsoncpp/CMakeLists.txt" : {
      "ObjectId" : "367b9f53184a5bb476ee3d1b4a0ba4d4821bd5ba",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/src/measure/CMakeLists.txt" : {
      "ObjectId" : "e6b99527a7cbc39ce57054e838db14f628d5b8bc",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#test/EmbeddedRuby_GTest.cpp\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# No need to install static lib\n\n#if(NOT APPLE)\n\n#  install(TARGETS ${target_name}\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(UNIX)\n\n#  set_target_properties(${target_name} PROPERTIES COMPILE_DEFINITIONS \"LINUX\")\n\n#endif()\n\n#if(MINGW)\n\n#  set_target_properties(${target_name} PROPERTIES COMPILE_DEFINITIONS \"WIN_GCC\")\n\n#endif()\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if(APPLE)\n\n#  set_target_properties(${target_name} PROPERTIES COMPILE_DEFINITIONS \"DARWIN\")\n\n#endif()\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CREATE_SRC_GROUPS(\"${${target_name}_test_src}\")\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#CREATE_TEST_TARGETS(${target_name} \"${${target_name}_test_src}\" \"${${target_name}_depends};${RUBY_LIBRARY};${COREFOUNDATION_LIBRARY}\")\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if(BUILD_TESTING)\n\n#  add_dependencies(\"${target_name}_tests\"\n\n#    \"openstudio_energyplus_resources\"\n\n#    \"ruby_OpenStudioUtilitiesCore\"\n\n#    \"ruby_OpenStudioUtilitiesBCL\"\n\n#    \"ruby_OpenStudioUtilitiesIdd\"\n\n#    \"ruby_OpenStudioUtilitiesIdf\"\n\n#    \"ruby_OpenStudioUtilities\"\n\n#    \"ruby_OpenStudioModel\"\n\n#    \"ruby_OpenStudioModelCore\"\n\n#    \"ruby_OpenStudioModelSimulation\"\n\n#    \"ruby_OpenStudioModelResources\"\n\n#    \"ruby_OpenStudioModelGeometry\"\n\n#    \"ruby_OpenStudioModelHVAC\"\n\n#    \"ruby_OpenStudioEnergyPlus\"\n\n#    \"ruby_OpenStudioMeasure\"\n\n#  )\n\n#\n\n#  if(APPLE)\n\n#    # the following script will change the bindings to prefer the version of libruby included with SketchUp to the system library, preventing loading two different copies of libruby\n\n#    add_custom_command(TARGET ${target_name}_tests POST_BUILD COMMAND ${RUBY_EXECUTABLE} \"${CMAKE_SOURCE_DIR}/SketchUpInstallName.rb\" \"$<TARGET_FILE:${target_name}_tests>\")\n\n#  endif()\n\n#endif()\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "openstudiocore/src/model/CMakeLists.txt" : {
      "ObjectId" : "ff87b69eeeb5f94cfec11860f0e891dba6f42e21",
      "LastModified" : "2019-04-09T17:20:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Relationship.hpp\n\n#  Relationship.cpp\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: once UtilityCost objects are wrapped\n\n# UtilityCost_Charge_Block.hpp\n\n# UtilityCost_Charge_Block_Impl.hpp\n\n# UtilityCost_Charge_Block.cpp\n\n# UtilityCost_Charge_Simple.hpp\n\n# UtilityCost_Charge_Simple_Impl.hpp\n\n# UtilityCost_Charge_Simple.cpp\n\n# UtilityCost_Computation.hpp\n\n# UtilityCost_Computation_Impl.hpp\n\n# UtilityCost_Computation.cpp\n\n# UtilityCost_Qualify.hpp\n\n# UtilityCost_Qualify_Impl.hpp\n\n# UtilityCost_Qualify.cpp\n\n# UtilityCost_Ratchet.hpp\n\n# UtilityCost_Ratchet_Impl.hpp\n\n# UtilityCost_Ratchet.cpp\n\n# UtilityCost_Tariff.hpp\n\n# UtilityCost_Tariff_Impl.hpp\n\n# UtilityCost_Tariff.cpp\n\n# UtilityCost_Variable.hpp\n\n# UtilityCost_Variable_Impl.hpp\n\n# UtilityCost_Variable.cpp\n",
        "Line" : 1445,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# generate rules for building source files from the resources\n\n# DLM: TODO, replace with embed_files\n",
        "Line" : 1619,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# No need to install static lib\n\n#if(NOT APPLE)\n\n#  install(TARGETS ${target_name}\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler and system specific options\n",
        "Line" : 1649,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# treat warnings as errors\n\n#set_target_properties(\"${target_name}\" PROPERTIES \"COMPILE_FLAGS\" \"-Werror\")\n",
        "Line" : 1651,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# test/CentralHeatPumpSystemModule_GTest.cpp => Included in the above\n",
        "Line" : 1715,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "##  test/LoadProfilePlant_GTest.cpp\n",
        "Line" : 1862,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##  test/PlantComponentTemperatureSource_GTest.cpp\n",
        "Line" : 1900,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compiler and system specific options\n",
        "Line" : 2050,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# treat warnings as errors\n\n#set_target_properties(\"${target_name}_tests\" PROPERTIES \"COMPILE_FLAGS\" \"-Werror\")\n",
        "Line" : 2052,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "openstudiocore/src/model_editor/CMakeLists.txt" : {
      "ObjectId" : "7ac32e64eef7ae01f522bf9cb411188833c10d38",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------------\n\n# First the library\n\n#--------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# lib files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# lib moc files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# lib ui files\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# lib resource files\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# configure the AboutBox.hpp file\n\n# this needs to be configured to embed the build number\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Qt MOC generation\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Qt UI Generation\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# generate rules for building source files from the resources\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# make the shared library\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# lib dependencies\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# make the static library\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# lib dependencies\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#if(NOT APPLE)\n\n#  install(TARGETS ${target_name}\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# lib swig files\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##--------------------------------------------------------------------------------\n\n## Now the ModelEditor.exe stuff below\n\n##--------------------------------------------------------------------------------\n\n#\n\n#set(target_name ModelEditor)\n\n#\n\n#MAKE_LITE_SQL_TARGET(ModelEditor.xml modelobjectdatabase)\n\n#MAKE_LITE_SQL_TARGET(ProjectModel.xml projectmodeldatabase)\n\n#\n\n## source files\n\n#set(${target_name}_src\n\n#  main.cpp\n\n#  mainpage.hpp\n\n#  ModelEditor.hpp\n\n#  ModelEditor.cpp\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/modelobjectdatabase.hxx\"\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/modelobjectdatabase.cxx\"\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/projectmodeldatabase.hxx\"\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/projectmodeldatabase.cxx\"\n\n#)\n\n#\n\n## moc files\n\n#set(${target_name}_moc\n\n#  ModelEditor.hpp\n\n#)\n\n#\n\n## lib ui files\n\n#set(${target_name}_ui\n\n#)\n\n#\n\n## resource files\n\n#set(${target_name}_qrc\n\n#  application.qrc\n\n#)\n\n#\n\n## Qt MOC generation\n\n#qt5_wrap_cpp_minimally(${target_name}_mocs ${${target_name}_moc})\n\n#\n\n## Qt UI generation\n\n#qt5_wrap_ui(${target_name}_uis ${${target_name}_ui})\n\n#\n\n## generate rules for building source files from the resources\n\n#qt5_add_resources(${target_name}_qrcs ${${target_name}_qrc})\n\n#\n\n## configure the AboutBox.hpp file\n\n## this needs to be configured to embed the build number\n\n#configure_file(AboutBox.hpp.in \"${CMAKE_CURRENT_BINARY_DIR}/AboutBox.hpp\")\n\n#\n\n##--------------------------------------------------------------------------------\n\n## Icons\n\n##--------------------------------------------------------------------------------\n\n## For Windows set the rc file pointing to the icon file\n\n#if(WIN32)\n\n#  set(ICON_SRC \"${CMAKE_CURRENT_SOURCE_DIR}/ModelEditor.rc\")\n\n#endif()\n\n## For Apple set the icns file containing icons\n\n#if(APPLE)\n\n#  # set how it shows up in the Info.plist file\n\n#  set(MACOSX_BUNDLE_ICON_FILE me.icns)\n\n#  # set where in the bundle to put the icns file\n\n#  set_source_files_properties(${CMAKE_CURRENT_SOURCE_DIR}/../../icons/me.icns\n\n#    PROPERTIES MACOSX_PACKAGE_LOCATION Resources\n\n#  )\n\n#  # include the icns file in the target\n\n#  set(ICON_SRC ${CMAKE_CURRENT_SOURCE_DIR}/../../icons/me.icns)\n\n#endif()\n\n#\n\n#add_executable(${target_name}\n\n#  WIN32\n\n#  MACOSX_BUNDLE\n\n#  ${${target_name}_src}\n\n#  ${${target_name}_ui}\n\n#  ${${target_name}_uis}\n\n#  ${${target_name}_moc}\n\n#  ${${target_name}_mocs}\n\n#  ${${target_name}_qrc}\n\n#  ${${target_name}_qrcs}\n\n#  ${ICON_SRC}\n\n#)\n\n#\n\n#set(${target_name}_depends\n\n#  openstudio_modeleditor\n\n#)\n\n#\n\n#target_link_libraries(${target_name} ${${target_name}_depends})\n\n#AddPCH(${target_name})\n\n#\n\n##--------------------------------------------------------------------------------\n\n## Now the installation stuff below\n\n##--------------------------------------------------------------------------------\n\n#set(plugin_dest_dir bin)\n\n#set(qtconf_dest_dir bin)\n\n#set(rvdoc_dest_dir doc)\n\n#set(APPS \"\\${CMAKE_INSTALL_PREFIX}/bin/ModelEditor\")\n\n#if(APPLE)\n\n#  set(plugin_dest_dir ModelEditor.app/Contents/MacOS)\n\n#  set(qtconf_dest_dir ModelEditor.app/Contents/Resources)\n\n#  set(APPS \"\\${CMAKE_INSTALL_PREFIX}/ModelEditor.app\")\n\n#  set(rvdoc_dest_dir ModelEditor.app/Contents/doc)\n\n#endif()\n\n#if(WIN32)\n\n#  set(APPS \"\\${CMAKE_INSTALL_PREFIX}/bin/ModelEditor.exe\")\n\n#endif()\n\n#\n\n## NOTE: is there a Linux version that needs to be installed\n\n#\n\n##--------------------------------------------------------------------------------\n\n## Install the QtTest application, on Apple, the bundle is at the root of the\n\n## install tree, and on other platforms it'll go into the bin directory.\n\n#install(TARGETS ModelEditor\n\n#  BUNDLE DESTINATION .\n\n#  RUNTIME DESTINATION bin\n\n#)\n\n#\n\n##--------------------------------------------------------------------------------\n\n## Install the documentation\n\n##install(FILES \"doc/ReadMe.txt\"\n\n##  DESTINATION ${rvdoc_dest_dir}/\n\n##)\n\n#\n\n##--------------------------------------------------------------------------------\n\n## Install needed Qt plugins by copying directories from the qt installation\n\n## One can cull what gets copied by using 'REGEX \"...\" EXCLUDE'\n\n##install(DIRECTORY \"${QT_PLUGINS_DIR}/imageformats\" DESTINATION ${plugin_dest_dir}/plugins)\n\n#\n\n##--------------------------------------------------------------------------------\n\n## install a qt.conf file\n\n## this inserts some cmake code into the install script to write the file\n\n#if(APPLE)\n\n#  install(CODE \"\n\n#    file(COPY \\\"${QT_LIBRARY_DIR}/QtGui.framework/Resources/qt_menu.nib\\\"\n\n#    DESTINATION \\\"\\${CMAKE_INSTALL_PREFIX}/${qtconf_dest_dir}/\\\")\n\n#  \")\n\n#endif()\n\n#\n\n#if(APPLE OR WIN32)\n\n#  install(CODE \"\n\n#    file(WRITE \\\"\\${CMAKE_INSTALL_PREFIX}/${qtconf_dest_dir}/qt.conf\\\" \\\"\\\")\n\n#  \")\n\n#endif()\n\n#\n\n##--------------------------------------------------------------------------------\n\n## Use BundleUtilities to get all other dependencies for the application to work.\n\n## It takes a bundle or executable along with possible plugins and inspects it\n\n## for dependencies.  If they are not system dependencies, they are copied.\n\n#\n\n## directories to look for dependencies\n\n#set(DIRS ${QT_LIBRARY_DIR} ${LIBRARY_SEARCH_DIRECTORY})\n\n#\n\n## Now the work of copying dependencies into the bundle/package\n\n## The quotes are escaped and variables to use at install time have their $ escaped\n\n## An alternative is the do a configure_file() on a script and use install(SCRIPT  ...).\n\n## Note that the image plugins depend on QtSvg and QtXml, and it got those copied\n\n## over.\n\n#if(WIN32 OR APPLE)\n\n#  install(CODE \"\n\n#    file(GLOB_RECURSE QTPLUGINS\n\n#      \\\"\\${CMAKE_INSTALL_PREFIX}/${plugin_dest_dir}/plugins/*${CMAKE_SHARED_LIBRARY_SUFFIX}\\\")\n\n#    include(BundleUtilities)\n\n#    fixup_bundle(\\\"${APPS}\\\" \\\"\\${QTPLUGINS}\\\" \\\"${DIRS}\\\")\n\n#  \")\n\n#endif()\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "openstudiocore/src/openstudio_app/CMakeLists.txt" : {
      "ObjectId" : "01e4269de5cdd7138ea0381300eef3ea8754b61d",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Qt UI generation\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure the AboutBox.hpp file\n\n# this needs to be configured to embed the build number\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For Apple set the icns file containing icons\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the name of the bundle icon\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set all icons\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#include_directories(${RUBY_INCLUDE_DIRS})\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is because Apple has app bundles for .apps.\n\n# We copy the openstudio cli into the app bundle in an effort\n\n# to be self contained. It also makes it easy to find the cli since\n\n# it will be sitting next to the app executable.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E make_directory $<TARGET_FILE_DIR:${target_name}>/sceneparsers/\n\n#COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE:Qt5::GLTFSceneParserPlugin> $<TARGET_FILE_DIR:${target_name}>/sceneparsers/\n\n#COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE:Qt5::AssimpParserPlugin> $<TARGET_FILE_DIR:${target_name}>/sceneparsers/\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#add_custom_command(TARGET ${target_name}\n\n#  POST_BUILD\n\n#  COMMAND chrpath -r \"$ORIGIN/.\" $<TARGET_FILE:${target_name}>\n\n#  VERBATIM\n\n#)\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#COMMAND chrpath -r \"$ORIGIN/..\" $<TARGET_FILE_DIR:${target_name}>/sceneparsers/$<TARGET_FILE_NAME:Qt5::GLTFSceneParserPlugin>\n\n#COMMAND chrpath -r \"$ORIGIN/..\" $<TARGET_FILE_DIR:${target_name}>/sceneparsers/$<TARGET_FILE_NAME:Qt5::AssimpParserPlugin>\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# release dlls are needed in debug dir for QtWebEngineProcess, second copy_if_different will be a no-op\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# release dlls are needed in debug dir for QtWebEngineProcess, second copy_if_different will be a no-op\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#${QT_PLUGIN_LIBS}\n\n#${COREFOUNDATION_LIBRARY}\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# because the app calls the cli\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#AddPCH(${target_name})\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Installation\n\n#------------------------------------------------------------------------------\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# directories to look for dependencies\n\n# This is probably out of date\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# since on apple the whole app bundle is installed (including these webkit components) we can exclude apple\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#install(PROGRAMS $<TARGET_FILE:Qt5::GLTFSceneParserPlugin> DESTINATION bin/sceneparsers/ COMPONENT OpenStudioApp)\n\n#install(PROGRAMS $<TARGET_FILE:Qt5::AssimpParserPlugin> DESTINATION bin/sceneparsers/ COMPONENT OpenStudioApp)\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#install(PROGRAMS $<TARGET_FILE_DIR:${target_name}>/sceneparsers/$<TARGET_FILE_NAME:Qt5::GLTFSceneParserPlugin> DESTINATION bin/sceneparsers/ COMPONENT OpenStudioApp)\n\n#install(PROGRAMS $<TARGET_FILE_DIR:${target_name}>/sceneparsers/$<TARGET_FILE_NAME:Qt5::AssimpParserPlugin> DESTINATION bin/sceneparsers/ COMPONENT OpenStudioApp)\n",
        "Line" : 275,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#list(APPEND QTPLUGINS \"\\${CMAKE_INSTALL_PREFIX}/${plugin_dest_dir}/sceneparsers/libgltfsceneparser.dylib\")\n\n#list(APPEND QTPLUGINS \"\\${CMAKE_INSTALL_PREFIX}/${plugin_dest_dir}/sceneparsers/libassimpsceneparser.dylib\")\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#add_dependencies(\"${target_name}_tests\"\n\n#  openstudio_app_resources\n\n#)\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "openstudiocore/src/openstudio_lib/CMakeLists.txt" : {
      "ObjectId" : "c3e58c62cae376e3d2c77eb26e0ab612544b8b09",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(${RUBY_INCLUDE_DIR})\n\n#include_directories(${SWIG_DIR})\n\n#\n\n#add_custom_command(\n\n#  OUTPUT \"${CMAKE_CURRENT_BINARY_DIR}/SWIGRubyRuntime.h\"\n\n#  COMMAND \"${SWIG_EXECUTABLE}\"\n\n#          \"-ruby\"\n\n#          -external-runtime \"${CMAKE_CURRENT_BINARY_DIR}/SWIGRubyRuntime.h\"\n\n#)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\"${CMAKE_CURRENT_BINARY_DIR}/SWIGRubyRuntime.h\"\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# moc files\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(${Qt5Widgets_VERSION} VERSION_LESS \"5.4.0\")\n\n#  list(APPEND ${target_name}_moc ResultsWebView.hpp)\n\n#else()\n\n#  list(APPEND ${target_name}_moc ResultsWebEngineView.hpp)\n\n#endif()\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# resource files\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Qt UI generation\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# generate rules for building source files from the resources\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "openstudiocore/src/osversion/CMakeLists.txt" : {
      "ObjectId" : "d09e68078186d291497fb77b9f8caa6a08247530",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No need to install static lib\n\n#if(NOT APPLE)\n\n#  install(TARGETS ${target_name}\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_dependencies(\"${target_name}_tests\"\n\n#  openstudio_osversion_resources\n\n#)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/qtwinmigrate/CMakeLists.txt" : {
      "ObjectId" : "cb052078490a63cce7b74519ccf9bc80350c70b1",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QMfcApp\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#QWinHost\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#QWinWidget\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "openstudiocore/src/qwt/CMakeLists.txt" : {
      "ObjectId" : "4e2466a422987d3113e2f12c4aa72ff648010cc4",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings as errors for qwt since we are trying to not modify it too much\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# source files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# qwt_plot_glcanvas.cpp\n\n# qwt_plot_glcanvas.h\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# qwt_plot_svgitem.cpp\n\n# qwt_plot_svgitem.h\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# moc files\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# qwt_plot_glcanvas.h\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#add_definitions(-DQT_DLL -DQWT_DLL -DQWT_MAKEDLL -DQWT_NO_SVG -DQWT_NO_OPENGL)\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DLM: need to install this\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "openstudiocore/src/radiance/CMakeLists.txt" : {
      "ObjectId" : "b14eaff4953cb32bcb9f117bd85298e03747d2d9",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DLM: TODO, replace with embed_files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No need to install static library\n\n#if(NOT APPLE)\n\n#  install(TARGETS ${target_name}\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/sdd/CMakeLists.txt" : {
      "ObjectId" : "ed056af278e3bd562276c1d6ab2d6699008bc2e7",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#zkexpat\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# No need to install static library\n\n#if(NOT APPLE)\n\n#install(TARGETS ${target_name}\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib\n\n#)\n\n#endif()\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/sqlite/CMakeLists.txt" : {
      "ObjectId" : "d3f704cc2c057c8680d417dd6a82873206762056",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#sqlite3.def\n\n#shell.c\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#sqlite3ext.h\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/utilities/CMakeLists.txt" : {
      "ObjectId" : "2bdb0e0766e2a0db20dbe49f33804495393cfa88",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create a library out of the utilities namespace\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(cloud_src\n\n#  cloud/AWSProvider.hpp\n\n#  cloud/AWSProvider_Impl.hpp\n\n#  cloud/AWSProvider.cpp\n\n#  cloud/CloudProvider.hpp\n\n#  cloud/CloudProvider_Impl.hpp\n\n#  cloud/CloudProvider.cpp\n\n#  cloud/OSServer.hpp\n\n#  cloud/OSServer_Impl.hpp\n\n#  cloud/OSServer.cpp\n\n#  cloud/VagrantProvider.hpp\n\n#  cloud/VagrantProvider_Impl.hpp\n\n#  cloud/VagrantProvider.cpp\n\n#)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#litesql\n\n#litesql-util\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#JWD: On Ubuntu 14.04, the thread lib is included in Boost_LIBRARIES\n\n# ${CMAKE_THREAD_LIBS}\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# moc files\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(cloud_moc\n\n#  cloud/AWSProvider_Impl.hpp\n\n#  cloud/CloudProvider_Impl.hpp\n\n#  cloud/OSServer_Impl.hpp\n\n#  cloud/VagrantProvider_Impl.hpp\n\n#)\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  idf/IdfObject_Impl.hpp\n\n#  idf/IdfObjectWatcher.hpp\n\n#  idf/WorkspaceObjectWatcher.hpp\n\n#  idf/WorkspaceObject_Impl.hpp\n\n#  idf/Workspace_Impl.hpp\n\n#  idf/WorkspaceWatcher.hpp\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  data/Attribute_Impl.hpp\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  plot/ProgressBar.hpp\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# idf_moc files include generated source code.  It is important that these\n\n# generated files are generated before moc runs.\n\n# The following commands make sure that happens.\n\n# This could be done by simply touching the moc'ed files in the source tree\n\n# but in the spirit of keeping the source tree clean, we copy them into the\n\n# build directory instead.\n\n#\n\n# DLM: This is no longer needed as GenerateIddFactoryRun will run before anything in utilities is built\n\n#\n\n###############################################################################\n\n#foreach(f IN LISTS idf_moc)\n\n#  string(REGEX REPLACE hpp$ hxx fxx ${f})\n\n#  list(APPEND idfxx_moc ${CMAKE_CURRENT_BINARY_DIR}/${fxx})\n\n#  add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${fxx}\n\n#    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/${f} ${CMAKE_CURRENT_BINARY_DIR}/${fxx}\n\n#    DEPENDS\n\n#    ${CMAKE_CURRENT_BINARY_DIR}/idd/IddEnums.hxx\n\n#    ${CMAKE_CURRENT_BINARY_DIR}/idd/IddFieldEnums.hxx\n\n#    ${CMAKE_CURRENT_BINARY_DIR}/idd/IddFactory.hxx\n\n#    ${CMAKE_CURRENT_BINARY_DIR}/idd/IddFactory.cxx\n\n#    ${CMAKE_CURRENT_SOURCE_DIR}/${f}\n\n#  )\n\n#endforeach()\n\n###############################################################################\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Qt MOC generation\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#qt5_wrap_cpp_minimally(cloud_moc_src ${cloud_moc})\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# RM\n",
        "Line" : 296,
        "CharPositionInLine" : 49
      },
      "13" : {
        "Text" : "# RM\n\n# [sudo] RM [-rf]\n",
        "Line" : 298,
        "CharPositionInLine" : 49
      },
      "14" : {
        "Text" : "# embedded files, bump again to update common files\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set up groups of source files for Visual Studio\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#source_group(cloud FILES ${cloud_src})\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# referenced here to make sure it is generated when and where we expect\n",
        "Line" : 354,
        "CharPositionInLine" : 52
      },
      "18" : {
        "Text" : "#  ${cloud_src}\n\n#  ${cloud_moc_src}\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#  cloud/test/AWSProvider_GTest.cpp\n\n#  cloud/test/VagrantProvider_GTest.cpp\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#  Utilities.i\n",
        "Line" : 471,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#  cloud/Cloud.i\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#include subdir for pch\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# No need to install static lib\n\n#if(NOT APPLE)\n\n#  install(TARGETS ${target_name}\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#MAKE_SWIG_TARGET(OpenStudioUtilitiesCloud utilitiescloud \"${CMAKE_CURRENT_SOURCE_DIR}/UtilitiesCloud.i\" \"${${target_name}_swig_src}\" ${swig_target_name} OpenStudioUtilitiesCore)\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "openstudiocore/src/utilities/idd/CMakeLists.txt" : {
      "ObjectId" : "96ac99d63db21a2fbeacfc878e7d4951c08e4e95",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include the generated files\n\n#include_directories(${CMAKE_CURRENT_BINARY_DIR}/idd/)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/utilities/idf/CMakeLists.txt" : {
      "ObjectId" : "9ba9bcbe51be602f5ebd00206f4fd27be586609c",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(idf_test_moc\n\n#  idf/Test/IdfTestQObjects.hpp\n\n#)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#qt5_wrap_cpp_minimally(idf_test_moc_src ${idf_test_moc})\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openstudiocore/src/utilities/pch/CMakeLists.txt" : {
      "ObjectId" : "319fd68e04b542a5d4ebaf6aa7ed86b3fae7749c",
      "LastModified" : "2019-02-26T09:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add PCH support\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The point of this if block is to not add PCH to executables when compiling on Clang\n\n# to avoid an error with PIE vs PIR compiler flags\n",
        "Line" : 81,
        "CharPositionInLine" : 10
      },
      "2" : {
        "Text" : "# end of pch support\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "openstudiocore/src/utilities/sql/CMakeLists.txt" : {
      "ObjectId" : "012c6dce59988a045e8c749ffe4363ace397f6ed",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copy Y:/5500/HPBldg/DannysFiles/eplusout.sql to build/resources/utilities folder before running SqlFileLargeFixture tests\n\n#  sql/Test/SqlFileLargeFixture.hpp\n\n#  sql/Test/SqlFileLargeFixture.cpp\n\n#  sql/Test/SqlFileLarge_GTest.cpp\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "openstudiocore/src/utilities/units/CMakeLists.txt" : {
      "ObjectId" : "aa3eadbf4d1d56eedfcc050763f8852afe061848",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openstudiocore/src/zlib/CMakeLists.txt" : {
      "ObjectId" : "c719f12159f794199709692a9d98d4b995711efa",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cmake_minimum_required(VERSION 2.4.4)\n\n#set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#project(zlib C)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 36,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#============================================================================\n\n# minizip\n\n#============================================================================\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#if(NOT APPLE)\n\n#  install(TARGETS miniziplib\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION lib\n\n#  )\n\n#endif()\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#add_executable(minizip \"contrib/minizip/minizip.c\")\n\n#target_link_libraries(minizip miniziplib)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#add_executable(miniunz \"contrib/minizip/miniunz.c\")\n\n#target_link_libraries(miniunz miniziplib)\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "openstudiocore/src/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "openstudiocore/src/zlib/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "openstudiocore/v8-node/CMakeLists.txt" : {
      "ObjectId" : "e0985079559f1912db58fbbd66b3d08e03eb58c7",
      "LastModified" : "2018-01-17T03:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# currently we are using only the ResultsViewer resources for Ruby tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find all tests\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 72,
    "QMAKE" : 1,
    "MAKEFILE" : 5,
    "AUTOMAKE" : 12,
    "MAVEN" : 5
  },
  "ElapsedTime" : 14441
}