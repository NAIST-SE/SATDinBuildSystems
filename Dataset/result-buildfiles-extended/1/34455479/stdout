{
  "Repository" : "34455479",
  "Revision" : "HEAD",
  "ObjectId" : "988b11999226dac5e53d487078f75cdf348223ed",
  "CommitTime" : "2019-04-07T12:55:44Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "874ca065a96b9f63b23be27cb8b4be04883d3968",
      "LastModified" : "2017-12-15T15:22:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Just a simple makefile for helping people get into the project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For finding the errors that should be in parser.messages but are not\n\n# because parser.mly has been updated and some new errors appeared.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# These targets aim to build the java GUI in support/gui/\n\n# It basically calls `./gradlew` (which is like `make` but for java)\n\n# and checks that all the necessary\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "docs/Makefile" : {
      "ObjectId" : "c34d74e0f7f38d928561a56e654ad9d703960f1c",
      "LastModified" : "2017-09-23T13:09:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile\n\n# MaÃ«l Valais, 2017-06-18 13:04\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# vim:ft=make\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "support/temporary-solver/build.xml" : {
      "ObjectId" : "a16e95f7c8b30986353c1d6dadc2f4b33fc5c197",
      "LastModified" : "2017-03-28T21:11:33Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\t\tTo use `ant` with `build.xml` (these are incremental targets),\n\t\tjust go to the directory containing `build.xml` and launch:\n\t\t\t- `ant build` to build\n\t\t\t- `ant jar` to make the minisat.jar\n\t ",
        "Line" : 8,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "\n\t\t`ant build`\n\n\t\tBuilds all the .java files in `src`\n\t\tand outputs `.class` files in `build`.\n\t",
        "Line" : 14,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "\n\t\t`ant build-jar` or `ant jar`\n\n\t\tAfter calling the target `build`, this target will\n\t\tcreates the `touist.jar` containing:\n\t\t\t- the language files & images in `./touist-gui/resources`\n\t\t\t- the .class from `./touist-gui/build`\n\t\t\t- a file `manifest` containing the classpath (among others)\n\n\t\tThis target will not take care of the external binaries, e.g. touist.\n\n\t\tThe `external/` directory and `touist.jar` must be in the same directory\n\t\tfor the program to work.\n\n\t\tTo put all external binaries and touist.jar files in a single directory\n\t\tseparated from your build tree, you can use `and dist`.\n\t",
        "Line" : 47,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2,
    "ANT" : 1
  },
  "ElapsedTime" : 1202
}