{
  "Repository" : "10313339",
  "Revision" : "HEAD",
  "ObjectId" : "90441c207838f611e4459595d3ac57468bcde13a",
  "CommitTime" : "2019-04-15T18:38:44Z",
  "Files" : {
    "BUILD" : {
      "ObjectId" : "78e07d2feca149204454074fbe32e06cf2a1b89a",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Public flatc library to compile flatbuffer files at runtime.",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Public C++ headers for the Flatbuffers library.",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Public flatc compiler library.",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Public flatc compiler.",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test binary.",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test bzl rules",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/BuildFlatBuffers.cmake" : {
      "ObjectId" : "835f4b80c0ad931c4aca23535582bf935b368669",
      "LastModified" : "2018-05-14T16:20:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2015 Google Inc. All rights reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General function to create FlatBuffer build rules for the given list of\n\n# schemas.\n\n#\n\n# flatbuffers_schemas: A list of flatbuffer schema files to process.\n\n#\n\n# schema_include_dirs: A list of schema file include directories, which will be\n\n# passed to flatc via the -I parameter.\n\n#\n\n# custom_target_name: The generated files will be added as dependencies for a\n\n# new custom target with this name. You should add that target as a dependency\n\n# for your main target to ensure these files are built. You can also retrieve\n\n# various properties from this target, such as GENERATED_INCLUDES_DIR,\n\n# BINARY_SCHEMAS_DIR, and COPY_TEXT_SCHEMAS_DIR.\n\n#\n\n# additional_dependencies: A list of additional dependencies that you'd like\n\n# all generated files to depend on. Pass in a blank string if you have none.\n\n#\n\n# generated_includes_dir: Where to generate the C++ header files for these\n\n# schemas. The generated includes directory will automatically be added to\n\n# CMake's include directories, and will be where generated header files are\n\n# placed. This parameter is optional; pass in empty string if you don't want to\n\n# generate include files for these schemas.\n\n#\n\n# binary_schemas_dir: If you specify an optional binary schema directory, binary\n\n# schemas will be generated for these schemas as well, and placed into the given\n\n# directory.\n\n#\n\n# copy_text_schemas_dir: If you want all text schemas (including schemas from\n\n# all schema include directories) copied into a directory (for example, if you\n\n# need them within your project to build JSON files), you can specify that\n\n# folder here. All text schemas will be copied to that folder.\n\n#\n\n# IMPORTANT: Make sure you quote all list arguments you pass to this function!\n\n# Otherwise CMake will only pass in the first element.\n\n# Example: build_flatbuffers(\"${fb_files}\" \"${include_dirs}\" target_name ...)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test if including from FindFlatBuffers\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Generate the include files parameters.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Copy text schemas from dependent folders.\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# For each schema, do the things we requested.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Create a custom target that depends on all the generated files.\n\n# This is the target that you can depend on to trigger all these\n\n# to be built.\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Register the include directory we are using.\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Register the binary schemas dir we are using.\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Register the text schema copy dir we are using.\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/FindFlatBuffers.cmake" : {
      "ObjectId" : "aad9a6bfb091585fe663b201829c12630d253957",
      "LastModified" : "2018-12-13T19:56:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014 Stefan.Eilemann@epfl.ch\n\n# Copyright 2014 Google Inc. All rights reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the flatbuffers schema compiler\n\n#\n\n# Output Variables:\n\n# * FLATBUFFERS_FLATC_EXECUTABLE the flatc compiler executable\n\n# * FLATBUFFERS_FOUND\n\n#\n\n# Provides:\n\n# * FLATBUFFERS_GENERATE_C_HEADERS(Name <files>) creates the C++ headers\n\n#   for the given flatbuffer schema files.\n\n#   Returns the header files in ${Name}_OUTPUTS\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FlatbuffersConfig.cmake" : {
      "ObjectId" : "107d78e98f673e9ec371fd7fe96623ecf54c36b0",
      "LastModified" : "2018-12-13T19:56:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDebian.cmake" : {
      "ObjectId" : "f587ff7ffe28c3f13b4a0596dd517d84a73a2649",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------- Debianization ---------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set build environment\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Common package information\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Derive architecture\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Package name\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "CMake/PackageRedhat.cmake" : {
      "ObjectId" : "4545e729083036e5e8189ac4557ff10d79057904",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Assume this is not a cross complation build.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# This may reduce rpm compatiblity with very old systems.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/Version.cmake" : {
      "ObjectId" : "db6613b840f3ceb2132101c47df6b00a836babb5",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "b7acbc7bca841850010ab028c15a7bd6f9e14247",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate compile_commands.json\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: Code coverage only works on Linux & OSX.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: Sanitizer check only works on Linux & OSX (gcc & llvm).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override the default recursion depth limit.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Auto-detect locale-narrow 'strtod_l' function.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# file generate by running compiler on tests/monster_test.fbs\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# file generated by running compiler on samples/monster.fbs\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# file generated by running compiler on samples/monster.fbs\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# file generated by running compiler on samples/monster.fbs\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# file generated by running compiler on samples/monster.fbs\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# source_group(Compiler FILES ${FlatBuffers_Compiler_SRCS})\n\n# source_group(Tests FILES ${FlatBuffers_Tests_SRCS})\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# do not apply any global settings if the toolchain\n\n# is being configured externally\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Certain platforms such as ARM do not use signed chars by default\n\n# which causes issues with certain bounds checks.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# enable warning\n",
        "Line" : 196,
        "CharPositionInLine" : 118
      },
      "14" : {
        "Text" : "# Certain platforms such as ARM do not use signed chars by default\n\n# which causes issues with certain bounds checks.\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Visual Studio pedantic build settings\n\n# warning C4512: assignment operator could not be generated\n\n# warning C4316: object allocated on the heap may not be aligned\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# FLATBUFFERS_CODE_SANITIZE: boolean {ON,OFF,YES,NO} or string with list of sanitizer.\n\n# List of sanitizer is string starts with '=': \"=address,undefined,thread,memory\".\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# override default by user-defined sanitizer list\n",
        "Line" : 236,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# CMake > 2.8.11: Attach header directory for when build via add_subdirectory().\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Make flatc.exe not depend on runtime dlls for easy distribution.\n",
        "Line" : 275,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Shared object version: \"major.minor.micro\"\n\n# - micro updated every release when there is no API/ABI changes\n\n# - minor updated when there are additions in API/ABI\n\n# - major (ABI number) updated when there are changes in ABI (or removals)\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Used to test with C++98 STLs\n",
        "Line" : 305,
        "CharPositionInLine" : 51
      },
      "22" : {
        "Text" : "# Use of CPack only supported on Linux systems.\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 23
    },
    "build_defs.bzl" : {
      "ObjectId" : "af6761010b38855946066c01d9ed0b8c397b81d0",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   BUILD rules for generating flatbuffer files in various languages.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\nRules for building C++ flatbuffers with Bazel.\n\"\"\"",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Generates code files for reading/writing the given flatbuffers in the requested language using the public compiler.\n\n    Args:\n      name: Rule name.\n      srcs: Source .fbs files. Sent in order to the compiler.\n      outs: Output files from flatc.\n      language_flag: Target language flag. One of [-c, -j, -js].\n      out_prefix: Prepend this path to the front of all generated files except on\n          single source targets. Usually is a directory name.\n      includes: Optional, list of filegroups of schemas that the srcs depend on.\n      include_paths: Optional, list of paths the includes files can be found in.\n      flatc_args: Optional, list of additional arguments to pass to flatc.\n      reflection_name: Optional, if set this will generate the flatbuffer\n        reflection binaries for the schemas.\n      reflection_visiblity: The visibility of the generated reflection Fileset.\n      output_to_bindir: Passed to genrule for output to bin directory.\n\n\n    This rule creates a filegroup(name) with all generated source files, and\n    optionally a Fileset([reflection_name]) with all generated reflection\n    binaries.\n    \"\"\"",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# '$(@D)' when given a single source target will give the appropriate\n# directory. Appending 'out_prefix' is only necessary when given a build\n# target with multiple sources.",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# A filegroup for the `srcs`. That is, all the schema files for this\n# Flatbuffer set.",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "conan/CMakeLists.txt" : {
      "ObjectId" : "d32a013271f1aa8b4c003d5860b039d31cb0913b",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "conan/test_package/CMakeLists.txt" : {
      "ObjectId" : "9c1c78c582dd6d1e958dd60248ab9dd556861222",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "grpc/flatbuffers-java-grpc/pom.xml" : {
      "ObjectId" : "479905b6978106331d3d3984677278b525f9af15",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "grpc/pom.xml" : {
      "ObjectId" : "1f7b2367e547a01a3f5710e0549924931c93119d",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n                    os-maven-plugin is a Maven extension/plugin that generates various useful platform-dependent\n                    project properties normalized from ${os.detected.name} and ${os.detected.arch}.\n                ",
        "Line" : 66,
        "CharPositionInLine" : 20
      },
      "1" : {
        "Text" : " consider the benefits of publishing all maven artifacts in this project\n\n        <module>flatbuffers-compiler</module>\n        <module>flatbuffers-java</module>\n\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "grpc/samples/greeter/Makefile" : {
      "ObjectId" : "374670551d00409879b37841aef560aedd12658e",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "grpc/tests/pom.xml" : {
      "ObjectId" : "534897013032daede54efb61559e16f3187c13b5",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "<testSourceDirectory>${project.basedir}</testSourceDirectory>",
        "Line" : 70,
        "CharPositionInLine" : 77
      },
      "CommentCount" : 1
    },
    "pom.xml" : {
      "ObjectId" : "3e9191151a9ecdcb5230239329c09163dbd667f5",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tests/fuzzer/CMakeLists.txt" : {
      "ObjectId" : "7df5df2a2c9a79a553ac8205933d59d169bc4806",
      "LastModified" : "2019-03-25T23:17:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Typical slowdown introduced by MemorySanitizer (memory) is 3x.\n\n# '-fsanitize=address' not allowed with '-fsanitize=memory'\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable link-time optimisation\n\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -flto\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# https://llvm.org/docs/Passes.html\n\n# save IR to see call graph\n\n# make one bitcode file:> llvm-link *.bc -o out.bc\n\n# print call-graph:> opt out.bc -analyze -print-callgraph &> callgraph.txt\n\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -save-temps -flto\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FLATBUFFERS_ASSERT should assert in Release as well.\n\n# Redefine FLATBUFFERS_ASSERT macro definition.\n\n# Declare as PUBLIC to cover asserts in all included header files.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Force checking of RecursionError in the test\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Setup fuzzer tests.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "MAKEFILE" : 1,
    "BAZEL" : 2,
    "MAVEN" : 4
  },
  "ElapsedTime" : 2849
}