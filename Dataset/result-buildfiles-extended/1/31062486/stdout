{
  "Repository" : "31062486",
  "Revision" : "HEAD",
  "ObjectId" : "53eda031ed71e69269d5b0bba3c4a76c9f0ec73c",
  "CommitTime" : "2019-04-11T13:29:44Z",
  "Files" : {
    "FindProtobuf.cmake" : {
      "ObjectId" : "102ed4209a8689573c854b2598d32df4bc3fefed",
      "LastModified" : "2017-05-12T07:17:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindProtobuf\n\n# ------------\n\n#\n\n# Locate and configure the Google Protocol Buffers library.\n\n#\n\n# The following variables can be set and are optional:\n\n#\n\n# ``Protobuf_SRC_ROOT_FOLDER``\n\n#   When compiling with MSVC, if this cache variable is set\n\n#   the protobuf-default VS project build locations\n\n#   (vsprojects/Debug and vsprojects/Release\n\n#   or vsprojects/x64/Debug and vsprojects/x64/Release)\n\n#   will be searched for libraries and binaries.\n\n# ``Protobuf_IMPORT_DIRS``\n\n#   List of additional directories to be searched for\n\n#   imported .proto files.\n\n# ``Protobuf_DEBUG``\n\n#   Show debug messages.\n\n# ``Protobuf_USE_STATIC_LIBS``\n\n#   Set to ON to force the use of the static libraries.\n\n#   Default is OFF.\n\n#\n\n# Defines the following variables:\n\n#\n\n# ``Protobuf_FOUND``\n\n#   Found the Google Protocol Buffers library\n\n#   (libprotobuf & header files)\n\n# ``Protobuf_VERSION``\n\n#   Version of package found.\n\n# ``Protobuf_INCLUDE_DIRS``\n\n#   Include directories for Google Protocol Buffers\n\n# ``Protobuf_LIBRARIES``\n\n#   The protobuf libraries\n\n# ``Protobuf_PROTOC_LIBRARIES``\n\n#   The protoc libraries\n\n# ``Protobuf_LITE_LIBRARIES``\n\n#   The protobuf-lite libraries\n\n#\n\n# The following cache variables are also available to set or use:\n\n#\n\n# ``Protobuf_LIBRARY``\n\n#   The protobuf library\n\n# ``Protobuf_PROTOC_LIBRARY``\n\n#   The protoc library\n\n# ``Protobuf_INCLUDE_DIR``\n\n#   The include directory for protocol buffers\n\n# ``Protobuf_PROTOC_EXECUTABLE``\n\n#   The protoc compiler\n\n# ``Protobuf_LIBRARY_DEBUG``\n\n#   The protobuf library (debug)\n\n# ``Protobuf_PROTOC_LIBRARY_DEBUG``\n\n#   The protoc library (debug)\n\n# ``Protobuf_LITE_LIBRARY``\n\n#   The protobuf lite library\n\n# ``Protobuf_LITE_LIBRARY_DEBUG``\n\n#   The protobuf lite library (debug)\n\n#\n\n# Example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   find_package(Protobuf REQUIRED)\n\n#   include_directories(${Protobuf_INCLUDE_DIRS})\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS foo.proto)\n\n#   protobuf_generate_python(PROTO_PY foo.proto)\n\n#   add_executable(bar bar.cc ${PROTO_SRCS} ${PROTO_HDRS})\n\n#   target_link_libraries(bar ${Protobuf_LIBRARIES})\n\n#\n\n# .. note::\n\n#   The ``protobuf_generate_cpp`` and ``protobuf_generate_python``\n\n#   functions and :command:`add_executable` or :command:`add_library`\n\n#   calls only work properly within the same directory.\n\n#\n\n# .. command:: protobuf_generate_cpp\n\n#\n\n#   Add custom commands to process ``.proto`` files to C++::\n\n#\n\n#     protobuf_generate_cpp (<SRCS> <HDRS> [<ARGN>...])\n\n#\n\n#   ``SRCS``\n\n#     Variable to define with autogenerated source files\n\n#   ``HDRS``\n\n#     Variable to define with autogenerated header files\n\n#   ``ARGN``\n\n#     ``.proto`` files\n\n#\n\n# .. command:: protobuf_generate_python\n\n#\n\n#   Add custom commands to process ``.proto`` files to Python::\n\n#\n\n#     protobuf_generate_python (<PY> [<ARGN>...])\n\n#\n\n#   ``PY``\n\n#     Variable to define with autogenerated Python files\n\n#   ``ARGN``\n\n#     ``.proto`` filess\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Backwards compatibility\n\n# Define camel case versions of input variables\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Internal function: search for normal library as well as a debug one\n\n#    if the debug one is specified also include debug/optimized keywords\n\n#    in *_LIBRARIES variable\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use result recorded by a previous call.\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Honor cache entry used by CMake 3.5 and lower.\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Internal function: find threads library\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Main.\n\n#\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# By default have PROTOBUF_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Google's provided vcproj files generate libraries with a \"lib\"\n\n# prefix on Windows\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The Protobuf library\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#DOC \"The Google Protocol Buffers RELEASE Library\"\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The Protobuf Protoc Library\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Restore original find library prefixes\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find the include directory\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check Protobuf compiler version to be aligned with libraries version\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Backwards compatibility\n\n# Define upper case versions of output variables\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "sources/CMakeLists.txt" : {
      "ObjectId" : "c8b52208ecfd692351517c27c500973803ec580b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################################################\r\n\n## CMakeList.txt for YADOMS\r\n\n##\r\n\n## This file generates projects/makefiles for the complete Yadoms software\r\n\n##\r\n\n## This file actually works for\r\n\n##   Windows 7 x64, 10 x64, MSVC 12, MSVC 2015 (also works with MSVC Community edition)\r\n\n##   Ubuntu 12.04, 14.04, 16.04, g++ 4.7 .. 5.4\r\n\n##   Raspberry Raspbian Wheezy, g++ 4.7\r\n\n##   MacOSx Snow Leopard 10.8, Lion 10.9, yosemite 10.10 and ElCaptain 10.11 , g++ 4.8 and more\r\n\n##################################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check the minimum CMake version\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################################################################\r\n\n## Extract Yadoms version from Version.h\r\n\n##################################################################################################\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################################################################################################\r\n\n## Include other cmake scripts\r\n\n##################################################################################################\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# First checks (compilers versions...)\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# User specific configuration\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Cotire \r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Windows specific macro\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Compilers/IDE configurations\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# include debug helpers\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##################################################################################################\r\n\n## CPack installation preconfiguration\r\n\n##################################################################################################\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##################################################################################################\r\n\n## Project output configuration\r\n\n##################################################################################################\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#define outputs\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# First for the generic no-config case (e.g. with gcc)\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Second, for multi-config builds (e.g. msvc)\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##################################################################################################\r\n\n## Externals libraries (Boost, Thread, RT) only linked with\r\n\n##################################################################################################\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################\r\n\n# Boost\r\n\n#\r\n\n###############################################\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# define all needed boost libraries\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# search boost libs\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Thread Library\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## RT Library\r\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Poco dependencies\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## OpenSSL dependencies\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## IOKIT (needed for Mac)\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###############################################\r\n\n# OpenSSL\r\n\n#\r\n\n###############################################\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###############################################\r\n\n# POCO\r\n\n#\r\n\n# POCO_LIBS : define all required poco libraries\r\n\n###############################################\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "###############################################\r\n\n# Protobuf\r\n\n#\r\n\n###############################################\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#Helper (FindProtoBuf.cmake allows defining all variables before finding it)\r\n\n#In case Protobuf has been installed in a custom directory (${PROTOBUF_ROOT}) \r\n\n#then predefine all files and paths (make it works with old cmake <3.9)\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###############################################\r\n\n# define libraries to link with\r\n\n#\r\n\n###############################################\r\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##################################################################################################\r\n\n## Internal libraries (SQlite, Webem) completely build from sources\r\n\n##################################################################################################\r\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#Use Sqlite database system\r\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Use PostgreSQL database system\r\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#Use Poco web server\r\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#include libs (have their own CMakeList.txt)\r\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##################################################################################################\r\n\n## Yadoms\r\n\n##################################################################################################\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Executable sources\r\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Project folders\r\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Tools\r\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Add here server/tools/windows/tools/ sources\r\n",
        "Line" : 695,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Add here server/tools/mac/tools/ sources\r\n",
        "Line" : 701,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Add here server/tools/linux/tools/ sources\r\n",
        "Line" : 707,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Define include directories\r\n",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "################################################\r\n\n#### Database (common)\r\n\n################################################\r\n",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "################################################\r\n\n#### Database (SQlite)\r\n\n################################################\r\n",
        "Line" : 808,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "################################################\r\n\n#### Database (PostgreSQL)\r\n\n################################################\r\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Be careful updating PostgreSQL version : you maybe have to update ssleay32.dll dependency (MSVCRxxx.DLL)\r\n",
        "Line" : 837,
        "CharPositionInLine" : 3
      },
      "46" : {
        "Text" : "#add PostgreSQL as dependencies\r\n",
        "Line" : 863,
        "CharPositionInLine" : 9
      },
      "47" : {
        "Text" : "#Web server\r\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "##################################################################################################\r\n\n## Resources\r\n\n##################################################################################################\r\n",
        "Line" : 926,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "##################################################################################################\r\n\n## Pre build commands (only visual studio)\r\n\n##################################################################################################\r\n",
        "Line" : 931,
        "CharPositionInLine" : 3
      },
      "50" : {
        "Text" : "#update the Windows specific 'yadoms.rc' file which add properties to executable (version, releaseType=\r\n\n#as pre build step (yadoms.rc is modified only if needed, to avoid unjustified build\r\n",
        "Line" : 935,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# apply templating to the manifest for setting the version\r\n",
        "Line" : 938,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# If we build for windows systems, we also include the resource file\r\n\n# containing the manifest, icon and other resources\r\n",
        "Line" : 943,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# Add changelog file\r\n",
        "Line" : 954,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#define YADOMS output\r\n",
        "Line" : 959,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#nothing to do\r\n",
        "Line" : 963,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "##################################################################################################\r\n\n## Add natvis (allow better debugging within VisualStudio)\r\n\n##################################################################################################\r\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "##################################################################################################\r\n\n## yadoms-shared\r\n\n##################################################################################################\r\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "##################################################################################################\r\n\n## Plugins\r\n\n##################################################################################################\r\n\n# IPC messages static library for plugins\r\n",
        "Line" : 991,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# C++ API for plugins\r\n",
        "Line" : 997,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Plugins\r\n",
        "Line" : 1000,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "##################################################################################################\r\n\n## Script interpreters\r\n\n##################################################################################################\r\n\n# IPC messages static library for interpreters\r\n",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# C++ API for interpreters\r\n",
        "Line" : 1010,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# IPC messages static library for scripts\r\n",
        "Line" : 1013,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# C++ API for script wrappers\r\n",
        "Line" : 1016,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Interpreters\r\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "##################################################################################################\r\n\n## Include directories\r\n\n##################################################################################################\r\n",
        "Line" : 1024,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#setup include dirs. Add protobuf include dirs in first lines to make xcode-clang work)\r\n",
        "Line" : 1036,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "##################################################################################################\r\n\n## Link\r\n\n##################################################################################################\r\n",
        "Line" : 1047,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "##################################################################################################\r\n\n## RPATH\r\n\n##################################################################################################\r\n",
        "Line" : 1055,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#Fix RPATH for cross compilation of Yadoms\r\n",
        "Line" : 1059,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "##################################################################################################\r\n\n## COTIRE\r\n\n##################################################################################################\r\n",
        "Line" : 1063,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#Fix RPATH for cross compilation of yadoms_unity\r\n",
        "Line" : 1081,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "##################################################################################################\r\n\n## Manifest\r\n\n## Allow Windows10 detection ability by Poco\r\n\n##################################################################################################\r\n",
        "Line" : 1088,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#prepare version to be used in windows manifest (only 3 digits)\r\n",
        "Line" : 1095,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# apply templating to the manifest for setting the version\r\n",
        "Line" : 1099,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "#add a custom command\r\n",
        "Line" : 1104,
        "CharPositionInLine" : 6
      },
      "77" : {
        "Text" : "##################################################################################################\r\n\n## Post build commands\r\n\n##################################################################################################\r\n",
        "Line" : 1122,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#copy Poco depends\r\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "#copy PostgreSql depends\r\n",
        "Line" : 1141,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "#copy www directory into build directory\r\n",
        "Line" : 1158,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "##################################################################################################\r\n\n## CPACK\r\n\n##################################################################################################\r\n",
        "Line" : 1171,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#set yadoms executable to be copied in bindir\r\n",
        "Line" : 1176,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#set yadoms.ini configuration file to be copied in bindir\r\n",
        "Line" : 1179,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#Configure all building targets to allow finding dependencies next to them\r\n\n#so just copying boost and poco next to yadoms executable and it will work\r\n",
        "Line" : 1182,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#add depends\r\n",
        "Line" : 1190,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#add www directory\r\n",
        "Line" : 1202,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#configure the plugin to be grouped in sub components\r\n",
        "Line" : 1232,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#configure the script interpreters to be grouped in sub components\r\n",
        "Line" : 1241,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Custom target for packaging.\r\n",
        "Line" : 1252,
        "CharPositionInLine" : 1
      },
      "90" : {
        "Text" : "# There is a bug in NSI that does not handle full unix paths properly. Make\r\n\n# sure there is at least one set of four (4) backlasshes.\r\n",
        "Line" : 1256,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# Grant full authorisations for install directory (all users : identified by (S-1-1-0) )\r\n",
        "Line" : 1306,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# When calling \"make package\" it do not run \"make all\" \r\n\n# So package can be realized with make all_unity call before make package\r\n",
        "Line" : 1330,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "##################################################################################################\r\n\n## SONARQUBE ANALYSIS\r\n\n##################################################################################################\r\n",
        "Line" : 1338,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#TODO : add analysis for all libs (shared, xxx_IPC, plugins...)\r\n",
        "Line" : 1349,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 95
    },
    "sources/cmake/FindCppCheck.cmake" : {
      "ObjectId" : "69b9c519264e8c6bf157de48009968da1f0e97a7",
      "LastModified" : "2017-05-19T08:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindCppCheck\n\n# --------\n\n#\n\n# Find CppCheck executable\n\n#\n\n# This module finds an installed CppCheck.\n\n#\n\n# It takes as inputs :\n\n#\n\n#   CPPCHECK_VERSION_MINIMAL - Minimal CppCheck version to use\n\n#\n\n#\n\n# It sets the following variables:\n\n#\n\n#   CPPCHECK_FOUND - set to true if CppCheck is found\n\n#   CPPCHECK_DIR - the directory where CppCheck is installed\n\n#   CPPCHECK_EXECUTABLE - the path to the CppCheck executable\n\n#   CPPCHECK_VERSION   - the version number of the CppCheck executable\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sources/cmake/FindPoco.cmake" : {
      "ObjectId" : "ee1716c9ade8efcd11cc3648d1e1efbadf72b355",
      "LastModified" : "2018-06-07T14:26:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find the poco libraries\n\n#\n\n#Input\n\n#  POCO_ROOT should be defined, either in env vars, or in CMakeList.txt\n\n#\tset the POCO_USE_STATIC_RUNTIME to use Poco libs which are linked with static runtime (Windows)\n\n#\n\n#Output\n\n# \t${Poco_INCLUDE_DIRS}\t\tcontains all the include directories for Poco\n\n# \t${Poco_FOUND_LIBS}\t\tcontains all the library files\n\n#  ${POCO_VERSION}         contains the poco version : 1.6.0\n\n#  ${POCO_VERSION_FULL}    contains the poco full version : 1.6.0-all (2014-12-22)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Look for an installation.\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look in other places.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Read the version information from the VERSION file\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#check if version equal to minimum\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#then check if greater\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#\n\n# Look for an foundation lib directory\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Add in some path suffixes. These will have to be updated whenever a new Poco version comes out.\n",
        "Line" : 79,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# Assume we didn't find it.\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Now try to get the include and library path.\n",
        "Line" : 117,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#create the Poco_INCLUDE_DIRS which contains each library include directory\n",
        "Line" : 120,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "#make specific treatment with PocoNetSSL\n",
        "Line" : 124,
        "CharPositionInLine" : 9
      },
      "13" : {
        "Text" : "#the directory is not PocoNetSSL but PocoNetSSL_OpenSSL (but library is PocoNetSSL.dll/lib/so)\n",
        "Line" : 126,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "#include directory for current lib (ensure not starting with Poco\n",
        "Line" : 132,
        "CharPositionInLine" : 9
      },
      "15" : {
        "Text" : "#find the lib to link with\n",
        "Line" : 144,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 16
    },
    "sources/cmake/FindSonarScanner.cmake" : {
      "ObjectId" : "1807d63f2678f5b748d24a7e8ca7ef53b8547cd5",
      "LastModified" : "2017-05-19T08:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindSonarScanner\n\n# --------\n\n#\n\n# Find SonarQube scanner executable\n\n#\n\n# This module finds an installed SonarQube scanner.\n\n#\n\n# It takes as inputs :\n\n#\n\n#   SONARSCANNER_VERSION_MINIMAL - Minimal SonarQube scanner version to use\n\n#\n\n#\n\n# It sets the following variables:\n\n#\n\n#   SONARSCANNER_FOUND - set to true if SonarQube scanner is found\n\n#   SONARSCANNER_DIR - the directory where SonarQube scanner is installed\n\n#   SONARSCANNER_EXECUTABLE - the path to the SonarQube scanner executable\n\n#   SONARSCANNER_VERSION   - the version number of the SonarQube scanner executable\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sources/cmake/MSVCRuntime.cmake" : {
      "ObjectId" : "1471b40130a3743df50230c8f2bd4b912b79d5f2",
      "LastModified" : "2017-05-19T08:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default to statically-linked runtime.\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Set compiler options.\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "sources/cmake/PrecompiledHeader.cmake" : {
      "ObjectId" : "6b285a6c99a86f068d7f7a54562bcb1cdcdeaec4",
      "LastModified" : "2017-05-19T08:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro for setting up precompiled headers. Usage:\n\n#\n\n#   add_precompiled_header(target header.h [FORCEINCLUDE])\n\n#\n\n# MSVC: A source file with the same name as the header must exist and\n\n# be included in the target (E.g. header.cpp).\n\n#\n\n# MSVC: Add FORCEINCLUDE to automatically include the precompiled\n\n# header file from every source file.\n\n#\n\n# GCC: The precompiled header is always automatically included from\n\n# every header file.\n\n#\n\n# Copyright (C) 2009-2013 Lars Christensen <larsch@belunktum.dk>\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation files\n\n# (the ‘Software’), to deal in the Software without restriction,\n\n# including without limitation the rights to use, copy, modify, merge,\n\n# publish, distribute, sublicense, and/or sell copies of the Software,\n\n# and to permit persons to whom the Software is furnished to do so,\n\n# subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED ‘AS IS’, WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n\n# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\n# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\n# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sources/cmake/analysis.cmake" : {
      "ObjectId" : "81c0e708982f2dbc328019c203951e7e4891d42d",
      "LastModified" : "2017-05-19T08:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find analysis dependancies\n\n# - CppCheck\n",
        "Line" : 5,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "# - SonarQube scanner\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Add CppCheck analysis\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Build SonarQube properties file\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Create the analysis target\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "sources/cmake/compilers.cmake" : {
      "ObjectId" : "e54d6420a0a6b613aa77b7f774dcb676369e091b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compilers/IDE specific configurations\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#activate c++14 (now managed directly with those three lines\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#allow solution folders\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#global disable (for all targets)\n\n#disable warning C4996   Function call with parameters that may be unsafe \n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#######################################################\n\n## Activate warning level4, and disable useless ones ##\n\n#######################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# A lot of level 4 warnings are involved by boost.\n\n# Use the next link to see how to remove warning \n\n#https://svn.boost.org/trac/boost/wiki/Guidelines/WarningsGuidelines\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#disable warning C4512: assignment operator could not be generated\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#disable warning C4610: object 'class' can never be instantiated - user-defined constructor required : solution : same as C4512\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#disable warning C4127: conditional expression is constant\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#disable warning C4100: unreferenced formal parameter\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#disable warning C4714: function 'function' marked as __forceinline not inlined\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#disable warning C4510: 'class' : default constructor could not be generated\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#disable warning C4505: 'function' : unreferenced local function has been removed\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#disable warning C4503: 'identifier' : decorated name length exceeded, name was truncated\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#to allow BOOST in precompiled header (specify Precompiled Header Memory Allocation Limit) \n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#define as Windows7 version\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#macro must be defined when using boost::asio\n\n#  dont use third party script to get current windows version because it fails with win10 and greaters\n\n#  so just specify it as Win7 (avoid link with Win8 and Win10 sdk; because they are useless for our app)\n",
        "Line" : 56,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "#define Rapidjson configuration (make assert throw exceptions)\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Overrides compilers flag to link with static runtime libraries\n",
        "Line" : 65,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "#Manage c++11 (remove warnings and allow using precompiled header with cotire and g++)\n\n## include(CheckCXXCompilerFlag)\n\n## CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n\n## CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n\n## if(COMPILER_SUPPORTS_CXX11)\n\n##    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n\n## elseif(COMPILER_SUPPORTS_CXX0X)\n\n##    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n\n## else()\n\n##    message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n\n## endif()\n",
        "Line" : 75,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "#optimize binaries in release mode\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#warning: comparison of unsigned expression < 0 is always false (from boost)\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "#warning: unused parameter (from boost)\n",
        "Line" : 94,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "#warning:  typedef �value_t� locally defined but not used [-Wunused-local-typedefs]\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "#set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} \"-std=c++11 -stdlib=libc++\")\n",
        "Line" : 104,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "#Cross compiling for Raspberry\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# with -fPIC (don't distinguish platforms, already managed by cmake)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#check eclispe debug options\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#allow symbolinfo in output\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 29
    },
    "sources/cmake/cotire.cmake" : {
      "ObjectId" : "97275d649708355f5d8da0f695378e2b9ad9483e",
      "LastModified" : "2018-06-07T14:26:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2018 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# activate select policies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# disallow use of the LOCATION target property\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# targets may not link directly to themselves\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# utility targets may not have link dependencies\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# target in the TARGET signature of add_custom_command() must exist\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# error on non-existent target in get_target_property\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# error on non-existent dependency in add_dependencies\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# do not expand variables in target source entries\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# disallow add_custom_command SOURCE signatures\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# include TARGET_OBJECTS expressions in a target's SOURCES property\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# simplify variable reference and escape sequence evaluation\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# only interpret if() arguments as variables or keywords when unquoted\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# strict checking for break() command\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# as of CMake 3.1 target sources may contain generator expressions\n\n# since we cannot obtain required property information about source files added\n\n# through generator expressions at configure time, we filter them out\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# consider source file unless it is excluded explicitly\n",
        "Line" : 209,
        "CharPositionInLine" : 7
      },
      "19" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# separate filtered source files from already cotired ones\n\n# the COTIRE_TARGET property of a source file may be set while a target is being processed by cotire\n",
        "Line" : 228,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# add to excluded sources, if file has custom compile flags\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# add to excluded sources, if file has list of custom compile options\n",
        "Line" : 244,
        "CharPositionInLine" : 5
      },
      "23" : {
        "Text" : "# remove from head\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# BFS traversal of transitive libraries\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# option with separate argument\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# remember option\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# option with joined argument\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# flush remembered option\n",
        "Line" : 385,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 390,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# add target compile flags\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# target compile options\n",
        "Line" : 450,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# interface compile options from linked library targets\n",
        "Line" : 457,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# handle language standard properties\n",
        "Line" : 468,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# used compiler supports language standard levels\n",
        "Line" : 470,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# handle the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 488,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# handle visibility target properties\n",
        "Line" : 500,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# platform specific flags\n",
        "Line" : 511,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# default include dirs\n",
        "Line" : 546,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 553,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# parse additional system include directories from target compile flags\n",
        "Line" : 565,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# target include directories\n",
        "Line" : 577,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# interface include directories from linked library targets\n",
        "Line" : 589,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE refers to CMAKE_CURRENT_BINARY_DIR and CMAKE_CURRENT_SOURCE_DIR\n\n# at the time, when the target was created. These correspond to the target properties BINARY_DIR and SOURCE_DIR\n\n# which are only available with CMake 3.4 or later.\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# convert Windows paths in include directories to CMake paths\n",
        "Line" : 647,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 693,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# target export define symbol\n",
        "Line" : 697,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 702,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# target compile definitions\n",
        "Line" : 711,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# interface compile definitions from linked library targets\n",
        "Line" : 720,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and do not look at directory compile definitions, which we already handled\n",
        "Line" : 729,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 745,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# compiler launcher is only supported for Makefile and Ninja\n",
        "Line" : 903,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# IS_NEWER_THAN returns TRUE if both files have the same timestamp\n\n# thus we do the comparison in both directions to exclude ties\n",
        "Line" : 992,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 1036,
        "CharPositionInLine" : 3
      },
      "56" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 1044,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 1047,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# header is outside\n",
        "Line" : 1061,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 1072,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# check header file extension\n",
        "Line" : 1082,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# cl.exe /showIncludes produces different output, depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 1095,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# GCC like output\n",
        "Line" : 1108,
        "CharPositionInLine" : 3
      },
      "63" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 1124,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# canonize slashes\n",
        "Line" : 1127,
        "CharPositionInLine" : 1
      },
      "65" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 1129,
        "CharPositionInLine" : 1
      },
      "66" : {
        "Text" : "# then separate lines\n",
        "Line" : 1131,
        "CharPositionInLine" : 1
      },
      "67" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 1134,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 1152,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "# update stack\n",
        "Line" : 1162,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 1178,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 1180,
        "CharPositionInLine" : 5
      },
      "72" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 1187,
        "CharPositionInLine" : 5
      },
      "73" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 1196,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 1208,
        "CharPositionInLine" : 5
      },
      "75" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 1246,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "# add source files to be scanned\n",
        "Line" : 1257,
        "CharPositionInLine" : 1
      },
      "77" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1270,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# use absolute path as source file location\n",
        "Line" : 1421,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# create empty log file\n",
        "Line" : 1462,
        "CharPositionInLine" : 3
      },
      "80" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1478,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1520,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# append to list\n",
        "Line" : 1529,
        "CharPositionInLine" : 3
      },
      "83" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1532,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1536,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# append to list\n",
        "Line" : 1541,
        "CharPositionInLine" : 3
      },
      "86" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1547,
        "CharPositionInLine" : 3
      },
      "87" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fno-color-diagnostics do not print diagnostics in color\n\n# -Eonly just run preprocessor, no output\n",
        "Line" : 1555,
        "CharPositionInLine" : 3
      },
      "88" : {
        "Text" : "# append to list\n",
        "Line" : 1561,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1564,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Clang-cl.exe options used\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# -H print the name of each header file used\n\n# -fno-color-diagnostics do not print diagnostics in color\n\n# -Eonly just run preprocessor, no output\n",
        "Line" : 1568,
        "CharPositionInLine" : 3
      },
      "91" : {
        "Text" : "# append to list\n",
        "Line" : 1578,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1581,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1587,
        "CharPositionInLine" : 3
      },
      "94" : {
        "Text" : "# append to list\n",
        "Line" : 1596,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1599,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1603,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# append to list\n",
        "Line" : 1608,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1614,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1633,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# append to list\n",
        "Line" : 1644,
        "CharPositionInLine" : 3
      },
      "101" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1651,
        "CharPositionInLine" : 3
      },
      "102" : {
        "Text" : "# GCC options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# note that we cannot use -w to suppress all warnings upon pre-compiling, because turning off a warning may\n\n# alter compile flags as a side effect (e.g., -Wwrite-string implies -fconst-strings)\n",
        "Line" : 1658,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# append to list\n",
        "Line" : 1667,
        "CharPositionInLine" : 3
      },
      "104" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1670,
        "CharPositionInLine" : 3
      },
      "105" : {
        "Text" : "# Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# -fno-pch-timestamp disable inclusion of timestamp in precompiled headers (clang 4.0.0+)\n",
        "Line" : 1675,
        "CharPositionInLine" : 3
      },
      "106" : {
        "Text" : "# append to list\n",
        "Line" : 1683,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1689,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# Clang-cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zs syntax check only\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n",
        "Line" : 1696,
        "CharPositionInLine" : 3
      },
      "109" : {
        "Text" : "# append to list\n",
        "Line" : 1706,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1710,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1719,
        "CharPositionInLine" : 3
      },
      "112" : {
        "Text" : "# append to list\n",
        "Line" : 1731,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1738,
        "CharPositionInLine" : 4
      },
      "114" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1745,
        "CharPositionInLine" : 3
      },
      "115" : {
        "Text" : "# append to list\n",
        "Line" : 1760,
        "CharPositionInLine" : 4
      },
      "116" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1771,
        "CharPositionInLine" : 4
      },
      "117" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1790,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# append to list\n",
        "Line" : 1798,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1804,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1811,
        "CharPositionInLine" : 3
      },
      "121" : {
        "Text" : "# append to list\n",
        "Line" : 1813,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1816,
        "CharPositionInLine" : 4
      },
      "123" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1821,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# append to list\n",
        "Line" : 1826,
        "CharPositionInLine" : 3
      },
      "125" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1829,
        "CharPositionInLine" : 3
      },
      "126" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1834,
        "CharPositionInLine" : 3
      },
      "127" : {
        "Text" : "# append to list\n",
        "Line" : 1838,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1841,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# Clang-cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n",
        "Line" : 1845,
        "CharPositionInLine" : 3
      },
      "130" : {
        "Text" : "# append to list\n",
        "Line" : 1851,
        "CharPositionInLine" : 5
      },
      "131" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1854,
        "CharPositionInLine" : 5
      },
      "132" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1858,
        "CharPositionInLine" : 4
      },
      "133" : {
        "Text" : "# append to list\n",
        "Line" : 1860,
        "CharPositionInLine" : 5
      },
      "134" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1863,
        "CharPositionInLine" : 5
      },
      "135" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1871,
        "CharPositionInLine" : 3
      },
      "136" : {
        "Text" : "# append to list\n",
        "Line" : 1879,
        "CharPositionInLine" : 5
      },
      "137" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1885,
        "CharPositionInLine" : 5
      },
      "138" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1892,
        "CharPositionInLine" : 4
      },
      "139" : {
        "Text" : "# append to list\n",
        "Line" : 1894,
        "CharPositionInLine" : 5
      },
      "140" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1897,
        "CharPositionInLine" : 5
      },
      "141" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1902,
        "CharPositionInLine" : 3
      },
      "142" : {
        "Text" : "# append to list\n",
        "Line" : 1915,
        "CharPositionInLine" : 5
      },
      "143" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1923,
        "CharPositionInLine" : 5
      },
      "144" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1932,
        "CharPositionInLine" : 4
      },
      "145" : {
        "Text" : "# append to list\n",
        "Line" : 1934,
        "CharPositionInLine" : 5
      },
      "146" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1937,
        "CharPositionInLine" : 5
      },
      "147" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1974,
        "CharPositionInLine" : 2
      },
      "148" : {
        "Text" : "# Newer versions of Clang embed a compilation timestamp into the precompiled header binary,\n\n# which results in \"file has been modified since the precompiled header was built\" errors if ccache is used.\n\n# We work around the problem by disabling ccache upon pre-compiling the prefix header.\n",
        "Line" : 1979,
        "CharPositionInLine" : 3
      },
      "149" : {
        "Text" : "# PCH supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1998,
        "CharPositionInLine" : 2
      },
      "150" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 2002,
        "CharPositionInLine" : 2
      },
      "151" : {
        "Text" : "# all Unix Clang versions have PCH support\n",
        "Line" : 2010,
        "CharPositionInLine" : 3
      },
      "152" : {
        "Text" : "# only clang-cl is supported under Windows\n",
        "Line" : 2013,
        "CharPositionInLine" : 3
      },
      "153" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 2020,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# check if ccache is used as a compiler launcher\n",
        "Line" : 2029,
        "CharPositionInLine" : 1
      },
      "155" : {
        "Text" : "# verify that ccache configuration is compatible with precompiled headers\n\n# always check environment variable CCACHE_SLOPPINESS, because earlier versions of ccache\n\n# do not report the \"sloppiness\" setting correctly upon printing ccache configuration\n",
        "Line" : 2033,
        "CharPositionInLine" : 2
      },
      "156" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 2066,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# ${CMAKE_CFG_INTDIR} may reference a build-time variable when using a generator which supports configuration types\n",
        "Line" : 2085,
        "CharPositionInLine" : 1
      },
      "158" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 2128,
        "CharPositionInLine" : 4
      },
      "159" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 2139,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 2142,
        "CharPositionInLine" : 2
      },
      "161" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 2213,
        "CharPositionInLine" : 4
      },
      "162" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 2218,
        "CharPositionInLine" : 4
      },
      "163" : {
        "Text" : "# Clang looks for a precompiled header corresponding to the prefix header with the extension .pch appended\n",
        "Line" : 2221,
        "CharPositionInLine" : 4
      },
      "164" : {
        "Text" : "# GCC looks for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 2224,
        "CharPositionInLine" : 4
      },
      "165" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 2227,
        "CharPositionInLine" : 4
      },
      "166" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 2259,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 2263,
        "CharPositionInLine" : 2
      },
      "168" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 2268,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 2285,
        "CharPositionInLine" : 1
      },
      "170" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 2298,
        "CharPositionInLine" : 1
      },
      "171" : {
        "Text" : "# set up COTIRE_TARGET_SOURCES\n",
        "Line" : 2323,
        "CharPositionInLine" : 1
      },
      "172" : {
        "Text" : "# use absolute paths for generated files only, retrieving the LOCATION property is an expensive operation\n",
        "Line" : 2328,
        "CharPositionInLine" : 3
      },
      "173" : {
        "Text" : "# copy variable definitions to cotire target script\n",
        "Line" : 2335,
        "CharPositionInLine" : 1
      },
      "174" : {
        "Text" : "# omit COTIRE_*_INIT variables\n",
        "Line" : 2338,
        "CharPositionInLine" : 1
      },
      "175" : {
        "Text" : "# omit COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 2343,
        "CharPositionInLine" : 1
      },
      "176" : {
        "Text" : "# generate target script file\n",
        "Line" : 2366,
        "CharPositionInLine" : 1
      },
      "177" : {
        "Text" : "# use file(GENERATE ...) to expand generator expressions in the target script at CMake generate-time\n",
        "Line" : 2371,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# for MSVC, Intel and Clang-cl, we attach the precompiled header compilation to the host file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 2386,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# make object file generated from host file depend on prefix header\n",
        "Line" : 2395,
        "CharPositionInLine" : 3
      },
      "180" : {
        "Text" : "# mark host file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 2397,
        "CharPositionInLine" : 3
      },
      "181" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 2401,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# make precompiled header compilation depend on the actual compiler executable used to force\n\n# re-compilation when the compiler executable is updated. This prevents \"created by a different GCC executable\"\n\n# warnings when the precompiled header is included.\n",
        "Line" : 2410,
        "CharPositionInLine" : 3
      },
      "183" : {
        "Text" : "# for MSVC, Intel and clang-cl, we include the precompiled header in all but the host file\n\n# the host file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 2433,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2438,
        "CharPositionInLine" : 3
      },
      "185" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2445,
        "CharPositionInLine" : 3
      },
      "186" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 2451,
        "CharPositionInLine" : 3
      },
      "187" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2458,
        "CharPositionInLine" : 3
      },
      "188" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2461,
        "CharPositionInLine" : 2
      },
      "189" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 2468,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2475,
        "CharPositionInLine" : 1
      },
      "191" : {
        "Text" : "# make object files generated from source files depend on prefix header\n",
        "Line" : 2477,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n",
        "Line" : 2541,
        "CharPositionInLine" : 2
      },
      "193" : {
        "Text" : "# we also generate a generic, single prefix header which includes all language specific prefix headers\n",
        "Line" : 2552,
        "CharPositionInLine" : 3
      },
      "194" : {
        "Text" : "# because CMake PRE_BUILD command does not support dependencies,\n\n# we check dependencies explicity in cotire script mode when the pre-build action is run\n",
        "Line" : 2563,
        "CharPositionInLine" : 2
      },
      "195" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 2571,
        "CharPositionInLine" : 2
      },
      "196" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 2575,
        "CharPositionInLine" : 2
      },
      "197" : {
        "Text" : "# for MSVC, Intel and clang-cl, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 2579,
        "CharPositionInLine" : 3
      },
      "198" : {
        "Text" : "# set up compiled unity source dependencies via OBJECT_DEPENDS\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2602,
        "CharPositionInLine" : 2
      },
      "199" : {
        "Text" : "# the OBJECT_DEPENDS property requires a list of full paths\n",
        "Line" : 2608,
        "CharPositionInLine" : 3
      },
      "200" : {
        "Text" : "# unity file compilation results in potentially huge object file,\n\n# thus use /bigobj by default unter cl.exe and Windows Intel\n",
        "Line" : 2617,
        "CharPositionInLine" : 3
      },
      "201" : {
        "Text" : "# CMake 3.1.0 supports generator expressions in arguments to DEPENDS\n",
        "Line" : 2626,
        "CharPositionInLine" : 3
      },
      "202" : {
        "Text" : "# make prefix header generation depend on the actual compiler executable used to force\n\n# re-generation when the compiler executable is updated. This prevents \"file not found\"\n\n# errors for compiler version specific system header files.\n",
        "Line" : 2656,
        "CharPositionInLine" : 1
      },
      "203" : {
        "Text" : "# prevent pre-processing errors upon generating the prefix header when a target's generated include file does not yet exist\n\n# we do not add a file-level dependency for the target's generated files though, because we only want to depend on their existence\n\n# thus we make the prefix header generation depend on a custom helper target which triggers the generation of the files\n",
        "Line" : 2674,
        "CharPositionInLine" : 1
      },
      "204" : {
        "Text" : "# custom helper target has already been generated while processing a different language\n",
        "Line" : 2679,
        "CharPositionInLine" : 2
      },
      "205" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2704,
        "CharPositionInLine" : 2
      },
      "206" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2713,
        "CharPositionInLine" : 2
      },
      "207" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2722,
        "CharPositionInLine" : 2
      },
      "208" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2729,
        "CharPositionInLine" : 2
      },
      "209" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2907,
        "CharPositionInLine" : 3
      },
      "210" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2911,
        "CharPositionInLine" : 3
      },
      "211" : {
        "Text" : "# disable unity builds if automatic Qt processing is used\n",
        "Line" : 2917,
        "CharPositionInLine" : 2
      },
      "212" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2939,
        "CharPositionInLine" : 3
      },
      "213" : {
        "Text" : "# use all available cores\n",
        "Line" : 2963,
        "CharPositionInLine" : 3
      },
      "214" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2988,
        "CharPositionInLine" : 1
      },
      "215" : {
        "Text" : "# set up unity files for parallel compilation\n",
        "Line" : 2995,
        "CharPositionInLine" : 1
      },
      "216" : {
        "Text" : "# set up single unity file for prefix header generation\n",
        "Line" : 3005,
        "CharPositionInLine" : 1
      },
      "217" : {
        "Text" : "# set up prefix header\n",
        "Line" : 3010,
        "CharPositionInLine" : 1
      },
      "218" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 3012,
        "CharPositionInLine" : 2
      },
      "219" : {
        "Text" : "# check if selected language has enough sources at all\n",
        "Line" : 3021,
        "CharPositionInLine" : 2
      },
      "220" : {
        "Text" : "# first file in _sourceFiles is passed as the host file\n",
        "Line" : 3031,
        "CharPositionInLine" : 4
      },
      "221" : {
        "Text" : "# user provided prefix header must be included unconditionally\n",
        "Line" : 3038,
        "CharPositionInLine" : 3
      },
      "222" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 3042,
        "CharPositionInLine" : 1
      },
      "223" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 3070,
        "CharPositionInLine" : 2
      },
      "224" : {
        "Text" : "# MSVC, Intel and clang-cl only create precompiled header as a side effect\n",
        "Line" : 3076,
        "CharPositionInLine" : 4
      },
      "225" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 3091,
        "CharPositionInLine" : 2
      },
      "226" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 3112,
        "CharPositionInLine" : 3
      },
      "227" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 3120,
        "CharPositionInLine" : 3
      },
      "228" : {
        "Text" : "# handle object libraries which are part of the target's sources\n",
        "Line" : 3124,
        "CharPositionInLine" : 1
      },
      "229" : {
        "Text" : "# user provided prefix header must be included unconditionally by unity sources\n",
        "Line" : 3144,
        "CharPositionInLine" : 4
      },
      "230" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 3156,
        "CharPositionInLine" : 1
      },
      "231" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 3166,
        "CharPositionInLine" : 1
      },
      "232" : {
        "Text" : "# prevent AUTOMOC, AUTOUIC and AUTORCC properties from being set when the unity target is created\n",
        "Line" : 3169,
        "CharPositionInLine" : 1
      },
      "233" : {
        "Text" : "# generate unity target\n",
        "Line" : 3176,
        "CharPositionInLine" : 1
      },
      "234" : {
        "Text" : "# copy output location properties\n",
        "Line" : 3182,
        "CharPositionInLine" : 1
      },
      "235" : {
        "Text" : "# append relative COTIRE_UNITY_OUTPUT_DIRECTORY to target's actual output directory\n",
        "Line" : 3192,
        "CharPositionInLine" : 3
      },
      "236" : {
        "Text" : "# copy output name\n",
        "Line" : 3217,
        "CharPositionInLine" : 1
      },
      "237" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 3225,
        "CharPositionInLine" : 1
      },
      "238" : {
        "Text" : "# copy compile features\n",
        "Line" : 3237,
        "CharPositionInLine" : 1
      },
      "239" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 3242,
        "CharPositionInLine" : 1
      },
      "240" : {
        "Text" : "# copy link stuff\n",
        "Line" : 3250,
        "CharPositionInLine" : 1
      },
      "241" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 3262,
        "CharPositionInLine" : 1
      },
      "242" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 3265,
        "CharPositionInLine" : 1
      },
      "243" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 3271,
        "CharPositionInLine" : 1
      },
      "244" : {
        "Text" : "# copy Android platform specific stuff\n",
        "Line" : 3287,
        "CharPositionInLine" : 1
      },
      "245" : {
        "Text" : "# copy CUDA platform specific stuff\n",
        "Line" : 3295,
        "CharPositionInLine" : 1
      },
      "246" : {
        "Text" : "# use output name from original target\n",
        "Line" : 3299,
        "CharPositionInLine" : 1
      },
      "247" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 3304,
        "CharPositionInLine" : 1
      },
      "248" : {
        "Text" : "# enable parallel compilation for MSVC\n",
        "Line" : 3312,
        "CharPositionInLine" : 1
      },
      "249" : {
        "Text" : "# check if cotire can be applied to target at all\n",
        "Line" : 3335,
        "CharPositionInLine" : 1
      },
      "250" : {
        "Text" : "# resolve alias\n",
        "Line" : 3347,
        "CharPositionInLine" : 1
      },
      "251" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 3355,
        "CharPositionInLine" : 1
      },
      "252" : {
        "Text" : "# when not using configuration types, immediately create cotire intermediate dir\n",
        "Line" : 3371,
        "CharPositionInLine" : 1
      },
      "253" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 3376,
        "CharPositionInLine" : 1
      },
      "254" : {
        "Text" : "# use target's corresponding unity target, if available\n",
        "Line" : 3425,
        "CharPositionInLine" : 4
      },
      "255" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 3494,
        "CharPositionInLine" : 1
      },
      "256" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 3581,
        "CharPositionInLine" : 1
      },
      "257" : {
        "Text" : "# include target script if available\n",
        "Line" : 3593,
        "CharPositionInLine" : 1
      },
      "258" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 3595,
        "CharPositionInLine" : 2
      },
      "259" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 3611,
        "CharPositionInLine" : 1
      },
      "260" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on target script\n",
        "Line" : 3631,
        "CharPositionInLine" : 3
      },
      "261" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3634,
        "CharPositionInLine" : 3
      },
      "262" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on unity file and prefix dependencies\n",
        "Line" : 3653,
        "CharPositionInLine" : 3
      },
      "263" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3656,
        "CharPositionInLine" : 3
      },
      "264" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on files to be combined\n",
        "Line" : 3724,
        "CharPositionInLine" : 3
      },
      "265" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3727,
        "CharPositionInLine" : 3
      },
      "266" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 3750,
        "CharPositionInLine" : 1
      },
      "267" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 3787,
        "CharPositionInLine" : 3
      },
      "268" : {
        "Text" : "# MSVC default PCH memory scaling factor of 100 percent (75 MB) is too small for template heavy C++ code\n\n# use a bigger default factor of 170 percent (128 MB)\n",
        "Line" : 3821,
        "CharPositionInLine" : 2
      },
      "269" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 3835,
        "CharPositionInLine" : 3
      },
      "270" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3842,
        "CharPositionInLine" : 1
      },
      "271" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3895,
        "CharPositionInLine" : 1
      },
      "272" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3967,
        "CharPositionInLine" : 1
      },
      "273" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 4131,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 274
    },
    "sources/cmake/cppcheck.cmake" : {
      "ObjectId" : "3e8415cf6c1f99b1035c02fc104791386e440408",
      "LastModified" : "2017-05-19T08:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--check-config       ## Enable this line only to find missing include (don't do analysis otherwise)\n",
        "Line" : 24,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# Remove .h files\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Remove .rc files\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "sources/cmake/debugger.cmake" : {
      "ObjectId" : "c5378e4955b8709f65e6c3a39fc7dda1f4bc797f",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sources/cmake/mac.cmake" : {
      "ObjectId" : "31166f02b1369f030ffdf3fbe45559471c401294",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find IOKit on Mac\n\n#\n\n#  IOKIT_LIBRARY - the library to use IOKit\n\n#  IOKIT_FOUND - true if IOKit has been found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2009, Harald Fernengel <harry@kdevelop.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sources/cmake/preChecks.cmake" : {
      "ObjectId" : "a194c61c586e205150a670fd23ad1261cf42a1ed",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for minimum versions\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for minimum GCC version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for Windows10 SDK bad automatic selection\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# require at least gcc 4.5 (for boost::log)\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# require at least clang 3.2\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "sources/cmake/raspberrypi.cmake" : {
      "ObjectId" : "3c64924672a3a661588bc76d92bac256ebed1616",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this one is important\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#this one not so much\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User specific configuration\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cross compiler tools\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#define the systemname (for good package name)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "sources/cmake/sonarqube.cmake" : {
      "ObjectId" : "d6d7e1c91266e1e3fa95e786ab0b2db00485180d",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get_msbuild_entry(SONAR_LANGUAGE sonar.language c++)\n\n# get_msbuild_entry(SONAR_SOURCES sonar.inclusions  ${SONARQUBE_SOURCES})\n\n# get_msbuild_entry(SONAR_FORCE_ZERO_COVERAGE sonar.cxx.coverage.forceZeroCoverage False)\n\n# get_msbuild_entry(SONAR_INCLUDE_DIRECTORIES sonar.cxx.includeDirectories ${SONARQUBE_INCLUDES})\n\n# get_msbuild_entry(SONAR_HOST sonar.host.url http://localhost:9000)\n\n# get_root(LOCAL_REPO_PATH)\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# get_target_property(testTagets ${projectName} TESTED_BY)\n\n# set(unitReportPaths)\n\n# SET(i 1)\n\n# foreach (testTarget ${testTargets})\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# set(unitReportPaths ${unitReportPaths} ${LOCAL_REPO_PATH}/TestResultsSQ/File${i}.trx)\n\n# MATH(EXPR i \"${i}+1\")\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# ENDFOREACH()\n\n# JOIN(\"${unitReportPaths}\" \",\" unitReportPaths)\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# if (unitReportPaths)\n\n# get_msbuild_entry(SONAR_TESTS sonar.cxx.vstest.reportsPaths ${unitReportPaths})\n\n# endif()\n\n# # get_target_property(externalSources ${projectName} EXTERNAL_SOURCES)\n\n# # get_root(LOCAL_REPO_PATH)\n\n# # STRING(REGEX REPLACE \"${LOCAL_REPO_PATH}/\" \"\" externalSources \"${externalSources}\" )\n\n# # STRING(REGEX REPLACE \";\" \",\" externalSources \"${externalSources}\" )\n\n# # get_msbuild_entry(SONAR_HOST sonar.host.url http://localhost:9000)\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# #get_msbuild_entry(COVERAGE_UNIT_TESTS sonar.cxx.coverage.reportPath UnitTestCoverageResults.xml)\n\n# #get_msbuild_entry(COVERAGE_ACCEPTANCE_TESTS sonar.cxx.coverage.itReportPath AcceptanceTestCoverageResults.xml)\n\n# get_msbuild_entry(COVERAGE_ALL_TESTS sonar.cxx.coverage.overallReportPath ${LOCAL_REPO_PATH}/AllTestCoverageResults.xml)\n\n# get_msbuild_entry(COVERAGE_ACCEPTANCE_TESTS sonar.cxx.coverage.itReportPath ${LOCAL_REPO_PATH}/AllTestCoverageResults.xml)\n\n# get_msbuild_entry(CPPCHECK_REPORTS sonar.cxx.cppcheck.reportPath *_cppcheck.xml)\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Remove .rc files\n",
        "Line" : 105,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# TODO voir si utile get_std_headers_path(stdHeaders)\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#TODO ne pas laisser en dur\n",
        "Line" : 119,
        "CharPositionInLine" : 68
      },
      "9" : {
        "Text" : "#TODO ne pas laisser en dur\n",
        "Line" : 120,
        "CharPositionInLine" : 66
      },
      "10" : {
        "Text" : "#TODO en dur pour test\n",
        "Line" : 189,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# Converts a CMake list to a string containing elements separated by a separator\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#fixes escaping\n",
        "Line" : 206,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 13
    },
    "sources/cmake/version.cmake" : {
      "ObjectId" : "5e3c61914becb3842057fb9824e6b68a685f0755",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro extracts a package version from its \"changelog.md\" file\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sources/cmake/windows.cmake" : {
      "ObjectId" : "0a011fffccc5c5b0986afdc4d061f536a4b6e735",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This macro add some SDK dependencies to INSTALL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#in case of Windows 10, we should append universal crt files\n\n#could be found in Windows 10 sdk\n",
        "Line" : 3,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#choose x86/x64\n",
        "Line" : 12,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "#search for files\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "sources/external-libs/CMakeLists.txt" : {
      "ObjectId" : "8c7435af140665e0a61926b6fd9262d7bfc96960",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#place here all libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SQLite\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sources/external-libs/SQLite/CMakeLists.txt" : {
      "ObjectId" : "be661ea1e0a73d789fc90afafee26c9cf34938c1",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Required CMake modules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Static and shared library version of sqlite3.\n\n# libgpkg is not linked against this version of sqlite3, it is only used to:\n\n# - provide the sqlite3 and sqlite3ext headers\n\n# - provide a sqlite3 binary with a known configuration for the unit tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions ( -D_HAVE_SQLITE_CONFIG_H=1 )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Strip 'lib' prefix when compiling for windows\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set warning level3 only for this project\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "sources/interpreter_IPC/CMakeLists.txt" : {
      "ObjectId" : "75b06ed383ef0e0bf27169e67f42a718f06d7ea0",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make a static library to use to encode/decode IPC messages using Protobuf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################################################\n\n## Add natvis (allow better debugging within VisualStudio)\n\n##################################################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################################################################\n\n## COTIRE\n\n##################################################################################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this target is for protobuf and precompiled header has no real sense\n",
        "Line" : 51,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#Ignore some warnings under VisualStudio for Protobuf generated files\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sources/interpreter_cpp_api/CMakeLists.txt" : {
      "ObjectId" : "bc29440cd7c9c4d79b15c589bc4f0b1e2d9eaeb1",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make a static library to link with C++ interpreters\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define the list of all include dirs\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################################################################\n\n## Add natvis (allow better debugging within VisualStudio)\n\n##################################################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################################################################################################\n\n## COTIRE\n\n##################################################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sources/plugin_IPC/CMakeLists.txt" : {
      "ObjectId" : "be76c3b5e274a1deff6a5b40db8e8992ac7a034f",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make a static library to use to encode/decode IPC messages using Protobuf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################################################\n\n## Add natvis (allow better debugging within VisualStudio)\n\n##################################################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this target is for protobuf and precompiled header has no real sense\n",
        "Line" : 40,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#Ignore some warnings under VisualStudio for Protobuf generated files\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sources/plugin_cpp_api/CMakeLists.txt" : {
      "ObjectId" : "5f00b8e94b31159cf08587751121c50c674d6388",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make a static library to link with C++ plugins\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define the list of all include dirs\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################################################################\n\n## Add natvis (allow better debugging within VisualStudio)\n\n##################################################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "sources/plugins/CMakeLists.txt" : {
      "ObjectId" : "652030de743b4a916ff03f3e95bbec2ade848f04",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This file automatically search and add all plugins found from all subdirectories\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This macro list all subdirectories\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#list all subdirectories from here\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#foreach subdirectory, search for CMakeList.txt\r\n\n#if there is one, then it is a plugin\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#share the plugin list with main cmake script\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sources/plugins/EnOcean/CMakeLists.txt" : {
      "ObjectId" : "f3202c7ed6ef55479193cea935d9a24fb8c8b1b9",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Plugin needs Python to generate code\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Code generator configuration\r\n\n#########################################\r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# package.in.json is firstly patched at makefile generation time to set plugin version number.\r\n\n# Set result file in PACKAGE_JSON_IN_FILE.\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if ENOCEAN_ADDITIONAL_INC_DIR or ENOCEAN_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sources/plugins/FreeMobileSMS/CMakeLists.txt" : {
      "ObjectId" : "def780479d84d5e63c9c81f7281b20473b5214c7",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n\n##add_definitions(\"-lwiringPi\")\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FREEMOBILESMS_INCLDIR or FREEMOBILESMS_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/IPX800/CMakeLists.txt" : {
      "ObjectId" : "8c76de1c1b67917db8fba1d71e5c9bafd42197ea",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/Linky/CMakeLists.txt" : {
      "ObjectId" : "4e35144a782a511012422a579846a250769f2c70",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add Windows sources\r\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Add Common Linux and RaspberryPI sources\r\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if LINKY_ADDITIONAL_INC_DIR or LINKY_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################\r\n\n## post-build commands\r\n\n## copy files to build directory\r\n\n## Use PLUGIN_POST_BUILD_COPY_FILE and PLUGIN_POST_BUILD_COPY_DIRECTORY macros\r\n\n## to copy extra-files to the binary folder\r\n\n#########################################\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sources/plugins/MailSender/CMakeLists.txt" : {
      "ObjectId" : "10e53e38d523545d1b4e57a1b2f53b7835ee8bb5",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if MAILSENDER_ADDITIONAL_INC_DIR or MAILSENDER_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "sources/plugins/MegatecUps/CMakeLists.txt" : {
      "ObjectId" : "6f9e72e644e66aaaf3ff9329f79cb42365e59628",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if MEGATECUPS_ADDITIONAL_INC_DIR or MEGATECUPS_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "sources/plugins/OneWire/CMakeLists.txt" : {
      "ObjectId" : "a7c1d2034c7e2550a101c1ad9e735220d5b9216a",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This plugin is linux-only\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 7,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 124,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 136,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 143,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 6
    },
    "sources/plugins/OrangeBusiness/CMakeLists.txt" : {
      "ObjectId" : "f085ae2725e630eae0b908b2c5e05de2db5aae9e",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Place here all the plugin source files\n\n#########################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n## Place here all additional groups (solution folder)\n\n#########################################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\n\n## Place here all additional include directories\n\n## (by default yadoms-shared and boost are included)\n\n#########################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n## Place here all additional libraries to link with\n\n## (by default yadoms-shared and boost are included)\n\n#########################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\n\n## Place here all additional compiler flags\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\n\n#########################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\n\n## Always leave these lines to configure plugin correctly\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\n\n#########################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/Piface2/CMakeLists.txt" : {
      "ObjectId" : "279623b3f6aa248100d8542e4d96e49fe7eb797d",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 7,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n",
        "Line" : 60,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 65,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "sources/plugins/Piface2/libmcp23s17/CMakeLists.txt" : {
      "ObjectId" : "eab8e816bfd1d79c776fff512a98afe0028dbbf9",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################\n\n## The file allow building libmcp23s17\n\n##\n\n## Build tested with:\n\n##\t\t- Raspberry\n\n##\n\n#########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Main sources\n\n#########################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n## Define sourcegroup for IDE (msvc, xcode,...)\n\n#########################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\n\n## Define project outputs\n\n#########################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n## Define all include path\n\n#########################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sources/plugins/Piface2/libmcp23s17/Makefile" : {
      "ObjectId" : "6c2ea98672f3a3c404eb16a5bba9384d535fbedf",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ------------ MAGIC BEGINS HERE -------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatic generation of some important lists\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up the output file names for the different output types\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link the object files, or archive into a static library\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "sources/plugins/Piface2/libpifacedigital/CMakeLists.txt" : {
      "ObjectId" : "4bb4791b9065daf58d827efe20b43c49eb51b7da",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################\n\n## The file allow building libpifacedigital\n\n##\n\n## Build tested with:\n\n##\t\t- Raspberry\n\n##\n\n#########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Main sources\n\n#########################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n## Define sourcegroup for IDE (msvc, xcode,...)\n\n#########################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(\"PIFACEDIGITAL_SOURCES:\" ${PIFACEDIGITAL_SOURCES})\n\n#MESSAGE(\"MCP23S17_INCLUDE_DIRECTORY:\" ${MCP23S17_INCLUDE_DIRECTORY})\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n## Define project outputs\n\n#########################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\n\n## Define all include path\n\n#########################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "sources/plugins/Piface2/libpifacedigital/Makefile" : {
      "ObjectId" : "02c68d1ae8a4a1db04f3b5db65bfd9bbfffd7795",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ------------ MAGIC BEGINS HERE -------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatic generation of some important lists\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up the output file names for the different output types\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link the object files, or archive into a static library\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "sources/plugins/RfPlayer/CMakeLists.txt" : {
      "ObjectId" : "d902ccfbce18a53a08302ec13c401c8694b047fe",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sources/plugins/RfxLanXpl/CMakeLists.txt" : {
      "ObjectId" : "151c621a7b5365e4d29f109ecaba4167ac2ce9f8",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n\n##add_definitions(\"-lwiringPi\")\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/Rfxcom/CMakeLists.txt" : {
      "ObjectId" : "d212b3f4d993ab8d23518328d3022b1aa797b72d",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if RFXCOM_ADDITIONAL_INC_DIR or RFXCOM_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "sources/plugins/Sigfox/CMakeLists.txt" : {
      "ObjectId" : "114a3d5befecf49c455aca2dd5113be958d7b413",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/SmsDialer/CMakeLists.txt" : {
      "ObjectId" : "29401b05f55cda937858704fc1bbd0a756c209be",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check dependencies\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 6,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if SMS_DIALER_ADDITIONAL_INC_DIR or SMS_DIALER_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 54,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "sources/plugins/SmsDialer/findGammu.cmake" : {
      "ObjectId" : "d44cae5597a8cafb0747438b51b16de90086453a",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Gammu library Finder\n\n# Inputs :\n\n#   - GAMMU_ROOT : Gammu root directory\n\n# Outputs : this module defines :\n\n#   - GAMMU_FOUND, true if Gammu was found\n\n#   - GAMMU_INCLUDE_DIRS, where to find gammu.h\n\n#   - GAMMU_LIBRARIES, where to find libraries needed to build with Gammu\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directory\n",
        "Line" : 14,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Libraries\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Additional libraries (required by Gammu)\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# - string.lib\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# - win32dirent.lib\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Add additional libraries\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GAMMU_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 8
    },
    "sources/plugins/SomfySituo/CMakeLists.txt" : {
      "ObjectId" : "e6ef1b0383d5327157f2959e761d9821d82b7762",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Place here all the plugin source files\n\n#########################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n## Place here all additional groups (solution folder)\n\n#########################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\n\n## Place here all additional include directories\n\n## (by default yadoms-shared and boost are included)\n\n#########################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n## Place here all additional libraries to link with\n\n## (by default yadoms-shared and boost are included)\n\n#########################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\n\n## Place here all additional compiler flags\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\n\n#########################################\n\n##add_definitions(\"-lwiringPi\")\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\n\n## Always leave these lines to configure plugin correctly\n\n## even if EMPTY_PLUGIN_INCLDIR or EMPTY_PLUGIN_LINK are empty\n\n#########################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/SomfySituo/hardware/Firmware/Makefile" : {
      "ObjectId" : "fca8e2ccd1ea7fad28edee1341799410c330132e",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#  There exist several targets which are by default empty and which can be \n\n#  used for execution of your targets. These targets are usually executed \n\n#  before and after some main targets. They are: \n\n#\n\n#     .build-pre:              called before 'build' target\n\n#     .build-post:             called after 'build' target\n\n#     .clean-pre:              called before 'clean' target\n\n#     .clean-post:             called after 'clean' target\n\n#     .clobber-pre:            called before 'clobber' target\n\n#     .clobber-post:           called after 'clobber' target\n\n#     .all-pre:                called before 'all' target\n\n#     .all-post:               called after 'all' target\n\n#     .help-pre:               called before 'help' target\n\n#     .help-post:              called after 'help' target\n\n#\n\n#  Targets beginning with '.' are not intended to be called on their own.\n\n#\n\n#  Main targets can be executed directly, and they are:\n\n#  \n\n#     build                    build a specific configuration\n\n#     clean                    remove built files from a configuration\n\n#     clobber                  remove all built files\n\n#     all                      build all configurations\n\n#     help                     print help mesage\n\n#  \n\n#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and\n\n#  .help-impl are implemented in nbproject/makefile-impl.mk.\n\n#\n\n#  Available make variables:\n\n#\n\n#     CND_BASEDIR                base directory for relative paths\n\n#     CND_DISTDIR                default top distribution directory (build artifacts)\n\n#     CND_BUILDDIR               default top build directory (object files, ...)\n\n#     CONF                       name of current configuration\n\n#     CND_ARTIFACT_DIR_${CONF}   directory of build artifact (current configuration)\n\n#     CND_ARTIFACT_NAME_${CONF}  name of build artifact (current configuration)\n\n#     CND_ARTIFACT_PATH_${CONF}  path to build artifact (current configuration)\n\n#     CND_PACKAGE_DIR_${CONF}    directory of package (current configuration)\n\n#     CND_PACKAGE_NAME_${CONF}   name of package (current configuration)\n\n#     CND_PACKAGE_PATH_${CONF}   path to package (current configuration)\n\n#\n\n# NOCDDL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Environment \n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add your pre 'build' code here...\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add your post 'build' code here...\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clean\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add your pre 'clean' code here...\n\n# WARNING: the IDE does not call this target since it takes a long time to\n\n# simply run make. Instead, the IDE removes the configuration directories\n\n# under build and dist directly without calling make.\n\n# This target is left here so people can do a clean when running a clean\n\n# outside the IDE.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add your post 'clean' code here...\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# clobber\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add your pre 'clobber' code here...\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add your post 'clobber' code here...\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add your pre 'all' code here...\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add your post 'all' code here...\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# help\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add your pre 'help' code here...\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add your post 'help' code here...\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include project implementation makefile\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# include project make variables\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "sources/plugins/SomfySituo/hardware/Kicad-design-PicKit2Adapter/PicKit2Adapter.pro" : {
      "ObjectId" : "9428bb70663518817f8b2b9c70c4a772e1864a98",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "sources/plugins/SomfySituo/hardware/Kicad-design/SomfySituo5IoAdapter.pro" : {
      "ObjectId" : "4a6c454641bd3bedc1d3df46fd17993738f6c907",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "sources/plugins/SystemInformation/CMakeLists.txt" : {
      "ObjectId" : "cd695209bc5a8a1cc2122017261b19e1d2aee718",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add Windows sources\r\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Add Common Linux and RaspberryPI sources\r\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Add RaspberryPi Specific sources\r\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sources/plugins/TeleInfo/CMakeLists.txt" : {
      "ObjectId" : "0ed0e47a4a83522f02e66480a1f0f6d8efe1eff1",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add Windows sources\r\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Add Common Linux and RaspberryPI sources\r\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if TELEINFO_ADDITIONAL_INC_DIR or TELEINFO_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################\r\n\n## post-build commands\r\n\n## copy files to build directory\r\n\n## Use PLUGIN_POST_BUILD_COPY_FILE and PLUGIN_POST_BUILD_COPY_DIRECTORY macros\r\n\n## to copy extra-files to the binary folder\r\n\n#########################################\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sources/plugins/WES/CMakeLists.txt" : {
      "ObjectId" : "d68982536a1992abbc22e7725c4c00dbd7f87a2a",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if WES_PLUGIN_INCLDIR or WES_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/WeatherUnderGround/CMakeLists.txt" : {
      "ObjectId" : "74058ca7af743178dcf50c70f5f51f7e5a4ff666",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Always leave this three lines to configure plugin correctly\r\n\n## even if WUNDERGROUND_ADDITIONAL_INC_DIR or WUNDERGROUND_ADDITIONAL_LIB are empty\r\n\n#########################################\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "sources/plugins/WebConnectionQuality/CMakeLists.txt" : {
      "ObjectId" : "420d1b0169b206b789dadca0e654b88fde99497d",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if WEBCONNECTIONQUALITY_PLUGIN_INCLDIR or WEBCONNECTIONQUALITY_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## post-build commands\r\n\n## copy files to build directory\r\n\n## Use PLUGIN_POST_BUILD_COPY_FILE and PLUGIN_POST_BUILD_COPY_DIRECTORY macros\r\n\n## to copy extra-files to the binary folder\r\n\n#########################################\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/YadomsPluginsCommon.cmake" : {
      "ObjectId" : "e834e5e1423f2f6408d8a547551c92eeb579fc3a",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros for setting up a plugin\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use a specific package.json file\r\n\n# If used, plugin must do its post-build copy\r\n\n# Note that ${CMAKE_CURRENT_BINARY_DIR}/package.json remains generated from\r\n\n# package.in.json to include plugin version number at makefile generation time.\r\n\n# Plugin can work with this file to produced a specific package.json file.\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use a specific locales directory\r\n\n# If used, plugin must do its post-build copy\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround to force CMake to rebuild makefile when changelog.md is updated\r\n",
        "Line" : 19,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Retrieve plugin version\r\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "##################################################################################################\r\n\n## Resources\r\n\n##################################################################################################\r\n",
        "Line" : 61,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "##################################################################################################\r\n\n## Pre build commands (only visual studio)\r\n\n##################################################################################################\r\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#Try to use plugin icon\r\n",
        "Line" : 72,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "#update the Windows specific 'plugin.rc' file which add properties to executable (version, releaseType)\r\n\n#as pre build step (plugin.rc is modified only if needed, to avoid unjustified build\r\n\n# apply templating to the manifest for setting the version\r\n\n# PLUGIN_EXE_ICON is used in \"plugin.rc.in\"\r\n",
        "Line" : 78,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# If we build for windows systems, we also include the resource file\r\n\n# containing the manifest, icon and other resources\r\n",
        "Line" : 86,
        "CharPositionInLine" : 9
      },
      "10" : {
        "Text" : "# Build package.json (add version to package.in.json from changelog.md)\r\n",
        "Line" : 101,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#define the list of all include dirs\r\n",
        "Line" : 111,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "#in case of OpenSSL found, just add openssl include dir\r\n",
        "Line" : 120,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "##################################################################################################\r\n\n## Add natvis (allow better debugging within VisualStudio)\r\n\n##################################################################################################\r\n",
        "Line" : 138,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "#configure plugin as installable component if not in devlopment state (target name begin by 'dev-')\r\n",
        "Line" : 145,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "##################################################################################################\r\n\n## RPATH\r\n\n##################################################################################################\r\n",
        "Line" : 154,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "#Fix RPATH for cross compilation\r\n",
        "Line" : 158,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "#Fix RPATH for cross compilation\r\n",
        "Line" : 181,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "##################################################################################################\r\n\n## Manifest\r\n\n##################################################################################################\r\n",
        "Line" : 188,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "#prepare version to be used in windows manifest (only 3 digits)\r\n",
        "Line" : 196,
        "CharPositionInLine" : 9
      },
      "20" : {
        "Text" : "# apply templating to the manifest for setting the version\r\n",
        "Line" : 199,
        "CharPositionInLine" : 9
      },
      "21" : {
        "Text" : "#add a custom command\r\n",
        "Line" : 204,
        "CharPositionInLine" : 9
      },
      "22" : {
        "Text" : "# Post-build copy of required files\r\n",
        "Line" : 221,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# brief Copy a file to the target output dir\r\n\n# param [in] _targetName The current target (ie: pluginName)\r\n\n# param [in] _resource The resource (absolute path) to copy to the target output dir\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# brief Copy a directory (and its content) to the target output dir\r\n\n# param [in] _targetName The current target (ie: pluginName)\r\n\n# param [in] _resource The resource folder (absolute path) to copy to the target output dir\r\n\n# param [in/optional] To specify the target destination (if omit, destination will be the last part of _resource tree)\r\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# A target folder is given\r\n",
        "Line" : 281,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# No target folder\r\n",
        "Line" : 284,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 27
    },
    "sources/plugins/ZWave/CMakeLists.txt" : {
      "ObjectId" : "d684f5050bf3e2aeb0e94798be54c874b42d3fb1",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Remove specific warnings (due to OpenZWave)\r\n\n#########################################\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add platform specific link libs\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n\n##add_definitions(\"-lwiringPi\")\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\r\n\n## Copy configuration files\r\n\n#########################################\r\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "sources/plugins/ZWave/FindUDev.cmake" : {
      "ObjectId" : "866608dc3585225dbdc5400f459b3f74fe7f13b4",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# razor-de: Configure libudev environment\n\n#\n\n# UDEV_FOUND - system has a libudev\n\n# UDEV_INCLUDE_DIR - where to find header files\n\n# UDEV_LIBRARIES - the libraries to link against udev\n\n# UDEV_STABLE - it's true when is the version greater or equals to 143 - version when the libudev was stabilized in its API\n\n#\n\n# copyright (c) 2011 Petr Vanek <petr@scribus.info>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# retvale is 0 of the condition is \"true\" so we need to negate the value...\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "sources/plugins/ZWave/OpenZWave/CMakeLists.txt" : {
      "ObjectId" : "53ff901e7aff90745f66b50e14d403f3c006a03b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################\n\n## The file allow building Openzwave for anyplatform\n\n##\n\n## Build tested with:\n\n##\t\t- Windows /VisualStudio 2013\n\n##\t\t- MacOS / Xcode\n\n##\t\t- Linux Ubuntu / makefile\n\n##\t\t- Raspberry (cross compiled from Ubuntu) / makefile\n\n##\n\n#########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Define the main folder name\n\n#########################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#When changing openzwave, remeber to enable exceptions, by undefining OPENZWAVE_DISABLE_EXCEPTIONS (cpp/src/Defs.h, line 149 in v1.4.1)\n\n#Include \"vers.cpp\" to git manually\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\n\n## Main sources\n\n#########################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n## CommandClasses sources\n\n#########################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\n\n## ValueClasses sources\n\n#########################################\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\n\n## Platform sources\n\n#########################################\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\n\n## Platform specific sources\n\n#########################################\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################\n\n## AES sources\n\n#########################################\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#########################################\n\n## TinyXML sources\n\n#########################################\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#########################################\n\n## HidAPI sources\n\n#########################################\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#########################################\n\n## All sources\n\n#########################################\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#########################################\n\n## Define sourcegroup for IDE (msvc, xcode,...)\n\n#########################################\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#########################################\n\n## Remove specific warnings\n\n#########################################\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#########################################\n\n## Define project outputs\n\n#########################################\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#########################################\n\n## Define all include path\n\n#########################################\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#for raspberry, we need to use libudev folder\n",
        "Line" : 400,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#########################################\n\n## Windows specific processing\n\n#########################################\n\n# Strip 'lib' prefix when compiling for windows\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#set warning level3 only for this project\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#specify that openzwave use exception instead of exit statements\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#########################################\n\n## Share include directories for project which use openzwave\n\n#########################################\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#share also config directory\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/Makefile" : {
      "ObjectId" : "18f167321bae4d5dcd78af26158aad5030ff41b1",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for OpenzWave Mac OS X applications\n\n# Greg Satz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU make only\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# requires libudev-dev\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/build/Makefile" : {
      "ObjectId" : "b036716546acd7f733989611134b2874d7e0aaad",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for OpenZWave Linux build\n\n# Greg Satz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU make only\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linux requires libudev-dev\n\n# FreeBSD requires port misc/e2fsprogs-libuuid\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#these variables can be modified by the user if needed\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# what flags we will use for compiling in debug mode\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# what flags we will use for compiling in release mode\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#what flags we will use for linking in debug mode\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Mac prefers a dylib, not a so\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#if we are on a Mac, add these flags and libs to the compile and link phases \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Newer macOS releases don't support i386 so only build 64-bit\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Pre FreeBSD 10.2 we have no native, or \"old\" native iconv.h (non-posix compliant\n\n# const modifiers)\n\n# For these, require libiconv pkg to be installed.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# <10.2\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Installed, use it\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# User application *must* use -liconv; we don't do any linking from this file since we only\n\n# build a library.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For 10.2 and later, use iconv from base, no extra include path required.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#where to put the temporary library\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# USE_HID\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# we do not want the libusb version\n",
        "Line" : 118,
        "CharPositionInLine" : 67
      },
      "18" : {
        "Text" : "# USE_HID\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "#create a vers.cpp file that contains our version and subversion revisions\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#$(OBJDIR)/vers.o:\t$(top_builddir)/vers.cpp\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/build/windows/mingw-w64/Makefile" : {
      "ObjectId" : "bd588ef0ad893172b1eba06de9b0c55060a316ea",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for OpenZWave: MinGW-W64 build\n\n# Stefan Broekman\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Change for DEBUG or RELEASE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we do not want the libusb version\n",
        "Line" : 50,
        "CharPositionInLine" : 67
      },
      "3" : {
        "Text" : "#Shared lib compiles and links but not working in projects yet. Disabled for now.\n\n#shared:\t$(LIBDIR)/$(SHARED_LIB_NAME)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include \"Defs.h\" > $(top_srcdir)/cpp/src/vers.cpp\n",
        "Line" : 80,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 5
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/build/windows/mingw32/Makefile" : {
      "ObjectId" : "783975200a4303e06639631966b073a22e798468",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for OpenZWave MingW32 build\n\n# Maarten Damen\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Change for DEBUG or RELEASE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we do not want the libusb version\n",
        "Line" : 40,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 3,
      "Errorlog" : "line 36:23 token recognition error at: '\\1'\nline 68:68 token recognition error at: '\";' > vers.c\\n\\nvers.o:\\tvers.c\\n\\n$(LIBDIR)/openzwave.a:\\t$(patsubst %.cpp,%.o,$(tinyxml)) \\\\n\\t\\t\\t$(patsubst %.c,%.o,$(hidapi)) \\\\n\\t\\t\\t$(patsubst %.cpp,%.o,$(cclasses)) \\\\n\\t\\t\\t$(patsubst %.cpp,%.o,$(vclasses)) \\\\n\\t\\t\\t$(patsubst %.c,%.o,$(aes)) \\\\n\\t\\t\\t$(patsubst %.cpp,%.o,$(pform)) \\\\n\\t\\t\\t$(patsubst %.cpp,%.o,$(indep)) vers.o\\n\\t$(AR) $@ $?\\n\u0000'\n"
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/hidapi/Makefile.am" : {
      "ObjectId" : "cf4f7ca4c995bf3d67f27aca6316f984f790bbaa",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/hidapi/libusb/Makefile.am" : {
      "ObjectId" : "7f6c9dc11ac64b4325af9455591ca3a59f917b32",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/hidapi/linux/Makefile.am" : {
      "ObjectId" : "230eeb75a207745621b72a1a12bddf1c182cdade",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/hidapi/mac/Makefile.am" : {
      "ObjectId" : "23d96e08fb6c25a41e940a8dd0900353231dcf1c",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/hidapi/windows/Makefile.am" : {
      "ObjectId" : "97e261ac9ee1edaab169dbf068340240c823a257",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "sources/plugins/ZWave/OpenZWave/openzwave-1.4.3319/cpp/tinyxml/Makefile" : {
      "ObjectId" : "58e3784a5cddcccd28e942ba71eb909f43e5ce3b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#****************************************************************************\n\n#\n\n# Makefile for TinyXml test.\n\n# Lee Thomason\n\n# www.grinninglizard.com\n\n#\n\n# This is a GNU make (gmake) makefile\n\n#****************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBUG can be set to YES to include debugging info, or NO otherwise\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PROFILE can be set to YES to include profiling info, or NO otherwise\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TINYXML_USE_STL can be used to turn on STL support. NO, then STL\n\n# will not be used. YES will include the STL files.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#****************************************************************************\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#****************************************************************************\n\n# Preprocessor directives\n\n#****************************************************************************\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#****************************************************************************\n\n# Include paths\n\n#****************************************************************************\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#INCS := -I/usr/include/g++-2 -I/usr/local/include\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#****************************************************************************\n\n# Makefile code common to all platforms\n\n#****************************************************************************\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#****************************************************************************\n\n# Targets of the build\n\n#****************************************************************************\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#****************************************************************************\n\n# Source files\n\n#****************************************************************************\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add on the sources for libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#****************************************************************************\n\n# Output\n\n#****************************************************************************\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#****************************************************************************\n\n# common rules\n\n#****************************************************************************\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for compiling source files to object files\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#makedepend ${INCS} ${SRCS}\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 16
    },
    "sources/plugins/dev-EmptyPlugin/CMakeLists.txt" : {
      "ObjectId" : "33ced411704b01d0ef1480ebda65018a9cb81b71",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n\n##add_definitions(\"-lwiringPi\")\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if EMPTY_PLUGIN_INCLDIR or EMPTY_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sources/plugins/dev-FakePlugin/CMakeLists.txt" : {
      "ObjectId" : "6ebb1c4bcfbd9a11e8cc038ca113ebba03f93c30",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common plugin definitions\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\r\n\n## Place here all the plugin source files\r\n\n#########################################\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all additional groups (solution folder)\r\n\n#########################################\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\r\n\n## Place here all additional include directories\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Place here all additional libraries to link with\r\n\n## (by default yadoms-shared and boost are included)\r\n\n#########################################\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Place here all additional compiler flags\r\n\n## i.e. : for raspberry to link with wiringPi : use add_definition(\"-lwiringPi\")\r\n\n#########################################\r\n\n##add_definitions(\"-lwiringPi\")\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure plugin correctly\r\n\n## even if FAKE_PLUGIN_INCLDIR or FAKE_PLUGIN_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\r\n\n## post-build commands\r\n\n## copy files to build directory\r\n\n## Use PLUGIN_POST_BUILD_COPY_FILE and PLUGIN_POST_BUILD_COPY_DIRECTORY macros\r\n\n## to copy extra-files to the binary folder\r\n\n#########################################\r\n\n# Nothing to copy here\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "sources/scriptInterpreters/CMakeLists.txt" : {
      "ObjectId" : "b8e969d364f9ae03db14d1e250dc2a3d0f5a7cc1",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This file automatically search and add all script interpreters found from all subdirectories\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#This macro list all subdirectories\r\n",
        "Line" : 8,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#list all subdirectories from here\r\n",
        "Line" : 20,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#foreach subdirectory, search for CMakeList.txt\r\n\n#if there is one, then it is a script interpreters\r\n",
        "Line" : 23,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "sources/scriptInterpreters/YadomsScriptInterpertersCommon.cmake" : {
      "ObjectId" : "65779f4cd91c6ad499d6ccc9655b798c3477a91b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros for setting up a script interpreter\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround to force CMake to rebuild makefile when changelog.md is updated\r\n",
        "Line" : 5,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Retrieve interpreter version\r\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Build package.json (add version to package.in.json from changelog.md)\r\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#define the list of all include dirs\r\n",
        "Line" : 60,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "##################################################################################################\r\n\n## Add natvis (allow better debugging within VisualStudio)\r\n\n##################################################################################################\r\n",
        "Line" : 83,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#configure interpreter as installable component\r\n",
        "Line" : 90,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "##################################################################################################\r\n\n## RPATH\r\n\n##################################################################################################\r\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#Fix RPATH for cross compilation\r\n",
        "Line" : 101,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#Fix RPATH for cross compilation\r\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Post-build copy of required files\r\n",
        "Line" : 132,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# brief Copy a file to the target output dir\r\n\n# param [in] _targetName The current target (ie: interpreterName)\r\n\n# param [in] _resource The resource (absolute path) to copy to the target output dir\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# brief Copy a directory (and its content) to the target output dir\r\n\n# param [in] _targetName The current target (ie: scriptInterpreterName)\r\n\n# param [in] _resource The resource folder (absolute path) to copy to the target output dir\r\n\n# param [in/optional] To specify the target destination (if omit, destination will be the last part of _resource tree)\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# A target folder is given\r\n",
        "Line" : 182,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# No target folder\r\n",
        "Line" : 185,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 15
    },
    "sources/scriptInterpreters/YadomsScriptWrappersCommon.cmake" : {
      "ObjectId" : "eae593f5d8edc11e783b74e93579c42e37f43285",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros for setting up a script wrapper for yScriptApi\r\n\n#\r\n\n# Note that we use SWIG to generate wrappers.\r\n\n# CMake macro for SWIG generates a target called _yScriptApiWrapper\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for this target, precompiled header has no real sense\r\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# brief Copy a file to the target output dir\r\n\n# param [in] _resource The resource (absolute path) to copy to the target output dir\r\n\n# param [in] parentInterpreter The parent interpreter\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "sources/scriptInterpreters/findSwig.cmake" : {
      "ObjectId" : "d1a673d2dbf9c4d2b8e73edfad713498ebca5039",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Swig library Finder\n\n# This module finds if Swig is installed and determines where the\n\n# needed files are. This code sets the following variables:\n\n#\n\n#  SWIG_FOUND              - set to true if SWIG is found\n\n#  SWIG_DIR                - the directory where swig is installed\n\n#  SWIG_EXECUTABLE         - the path to the swig executable\n\n#  SWIG_VERSION            - the version number of the swig executable\n\n#\n\n# Use SWIG_ROOT if defined (from environment variables or CMakeListsUserConfig.txt), use it\n\n# Otherwise, use the path\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sources/scriptInterpreters/yPython27/CMakeLists.txt" : {
      "ObjectId" : "156a96d4785e76ec178365070b999d1ce0d5ed17",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check dependencies\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include common script interpreters definitions\r\n",
        "Line" : 8,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#########################################\r\n\n## Place here all the source files\r\n\n#########################################\r\n",
        "Line" : 11,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#Append platform specific files\r\n",
        "Line" : 42,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#########################################\r\n\n## Always leave these lines to configure script interpreter correctly\r\n\n## even if YPYTHON27_INCLDIR or YPYTHON27_LINK are empty\r\n\n#########################################\r\n",
        "Line" : 70,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#########################################\r\n\n## Post-build commands\r\n\n## Copy files to build directory\r\n\n#########################################\r\n",
        "Line" : 78,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#########################################\r\n\n## Generate the associated yScriptApiwrapper\r\n\n#########################################\r\n",
        "Line" : 86,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "sources/scriptInterpreters/yPython27/findPython.cmake" : {
      "ObjectId" : "63402ca13052fdcb283572b2079c30950c7684b2",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python library Finder\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#\n\n# Use PYTHON_ROOT if defined (from environment variables or CMakeListsUserConfig.txt), use it\n\n# Otherwise, use the cmake-provided find_package\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_package seems to not work correctly under Windows, so use CMakeListsUserConfig.txt to get Python path\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include also root path\n",
        "Line" : 51,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "#define libraroies and executable\n",
        "Line" : 57,
        "CharPositionInLine" : 9
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PYTHONLIBS_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 66,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "sources/scriptInterpreters/yPython27/yScriptApiWrapper/CMakeLists.txt" : {
      "ObjectId" : "4424444b36198f35a18bdfdb1a484d635437aaf9",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include common script interpreters definitions\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n## Place here all the source files\n\n#########################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n## Active to wrap C++ code\n\n#########################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\n\n## Place here all additional include directories\n\n## (by default yadoms-shared, boost and poco are included)\n\n#########################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n## Place here all additional libraries to link with\n\n## (by default yadoms-shared, boost and poco are included)\n\n#########################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#########################################\n\n## Place here all additional compiler flags\n\n#########################################\n\n# Special workaround for Python under Windows : When using the Windows installer version of Python, the debug library is not provided.\n\n# We should use this workaround to make our application build in debug configuration.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Remove some warnings on generated code\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\n\n## Always leave these lines to configure script wrapper correctly\n\n## even if some variables are empty\n\n#########################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################\n\n## Add pre-build step to generate swigpyrun.h file\n\n##\n\n## Do not use PRE_BUILD option because it is working only with VisualStudio\n\n## To make it work, just define a custom_command, and place \n\n## the output filename into the target sources to make it generated at build time\n\n#########################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#########################################\n\n## Add post-build step to deploy Swig-generated file\n\n#########################################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#########################################\n\n## Add post-build step to deploy Api doc file\n\n#########################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "sources/script_IPC/CMakeLists.txt" : {
      "ObjectId" : "39fcc334a58df712b3efe633741381ed1d9cc213",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make a static library to use to encode/decode IPC messages using Protobuf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################################################\n\n## Add natvis (allow better debugging within VisualStudio)\n\n##################################################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this target is for protobuf and precompiled header has no real sense\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#Ignore some warnings under VisualStudio for Protobuf generated files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sources/script_cpp_api/CMakeLists.txt" : {
      "ObjectId" : "12b4363fa7bccb89b858dcef0e353c7627986c4b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make a static library to link with C++ scripts wrappers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define the list of all include dirs\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################################################################\n\n## Add natvis (allow better debugging within VisualStudio)\n\n##################################################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "sources/shared/CMakeLists.txt" : {
      "ObjectId" : "c04967dac4636ef01613290c490023ff201b037d",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################\r\n\n## Sources\r\n\n########################\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Append platform specific files\r\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define project folders\r\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################\r\n\n## Output\r\n\n########################\r\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##################################################################################################\r\n\n## Add natvis (allow better debugging within VisualStudio)\r\n\n##################################################################################################\r\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/unit/sources/CMakeLists.txt" : {
      "ObjectId" : "854c83363122aca4a8c4dc49a7783383ecc674bf",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################################################\r\n\n## CMakeList.txt for tests for YADOMS project\r\n\n##\r\n\n## This file generates projects/makefiles for the compete Yadoms tests software\r\n\n##\r\n\n## This file actually works for\r\n\n##   Windows 7 x64, MSVC 12\r\n\n##   Ubuntu 12.04, g++ 4.7\r\n\n##   Raspberry Raspbian Wheezy, g++ 4.7\r\n\n##   MacOSx Snow Leopard 10.8, g++ 4.8\r\n\n##################################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check the minimum CMake version\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The main Yadoms path\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################################################################################################\r\n\n## Include other cmake scripts\r\n\n##################################################################################################\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# First checks (compilers versions...)\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# User specific configuration\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Precompiled headers\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Precompiled headers\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Windows specific macro\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compilers/IDE configurations\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##################################################################################################\r\n\n## Project output configuration\r\n\n##################################################################################################\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#define outputs\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# First for the generic no-config case (e.g. with gcc)\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Second, for multi-config builds (e.g. msvc)\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##################################################################################################\r\n\n## Externals libraries (Boost, Thread, RT) only linked with\r\n\n##################################################################################################\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Boost (dynamic linking)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# define all needed boost libraries\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# search boost libs\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## thread library (pthread)\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## RT Library\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Poco dependencies\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## IOKIT (needed for Mac)\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "###############################################\r\n\n# POCO\r\n\n#\r\n\n# POCO_LIBS : define all required poco libraries\r\n\n###############################################\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# define libraries to link with\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##################################################################################################\r\n\n## Sources\r\n\n##################################################################################################\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Yadoms Tests sources\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##################################################################################################\r\n\n## Tests selection to build\r\n\n##################################################################################################\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##################################################################################################\r\n\n## Output\r\n\n##################################################################################################\r\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##################################################################################################\r\n\n## Include directories\r\n\n##################################################################################################\r\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##################################################################################################\r\n\n## Link\r\n\n##################################################################################################\r\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "tests/unit/sources/addSources.cmake" : {
      "ObjectId" : "b62160f8d9b3c2ef05f3959904e51e3459badacc",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################################################\r\n\n## Macro adding sources to the parent target\r\n\n##################################################################################################\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# propagate YADOMS_TESTS_SRC to parent directory\r\n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "##################################################################################################\r\n\n## Macro adding yadoms sources to the parent target\r\n\n##################################################################################################\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# propagate YADOMS_TESTS_SRC to parent directory\r\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "##################################################################################################\r\n\n## Macro adding yadoms include directories to the parent target\r\n\n##################################################################################################\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# propagate YADOMS_INCL_DIR to parent directory\r\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#   TODO : Understand why with Linux PARENT_SCOPE doesn't work here !\r\n",
        "Line" : 41,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 7
    },
    "tests/unit/sources/external-libs/CMakeLists.txt" : {
      "ObjectId" : "2d3a1db3e767f439e2698d625532da7bd8e62a78",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List subdirectories here\r\n\n#For example :\r\n\n#add_subdirectory(SQLite)\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/sources/mock/CMakeLists.txt" : {
      "ObjectId" : "3503af22a66ff7063a2dfb46eda5d3e642f469fb",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List subdirectories here\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/sources/mock/server/CMakeLists.txt" : {
      "ObjectId" : "34689cb9a926b75786ca42972179bf115110c091",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List subdirectories here\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/sources/mock/server/pluginSystem/CMakeLists.txt" : {
      "ObjectId" : "525e50427e51aaa5bd5a5a8d2fe95c1d7c3db373",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List subdirectories here\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/sources/mock/server/pluginSystem/information/CMakeLists.txt" : {
      "ObjectId" : "523bac6d6aca988ec33bee66e9caccd376c1a31c",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/mock/shared/CMakeLists.txt" : {
      "ObjectId" : "9ef5f6fda7f65f6a4873cefcb0038d88c5f8e3af",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/mock/shared/currentTime/CMakeLists.txt" : {
      "ObjectId" : "3994039f742adefe7300060651f40867809d89cc",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/plugins/CMakeLists.txt" : {
      "ObjectId" : "84c0b9778ecb73ba9d4b4683a2ec2d535956340c",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List subdirectories here\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/sources/plugins/EnOcean/CMakeLists.txt" : {
      "ObjectId" : "bf7c9b9f023816a4cb104fe10cd9e1075ae09d65",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/plugins/Linky/CMakeLists.txt" : {
      "ObjectId" : "11220ef7eb2f19f3c80f51a4f7ed316731bd9460",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/plugins/OrangeBusiness/CMakeLists.txt" : {
      "ObjectId" : "38612d728fffb8a3780db7310951f06fba2ec2eb",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/plugins/Rfxcom/CMakeLists.txt" : {
      "ObjectId" : "1b49dae58f1b7efdc6a5b0a087e340ecd79db669",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/plugins/TeleInfo/CMakeLists.txt" : {
      "ObjectId" : "330e96bdb9593f99e34fc455fb6f709ca4dc4ab8",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add Windows sources\n",
        "Line" : 25,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# Add Common Linux and RaspberryPI sources\n",
        "Line" : 44,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 2
    },
    "tests/unit/sources/plugins/dev-FakePlugin/CMakeLists.txt" : {
      "ObjectId" : "2fb745c4657ec24d0b41e09b3bce4c26d4271095",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/server/CMakeLists.txt" : {
      "ObjectId" : "91508d9e646f25d11ed2852ba256d5966e5c3d0b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List subdirectories here\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/sources/server/database/CMakeLists.txt" : {
      "ObjectId" : "945e57b5612b850cc5d179a3412206a84373da0d",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/server/notification/CMakeLists.txt" : {
      "ObjectId" : "9ec8d37936082b32642cfbce6681fad9db0c163b",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/server/pluginSystem/CMakeLists.txt" : {
      "ObjectId" : "1d9b7a52facbac3612d74a8a9e3251d05e212144",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List subdirectories here\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/unit/sources/server/pluginSystem/information/CMakeLists.txt" : {
      "ObjectId" : "e43e9bbf9e0f71cde9d114063672bcef28748e98",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/server/startupOptions/CMakeLists.txt" : {
      "ObjectId" : "46786927a2b95c57b8c91d80cb8d492f482dd96f",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/shared/CMakeLists.txt" : {
      "ObjectId" : "aa712c6bac54000a912ab658f5436b250de83064",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#dd current directory tests\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#dd current directory tests\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List subdirectories here\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/unit/sources/shared/communication/CMakeLists.txt" : {
      "ObjectId" : "d4d6acbe3994dcfaae77aca1c47ef9b112e2daf0",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/shared/event/CMakeLists.txt" : {
      "ObjectId" : "af7833831b8bc0738d78e0631c1a62fa067ee09e",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unit/sources/shared/tools/CMakeLists.txt" : {
      "ObjectId" : "9e9c16fbdea199515ed553890a64d1742e926df8",
      "LastModified" : "2019-03-27T10:49:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 90,
    "QMAKE" : 2,
    "MAKEFILE" : 8,
    "AUTOMAKE" : 5
  },
  "ElapsedTime" : 5012
}