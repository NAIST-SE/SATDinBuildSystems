{
  "Repository" : "15326615",
  "Revision" : "HEAD",
  "ObjectId" : "3d66971a0cad6edbe796f4dd940229d38e5bfe3d",
  "CommitTime" : "2018-10-31T03:51:13Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "964b79b0aaeaaf117810163125b45c313ce60e2e",
      "LastModified" : "2018-10-28T21:54:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n\n# -- The below checks if certain solver paths are set in the config call for the corresp. interface to be compiled --\n\n# -- For example, to include gecode in the minizinc binary run                                                     --\n\n# --     \"cd build; cmake -D GECODE_HOME=$GECODE_HOME ..; cmake --build .\"                                         --\n\n# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Can use SCIP w/o ZIMPL too\n",
        "Line" : 40,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n\n# The version number.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Offer the user the choice of overriding the installation directories\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make relative paths absolute (needed later on)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## does not work TODO\n",
        "Line" : 93,
        "CharPositionInLine" : 76
      },
      "9" : {
        "Text" : "#  SET(CMAKE_FIND_LIBRARY_SUFFIXES \".a\")\n\n#  SET(BUILD_SHARED_LIBRARIES OFF)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#check_cxx_source_compiles(\"#include <sstream>\n\n##include <iomanip>\n\n#int main(void) { std::ostringstream oss; std::hexfloat(oss); return 0; }\" HAS_HEXFLOAT)\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# When updating the cached files, update MD5 sums defined in this file\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Version 7.5\n",
        "Line" : 444,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n\n# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Windows: version 12.6.2 with MSVC 2013, 64-bit (run cmake .. -G\"Visual Studio 12 Win64\")\n",
        "Line" : 498,
        "CharPositionInLine" : 15
      },
      "24" : {
        "Text" : "# Here 12.6.3\n",
        "Line" : 511,
        "CharPositionInLine" : 41
      },
      "25" : {
        "Text" : "# add_definitions(-DIL_STD)\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# link_directories(\"${CPLEX_STUDIO_DIR}/cplex/lib/${CPLEX_ARCH}\")\n\n# link_directories(\"${CPLEX_STUDIO_DIR}/concert/lib/x86-64_${CPLEX_ARCH}/static_pic\")\n",
        "Line" : 518,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# target_include_directories(minizinc_cplex PRIVATE \"${CPLEX_STUDIO_DIR}/concert/include\")\n",
        "Line" : 530,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# SCIP version tested: 3.2.1\n",
        "Line" : 553,
        "CharPositionInLine" : 15
      },
      "30" : {
        "Text" : "#link_directories(\"${SCIP_DIR}/../lib\"  )  # For the single library, use 'make scipoptlib' when building SCIP\n",
        "Line" : 554,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#    set(SCIP_OS \"linux\")\n\n#    set(SCIP_ARCH \"x86_64\")\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#    set(SCIP_LIB_EXTRAS readline z zimpl.${SCIP_OS}.${SCIP_ARCH}.gnu.opt gmp)  # if SCIP configured so\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# if SCIP configured so\n",
        "Line" : 561,
        "CharPositionInLine" : 40
      },
      "34" : {
        "Text" : "#   set(SCIP_OS \"osx\")\n\n#    set(SCIP_ARCH \"ppc\")\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# if SCIP configured so\n",
        "Line" : 567,
        "CharPositionInLine" : 40
      },
      "36" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# SCIP version tested: 3.2.0\n",
        "Line" : 602,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# if SCIP configured so\n",
        "Line" : 620,
        "CharPositionInLine" : 50
      },
      "39" : {
        "Text" : "#objscip\n",
        "Line" : 631,
        "CharPositionInLine" : 15
      },
      "40" : {
        "Text" : "#objscip\n",
        "Line" : 644,
        "CharPositionInLine" : 15
      },
      "41" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "### Tested version 2.9.9, rev 2345 on 12.10.17 from the stable snapshot https://projects.coin-or.org/svn/Cbc/stable/2.9\n",
        "Line" : 658,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#  Windows config based on  https://projects.coin-or.org/Cbc/wiki/VSSetup\n",
        "Line" : 673,
        "CharPositionInLine" : 27
      },
      "44" : {
        "Text" : "# The order below is important for static versions of cbc libs to link. \"z\" needed for static\n",
        "Line" : 676,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# \"ClpSolver\" after OsiClp;  \"OsiCbc\"\n",
        "Line" : 677,
        "CharPositionInLine" : 84
      },
      "46" : {
        "Text" : "#    set(OSICBC_LIBS \"`PKG_CONFIG_PATH=/home/bg/Documents/prj/coin-Cbc-2.9/lib64/pkgconfig:/home/bg/Documents/prj/coin-Cbc-2.9/lib/pkgconfig:/home/bg/Documents/prj/coin-Cbc-2.9/share/pkgconfig: pkg-config --libs cbc`\")\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# OSICBC_LINKEXTRAS: ArchLinux needs blas, lapack, bz2\n",
        "Line" : 691,
        "CharPositionInLine" : 39
      },
      "48" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Add all targets to the build-tree export set\n",
        "Line" : 861,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 865,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Create the libminizincConfig.cmake and libminizincConfigVersion files¬\n",
        "Line" : 869,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# ... for the build tree\n",
        "Line" : 875,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# ... for the install tree\n",
        "Line" : 879,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# ... for both\n",
        "Line" : 883,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Install the libminizincConfig.cmake and libminizincConfigVersion.cmake\n",
        "Line" : 887,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Install the export set for use with the install-tree\n",
        "Line" : 893,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# -------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 61
    },
    "cmake/modules/FindMPFR.cmake" : {
      "ObjectId" : "83a96c7be2eb2b4b2a6827178d821183b152486a",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Try to find MPFR\n\n# Once done this will define\n\n#  MPFR_FOUND     - System has MPFR\n\n#  MPFR_INCLUDES  - The MPFR include directories\n\n#  MPFR_LIBRARIES - The libraries needed to use MPFR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MPFR_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/cached/md5_cached.cmake" : {
      "ObjectId" : "40f828bfeab0c47b7e1c8ff8ddd13c03e8e305be",
      "LastModified" : "2018-10-23T22:43:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "md5_gen.cmake" : {
      "ObjectId" : "dfa7e022e575f34e44a122947e5d44cf9e7f0a81",
      "LastModified" : "2018-08-18T08:14:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Script to update the cached lexer and parser\n\n# Run after modifying lexer.lxx and/or parser.yxx\n\n#\n\n# 1. generate lexer and parser by building libminizinc\n\n# 2. run cmake -DPROJECT_SOURCE_DIR=. -DPROJECT_BINARY_DIR=build -P md5_gen.cmake\n\n# replacing . and build with the source and binary directory\n\n# add -DFORCE=ON to force the renewing of generated files when md5's still match.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When updating the cached files, update MD5 sums defined in this file\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 4
  },
  "ElapsedTime" : 1397
}