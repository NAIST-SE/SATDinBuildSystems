{
  "Repository" : "19799174",
  "Revision" : "HEAD",
  "ObjectId" : "2e6909bb764cf30d6afc231a2d447dfc13f3fa40",
  "CommitTime" : "2019-04-13T18:44:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "49b5338efa16e6138983c67d25f85c57ef03803d",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# path to find own modules\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include own macros.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}/bin\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# B. Options\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# options\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Strategy\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Development options\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include own macros.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: iteratively search for cmake files and include them here.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We use cotire, simply include it\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# We do not use cotire, create dummy function.\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# path to put in the executables\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# C.1. Required libraries for core.\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# use carl, carl pulls in the required libraries.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# C.2. required libraries\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# C.4. Required libraries for GUI.\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# for building the GUI\n",
        "Line" : 149,
        "CharPositionInLine" : 31
      },
      "17" : {
        "Text" : "# for building the GUI\n",
        "Line" : 150,
        "CharPositionInLine" : 36
      },
      "18" : {
        "Text" : "# for building the GUI\n",
        "Line" : 151,
        "CharPositionInLine" : 55
      },
      "19" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# C.5. Development and debug libraries.\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# add_subdirectory(examples EXCLUDE_FROM_ALL) # offer as an optional target\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# D. Writen information files\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Getting git info.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# [un]install targets\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# specify pkg-config file to be installed\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Add custom additional include or link directories\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# F. Invoke subdirectories.\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# G. Export Compile Information\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#include(CMakePackageConfigHelpers)\n\n## Create the carlConfig.cmake and carlConfigVersion files\n\n#file(RELATIVE_PATH REL_INCLUDE_DIR \"${CMAKE_INSTALL_DIR}\" \"${INCLUDE_INSTALL_DIR}\")\n\n#message(\"${CMAKE_INSTALL_DIR}\")\n\n#message(\"${INCLUDE_INSTALL_DIR}\")\n\n## ... for the build tree\n\n#set(CONF_INCLUDE_DIRS \"${PROJECT_SOURCE_DIR}/src\")\n\n#configure_package_config_file(cmake/smtratConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/smtratConfig.cmake\n\n#\t\t\t\t\t\t\t  INSTALL_DESTINATION ${CMAKE_INSTALL_DIR}\n\n#\t\t\t\t\t\t\t  PATH_VARS INCLUDE_INSTALL_DIR #SYSCONFIG_INSTALL_DIR\n\n#\t\t\t\t\t\t\t )\n\n## ... for the install tree\n\n#set(CONF_INCLUDE_DIRS \"\\${smtrat_CMAKE_DIR}/${REL_INCLUDE_DIR}\")\n\n#configure_package_config_file(cmake/smtratConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/smtratConfig.cmake\n\n#\t\t\t\t\t\t\t  INSTALL_DESTINATION ${CMAKE_INSTALL_DIR}\n\n#\t\t\t\t\t\t\t  PATH_VARS INCLUDE_INSTALL_DIR #SYSCONFIG_INSTALL_DIR\n\n#\t\t\t\t\t\t\t )\n\n#write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/smtratConfigVersion.cmake\n\n#\t\t\t\t\t\t\t\t VERSION ${smtrat_VERSION}\n\n#\t\t\t\t\t\t\t\t COMPATIBILITY SameMajorVersion )\n\n#install(FILES ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/smtratConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/smtratConfigVersion.cmake\n\n#\t\tDESTINATION ${CMAKE_INSTALL_DIR} )\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Install the export set for use with the install-tree\n\n#message(STATUS \"Exporting smtratTargets to ${CMAKE_INSTALL_DIR}\")\n\n#install(EXPORT smtratTargets DESTINATION ${CMAKE_INSTALL_DIR} COMPONENT dev)\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# H. CPack\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# htdocs\n",
        "Line" : 245,
        "CharPositionInLine" : 81
      },
      "32" : {
        "Text" : "# manual\n",
        "Line" : 246,
        "CharPositionInLine" : 132
      },
      "33" : {
        "Text" : "# opensmt binary\n",
        "Line" : 247,
        "CharPositionInLine" : 101
      },
      "34" : {
        "Text" : "#message(\"CPACK_SOURCE_IGNORE_FILES = ${CPACK_SOURCE_IGNORE_FILES}\")\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "cmake/FindAnt.cmake" : {
      "ObjectId" : "c25a8afe804c38536120c68b42c89814888a8d96",
      "LastModified" : "2012-05-25T11:53:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The module defines the following variables:\n\n#   ANT_EXECUTABLE - path to ant command line client\n\n#   ANT_FOUND - true if the command line client was found\n\n# Example usage:\n\n#   find_package(Ant)\n\n#   if(ANT_FOUND)\n\n#     message(\"ant found: ${ANT_EXECUTABLE}\")\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'ant'\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set ANT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindCLN.cmake" : {
      "ObjectId" : "b1c2aceb4527aab16844d84b436ddfb89059c32a",
      "LastModified" : "2012-07-10T15:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CLN\n\n# Once done, this will define\n\n#\n\n#  CLN_FOUND          - system has CLN\n\n#  CLN_INCLUDE_DIR    - the CLN include directory\n\n#  CLN_LIBRARY        - the CLN library location\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n\n#libfind_package(cln REQUIRED)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindCPPUnit.cmake" : {
      "ObjectId" : "ce11178a18a83fb0a051fb93dd914cf14506a49b",
      "LastModified" : "2012-07-10T15:23:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the libcppunit libraries\n\n# Once done this will define\n\n#\n\n# CppUnit_FOUND - system has libcppunit\n\n# CPPUNIT_INCLUDE_DIR - the libcppunit include directory\n\n# CPPUNIT_LIBRARIES - libcppunit library\n\n#\n\n# Originally from the audacity source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# in case win32 needs to find it the old way?\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# how can we find cppunit version?\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#  IF(NOT CPPUNIT_INSTALLED_VERSION_OK)\n\n#    MESSAGE (\"** CppUnit version is too old: found ${CPPUNIT_INSTALLED_VERSION} installed, ${CPPUNIT_MIN_VERSION} or major is required\")\n\n#    SET(CppUnit_FOUND FALSE)\n\n#  ENDIF(NOT CPPUNIT_INSTALLED_VERSION_OK)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindCoCoA.cmake" : {
      "ObjectId" : "941ab3d0d3787925a9171b5fd8cd179c341fe053",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "3c900c5fb43c41f5b1d944925c612867cca9762c",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Library files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGMPXX.cmake" : {
      "ObjectId" : "c5f975443597324edd7d02c0417c4f3f5c55633f",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Library files\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/FindGiNaC.cmake" : {
      "ObjectId" : "5549109ce95ea33e3a64680681390ae8385fff51",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GiNaC\n\n# Originally from Martin Velis\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindITPP.cmake" : {
      "ObjectId" : "f5666e45652f3f7ef5fe25b80c22bcc381c7fe52",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ITPP\n\n# Find the native ITPP includes and library\n\n# This module defines\n\n#  ITPP_INCLUDE_DIR, where to find itpp/itbase.h, etc.\n\n#  ITPP_LIBRARIES, the libraries needed to use ITPP.\n\n#  ITPP_FOUND, If false, do not try to use ITPP.\n\n# also defined, but not for general use are\n\n#  ITPP_LIBRARY, where to find the ITPP library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: Check on licensing issues here: http://mys.utia.cas.cz:1800/trac/bdm/browser/CMake_modules/FindITPP.cmake?rev=279\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(\"ITPP_DIR set to ${ITPP_DIR}\" )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "1c0d6b584036cb655057dc164484c0881898e71a",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n# get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n# git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n# git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n# (ARGN MATCHES \"||\") OR\n\n# (ARGN MATCHES \"\\\\;\"))\n\n# message(\"Please report the following error to the project!\")\n\n# message(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/LibFindMacros.cmake" : {
      "ObjectId" : "ecc0cc000ef212d42bd1d5e0cee1a8537188d601",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/apple-llvm-toolchain.cmake" : {
      "ObjectId" : "2098cb8ff6b9369194507d9fd92c210d7e4402cf",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect clang version, switch to homebrew llvm automatically\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/clang-tidy.cmake" : {
      "ObjectId" : "bcdaa3e8efcbc879f1ec54a107ea4d906709f5a1",
      "LastModified" : "2019-01-23T13:22:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clashes with assert()\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Modernize\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# CPP Core Guidelines\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# as of https://llvm.org/bugs/show_bug.cgi?id=31039\n",
        "Line" : 23,
        "CharPositionInLine" : 87
      },
      "4" : {
        "Text" : "# Fuchsia\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Google\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Enabled checks for clang-tidy: ${CLANG_TIDY_CHECKS}\")\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/compiler-options.cmake" : {
      "ObjectId" : "a6a8a774ef3706db3203d1ef3ffb1d06e56e4cc6",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Matches \"Clang\" and \"AppleClang\"\n",
        "Line" : 3,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : "#set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -print-search-dirs\")\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/cotire.cmake" : {
      "ObjectId" : "a7d8a644dcb917aa22f8fe3d44d9b83aeab577a8",
      "LastModified" : "2018-04-25T09:21:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2013 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we need the CMake variables CMAKE_SCRIPT_MODE_FILE and CMAKE_ARGV available since 2.8.5\n\n# we need APPEND_STRING option for set_property available since 2.8.6\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use CMake's predefined compiler version variable (available since CMake 2.8.8)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# assume GCC like command line interface\n",
        "Line" : 66,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 155,
        "CharPositionInLine" : 7
      },
      "8" : {
        "Text" : "# option with separate argument\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# remember option\n",
        "Line" : 274,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# option with joined argument\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# flush remembered option\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 309,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# add option from CMake target type variable\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# handle POSITION_INDEPENDENT_CODE property introduced with CMake 2.8.9 if policy CMP0018 is turned on\n",
        "Line" : 321,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# default to old behavior\n",
        "Line" : 324,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# NEW behavior: honor the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 331,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# OLD behavior or policy not set: use the value of CMAKE_SHARED_LIBRARY_<Lang>_FLAGS\n",
        "Line" : 341,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# flags variable for module library uses different name SHARED_MODULE\n\n# (e.g., CMAKE_SHARED_MODULE_C_FLAGS)\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# add_definitions may have been used to add flags to the compiler command\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# add target compile options\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# platform specific flags\n",
        "Line" : 377,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# default include dirs\n",
        "Line" : 403,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 408,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# target include directories\n",
        "Line" : 415,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# mimic CMake SystemTools::MakeCindentifier behavior\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 483,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# target export define symbol\n",
        "Line" : 487,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 492,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# target compile definitions\n",
        "Line" : 501,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and don't look at directory compile definitions, which we already handled\n",
        "Line" : 510,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 526,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 733,
        "CharPositionInLine" : 3
      },
      "34" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 741,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 744,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# header is outside\n",
        "Line" : 758,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 769,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# check header file extension\n",
        "Line" : 779,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# cl.exe /showIncludes output looks different depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 792,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Visual Studio compiler output\n",
        "Line" : 797,
        "CharPositionInLine" : 3
      },
      "41" : {
        "Text" : "# GCC like output\n",
        "Line" : 806,
        "CharPositionInLine" : 3
      },
      "42" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 822,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# canonize slashes\n",
        "Line" : 825,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 827,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# then separate lines\n",
        "Line" : 829,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 832,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 850,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# update stack\n",
        "Line" : 860,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 876,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 878,
        "CharPositionInLine" : 5
      },
      "51" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 885,
        "CharPositionInLine" : 5
      },
      "52" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 894,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 906,
        "CharPositionInLine" : 5
      },
      "54" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 940,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 959,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1126,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1158,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# append to list\n",
        "Line" : 1167,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1170,
        "CharPositionInLine" : 3
      },
      "60" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1174,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# append to list\n",
        "Line" : 1179,
        "CharPositionInLine" : 3
      },
      "62" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1185,
        "CharPositionInLine" : 3
      },
      "63" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n",
        "Line" : 1192,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# append to list\n",
        "Line" : 1196,
        "CharPositionInLine" : 3
      },
      "65" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1199,
        "CharPositionInLine" : 3
      },
      "66" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1204,
        "CharPositionInLine" : 3
      },
      "67" : {
        "Text" : "# append to list\n",
        "Line" : 1213,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1216,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1220,
        "CharPositionInLine" : 3
      },
      "70" : {
        "Text" : "# append to list\n",
        "Line" : 1225,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1231,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n",
        "Line" : 1250,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# append to list\n",
        "Line" : 1260,
        "CharPositionInLine" : 3
      },
      "74" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1264,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# GCC / Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n",
        "Line" : 1268,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# append to list\n",
        "Line" : 1275,
        "CharPositionInLine" : 3
      },
      "77" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1278,
        "CharPositionInLine" : 3
      },
      "78" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1286,
        "CharPositionInLine" : 3
      },
      "79" : {
        "Text" : "# append to list\n",
        "Line" : 1298,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1305,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1312,
        "CharPositionInLine" : 3
      },
      "82" : {
        "Text" : "# append to list\n",
        "Line" : 1323,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1332,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n",
        "Line" : 1349,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# append to list\n",
        "Line" : 1356,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1359,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1363,
        "CharPositionInLine" : 3
      },
      "88" : {
        "Text" : "# append to list\n",
        "Line" : 1365,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1368,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n",
        "Line" : 1373,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# append to list\n",
        "Line" : 1377,
        "CharPositionInLine" : 3
      },
      "92" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1380,
        "CharPositionInLine" : 3
      },
      "93" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# -Qunused-arguments don't emit warning for unused driver arguments\n",
        "Line" : 1384,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# append to list\n",
        "Line" : 1388,
        "CharPositionInLine" : 3
      },
      "95" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1391,
        "CharPositionInLine" : 3
      },
      "96" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1397,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# append to list\n",
        "Line" : 1405,
        "CharPositionInLine" : 5
      },
      "98" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1411,
        "CharPositionInLine" : 5
      },
      "99" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1418,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# append to list\n",
        "Line" : 1420,
        "CharPositionInLine" : 5
      },
      "101" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1423,
        "CharPositionInLine" : 5
      },
      "102" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1428,
        "CharPositionInLine" : 3
      },
      "103" : {
        "Text" : "# append to list\n",
        "Line" : 1437,
        "CharPositionInLine" : 5
      },
      "104" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1443,
        "CharPositionInLine" : 5
      },
      "105" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1450,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# append to list\n",
        "Line" : 1452,
        "CharPositionInLine" : 5
      },
      "107" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1455,
        "CharPositionInLine" : 5
      },
      "108" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1491,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1504,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 1508,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# all Clang versions have PCH support\n",
        "Line" : 1517,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 1520,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 1532,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 1600,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 1611,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 1614,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 1675,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 1680,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# GCC / Clang look for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 1683,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 1686,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 1718,
        "CharPositionInLine" : 1
      },
      "122" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 1721,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 1726,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 1742,
        "CharPositionInLine" : 1
      },
      "125" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 1757,
        "CharPositionInLine" : 1
      },
      "126" : {
        "Text" : "# remove COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 1783,
        "CharPositionInLine" : 1
      },
      "127" : {
        "Text" : "# for Visual Studio and Intel, we attach the precompiled header compilation to the first source file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 1802,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# make first source file depend on prefix header\n",
        "Line" : 1815,
        "CharPositionInLine" : 3
      },
      "129" : {
        "Text" : "# mark first source file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 1817,
        "CharPositionInLine" : 3
      },
      "130" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 1821,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# for Visual Studio and Intel, we include the precompiled header in all but the first source file\n\n# the first source file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 1844,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 1848,
        "CharPositionInLine" : 3
      },
      "133" : {
        "Text" : "# make source files depend on precompiled header\n",
        "Line" : 1857,
        "CharPositionInLine" : 3
      },
      "134" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 1862,
        "CharPositionInLine" : 3
      },
      "135" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 1870,
        "CharPositionInLine" : 3
      },
      "136" : {
        "Text" : "# make source files depend on precompiled header\n",
        "Line" : 1873,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 1880,
        "CharPositionInLine" : 1
      },
      "138" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 1887,
        "CharPositionInLine" : 1
      },
      "139" : {
        "Text" : "# make source files depend on prefix header\n",
        "Line" : 1889,
        "CharPositionInLine" : 1
      },
      "140" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n\n# if necessary, we also generate a single prefix header which includes all language specific prefix headers\n",
        "Line" : 1952,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 1976,
        "CharPositionInLine" : 2
      },
      "142" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 1980,
        "CharPositionInLine" : 2
      },
      "143" : {
        "Text" : "# for Visual Studio and Intel, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 1984,
        "CharPositionInLine" : 3
      },
      "144" : {
        "Text" : "# set up compiled unity source dependencies\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2006,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# unity file compilation results in potentially huge object file, thus use /bigobj by default unter MSVC and Windows Intel\n",
        "Line" : 2015,
        "CharPositionInLine" : 3
      },
      "146" : {
        "Text" : "# create a joint unity file from all unity file segments\n",
        "Line" : 2033,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2236,
        "CharPositionInLine" : 3
      },
      "148" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2240,
        "CharPositionInLine" : 3
      },
      "149" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2254,
        "CharPositionInLine" : 3
      },
      "150" : {
        "Text" : "# use all available cores\n",
        "Line" : 2268,
        "CharPositionInLine" : 3
      },
      "151" : {
        "Text" : "# a unity source segment must not contain less than COTIRE_MINIMUM_NUMBER_OF_TARGET_SOURCES files\n",
        "Line" : 2273,
        "CharPositionInLine" : 2
      },
      "152" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2298,
        "CharPositionInLine" : 1
      },
      "153" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 2314,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# user provided prefix header must be included\n",
        "Line" : 2335,
        "CharPositionInLine" : 3
      },
      "155" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 2340,
        "CharPositionInLine" : 1
      },
      "156" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 2366,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# Visual Studio and Intel only create precompiled header as a side effect\n",
        "Line" : 2371,
        "CharPositionInLine" : 4
      },
      "158" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 2386,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 2396,
        "CharPositionInLine" : 1
      },
      "160" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 2406,
        "CharPositionInLine" : 1
      },
      "161" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 2412,
        "CharPositionInLine" : 3
      },
      "162" : {
        "Text" : "# if cotire is applied to a target which has not been added in the current source dir,\n\n# non-existing files cannot be referenced from the unity build target (this is a CMake restriction)\n",
        "Line" : 2420,
        "CharPositionInLine" : 3
      },
      "163" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 2436,
        "CharPositionInLine" : 3
      },
      "164" : {
        "Text" : "# generate unity target\n",
        "Line" : 2443,
        "CharPositionInLine" : 1
      },
      "165" : {
        "Text" : "# copy output location properties\n",
        "Line" : 2453,
        "CharPositionInLine" : 1
      },
      "166" : {
        "Text" : "# copy output name\n",
        "Line" : 2482,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 2489,
        "CharPositionInLine" : 1
      },
      "168" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 2498,
        "CharPositionInLine" : 1
      },
      "169" : {
        "Text" : "# copy link stuff\n",
        "Line" : 2503,
        "CharPositionInLine" : 1
      },
      "170" : {
        "Text" : "# copy Qt stuff\n",
        "Line" : 2513,
        "CharPositionInLine" : 1
      },
      "171" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 2516,
        "CharPositionInLine" : 1
      },
      "172" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 2519,
        "CharPositionInLine" : 1
      },
      "173" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 2523,
        "CharPositionInLine" : 1
      },
      "174" : {
        "Text" : "# use output name from original target\n",
        "Line" : 2530,
        "CharPositionInLine" : 1
      },
      "175" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 2535,
        "CharPositionInLine" : 1
      },
      "176" : {
        "Text" : "# trivial checks\n",
        "Line" : 2571,
        "CharPositionInLine" : 1
      },
      "177" : {
        "Text" : "# resolve alias\n",
        "Line" : 2577,
        "CharPositionInLine" : 1
      },
      "178" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 2585,
        "CharPositionInLine" : 1
      },
      "179" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 2601,
        "CharPositionInLine" : 1
      },
      "180" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 2680,
        "CharPositionInLine" : 1
      },
      "181" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 2766,
        "CharPositionInLine" : 1
      },
      "182" : {
        "Text" : "# include target script if available\n",
        "Line" : 2778,
        "CharPositionInLine" : 1
      },
      "183" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 2780,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# for MSVC, compiler IDs may not always be set correctly\n",
        "Line" : 2789,
        "CharPositionInLine" : 2
      },
      "185" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 2803,
        "CharPositionInLine" : 1
      },
      "186" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 2906,
        "CharPositionInLine" : 1
      },
      "187" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 2946,
        "CharPositionInLine" : 3
      },
      "188" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 2987,
        "CharPositionInLine" : 3
      },
      "189" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 2994,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3047,
        "CharPositionInLine" : 1
      },
      "191" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3112,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 3266,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 193
    },
    "cmake/dependency-graph.cmake" : {
      "ObjectId" : "51396a59a2fd350cf69193e35fc03e0c3682ba4e",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/export.cmake" : {
      "ObjectId" : "9ed95b980c921e411793aeb87c9e622425a6d830",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/install.cmake" : {
      "ObjectId" : "724959807ba7a40e0fdede852360c0719b4fbfee",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install(\n\n#\tEXPORT smtratTar\n\n#\tRUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n\n#\tLIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\n#\tARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\n#)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(FILES ${CMAKE_BINARY_DIR}/carlConfig.install.cmake DESTINATION ${CMAKE_INSTALL_DIR} RENAME carlConfig.cmake)\n\n#install(FILES ${CMAKE_BINARY_DIR}/carlConfigVersion.cmake DESTINATION ${CMAKE_INSTALL_DIR})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macros.cmake" : {
      "ObjectId" : "c9d1a3e27cb596aeb953a084c5c2c48d48481397",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/prepare-ci.cmake" : {
      "ObjectId" : "d2fe470d605a4619c3fb579196cbd44c1756ade4",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Misc stuff to setup ci tools\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/smtratmacros.cmake" : {
      "ObjectId" : "a2984593c48fda0c2ffd2653c118c3022021c3d6",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: macros.cmake\n\n# Authors: Sebastian Junges, Ulrich Loup\n\n# Erstellt: 2013-04-11\n\n# Version: 2013-04-18\n\n#\n\n# This file contains several macros which are used in this project. Notice that several are copied straight from web ressources.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Macro\n\n# List Subdirectories\n\n# Source: http://stackoverflow.com/questions/7787823/cmake-how-to-get-the-name-of-all-subdirectories-of-a-directory\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macro\n\n# Find and include all cmake pathes recursively\n\n# Based on: http://www.vtk.org/Wiki/CMake/Examples#Recursively_add_subdirectories_to_INCLUDE_DIRECTORIES\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the version\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set an additional settingsobject\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Number of modules (for determining this modules number)\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Workaround from https://cmake.org/Bug/view.php?id=15052\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# only from cmake 3.3 https://github.com/ceph/ceph/pull/7128\n\n#add_dependencies(${name}_${type} ${name}_${shortname}_${type})\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "doxygen-conf/CMakeLists.txt" : {
      "ObjectId" : "64296b1094cccf8321f344d3b7ca6ee1e4e7b93f",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n#                                                             #\n\n# File: doxygen-conf/CMakeLists.txt                           #\n\n#                                                             #\n\n# Project name: SMT-RAT                                       #\n\n# Contact: Florian Corzilius <corzilius@cs.rwth-aachen.de>,   #\n\n#          Ulrich Loup <loup@cs.rwth-aachen.de>               #\n\n# Project sourceforge page: http://smtrat.sourceforge.net/    #\n\n# Development status: beta                                    #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# Version: 2012-02-21                                         #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Quick self-configuration if only doc is built\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cmake doxygen settings\n\n# # # # # # # # # # # # #\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cmake modules needed\n\n# # # # # # # # # # # #\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Doxygen settings\n\n# # # # # # # # # #\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate doxygen.conf\n\n# # # # # # # # # # # #\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Target for running doxygen\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target for building the whole documentation\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "manual/CMakeLists.txt" : {
      "ObjectId" : "1696176b96e259413e26bfc5b163c5a5d5ab2359",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n#                                                             #\n\n# File: manual/CMakeLists.txt                                 #\n\n#                                                             #\n\n# Project name: SMT-RAT                                       #\n\n# Contact: Florian Corzilius <corzilius@cs.rwth-aachen.de>,   #\n\n#          Ulrich Loup <loup@cs.rwth-aachen.de>               #\n\n# Project sourceforge page: http://smtrat.sourceforge.net/    #\n\n# Development status: beta                                    #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# Version: 2012-02-21                                         #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate manual TeX source\n\n# # # # # # # # # # # # # # #\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cmake modules needed\n\n# # # # # # # # # # # #\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add \"manual\" target depending on whether pdflatex is available or not\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "resources/boost.cmake" : {
      "ObjectId" : "1d2299d3e7d47c7a65bdb3f4a6ae0c1c7e36375e",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/carl-write-required-version.cmake" : {
      "ObjectId" : "29beb25cbb555c926a8cf8a0be64dec5a502773c",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/carl.cmake" : {
      "ObjectId" : "ab80b2a14da647903100286a2359a71af0508eaf",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/carl/CMakeLists.txt" : {
      "ObjectId" : "f2d8c2a29f929b0806e7819e30b1426937fd2de6",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/cocoa.cmake" : {
      "ObjectId" : "a8bd3cf2c91885e01524ea65e6427cafdcc1fe16",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/gmp.cmake" : {
      "ObjectId" : "1ed3aab0d5be766441087cc1d3b15a788a6111df",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/immer.cmake" : {
      "ObjectId" : "946a01b52de7b57fc352a5a2877560c3a1559fac",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# due to https://gitlab.kitware.com/cmake/cmake/issues/17229\n",
        "Line" : 5,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "resources/resources.cmake" : {
      "ObjectId" : "511d3c425e397cfc81fb0c3f7cd4476a4d9b39cb",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure that libraries from /usr/lib et al are found before OSX frameworks\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############\n\n##### Load resources\n\n###############\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### CArL\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "f5323c925ff414104ecc84c3b54ad8c40b8847da",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n#                                                             #\n\n# File: src/CMakeLists.txt                                    #\n\n#                                                             #\n\n# Project name: SMT-RAT                                       #\n\n# Contact: Florian Corzilius <corzilius@cs.rwth-aachen.de>,   #\n\n#          Ulrich Loup <loup@cs.rwth-aachen.de>               #\n\n# Project page: https://github.com/smtrat/smtrat/wiki         #\n\n# Development status: beta                                    #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# Version: 2013-04-18                                         #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unit tests\n\n# # # # # # #\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# only build tests if we want them to be built. Do not exclude from all target, since\n\n# make test won't build the tests for us!\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/benchmax/CMakeLists.txt" : {
      "ObjectId" : "9f3847d118bb0437af736b08ff39e2b6820ad24b",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Benchmax binary\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Database\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SSH\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Doxygen\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Config file\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/cli/CMakeLists.txt" : {
      "ObjectId" : "ad4e5e8d35bc93e0ae1219ab4f4984efa9b67f08",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n#                                                             #\n\n# File: src/cli/CMakeLists.txt                                #\n\n#                                                             #\n\n# Project name: SMT-RAT                                       #\n\n# Contact: Florian Corzilius <corzilius@cs.rwth-aachen.de>,   #\n\n#          Ulrich Loup <loup@cs.rwth-aachen.de>               #\n\n# Project page: https://github.com/smtrat/smtrat/wiki         #\n\n# Development status: beta                                    #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# Version: 2012-10-10                                         #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO: are all these directories really necessary?\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TODO: we only link against the library, which is copied to the binary root dir. We should somehow save that in a variable.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/delta/CMakeLists.txt" : {
      "ObjectId" : "b319006f198ce8407c13b03b1297c9f7980287e0",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gui/CMakeLists.txt" : {
      "ObjectId" : "c04c439078a984fa777a94f7907e65becf259901",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n#                                                             #\n\n# File: gui/CMakeLists.txt                                    #\n\n#                                                             #\n\n# Project name: SMT-RAT                                       #\n\n# Contact: Florian Corzilius <corzilius@cs.rwth-aachen.de>,   #\n\n#          Ulrich Loup <loup@cs.rwth-aachen.de>               #\n\n# Project page: https://github.com/smtrat/smtrat/wiki         #\n\n# Development status: beta                                    #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# Version: 2012-11-20                                         #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GUI settings\n\n# # # # # # # #\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# modify pathes in build.xml\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# write config.h\n\n#######################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use ant to build the gui\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use java to run the gui\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/lib/CMakeLists.txt" : {
      "ObjectId" : "6280a3eb0ddea12b761ea16552decf885033164d",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-cad/CMakeLists.txt" : {
      "ObjectId" : "1508b30b56dcd79b00962779f17da4386729ba63",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-common/CMakeLists.txt" : {
      "ObjectId" : "a9783dedc34ba5db1d12fab99716b6ced2513e46",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-mcsat/CMakeLists.txt" : {
      "ObjectId" : "b1eef5e797342dbe2a7fe9ed2c9d85a8e3a42285",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/BEModule/CMakeLists.txt" : {
      "ObjectId" : "1c0565376d95999c747c089ae4c8c636ef1d0ffb",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/BVModule/CMakeLists.txt" : {
      "ObjectId" : "0a3688bae874e04c64b25d144604a64e3d4c93bc",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/CADModule/CMakeLists.txt" : {
      "ObjectId" : "0f340aee34a15a2950d6af83912631c72d65283a",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/CMakeLists.txt" : {
      "ObjectId" : "e24add69cf245eb9a7035fc6cd8fa7972e506e35",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Properly configure everything but Instantiation.h\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Properly configure Instantiation.h\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Create library\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/smtrat-modules/CNFerModule/CMakeLists.txt" : {
      "ObjectId" : "941cc064c04e93cce3f32ed46c0cb0ad9b3b835d",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/CSplitModule/CMakeLists.txt" : {
      "ObjectId" : "cb0167553d05b33ae68366877843dcebbc137c4c",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/CoCoAGBModule/CMakeLists.txt" : {
      "ObjectId" : "d5420cc9cbfe6f4dcc86c992025b642e6b05839a",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/CubeLIAModule/CMakeLists.txt" : {
      "ObjectId" : "89575ddc2ecd39c94bdefa7e8974f3438485f9dd",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/CurryModule/CMakeLists.txt" : {
      "ObjectId" : "9861d97d9424792b8c7afca8efd9796aa70e6979",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/EMModule/CMakeLists.txt" : {
      "ObjectId" : "69aeae3cd0e6a62c78f2a67eef445ef01bf66a07",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/EQModule/CMakeLists.txt" : {
      "ObjectId" : "9230c948b821c29522ca9c869481b8d6ae63433e",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/EQPreprocessingModule/CMakeLists.txt" : {
      "ObjectId" : "c334f2190ddc5c746c395bc9a101ede69e23d0c4",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/ESModule/CMakeLists.txt" : {
      "ObjectId" : "9fd356bf7b4c89605a9bbc37c69e3c5dcd161bda",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/FPPModule/CMakeLists.txt" : {
      "ObjectId" : "adf0acf196ec480bde11ea6b1009ea8d0f66f2f1",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/FouMoModule/CMakeLists.txt" : {
      "ObjectId" : "e601a5b819ca4c1c0d093938ed4c85b6b6adf971",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/GBModule/CMakeLists.txt" : {
      "ObjectId" : "0ba1b19bc8c3f3b38de2a0540293494deabc4da0",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/GBPPModule/CMakeLists.txt" : {
      "ObjectId" : "1144519f96b199da0bfac19726dc4f676aaae881",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/ICEModule/CMakeLists.txt" : {
      "ObjectId" : "72c0775e353146696d30a913c605c9c2c24cbcc2",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/ICPModule/CMakeLists.txt" : {
      "ObjectId" : "3210eeb2382098b35a9c1cb7ff1e5fd33e6941f2",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/IncWidthModule/CMakeLists.txt" : {
      "ObjectId" : "e050bb76e9df4df6a71e4e433da66d149669315d",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/IntBlastModule/CMakeLists.txt" : {
      "ObjectId" : "0f2243d796c364e4d8cca515b6bbe5ba80270c77",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/IntEqModule/CMakeLists.txt" : {
      "ObjectId" : "aa00fc8d7743504d23bbe6e502f89df729480660",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/LRAModule/CMakeLists.txt" : {
      "ObjectId" : "2489cfbe3d728be440b289090a0a15643521905c",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/LVEModule/CMakeLists.txt" : {
      "ObjectId" : "7e4c8632de4599db97d82aac82946f72a55a0b8c",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/MCBModule/CMakeLists.txt" : {
      "ObjectId" : "23020e003e0bdcb2dacc26d50be5dcc112bd0256",
      "LastModified" : "2019-03-29T10:29:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/MaxSMTModule/CMakeLists.txt" : {
      "ObjectId" : "a95c589c569b9870037014d4f5166a42f9d2037d",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/NewCADModule/CMakeLists.txt" : {
      "ObjectId" : "5eea2edb8f1b5da680f3ec0f504847e358b9a991",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(NOT DEFINED NEWCAD_INCREMENTALITY)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endif()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(NOT DEFINED NEWCAD_BACKTRACKING)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(NOT DEFINED NEWCAD_MISHEURISTIC)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/smtrat-modules/PBGaussModule/CMakeLists.txt" : {
      "ObjectId" : "22c3a5e657f3ba0ae292b1b76cfa14f932f6ab47",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/PBPPModule/CMakeLists.txt" : {
      "ObjectId" : "afc084ab674393c3c5c57e53464d9ab419378e90",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/PFEModule/CMakeLists.txt" : {
      "ObjectId" : "d825d458f5ade7fb4f1adf7adb1d4d51a1bb77db",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/SATModule/CMakeLists.txt" : {
      "ObjectId" : "ea9239458762b3dae488d5db1c1759771fedcb7b",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/STropModule/CMakeLists.txt" : {
      "ObjectId" : "c0612a99a0197c21a6e84ee85f2f8a532d3a9f0e",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/SplitSOSModule/CMakeLists.txt" : {
      "ObjectId" : "faeb13ce540fb9bb09b2215b567b9b5c7f84a8cf",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/SymmetryModule/CMakeLists.txt" : {
      "ObjectId" : "0d80c314241d01d61624e3b5fa7be1658276a390",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/UFCegarModule/CMakeLists.txt" : {
      "ObjectId" : "092527bb09fad697b34fdd3e4262fbdc0f5e7eca",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/UnionFindModule/CMakeLists.txt" : {
      "ObjectId" : "ff3f0c9328ac1711ec540a45eacfd85ae1ead511",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-modules/VSModule/CMakeLists.txt" : {
      "ObjectId" : "d81a673478f9adb97bffc519da274b015bfa1f66",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-qe/CMakeLists.txt" : {
      "ObjectId" : "2015b64c9704fd9da7f1907db44682cdeeb1df08",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-solver/CMakeLists.txt" : {
      "ObjectId" : "7bdde1733bc312372a078e19e1d9812bb278737f",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-strategies/CMakeLists.txt" : {
      "ObjectId" : "3c65d9bd64a80c109cf5ff107ee710cfe2eb0fb7",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-unsat-cores/CMakeLists.txt" : {
      "ObjectId" : "ae2cfe3ac20cc1de66ed57af25e2f251206c21b7",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smtrat-wrapper/CMakeLists.txt" : {
      "ObjectId" : "39850d25ef47137ed15b33b24844698952c90eab",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "db1252e6a14dae0b57cfc7d74c50620edba4b2f6",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n#                                                             #\n\n# File: src/CMakeLists.txt                                    #\n\n#                                                             #\n\n# Project name: SMT-RAT                                       #\n\n# Contact: Florian Corzilius <corzilius@cs.rwth-aachen.de>,   #\n\n#          Ulrich Loup <loup@cs.rwth-aachen.de>               #\n\n# Project page: https://github.com/smtrat/smtrat/wiki         #\n\n# Development status: beta                                    #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# Version: 2012-07-30                                         #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(Boost COMPONENTS unit_test_framework REQUIRED)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tests/cad/CMakeLists.txt" : {
      "ObjectId" : "117b28649906aff99102201ea13ae126c437977c",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/datastructures/CMakeLists.txt" : {
      "ObjectId" : "65f7ef821755e18109eb57cab7855edca096eeb4",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/fourierMotzkinQE/CMakeLists.txt" : {
      "ObjectId" : "0fd2c6d5ecf3d8d1dc7dd8bbd8f47225c1f8428a",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/mcsat/CMakeLists.txt" : {
      "ObjectId" : "9a928a1ee588cc462f0b2b4ab54a8dc4f6f26d54",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/mcsatvs/CMakeLists.txt" : {
      "ObjectId" : "83ccbe2dce38662e8803476360ca7882b2bfe0b0",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(UNITTEST_LIB \"${carl_DIR}/resources/lib/libboost_unit_test_framework.a\")\n\n#MESSAGE( STATUS \"UNITTEST_LIB:         \" ${UNITTEST_LIB} )\n\n#target_link_libraries(runMcsatVSTests ${UNITTEST_LIB} lib_${PROJECT_NAME} ${libraries})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/nlsat/CMakeLists.txt" : {
      "ObjectId" : "f7d40a03076fc50d573b6c916da2ef78698d1729",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/onecellcad/CMakeLists.txt" : {
      "ObjectId" : "6198017db177425768dd47527bd381bb003e42a5",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO test not compiling, enable when fixed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO test not compiling, enable when fixed\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tests/parser/CMakeLists.txt" : {
      "ObjectId" : "2bc1bfa66876b883235ce5058656c10a35ef6ed3",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libraries definied in top-level CMakeLists.txt\n",
        "Line" : 8,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 1
    },
    "src/tests/pseudobool/CMakeLists.txt" : {
      "ObjectId" : "fea421288b217882881db0862b20c00d63bf0ac3",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/traceprinter/CMakeLists.txt" : {
      "ObjectId" : "cb0be1d7f479b61d2afb0a3c2f4520164fc89d33",
      "LastModified" : "2019-04-04T11:49:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 93
  },
  "ElapsedTime" : 3745
}