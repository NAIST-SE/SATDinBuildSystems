{
  "Repository" : "9281987",
  "Revision" : "HEAD",
  "ObjectId" : "6b20863918cccec4773273d577c2bcf04132ea30",
  "CommitTime" : "2019-04-18T17:12:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ee0142c5ee483ff3ee6fd7a1e87fad432cb0e9aa",
      "LastModified" : "2019-04-17T13:18:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use newer policies if available, up to most recent tested version of CMake.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine if fmt is built as a subproject (using add_subdirectory)\n\n# or if it is the master project.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Joins arguments and places the results in ${result_var}.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the default CMAKE_BUILD_TYPE to Release.\n\n# This should be done before the project command since the latter can set\n\n# CMAKE_BUILD_TYPE itself (it does so for nmake).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Options that control generation of various targets.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get version from core.h\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use math to skip leading zeros if any.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If Microsoft SDK is installed create script run-msbuild.bat that\n\n# calls SetEnv.cmd to set up build environment and runs msbuild.\n\n# It is useful when building Visual Studio projects with the SDK\n\n# toolchain rather than Visual Studio.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Set FrameworkPathOverride to get rid of MSB3644 warnings.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Define the fmt library, its includes and the needed defines.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Fix rpmlint warning:\n\n# unused-direct-shlib-dependency /usr/lib/libformat.so.1.1.0 /lib/libm.so.6.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Install targets.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate the version, config and target files into the build directory.\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Use a namespace because CMake provides better diagnostics for namespaced\n\n# imported targets.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Install version, config and target files.\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Install the library and headers.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Get the list of ignored files from .gitignore.\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "f3dae606e01d680693074cf59d259674f8f0f0c5",
      "LastModified" : "2018-12-28T23:05:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "support/cmake/FindSetEnv.cmake" : {
      "ObjectId" : "4e2da5408ac3c54975ff9acc7091ffdbb6c83b0d",
      "LastModified" : "2015-02-22T00:02:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A CMake script to find SetEnv.cmd.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "support/cmake/cxx14.cmake" : {
      "ObjectId" : "032fcb270e0da118cd0468d69dc4793e760a0e1a",
      "LastModified" : "2019-04-17T13:18:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C++14 feature support detection\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if variadic templates are working and not affected by GCC bug 39653:\n\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=39653\n\n# Can be removed once gcc 4.4 support is dropped.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if user-defined literals are available\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if <variant> is available\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "support/fmt.pro" : {
      "ObjectId" : "c555d0b4aeb6916897ef2c936c57600ba48a9790",
      "LastModified" : "2018-05-09T13:21:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Staticlib configuration for qmake builds\n\n# For some reason qmake 3.1 fails to identify source dependencies and excludes format.cc and printf.cc\n\n# from compilation so it _MUST_ be called as qmake -nodepend\n\n# A workaround is implemented below: a custom compiler is defined which does not track dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QMAKE_RUN_CXX will not be expanded\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "e3667d0661119c5323345a1d65c58d577c57067c",
      "LastModified" : "2019-04-17T13:18:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Build the google test library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We compile Google Test ourselves instead of using pre-compiled libraries.\n\n# See the Google Test FAQ \"Why is it not recommended to install a\n\n# pre-compiled copy of Google Test (for example, into /usr/local)?\"\n\n# at http://code.google.com/p/googletest/wiki/FAQ for more details.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Workaround a bug in implementation of variadic templates in MSVC11.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GTest doesn't detect <tuple> with clang.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Silence MSVC tr1 deprecation warning in gmock.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Build the actual library tests\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Workaround GTest bug https://github.com/google/googletest/issues/705.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use less strict pedantic flags for the tests because GMock doesn't compile\n\n# cleanly with -pedantic and -std=c++98.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(PEDANTIC_COMPILE_FLAGS -Wall -Wextra -Wno-long-long -Wno-variadic-macros)\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Adds a test.\n\n# Usage: add_fmt_test(name srcs...)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define if certain C++ features can be used.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# MSVC fails to compile GMock when C++17 is enabled.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test that the library can be compiled with exceptions disabled.\n\n# -fno-exception is broken in icc: https://github.com/fmtlib/fmt/issues/822.\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Test that the library compiles without locale.\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Test that the library compiles without windows.h.\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# These tests are disabled on Windows because they take too long.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Test if the targets are found from the build directory.\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Test if the targets are found when add_subdirectory is used.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "test/add-subdirectory-test/CMakeLists.txt" : {
      "ObjectId" : "db7054bd8f992b4b2449933598906ed4a5423b9d",
      "LastModified" : "2018-06-06T13:57:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/compile-test/CMakeLists.txt" : {
      "ObjectId" : "75a0c5a5e5e477ce8d233a19a393da09b93a44ad",
      "LastModified" : "2018-06-06T13:57:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test if compile errors are produced where necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unset the CMake cache variable compiles. Otherwise the compile test will\n\n# just use cached information next time it runs.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Unset the CMake cache variable compiles. Otherwise the compile test will\n\n# just use cached information next time it runs.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# check if the source file skeleton compiles\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Formatting a wide character with a narrow format string is forbidden.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Formatting a wide string with a narrow format string is forbidden.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Formatting a narrow string with a wide format string is forbidden because\n\n# mixing UTF-8 with UTF-16/32 can result in an invalid output.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Formatting a wide string with a narrow format string is forbidden.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure that compiler features detected in the header\n\n# match the features detected in CMake.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "test/find-package-test/CMakeLists.txt" : {
      "ObjectId" : "513575570bb72b9517977213133d99dae0ca79bb",
      "LastModified" : "2018-06-06T13:57:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "QMAKE" : 1
  },
  "ElapsedTime" : 2102
}