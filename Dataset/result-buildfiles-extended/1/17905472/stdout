{
  "Repository" : "17905472",
  "Revision" : "HEAD",
  "ObjectId" : "fa37aa69be28f2b8df26288600decf96c980aff5",
  "CommitTime" : "2019-04-15T16:17:52Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "199af30fdab1886a60330fca344b628f358cbbae",
      "LastModified" : "2019-04-08T20:10:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Convenience Makefile for generating and releasing SBP client\n\n# libraries. Please read and understand the contents of this file\n\n# before using it to do Crazy Things.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the system's default python version\n",
        "Line" : 11,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "# Functions\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Help!\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Prerequisite verification\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Dependencies\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generators\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Testers\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "c/CMakeLists.txt" : {
      "ObjectId" : "fbb073029618f36a42ecc8c83010786f9390c9ec",
      "LastModified" : "2019-03-26T17:01:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################\n\n# Set some reasonable default compiler flags.\n\n# Users of LibSbp that need different flags to be used can specify them\n\n# when invoking cmake (cmake -DLIBSBP_CFLAGS:STRING=\"-Os -ffunction-sections\")\n\n# or by editing the CMakeCache.txt manually after invoking cmake\n\n##########################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/cmake/FindCheck.cmake" : {
      "ObjectId" : "8ad818f42b2c3639f33e8451488bd520b31ff020",
      "LastModified" : "2015-03-10T17:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the CHECK libraries\n\n#  Once done this will define\n\n#\n\n#  CHECK_FOUND - system has check\n\n#  CHECK_INCLUDE_DIRS - the check include directory\n\n#  CHECK_LIBRARIES - check library\n\n#\n\n#  Copyright (c) 2007 Daniel Gollub <gollub@b1-systems.de>\n\n#  Copyright (c) 2007-2009 Bjoern Ricks  <bjoern.ricks@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for CHECK include dir and libraries\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Hide advanced variables from CMake GUIs\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "c/cmake/Toolchain-gcc-arm-embedded.cmake" : {
      "ObjectId" : "a11e27fee89ce36af62ebb4deed72e8f165492dd",
      "LastModified" : "2018-11-19T08:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake Toolchain file for the gcc-arm-embedded toolchain.\n\n# https://launchpad.net/gcc-arm-embedded\n\n#\n\n# Copyright (c) 2013 Swift Navigation Inc.\n\n# Contact: Fergus Noble <fergus@swift-nav.com>\n\n#\n\n# This source is subject to the license found in the file 'LICENSE' which must\n\n# be be distributed together with this source. All other rights reserved.\n\n#\n\n# THIS CODE AND INFORMATION IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n\n# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Targeting an embedded system, no OS.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Trust user to have cross compiler properly setup\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the target environment prefix..\n\n# First see where gcc is keeping libc.a\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Strip the filename off\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Then find the canonical path to the directory one up from there\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# When we break up long strings in CMake we get semicolon\n\n# separated lists, undo this here...\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "c/docs/CMakeLists.txt" : {
      "ObjectId" : "730990ed0c12caa8fb1f9eb713f25276aab20ece",
      "LastModified" : "2015-04-07T18:34:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#option(BUILD_DOCUMENTATION \"Use Doxygen to create API documentation\" ON)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "c/example/CMakeLists.txt" : {
      "ObjectId" : "523cc4da8010afe7cd49f394d8072ac5840a3034",
      "LastModified" : "2018-08-07T04:37:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/example/tcp_example/CMakeLists.txt" : {
      "ObjectId" : "892caca1e6a35e166950421118ea08cb8b91eee2",
      "LastModified" : "2018-10-08T14:34:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/src/CMakeLists.txt" : {
      "ObjectId" : "1568255e2f4a05d4d243b617ae674fe79107b287",
      "LastModified" : "2019-03-26T17:01:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/test/CMakeLists.txt" : {
      "ObjectId" : "5e3105c787fb96a4090855c81fcc16821dd030fe",
      "LastModified" : "2019-02-19T22:42:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check needs to be linked against Librt on Linux\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "python/Makefile" : {
      "ObjectId" : "0761c23eb72d8edd22ac5e27b8dbf77657dfdc3b",
      "LastModified" : "2019-04-08T20:10:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python/docs/Makefile" : {
      "ObjectId" : "76278099cb37e6a0d3b26f5365f04c7c8833db07",
      "LastModified" : "2018-10-08T14:34:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 3719
}