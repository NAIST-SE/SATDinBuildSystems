{
  "Repository" : "288366",
  "Revision" : "HEAD",
  "ObjectId" : "172cac87ac4504409fe788b27e88bff839e343ce",
  "CommitTime" : "2019-04-15T07:06:51Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "13f9fa779cba098b31ecba5bd29fee8efe7399a7",
      "LastModified" : "2018-04-26T09:20:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "edc514cc0b9e26b67055bd172e02c55909ac809e",
      "LastModified" : "2019-04-02T12:23:06Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n    These groovy scripts are used later in this POM file to generate\n    source files and resources for the library itself and for the\n    testsuite.\n    ",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n    ${deps.dir} should point to a directory containing a working copy of\n    rabbitmq-codegen and rabbitmq-server, named \"rabbitmq_codegen\" and\n    \"rabbit\" respectively.\n\n    \"rabbitmq_codegen\" is used to generate required Java source files.\n    Its path can be specified with the ${codegen.dir} property instead.\n\n    \"rabbit\" is used to automatically setup a RabbitMQ cluster for the\n    testsuite.\n    ",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : " For testing only ",
        "Line" : 107,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : " to sign artifacts when releasing ",
        "Line" : 123,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : "\n      If we detect the RabbitMQ Umbrella project, use its dependencies\n      directory.\n      ",
        "Line" : 132,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : " On FreeBSD, GNU Make is installed as \"gmake\". ",
        "Line" : 145,
        "CharPositionInLine" : 61
      },
      "6" : {
        "Text" : " On Windows, use the Batch version of rabbitmqctl. ",
        "Line" : 156,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : "\n      Java 8's Javadoc is way more sensible to documentation\n      correctness. For now, disable all those errors until we fix them.\n      ",
        "Line" : 170,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "\n      We need this option in Java 11+ to avoid an\n      extra 'undefined' segment in the URL\n      ",
        "Line" : 184,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "\n      To ease testing of the Java client, this POM can setup a RabbitMQ\n      cluster automatically, including TLS support.\n\n      It depends on the presence of ${rabbitmq.dir} which points to\n      a working copy of the rabbitmq-server Git repository. If it\n      is missing, nothing is setup and the testsuite relies on an\n      externally provided broker/cluster.\n\n      If you want to explicitly disable the automatic cluster setup,\n      you must disable this profile:\n\n          mvn verify -P '!setup-test-cluster'\n\n      ",
        "Line" : 209,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "\n              We use \"${rabbitmq.dir}/Makefile\" to query the location of\n              the test TLS certificates.\n              ",
        "Line" : 233,
        "CharPositionInLine" : 18
      },
      "11" : {
        "Text" : "\n              Start two brokers and cluster them.\n\n              Currently, those test brokers will listen to the default\n              TCP ports of 5672 and 5673 for AMQP and 5671 and 5670\n              for AMQP+TLS. Unfortunately, this means no other standard\n              RabbitMQ can run on the same host at the same time.\n              ",
        "Line" : 254,
        "CharPositionInLine" : 18
      },
      "12" : {
        "Text" : "\n              After the testsuite, no matter the result, stop both test brokers.\n              ",
        "Line" : 306,
        "CharPositionInLine" : 18
      },
      "13" : {
        "Text" : "\n          Generate two Java keystores from the test TLS certificates.\n          Here, we only enable the plugin. The actual configuration is\n          in the main <build /> element.\n          ",
        "Line" : 344,
        "CharPositionInLine" : 14
      },
      "14" : {
        "Text" : "\n      If the caller decided to provide an external RabbitMQ\n      broker/cluster, he can specify the path to his test TLS\n      certificates with the ${test-tls-certs.dir} property.\n\n      Thus, if the CA certificate exists, we also enable the generation\n      of the two Java keystores.\n      ",
        "Line" : 365,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "\n      Tests are integration tests, not unit tests, because they depend\n      on a running broker which can be automatically started by this\n      POM.\n\n      To skip those tests, you can run use the usual ${skipTests}\n      property:\n\n          mvn verify -DskipTests\n\n      ",
        "Line" : 397,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "\n                needed because of bug in OpenJDK 8 u181 on Debian distros\n                see https://stackoverflow.com/questions/53010200/maven-surefire-could-not-find-forkedbooter-class\n              ",
        "Line" : 443,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "\n      Profile to activate the NIO mode in the test suite:\n      mvn verify -P use-nio\n    ",
        "Line" : 468,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "\n                needed because of bug in OpenJDK 8 u181 on Debian distros\n                see https://stackoverflow.com/questions/53010200/maven-surefire-could-not-find-forkedbooter-class\n              ",
        "Line" : 484,
        "CharPositionInLine" : 18
      },
      "19" : {
        "Text" : "\n      The \"ossrh-release\" Maven profile is used to push release artifacts to a\n      Sonatype staging repository.\n      ",
        "Line" : 496,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "\n      The \"bintray-release\" Maven profile is used to push release artifacts to the\n      Bintray Release Maven Repository.\n    ",
        "Line" : 549,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "\n      The \"milestone\" Maven profile is used to push release artifacts to the\n      PackageCloud Milestones Maven Repository.\n    ",
        "Line" : 604,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : " We store the client version in a Java properties file. ",
        "Line" : 761,
        "CharPositionInLine" : 68
      },
      "23" : {
        "Text" : "\n    Those resources are a Java properties file and RabbitMQ\n    configuration files for the test brokers.\n    ",
        "Line" : 772,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "\n          Generate Java source files from specifications found in\n          ${codegen.dir}. The groovy script is used as a \"proxy\"\n          to execute a Python script with the proper arguments and\n          environment.\n          ",
        "Line" : 803,
        "CharPositionInLine" : 14
      },
      "25" : {
        "Text" : "\n          We always remove the generated Java keystores because\n          keytool(1) complains if the destination file already exists\n          with the content we want to import.\n          ",
        "Line" : 833,
        "CharPositionInLine" : 14
      },
      "26" : {
        "Text" : "\n      Disable the unit tests plugin because we only have integration\n      tests.\n      ",
        "Line" : 885,
        "CharPositionInLine" : 10
      },
      "27" : {
        "Text" : " Generate two Java keystores for the SSLTests testsuite. ",
        "Line" : 895,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 28
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 1639
}