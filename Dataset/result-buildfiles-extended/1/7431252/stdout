{
  "Repository" : "7431252",
  "Revision" : "HEAD",
  "ObjectId" : "30528f3d4cd6d6509d312b6220ad3ebe14543f9c",
  "CommitTime" : "2015-08-06T18:40:16Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "139f2fdde71ac543c5df3626f881031cbaa8b186",
      "LastModified" : "2015-05-20T20:42:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "createIndex/Makefile" : {
      "ObjectId" : "b0c66a5f5d31989a52cd43c9db31102a4f483acf",
      "LastModified" : "2015-03-10T20:24:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# What are our generic objects?\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# What objects do we need for our createIndex binary?\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# And for our mapReads binary?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# And for our cactusMerge binary?\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# And for our evaluateMapability binary?\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# What projects do we depend on? We have rules for each of these.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify all the libs to link with.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need to make sure all our dependency header files are where our other\n\n# dependency includes want them to be. pinchesAndCacti just includes \"sonLib.h\",\n\n# so we need to explicitly point at its include directory. And similarly we need\n\n# to grab all the internal include directories from libsuffixtools.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Stop deleting intermediate files I might need to use in the final program!\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Re-do things every time\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# pinchesAndCacti dependency\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# transitive sonLib dependency\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# dependency on VFLib graph matching library for analyzing rearrangement\n\n# structures\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# libsuffixtools dependency\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# libFMD dependency\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# We can automagically get header dependencies.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include auto-generated dependencies.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "libFMD/Makefile" : {
      "ObjectId" : "9376ee17e103565a9e7c5e1fa46ed951babe5d76",
      "LastModified" : "2015-05-20T20:42:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# What are our generic objects?\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# What are our SWIG JNI wrapper objects?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# What do we need for our test runner binary?\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# What projects do we depend on? We have rules for each of these.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify all the libs to link with.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We need to link against cppunit when we run our tests. And also the libs that\n\n# our libs need.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# What Java package should we put the SWIG bindings in? Also used as the Maven\n\n# groupID.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Flags to use for building SWIG code against Java. Adjust for your platform\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Stop deleting intermediate files I might need to use in the final program!\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# libsuffixtools dependency\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Make the directory for the Java package\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Install the jar in the Maven local repository. See\n\n# http://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SWIG C++ file generation and compilation.\t\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# We can automagically get header dependencies. We need to hack the output of\n\n# g++ -MM because it writes rules ignoring the relative path to the source file.\n\n# We also need to hack whatever/../ into just an empty string so we don't go\n\n# depending on files by really strange paths.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include auto-generated dependencies.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15,
      "Errorlog" : "line 102:57 token recognition error at: '\\1'\nline 103:59 token recognition error at: '\\1'\n"
    },
    "libsuffixtools/Makefile" : {
      "ObjectId" : "0c1b1a3b99863afdf47d5b3f0cc715a99a936a45",
      "LastModified" : "2015-03-10T20:24:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for libsuffixtools, a library of FM- and FMD-index tools for DNA\n\n# sequences.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to define CFLAGS since some of our thirdparty code is in C and needs\n\n# -fPIC\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need to link against cppunit when we run our tests.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# What object files need to be built and put in the library?\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# What do we need for our test runner binary?\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We want those all to be packed up into libraries.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We can automagically get header dependencies.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include auto-generated dependencies.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 111:84 token recognition error at: '\\1'\nline 112:59 token recognition error at: '\\1'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1086
}