{
  "Repository" : "6848257",
  "Revision" : "HEAD",
  "ObjectId" : "d6ba56af88f5c952d9c87d7c0df36ab7fa98e89f",
  "CommitTime" : "2019-04-12T07:05:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "873bfb2443432b8ae1750928f10c2b51e9917bd9",
      "LastModified" : "2016-06-28T16:41:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################\n\n# CMake file for the pXar framework\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project name\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UPDATE THIS BEFORE RELEASING A SOURCE CODE TARBALL!\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n# pxar build options and their defaults #\n\n#########################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build flag for Ethernet interface implementation:\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build flag for USB interface implementation:\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Switch off building for all interfaces:\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########################################\n\n# Setup the build environment for pxar #\n\n########################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# some macros are redefined to keep compatability with CMake 2.6\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Additional packages to be searched for by cmake\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check if this is a source tarball build\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set package version\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Get the version from last git tag plus number of additional commits:\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# If we don't have git we take the hard-set version.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set the correct build type and allow command line options:\n\n# Set a default build type if none was specified\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#######################################\n\n# Check prerequisities for pXar build #\n\n#######################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include packages for threading:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find the required libraries for the ethernet interface:\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Find the FTDI chip drivers, either the open source or proprietary one,\n\n# depending on the build option we set. Use the other as fallback:\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# init the variable that will later hold the FTDI library name we link against\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# We have none of the two options available, this doesn't work!\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# One of the options is available, let's figure out which one to use!\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# We want FTD2XX, we have FTD2XX.\n",
        "Line" : 121,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# We want FTD2XX but it's not there. So let's take FTDI.\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# We want FTDI, and we have it.\n",
        "Line" : 137,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# We want FTDI but we only have FTD2XX, so let's take that instead.\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Check for libusb-1.0 package (not required on Windows w/ FTD2XX library):\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# set the path to which we will install later: default project home, can be changed using\n\n# cmake -DINSTALL_PREFIX=/some/dir ..\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# SET THE RPATH SO THAT OUR EXECUTABLES FIND THE LIBRARY EVEN WHEN INSTALLED INTO NON-DEFAULT LOCATIONS\n\n# see http://www.cmake.org/Wiki/CMake_RPATH_handling\n\n# enable @rpath in the install name for any shared library being built\n\n# note: it is planned that a future version of CMake will enable this by default\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# *ALTERNATIVELY*: USE RELATIVE PATHS\n\n# see http://www.semipol.de/archives/356\n\n# for all binaries created in a CMake project:\n\n#SET(CMAKE_INSTALL_RPATH \"$ORIGIN/../lib:$ORIGIN/\")\n\n# for certain targets\n\n#SET_TARGET_PROPERTIES(target 1 target2 ...\n\n#    PROPERTIES INSTALL_RPATH \"$ORIGIN/../lib:$ORIGIN/\")\n\n# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##################################################\n\n# Preparing the build of the shared pxar library #\n\n##################################################\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Include directories\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Always build main pxar API library;\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# init the variable that will later hold the devices library name we might link against\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Add external devices directory (HV Power supplies)\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# full UI and test suite (requires ROOT)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# this UI and its libraries depend on ROOT:\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Build the util library\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Build the analysis  library\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Build the tests and test library\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Build the usertests library\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Build the pXar executable\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Build the pXar GUI\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Build pxar tools\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Add targets for Doxygen code reference and LaTeX User manual\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#######################################################\n\n# Print out system information useful for bug reports #\n\n############################################### #######\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "ana/CMakeLists.txt" : {
      "ObjectId" : "ff278b040c34925249d1dc0fc2e3ae52d4919635",
      "LastModified" : "2015-04-22T15:10:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build util library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fill list of header files \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set everything needed for the root dictonary and create the\n\n# dictionary\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create a shared library\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# link against our core library, the root stuff, and the USB libs\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# install the lib in the appropriate directory\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/CMakeCompatibility.cmake" : {
      "ObjectId" : "bb7421609874438c0487254dbcf14bacc5039861",
      "LastModified" : "2014-01-30T14:25:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; -*-\n\n# This file contains macros to ensure compatibility with older CMake versions such as 2.6\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy files from source directory to destination directory, substituting any\n\n# variables.  Create destination directory if it does not exist.\n\n# Defined twice: once for CMake > 2.8 and once for 2.6\n\n# CMake < 2.8 does not know about FILE(COPY ..) function\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define macro as alias to FILE(COPY ..)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake 2.6\n",
        "Line" : 14,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "# disable a warning about changed behaviour when traversing directories recursively (wrt symlinks)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# disabling a warning about policy changing in this scope\n",
        "Line" : 18,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# actual copy macro\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindCython.cmake" : {
      "ObjectId" : "f367ba7882f05ac08542c81c7d93808b0847cd12",
      "LastModified" : "2014-07-11T06:36:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Cython compiler.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  CYTHON_EXECUTABLE\n\n#\n\n# See also UseCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Cython executable that lives next to the Python executable\n\n# if it is a local installation.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check cython's version if we're using cmake >= 2.6\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extract the cython version from the --version flag\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Check found version against required one\n\n#IF (DEFINED Cython_FIND_VERSION AND ${CYTH_VERSION} VERSION_LESS Cython_FIND_VERSION)\n\n#\tSET(CYTHON_FOUND FALSE)\n\n#ELSE ()\n\n#\tSET(CYTHON_FOUND TRUE)\n\n#ENDIF ()\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "cmake/FindFTD2XX.cmake" : {
      "ObjectId" : "df4bdaa0d3f25194c3ade96c0bc1168445bf0b24",
      "LastModified" : "2014-07-11T06:36:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FTD2XX installation\n\n# This module tries to find the libftd2xx installation on your system.\n\n# Once done this will define\n\n#\n\n#  FTD2XX_FOUND - system has ftd2xx\n\n#  FTD2XX_INCLUDE_DIR - ~ the ftd2xx include directory \n\n#  FTD2XX_LIBRARY - Link these to use ftd2xx\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine if we run a 64bit compiler or not\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set path to DLL for later installation\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindFTDI.cmake" : {
      "ObjectId" : "570afa7dca30bc6437673a92d0647543ba181a6b",
      "LastModified" : "2014-07-11T06:36:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FTDI installation\n\n# This module tries to find the libftdi installation on your system.\n\n# Once done this will define\n\n#\n\n#  FTDI_FOUND - system has ftdi\n\n#  FTDI_INCLUDE_DIR - ~ the ftdi include directory \n\n#  FTDI_LIBRARY - Link these to use ftdi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindPCAP.cmake" : {
      "ObjectId" : "9a8a243681150670fb8cb0aa6e57902046fa67fe",
      "LastModified" : "2014-11-17T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################\n\n#\n\n#  Copyright (c) 2006 Frederic Heem, <frederic.heem@telsey.it>\n\n#  All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in\n\n#   the documentation and/or other materials provided with the\n\n#   distribution.\n\n#\n\n# * Neither the name of the Telsey nor the names of its\n\n#   contributors may be used to endorse or promote products derived\n\n#   from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n###################################################################\n\n# - Find pcap\n\n# Find the PCAP includes and library\n\n# http://www.tcpdump.org/\n\n#\n\n# The environment variable PCAPDIR allows to specficy where to find \n\n# libpcap in non standard location.\n\n#  \n\n#  PCAP_INCLUDE_DIRS - where to find pcap.h, etc.\n\n#  PCAP_LIBRARIES   - List of libraries when using pcap.\n\n#  PCAP_FOUND       - True if pcap found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Functions\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Is pcap found ?\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindROOT.cmake" : {
      "ObjectId" : "b3d265787d12133cefafaec2468e1d1881141443",
      "LastModified" : "2015-04-22T15:10:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ROOT instalation\n\n# This module tries to find the ROOT installation on your system.\n\n# It tries to find the root-config script which gives you all the needed information.\n\n# If the system variable ROOTSYS is set this is straight forward.\n\n# If not the module uses the pathes given in ROOT_CONFIG_SEARCHPATH.\n\n# If you need an other path you should add this path to this varaible.  \n\n# The root-config script is then used to detect basically everything else.\n\n# This module defines a number of key variables and macros.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# F.Uhlig@gsi.de (fairroot.gsi.de)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# root config is a bash script and not commonly executable under Windows\n\n# make some static assumptions instead\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we need at least version 5.00/00\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# now parse the parts of the user given version string into variables\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# and now the version string given by qmake\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# compute an overall version number which can be compared at once\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# ask root-config for the library dir\n\n# Set ROOT_LIBRARY_DIR\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# ask root-config for the binary dir\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# ask root-config for the include dir\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CACHE INTERNAL \"\")\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# ask root-config for the library varaibles\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#    ARGS \"--noldflags --noauxlibs --libs\" \n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#  STRING(REGEX MATCHALL \"([^ ])+\"  root_libs_all ${root_flags})\n\n#  STRING(REGEX MATCHALL \"-L([^ ])+\"  root_library ${root_flags})\n\n#  REMOVE_FROM_LIST(root_flags \"${root_libs_all}\" \"${root_library}\")\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Set ROOT_INCLUDES\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#######################################\n\n#\n\n#       Check the executables of ROOT \n\n#          ( rootcint ) \n\n#\n\n#######################################\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "###########################################\n\n#\n\n#       Macros for building ROOT dictionary\n\n#\n\n###########################################\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#  MESSAGE(\"INFILES: ${INFILES}\")\n\n#  MESSAGE(\"OutFILE: ${OUTFILE}\")\n\n#  MESSAGE(\"LINKDEF_FILE: ${LINKDEF_FILE}\")\n\n#  MESSAGE(\"INCLUDE_DIRS: ${INCLUDE_DIRS}\")\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#   MESSAGE(\"BLA: ${bla}\")\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#   MESSAGE(\"ROOT_CINT_EXECUTABLE has created the dictionary ${OUTFILE}\")\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###########################################\n\n#\n\n#       Macros for building ROOT dictionary\n\n#\n\n###########################################\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#  MESSAGE(\"INFILES: ${INFILES}\")\n\n#  MESSAGE(\"OutFILE: ${OUTFILE}\")\n\n#  MESSAGE(\"LINKDEF_FILE: ${LINKDEF_FILE}\")\n\n#  MESSAGE(\"INCLUDE_DIRS: ${INCLUDE_DIRS}\")\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#  MESSAGE(\"BLA: ${bla}\")\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#MESSAGE(\"PATH: ${path_name}\")\n\n#MESSAGE(\"Ext: ${file_extension}\")\n\n#MESSAGE(\"Name: ${file_name}\")\n\n#MESSAGE(\"Shell Name: ${shell_script_name}\")\n",
        "Line" : 274,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#MESSAGE(\"New PATH: ${new_path}\")\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 26
    },
    "cmake/Findlibusb-1.0.cmake" : {
      "ObjectId" : "bc0d951f8c5e3025ecd4b9ede9e00906ac44c534",
      "LastModified" : "2014-11-17T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libusb-1.0\n\n# Once done this will define\n\n#\n\n#  LIBUSB_1_FOUND - system has libusb\n\n#  LIBUSB_1_INCLUDE_DIRS - the libusb include directory\n\n#  LIBUSB_1_LIBRARIES - Link these to use libusb\n\n#  LIBUSB_1_DEFINITIONS - Compiler switches required for using libusb\n\n#\n\n#  Adapted from cmake-modules Google Code project\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  (Changes for libusb) Copyright (c) 2008 Kyle Machulis <kyle@nonpolynomial.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the New BSD license.\n\n#\n\n# CMake-Modules Project New BSD License\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the CMake-Modules Project nor the names of its\n\n#   contributors may be used to endorse or promote products derived from this\n\n#   software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# strip file name\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# strip 'libusb-1.0' path component\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# strip down to main lib dir\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# in cache already\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# determine if we run a 64bit compiler or not\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set path to DLL for later installation\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# strip file name\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#strip last directory level\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# show the LIBUSB_1_INCLUDE_DIRS and LIBUSB_1_LIBRARIES variables only in the advanced view\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "cmake/Platform.cmake" : {
      "ObjectId" : "df7342b1cb7cc750a503d96f4e11f8debcee9683",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine platform- and compiler-specific settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compiler specific settings\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add some more general preprocessor defines (only for gcc)\n",
        "Line" : 5,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# disables the min/max macros\n",
        "Line" : 19,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# disables warning concerning dll-interface (comes up for std classes too often)\n\n# disables warning concerning dll-interface (comes up for std classes too often)\n\n# disables warning concerning casting done inside ROOT classes.\n\n# this compiler warnung is about that functions like fopen are unsafe.\n",
        "Line" : 20,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 5
    },
    "cmake/PrintSystemInformation.cmake" : {
      "ObjectId" : "6923815a827297bdd5bcf37469dfc61f047726ca",
      "LastModified" : "2014-11-17T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# print system information\n\n#\n\n# if you are building in-source, this is the same as CMAKE_SOURCE_DIR, otherwise \n\n# this is the top level directory of your build tree \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# contains the full path to the root of your project source directory,\n\n# i.e. to the nearest directory where CMakeLists.txt contains the PROJECT() command \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# determine compiler type (32/64bit)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# newer versions of CMake set the compiler version variable;\n\n# if not set, check manually\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use info from CMake\n",
        "Line" : 27,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "# check compiler version number manually\n\n# CHECK CLANG VERSION NUMBER\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#CHECK GCC VERSION NUMBER\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MICROSOFT VISUAL C++\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/ReplicatePythonSourceTree.cmake" : {
      "ObjectId" : "d308cce779e5e2ccb9d2c9edb9869b5f6544e7e7",
      "LastModified" : "2014-11-17T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: when executed in the build dir, then CMAKE_CURRENT_SOURCE_DIR is the\n\n# build dir.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/UseCython.cmake" : {
      "ObjectId" : "14f0f43888afe137d947e11d68164e83cc49e2e1",
      "LastModified" : "2014-11-17T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a function to create Cython modules.\n\n#\n\n# For more information on the Cython project, see http://cython.org/.\n\n# \"Cython is a language that makes writing C extensions for the Python language\n\n# as easy as Python itself.\"\n\n#\n\n# This file defines a CMake function to build a Cython Python module.\n\n# To use it, first include this file.\n\n#\n\n#   include( UseCython )\n\n#\n\n# Then call cython_add_module to create a module.\n\n#\n\n#   cython_add_module( <module_name> <src1> <src2> ... <srcN> )\n\n#\n\n# To create a standalone executable, the function\n\n#\n\n#   cython_add_standalone_executable( <executable_name> [MAIN_MODULE src1] <src1> <src2> ... <srcN> )\n\n#\n\n# To avoid dependence on Python, set the PYTHON_LIBRARY cache variable to point\n\n# to a static library.  If a MAIN_MODULE source is specified, \n\n# the \"if __name__ == '__main__':\" from that module is used as the C main() method\n\n# for the executable.  If MAIN_MODULE, the source with the same basename as\n\n# <executable_name> is assumed to be the MAIN_MODULE.\n\n#\n\n# Where <module_name> is the name of the resulting Python module and\n\n# <src1> <src2> ... are source files to be compiled into the module, e.g. *.pyx,\n\n# *.py, *.c, *.cxx, etc.  A CMake target is created with name <module_name>.  This can\n\n# be used for target_link_libraries(), etc.\n\n#\n\n# The sample paths set with the CMake include_directories() command will be used\n\n# for include directories to search for *.pxd when running the Cython complire.\n\n#\n\n# Cache variables that effect the behavior include:\n\n#\n\n#  CYTHON_ANNOTATE\n\n#  CYTHON_NO_DOCSTRINGS\n\n#  CYTHON_FLAGS\n\n#\n\n# Source file properties that effect the build process are\n\n#\n\n#  CYTHON_IS_CXX\n\n#\n\n# If this is set of a *.pyx file with CMake set_source_files_properties()\n\n# command, the file will be compiled as a C++ file.\n\n#\n\n# See also FindCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration options.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a *.c or *.cxx file from a *.pyx file.\n\n# Input the generated file basename.  The generate file will put into the variable\n\n# placed in the \"generated_file\" argument. Finally all the *.py and *.pyx files.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to assuming all files are C.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Determine if it is a C or C++ file.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Get the include directories.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Determine dependencies.\n\n# Add the pxd file will the same name as the given pyx file.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pxd files to check for additional dependencies.\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check for C header dependencies\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Had trouble getting the quote in the regex\n",
        "Line" : 137,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# check for pxd dependencies\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Look for cimport statements.\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Add the module to the files to check, if appropriate.\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# if it is not already going to be checked\n",
        "Line" : 175,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# if it has not already been checked\n",
        "Line" : 176,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# if pxd file can be found\n",
        "Line" : 177,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# for each module dependency discovered\n",
        "Line" : 178,
        "CharPositionInLine" : 21
      },
      "18" : {
        "Text" : "# for each pxd file to check\n",
        "Line" : 179,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : "# pyx_file\n",
        "Line" : 182,
        "CharPositionInLine" : 15
      },
      "20" : {
        "Text" : "# Set additional flags.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Include directory arguments. \n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Determining generated file name.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add the command to run the compiler.\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Remove their visibility to the user.\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# cython_add_module( <name> src1 src2 ... srcN )\n\n# Build the Cython Python module.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cython_add_standalone_executable( _name [MAIN_MODULE src3.py] src1 src2 ... srcN )\n\n# Creates a standalone executable the given sources.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "cmake/UseLATEX.cmake" : {
      "ObjectId" : "8905a8b5c2935fddbe8f92f42dee9b2696d87ba0",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.10.5\n\n# Author: Kenneth Moreland <kmorel@sandia.gov>\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following function is defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                    [BIBFILES <bib_files>]\n\n#                    [INPUTS <input_tex_files>]\n\n#                    [IMAGE_DIRS] <image_directories>\n\n#                    [IMAGES] <image_files>\n\n#                    [CONFIGURE] <tex_files>\n\n#                    [DEPENDS] <tex_files>\n\n#                    [MULTIBIB_NEWCITES] <suffix_list>\n\n#                    [USE_INDEX] [USE_GLOSSARY] [USE_NOMENCL]\n\n#                    [DEFAULT_PDF] [DEFAULT_SAFEPDF] [DEFAULT_PS] [NO_DEFAULT]\n\n#                    [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag).  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux and other auxiliary files.\n\n#                       This is sometimes necessary if a LaTeX error occurs\n\n#                       and writes a bad aux file.  Unlike the regular clean\n\n#                       target, it does not delete other input files, such as\n\n#                       converted images, to save time on the rebuild.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.  Likewise,\n\n#       DEFAULT_SAFEPDF sets the default target to safepdf.  If NO_DEFAULT\n\n#       is specified, then no target will be added to ALL, which is\n\n#       convenient when including LaTeX documentation with something else.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.  If the\n\n#       argument MULTIBIB_NEWCITES is given, then additional bibtex calls\n\n#       are added to the build to support the extra auxiliary files created\n\n#       with the \\newcite command in the multibib package.\n\n#\n\n# History:\n\n#\n\n# 1.10.5 Fix for Window's convert check (thanks to Martin Baute).\n\n#\n\n# 1.10.4 Copy font files to binary directory for packages that come with\n\n#       their own fonts.\n\n#\n\n# 1.10.3 Check for Windows version of convert being used instead of\n\n#       ImageMagick's version (thanks to Martin Baute).\n\n#\n\n# 1.10.2 Use htlatex as a fallback when latex2html is not available (thanks\n\n#       to Tomasz Grzegurzko).\n\n#\n\n# 1.10.1 Make convert program mandatory only if actually used (thanks to\n\n#       Julien Schueller).\n\n#\n\n# 1.10.0 Added NO_DEFAULT and DEFAULT_PS options.\n\n#       Fixed issue with cleaning files for LaTeX documents originating in\n\n#       a subdirectory.\n\n#\n\n# 1.9.6 Fixed problem with LATEX_SMALL_IMAGES.\n\n#       Strengthened check to make sure the output directory does not contain\n\n#       the source files.\n\n#\n\n# 1.9.5 Add support for image types not directly supported by either latex\n\n#       or pdflatex.  (Thanks to Jorge Gerardo Pena Pastor for SVG support.)\n\n#\n\n# 1.9.4 Fix issues with filenames containing multiple periods.\n\n#\n\n# 1.9.3 Hide some variables that are now cached but should not show up in\n\n#       the ccmake list of variables.\n\n#\n\n# 1.9.2 Changed MACRO declarations to FUNCTION declarations.  The better\n\n#       FUNCTION scoping will hopefully avoid some common but subtle bugs.\n\n#       This implicitly increases the minimum CMake version to 4.6 (although\n\n#       I honestly only test it with the latest 4.8 version).\n\n#\n\n#       Since we are updating the minimum CMake version, I'm going to start\n\n#       using the builtin LIST commands that are now available.\n\n#\n\n#       Favor using pdftops from the Poppler package to convert from pdf to\n\n#       eps.  It does a much better job than ImageMagick or ghostscript.\n\n#\n\n# 1.9.1 Fixed typo that caused the LATEX_SMALL_IMAGES option to fail to\n\n#       activate.\n\n#\n\n# 1.9.0 Add support for the multibib package (thanks to Antonio LaTorre).\n\n#\n\n# 1.8.2 Fix corner case when an argument name was also a variable containing\n\n#       the text of an argument.  In this case, the CMake IF was matching\n\n#       the argument text with the contents of the variable with the same\n\n#       argument name.\n\n#\n\n# 1.8.1 Fix problem where ps2pdf was not getting the appropriate arguments.\n\n#\n\n# 1.8.0 Add support for synctex.\n\n#\n\n# 1.7.7 Support calling xindy when making glossaries.\n\n#\n\n#       Improved make clean support.\n\n#\n\n# 1.7.6 Add support for the nomencl package (thanks to Myles English).\n\n#\n\n# 1.7.5 Fix issue with bibfiles being copied two different ways, which causes\n\n#       Problems with dependencies (thanks to Edwin van Leeuwen).\n\n#\n\n# 1.7.4 Added the DEFAULT_SAFEPDF option (thanks to Raymond Wan).\n\n#\n\n#       Added warnings when image directories are not found (and were\n\n#       probably not given relative to the source directory).\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper functions\n\n#############################################################################\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Parse function arguments.  Variables containing the results are placed\n\n# in the global scope for historical reasons.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but I'm not totally sure\n\n# the match will always be to a whole line, and I don't want to break things.\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# A version of GET_FILENAME_COMPONENT that treats extensions after the last\n\n# period rather than the first.  To the best of my knowledge, all filenames\n\n# typically used by LaTeX, including image files, have small extensions\n\n# after the last dot.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Functions that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is really a bare bones port of the makeglossaries perl script into\n\n# CMake scripting.\n",
        "Line" : 308,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# What crazy person makes a LaTeX index generater that uses different\n\n# identifiers for language than babel (or at least does not support\n\n# the old ones)?\n",
        "Line" : 376,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Ideally, we would check that the language is compatible with the\n\n# default codepage, but I'm hoping that distributions will be smart\n\n# enough to specify their own codepage.  I know, it's asking a lot.\n",
        "Line" : 419,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# So, it is possible (perhaps common?) for aux files to specify a\n\n# language and codepage that are incompatible with each other.  Check\n\n# for that condition, and if it happens run again with the default\n\n# codepage.\n",
        "Line" : 440,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#############################################################################\n\n# Helper functions for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MiKTeX calls latex2html htlatex\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n\n# For historical reasons, these are all declared in the global scope.\n",
        "Line" : 681,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 758,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# ImageMagick can also be sketchy on pdf to eps conversion.  Not good with\n\n# color spaces and tends to unnecessarily rasterize.\n\n# use pdftops instead\n",
        "Line" : 768,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check input filename for potential problems with LaTeX.\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 837,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 847,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 857,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 869,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 880,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 889,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 893,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 898,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 956,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 974,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 985,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 1000,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# The commands to run LaTeX.  They are repeated multiple times.\n",
        "Line" : 1013,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Set up target names.\n",
        "Line" : 1021,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Probably not all of these will be generated, but they could be.\n\n# Note that the aux file is added later.\n",
        "Line" : 1038,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 1066,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Dependent .tex files might have their own .aux files created.  Make\n\n# sure these get cleaned as well.  This might replicate the cleaning\n\n# of the main .aux file, which is OK.\n",
        "Line" : 1097,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 1109,
        "CharPositionInLine" : 25
      },
      "38" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 1138,
        "CharPositionInLine" : 25
      },
      "39" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 1244,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 1257,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 1285,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# htlatex places the output in a different location\n",
        "Line" : 1305,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 1364,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 1391,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 45
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "a3340490ced7cf75fead9dead2a8f7b3ceb508ad",
      "LastModified" : "2018-03-09T11:09:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add source files for the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# API\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Decoder modules\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# HAL\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If both interfaces are disabled, build a Dummy DTB responding to API calls:\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We only need the emulator testboard implementation for this:\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We want to build a real interface, so add RPC and the HAL:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# RPC\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add Ethernet source files\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add the libraries which need to be linked:\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# add USB source files (depending on FTDI library used)\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add the libraries which need to be linked:\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Link necessary libraries:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Include the CMake script UseCython.cmake. This defines add_cython_module().\n\n# Instruction for use can be found at the top of cmake/UseCython.cmake.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "devices/CMakeLists.txt" : {
      "ObjectId" : "43ad5af39d011b82a4093337ce1d8dbc3e9ca992",
      "LastModified" : "2014-11-17T15:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add source files for the devices library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add HV power supply source files (depending on the device used)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "da6a038044c62f1b22df48f71ad57a43e93949bb",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################\n\n# Doxygen target to generate API reference  #\n\n#############################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################\n\n# LaTeX target to compile the PDF user manual #\n\n###############################################\n\n# Information and the manual on the UseLATEX.cmake package can be found here\n\n# http://www.cmake.org/Wiki/CMakeUserUseLATEX\n\n# The code resides here:\n\n# https://github.com/kmorel/UseLATEX\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gui/CMakeLists.txt" : {
      "ObjectId" : "2870ea71aa6c13e1e3e32a82049712a0b34776f3",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build GUI library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we also need includes from the util and tests directories\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fill list of header files \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set everything needed for the root dictonary and create the\n\n# dictionary\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create a shared library\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link against our core library, the UI lib (for now), the root stuff, and the USB libs\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install the lib in the appropriate directory\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "main/CMakeLists.txt" : {
      "ObjectId" : "3b0473addc29e74723279b11d8c2e6b79f9787e4",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build pXar executables:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fill list of header files \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "489d8df3bbf2466c108d31de7503120d5661c689",
      "LastModified" : "2015-08-13T13:36:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build tests library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for now, we also need includes from the \"util\" folder\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fill list of header files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set everything needed for the root dictonary and create the\n\n# dictionary\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create a shared library\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link against our core library, the util lib, the root stuff, and the USB libs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install the lib in the appropriate directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "44f012a2a4480f41389ade066a45225baa530699",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build pXar test exe:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also copy the ftd2xx dll if on win32\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# copy needed FTD2XX dll file to build directory so that executable can be run from there as well\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# copy FTD2XX DLL into bin directory when running INSTALL step\n\n# WARNING: the \"FILE(COPY)\" command requires CMake 2.8 or later (our compatability macro does not work in the install cmake script)\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "usertests/CMakeLists.txt" : {
      "ObjectId" : "4659e88f6c2422f2983f47538136a0e1891b10ce",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# -- generate PixUserTestFactory.cc\n\n# ----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# -- now do the usual stuff\n\n# ----------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for now, we also need includes from the \"util\" folder\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# fill list of header files \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set everything needed for the root dictonary and create the\n\n# dictionary\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create a shared library\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# link against our core library, the util lib, the root stuff, and the USB libs\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# install the lib in the appropriate directory\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "util/CMakeLists.txt" : {
      "ObjectId" : "448dfab3112c089dc8e6b368bdb3376fbcbd18e6",
      "LastModified" : "2015-08-05T13:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build util library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fill list of header files \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#rsstools.hh\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set everything needed for the root dictonary and create the\n\n# dictionary\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create a shared library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link against our core library, the root stuff, and the USB libs\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install the lib in the appropriate directory\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 23
  },
  "ElapsedTime" : 3073
}