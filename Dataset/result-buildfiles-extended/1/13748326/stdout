{
  "Repository" : "13748326",
  "Revision" : "HEAD",
  "ObjectId" : "64f42590a725a3887c130b2245e4443d6f1e4716",
  "CommitTime" : "2019-04-16T19:36:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6cf2a6113a2252ecb718f91b28395521686d8448",
      "LastModified" : "2019-03-31T18:31:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function definitions\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version information\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Advanced settings\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Platform support\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The strtof_l on Linux not actually exposed nor actually strtof_l\n",
        "Line" : 345,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Feature dependencies\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Features\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# zlib pulls in crc32\n",
        "Line" : 602,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Platform binaries\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Binaries\n",
        "Line" : 824,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Packaging\n",
        "Line" : 1043,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Summaries\n",
        "Line" : 1212,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/platform/3ds/CMakeLists.txt" : {
      "ObjectId" : "bf5364085eb2920239e95d4dca0e5a3af346cfe2",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/psp2/CMakeLists.txt" : {
      "ObjectId" : "1fb0c992831cf847f5c9f4b60481c3fa94e5ff26",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/python/CMakeLists.txt" : {
      "ObjectId" : "d743e992439f9e7a1a85796eb6e81904250e0ce3",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/qt/CMakeLists.txt" : {
      "ObjectId" : "f467b4f85ddec211cfc9d59900e5c67c4bc3dc7c",
      "LastModified" : "2019-03-31T18:31:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Work around CMake issue #16907\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/platform/qt/ts.cmake" : {
      "ObjectId" : "b9cb4d781f3d9bd88d61b6cf2a5e0319ebcdbe42",
      "LastModified" : "2017-07-11T00:07:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/sdl/CMakeLists.txt" : {
      "ObjectId" : "b2f9df308938860c0bcfeaaf2fa04a4544806446",
      "LastModified" : "2018-12-01T01:46:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clear NOTFOUND\n",
        "Line" : 72,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 1
    },
    "src/platform/switch/CMakeLists.txt" : {
      "ObjectId" : "6666b8a01bc3fae08d6e5788e2047f951ae8f9ee",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/wii/CMakeLists.txt" : {
      "ObjectId" : "4caf73d10eed6975e5b7c9ae53918e6d79aefd79",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/third-party/discord-rpc/CMakeLists.txt" : {
      "ObjectId" : "09e05c3f3a51b0fcef96a926b6d13b16fdc1f510",
      "LastModified" : "2019-03-31T18:31:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# format\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add subdirs\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third-party/discord-rpc/src/CMakeLists.txt" : {
      "ObjectId" : "ca26598468cea0d795dbee94b2c76635efcfe7b0",
      "LastModified" : "2019-03-31T18:31:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unreferenced formal parameter\n\n# unreferenced inline\n\n# copy constructor deleted\n\n# move constructor deleted\n\n# move assignment operator deleted\n\n# not defined preprocessor macro\n\n# function not inlined\n\n# function was inlined\n\n# structure padding\n\n# reinterpret_cast used between related classes\n\n# move assignment operator was implicitly defined as deleted\n",
        "Line" : 43,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 1
    },
    "src/third-party/libpng/CMakeLists.txt" : {
      "ObjectId" : "3b8d786cbea75d28e73131c433352d19806f0aff",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007,2009-2017 Glenn Randers-Pehrson\n\n# Written by Christian Ehrlicher, 2007\n\n# Revised by Roger Lowman, 2009-2010\n\n# Revised by Clifford Yapp, 2011-2012\n\n# Revised by Roger Leigh, 2016\n\n# Revised by Andreas Franek, 2016\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed packages\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Allow users to specify location of Zlib,\n\n# Useful if zlib is being built alongside this as a sub-project\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# not needed on windows\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set definitions and sources for arm\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set definitions and sources for powerpc\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set definitions and sources for intel\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set definitions and sources for MIPS\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find symbol prefix.  Likely obsolete and unnecessary with recent\n\n# toolchains (it's not done in many other projects).\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# No awk available to generate sources; use pre-built pnglibconf.h\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Dummy\n",
        "Line" : 269,
        "CharPositionInLine" : 30
      },
      "20" : {
        "Text" : "# Generate .chk from .out with awk\n\n# generate_chk(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Generate .out from .c with awk\n\n# generate_out(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generate specific source file with awk\n\n# generate_source(OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Copy file\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Generate scripts/pnglibconf.h\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Generate pnglibconf.c\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Generate pnglibconf.h\n",
        "Line" : 369,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Generate pngprefix.h\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# A single target handles generation of all generated files.  If\n\n# they are dependend upon separately by multiple targets, this\n\n# confuses parallel make (it would require a separate top-level\n\n# target for each file to track the dependencies properly).\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 525,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 543,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 561,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# have generator expressions\n",
        "Line" : 613,
        "CharPositionInLine" : 36
      },
      "36" : {
        "Text" : "# old 2.x add_test; limited and won't work well on Windows\n",
        "Line" : 619,
        "CharPositionInLine" : 9
      },
      "37" : {
        "Text" : "# Note LIBPNG is a dummy value as there are no generator expressions\n",
        "Line" : 620,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Find test PNG files by globbing, but sort lists to ensure\n\n# consistency between different filesystems.\n",
        "Line" : 629,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Should already be sorted, but sort anyway to be certain.\n",
        "Line" : 721,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# If we don't need to symlink something that's coming from a build target,\n\n# we can go ahead and symlink/copy at configure time.\n",
        "Line" : 776,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# We need to use generator expressions, which can be a bit tricky, so for\n\n# simplicity make the symlink a POST_BUILD step and use the TARGET\n\n# signature of add_custom_command.\n",
        "Line" : 793,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Create source generation scripts.\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.34\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# future proof\n",
        "Line" : 858,
        "CharPositionInLine" : 38
      },
      "50" : {
        "Text" : "# INSTALL\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 872,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Install man pages\n",
        "Line" : 910,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 916,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 929,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "src/third-party/libpng/Makefile.am" : {
      "ObjectId" : "08db3e5990940045df9c1c7f784c276e2f309fc5",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am, the source file for Makefile.in (and hence Makefile), is\n\n#\n\n# Copyright (c) 2004-2016 Glenn Randers-Pehrson\n\n# Last changed in libpng 1.6.25 [September 1, 2016]\n\n#\n\n# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# is empty\n",
        "Line" : 223,
        "CharPositionInLine" : 13
      },
      "18" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The .c file for pnglibconf.h is machine generated\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extra checks\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# And --install-config:\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "src/third-party/zlib/CMakeLists.txt" : {
      "ObjectId" : "0c0247cc516b4493bb9a9b66f743a6110139a2b5",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/third-party/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third-party/zlib/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third-party/zlib/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third-party/zlib/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third-party/zlib/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third-party/zlib/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/third-party/zlib/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2018-09-28T22:02:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "version.cmake" : {
      "ObjectId" : "de381293fa331af47e24e69fd671a730dfa46828",
      "LastModified" : "2018-10-07T21:28:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 14,
    "MAKEFILE" : 6,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 6517
}