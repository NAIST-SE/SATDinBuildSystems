{
  "Repository" : "470876",
  "Revision" : "HEAD",
  "ObjectId" : "5aff42008c576ca4aa9dbb1fdd238dac1d875ece",
  "CommitTime" : "2018-01-31T20:57:57Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "716253ae04c6b25759a945c7432722e8baffa482",
      "LastModified" : "2018-01-22T08:47:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://stackoverflow.com/a/11437693\n\n# Add a coverage build type\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# setup the LD_LIBRARY_PATH for unit tests on launchpad \n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# try once more for Ubuntu 16.10\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindCppUnit.cmake" : {
      "ObjectId" : "ae081b9ab52c81655f8abe442a157e2db2b01d12",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 2011-05-28 \n\n# Copied from http://root.cern.ch/viewvc/trunk/cint/reflex/cmake/modules/FindCppUnit.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find CppUnit\n\n# This module finds an installed CppUnit package.\n\n#\n\n# It sets the following variables:\n\n#  CPPUNIT_FOUND       - Set to false, or undefined, if CppUnit isn't found.\n\n#  CPPUNIT_INCLUDE_DIR - The CppUnit include directory.\n\n#  CPPUNIT_LIBRARY     - The CppUnit library to link against.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# show which CppUnit was found only if not quiet\n",
        "Line" : 21,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# fatal error if CppUnit is required but not found\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindLibZip.cmake" : {
      "ObjectId" : "a5c87bdbd6fd664eff49170ca59cad6346b3a132",
      "LastModified" : "2015-08-05T18:10:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets the following variables:\n\n#  LIBZIP_FOUND       - Set to false, or undefined, if libzip isn't found.\n\n#  LIBZIP_INCLUDE_DIR - The libzip include directory.\n\n#  LIBZIP_LIBRARY     - The libzip library to link against.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindXercesC.cmake" : {
      "ObjectId" : "507834d9350cd355a7df9475d50969fc309f15b1",
      "LastModified" : "2011-11-19T18:49:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 2011-07-18\n\n# Copied from http://coloapi.googlecode.com/svn-history/r8/trunk/build/modules/FindXerces.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find XERCES\n\n# Find the native XERCES headers and libraries.\n\n#\n\n#  XERCES_INCLUDE_DIR -  where to find XERCES.h, etc.\n\n#  XERCES_LIBRARIES    - List of libraries when using XERCES.\n\n#  XERCES_FOUND        - True if XERCES found.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Report the results.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "8ab03bc5f0b766462e05edb6afbe9c20e8115b46",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n#  git_local_changes(<var>)\n\n#\n\n# Returns either \"CLEAN\" or \"DIRTY\" with respect to uncommitted changes.\n\n# Uses the return code of \"git diff-index --quiet HEAD --\".\n\n# Does not regard untracked files.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 51,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/modules/UseDoxygen.cmake" : {
      "ObjectId" : "8c6489ecf076fbad12daf007471827a8f532639b",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 2011-05-29\n\n# Copied from http://tobias.rautenkranz.ch/cmake/doxygen/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Run Doxygen\n\n#\n\n# Adds a doxygen target that runs doxygen to generate the html\n\n# and optionally the LaTeX API documentation.\n\n# The doxygen target is added to the doc target as a dependency.\n\n# i.e.: the API documentation is built with:\n\n#  make doc\n\n#\n\n# USAGE: GLOBAL INSTALL\n\n#\n\n# Install it with:\n\n#  cmake ./ && sudo make install\n\n# Add the following to the CMakeLists.txt of your project:\n\n#  include(UseDoxygen OPTIONAL)\n\n# Optionally copy Doxyfile.in in the directory of CMakeLists.txt and edit it.\n\n#\n\n# USAGE: INCLUDE IN PROJECT\n\n#\n\n#  set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n\n#  include(UseDoxygen)\n\n# Add the Doxyfile.in and UseDoxygen.cmake files to the projects source directory.\n\n#\n\n#\n\n# CONFIGURATION\n\n#\n\n# To configure Doxygen you can edit Doxyfile.in and set some variables in cmake.\n\n# Variables you may define are:\n\n#  DOXYFILE_SOURCE_DIR - Path where the Doxygen input files are.\n\n#  \tDefaults to the current source directory.\n\n#  DOXYFILE_EXTRA_SOURCES - Additional source diretories/files for Doxygen to scan.\n\n#  \tThe Paths should be in double quotes and separated by space. e.g.:\n\n#  \t \"${CMAKE_CURRENT_BINARY_DIR}/foo.c\" \"${CMAKE_CURRENT_BINARY_DIR}/bar/\"\n\n#  \n\n#  DOXYFILE_OUTPUT_DIR - Path where the Doxygen output is stored.\n\n#  \tDefaults to \"${CMAKE_CURRENT_BINARY_DIR}/doc\".\n\n#  \n\n#  DOXYFILE_LATEX - ON/OFF; Set to \"ON\" if you want the LaTeX documentation\n\n#  \tto be built.\n\n#  DOXYFILE_LATEX_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen LaTeX output is stored. Defaults to \"latex\".\n\n#  \n\n#  DOXYFILE_HTML_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen html output is stored. Defaults to \"html\".\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#  Copyright (c) 2009, 2010, 2011 Tobias Rautenkranz <tobias@rautenkranz.ch>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## LaTeX\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "eff5dfe61fca510eaef2db4bf2665e651c91650c",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "e7833d02b43af90226503d5fa5fed895ea34a47f",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "example/camera/CMakeLists.txt" : {
      "ObjectId" : "7f98ea4310f1ca7fa17f17997e7c003daee9e3a3",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "example/file/CMakeLists.txt" : {
      "ObjectId" : "e37a1ce995b06e871fb6b3091b4560d1d7348fd2",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "example/operator/CMakeLists.txt" : {
      "ObjectId" : "9fc0aea41232d959cf495a9bf2e9319b42a7f11f",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "example/simple/CMakeLists.txt" : {
      "ObjectId" : "adec132471c7269c784df32d276e58b53e5dfac9",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "cfb40f5fa44745dc71abdbb7fe40a53ee025ee52",
      "LastModified" : "2017-12-21T19:40:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/example/CMakeLists.txt" : {
      "ObjectId" : "213ccb4dee3813a1e68998be4d1183240b1336ba",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/stromx/CMakeLists.txt" : {
      "ObjectId" : "f0ac2b04a404d85f77297df2b95e04048e27636e",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/stromx/cvsupport/CMakeLists.txt" : {
      "ObjectId" : "25b50ecce5ee892afad00b8c8f290fff1fdc19f7",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/stromx/runtime/CMakeLists.txt" : {
      "ObjectId" : "abfe279b709c37dd865e16a0527624fe263ebbe0",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/stromx/test/CMakeLists.txt" : {
      "ObjectId" : "50525476e9271df14e2623554c27aeb49a9683f7",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/test/CMakeLists.txt" : {
      "ObjectId" : "b0febd41f6b6e846378fa6ce9a9e8c0eee209ce9",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "stromx/CMakeLists.txt" : {
      "ObjectId" : "b7ba3fd01672b7af6cdef4d21f661b0a5d0381cb",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "stromx/cvsupport/CMakeLists.txt" : {
      "ObjectId" : "c0891405400dfdb403fe70a34ddd5f40f9fc0310",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "stromx/cvsupport/test/CMakeLists.txt" : {
      "ObjectId" : "533823c9711f83b2dbfd897f171c5988df91e7e8",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#     SendReceiveTest.cpp\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "stromx/runtime/CMakeLists.txt" : {
      "ObjectId" : "4e0e42e19936cffe1683ff83d5829be45da3c118",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiles the the *.po file and creates an install target for the *.mo file: \n\n# if(GETTEXT_FOUND)\n\n#     gettext_process_po_files(de ALL INSTALL_DESTINATION ${LOCALE_SUFFIX} PO_FILES po/de/libruntime.po)\n\n# endif()\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "stromx/runtime/test/CMakeLists.txt" : {
      "ObjectId" : "872dc683111fa8bd311d0a48c46101f88377caf3",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#     ClientTest.cpp\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#     SendReceiveTest.cpp\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#     ServerTest.cpp\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "stromx/test/CMakeLists.txt" : {
      "ObjectId" : "b7c0bb7bc7edc135244ae6d6635440e72df30f26",
      "LastModified" : "2017-08-07T10:56:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 25
  },
  "ElapsedTime" : 1202
}