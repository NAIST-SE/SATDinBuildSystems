{
  "Repository" : "18612695",
  "Revision" : "HEAD",
  "ObjectId" : "b8fa43c67803058f5f0b4bd2309e12e17d9d6ae3",
  "CommitTime" : "2019-04-08T18:56:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b5fd6a8bd24971263399380299186e4da4ec2f51",
      "LastModified" : "2018-08-30T14:15:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindNetCDF.cmake" : {
      "ObjectId" : "557e89807710fa1c0a4bf59501e46ad43f27bd18",
      "LastModified" : "2017-11-02T19:53:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# /*=========================================================================\n\n#\n\n#   Program:   Visualization Toolkit\n\n#   Module:    Copyright.txt\n\n#\n\n# Copyright (c) 1993-2015 Ken Martin, Will Schroeder, Bill Lorensen\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * Neither name of Ken Martin, Will Schroeder, or Bill Lorensen nor the names\n\n#    of any contributors may be used to endorse or promote products derived\n\n#    from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# =========================================================================*/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find NetCDF\n\n# Find the native NetCDF includes and library\n\n#\n\n#  NETCDF_INCLUDE_DIR  - user modifiable choice of where netcdf headers are\n\n#  NETCDF_LIBRARY      - user modifiable choice of where netcdf libraries are\n\n#\n\n# Your package can require certain interfaces to be FOUND by setting these\n\n#\n\n#  NETCDF_CXX         - require the C++ interface and link the C++ library\n\n#  NETCDF_F77         - require the F77 interface and link the fortran library\n\n#  NETCDF_F90         - require the F90 interface and link the fortran library\n\n#\n\n# Or equivalently by calling FindNetCDF with a COMPONENTS argument containing one or\n\n# more of \"CXX;F77;F90\".\n\n#\n\n# When interfaces are requested the user has access to interface specific hints:\n\n#\n\n#  NETCDF_${LANG}_INCLUDE_DIR - where to search for interface header files\n\n#  NETCDF_${LANG}_LIBRARY     - where to search for interface libraries\n\n#\n\n# This module returns these variables for the rest of the project to use.\n\n#\n\n#  NETCDF_FOUND          - True if NetCDF found including required interfaces (see below)\n\n#  NETCDF_LIBRARIES      - All netcdf related libraries.\n\n#  NETCDF_INCLUDE_DIRS   - All directories to include.\n\n#  NETCDF_HAS_INTERFACES - Whether requested interfaces were found or not.\n\n#  NETCDF_${LANG}_INCLUDE_DIRS/NETCDF_${LANG}_LIBRARIES - C/C++/F70/F90 only interface\n\n#\n\n# Normal usage would be:\n\n#  set (NETCDF_F90 \"YES\")\n\n#  find_package (NetCDF REQUIRED)\n\n#  target_link_libraries (uses_everthing ${NETCDF_LIBRARIES})\n\n#  target_link_libraries (only_uses_f90 ${NETCDF_F90_LIBRARIES})\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#search starting from user editable cache var\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#start finding requested language components\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# will be set to NO if we're missing any interfaces\n",
        "Line" : 98,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "#search starting from user modifiable cache var\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#export to internal varS that rest of project can use directly\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#export accumulated results to internal varS that rest of project can depend on\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set NETCDF_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/Testing.cmake" : {
      "ObjectId" : "9f12e6635129bbe838d89cfff3ef95c3d0087ba3",
      "LastModified" : "2018-06-15T08:16:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# It seems that we have old gtest without\n\n# install target defined.\n",
        "Line" : 7,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 3
  },
  "ElapsedTime" : 844
}