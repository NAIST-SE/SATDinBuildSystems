{
  "Repository" : "1379656",
  "Revision" : "HEAD",
  "ObjectId" : "514a4e3ae7b8ebbce317f646a050c3ff23b4aba7",
  "CommitTime" : "2019-01-28T02:59:17Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "35268b756bce0364e5126907a2bf640d66347337",
      "LastModified" : "2017-02-07T02:27:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE for OSX users:\n\n# export MACOSX_DEPLOYMENT_TARGET=10.7 on .bash_profile if you want to compile use 10.7 sdk\n\n# sdk location: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\n\n# you can download old sdk from here: https://github.com/JuliaEichler/Mac_OSX_SDKs\n\n# default is 10.7 for binary release.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake arguments for WizNote\n\n# APPSTORE_BUILD  build for Apple Appsotre, would not use qt deploy\n\n# XCODEBUILD      adjust project params to suit for xcode\n\n#UPDATE_TRANSLATIONS  update transation files\n\n# PLCrashReporter   use PLCrashReporter for mac, need PLCrashReporter framework\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rpath resolve.\n\n#set(CMAKE_BUILD_WITH_INSTALL_RPATH YES)     // would cause wheelEvent problem on centos/fedora when compiled with qt5\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(PLCrashReporter on)\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/QtChooser.cmake" : {
      "ObjectId" : "583c58ccd7a01e25a8e582c1bf931458f8f01398",
      "LastModified" : "2016-05-25T08:04:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "dbe317cdcae427fbc60dc9b3573c61949e0c7de6",
      "LastModified" : "2017-03-13T04:52:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(aggregation)\n\n#add_subdirectory(extensionsystem)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/aggregation/CMakeLists.txt" : {
      "ObjectId" : "d44fb6bcc1abf7b34bcc3f08d5ff467f98902aa1",
      "LastModified" : "2014-01-21T03:17:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/cryptopp/CMakeLists.txt" : {
      "ObjectId" : "273aa8f57f560c98c73b1190eb95b862c7dd2c63",
      "LastModified" : "2016-09-12T10:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010, 2011 Sergiu Dotenco\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intel compiler\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Variable of static storage duration was declared but never referenced\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Function was declared but never referenced\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#remove_definitions (-DUNICODE -D_UNICODE)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Prevent MSVC from issuing the LNK4221 warning\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Setup precompiled headers and use intrinsics; the latter fixes MSVC8 linker\n\n# errors\n\n#set_target_properties (${_CRYPTOPP_INSTALL_TARGETS} PROPERTIES COMPILE_FLAGS\n\n#  \"-Yupch.h -Oi\")\n\n#set_source_files_properties (pch.cpp PROPERTIES COMPILE_FLAGS -Yc)\n\n# These files don't use precompiled headers\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#set_target_properties (${_CRYPTOPP_INSTALL_TARGETS} PROPERTIES PUBLIC_HEADER\n\n#  \"${PROJECT_H}\")\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#install (TARGETS ${_CRYPTOPP_INSTALL_TARGETS}\n\n#  EXPORT cryptopp-targets\n\n#  RUNTIME DESTINATION bin\n\n#  LIBRARY DESTINATION lib\n\n#  ARCHIVE DESTINATION lib\n\n#  PUBLIC_HEADER DESTINATION include/cryptopp)\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Run validation tests\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Intel compiler, Windows\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Intel compiler, non-Windows\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#install (EXPORT cryptopp-targets DESTINATION . COMPONENT Development)\n\n#install (FILES\n\n#    ${CMAKE_CURRENT_BINARY_DIR}/cryptopp-config.cmake\n\n#    ${CMAKE_CURRENT_BINARY_DIR}/cryptopp-config-version.cmake\n\n#    DESTINATION . COMPONENT Development)\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lib/extensionsystem/CMakeLists.txt" : {
      "ObjectId" : "0ec57248bc237350efdad7d37aefbf5d96ba079f",
      "LastModified" : "2016-09-12T10:08:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/openssl/CMakeLists.txt" : {
      "ObjectId" : "aef3186d347a80d928ac63263633ebb091734452",
      "LastModified" : "2016-09-12T10:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only headers, no target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/quazip/CMakeLists.txt" : {
      "ObjectId" : "80fa6010654ad04088b61bd713f575ff649b8ca5",
      "LastModified" : "2017-02-07T02:27:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set all include directories for in and out of source builds\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link against ZLIB_LIBRARIES if needed (on Windows this variable is empty)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/zlib/CMakeLists.txt" : {
      "ObjectId" : "1150942071a8f675d9d9c30892dc14c3e9a9a2bd",
      "LastModified" : "2016-09-12T10:08:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 42,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 123,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#add_library(zlibstatic STATIC ${ZLIB_SRCS} ${ZLIB_ASMS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "mac-window/untitled2.pro" : {
      "ObjectId" : "488a5c35c500898c03dc720e08ee7dd0b2e572d4",
      "LastModified" : "2016-09-12T10:08:17Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2014-05-20T12:07:41\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "3babd1e80d2339414f43057a4e8ee47ade230916",
      "LastModified" : "2018-11-07T04:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build\r\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we should copy qt internal qm files, otherwise qt can't translate some internal resources\r\n\n# and also macdeployqt will not do this work for us\r\n\n# refer to: https://bugreports.qt-project.org/browse/QTBUG-18662\r\n",
        "Line" : 418,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# this should be issue of cmake, refer: http://public.kitware.com/Bug/bug_revision_view_page.php?rev_id=958\r\n",
        "Line" : 427,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# qmake will do this automatically\r\n",
        "Line" : 430,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# suppress cmake warnning when link library is not a target, refer to cmp0016 for detailed info.\r\n",
        "Line" : 433,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# please set env: MACOSX_DEPLOYMENT_TARGET = 10.8 to ~/.bash_profile if you need NSUserNotification support.\r\n",
        "Line" : 447,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# setup plist info and logo\r\n",
        "Line" : 452,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# copy resources to bundle\r\n\n#set(wiznote_BUNDLE ${CMAKE_BINARY_DIR}/bundle/${PROJECT_NAME}.app)\r\n\n#set(wiznote_BUNDLE_CONTENTS ${CMAKE_BINARY_DIR}/bundle/${PROJECT_NAME}.app/Contents)\r\n",
        "Line" : 458,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#linux\r\n",
        "Line" : 563,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 9
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "5cfa1f945b7e86d2c240ef714efef352605cc00a",
      "LastModified" : "2016-09-12T10:08:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 11,
    "QMAKE" : 1
  },
  "ElapsedTime" : 5977
}