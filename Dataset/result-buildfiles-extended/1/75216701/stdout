{
  "Repository" : "75216701",
  "Revision" : "HEAD",
  "ObjectId" : "df032619591eefb531c74952529a6124b0ded2a5",
  "CommitTime" : "2019-04-11T03:21:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4df3469403c39ef638b68ebf4b9c0d35a196e087",
      "LastModified" : "2019-03-15T20:32:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SWIG\n",
        "Line" : 11,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "# SWIG behaviour was changed\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#============= OPTIONS & SETTINGS\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# PythonLibs' PYTHON_INCLUDE_PATH doesn't take into account virtualenv etc.\n\n# Open to suggestions how to do this better.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#============= OPTIONS & SETTINGS\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO probably to be removed after POGS is out in favor of XGboost GLM\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#============= BUILD COMMON CPU/GPU CODE\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Here and not in target_include_directories b/c cmake < 3.7 which we use in Dockerfiles does not support it\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#============= BUILD COMMON CPU/GPU CODE\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#============= BUILD CPU LIBRARY\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#============= BUILD CPU LIBRARY\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#============= SWIG\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#============= SWIG\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#============= CPU SWIG\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#============= CPU SWIG\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#============= BUILD GPU LIBRARY\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# cuda-9\n",
        "Line" : 153,
        "CharPositionInLine" : 57
      },
      "18" : {
        "Text" : "# cuda-10\n",
        "Line" : 154,
        "CharPositionInLine" : 78
      },
      "19" : {
        "Text" : "#============= BUILD GPU LIBRARY\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#============= GPU SWIG\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#============= GPU SWIG\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "#============= GTest\n",
        "Line" : 196,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#============= Unit Tests\n\n# file(GLOB_RECURSE TESTS tests/cpp/gpu/*.cu)\n",
        "Line" : 202,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 24
    },
    "Makefile" : {
      "ObjectId" : "84f9c44d7f94ea723f6061b3b98e3db49c7e4aeb",
      "LastModified" : "2019-04-11T03:21:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#########################################\n\n# DATA TARGETS\n\n#########################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################\n\n# DEPENDENCY MANAGEMENT TARGETS\n\n#########################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n\n# SUBMODULE BUILD TARGETS\n\n#########################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################\n\n# SOURCE QUALITY CHECK TARGETS\n\n#########################################\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################\n\n# PROJECT BUILD TARGETS\n\n#########################################\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# avoid cpp\n",
        "Line" : 178,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : "#########################################\n\n# INSTALL TARGETS\n\n#########################################\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########################################\n\n# CLEANING TARGETS\n\n#########################################\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# sometimes --upgrade leaves extra packages around\n",
        "Line" : 239,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#########################################\n\n# FULL BUILD AND INSTALL TARGETS\n\n#########################################\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#########################################\n\n# DOCKER TARGETS\n\n#########################################\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "############### CPU\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#########################################\n\n# TARGETS INSTALLING LIBRARIES\n\n#########################################\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# assume already submodule gets sklearn\n",
        "Line" : 381,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# repeated calls don't hurt\n",
        "Line" : 383,
        "CharPositionInLine" : 33
      },
      "15" : {
        "Text" : "#\tbash ./scripts/apply_sklearn.sh\n\n## apply sklearn\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "## link-up recursively\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# handle base __init__.py file appending\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#########################################\n\n# TEST TARGETS\n\n#########################################\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#WIP\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# can't do -n auto due to limits on GPU memory\n",
        "Line" : 420,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#pytest -s --verbose --durations=10 -n 1 --fulltrace --full-trace --junit-xml=build/test-reports/h2o4gpu-test.xml examples/py 2> ./tmp/h2o4gpu-examplespy.$(LOGEXT).log\n",
        "Line" : 421,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# can't put in requirements since problem with jenkins and runipy\n",
        "Line" : 422,
        "CharPositionInLine" : 40
      },
      "23" : {
        "Text" : "# can't do -n auto due to limits on GPU memory\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Test R package when appropriate\n",
        "Line" : 431,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# can't do -n auto due to limits on GPU memory\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# can't do -n auto due to limits on GPU memory\n",
        "Line" : 446,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# can't do -n auto due to limits on GPU memory\n",
        "Line" : 455,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#########################################\n\n# BENCHMARKING TARGETS\n\n#########################################\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# still just references results directory in base path\n",
        "Line" : 485,
        "CharPositionInLine" : 96
      },
      "30" : {
        "Text" : "######################### use python instead of pytest (required in some cases if pytest leads to hang)\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# still just references results directory in base path\n",
        "Line" : 497,
        "CharPositionInLine" : 44
      },
      "32" : {
        "Text" : "################### H2O.ai public tests for pass/fail\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "################ H2O.ai public tests for performance\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# faster if also run sync_open_data before doing this test\n",
        "Line" : 509,
        "CharPositionInLine" : 33
      },
      "35" : {
        "Text" : "################### H2O.ai private tests for pass/fail\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "################ H2O.ai private tests for performance\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#################### CPP Tests\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#################### Documentation\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#########################################\n\n# BUILD INFO TARGETS\n\n#########################################\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Generate local build info\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Refresh the build info only locally, let Jenkins to generate its own\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "cmake/FindNVML.cmake" : {
      "ObjectId" : "33c3350301da3fb33e26aaf96c041436b93c7c20",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of the GROMACS molecular simulation package.\n\n#\n\n# Copyright (c) 2014,2015,2017, by the GROMACS development team, led by\n\n# Mark Abraham, David van der Spoel, Berk Hess, and Erik Lindahl,\n\n# and including many others, as listed in the AUTHORS file in the\n\n# top-level source directory and at http://www.gromacs.org.\n\n#\n\n# GROMACS is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public License\n\n# as published by the Free Software Foundation; either version 2.1\n\n# of the License, or (at your option) any later version.\n\n#\n\n# GROMACS is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General Public\n\n# License along with GROMACS; if not, see\n\n# http://www.gnu.org/licenses, or write to the Free Software Foundation,\n\n# Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA.\n\n#\n\n# If you want to redistribute modifications to GROMACS, please\n\n# consider that scientific software is very special. Version\n\n# control is crucial - bugs must be traceable. We will be happy to\n\n# consider code for inclusion in the official distribution, but\n\n# derived work must not be called official GROMACS. Details are found\n\n# in the README & COPYING files - if they are missing, get the\n\n# official version at http://www.gromacs.org.\n\n#\n\n# To help us fund GROMACS development, we humbly ask that you cite\n\n# the research papers on the package. Check out http://www.gromacs.org.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindNVML\n\n# --------\n\n#\n\n# Find the NVIDIA Management Library (NVML) includes and library. NVML documentation\n\n# is available at: http://docs.nvidia.com/deploy/nvml-api/index.html\n\n#\n\n# Starting with CUDA 8 NVML is part of the CUDA Toolkit. Prior to CUDA 8 NVML was part\n\n# of the GPU Deployment Kit (GDK) and GPU_DEPLOYMENT_KIT_ROOT_DIR can be specified\n\n# if the GPU Deployment Kit is not installed in a default location.\n\n#\n\n# FindNVML defines the following variables:\n\n#\n\n#   NVML_INCLUDE_DIR, where to find nvml.h, etc.\n\n#   NVML_LIBRARY, the libraries needed to use NVML.\n\n#   NVML_FOUND, If false, do not try to use NVML.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   Jiri Kraus, NVIDIA Corp (nvidia.com - jkraus)\n\n#\n\n#   Copyright (c) 2008 - 2014,2017 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#   This code is licensed under the MIT License.  See the FindNVML.cmake script\n\n#   for the text of the license.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n###############################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The Linux installer for the GPU Deployment Kit adds a \"usr\"\n\n# suffix to a custom path if one is used, so a user could\n\n# reasonably set GPU_DEPLOYMENT_KIT_ROOT_DIR to the value they\n\n# passed to the installer, or the root where they later found the\n\n# kit to be installed. Below, we cater for both possibilities.\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set NVML_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Utils.cmake" : {
      "ObjectId" : "ee1eb60391581048d0bb70ae03d21fa8b4639c06",
      "LastModified" : "2019-01-25T22:38:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate nvcc compiler flags given a list of architectures\n\n# Also generates PTX for the most recent architecture for forwards compatibility\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate SASS\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Generate PTX for last architecture\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set a default build type to release if none was specified\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# multiconfig generator?\n",
        "Line" : 20,
        "CharPositionInLine" : 89
      },
      "CommentCount" : 5
    },
    "h2o4gpu-docs-theme/demo_docs/Makefile" : {
      "ObjectId" : "8c907fd422a22c2f016346a4e92561c0406be987",
      "LastModified" : "2017-09-01T00:27:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/interface_py/Makefile" : {
      "ObjectId" : "9b42af105ec3b6921e5a873226d7b44efe18819e",
      "LastModified" : "2019-01-25T22:38:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# force avoidance of dash as shell\n",
        "Line" : 6,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# so if change our init it gets updated\n",
        "Line" : 29,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : "# for incorporating xgboost and py3nvml and lightgbm builds\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# update build with xgboost shared library\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# update build with lightgbm shared library\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Make wheel with other builds added\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# for pycharm\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# something wrong with below\n\n#$(PYTHON) setup.py install\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# A bit hacky b/c of how we are merging __init__.py with other frameworks\n\n# This *is* required\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "src/interface_py/docs/Makefile" : {
      "ObjectId" : "63eaa1db91d19cdb4542559a71495ca05a79e3c7",
      "LastModified" : "2017-09-01T00:27:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 2240
}