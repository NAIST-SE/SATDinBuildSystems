{
  "Repository" : "114504",
  "Revision" : "HEAD",
  "ObjectId" : "ceac25d2365cdc1dd92594547ac6bef2e9a815fa",
  "CommitTime" : "2019-04-11T17:16:39Z",
  "Files" : {
    "afanasy/src/project.cmake/CMakeLists.txt" : {
      "ObjectId" : "bc62627a7ce5da922a3f2a046d5303b628300ae6",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(PostgreSQL_ADDITIONAL_VERSIONS \"9.2\" \"9.3\" \"9.4\" \"9.5\")\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#Changing the order of configurations to be sure release is the first one\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "afanasy/src/project.cmake/FindPostgreSQL.cmake" : {
      "ObjectId" : "b998d5f331fff2106360d5fa833c0ebedb695126",
      "LastModified" : "2012-03-13T20:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the PostgreSQL installation.\n\n# Usage:\n\n# In your CMakeLists.txt file do something like this:\n\n# ...\n\n# # PostgreSQL\n\n# FIND_PACKAGE(PostgreSQL)\n\n# ...\n\n# if( PostgreSQL_FOUND )\n\n#   include_directories(${PostgreSQL_INCLUDE_DIRS})\n\n#   link_directories(${PostgreSQL_LIBRARY_DIRS})\n\n# endif( PostgreSQL_FOUND )\n\n# ...\n\n# Remember to include ${PostgreSQL_LIBRARIES} in the target_link_libraries() statement.\n\n#\n\n#\n\n# In Windows, we make the assumption that, if the PostgreSQL files are installed, the default directory\n\n# will be C:\\Program Files\\PostgreSQL.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# History:\n\n# This module is derived from the module originally found in the VTK source tree.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# Note:\n\n# PostgreSQL_ADDITIONAL_VERSIONS is a variable that can be used to set the\n\n# version mumber of the implementation of PostgreSQL.\n\n# In Windows the default installation of PostgreSQL uses that as part of the path.\n\n# E.g C:\\Program Files\\PostgreSQL\\8.4.\n\n# Currently, the following version numbers are known to this module:\n\n# \"9.1\" \"9.0\" \"8.4\" \"8.3\" \"8.2\" \"8.1\" \"8.0\"\n\n#\n\n# To use this variable just do something like this:\n\n# set(PostgreSQL_ADDITIONAL_VERSIONS \"9.2\" \"8.4.4\")\n\n# before calling FIND_PACKAGE(PostgreSQL) in your CMakeLists.txt file.\n\n# This will mean that the versions you set here will be found first in the order\n\n# specified before the default ones are searched.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# You may need to manually set:\n\n#  PostgreSQL_INCLUDE_DIR  - the path to where the PostgreSQL include files are.\n\n#  PostgreSQL_LIBRARY_DIR  - The path to where the PostgreSQL library files are.\n\n# If FindPostgreSQL.cmake cannot find the include files or the library files.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# The following variables are set if PostgreSQL is found:\n\n#  PostgreSQL_FOUND         - Set to true when PostgreSQL is found.\n\n#  PostgreSQL_INCLUDE_DIRS  - Include directories for PostgreSQL\n\n#  PostgreSQL_LIBRARY_DIRS  - Link directories for PostgreSQL libraries\n\n#  PostgreSQL_LIBRARIES     - The PostgreSQL libraries.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# If you have installed PostgreSQL in a non-standard location.\n\n# (Please note that in the following comments, it is assumed that <Your Path>\n\n# points to the root directory of the include directory of PostgreSQL.)\n\n# Then you have three options.\n\n# 1) After CMake runs, set PostgreSQL_INCLUDE_DIR to <Your Path>/include and\n\n#    PostgreSQL_LIBRARY_DIR to wherever the library pq (or libpq in windows) is\n\n# 2) Use CMAKE_INCLUDE_PATH to set a path to <Your Path>/PostgreSQL<-version>. This will allow find_path()\n\n#    to locate PostgreSQL_INCLUDE_DIR by utilizing the PATH_SUFFIXES option. e.g. In your CMakeLists.txt file\n\n#    SET(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} \"<Your Path>/include\")\n\n# 3) Set an environment variable called ${PostgreSQL_ROOT} that points to the root of where you have\n\n#    installed PostgreSQL, e.g. <Your Path>.\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define additional search paths for root directories.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Look for an installation.\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look in other places.\n",
        "Line" : 113,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# The PostgreSQL library.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Setting some more prefixes for the library\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Did we find anything?\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Now try to get the include and library path.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#message(\"Final PostgreSQL include dir: ${PostgreSQL_INCLUDE_DIRS}\")\n\n#message(\"Final PostgreSQL library dir: ${PostgreSQL_LIBRARY_DIRS}\")\n\n#message(\"Final PostgreSQL libraries:   ${PostgreSQL_LIBRARIES}\")\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "afanasy/src/project.cmake/cmd/CMakeLists.txt" : {
      "ObjectId" : "630f730466d42c1b07a19fc67755d59840d5602d",
      "LastModified" : "2013-06-16T17:55:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.cmake/fermer/CMakeLists.txt" : {
      "ObjectId" : "ff054f79f2921d30a0d6935f2ad2bdb5f669584a",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build qt statically http://amin-ahmadi.com/2016/09/22/how-to-build-qt-5-7-statically-using-msvc14-microsoft-visual-studio-2015/\n\n# https://bugreports.qt.io/browse/QTBUG-55279?page=com.atlassian.jira.plugin.system.issuetabpanels%3Aall-tabpanel\n\n# KNOWN ISSUE: \n\n#           cgru\\afanasy\\src\\project.cmake\\fermer\\moc_state.cpp(66): error C2589: 'constant': illegal token on right side of '::'\n\n# please open the moc_state.cpp file and add line \n\n#\t\t\t#undef ERROR\n\n# after it compiled properly\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "afanasy/src/project.cmake/libafanasy/CMakeLists.txt" : {
      "ObjectId" : "36785bed8d8c5299887f1cba4c06dc36e62c851e",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.cmake/libafqt/CMakeLists.txt" : {
      "ObjectId" : "e093832980b7ddd342268a598bf85df809d05662",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.cmake/libafsql/CMakeLists.txt" : {
      "ObjectId" : "101f520eca550b84a5994146612e983c5e2a5e69",
      "LastModified" : "2012-08-26T16:19:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.cmake/render/CMakeLists.txt" : {
      "ObjectId" : "dab57a7353dfa8420bc991ad89d54e47ce092362",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.cmake/server/CMakeLists.txt" : {
      "ObjectId" : "bc631009e1dde5f55e3b5af74f69528e62ca0c69",
      "LastModified" : "2013-06-16T17:55:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.cmake/service/CMakeLists.txt" : {
      "ObjectId" : "f4f02942c5f950ac9e881a77ed0cd2a8931f5773",
      "LastModified" : "2018-11-14T17:45:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.cmake/watch/CMakeLists.txt" : {
      "ObjectId" : "d46f5b3f4c6f41b9d0063b65d875fef51e41714d",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/cmd/cmd.pro" : {
      "ObjectId" : "81e1bebffaaf53f8c636b6b5c67b76800730f7ca",
      "LastModified" : "2012-04-14T12:31:28Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/libafanasy/libafanasy.pro" : {
      "ObjectId" : "740b03acb83c4f60059af1b0435310f3040c707a",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/libafqt/libafqt.pro" : {
      "ObjectId" : "962aac4f9bffb87221a15ad84b1bf04fa81e2ad9",
      "LastModified" : "2012-03-13T20:15:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/libafsql/libafsql.pro" : {
      "ObjectId" : "02b94658fc8163fb3687f3c50101952b37a99346",
      "LastModified" : "2012-03-13T20:15:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/project.pro" : {
      "ObjectId" : "ca0cfde823336100ac90d1272b213b796a552069",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/render/render.pro" : {
      "ObjectId" : "e2faa6e6d671eb1f154c9aee53a61d36284a6302",
      "LastModified" : "2012-03-13T20:15:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/server/server.pro" : {
      "ObjectId" : "8262bc534d7d8f369c8ee56e9594423f852600cd",
      "LastModified" : "2012-03-13T20:15:45Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "afanasy/src/project.qmake/watch/watch.pro" : {
      "ObjectId" : "948dd6726b5502dfa5d45ca90a43b3093acd71e1",
      "LastModified" : "2018-11-13T17:45:02Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "plugins/houdini/SQP_3dcoat/src/Makefile" : {
      "ObjectId" : "0ff5620b24a69bb42bf1e6900950da5b515b1803",
      "LastModified" : "2012-03-13T20:15:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 11,
    "QMAKE" : 8,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2031
}