{
  "Repository" : "15262425",
  "Revision" : "HEAD",
  "ObjectId" : "9f8c325e55c9d0347ed7cc0033e840c1940cf75b",
  "CommitTime" : "2019-04-15T12:37:41Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "50e2c9296ba17517348a75e1eb403935b2ec4e4f",
      "LastModified" : "2019-04-10T13:36:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set a default build type if none was specified\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the possible values of build type for cmake-gui\r\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# these settings are required in order to create fully relocatable\r\n\n# libraries on osx\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert path to absolute (required for some scripts)\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# get git revision for daily builds\r\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# required opencascade libraries\r\n\n# please don't change the order of libraries as this can cause linking problems\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# search OCE. If OCE is not found, search for standard OpenCASCADE\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set shaders directory\r\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# get opencascade version\r\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# get directory of shared libs\r\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# search TiXI\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# enable C++11 support\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# supress deprecation warning of std::tr1 to allow gtest to compile\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# check features\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# check if opencascade has patched coons feature\r\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# enable parallel builds in Visual Studio\r\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# add confidential tests\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# code coverage analysis\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# enable extensive debug output\r\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# visual leak detector, useful for debugging under windows\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# disable auto linking for Boost, as we include the cpp files ourselves\r\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# avoid export of oce/occt classes into tigl library\r\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# style checks\r\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#create gtests, override gtest standard setting\r\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#required for debian/ubuntu\r\n",
        "Line" : 251,
        "CharPositionInLine" : 53
      },
      "25" : {
        "Text" : "# set installer icon\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# set generators\r\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#already set\r\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# set path variable for installer\r\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "TIGLViewer/CMakeLists.txt" : {
      "ObjectId" : "eb75452d74a5a9369fc92c4ad147514fc6c39864",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TIGLViewer cmake project\r\n\n# author: Martin Siggel\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up QT\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#build only tiglviewer if qt was found\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required opencascade libraries\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we need opengl in order to build tiglviewer\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set library search path to local lib directory during installation\r\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# get relative path to tiglviewer binary\r\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# linuxâ€š\r\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# add all tigl directories to include path\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# normal header files\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# qobject header files that have to be moced\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# moc header files\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# compile icons\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# opengl\r\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# boost\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# include path for ui files\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# comment this line if you want to see an additional console window\r\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# add program icon\r\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# add program icon\r\n",
        "Line" : 222,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "#--------------------------------------------------------------------------------\r\n\n# Now the installation stuff below\r\n\n#--------------------------------------------------------------------------------\r\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#--------------------------------------------------------------------------------\r\n\n# Install the TIGLViewer application, on Apple, the bundle is at the root of the\r\n\n# install tree, and on other platforms it'll go into the bin directory.\r\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# TKOpenGL is loaded as a plugin, hence we must manually install it\r\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# copy icon\r\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# install runtime libs\r\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# set directories to look for dependencies\r\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# install shader files from opencascade\r\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "bindings/CMakeLists.txt" : {
      "ObjectId" : "cc3c58356f351e4fb215cc00ef1359d1eca70f57",
      "LastModified" : "2015-11-20T14:47:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/fortran/CMakeLists.txt" : {
      "ObjectId" : "eb4c8be833583818ac70b5bce28544d4c0fd3069",
      "LastModified" : "2017-05-27T11:09:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TIGL Fortran interface\n\n# @author: Martin Siggel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find out the fortran compiler\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "bindings/java/CMakeLists.txt" : {
      "ObjectId" : "dd62a6bc86e97b4bbcb48080c84b872ad2053889",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/matlab/CMakeLists.txt" : {
      "ObjectId" : "27829e0f8a9158c4712eb2277dd19c0446916ebd",
      "LastModified" : "2017-05-27T11:09:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Matlab bindings for tigl\n\n# @author Martin Siggel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#run python to create the tiglmatlab.c\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We cannot directly create a Makefile, as it would collide with cmake's makefile\n\n# Hence, we are renaming it after installation\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If matlab is found, the tiglmatlab.c file is compiled into a\n\n# mex file and is installed\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# c wrapper code\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# add def for exports\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# matlab bindings enabled\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "bindings/python/CMakeLists.txt" : {
      "ObjectId" : "02a9c8dfb2559d50cf853330ba340564f7e02a4f",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# work around wrong python detection script of cmake (happens with old python versions)\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#run python to create the wrapper\r\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "bindings/python_internal/CMakeLists.txt" : {
      "ObjectId" : "94f74e2f3163e1e13de1a86badb7e1fff8ac6d64",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we build the swig documentation as follows\n\n# 1) Run doxygen to create an xml output\n\n# 2) Run doxy2swig to create doc.i from the xml output\n\n# 3) Include doc.i in the swig wrapper files\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# create the Doxyfile\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# create the xml output with doxygen\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# create the doc.i with doxy2swig\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# add all tigl directories to include path\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# find out python linking commands\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "206ea7a48cb6b88a9d1d6efb2654e773f132edff",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakePackageConfigHelpers\n\n# -------------------------\n\n#\n\n# Helpers functions for creating config files that can be included by other\n\n# projects to find and use a package.\n\n#\n\n# Adds the :command:`configure_package_config_file()` and\n\n# :command:`write_basic_package_version_file()` commands.\n\n#\n\n# Generating a Package Configuration File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: configure_package_config_file\n\n#\n\n#  Create a config file for a project::\n\n#\n\n#    configure_package_config_file(<input> <output>\n\n#      INSTALL_DESTINATION <path>\n\n#      [PATH_VARS <var1> <var2> ... <varN>]\n\n#      [NO_SET_AND_CHECK_MACRO]\n\n#      [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#      [INSTALL_PREFIX <path>]\n\n#      )\n\n#\n\n# ``configure_package_config_file()`` should be used instead of the plain\n\n# :command:`configure_file()` command when creating the ``<Name>Config.cmake``\n\n# or ``<Name>-config.cmake`` file for installing a project or library.  It helps\n\n# making the resulting package relocatable by avoiding hardcoded paths in the\n\n# installed ``Config.cmake`` file.\n\n#\n\n# In a ``FooConfig.cmake`` file there may be code like this to make the install\n\n# destinations know to the using project:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n\n#    set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n\n#    set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n\n#    ...logic to determine installedPrefix from the own location...\n\n#    set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\n#\n\n# All 4 options shown above are not sufficient, since the first 3 hardcode the\n\n# absolute directory locations, and the 4th case works only if the logic to\n\n# determine the ``installedPrefix`` is correct, and if ``CONFIG_INSTALL_DIR``\n\n# contains a relative path, which in general cannot be guaranteed.  This has the\n\n# effect that the resulting ``FooConfig.cmake`` file would work poorly under\n\n# Windows and OSX, where users are used to choose the install location of a\n\n# binary package at install time, independent from how\n\n# :variable:`CMAKE_INSTALL_PREFIX` was set at build/cmake time.\n\n#\n\n# Using ``configure_package_config_file`` helps.  If used correctly, it makes\n\n# the resulting ``FooConfig.cmake`` file relocatable.  Usage:\n\n#\n\n# 1. write a ``FooConfig.cmake.in`` file as you are used to\n\n# 2. insert a line containing only the string ``@PACKAGE_INIT@``\n\n# 3. instead of ``set(FOO_DIR \"@SOME_INSTALL_DIR@\")``, use\n\n#    ``set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")`` (this must be after the\n\n#    ``@PACKAGE_INIT@`` line)\n\n# 4. instead of using the normal :command:`configure_file()`, use\n\n#    ``configure_package_config_file()``\n\n#\n\n#\n\n#\n\n# The ``<input>`` and ``<output>`` arguments are the input and output file, the\n\n# same way as in :command:`configure_file()`.\n\n#\n\n# The ``<path>`` given to ``INSTALL_DESTINATION`` must be the destination where\n\n# the ``FooConfig.cmake`` file will be installed to.  This path can either be\n\n# absolute, or relative to the ``INSTALL_PREFIX`` path.\n\n#\n\n# The variables ``<var1>`` to ``<varN>`` given as ``PATH_VARS`` are the\n\n# variables which contain install destinations.  For each of them the macro will\n\n# create a helper variable ``PACKAGE_<var...>``.  These helper variables must be\n\n# used in the ``FooConfig.cmake.in`` file for setting the installed location.\n\n# They are calculated by ``configure_package_config_file`` so that they are\n\n# always relative to the installed location of the package.  This works both for\n\n# relative and also for absolute locations.  For absolute locations it works\n\n# only if the absolute location is a subdirectory of ``INSTALL_PREFIX``.\n\n#\n\n# If the ``INSTALL_PREFIX`` argument is passed, this is used as base path to\n\n# calculate all the relative paths.  The ``<path>`` argument must be an absolute\n\n# path.  If this argument is not passed, the :variable:`CMAKE_INSTALL_PREFIX`\n\n# variable will be used instead.  The default value is good when generating a\n\n# FooConfig.cmake file to use your package from the install tree.  When\n\n# generating a FooConfig.cmake file to use your package from the build tree this\n\n# option should be used.\n\n#\n\n# By default ``configure_package_config_file`` also generates two helper macros,\n\n# ``set_and_check()`` and ``check_required_components()`` into the\n\n# ``FooConfig.cmake`` file.\n\n#\n\n# ``set_and_check()`` should be used instead of the normal ``set()`` command for\n\n# setting directories and file locations.  Additionally to setting the variable\n\n# it also checks that the referenced file or directory actually exists and fails\n\n# with a ``FATAL_ERROR`` otherwise.  This makes sure that the created\n\n# ``FooConfig.cmake`` file does not contain wrong references.\n\n# When using the ``NO_SET_AND_CHECK_MACRO``, this macro is not generated\n\n# into the ``FooConfig.cmake`` file.\n\n#\n\n# ``check_required_components(<package_name>)`` should be called at the end of\n\n# the ``FooConfig.cmake`` file if the package supports components.  This macro\n\n# checks whether all requested, non-optional components have been found, and if\n\n# this is not the case, sets the ``Foo_FOUND`` variable to ``FALSE``, so that\n\n# the package is considered to be not found.  It does that by testing the\n\n# ``Foo_<Component>_FOUND`` variables for all requested required components.\n\n# When using the ``NO_CHECK_REQUIRED_COMPONENTS_MACRO`` option, this macro is\n\n# not generated into the ``FooConfig.cmake`` file.\n\n#\n\n# For an example see below the documentation for\n\n# :command:`write_basic_package_version_file()`.\n\n#\n\n# Generating a Package Version File\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# .. command:: write_basic_package_version_file\n\n#\n\n#  Create a version file for a project::\n\n#\n\n#    write_basic_package_version_file(<filename>\n\n#      [VERSION <major.minor.patch>]\n\n#      COMPATIBILITY <AnyNewerVersion|SameMajorVersion|ExactVersion> )\n\n#\n\n#\n\n# Writes a file for use as ``<package>ConfigVersion.cmake`` file to\n\n# ``<filename>``.  See the documentation of :command:`find_package()` for\n\n# details on this.\n\n#\n\n# ``<filename>`` is the output filename, it should be in the build tree.\n\n# ``<major.minor.patch>`` is the version number of the project to be installed.\n\n#\n\n# If no ``VERSION`` is given, the :variable:`PROJECT_VERSION` variable is used.\n\n# If this hasn't been set, it errors out.\n\n#\n\n# The ``COMPATIBILITY`` mode ``AnyNewerVersion`` means that the installed\n\n# package version will be considered compatible if it is newer or exactly the\n\n# same as the requested version.  This mode should be used for packages which\n\n# are fully backward compatible, also across major versions.\n\n# If ``SameMajorVersion`` is used instead, then the behaviour differs from\n\n# ``AnyNewerVersion`` in that the major version number must be the same as\n\n# requested, e.g.  version 2.0 will not be considered compatible if 1.0 is\n\n# requested.  This mode should be used for packages which guarantee backward\n\n# compatibility within the same major version.\n\n# If ``ExactVersion`` is used, then the package is only considered compatible if\n\n# the requested version matches exactly its own version number (not considering\n\n# the tweak version).  For example, version 1.2.3 of a package is only\n\n# considered compatible to requested version 1.2.3.  This mode is for packages\n\n# without compatibility guarantees.\n\n# If your project has more elaborated version matching rules, you will need to\n\n# write your own custom ``ConfigVersion.cmake`` file instead of using this\n\n# macro.\n\n#\n\n# Internally, this macro executes :command:`configure_file()` to create the\n\n# resulting version file.  Depending on the ``COMPATIBLITY``, either the file\n\n# ``BasicConfigVersion-SameMajorVersion.cmake.in`` or\n\n# ``BasicConfigVersion-AnyNewerVersion.cmake.in`` is used.  Please note that\n\n# these two files are internal to CMake and you should not call\n\n# :command:`configure_file()` on them yourself, but they can be used as starting\n\n# point to create more sophisticted custom ``ConfigVersion.cmake`` files.\n\n#\n\n# Example Generating Package Files\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# Example using both :command:`configure_package_config_file` and\n\n# ``write_basic_package_version_file()``:\n\n#\n\n# ``CMakeLists.txt``:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n\n#    set(LIB_INSTALL_DIR lib/ ... CACHE )\n\n#    set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n\n#    ...\n\n#    include(CMakePackageConfigHelpers)\n\n#    configure_package_config_file(FooConfig.cmake.in\n\n#      ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#      INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n\n#      PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n\n#    write_basic_package_version_file(\n\n#      ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#      VERSION 1.2.3\n\n#      COMPATIBILITY SameMajorVersion )\n\n#    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#                  ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#            DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n#\n\n# ``FooConfig.cmake.in``:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(FOO_VERSION x.y.z)\n\n#    ...\n\n#    @PACKAGE_INIT@\n\n#    ...\n\n#    set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n\n#    set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n#\n\n#    check_required_components(Foo)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "8bdb4d3e3c6edad9696ce4e078adc4cf58999f1d",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Enable Code Coverage\n\n#\n\n# 2012-01-31, Lars Bilke\n\n#\n\n# USAGE:\n\n# 1. Copy this file into your cmake modules path\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n# \n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX AND NOT CLANG\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Setup compiler options\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 55,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 59,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# copy testdata\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Setup target\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 70,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# Run tests\n",
        "Line" : 73,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 76,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 92,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 103,
        "CharPositionInLine" : 16
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 106,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 113,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA \n",
        "Line" : 125,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "cmake/DeployQt4.cmake" : {
      "ObjectId" : "309fce3107358bc08459d794214775e8831e7604",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Functions to help assemble a standalone Qt4 executable.\n\n# A collection of CMake utility functions useful for deploying\n\n# Qt4 executables.\n\n#\n\n# The following functions are provided by this module:\n\n#   write_qt4_conf\n\n#   resolve_qt4_paths\n\n#   fixup_qt4_executable\n\n#   install_qt4_plugin_path\n\n#   install_qt4_plugin\n\n#   install_qt4_executable\n\n# Requires CMake 2.6 or greater because it uses function and\n\n# PARENT_SCOPE. Also depends on BundleUtilities.cmake.\n\n#\n\n#  WRITE_QT4_CONF(<qt_conf_dir> <qt_conf_contents>)\n\n# Writes a qt.conf file with the <qt_conf_contents> into <qt_conf_dir>.\n\n#\n\n#  RESOLVE_QT4_PATHS(<paths_var> [<executable_path>])\n\n# Loop through <paths_var> list and if any don't exist resolve them\n\n# relative to the <executable_path> (if supplied) or the CMAKE_INSTALL_PREFIX.\n\n#\n\n#  FIXUP_QT4_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf>])\n\n# Copies Qt plugins, writes a Qt configuration file (if needed) and fixes up a\n\n# Qt4 executable using BundleUtilities so it is standalone and can be\n\n# drag-and-drop copied to another machine as long as all of the system\n\n# libraries are compatible.\n\n#\n\n# <executable> should point to the executable to be fixed-up.\n\n#\n\n# <qtplugins> should contain a list of the names or paths of any Qt plugins\n\n# to be installed.\n\n#\n\n# <libs> will be passed to BundleUtilities and should be a list of any already\n\n# installed plugins, libraries or executables to also be fixed-up.\n\n#\n\n# <dirs> will be passed to BundleUtilities and should contain and directories\n\n# to be searched to find library dependencies.\n\n#\n\n# <plugins_dir> allows an custom plugins directory to be used.\n\n#\n\n# <request_qt_conf> will force a qt.conf file to be written even if not needed.\n\n#\n\n#  INSTALL_QT4_PLUGIN_PATH(plugin executable copy installed_plugin_path_var <plugins_dir> <component> <configurations>)\n\n# Install (or copy) a resolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>.\n\n#\n\n# If <copy> is set to TRUE then the plugins will be copied rather than\n\n# installed. This is to allow this module to be used at CMake time rather than\n\n# install time.\n\n#\n\n# If <component> is set then anything installed will use this COMPONENT.\n\n#\n\n#  INSTALL_QT4_PLUGIN(plugin executable copy installed_plugin_path_var <plugins_dir> <component>)\n\n# Install (or copy) an unresolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>. See documentation of INSTALL_QT4_PLUGIN_PATH.\n\n#\n\n#  INSTALL_QT4_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf> <component>])\n\n# Installs Qt plugins, writes a Qt configuration file (if needed) and fixes up\n\n# a Qt4 executable using BundleUtilities so it is standalone and can be\n\n# drag-and-drop copied to another machine as long as all of the system\n\n# libraries are compatible. The executable will be fixed-up at install time.\n\n# <component> is the COMPONENT used for bundle fixup and plugin installation.\n\n# See documentation of FIXUP_QT4_BUNDLE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Mike McQuaid <mike@mikemcquaid.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The functions defined in this file depend on the fixup_bundle function\n\n# (and others) found in BundleUtilities.cmake\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/DeployQt5.cmake" : {
      "ObjectId" : "35538fdfa35dc274dce3a78c25b03d01d5cdf342",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Functions to help assemble a standalone Qt5 executable.\n\n# A collection of CMake utility functions useful for deploying\n\n# Qt5 executables.\n\n#\n\n# The following functions are provided by this module:\n\n#   write_qt5_conf\n\n#   resolve_qt5_paths\n\n#   fixup_qt5_executable\n\n#   install_qt5_plugin_path\n\n#   install_qt5_plugin\n\n#   install_qt5_executable\n\n# Requires CMake 2.6 or greater because it uses function and\n\n# PARENT_SCOPE. Also depends on BundleUtilities.cmake.\n\n#\n\n#  WRITE_QT5_CONF(<qt_conf_dir> <qt_conf_contents>)\n\n# Writes a qt.conf file with the <qt_conf_contents> into <qt_conf_dir>.\n\n#\n\n#  RESOLVE_QT5_PATHS(<paths_var> [<executable_path>])\n\n# Loop through <paths_var> list and if any don't exist resolve them\n\n# relative to the <executable_path> (if supplied) or the CMAKE_INSTALL_PREFIX.\n\n#\n\n#  FIXUP_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf>])\n\n# Copies Qt plugins, writes a Qt configuration file (if needed) and fixes up a\n\n# Qt5 executable using BundleUtilities so it is standalone and can be\n\n# drag-and-drop copied to another machine as long as all of the system\n\n# libraries are compatible.\n\n#\n\n# <executable> should point to the executable to be fixed-up.\n\n#\n\n# <qtplugins> should contain a list of the names or paths of any Qt plugins\n\n# to be installed.\n\n#\n\n# <libs> will be passed to BundleUtilities and should be a list of any already\n\n# installed plugins, libraries or executables to also be fixed-up.\n\n#\n\n# <dirs> will be passed to BundleUtilities and should contain and directories\n\n# to be searched to find library dependencies.\n\n#\n\n# <plugins_dir> allows an custom plugins directory to be used.\n\n#\n\n# <request_qt_conf> will force a qt.conf file to be written even if not needed.\n\n#\n\n#  INSTALL_QT5_PLUGIN_PATH(plugin executable copy installed_plugin_path_var <plugins_dir> <component> <configurations>)\n\n# Install (or copy) a resolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>.\n\n#\n\n# If <copy> is set to TRUE then the plugins will be copied rather than\n\n# installed. This is to allow this module to be used at CMake time rather than\n\n# install time.\n\n#\n\n# If <component> is set then anything installed will use this COMPONENT.\n\n#\n\n#  INSTALL_QT5_PLUGIN(plugin executable copy installed_plugin_path_var <plugins_dir> <component>)\n\n# Install (or copy) an unresolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>. See documentation of INSTALL_QT5_PLUGIN_PATH.\n\n#\n\n#  INSTALL_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf> <component>])\n\n# Installs Qt plugins, writes a Qt configuration file (if needed) and fixes up\n\n# a Qt5 executable using BundleUtilities so it is standalone and can be\n\n# drag-and-drop copied to another machine as long as all of the system\n\n# libraries are compatible. The executable will be fixed-up at install time.\n\n# <component> is the COMPONENT used for bundle fixup and plugin installation.\n\n# See documentation of FIXUP_QT5_BUNDLE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Mike McQuaid <m...@mikemcquaid.com>\n\n# Copyright 2013 Mihai Moldovan <io...@ionic.de>\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2011 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The functions defined in this file depend on the fixup_bundle function\n\n# (and others) found in BundleUtilities.cmake\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#string(TOUPPER \"QT_${plugin}_PLUGIN\" plugin_var)\n",
        "Line" : 264,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "#CMAKE_POLICY(SET CMP0011 NEW) # disabling a warning about policy changing in this scope\n",
        "Line" : 273,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 5
    },
    "cmake/FindFreetypeLib.cmake" : {
      "ObjectId" : "a1be45676a822b90c725d1b9de28ce5e922b7bbb",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate FreeType library\n\n# This module defines\n\n#  FREETYPE_LIBRARIES, the library to link against\n\n#  FREETYPE_FOUND, if false, do not try to link to FREETYPE\n\n#\n\n# $FREETYPE_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$FREETYPE_DIR\n\n# used in building FREETYPE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Created by Eric Wing.\n\n# Modifications by Alexander Neundorf.\n\n# This file has been renamed to \"FindFreetypeLib.cmake\" since it is only\n\n# used to locate the library and no include files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set the user variables\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FREETYPE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindGLOG.cmake" : {
      "ObjectId" : "f34a55a5b1bf40733a84b83aa0d1fe17beacacb0",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###  FindGLOG.cmake; coding: utf-8 ---\n\n#\n\n# GLOG_FOUND - system has GLOG\n\n# GLOG_INCLUDE_DIR - headers location\n\n# GLOG_LIBRARIES - libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to find glog headers, if not found then install glog from contrib into\n\n# build directory and set GLOG_INCLUDE_DIR and GLOG_LIBRARIES\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# and for windows\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GLOG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindJava.cmake" : {
      "ObjectId" : "07dfd33324d39d33963c7e26420d15ab98447a48",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Java\n\n# This module finds if Java is installed and determines where the\n\n# include files and libraries are. This code sets the following\n\n# variables:\n\n#\n\n#  Java_JAVA_EXECUTABLE    = the full path to the Java runtime\n\n#  Java_JAVAC_EXECUTABLE   = the full path to the Java compiler\n\n#  Java_JAVAH_EXECUTABLE   = the full path to the Java header generator\n\n#  Java_JAVADOC_EXECUTABLE = the full path to the Java documention generator\n\n#  Java_JAR_EXECUTABLE     = the full path to the Java archiver\n\n#  Java_VERSION_STRING     = Version of the package found (java version), eg. 1.6.0_12^gol\n\n#  Java_VERSION_PATCH      = The patch version of the package found.\n\n#  Java_VERSION_TWEAK      = The tweak version of the package found (after '_')\n\n#  Java_VERSION            = This is set to: $major.$minor.$patch(.$tweak)\n\n#\n\n# The minimum required version of Java can be specified using the\n\n# standard CMake syntax, e.g. find_package(Java 1.5)\n\n#\n\n# NOTE: ${Java_VERSION} and ${Java_VERSION_STRING} are not guaranteed to be\n\n# identical. For example some java version may return:\n\n# Java_VERSION_STRING = 1.5.0_17\n\n# and\n\n# Java_VERSION        = 1.5.0.17\n\n#\n\n# another example is the Java OEM, with:\n\n# Java_VERSION_STRING = 1.6.0-oem\n\n# and\n\n# Java_VERSION        = 1.6.0\n\n#\n\n# For these components the following variables are set:\n\n#\n\n#  Java_FOUND                    - TRUE if all components are found.\n\n#  Java_INCLUDE_DIRS             - Full paths to all include dirs.\n\n#  Java_LIBRARIES                - Full paths to all libraries.\n\n#  Java_<component>_FOUND        - TRUE if <component> is found.\n\n#\n\n# Example Usages:\n\n#  find_package(Java)\n\n#  find_package(Java COMPONENTS Runtime)\n\n#  find_package(Java COMPONENTS Development)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n# Copyright 2009-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The HINTS option should only be used for values computed from the system.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Hard-coded guesses should still go in PATHS. This ensures that the user\n\n# environment can always override hard guesses.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# sun-java output to stderr\n",
        "Line" : 94,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# extract major/minor version and patch level from \"java -version\" output\n\n# Tested on linux using\n\n# 1. Sun / Sun OEM\n\n# 2. OpenJDK 1.6\n\n# 3. GCJ 1.5\n\n# 4. Kaffe 1.4.2\n\n# 5. OpenJDK 1.7.x on OpenBSD\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# This is most likely Sun / OpenJDK, or maybe GCJ-java compat layer\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Kaffe style\n",
        "Line" : 116,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# OpenJDK ver 1.7.x on OpenBSD\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# warning tweak version can be empty:\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# check case where tweak is not defined\n",
        "Line" : 133,
        "CharPositionInLine" : 43
      },
      "11" : {
        "Text" : "# User just want to execute some Java byte-compiled\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Check for everything\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# LEGACY\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/FindMATLAB.cmake" : {
      "ObjectId" : "5cb4f625dc07e3aaf6e1662a6c69307738493f0e",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# @file  FindMATLAB.cmake\n\n# @brief Find MATLAB installation.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MATLAB_DIR @endtp\n\n#     <td>The installation directory of MATLAB.\n\n#         Can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLABDIR @endtp\n\n#     <td>Alternative environment variable for @p MATLAB_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_FIND_COMPONENTS @endtp\n\n#     <td>The @c COMPONENTS argument(s) of the find_package() command can\n\n#         be used to only look for specific MATLAB executables and libraries.\n\n#         Valid component values are \"matlab\", \"mcc\", \"mexext\", \"mex\",\n\n#         \"libmex\", \"mx\" or \"libmx\", and \"eng\" or \"libeng\".</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_PATH_SUFFIXES @endtp\n\n#     <td>Path suffixes which are used to find the proper MATLAB libraries.\n\n#         By default, this find module tries to determine the path suffix\n\n#         from the CMake variables which describe the system. For example,\n\n#         on 64-bit Unix-based systems, the libraries are searched in\n\n#         @p MATLAB_DIR/bin/glnxa64. Set this variable before the\n\n#         find_package() command if this find module fails to\n\n#         determine the correct location of the MATLAB libraries within\n\n#         the root directory.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b MATLAB_FOUND @endtp\n\n#     <td>Whether the package was found and the following CMake\n\n#         variables are valid.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found matlab executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_MCC_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found MATLAB Compiler (mcc) executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_MEX_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found MEX script (mex) executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_MEXEXT_EXECUTABLE @endtp\n\n#     <td>The absolute path of the found mexext script executable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_INCLUDE_DIR @endtp\n\n#     <td>Package include directories.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_INCLUDES @endtp\n\n#     <td>Include directories including prerequisite libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_mex_LIBRARY @endtp\n\n#     <td>The MEX library of MATLAB.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_mx_LIBRARY @endtp\n\n#     <td>The @c mx library of MATLAB.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_eng_LIBRARY @endtp\n\n#     <td>The MATLAB engine library.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_LIBRARY @endtp\n\n#     <td>All MATLAB libraries.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b MATLAB_LIBRARIES @endtp\n\n#     <td>Package libraries and prerequisite libraries.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# Copyright (c) 2011, 2012 University of Pennsylvania. All rights reserved.<br />\n\n# See http://www.rad.upenn.edu/sbia/software/license.html or COPYING file.\n\n#\n\n# Contact: SBIA Group <sbia-software at uphs.upenn.edu>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Determine Bitness of build \n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MAC\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# LINUX\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# assume people are generally using 7.1,\n\n# if using 7.0 need to link to: extern/lib/win32/microsoft/msvc70\n",
        "Line" : 159,
        "CharPositionInLine" : 7
      },
      "7" : {
        "Text" : "# assume people are generally using 5.4\n\n# if using 5.0 need to link to: ../extern/lib/win32/microsoft/bcc50\n\n# if using 5.1 need to link to: ../extern/lib/win32/microsoft/bcc51\n",
        "Line" : 169,
        "CharPositionInLine" : 7
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find paths/files\n",
        "Line" : 186,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# mark variables as advanced\n",
        "Line" : 232,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# list of all libraries\n",
        "Line" : 237,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# prerequisite libraries\n",
        "Line" : 244,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# aliases / backwards compatibility\n",
        "Line" : 247,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set *_FOUND to TRUE\n\n# if all listed variables are found or TRUE\n",
        "Line" : 253,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# MESSAGE\n",
        "Line" : 270,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# VARIABLES\n",
        "Line" : 272,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set MATLAB_DIR\n",
        "Line" : 279,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# unset private variables\n",
        "Line" : 286,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 18
    },
    "cmake/FindOpenCASCADE.cmake" : {
      "ObjectId" : "d30c2b99d89c53496eda46c6a2b1caaa58438d82",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# taken and adapted from the heekscad project: https://github.com/Heeks\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OpenCASCADE libraries\r\n\n### Does not test what version has been found,though\r\n\n### that could be done by parsing Standard_Version.hxx\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Once done, this will define\r\n\n#  OpenCASCADE_FOUND - true if OCC has been found\r\n\n#  OpenCASCADE_INCLUDE_DIR - the OCC include dir\r\n\n#  OpenCASCADE_LIBRARIES - names of OCC libraries\r\n\n#  OpenCASCADE_LINK_DIRECTORY - location of OCC libraries\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ${OpenCASCADE_FOUND} is cached, so once OCC is found this block shouldn't have to run again\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 32 bit or 64 bit?\r\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#find the include dir by looking for Standard_Real.hxx\r\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Find one lib and save its directory to OpenCASCADE_LINK_DIRECTORY. Because\r\n\n#  OCC has so many libs, there is increased risk of a name collision.\r\n\n#  Requiring that all libs be in the same directory reduces the risk.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# check dll path\r\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# everything was found\r\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#so that messages are only printed once\r\n",
        "Line" : 82,
        "CharPositionInLine" : 25
      },
      "10" : {
        "Text" : "#so that messages are only printed once\r\n",
        "Line" : 90,
        "CharPositionInLine" : 26
      },
      "11" : {
        "Text" : "# get version\r\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# We need to find the shader directory for OCCT 6.7.0 and newer\r\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# try also to find the installed oce shaders\r\n",
        "Line" : 121,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "#look for libs in OpenCASCADE_LINK_DIRECTORY\r\n",
        "Line" : 135,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 15
    },
    "cmake/FindPythonOCC.cmake" : {
      "ObjectId" : "7706a315171f433277a38c77b41fc6e785dfa126",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for the interface file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindVLD.cmake" : {
      "ObjectId" : "25f93f2a21bf246badd9757b65cc0d5014085fac",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module for locating Visual Leak Detector.\n\n#\n\n# Customizable variables:\n\n#   VLD_ROOT_DIR\n\n#     This variable points to the Visual Leak Detector root directory. By\n\n#     default, the module looks for the installation directory by examining the\n\n#     Program Files/Program Files (x86) folders and the VLDROOT environment\n\n#     variable.\n\n#\n\n# Read-only variables:\n\n#   VLD_FOUND\n\n#     Indicates that the library has been found.\n\n#\n\n#   VLD_INCLUDE_DIRS\n\n#     Points to the Visual Leak Detector include directory.\n\n#\n\n#   VLD_LIBRARY_DIRS\n\n#     Points to the Visual Leak Detector directory that contains the libraries.\n\n#     The content of this variable can be passed to link_directories.\n\n#\n\n#   VLD_LIBRARIES\n\n#     Points to the Visual Leak Detector libraries that can be passed to\n\n#     target_link_libararies.\n\n#\n\n#\n\n# Copyright (c) 2012 Sergiu Dotenco\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version 2.0 uses vld_x86 and vld_x64 instead of simply vld as library names\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# major.minor.patch version numbering scheme\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# major.minor version numbering scheme. The trailing letter is ignored.\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/GNUInstallDirs.cmake" : {
      "ObjectId" : "0302e4bef6c3910b1992fa0125c873fff066a427",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Define GNU standard installation directories\n\n# Provides install directory variables as defined for GNU software:\n\n#  http://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n# Inclusion of this module defines the following variables:\n\n#  CMAKE_INSTALL_<dir>      - destination for files of a given type\n\n#  CMAKE_INSTALL_FULL_<dir> - corresponding absolute path\n\n# where <dir> is one of:\n\n#  BINDIR           - user executables (bin)\n\n#  SBINDIR          - system admin executables (sbin)\n\n#  LIBEXECDIR       - program executables (libexec)\n\n#  SYSCONFDIR       - read-only single-machine data (etc)\n\n#  SHAREDSTATEDIR   - modifiable architecture-independent data (com)\n\n#  LOCALSTATEDIR    - modifiable single-machine data (var)\n\n#  LIBDIR           - object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)\n\n#  INCLUDEDIR       - C header files (include)\n\n#  OLDINCLUDEDIR    - C header files for non-gcc (/usr/include)\n\n#  DATAROOTDIR      - read-only architecture-independent data root (share)\n\n#  DATADIR          - read-only architecture-independent data (DATAROOTDIR)\n\n#  INFODIR          - info documentation (DATAROOTDIR/info)\n\n#  LOCALEDIR        - locale-dependent data (DATAROOTDIR/locale)\n\n#  MANDIR           - man documentation (DATAROOTDIR/man)\n\n#  DOCDIR           - documentation root (DATAROOTDIR/doc/PROJECT_NAME)\n\n# Each CMAKE_INSTALL_<dir> value may be passed to the DESTINATION options of\n\n# install() commands for the corresponding file type.  If the includer does\n\n# not define a value the above-shown default will be used and the value will\n\n# appear in the cache for editing by the user.\n\n# Each CMAKE_INSTALL_FULL_<dir> value contains an absolute path constructed\n\n# from the corresponding destination by prepending (if necessary) the value\n\n# of CMAKE_INSTALL_PREFIX.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Nikita Krupen'ko <krnekit@gmail.com>\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 83,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 87,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "1bf0230088768cb8d053883c3fda8b319414782e",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "cmake/SearchQt.cmake" : {
      "ObjectId" : "51d5dcbc4169e40cae8caa4c952f2560621c498a",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable automatic linking of qtmain\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/createDoc.cmake" : {
      "ObjectId" : "acc3bae84458d1a1d2d4a929f21a0152adf46d17",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# convert ChangeLog to Markdown for usage in doxygen \n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# create start menu entries\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# TIGL Reference PDF File\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# run latex twice to get references right (normal use case of latex, don't ask why)\n",
        "Line" : 55,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# TIGL Guide\n\n# create latex build directory\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# create pdf file\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# create directory for latex build\n\n# build pdf\n",
        "Line" : 75,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# run latex twice to get references right (normal use case of latex, don't ask why)\n",
        "Line" : 79,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# create start menu entries\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "cmake/tiglmacros.cmake" : {
      "ObjectId" : "aaded1d4b4341c2f0608584a861f2ca6be0437a6",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# gets the list of all subdirectories relative to curdir\n\n# example use:\n\n#   SUBDIRLIST(SUBDIRS ${MY_CURRENT_DIR})\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Concatenate files\n\n#\n\n# Parameters :\n\n# IN - input file)\n\n# OUT - output file\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "b199280441e5aeca8d3daad0a1d154f45866d84a",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/c_demo/CMakeLists.txt" : {
      "ObjectId" : "7441a6564459d13aede60242aa701e8a73fa30b8",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tigl demo cmake project\n\n# author: Martin Siggel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install makefile.msvc\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# install makefile.gnu  \n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "examples/java_demo/CMakeLists.txt" : {
      "ObjectId" : "230ab1ad8fccd8c054f9589023b3824c1b80602e",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tigl demo cmake project\n\n# author: Martin Siggel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/matlab_demo/CMakeLists.txt" : {
      "ObjectId" : "d04b1dc78995c1fda0c7d8bbb57f7c7e0884dd90",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tigl demo cmake project\n\n# author: Martin Siggel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/python/CMakeLists.txt" : {
      "ObjectId" : "9ab81af157155f5c50cc49bcac3b99aeaaa22437",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tigl demo cmake project\n\n# author: Martin Siggel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c736d55dab543c2ce880244a1c23a1c694b15fab",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TIGL Library\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add all subdirectories to include path\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# boost\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Building the generated source files takes a lot of time\r\n\n# Since they are normally not changed, we concatenate all\r\n\n# files into the file src_generated.cpp\r\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# remove all generated files from the tigl target\r\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# group sources as on filesystem\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# gcc 4.3.4 creates wrong code for boost::hash if compiled with optimizations\r\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# object library containing just the compiled sources\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# needed for shared libraries\r\n",
        "Line" : 123,
        "CharPositionInLine" : 73
      },
      "9" : {
        "Text" : "# tigl dll/so library\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# static lib for tiglviewer \r\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this does no actual linking but keeps track of the dependencies\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cmake configuration export\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "5af38af825d53b7b8978df9b0df3accab7e2f3f8",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/unittests/CMakeLists.txt" : {
      "ObjectId" : "f62da6119590ba5e8110ee2352a1eb9f02b35337",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add all tigl directories to include path\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# boost\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#execute_process(COMMAND ${CMAKE_PROGRAM} -E copy_if_different ${PROJECT_SOURCE_DIR}/tests/TestData tests/Testdata)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#create directory to avoid crash in unit tests\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "thirdparty/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "thirdparty/gtest-1.7.0/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "thirdparty/gtest-1.7.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "thirdparty/gtest-1.7.0/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "thirdparty/gtest-1.7.0/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2019-01-24T16:55:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 34,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 3227
}