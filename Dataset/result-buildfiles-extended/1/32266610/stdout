{
  "Repository" : "32266610",
  "Revision" : "HEAD",
  "ObjectId" : "07b1ccd82ff6b7e6369a0d8d6a5e5e4f7ba0b7d6",
  "CommitTime" : "2019-04-10T22:20:13Z",
  "Files" : {
    "API-Samples/CMakeLists.txt" : {
      "ObjectId" : "e799003591f5f5e56e36900e393bb487c7119d3c",
      "LastModified" : "2018-10-25T21:54:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If ANDROID is ON, turn on cross-compiling for it\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Additional includes for spirv-tools\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# function to build a single-source-file sample that uses glsl shaders;\n\n#   - assumes SAMPLE_GLSL_VERT_SHADERS and SAMPLE_GLSL_FRAG_SHADERS is set to\n\n#     the list of shader files of that type, with .vert and .frag omitted\n\n#   - uses glslangValidator to convert glsl to spirv\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# function to build a single-source-file sample that uses spirv shaders\n\n#   - assumes SAMPLE_SPIRV_SHADERS is set to list to list of spirv shsders\n\n#     used by the sample, with the .spv omitted\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# function to build a simple single-source-file sample\n\n#   - assumes S_TARGETS set to list of build targets\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate AndroidStudio project files.\n",
        "Line" : 88,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Replace \"-\" to \"_\", which is invalid in a package name.\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Clear flags.\n",
        "Line" : 100,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Add extra setting for some samples.\n\n# shaderc usage.\n",
        "Line" : 107,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Include resource files.\n",
        "Line" : 111,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Add external storage access permission.\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Add validation layer settings.\n",
        "Line" : 126,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Cook template files.\n",
        "Line" : 132,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "#generate Settings.gradle\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# function to build a simple single-source-file sample\n\n#   - assumes that code is standalone and doesn't depend on utilitites\n\n#   - assumes S_TARGETS set to list of build targets\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If MSVC, disable some signed/unsigned mismatch warnings.\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# extra setup for out-of-tree builds\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#\n\n# START BUILDING SAMPLES HERE\n\n#\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Generate Android project.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# simple one file sample targets, no additional files\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# targets that use spv shaders\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# usespirvshader\n\n# set(SAMPLE_SPIRV_SHADERS spirvshader-vert spirvshader-frag)\n\n# sampleExtSPIRVShaders()\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# targets that require glsl to spv shader conversion\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# useglslshader\n\n# set(SAMPLE_GLSL_FRAG_SHADERS glslshader)\n\n# set(SAMPLE_GLSL_VERT_SHADERS glslshader)\n\n# sampleExtGLSLShaders()\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "API-Samples/android/CMakeLists.txt" : {
      "ObjectId" : "c03c88612dbe1617bc8429abbc7fcfaefedd38c8",
      "LastModified" : "2017-06-21T16:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2016 The Android Open Source Project\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build Util Lib\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import shaderc lib in NDK\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build application's shared lib\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Force export ANativeActivity_onCreate(),\n\n# Refer to: https://github.com/android-ndk/ndk/issues/381.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "API-Samples/utils/CMakeLists.txt" : {
      "ObjectId" : "8fa616323184295fa4ec68f088f0c1e6bde9bd35",
      "LastModified" : "2016-11-28T06:59:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If MSVC, disable some signed/unsigned mismatch warnings.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "c496718396b1039334389b52a5a78e6229b2626c",
      "LastModified" : "2019-02-27T21:23:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"VULKAN_SAMPLES\". CMakeLists files in this project can\n\n# refer to the root source directory of the project as ${VULKAN_SOURCE_DIR} and\n\n# to the root binary directory of the project as ${VULKAN_BINARY_DIR}.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set (CMAKE_VERBOSE_MAKEFILE 1)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The API_NAME allows renaming builds to avoid conflicts with installed SDKs\n\n# The MAJOR number of the version we're building, used in naming\n\n# <api-name>-<major>.dll (and other files).\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set a better default install location for Windows only if the user did not provide one.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable cmake folders\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Treat warnings as errors\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Disable RTTI\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Warn about nested declarations\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Warn about potentially uninitialized variables\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Warn about different indirection types.\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Warn about signed/unsigned mismatch.\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# is WIN32\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# For Windows, since 32-bit and 64-bit items can co-exist, we build each in its own build directory.\n\n# 32-bit target data goes in build32, and 64-bit target data goes into build.  So, include/link the\n\n# appropriate data at build time.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Take some steps to set up a variable pointing to the final glslang binaries given the variety of input options\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# not WIN32\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# For GCC version 7.1 or greater, we need to disable the implicit fallthrough warning since\n\n# there's no consistent way to satisfy all compilers until they all accept the C++17 standard\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Cmake command line option overrides environment variable\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Cmake command line option overrides environment variable\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Cmake command line option overrides environment variable\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Not brought forward after repository split\n",
        "Line" : 330,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 20
    },
    "Layer-Samples/Overlay/CMakeLists.txt" : {
      "ObjectId" : "3edbd5a11b8fb2838c93e892d791f1c27d5439a6",
      "LastModified" : "2018-10-25T21:54:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sample-Programs/Hologram/CMakeLists.txt" : {
      "ObjectId" : "3051c1a1cae692ff9fe98c54e38e352ac4e8b8bd",
      "LastModified" : "2019-02-27T21:23:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Sample-Programs/Hologram/android/CMakeLists.txt" : {
      "ObjectId" : "dc88edfca9977349976569203705ef75c33c1aa4",
      "LastModified" : "2017-06-21T16:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2017 The Android Open Source Project\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build native_app_glue as a static lib\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build application's shared lib\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindImageMagick.cmake" : {
      "ObjectId" : "2d765bce4dd49d5a57efc75c6c38fe72bb4dfb3a",
      "LastModified" : "2017-06-21T16:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the ImageMagick binary suite.\n\n# This module will search for a set of ImageMagick tools specified\n\n# as components in the FIND_PACKAGE call. Typical components include,\n\n# but are not limited to (future versions of ImageMagick might have\n\n# additional components not listed here):\n\n#\n\n#  animate\n\n#  compare\n\n#  composite\n\n#  conjure\n\n#  convert\n\n#  display\n\n#  identify\n\n#  import\n\n#  mogrify\n\n#  montage\n\n#  stream\n\n#\n\n# If no component is specified in the FIND_PACKAGE call, then it only\n\n# searches for the ImageMagick executable directory. This code defines\n\n# the following variables:\n\n#\n\n#  ImageMagick_FOUND                  - TRUE if all components are found.\n\n#  ImageMagick_EXECUTABLE_DIR         - Full path to executables directory.\n\n#  ImageMagick_<component>_FOUND      - TRUE if <component> is found.\n\n#  ImageMagick_<component>_EXECUTABLE - Full path to <component> executable.\n\n#\n\n# There are also components for the following ImageMagick APIs:\n\n#\n\n#  Magick++\n\n#  MagickWand\n\n#  MagickCore\n\n#\n\n# For these components the following variables are set:\n\n#\n\n#  ImageMagick_FOUND                    - TRUE if all components are found.\n\n#  ImageMagick_INCLUDE_DIRS             - Full paths to all include dirs.\n\n#  ImageMagick_LIBRARIES                - Full paths to all libraries.\n\n#  ImageMagick_<component>_FOUND        - TRUE if <component> is found.\n\n#  ImageMagick_<component>_INCLUDE_DIRS - Full path to <component> include dirs.\n\n#  ImageMagick_<component>_LIBRARIES    - Full path to <component> libraries.\n\n#\n\n# Example Usages:\n\n#  FIND_PACKAGE(ImageMagick)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS convert)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS convert mogrify display)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS Magick++)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS Magick++ convert)\n\n#\n\n# Note that the standard FIND_PACKAGE features are supported\n\n# (i.e., QUIET, REQUIRED, etc.).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Copyright 2007-2008 Miguel A. Figueroa-Villanueva <miguelf at ieee dot org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright_cmake.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If a 64-bit compile, it can only appear in \"[HKLM]\\\\software\\\\ImageMagick\"\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is dumb, but it's the only way I've been able to get this to work.  CMake has no knowledge of the systems architecture.\n\n# So, if we want to detect if we're running a 32-bit compile on a 64-bit OS, we need to manually check for the existence of\n\n# ImageMagick in the WOW6432Node of the registry first.  If that fails, assume they want the 64-bit version.\n",
        "Line" : 81,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# If the WOW6432Node reg string returns empty, assume 32-bit OS, and look in the standard reg path.\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Otherwise, the WOW6432Node returned a string, assume 32-bit build on 64-bit OS and use that string.\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# No registry exists for Linux.  So, just set these to empty strings.\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Helper functions\n\n#---------------------------------------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NOTE: My experience is that Windows uses the PATHs\n\n#       variables, while Linux uses the PATH_SUFFIXES.\n\n#       You can't add sub-directories to the PATH_SUFFIXES\n\n#       because it messes up the ImageMagick Include\n\n#       paths that are returned.  Instead, you have to\n\n#       call this FIND_IMAGEMAGICK_API for each separate\n\n#       possible sub-folder.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Only add the path if it's not the special string \"<NONE>\"\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add the architecture include path if it exists\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Start Actual Work\n\n#---------------------------------------------------------------------\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Try to find a ImageMagick installation binary path.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find each component. Search for all tools in same dir\n\n# <ImageMagick_EXECUTABLE_DIR>; otherwise they should be found\n\n# independently and not in a cohesive module such as this one.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# DEPRECATED: forced components for backward compatibility\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# unset cached variable that assumes header parameter never changes\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Try top folder first\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Look for Magick++.h, in the magick++ sub-folder\n",
        "Line" : 243,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Look for Magick++.h, in the magick sub-folder\n",
        "Line" : 250,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# unset cached variable that assumes header parameter never changes\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Try top folder first\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Look for MagickWand.h in the wand sub-folder\n",
        "Line" : 266,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# Look for MagickWand.h he MagickWand sub-folder\n",
        "Line" : 273,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# Look for MagickWand.h he magick sub-folder\n",
        "Line" : 280,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# Try top folder first\n",
        "Line" : 288,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Look for MagickCore.h, in the MagickCore sub-folder\n",
        "Line" : 294,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# Look for MagickCore.h, in the magick sub-folder\n",
        "Line" : 301,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Standard Package Output\n\n#---------------------------------------------------------------------\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Maintain consistency with all other variables.\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#---------------------------------------------------------------------\n\n# DEPRECATED: Setting variables for backward compatibility.\n\n#---------------------------------------------------------------------\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cmake/FindPCIAccess.cmake" : {
      "ObjectId" : "65f7d5c145df590b19c30500ac1d530ac8a909bf",
      "LastModified" : "2017-06-21T16:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindPCIAccess\n\n#\n\n# Copyright 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindPthreadStubs.cmake" : {
      "ObjectId" : "063bbe5160a2c36eb1b01ad14abdfe293fcbbf50",
      "LastModified" : "2017-06-21T16:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindPthreadStubs\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindUDev.cmake" : {
      "ObjectId" : "e3d16995dcbee4afaf5c8fa7192919dfaecfed30",
      "LastModified" : "2017-06-21T16:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindUDev\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindValgrind.cmake" : {
      "ObjectId" : "5c1fb5615755e57d156c68d6e5db22d8cd287c0b",
      "LastModified" : "2017-06-21T16:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindValgrind\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindVulkan.cmake" : {
      "ObjectId" : "41496a63eb5995d933a1f165ebd4ae7049b805ce",
      "LastModified" : "2018-10-25T21:54:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindVulkan\n\n# ----------\n\n#\n\n# Try to find Vulkan\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``Vulkan::Vulkan``, if\n\n# Vulkan has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables::\n\n#\n\n#   Vulkan_FOUND          - True if Vulkan was found\n\n#   Vulkan_INCLUDE_DIRS   - include directories for Vulkan\n\n#   Vulkan_LIBRARIES      - link against this library to use Vulkan\n\n#\n\n# The module will also define two cache variables::\n\n#\n\n#   Vulkan_INCLUDE_DIR    - the Vulkan include directory\n\n#   Vulkan_LIBRARY        - the path to the Vulkan library\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindWayland.cmake" : {
      "ObjectId" : "f93218b8739e66a50678a4b6965231438b87692f",
      "LastModified" : "2018-10-25T21:54:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Wayland on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   WAYLAND_FOUND       - True if Wayland is found\n\n#   WAYLAND_LIBRARIES   - Link these to use Wayland\n\n#   WAYLAND_INCLUDE_DIR - Include directory for Wayland\n\n#   WAYLAND_DEFINITIONS - Compiler flags for using Wayland\n\n#\n\n# In addition the following more fine grained variables will be defined:\n\n#\n\n#   WAYLAND_CLIENT_FOUND  WAYLAND_CLIENT_INCLUDE_DIR  WAYLAND_CLIENT_LIBRARIES\n\n#   WAYLAND_SERVER_FOUND  WAYLAND_SERVER_INCLUDE_DIR  WAYLAND_SERVER_LIBRARIES\n\n#   WAYLAND_EGL_FOUND     WAYLAND_EGL_INCLUDE_DIR     WAYLAND_EGL_LIBRARIES\n\n#\n\n# Copyright (c) 2013 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In the cache already\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindX11_XCB.cmake" : {
      "ObjectId" : "956bf89d7715fdc9c25354ea693c90c47053f31c",
      "LastModified" : "2018-10-25T21:54:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libX11-xcb\n\n# Once done this will define\n\n#\n\n# X11_XCB_FOUND - system has libX11-xcb\n\n# X11_XCB_LIBRARIES - Link these to use libX11-xcb\n\n# X11_XCB_INCLUDE_DIR - the libX11-xcb include dir\n\n# X11_XCB_DEFINITIONS - compiler switches required for using libX11-xcb\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011 Fredrik Höglund <fredrik@kde.org>\n\n# Copyright (c) 2008 Helio Chissini de Castro, <helio@kde.org>\n\n# Copyright (c) 2007 Matthias Kretz, <kretz@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindXCB.cmake" : {
      "ObjectId" : "2311591109f10788f121e36fef875c07da7864b9",
      "LastModified" : "2018-10-25T21:54:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindXCB\n\n#\n\n# Copyright (C) 2015 Valve Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# component name\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# header name\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# library name\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 16
  },
  "ElapsedTime" : 4633
}