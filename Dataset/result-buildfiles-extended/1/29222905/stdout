{
  "Repository" : "29222905",
  "Revision" : "HEAD",
  "ObjectId" : "303b13cd003f4b8fc92493b5684f7599476a0ab4",
  "CommitTime" : "2018-10-27T13:49:57Z",
  "Files" : {
    "BUILD" : {
      "ObjectId" : "dc6ef1da9fcddaee108e64f301466406f6e659a5",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "Makefile.am" : {
      "ObjectId" : "fba95bc33781713d6b59a2fef5f4638a0e6b4c3c",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Add some files needed only when making a bundle\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "97680dd211bc33478ccfb054cc59b3a807e56d31",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/base/Makefile.am" : {
      "ObjectId" : "ee01379fb6fa99858ccb6e2219415034db73f8bd",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/base/tinyxml/Makefile.am" : {
      "ObjectId" : "a68530e110d361a65d26f7f178214eb23dce96c8",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/build_tools/Makefile.am" : {
      "ObjectId" : "c116120c1bad5c156299d8f7f1604cdb28dce7d8",
      "LastModified" : "2006-10-10T12:23:38Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/build_tools/autorevision/Makefile.am" : {
      "ObjectId" : "e7046fe223b945113cb290df1901bac377b7b4f3",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/include/Makefile.am" : {
      "ObjectId" : "828d76e6edf28064b72e6120dd3c43aa1ce63c9b",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Because we are not generating any programs/libraries with this makefile,\n\n# $(CXXCOMPILE) is empty.\n\n# Create the basic one here:\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/include/scripting/Makefile.am" : {
      "ObjectId" : "f987b87e58a58bc3e9face80e633596e1d66b895",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/include/scripting/bindings/Makefile.am" : {
      "ObjectId" : "40dc7884106232b5d096598b0439c38fa5bed861",
      "LastModified" : "2007-02-12T14:55:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/include/scripting/include/Makefile.am" : {
      "ObjectId" : "d99e1b7b05ff52d73c66ee5feca6f8e50ba55010",
      "LastModified" : "2007-02-12T14:55:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/include/scripting/sqplus/Makefile.am" : {
      "ObjectId" : "8ae7c687151ad498aa2b305c7bd2c4eb5175252f",
      "LastModified" : "2007-02-12T14:55:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/include/scripting/sqstdlib/Makefile.am" : {
      "ObjectId" : "6e35f06b7013e3b06d95078b6e5f266508b871f0",
      "LastModified" : "2007-02-12T14:55:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/include/scripting/squirrel/Makefile.am" : {
      "ObjectId" : "f89fd2c45953ff7cebb1ef6ad37eccc659901c89",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/include/tinyxml/Makefile.am" : {
      "ObjectId" : "c22e938178b738aafc9f82b71b323cdd9fa5ab25",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/mime/Makefile.am" : {
      "ObjectId" : "c999dcbd028226a2970d85f20aca3488f8efe98e",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Update mime only when system wide installation takes place\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/Makefile.am" : {
      "ObjectId" : "e3746421c12a9c4a8b56eebfbca8e210ab40415c",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# the 'contrib' subdir contains its own filtering\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/abbreviations/Makefile.am" : {
      "ObjectId" : "99c113ed9f9353434e5ec52c2eccc7348dd5ed44",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/abbreviations/resources/Makefile.am" : {
      "ObjectId" : "bb48e0f7febf7298f277162a3d7e4d3dd4384ac5",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/astyle/Makefile.am" : {
      "ObjectId" : "a91eaa907799de58ba8e93a87017076cd1022e37",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/astyle/astyle/Makefile" : {
      "ObjectId" : "3cc4775514cee5708676a3e7633abd53e49b5a03",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make file for GCC compiler on Linux or compatible OS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of source files for astyle\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# list of source files for libraries without ASLocalizer\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# source directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE for java compiles the environment variable $JAVA_HOME must be set\n\n# example: export JAVA_HOME=/usr/lib/jvm/java-6-sun-1.6.0.00\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set prefix if not defined on the command line\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# define macros\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# define compile options for each build\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# define link options\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# object files are built from the source list $(SRC)\n\n# a suffix is added for each build\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# define object file rule (with the suffix) for each build\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OBJ\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# OBJd\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# OBJs\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# OBJsd\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# OBJa\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# OBJad\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OBJsj\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# OBJsjd\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##################################################\n\n# define build dependencies for each command\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "src/plugins/astyle/resources/Makefile.am" : {
      "ObjectId" : "89c337abfbe7c0869f52d3e7d89255265f587999",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/autosave/Makefile.am" : {
      "ObjectId" : "56401140b4d896f04768c5fef96e05f4ebb1acec",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/classwizard/Makefile.am" : {
      "ObjectId" : "53ff2781fed95e532ff02b9cf5dd93bddfa12461",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/classwizard/resources/Makefile.am" : {
      "ObjectId" : "b7979dd92ca2f199567fe941864293c61699081a",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/codecompletion/Makefile.am" : {
      "ObjectId" : "444b78707dd0941c2b96cbabc1cc54ec0dde432e",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/codecompletion/resources/Makefile.am" : {
      "ObjectId" : "efb6e4085aa27382cfcb07ae4d2a0bfa347b9e5c",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/compilergcc/Makefile.am" : {
      "ObjectId" : "65717a513ff0212a05933ade51538fc07ac2bdb6",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/compilergcc/depslib/Makefile.am" : {
      "ObjectId" : "af437a64d6d80a47ea903fd842a648fc59cbcd9a",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/compilergcc/depslib/src/Makefile.am" : {
      "ObjectId" : "57f07912720694403cd0d92f835198ab5300c95b",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/compilergcc/resources/Makefile.am" : {
      "ObjectId" : "348ad88a7a4ccac0f83ed0d66effb42e80fd167d",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/AutoVersioning/Makefile.am" : {
      "ObjectId" : "c8b9549547b2e9b3e4ee03644a6f3bba7df80dce",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/BrowseTracker/Makefile.am" : {
      "ObjectId" : "f3a0a4b41ba65b1e4d3b09d29ccca6a8e01190f0",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/Cccc/Makefile.am" : {
      "ObjectId" : "0dc965ba160297d9b16a90e05d28bb1c3702134e",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/Cccc/resources/Makefile.am" : {
      "ObjectId" : "8ab0e0c7c4d308d50be2e25caeda29afb9016b98",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/CppCheck/Makefile.am" : {
      "ObjectId" : "27330b2c7ecc7b0f9566a36f1d812a8b03b06668",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/CppCheck/resources/Makefile.am" : {
      "ObjectId" : "7ca6028920a224670b8f702347e39c02530e456c",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/Cscope/Makefile.am" : {
      "ObjectId" : "69fc608f071906dbfa321e75ee3c6ace4765304a",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/DoxyBlocks/Makefile.am" : {
      "ObjectId" : "a8dda93ad713c4db7c9ee41161864305d66c54fc",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/DoxyBlocks/images/16x16/Makefile.am" : {
      "ObjectId" : "063d4f07843e77c1f22dbbd5d1a87925db463946",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/DoxyBlocks/images/Makefile.am" : {
      "ObjectId" : "36b8b4f3f4307ee1dd36ff36bfe008e45a6a6e69",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/EditorConfig/Makefile.am" : {
      "ObjectId" : "6c0d690e31ac6a6afe4858ca83761e1087ea4efc",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/EditorTweaks/Makefile.am" : {
      "ObjectId" : "facb789349961590de16a89c327caeae2ec5f07b",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/FileManager/Makefile.am" : {
      "ObjectId" : "49957436a7e18bedf220b0e80636a037a3e57a98",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/HexEditor/Makefile.am" : {
      "ObjectId" : "13c2efa304205b5ba7c56d7ef321c83671e564d0",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/IncrementalSearch/Makefile.am" : {
      "ObjectId" : "db7811e8a7d666e2410c53dbc6b640c793416ba4",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/Makefile.am" : {
      "ObjectId" : "e6d27d18b8e2c0294563a96360a96c53483c283e",
      "LastModified" : "2018-09-08T16:09:19Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/MouseSap/Makefile.am" : {
      "ObjectId" : "27e2e75da37e9a16ae1df0d2ec19758b8cf189a9",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/NassiShneiderman/Makefile.am" : {
      "ObjectId" : "6e26bbb67f35ae2bc3d3b46d8b1458df64920f10",
      "LastModified" : "2018-09-08T16:09:19Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ProjectOptionsManipulator/Makefile.am" : {
      "ObjectId" : "f7daa14fda14eb0cdcb152897b5d00b8b88d24f0",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ReopenEditor/Makefile.am" : {
      "ObjectId" : "e516d8f647e7697577072e1251d8e2c279442fde",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SmartIndent/Makefile.am" : {
      "ObjectId" : "37a32dfc963334a39eb74a6a289a87e02a55dcc9",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SpellChecker/Makefile.am" : {
      "ObjectId" : "db353aa17086b7ebbc4f3663bbfe2e3d780d8b41",
      "LastModified" : "2017-11-20T23:09:41Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SpellChecker/hunspell/Makefile.am" : {
      "ObjectId" : "e437365a830ebf8c90d4aefa79c8d088cddfa353",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SpellChecker/hunspell/docs/Makefile.am" : {
      "ObjectId" : "7eaefafe8a184a0ae7394b6028055c6599833dac",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SpellChecker/hunspell/docs/hu/Makefile.am" : {
      "ObjectId" : "84c9b20c41df3048cb38cd7d149a3e041eb7f7a4",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#mandir = $(DESTDIR)/share\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/contrib/SpellChecker/hunspell/src/Makefile.am" : {
      "ObjectId" : "45b7703d662c0a1465ebaa17d6f3741972f6184a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SpellChecker/hunspell/src/hunspell/Makefile.am" : {
      "ObjectId" : "2f7bcc61e4995c4e1ff9255d5f46aa5ba7a240dc",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SpellChecker/hunspell/src/parsers/Makefile.am" : {
      "ObjectId" : "5f001a5d5f3958d67b9484ee7d4d572336557cdf",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# need mystrdup()\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/contrib/SpellChecker/hunspell/src/tools/Makefile.am" : {
      "ObjectId" : "9af3bd9a0dc4bc248fbb66f13759099bae4699a1",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/SpellChecker/wxspellchecker/Makefile.am" : {
      "ObjectId" : "042de0089d6ad598db886113b1c14a1b340c12ba",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ThreadSearch/Makefile.am" : {
      "ObjectId" : "80ead7365ae71253c2e53e33409f9eb6ce20fb87",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ThreadSearch/resources/Makefile.am" : {
      "ObjectId" : "ff10ad9aec6957a33b0fcf8ac52cf33c37c32108",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ThreadSearch/resources/images/16x16/Makefile.am" : {
      "ObjectId" : "60a5a1a0d880948ad2d85d1ffd78eddd7d4c5ee6",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ThreadSearch/resources/images/22x22/Makefile.am" : {
      "ObjectId" : "1d979db90ceaaec902b27a61983b5c277163a83b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ThreadSearch/resources/images/Makefile.am" : {
      "ObjectId" : "942ea1f350e6283f2e52c3c04ecd896dccbe33f1",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ToolsPlus/Makefile.am" : {
      "ObjectId" : "1c2b4e8efc5a6d9338cc603bde8a8fb98deb35c7",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/ToolsPlus/Resources/Makefile.am" : {
      "ObjectId" : "c9d5bf34d6a0e00787139b0516ad24b0ee806c70",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/Valgrind/Makefile.am" : {
      "ObjectId" : "fdabb5f0608e6b4fb273598e340ffba281657bca",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/Valgrind/resources/Makefile.am" : {
      "ObjectId" : "5f7e0503143651fc66d5e614b01c82b9a673cf51",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/appdata/Makefile.am" : {
      "ObjectId" : "024e1b14b04a7752538370a3db4f5f40546025ca",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/byogames/Makefile.am" : {
      "ObjectId" : "5429121d490a062296fc604b2787adb1b397ec51",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/cb_koders/Makefile.am" : {
      "ObjectId" : "5f6c49fc1b781e385b7352cb7d8e123bd73a8e48",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/codesnippets/Makefile.am" : {
      "ObjectId" : "c88d09238e533970e2d5945774d479d1ea7073c0",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/codesnippets/resources/Makefile.am" : {
      "ObjectId" : "732dcc69844fe500fd02c65f92abf76d1762a105",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##pluginlib_LTLIBRARIES = codesnippets\n\n##bin_PROGRAMS = codesnippets\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##codesnippets_LIBADD = $(WX_LIBS) ../../../../sdk/libcodeblocks.la\n\n##codesnippets_LDADD = $(WX_LIBS) ../../../../sdk/libcodeblocks.la\n\n##codesnippets_LDADD =  -L../../../../sdk ../../../../sdk/libcodeblocks.la \\\n##            ../../../../base/tinyxml/libtinyxml.la \\\n##\t\t\t$(WX_LIBS) $(WX_GTK_LIBS) $(WX_X11_LIBS)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/contrib/codestat/Makefile.am" : {
      "ObjectId" : "4a1b397c2c8250a3abeec7fa25e95f12cbfc1887",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/codestat/resources/Makefile.am" : {
      "ObjectId" : "b2197c91b4995180680eb4607f0bad9104e8e0fb",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/copystrings/Makefile.am" : {
      "ObjectId" : "9c30f6db483950737015197857c11b58de2aa33b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/devpak_plugin/Makefile.am" : {
      "ObjectId" : "e4c43b6f1d663145d648ab985fc1043dc9402f1c",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/devpak_plugin/bzip2/Makefile.am" : {
      "ObjectId" : "268861c1b79cf59a23f1e0c59c1682d77c23716d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/dragscroll/Makefile.am" : {
      "ObjectId" : "6b7abcf02590f64c63635bb1e17804770d52ea1d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/envvars/Makefile.am" : {
      "ObjectId" : "7202fe66981452ed27d85ae51ee4f76d6a513797",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/headerfixup/Makefile.am" : {
      "ObjectId" : "2a1da74127ed698530ccb6bab92d9b9437e8047d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/help_plugin/Makefile.am" : {
      "ObjectId" : "971765bc076d404a1955e4a425f1352587ec7405",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/help_plugin/bzip2/Makefile.am" : {
      "ObjectId" : "bea053d22b622feae124e91c9ed69be9e652601d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/help_plugin/zlib/Makefile.am" : {
      "ObjectId" : "33f9a5172b85508d56f0ee4a31f9ffd0d653da41",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/keybinder/Makefile.am" : {
      "ObjectId" : "00ed5cde76ff62c803c1d0c275ced4a4a75af03c",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/lib_finder/Makefile.am" : {
      "ObjectId" : "a1ea023cfa50c6c9ce7e373f0b10669b880cfc68",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/lib_finder/lib_finder/Makefile.am" : {
      "ObjectId" : "0eb59c46e602436f0596de759c5b3ecf8617103b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/profiler/Makefile.am" : {
      "ObjectId" : "a70249cef48c238e1bbbafcd91df9fe21f0f489a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/profiler/resources/Makefile.am" : {
      "ObjectId" : "f0b7f1c6f9a3f81991f3fa02c02334d60e94760d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/regex_testbed/Makefile.am" : {
      "ObjectId" : "cec7934792e49c10a8863064cfcb4a9f7d5ed9ec",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/rndgen/Makefile.am" : {
      "ObjectId" : "63cbb12f2141bb3a66ba8348056472b832c6533f",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/source_exporter/Makefile.am" : {
      "ObjectId" : "410e8664b83eb9f4b2374c739e39d73223ba9e6c",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/source_exporter/wxPdfDocument/Makefile.am" : {
      "ObjectId" : "db7c69938f562010eed9efcbb19e53a5e7f623c0",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/symtab/Makefile.am" : {
      "ObjectId" : "c9a2ed1ed7459a9dd2c3b7289cd11d848f6b5b78",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/symtab/resources/Makefile.am" : {
      "ObjectId" : "67293bc7edddfb7123a911ddc578af640941b31c",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/KWIC/Makefile.am" : {
      "ObjectId" : "2fe0f7aa0ff651e1d57a7cc2e913be5313660c54",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/KWIC/include/wx/KWIC/Makefile.am" : {
      "ObjectId" : "b22302f31cbe1ce244d443c6cb66048725d1996b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/KWIC/include/wx/xrc/Makefile.am" : {
      "ObjectId" : "229cc7aed737b1c9ec5f3064b1a0447e390a74a4",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/Makefile.am" : {
      "ObjectId" : "c1fd0975d6b8f68a2ccc6ba6e82f20bec0cf2093",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxDateTimePicker/Makefile.am" : {
      "ObjectId" : "0dcd1f5ceaef6f91dd6e6262adec3c52889a58a7",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxFlatNotebook/Makefile.am" : {
      "ObjectId" : "8686588e6a3d8c3321d025471e946e5749018ef9",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxImagePanel/Makefile.am" : {
      "ObjectId" : "5e2a7c05914f1da1b7cb59e8eea8c4a6106fc419",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxSpeedButton/Makefile.am" : {
      "ObjectId" : "79e5e0b3bc98f408c1414d0e2d66c566550de98d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxTreeList/Makefile.am" : {
      "ObjectId" : "108d8cd2b33e5c6aba54b90cb71c5e5e9e15e28f",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxchart/Makefile.am" : {
      "ObjectId" : "9cac78a8903b153d7eb2b36c10c3aa067e462ffa",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxled/Makefile.am" : {
      "ObjectId" : "936f5f85e5f267c180c80732ea9c5b1b647e1496",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxled/gizmosled/include/wx/gizmos/Makefile.am" : {
      "ObjectId" : "1aa1c3932b76ea9cdc70f10fae9ad4d5097683e3",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxled/lcdWindow/include/wx/Makefile.am" : {
      "ObjectId" : "66d9c671f65e7dd94b81dc669a1884804122b6a7",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxled/led/include/wx/Makefile.am" : {
      "ObjectId" : "fdb4e47fc40257041d7d7a15d38025179120fabb",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxled/led/include/xrc/Makefile.am" : {
      "ObjectId" : "e4a93394a985aed08dc6f8452d7f4df293e6a141",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxled/ledpanel/include/wx/Makefile.am" : {
      "ObjectId" : "d9bdcd5ddb71f3638b3030a38c63db3135f7841c",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxmathplot/Makefile.am" : {
      "ObjectId" : "e3e7d59231bcf67ec686b045e27d94f96a213894",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxthings/CMakeLists.txt" : {
      "ObjectId" : "33726de60decf1f61a46cd5c859048fba682902a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# CMake build file\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Project name, sets ${wxThings_SOURCE_DIR} and ${wxThings_BINARY_DIR}\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ===========================================================================\n\n# General settings for CMake\n\n# ===========================================================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Use a minimum version of CMake of 2.8, >= 2.8.3 is prefered\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Setup the CMake environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specify what wxWidgets libs we need to link to. Note: 'core' must be before 'base'.\n\n# If you call this CMakeLists.txt from another one you may have already called FIND_WXWIDGETS()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# minimal set for static lib/dll\n",
        "Line" : 28,
        "CharPositionInLine" : 44
      },
      "7" : {
        "Text" : "#set(wxWidgets_COMPONENTS gl xrc xml net media propgrid richtext aui stc html adv core base) # for multilib/dll\n\n#set(wxWidgets_COMPONENTS stc mono) # for monolithic\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Ok to call multiple times\n",
        "Line" : 33,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ===========================================================================\n\n# Add subdirectories containing CMakeLists.txt files or specify projects\n\n# ===========================================================================\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# CMake build file for wxThings Library\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We use some functions from GTK directly\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# wxFileBrowser uses /wx/generic/filedlgg.h which is not available in MSW.\n\n# For MSW DLLs we need to replace WXDLLEXPORT with WXDLLIMPEXP_THINGS in\n\n# wx/include/wx/generic/filedlgg.h\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Use configure since it'll create the dirs for us too.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Include this dir first so our filedlgg.h is found first.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# wxWidgets 2.9\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# wxWidgets 2.8\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# wxFileBrowser uses /wx/generic/filedlgg.h which is not available in MSW.\n\n# For MSW DLLs we cannot get at wxGetAvailableDrives() in wx/src/generic/dirctrlg.cpp\n\n# which wx/src/generic/filedlgg.cpp requires. We simply cut out that function\n\n# and paste it into our code to get it.\n\n# If this breaks we can resort to some other means, but this works for wx 2.8 and 2.9\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# string(FIND ...) is not in CMake < 2.8.5, really ugly hack to duplicate it\n",
        "Line" : 162,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# This file is configured before compliation, see above.\n\n#${wxThings_ROOT_DIR}/src/filedlgg.cpp\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# CMake build file for wxThings sample\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# CMake build file for wxThings FileBrowser sample\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "src/plugins/contrib/wxContribItems/wxthings/Makefile.am" : {
      "ObjectId" : "e15ed44c9c01e43e58a338016a907ee7a5a69bc2",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxContribItems/wxthings/build/CMakeFunctions.cmake" : {
      "ObjectId" : "e2418958cfff34075719dbf1f2e0fef973e4f078",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# This file contains a number of CMake functions/macros to make life easier.\n\n# It can be called multiple times, but it will only be read the first time.\n\n#\n\n# Author:  John Labenski\n\n# Created: Oct 15, 2011\n\n#\n\n# GET_CMAKE_CURRENT_LIST_DIR() - Get CMAKE_CURRENT_LIST_DIR var for CMake < 2.8.3\n\n#\n\n# HAS_WILDCARD()     - checks if input string has * or ? in it\n\n# ADD_FILE_TO_LIST() - adds a file to a list after expanding wildcards and getting path\n\n# GET_OBJECT_FILES() - returns a list of object files CMake would create for a list of source files.\n\n#\n\n# PRINT_ADD_SUBDIRECTORY() - Prints what paths ADD_SUBDIRECTORY() was called on\n\n# PRINT_ADD_LIBRARY()      - Prints all ADD_LIBRARY() target names and their paths\n\n# PRINT_ADD_EXECUTABLE()   - Prints all ADD_EXECTUABLE() target names and their paths\n\n#\n\n# ADD_SUBDIRECTORY() - overrides CMake's ADD_SUBDIRECTORY(), remembers what was added\n\n# ADD_LIBRARY()      - overrides CMake's ADD_LIBRARY(), remembers what was added\n\n# ADD_EXECUTABLE()   - overrides CMake's ADD_EXECUTABLE(), remembers what was added\n\n# ADD_TEST()         - overrides CMake's ADD_TEST(), remembers what was added\n\n# ADD_GTEST()        - Add a test using Google's GTest, tests for failure.\n\n# ADD_CPPCHECK_TEST() - Add a static analysis test using cppcheck (if available)\n\n#\n\n# ADD_LIBRARY_FULL()    - Complete wrapper for ADD_LIBRARY() with many conveniences.\n\n# ADD_EXECUTABLE_FULL() - Complete wrapper for ADD_EXECUTABLE() with many conveniences.\n\n#\n\n# ADD_TARGET_INCLUDE_PATHS() - Easily add multiple include paths to a single target.\n\n# APPEND_TARGET_PROPERTIES() - Append instead of SET_TARGET_PROPERTIES()\n\n# APPEND_SOURCE_FILES_PROPERTIES() - Append instead of SET_SOURCE_FILES_PROPERTIES()\n\n# TARGET_PRECOMPILED_HEADER() - Set precomp header for a library or executable target.\n\n# ADD_DOXYGEN() - Add a target for building Doxygen docs.\n\n#\n\n# GET_ALL_CMAKE_VARIABLES()   - Get all CMake vars into a list variable\n\n# PRINT_ALL_CMAKE_VARIABLES() - Print all CMake vars, useful for debugging cmake scripts\n\n# PRINT_NEW_CMAKE_VARIABLES() - Print new CMake vars since last call to PRINT_ALL/NEW_CMAKE_VARIABLES() call.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ===========================================================================\n\n# This file should only be called once during configuration, but the values\n\n# are not cached so it needs to be be run for each configuration.\n\n# Using properties does the trick of storing a variable per configuration run,\n\n# accessible at all scopes like a cache var, but it is cleared each run.\n\n# ===========================================================================\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ===========================================================================\n\n# Helper functions\n\n# ===========================================================================\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Backwards compat to CMake < 2.8.3\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Set bool variables IS_32_BIT and IS_64_BIT\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Sometimes CMake doesn't set CMAKE_SIZEOF_VOID_P, so we remember the last good value.\n\n# http://www.cmake.org/pipermail/cmake/2011-January/042058.html\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Determine the number of processors on this machine\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# only run the find code once and store it in the internal var PROCESSOR_COUNT_\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Unknown:\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Linux:\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Mac:\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Windows:\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Copy the found # of processors to PROCESSOR_COUNT, in case someone changed it.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# CONFIGURE_FILE_TO_ALL_BUILD_CONFIGURATION_DIRS(filename input_dir output_dir [COPYONLY] [ESCAPE_QUOTES] [@ONLY])\n\n#\n\n# Configure a file from ${input_dir}/${filename}\n\n#                    to ${output_dir}/[Debug/Release/...]/${filename}\n\n#\n\n# In MSVC: Configure a file to the ${output_dir}/[each of ${CMAKE_CONFIGURATION_TYPES}]\n\n# In UNIX: Configure a file to the ${output_dir}/${CMAKE_BUILD_TYPE}\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Copy them to all the output dirs for msvc since you can change the build in MSVC GUI.\n\n# Note that CMAKE_CONFIGURATION_TYPES is empty if the generator doesn't support it\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# MSW\n",
        "Line" : 146,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# Only a single build type in Unix, don't create other dirs and confuse people\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# REMOVE_FILE_FROM_ALL_BUILD_CONFIGURATION_DIRS(build_dir filename1 filename2 ...)\n\n#\n\n# Remove file(s) from ${build_dir}/[Debug/Release/RelWithDebInfo/MinSizeRel]/${filename}\n\n#\n\n# In MSVC: Remove file(s) from ${build_dir}/[each of ${CMAKE_CONFIGURATION_TYPES}]\n\n# In UNIX: Remove file(s) from ${output_dir}/${CMAKE_BUILD_TYPE}\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Note that CMAKE_CONFIGURATION_TYPES is empty if the generator doesn't support it\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# MSW\n",
        "Line" : 169,
        "CharPositionInLine" : 11
      },
      "20" : {
        "Text" : "# Only a single build type in Unix\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Note that CMAKE_CONFIGURATION_TYPES is empty if the generator doesn't support it\n",
        "Line" : 179,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# MSW\n",
        "Line" : 191,
        "CharPositionInLine" : 11
      },
      "23" : {
        "Text" : "# Only a single build type in Unix\n",
        "Line" : 192,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# HAS_WILDCARD( has_wild file_name )\n\n#\n\n# Set variable has_wild to TRUE if the file_name contains either '*' or '?'\n\n# Usage : HAS_WILDCARD(has_wild \"*.txt\") ... if (has_wild) ...\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# FILE_GLOB_RECURSE_DIR( variable root_dir wildcard1 wildcard2 ... )\n\n#\n\n# Append to 'variable' the recursively globbed filenames starting from the\n\n# root_dir using a list of wildcards.\n\n# Usage: FILE_GLOB_RECURSE_DIR( filenames /path/to/file *.h *.cpp )\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# ADD_FILE_TO_LIST(file_list filename [ALLOW_MISSING])\n\n#\n\n# Append to the list the file(s) in filename which may be a list and/or contain wildcards.\n\n# Note that CMake lists are simply items separated by a semicolon ';'\n\n# If the filename exists or is wild the path is expanded using file(GLOB ...)\n\n# A warning is given if a file is specified that is not on disk unless\n\n#   ALLOW_MISSING is specified.\n\n#\n\n# Usage :\n\n#  ADD_FILE_TO_LIST(myfiles \"*.txt\")       ; myfiles = \"/path/to/a.txt;/path/to/b.txt;...\"\n\n#  ADD_FILE_TO_LIST(myfiles \"c.txt;d.jpg\") ; myfiles = \"/path/to/a.txt;/path/to/b.txt;...;/path/to/c.txt;/path/to/d.jpg\"\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Backwards compat to CMake <= 2.8.4\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Expand the path and handle wildcards.\n\n# Note \"*.cxx;*.cpp\" doesn't work so we have to do one at a time.\n",
        "Line" : 280,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "# Cleanup the path\n",
        "Line" : 285,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "# Just add the file which doesn't exist right now\n",
        "Line" : 289,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# warn, then add the file which doesn't exist right now anyway\n",
        "Line" : 292,
        "CharPositionInLine" : 12
      },
      "32" : {
        "Text" : "# ===========================================================================\n\n# Replace some CMake functions to be able to track the targets\n\n# that will be in the generated Makefiles\n\n# ===========================================================================\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# PRINT_TARGET() - Print all the information about the target.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# These are generated by ADD_LIBRARY/EXECUTABLE_FULL()\n",
        "Line" : 344,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# get the flags if they haven't already\n",
        "Line" : 353,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# We do it this way since foreach() won't even be run once for an \"\" empty string\n",
        "Line" : 366,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "#<CONFIG>_OUTPUT_NAME deprecated\n\n#<CONFIG>_POSTFIX\n",
        "Line" : 374,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "#VS_GLOBAL_<variable>\n",
        "Line" : 474,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "#XCODE_ATTRIBUTE_<an-attribute>\n",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# We do it this way since foreach() won't even be run once for an \"\" empty string\n",
        "Line" : 497,
        "CharPositionInLine" : 12
      },
      "41" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# PRINT_ADD_SUBDIRECTORY(VERBOSE) - Print the ADD_SUBDIRECTORY() projects or their count to the console.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# PRINT_ADD_LIBRARY(VERBOSE) - Print the ADD_LIBRARY() projects or their count to the console.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# PRINT_ADD_EXECUTABLE(VERBOSE) - Print the ADD_EXECUTABLE() projects or their count to the console.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Replace the ADD_SUBDIRECTORY(source_dir) function to remember what\n\n# subdirectories were added so we can do things with them.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Get path from root CMake directory to where we are now\n",
        "Line" : 565,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# The message from ADD_SUBDIRECTORY() is very cryptic we need to show\n\n# people where the problem came from\n",
        "Line" : 572,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Replace the ADD_LIBRARY(name ...) function to remember what\n\n# library targets were added so we can do things with them.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Get the last part of the directory we're currently in\n",
        "Line" : 598,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Replace the ADD_EXECUTABLE(name ...) function to remember what\n\n# executable targets were added so we can do things with them.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Get the last part of the directory we're currently in\n",
        "Line" : 613,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Replace the ADD_TEST(name ...) function to remember what\n\n# test targets were added so we can do things with them.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# ADD_TEST's name can be either the first or second parameter\n",
        "Line" : 631,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Get the last part of the directory we're currently in\n",
        "Line" : 638,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# ADD_GTEST(exe_target_name)\n\n# Add a function to create an ADD_TEST() that properly checks the output\n\n# of Google GTests. Use this function instead of ADD_TEST for running GTests in your exe.\n\n# Usage: ADD_GTEST( existing_exe_target_name [optional args to exe] )\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#ADD_TEST(${exe_target_name} ${CMAKE_CURRENT_BINARY_DIR}/${exe_target_name} ${ARGN})\n",
        "Line" : 654,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "#WORKING_DIRECTORY $<TARGET_FILE_DIR:${exe_target_name}>\n\n#COMMAND $<TARGET_FILE:${exe_target_name}> )\n",
        "Line" : 665,
        "CharPositionInLine" : 13
      },
      "57" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# ADD_CPPCHECK_TEST( name )\n\n# Add a function to call cppcheck to do a static analysis test on the project\n\n# source dir and its children dirs using the cppcheck program.\n\n# This is probably a Linux only test and the target will not be generated if\n\n# you don't have cppcheck installed.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Find the program cppcheck; ${cppcheck} will be either the exe path or \"cppcheck-NOTFOUND\"\n",
        "Line" : 681,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# we don't need to see this\n",
        "Line" : 683,
        "CharPositionInLine" : 35
      },
      "60" : {
        "Text" : "# Do not add the test if cppcheck is not found\n",
        "Line" : 692,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Get the last part of the directory we're currently in\n",
        "Line" : 694,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Make ADD_LIBRARY() a little easier to read by putting together the\n\n# necessary calls into one function.\n\n# Usage:\n\n#   ADD_LIBRARY_FULL( target_name [SHARED] [STATIC] [MODULE] [CUDA] [EXCLUDE_FROM_ALL] [ALLOW_MISSING_FILES]\n\n#       HEADERS                                    # Can use wildcards like \"*.h\" or \"\" for no files\n\n#           \"include/foo/*.h\" \"include/foo/*.hpp\"  # or specify the file names exactly.\n\n#       SOURCES                                    # You must specify at least one valid source file.\n\n#           \"src/a.cpp\" \"src/b.cpp\"                #\n\n#      [PRECOMPILED_INCLUDE] foo/precomp.h         # The path to precomp header as used exactly in #include \"foo/precomp.h\"\n\n#      [PRECOMPILED_HEADER]  include/foo/precomp.h # Path to the precomp header file.\n\n#      [PRECOMPILED_SOURCE]  src/precomp.cpp       # Path to the precomp cpp file that only includes the header\n\n#      [PRECOMPILED_SOURCES] src/a.cpp             # Full path to cpp files that include the precomp header.\n\n#      [PRECOMPILED_FORCED]                        # Force including the PRECOMPILED_INCLUDE by the compiler.\n\n#       LINK_LIBRARIES                             # Replaces TARGET_LINK_LIBRARIES(target_name lib1 lib2 ...)\n\n#           gtest ${Boost_LIBRARIES}\n\n#       PROPERTIES FOLDER \"Foo/Bar\"                # replaces SET_TARGET_PROPERTIES(target_name PROPERTIES ...)\n\n#       PROPERTIES LINKER_LANGUAGE CXX ...         # use PROPERTIES XXX YYY as many times as you like\n\n#       INSTALL \"${ADD_LIBRARY_FULL_INSTALL_DEFAULT}\" # INSTALL(TARGETS ${target_name} ${ADD_LIBRARY_FULL_INSTALL_DEFAULT})\n\n#                                                  # is called with the parameters expanded into a list.\n\n#                                                  # Create list as shown below or use the default flags as shown here.\n\n#   )\n\n#\n\n# For the 'INSTALL' command create a variable like this to use:\n\n#   SET( MY_INSTALL_FLAG_LIST\n\n#        EXPORT \\${target_name}_exports\n\n#        RUNTIME DESTINATION bin\n\n#        LIBRARY DESTINATION lib\n\n#        ARCHIVE DESTINATION lib )\n\n#\n\n# Internal cached variables will be created:\n\n#   ${target_name}_HEADER_FILES - List of HEADERS given above\n\n#   ${target_name}_SOURCE_FILES - List of SOURCES given above\n\n#   ${target_name}_OBJECT_FILES - List of object files CMake will create compiling SOURCES\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# These are flags for a default \"normal\" install for a ADD_LIBRARY_FULL() target.\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# ADD_LIBRARY's SHARED directive\n\n# ADD_LIBRARY's STATIC directive\n\n# ADD_LIBRARY's MODULE directive\n\n# Use CUDA_ADD_LIBRARY() not ADD_LIBRARY()\n\n# ADD_LIBRARY's EXCLUDE_FROM_ALL directive\n\n# Don't warn on missing HEADERS or SOURCES files on disk\n\n# ADD_LIBRARY's list of header files\n\n# ADD_LIBRARY's list of source files\n\n# Precompiled header #include -->\"path/precomp.h\"<== this path\n\n# Precompiled header file with path\n\n# Precompiled source file that only includes the precomp header\n\n# This file must be part of SOURCES too.\n\n# list of source file that use the precomp header, optional.\n\n# Defaults to SOURCES, use this if not ALL SOURCES have\n\n# #include \"PRECOMPILED_INCLUDE\" since MSVC will give an error for missing include.\n\n# Force including the PRECOMPILED_INCLUDE\n\n# TARGET_LINK_LIBRARIES's list of libraries to link to\n\n# SET_TARGET_PROPERTIES's list of PROPERTIES\n\n# INSTALL's list of commands\n",
        "Line" : 757,
        "CharPositionInLine" : 35
      },
      "65" : {
        "Text" : "# Current directive we're processing\n",
        "Line" : 778,
        "CharPositionInLine" : 35
      },
      "66" : {
        "Text" : "# TRUE if we didn't find a keyword\n",
        "Line" : 785,
        "CharPositionInLine" : 29
      },
      "67" : {
        "Text" : "# hopefully a file\n",
        "Line" : 820,
        "CharPositionInLine" : 32
      },
      "68" : {
        "Text" : "# Make sure we have at least one file since the error message from ADD_LIBRARY is cryptic\n",
        "Line" : 863,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# find .gch file before .h file\n",
        "Line" : 872,
        "CharPositionInLine" : 78
      },
      "70" : {
        "Text" : "# Set the install includes to use same dir structure as the source directories\n\n#STRING(REPLACE \"${CMAKE_HOME_DIRECTORY}/\" \"\" PROJ_DIR_TEMP ${CMAKE_CURRENT_SOURCE_DIR})\n\n#INSTALL(FILES\n\n#    ${HEADER_FILES} DESTINATION \"include/${PROJ_DIR_TEMP}\")\n",
        "Line" : 903,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# INSTALL(... EXPORT ...) appears to be a little overealous.\n\n# If you have targetA and targetB depends on A you have to do this.\n\n# In targetA directory :\n\n#   INSTALL(TARGETS targetA EXPORT targetA_exports ...)\n\n#   INSTALL(TARGETS targetA EXPORT targetB_exports ...)\n\n#   INSTALL(EXPORT targetA_exports DESTINATION ...)\n\n# In targetB directory :\n\n#   INSTALL(TARGETS targetA EXPORT targetB_exports ...)\n\n#   INSTALL(EXPORT targetA_exports DESTINATION ...)\n\n# So this cannot be made to work when you chain together CMakeLists.txt\n\n# for targetA and targetB when targetA may not know about B.\n\n# Ideally, targetA and targetB simply install their own export files\n\n# so that targetC can import them both. There is no reason that\n\n# targetB absolutely must export targetA, but I don't know how to do that.\n",
        "Line" : 908,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "#EXPORT  \"${target_name}_export\"\n\n#RUNTIME DESTINATION bin\n\n#LIBRARY DESTINATION lib\n\n#ARCHIVE DESTINATION lib)\n",
        "Line" : 926,
        "CharPositionInLine" : 16
      },
      "73" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Make ADD_EXECUTABLE() a little easier to read by putting together the\n\n# necessary calls into one function.\n\n# Usage:\n\n#   ADD_EXECUTABLE_FULL( target_name [WIN32] [MACOSX_BUNDLE] [CUDA] [EXCLUDE_FROM_ALL] [ALLOW_MISSING_FILES]\n\n#       HEADERS                                    # Can use wildcards like \"*.h\" or \"\" for no files\n\n#           \"include/foo/*.h\" \"include/foo/*.hpp\"  # or specify the file names exactly.\n\n#       SOURCES                                    # You must specify at least one valid source file.\n\n#           \"src/a.cpp\" \"src/b.cpp\"                #\n\n#      [PRECOMPILED_INCLUDE] foo/precomp.h         # The path to precomp header as used exactly in #include \"foo/precomp.h\"\n\n#      [PRECOMPILED_HEADER]  include/foo/precomp.h # Path to the precomp header file.\n\n#      [PRECOMPILED_SOURCE]  src/precomp.cpp       # Path to the precomp cpp file that only includes the header\n\n#      [PRECOMPILED_SOURCES] src/a.cpp             # Full path to cpp files that include the precomp header.\n\n#      [PRECOMPILED_FORCED]                        # Force including the PRECOMPILED_INCLUDE by the compiler.\n\n#       LINK_LIBRARIES                             # Replaces TARGET_LINK_LIBRARIES(target_name lib1 lib2 ...)\n\n#           gtest ${Boost_LIBRARIES}\n\n#       PROPERTIES FOLDER \"Foo/Bar\"                # replaces SET_TARGET_PROPERTIES(target_name PROPERTIES ...)\n\n#       PROPERTIES LINKER_LANGUAGE CXX ...         # use PROPERTIES XXX YYY as many times as you like\n\n#       INSTALL \"${ADD_EXECUTABLE_FULL_INSTALL_DEFAULT}\" # INSTALL(TARGETS ${target_name} ${ADD_EXECUTABLE_FULL_INSTALL_DEFAULT})\n\n#                                                  # is called with the parameters expanded into a list.\n\n#                                                  # Create list as shown below or use the default flags as shown here.\n\n#   )\n\n#\n\n# For the 'INSTALL' command create a variable like this to use: (see also ADD_EXECUTABLE_FULL_INSTALL_DEFAULT)\n\n#   SET( MY_INSTALL_FLAG_LIST\n\n#        DESTINATION bin\n\n#        LIBRARY DESTINATION lib\n\n#        ARCHIVE DESTINATION lib\n\n#        BUNDLE  DESTINATION bin)\n\n#\n\n# Internal cached variables will be created:\n\n#   ${target_name}_HEADER_FILES - List of HEADERS given above\n\n#   ${target_name}_SOURCE_FILES - List of SOURCES given above\n\n#   ${target_name}_OBJECT_FILES - List of object files CMake will create compiling SOURCES\n\n#\n\n# INSTALL() put the exe into CMAKE_INSTALL_PREFIX/bin.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# These are flags for a default \"normal\" install for a ADD_EXECUTABLE_FULL() target.\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# ADD_EXECUTABLE's WIN32 directive\n\n# ADD_EXECUTABLE's MACOSX_BUNDLE directive\n\n# Use CUDA_ADD_EXECUTABLE() not ADD_EXECUTABLE()\n\n# ADD_EXECUTABLE's EXCLUDE_FROM_ALL directive\n\n# was ALLOW_MISSING_FILES directive used\n\n# ADD_LIBRARY's list of header files\n\n# ADD_LIBRARY's list of source files\n\n# Precompiled header #include -->\"path/precomp.h\"<== this path\n\n# Precompiled header file with path\n\n# Precompiled source file that only includes the precomp header\n\n# This file must be part of SOURCES too.\n\n# list of source file that use the precomp header, optional.\n\n# Defaults to SOURCES, use this if not ALL SOURCES have\n\n# #include \"PRECOMPILED_INCLUDE\" since MSVC will give an error for missing include.\n\n# Force including the PRECOMPILED_INCLUDE\n\n# TARGET_LINK_LIBRARIES's list of libraries to link to\n\n# SET_TARGET_PROPERTIES's list of PROPERTIES\n\n# INSTALL's list of commands\n",
        "Line" : 982,
        "CharPositionInLine" : 35
      },
      "76" : {
        "Text" : "# current directive we're processing\n",
        "Line" : 1001,
        "CharPositionInLine" : 35
      },
      "77" : {
        "Text" : "# TRUE if we didn't find a keyword\n",
        "Line" : 1008,
        "CharPositionInLine" : 29
      },
      "78" : {
        "Text" : "# hopefully a file\n",
        "Line" : 1041,
        "CharPositionInLine" : 32
      },
      "79" : {
        "Text" : "# Make sure we have at least one file since the error message from ADD_EXECUTABLE is cryptic\n",
        "Line" : 1084,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# find .gch file before .h file\n",
        "Line" : 1093,
        "CharPositionInLine" : 78
      },
      "81" : {
        "Text" : "#DESTINATION bin\n\n#LIBRARY DESTINATION lib\n\n#ARCHIVE DESTINATION lib\n\n#BUNDLE  DESTINATION bin)\n",
        "Line" : 1125,
        "CharPositionInLine" : 16
      },
      "82" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# This function can be used to add include search paths to library targets.\n\n#\n\n# Usage:\n\n#  ADD_TARGET_INCLUDE_PATHS(target_name path/to/a.h path/to/b.h)\n\n#\n\n# Parameters:\n\n#  target_name   - The name of the target to modify,\n\n#                  i.e. the one you created with ADD_LIBRARY(target_name...)\n\n#  INCLUDE_PATHS - Relative paths from the CMakeLists.txt file caller to add\n\n#                  to the compiler's command line to other proto files (its /I or -I option)\n\n# Example:\n\n#  ADD_TARGET_INCLUDE_PATHS(target_name \"../Project2/include/\" \"../Project3/include/\")\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1134,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# APPEND_TARGET_PROPERTIES() is the same as SET_TARGET_PROPERTIES() except that\n\n# instead of overwriting the property value it appends to the current one.\n\n# append_target_properties(target1 target2 ...\n\n#                          PROPERTIES prop1 value1 prop2 value2 ...)\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1169,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# list of targets to append props to\n",
        "Line" : 1177,
        "CharPositionInLine" : 40
      },
      "85" : {
        "Text" : "# last prop name\n",
        "Line" : 1179,
        "CharPositionInLine" : 40
      },
      "86" : {
        "Text" : "# We get the old prop value, append the new and apply it to each target\n",
        "Line" : 1183,
        "CharPositionInLine" : 12
      },
      "87" : {
        "Text" : "# If no old value (\"old_value-NOTFOUND\") then set the variable to empty string\n",
        "Line" : 1190,
        "CharPositionInLine" : 20
      },
      "88" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# APPEND_SOURCE_FILES_PROPERTIES() is the same as SET_SOURCE_FILES_PROPERTIES()\n\n# except that instead of overwriting the property value it appends to the current one.\n\n# set_source_files_properties([file1 [file2 [...]]]\n\n#                              PROPERTIES prop1 value1\n\n#                              [prop2 value2 [...]])\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1215,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# list of files to append props to\n",
        "Line" : 1224,
        "CharPositionInLine" : 40
      },
      "90" : {
        "Text" : "# name of last prop\n",
        "Line" : 1226,
        "CharPositionInLine" : 40
      },
      "91" : {
        "Text" : "# We get the old prop value, append the new and apply it to each target\n",
        "Line" : 1230,
        "CharPositionInLine" : 12
      },
      "92" : {
        "Text" : "# If no old value, it equals \"NOTFOUND\"\n",
        "Line" : 1237,
        "CharPositionInLine" : 20
      },
      "93" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# GET_OBJECT_FILES( target_name object_file_list source_files )\n\n#\n\n# Append to the object_file_list the object file(s) which would be generated by an\n\n# ADD_EXECUTABLE() or ADD_LIBRARY() call.\n\n# Usage :\n\n#   GET_OBJECT_FILES(blah objlist \"a.cpp;b.cpp\") ...\n\n#   objlist = \"/path/to/.../blah.dir/.../a.obj; .../b.obj or *.o as appropriate.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1262,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Backwards compat to CMake <= 2.8.4\n",
        "Line" : 1285,
        "CharPositionInLine" : 8
      },
      "95" : {
        "Text" : "#GET_FILENAME_COMPONENT(fname ${f} NAME)\n",
        "Line" : 1292,
        "CharPositionInLine" : 12
      },
      "96" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# DO_GET_TARGET_FLAGS( target_name )\n\n#\n\n# Create these variables as internal cache variables.\n\n#   ${target_name}_CXX_FLAGS\n\n#   ${target_name}_CXX_FLAGS_Release[ or _Debug, _RelWithDebInfo, _MinSizeRel]\n\n#\n\n# This function is automatically called by ADD_EXECUTABLE/LIBRARY_FULL()\n\n# and you do not have to call it afterwards, unless you change the target.\n\n#\n\n# Usage :\n\n#   GET_TARGET_INCLUDES(mytarget) ...\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1306,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Get DLL export define, CMake automatically defines ${target_name}_EXPORTS\n\n# unless it has been changed.\n",
        "Line" : 1331,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# append ; for use later\n",
        "Line" : 1348,
        "CharPositionInLine" : 45
      },
      "99" : {
        "Text" : "# clear it for use later\n",
        "Line" : 1350,
        "CharPositionInLine" : 26
      },
      "100" : {
        "Text" : "#while (EXISTS ${list_dir})\n",
        "Line" : 1373,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "#get_directory_property(list_dir DIRECTORY ${list_dir} PARENT_DIRECTORY)\n",
        "Line" : 1397,
        "CharPositionInLine" : 8
      },
      "102" : {
        "Text" : "#endwhile()\n",
        "Line" : 1398,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# TARGET_PRECOMPILED_HEADER() function to add a precomp header to a target.\n\n#\n\n# Note that MSVC will error for SOURCES that do not have the line\n\n#   #include \"PCH_INCLUDE\" (where PCH_INCLUDE is identical to what's passed to this function)\n\n#   See FORCE_INCLUDE flag for a workaround that uses the compiler's\n\n#     directive to #include a file before compilation.\n\n#     This also works well for GCC and allows you to use precomp headers w/o\n\n#     modifying any code at all.\n\n#\n\n# FORCE_INCLUDE flag may be used to tell the compiler to include the precomp header\n\n#               in cases where it is not explicitly included in the code.\n\n#               This can have great benefits in GCC and may be required in MSVC.\n\n#\n\n# Usage :\n\n#  TARGET_PRECOMPILED_HEADER( myproj [FORCE_INCLUDE]\n\n#      PCH_INCLUDE myproj/precomp.h         # The path to precomp header as used exactly in #include \"foo/precomp.h\"\n\n#      PCH_HEADER  include/myproj/precomp.h # Path to the precomp header file on disk.\n\n#      PCH_SOURCE  src/precomp.cpp          # Path to the precomp cpp file that only includes the header\n\n#      SOURCES src/a.cpp src/b.cpp )        # Full path to cpp files that include the precomp header.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1415,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Allow people to en/disable precomp headers to test if it actually works or not.\n\n# GCC is a little tricky to get right since you have to compile it exactly the same flags\n\n# and CMake bizarrely hides flags passed to add_definitions() not starting with -D.\n\n# There will be no sign that the precomp header is not used other than a longer compilation time.\n",
        "Line" : 1439,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# How to measure compilation times:\n\n#   GCC use $time make;\n\n#   MSVC 2008 Tools->Options->Projects and Solutions->VC++ Project Settings->Build Timing [True]\n",
        "Line" : 1444,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# ccache is much faster when not using our own precomp header so disable them\n",
        "Line" : 1453,
        "CharPositionInLine" : 16
      },
      "107" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 1464,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# Tell the compiler to #include this file\n\n# The #include \"PCH_INCLUDE\"\n\n# Path to the PCH_INCLUDE\n\n# Source file that include PCH_INCLUDE\n\n# All source files that include PCH_INCLUDE\n",
        "Line" : 1466,
        "CharPositionInLine" : 29
      },
      "109" : {
        "Text" : "# current directive we're processing\n",
        "Line" : 1472,
        "CharPositionInLine" : 29
      },
      "110" : {
        "Text" : "# TRUE if we didn't find a keyword\n",
        "Line" : 1476,
        "CharPositionInLine" : 29
      },
      "111" : {
        "Text" : "# hopefully a file\n",
        "Line" : 1489,
        "CharPositionInLine" : 32
      },
      "112" : {
        "Text" : "#set(_PCH_HEADER ${arg})\n",
        "Line" : 1496,
        "CharPositionInLine" : 16
      },
      "113" : {
        "Text" : "#set(_PCH_SOURCE ${arg})\n",
        "Line" : 1499,
        "CharPositionInLine" : 16
      },
      "114" : {
        "Text" : "# For precompiled headers in XCode we can set this property, ignored for other compilers.\n",
        "Line" : 1511,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "#set(PCH_BINARY \"${CMAKE_CURRENT_BINARY_DIR}/$(IntDir)/${PCH_BASENAME}.pch\")\n",
        "Line" : 1517,
        "CharPositionInLine" : 8
      },
      "116" : {
        "Text" : "# need to delete this file for clean too, otherwise we can get errors\n\n# about mismatched pch and pdb files.\n",
        "Line" : 1520,
        "CharPositionInLine" : 8
      },
      "117" : {
        "Text" : "# We will try to create the pch in an include tree in the binary dir\n",
        "Line" : 1553,
        "CharPositionInLine" : 8
      },
      "118" : {
        "Text" : "# Rename the header and put it into the cmake build dir and force include it.\n\n# The include guard will skip the original header\n",
        "Line" : 1557,
        "CharPositionInLine" : 12
      },
      "119" : {
        "Text" : "#include_directories(BEFORE \"${CMAKE_CURRENT_BINARY_DIR}/include\") # find .gch file before .h file\n",
        "Line" : 1568,
        "CharPositionInLine" : 12
      },
      "120" : {
        "Text" : "# need to delete this file for clean too, otherwise we may be mismatched.\n",
        "Line" : 1578,
        "CharPositionInLine" : 8
      },
      "121" : {
        "Text" : "# get the cxx flags if they haven't already\n",
        "Line" : 1581,
        "CharPositionInLine" : 8
      },
      "122" : {
        "Text" : "# combine all the appropriate flags and remove duplicates\n",
        "Line" : 1586,
        "CharPositionInLine" : 8
      },
      "123" : {
        "Text" : "# can't use 'del' here for some reason\n",
        "Line" : 1594,
        "CharPositionInLine" : 84
      },
      "124" : {
        "Text" : "# Check for changed files included by the precomp header and warn them.\n",
        "Line" : 1609,
        "CharPositionInLine" : 8
      },
      "125" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# ADD_DOXYGEN(target_name doxyfile_in doxyfile_out doxygen_working_dir)\n\n# A function to make adding a doxygen target easy, the doxyfile_in will have\n\n# @vars@ replaced by configure and copied to doxyfile_out and a target_name will\n\n# made to call \"doxygen ${doxyfile_out}\" from the doxygen_working_dir.\n\n# Usage : ADD_DOXYGEN( doc\n\n#                      ${CMAKE_SOURCE_DIR}/build/Doxyfile.in\n\n#                      ${CMAKE_BINARY_DIR}/Doxyfile.cfg\n\n#                      ${CMAKE_BINARY_DIR} )\n\n#\n\n# These are some doxygen.cfg settings you might want to set to @VAR_NAME@\n\n# then set their variables in CMake so that when configured the doxygen file\n\n# will be setup correctly.\n\n#\n\n# set( DOXYGEN_PROJECT_NAME      \"MyProgram\" )\n\n# set( DOXYGEN_PROJECT_NUMBER    \"1.2.3\" )\n\n# set( DOXYGEN_OUTPUT_DIRECTORY  \"${CMAKE_BINARY_DIR}/doc\" )\n\n# set( DOXYGEN_STRIP_FROM_PATH   \"${CMAKE_SOURCE_DIR}/include\" )\n\n# set( DOXYGEN_INPUT             \"${CMAKE_SOURCE_DIR}/include/...\" )\n\n# set( DOXYGEN_FILE_PATTERNS     \"*.h *.hpp\" )\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1614,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Dump all variables in CMake that we can possibly find\n\n# It can be very confusing to users when something goes wrong and maybe this will help.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1657,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "#message( STATUS \"@ VARIABLES: ${_var} = \\\"${${_var}}\\\"\" )\n",
        "Line" : 1666,
        "CharPositionInLine" : 8
      },
      "128" : {
        "Text" : "#message( STATUS \"@ CACHE_VARIABLES: ${_var} = \\\"${${_var}}\\\"\" )\n",
        "Line" : 1675,
        "CharPositionInLine" : 8
      },
      "129" : {
        "Text" : "# merge the VARIABLES and CACHE_VARIABLES since they're mostly the same\n",
        "Line" : 1683,
        "CharPositionInLine" : 4
      },
      "130" : {
        "Text" : "# Unset the variables for the PRINT_NEW_CMAKE_VARIABLES() macro\n",
        "Line" : 1725,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# This simply does a diff between the last call to PRINT_ALL_CMAKE_VARIABLES\n\n# and this call, saving the newly founds vars for the next call to this.\n",
        "Line" : 1736,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "# merge the VARIABLES and CACHE_VARIABLES since they're mostly the same\n",
        "Line" : 1751,
        "CharPositionInLine" : 4
      },
      "133" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Allow users to see what CMake thinks of the system in gory detail.\n\n# Most people have no idea how CMake works, this will at least give them\n\n# a slight chance at figuring out why something doesn't work.\n",
        "Line" : 1777,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 134
    },
    "src/plugins/contrib/wxContribItems/wxthings/build/CMakeProject.cmake" : {
      "ObjectId" : "725d1d803c1a0f697694ac3870f547ee23e7907e",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# CMakeProject.cmake - Initialize CMake for a project.\n\n#\n\n# This file should be suitable for use with a variety of projects\n\n# without modification.\n\n#\n\n# Usage: In your CMakeLists.txt write code along these lines:\n\n#\n\n# project( MyProject )\n\n# include( CMakeProject.cmake )\n\n#\n\n# General Notes:\n\n#\n\n# Prepend messages with a '*', e.g. message(STATUS \"* blah blah) so we know\n\n#   what our messages are versus messages from CMake.\n\n# We try to not to modify already set values.\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ===========================================================================\n\n# This file may be called multiple times during configuration.\n\n# Using properties does the trick of storing a variable per configuration run,\n\n# accessible at all scopes that is not cached between runs.\n\n# ===========================================================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Backwards compat to CMake < 2.8.3\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Load the helper file with additional functions\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ===========================================================================\n\n# Display to the user what the options are that may be passed to CMake\n\n# to control the build before we do anything.\n\n# ===========================================================================\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If the user runs \"$cmake -DHELP=TRUE\" then exit.\n\n# Call this function after all help would be given\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# vars specified on the cmd line are cached\n",
        "Line" : 75,
        "CharPositionInLine" : 26
      },
      "8" : {
        "Text" : "# ===========================================================================\n\n# Create a script/batch file to easily open cmake-gui in the proper dir\n\n# ===========================================================================\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We want to open it in the gui, not in the curses ccmake which is broken in the gnome terminal (RHEL6)\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# ===========================================================================\n\n# General global settings for CMake\n\n# ===========================================================================\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Enable use of folders in MSVC Gui to separate projects into logical groups\n\n# It's so much nicer, you might as well always have it enabled.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Don't insist that everything needs to be built before being able to \"install\"\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ===========================================================================\n\n# Build Settings\n\n# ===========================================================================\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Show the \"install\" target dir in the CMake GUI so people can change it.\n\n# There are differences between CMake versions showing (or not) CMAKE_INSTALL_PREFIX to the user.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Default build is Debug, change on the command line with\n\n# $cmake -DCMAKE_BUILD_TYPE=Release /path/to/CMakeLists.txt\n\n# Possible options are \"Debug, Release, RelWithDebInfo and MinSizeRel\"\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Sanity check - we don't handle any other build types\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is used only for the Makefile generator.\n\n# In MSVC you can choose the build type in the IDE.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Useful, since I cannot find a case-insensitive string comparison function\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We can use this later for the default MSVC library output directories, Debug and Release\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# All other build types are variants of release\n",
        "Line" : 187,
        "CharPositionInLine" : 7
      },
      "21" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Set the default for CMake's add_library(target [STATIC/SHARED]) directive\n\n# if [STATIC/SHARED] is not explicitly stated.\n\n#\n\n# We will use static libs in MSW and shared libs in Linux.\n\n# If we use shared libs (DLLs) in MSW we would need to copy/move them so that\n\n# the executables can find them. It's easier (for now) to build static libs.\n\n#\n\n# To override use: $cmake -DBUILD_SHARED_LIBS=[TRUE or FALSE] /path/to/CMakeLists.txt/\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set if we are building DLLs, MSWindows and shared libraries\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# CMake has problems with \"if (\"ON\" AND \"TRUE\")\"\n",
        "Line" : 217,
        "CharPositionInLine" : 23
      },
      "24" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Specify where to put the built files. The default will put all the binaries,\n\n# libs, and DLL's from different targets into the same dir.\n\n# Normally each build runtime (exe,dll) and library/archive (libs) are put in\n\n# the build/project/dir_with_CMakeLists.txt directory, so they're\n\n# spread all over and it's hard to find/run them unless you already know\n\n# about them.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# + /Debug/Release/...\n\n# + /Debug/Release/...\n\n# + /Debug/Release/...\n",
        "Line" : 244,
        "CharPositionInLine" : 74
      },
      "26" : {
        "Text" : "# MSW\n",
        "Line" : 247,
        "CharPositionInLine" : 7
      },
      "27" : {
        "Text" : "# Put into Debug/Release/... subdirs to mimic MSVC appending dirs.\n\n# We do this so that relative paths from exe to data files are the same on both platforms.\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# To simplify logic - if these were blank then unset the CMAKE_XXX vars to get default behavior\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# RPath options to allow execution of Linux programs in the build tree to\n\n# find their shared libraries.\n\n# When installing, all executables and shared libraries will be relinked to find all libraries they need.\n\n# See: http://www.vtk.org/Wiki/CMake_RPATH_handling\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Set the RPATH to the build directory not the install directory. (FALSE below)\n\n# The install target will relink with the install directory as the RPATH so it will work there too.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Set the RPATH to be used for the install target\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Turn on verbose Makefiles so Eclipse can discover -I include paths for\n\n# external libs instead of defaulting to /usr/include.\n\n# Also works for MSVC so you don't have to look at the BuildLog file.\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Compiler specific settings\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# NOTE : Don't use add_definitions() for CMAKE_XXX_FLAGS since MSVC2010 and\n\n#        MingW's windres.exe error on basic compiler flags.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# if (CMAKE_BUILD_TOOL MATCHES \"(msdev|devenv|nmake)\")\n",
        "Line" : 330,
        "CharPositionInLine" : 10
      },
      "38" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Set the compiler warning level\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Use multiprocessor compliation if MSVC > ver 6\n\n# In some cases it is nice to turn it off since it can be hard tell where some\n\n# #pragma warnings come from if multiple files are compiled at once.\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# elseif (CMAKE_BUILD_TOOL MATCHES \"(gmake)\")\n",
        "Line" : 362,
        "CharPositionInLine" : 34
      },
      "41" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Set compiler warning level\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# -Wextra gives warnings about unused parameters and others\n",
        "Line" : 368,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Colorize the output of the Makefiles\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 383,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Print out the basic settings\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "src/plugins/contrib/wxContribItems/wxthings/build/CMakewxAppLib.cmake" : {
      "ObjectId" : "c2c6755fb96533aee43a3c2859fe2123e884dd9a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# CMakewxWidgets.txt - Initialize CMake for wxWidgets projects\n\n#\n\n# This file should be suitable for use with a variety of wxWidgets projects\n\n# without modification.\n\n#\n\n# Usage: In your CMakeLists.txt write code along these lines:\n\n#\n\n# project( MyProject )\n\n# include( CMakewxWidgets.txt )\n\n# set(wxWidgets_COMPONENTS aui stc html adv core base)\n\n# FIND_WXWIDGETS(${wxWidgets_COMPONENTS})\n\n# add_library(myprojectlib file1.h file1.cpp)\n\n# target_link_libraries(myprojectlib ${wxWidgets_LIBRARIES})\n\n# add_executable(myprojectapp WIN32 file.h file.cpp)\n\n# target_link_libraries(myprojectapp myprojectlib ${wxWidgets_LIBRARIES})\n\n#\n\n# General Notes:\n\n#\n\n# Prepend messages with a '*', e.g. message(STATUS \"* blah blah) so we know\n\n#   what our messages are versus messages from CMake.\n\n# We try to not to modify already set values.\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ===========================================================================\n\n# This file may be called multiple times during configuration.\n\n# Using properties does the trick of storing a variable per configuration run,\n\n# accessible at all scopes that is not cached between runs.\n\n# ===========================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Backwards compat to CMake < 2.8.3\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Load the helper file with additional functions\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Set common compiler options for wxWidgets\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# gcc 4.8.1 enables this warning and wx28 gives thousands of warnings\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Fix for Xcode 6.2: fatal error: 'tr1/type_traits' file not found #include <tr1/type_traits>\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# ===========================================================================\n\n# Display to the user what the options are that may be passed to CMake\n\n# to control the build before we do anything.\n\n# ===========================================================================\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Look for wxWidgets.\n\n#\n\n# In MSW set\n\n#   wxWidgets_ROOT_DIR      : Root dir of the wxWidgets build\n\n#   wxWidgets_LIB_DIR       : Path to the wxWidgets libs, e.g. ${wxWidgets_ROOT_DIR}/lib/vc_lib\n\n#   wxWidgets_CONFIGURATION : msw, mswu (no need to specify debug for MSVC since you can select it in the GUI)\n\n# In Unix set\n\n#   wxWidgets_CONFIG_EXECUTABLE : /path/to/wx-config\n\n#\n\n# Usage: Note how base is last!\n\n#   set(wxWidgets_COMPONENTS aui stc html adv core base)\n\n#   FIND_WXWIDGETS(wxWidgets_COMPONENTS)\n\n#\n\n# Sets up the CMake Gui to make it a little more convenient.\n\n# Adjusts stc and scintilla lib as appropriate for wx version < 2.9 or > 2.9\n\n#\n\n# When wxWidgets is successfully found these variables will be set:\n\n#\n\n# wxWidgets_FOUND      = TRUE on success\n\n# wxWidgets_ROOT_DIR   = /path/to/wxWidgets, in Unix it is equal to wx-config --prefix\n\n# wxWidgets_COMPONENTS = what was input, but with stc/scintilla adjusted for 2.8/2.9\n\n#\n\n# wxWidgets_VERSION        = 2.9.3 (for example)\n\n# wxWidgets_MAJOR_VERSION  = 2\n\n# wxWidgets_MINOR_VERSION  = 9\n\n# wxWidgets_RELEASE_NUMBER = 3\n\n#\n\n# WX_HASLIB_[wx_comp]      = TRUE/FALSE where each wx_comp is from the\n\n#                                       wxWidgets_ALL_COMPONENTS list.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The component list is in wxWidgets/build/bakefiles/wxwin.py\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# contrib libs in 28 gizmos, ogl, plot, ...\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We only want this function called once per CMake configure, but we may link\n\n# CMakeLists.txt from different projects that call this. Only run it the first call.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# call this function without ${} around wxWidgets_COMPONENTS_\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# The wxWidgets_CONFIGURATION should never be mswd since then\n\n# wxWidgets_USE_REL_AND_DBG can't be set since mswdd will never exist.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#set(wxWidgets_CONFIGURATION ${CMAKE_MATCH_1} CACHE STRING \"Set wxWidgets configuration (${WX_CONFIGURATION_LIST})\" FORCE)\n",
        "Line" : 175,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Nobody probably needs to see this...\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Get the version of wxWidgets, we'll need it before finding wxWidgets to get stc lib right.\n\n# Eventually they will have found the wxWidgets dir and this will work.\n\n# -----------------------------------------------------------------------\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Set the variable ${wxWidgets_MONOLITHIC}\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# wxWidgets has stc lib in < 2.9 and stc + scintilla lib in >= 2.9\n\n# Let people specify either stc and/or scintilla\n\n# -----------------------------------------------------------------------\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Remove these >= 2.9 libs, they should if #ifdefed it in the C++ code.\n\n# We allow them to specify them as link libs, but remove them for 2.8.\n",
        "Line" : 209,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# In 2.8 stc was in not in the mono lib, but was a separate contrib\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# scintilla is static in Unix and we don't have to link to it\n",
        "Line" : 243,
        "CharPositionInLine" : 26
      },
      "24" : {
        "Text" : "# Need scintilla lib in 2.9, just remove both and add them back in correct order\n",
        "Line" : 251,
        "CharPositionInLine" : 16
      },
      "25" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Use our own copy of FindwxWidgets.cmake that has some fixes\n",
        "Line" : 273,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Note: it is essential that 'core' is mentioned before 'base'.\n\n# Don't use REQUIRED since it only gives a useless error message on failure.\n",
        "Line" : 277,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Use the default CMake FindwxWidgets.cmake\n\n# Note: it is essential that 'core' is mentioned before 'base'.\n\n# Don't use REQUIRED since it only gives a useless error message on failure.\n",
        "Line" : 284,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Set the variables FindwxWidgets.cmake uses so they show up in cmake-gui\n\n# so people will actually have a chance of finding wxWidgets...\n",
        "Line" : 290,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# We show the user the version so we can fix stc and scintilla libs\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# These are used by FindwxWidgets.cmake\n",
        "Line" : 300,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# These may need to be set, but they're untested\n\n#set( wxWidgets_USE_DEBUG     ${wxWidgets_USE_DEBUG}     CACHE BOOL \"Link to a Debug build of wxWidgets\" FORCE)\n\n#set( wxWidgets_USE_UNICODE   ${wxWidgets_USE_UNICODE}   CACHE BOOL \"Link to a Unicode build of wxWidgets\" FORCE)\n\n#set( wxWidgets_USE_UNIVERSAL ${wxWidgets_USE_UNIVERSAL} CACHE BOOL \"Link to a Universal build of wxWidgets\" FORCE)\n\n#set( wxWidgets_USE_STATIC    ${wxWidgets_USE_STATIC}    CACHE BOOL \"Link to a Static build of wxWidgets\" FORCE)\n",
        "Line" : 307,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "#set(wxWidgets_CONFIG_OPTIONS --toolkit=base --prefix=/usr)\n",
        "Line" : 315,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Set the values from the wxWidgets_CONFIG_EXECUTABLE\n",
        "Line" : 326,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Do not exit here since they may want to do something else\n",
        "Line" : 335,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# These generators #include wxWidgets/lib/lib_XXX/wx/include/wx/setup.h\n\n# which uses #ifndef wxUSE_UNICODE to set it to 0 in 2.8 and 1 in 2.9.\n\n# If the user did not edit the original include/wx/msw/setup0.h the value\n\n# may be wrong so we force it to be right.\n",
        "Line" : 339,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Fix WXUSINGDLL being defined for BUILD_SHARED_LIBS, even in Linux...\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# awkwardly remove leading or trailing ; (compat with old cmake versions)\n",
        "Line" : 362,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Print out what we've found so far\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# This is from FindwxWidgets.cmake and is \"typically an empty string\" in MSW.\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Always verify the libs, for success or failure in finding wxWidgets.\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Find the version of wxWidgets and set these variables:\n\n# wxWidgets_VERSION        : 2.8.12 or 2.9.3 for example\n\n# wxWidgets_MAJOR_VERSION  : 2\n\n# wxWidgets_MINOR_VERSION  : 8\n\n# wxWidgets_RELEASE_NUMBER : 12\n\n# wxWidgets_RELEASE        : e.g. 2.8 ir 2.9\n\n# wxWidgets_RELEASE_NODOT  : e.g. 28 or 29\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# For MSW use version.h\n",
        "Line" : 414,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# AND wxWidgets_MINOR_VERSION AND wxWidgets_RELEASE_NUMBER)\n",
        "Line" : 423,
        "CharPositionInLine" : 37
      },
      "46" : {
        "Text" : "# For Unix use wx-config script\n",
        "Line" : 427,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# remove spaces and linefeed\n",
        "Line" : 429,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# Match major.minor.revision\n",
        "Line" : 432,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# strip off '.' between numbers\n",
        "Line" : 436,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Note: We can't use (\"${wxWidgets_FIND_STYLE}\" STREQUAL \"win32\") before calling the find wxWidgets script\n",
        "Line" : 442,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Internal use function to parse the wxWidgets lib names and set the\n\n# wxWidgets_PORTNAME, wxWidgets_UNIVNAME, wxWidgets_UNICODEFLAG, wxWidgets_DEBUGFLAG\n\n# variables.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Test each port, use the lib name to get the port, unicode, and debug\n\n# wxmsw28[ud]_core.lib, wxmswuniv29[ud]_core.lib, wx_gtk2u_core-2.8.so\n\n# wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib\n",
        "Line" : 474,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# wxWidgets lib/dll build using MSVC (wxmsw29u_core.lib) or MinGW (libwxmsw29ud_core.a)\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "#set(wxWidgets_LIB_VERSION \"${CMAKE_MATCH_3}\" )\n",
        "Line" : 490,
        "CharPositionInLine" : 12
      },
      "55" : {
        "Text" : "# wxWidgets monolithic DLL build using nmake MSVC : lib/vc_amd64_dll/wxmsw29ud.lib and wxmsw294ud_vc_custom.dll\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "#set(wxWidgets_LIB_VERSION \"${CMAKE_MATCH_3}\" )\n",
        "Line" : 503,
        "CharPositionInLine" : 12
      },
      "57" : {
        "Text" : "# wxWidgets monolithic DLL build using mingw : lib/gcc_dll/libwxmsw29ud.a and libwxmsw294ud_gcc_custom.dll\n",
        "Line" : 509,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "#set(wxWidgets_LIB_VERSION \"${CMAKE_MATCH_3}\" )\n",
        "Line" : 516,
        "CharPositionInLine" : 12
      },
      "59" : {
        "Text" : "# wxWidgets GTK2 build using configure\n",
        "Line" : 522,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "#set(wxWidgets_LIB_VERSION \"${CMAKE_MATCH_5}\" )\n",
        "Line" : 531,
        "CharPositionInLine" : 12
      },
      "61" : {
        "Text" : "# wxWidgets OSX Cocoa build using configure\n",
        "Line" : 535,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# libwx_osx_cocoau_core-2.9.a\n",
        "Line" : 537,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "#set(wxWidgets_LIB_VERSION \"${CMAKE_MATCH_5}\" )\n",
        "Line" : 544,
        "CharPositionInLine" : 12
      },
      "64" : {
        "Text" : "# wxWidgets OSX Carbon build using configure\n",
        "Line" : 548,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# libwx_macud-2.8.dylib\n",
        "Line" : 550,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "#set(wxWidgets_LIB_VERSION \"${CMAKE_MATCH_5}\" )\n",
        "Line" : 557,
        "CharPositionInLine" : 12
      },
      "67" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Internal use function to verify that we found all of the desired\n\n# wxWidgets_COMPONENTS and give a useful message about which ones we didn't find.\n\n# Sets the variables WX_HASLIB_${wx_comp} where each wx_comp is from the\n\n# wxWidgets_ALL_COMPONENTS list.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Search through the list of components to see what we were able to find.\n\n# CMake's find_package for wxWidgets fails on missing components and for\n\n# some reason CMake's find function gives no indication as to why it failed\n\n# which makes it difficult, if not impossible, to ever 'find' wxWidgets.\n",
        "Line" : 586,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# In Linux using wx-config the WX_{base/core/etc} vars are not set.\n\n# Mark all libs as not found.\n",
        "Line" : 591,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# Set the WX_HASLIB_${wx_comp} variables to TRUE/FALSE for all components\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# strip off paths that may match the regex\n",
        "Line" : 609,
        "CharPositionInLine" : 12
      },
      "72" : {
        "Text" : "# Also check that \"wx\" is in the filename as a sanity check\n",
        "Line" : 614,
        "CharPositionInLine" : 16
      },
      "73" : {
        "Text" : "#message(\"found ${wx_comp}\")\n",
        "Line" : 625,
        "CharPositionInLine" : 12
      },
      "74" : {
        "Text" : "# Verify that all requested components were found\n",
        "Line" : 629,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# strip off paths that may match the regex\n",
        "Line" : 641,
        "CharPositionInLine" : 12
      },
      "76" : {
        "Text" : "# Also check that \"wx\" is in the filename as a sanity check\n",
        "Line" : 646,
        "CharPositionInLine" : 16
      },
      "77" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n# Set the output names for a library target to include what flavor of\n\n# wxWidgets was used to compile/link against to allow multiple flavors in the same dir.\n\n# The libs will be named like this: ${lib_prefix}-wx28mswud-${lib_postfix}\n\n# lib_prefix should be the name of your lib and lib_postfix the version.\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# wxWidgets names their libaries this way - note MSW and Unix are different\n\n# wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib\n\n# wxmsw28[ud]_core.lib, wx_gtk2[ud]_core-2.8.so\n",
        "Line" : 670,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# We could use ${wxWidgets_DEBUGFLAG}, but it's probably more important\n\n# to specify how this lib was built.\n",
        "Line" : 674,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 80
    },
    "src/plugins/contrib/wxContribItems/wxthings/samples/filebrws/Makefile" : {
      "ObjectId" : "e49f8cdfcb0b156efa9e64ff83933137a58bcd47",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Purpose : Makefile for wxthings filebrws - UNIX or cygwin using gmake (gcc)\n\n# Author : John Labenski\n\n# Copyright : John Labenski 2006\n\n# License : wxWidgets license\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# wxWidgets build settings\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Settings for the library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CXX flags and libs\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -pg in libs and defs for profiling\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-pg\n",
        "Line" : 60,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# -I$(WXDIR)/contrib/include -I$(WXSTEDIT_DIR)/include\n",
        "Line" : 61,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : "# -l$(WXSTC_LIB)\n",
        "Line" : 62,
        "CharPositionInLine" : 26
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Source files, objects to link\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# wxfilebrowser program using shared filebrws library\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# wxfilebrowser program using static filebrws library\n\n#$(PROGRAM): $(PROGRAM).o $(TARGET_LIB_STATIC)\n\n#\t$(CXX) $(LDFLAGS_EXE) -o $@ $(PROGRAM).o $(LDLIBS) $(APPEXTRALIBS) $(TARGET_LIB_STATIC)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# wxfilebrowser program using just object files and not the filebrws lib\n\n#$(PROGRAM): $(PROGRAM).o $(OBJECTS)\n\n#\t$(CXX) $(LDFLAGS_EXE) -o $@ $(PROGRAM).o $(OBJECTS) $(LDLIBS) $(APPEXTRALIBS)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/plugins/contrib/wxContribItems/wxthings/samples/things/Makefile" : {
      "ObjectId" : "ee766d4f70178bae7d17c098db1672503e8c7f84",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Purpose : Makefile for wxthings sample - UNIX or cygwin using gmake (gcc)\n\n# Author : John Labenski\n\n# Copyright : John Labenski 2006\n\n# License : wxWidgets license\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# wxWidgets build settings\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Settings for the library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CXX flags and libs\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -pg in libs and defs for profiling\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-pg\n",
        "Line" : 54,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Source files, objects to link\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# thingsdemo program using shared things library, requires wxstedit\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# thingsdemo program using static things library\n\n#$(PROGRAM): $(PROGRAM).o $(TARGET_LIB_STATIC)\n\n#\t$(CXX) $(LDFLAGS_EXE) -o $@ $(PROGRAM).o $(LDLIBS) $(APPEXTRALIBS) $(TARGET_LIB_STATIC)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# thingsdemo program using just object files and not the things lib\n\n#$(PROGRAM): $(PROGRAM).o $(OBJECTS)\n\n#\t$(CXX) $(LDFLAGS_EXE) -o $@ $(PROGRAM).o $(OBJECTS) $(LDLIBS) $(APPEXTRALIBS)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/plugins/contrib/wxContribItems/wxthings/src/Makefile" : {
      "ObjectId" : "539caaee0f2f7f7169dedfa0575dda57358cb83a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Purpose : Makefile for wxthings lib - UNIX or cygwin using gmake (gcc)\n\n# Author : John Labenski\n\n# Copyright : John Labenski 2006\n\n# License : wxWidgets license\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# wxWidgets build settings\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Settings for the library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find the GTK headers\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# in filebrws.cpp we need to resize comboboxes in toolbar\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# the wxstedit component is used for the wxFileBrowser class\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CXX flags and libs\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-fdump-class-hierarchy  this dumps out a file.cpp.class file\n\n# -pg in libs and defs for profiling\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-pg\n",
        "Line" : 78,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Programs to use\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Source files, objects to link\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/plugins/contrib/wxSmith/Makefile.am" : {
      "ObjectId" : "4cc94c512cf92e47f04b5535573f15ce93638cd5",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmith/plugin/Makefile.am" : {
      "ObjectId" : "b4529bbc0e3d1bc94d48bbe3d270432b6040f753",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmith/properties/Makefile.am" : {
      "ObjectId" : "e407411fa759340e2e8473590f60193fe0913c23",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmith/wxwidgets/Makefile.am" : {
      "ObjectId" : "3f0a20c1eb40cae89746ad91c1d2faace2d5f141",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmith/wxwidgets/defitems/Makefile.am" : {
      "ObjectId" : "2550d470d3f275858dc54775f79a1cc7d4044265",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmith/wxwidgets/icons/Makefile.am" : {
      "ObjectId" : "837830e51954919c67544b67b41a7050c3983abf",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmith/wxwidgets/properties/Makefile.am" : {
      "ObjectId" : "2f4de5dea1b29a79cc84f8e373024530590aaf9a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmithAui/Makefile.am" : {
      "ObjectId" : "09eea652eeb2b727d7a243cdfe6a5a7ce77bf69b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmithContribItems/Makefile.am" : {
      "ObjectId" : "dfea31ee32864c15fb3ef4cae51b535280e80ff1",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmithDemo/Makefile.am" : {
      "ObjectId" : "0e1c32505acf2af3e2b0026c6994088a3fc5fea6",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmithIExplore/Makefile.am" : {
      "ObjectId" : "a68438c41eeea171bc9735c2f00b9aa8efdb3f64",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/contrib/wxSmithSTC/Makefile.am" : {
      "ObjectId" : "506bc1e527ad0e6fe16d378dd6ec91d8cc467311",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/debuggergdb/Makefile.am" : {
      "ObjectId" : "9065636240e376b72de8e91b940d49dd793b2a4a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/debuggergdb/resources/Makefile.am" : {
      "ObjectId" : "134b5955156f65ccbbc093dfc0c7074d34ba48e9",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/defaultmimehandler/Makefile.am" : {
      "ObjectId" : "5bc6e83429f469f48b99c8764278b4fca65c6867",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/defaultmimehandler/resources/Makefile.am" : {
      "ObjectId" : "79c7a9af8a1ae41f13f5157ea7d22eb7ec1edfb9",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/occurrenceshighlighting/Makefile.am" : {
      "ObjectId" : "9c77886d7fffb31d104772c56cd2c5ca507f2251",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/occurrenceshighlighting/resources/Makefile.am" : {
      "ObjectId" : "9c6a5e9458180c912d9ed60bc9dd123101f7c8c8",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/openfileslist/Makefile.am" : {
      "ObjectId" : "60eca726e498a993e786eb746b7b4eb4de9ac617",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/projectsimporter/Makefile.am" : {
      "ObjectId" : "8f044429808639a1836fcd4a4772368ee996aa19",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/projectsimporter/resources/Makefile.am" : {
      "ObjectId" : "60c562b4be503b45318accf73364e7e3ab7bff0a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/Makefile.am" : {
      "ObjectId" : "d40b494c6f06768bf5acf245493849b8b7e393c2",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/Makefile.am" : {
      "ObjectId" : "e0604e7bc2d5efc40efd82d39acb39927ef6dd12",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/arduino/Makefile.am" : {
      "ObjectId" : "3ff4cb368caa85d217755a56d72303edaf05113b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/arm/Makefile.am" : {
      "ObjectId" : "fc9493dd41de95db11b2c1f5c8d71c797045f067",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Code below is used to install data files. If you modify this wizard don't\n\n# forget to update this file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install ARM-eval7t files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install ek-at91sam7a3 files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install lpd-lh7a404 files\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install olimex-at91sam7sx files\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install olimex-lpc213x files\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install phyCORE-AT91M55800 files\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install phyCORE-LPC2294 files\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install phyCORE-PXA255 files\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/plugins/scriptedwizard/resources/avr/Makefile.am" : {
      "ObjectId" : "2e31dadfda1592851d90af3bd48a88637e2421e9",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/c_file/Makefile.am" : {
      "ObjectId" : "62790f3f117c10c3c6a9a7e8e254e834cbc410bf",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/console/Makefile.am" : {
      "ObjectId" : "558d0cd69c960ce8e41316b39d7d6f76e6d98f3c",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/d/Makefile.am" : {
      "ObjectId" : "67c1d202251467a679b8e7545b3d3c87e0c47ad9",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/d_source/Makefile.am" : {
      "ObjectId" : "7feb93a8d31664d6f55ee63df2ade19603258919",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/directx/Makefile.am" : {
      "ObjectId" : "902a2a8225133e3b555dd104c2a210e45cc29d02",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/dll/Makefile.am" : {
      "ObjectId" : "c018414dd56822d7b9881e1cf743c1366df80382",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/empty/Makefile.am" : {
      "ObjectId" : "33517f0bf8f09d0f556b82b32259b1ce5d8b16f7",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/empty_file/Makefile.am" : {
      "ObjectId" : "eb506ee9e807471b41d324b50ffa68a5eae44ead",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/fltk/Makefile.am" : {
      "ObjectId" : "8a932d77e9a5a78305e6d515d0f2bf3ee23cd5f1",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/fortran/Makefile.am" : {
      "ObjectId" : "e565f797b12dd754bebc573ea43786b8a567bfca",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for app sub-dir\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for app/files sub-dir\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for dll sub-dir\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for dll/files sub-dir\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for file sub-dir\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for lib sub-dir\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for lib/files sub-dir\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/plugins/scriptedwizard/resources/glfw/Makefile.am" : {
      "ObjectId" : "863efcfea28f4fdbdec91fcd1d9b799b4a274552",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/glut/Makefile.am" : {
      "ObjectId" : "cd7d7cc0d4d991ce2fdcb6c2ca92d4266188152b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/gtk/Makefile.am" : {
      "ObjectId" : "42ca1c10044260d7cf8235dd255beb0471a8ec43",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/h_file/Makefile.am" : {
      "ObjectId" : "58e4382d31aa21f135a8d1327d4ddab001bf08ca",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/irrlicht/Makefile.am" : {
      "ObjectId" : "459b146e1b87f335c389f0f4d85dc0a4d4bd55e8",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/java/Makefile.am" : {
      "ObjectId" : "32d46d0f1f9a1edf9b07e1a7ffdf61f4ae6eb41b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/lf/Makefile.am" : {
      "ObjectId" : "86d0413cefed5f48d3905ef6659f4c3d45b3adf0",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/matlab_csf/Makefile.am" : {
      "ObjectId" : "8f5f00f85456148397b6135d861f30b5234c24e1",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/mcs51/Makefile.am" : {
      "ObjectId" : "46c7ee8d44dc8254b91ee48e429925cc060a966b",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/msp430/Makefile.am" : {
      "ObjectId" : "75e4a901de19b9e5047470d9b4b13fe07b51cea8",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/ogre/Makefile.am" : {
      "ObjectId" : "14b42821293489cd3607f9e3be5d4cf14eab5696",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/opencv/Makefile.am" : {
      "ObjectId" : "b280fcbfcbd310db9e7c0adc04c1d7bc3362615c",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/opengl/Makefile.am" : {
      "ObjectId" : "cdadd88f76b67a2b3b34fef2f3f590cf09729034",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/plugins/Makefile.am" : {
      "ObjectId" : "e5da8fae509ed2abfeb7549734f3866d87fcb45a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/ppc/Makefile.am" : {
      "ObjectId" : "1262f15c54d80d4ceadb0fc0317372d29157df8e",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/qt4/Makefile.am" : {
      "ObjectId" : "e3b15846e0a53c7e55d1eb130dcea5dd5a4566eb",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/qt4dll/Makefile.am" : {
      "ObjectId" : "62ebf15e4d244547ac808a6d64ab61763084772f",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/qt5/Makefile.am" : {
      "ObjectId" : "09096477342e549d4302be4a0ccf2b99b5b72512",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/sdl/Makefile.am" : {
      "ObjectId" : "5ae4b09e38115c5686838dc1b76b95a1c00b0c2a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/sdl/files/Makefile.am" : {
      "ObjectId" : "5625d78283c16a75e94a04fa4be1a3669009f067",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/sdl2/Makefile.am" : {
      "ObjectId" : "e4ebd6d64da2a143ef8010f9a231ea3873b8d7c7",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/sfml/Makefile.am" : {
      "ObjectId" : "95751d1d247148acad0a2226c6b61acb554586b8",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/sharedlib/Makefile.am" : {
      "ObjectId" : "2cfd57c34d23b3a90061958a297d8029895a4228",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/smartwin/Makefile.am" : {
      "ObjectId" : "27d59b2524f715ce8afaa4e6cbb05f6901de6d6a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/staticlib/Makefile.am" : {
      "ObjectId" : "9bc5f8e62dea73106328a14c2f2e770d0f7a30ba",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/stlport/Makefile.am" : {
      "ObjectId" : "a51c7d616627c14db83c57ddd6c8401618489017",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/sys/Makefile.am" : {
      "ObjectId" : "3d132ee18023d79d9940f1b009f2c292a441bd08",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/tricore/Makefile.am" : {
      "ObjectId" : "388e3dfc50510e344bb1b50bf903caa6c406ab45",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for template\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for EasyKit-TC1767\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for EasyRun-TC1796\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for phyCORE-TC1130\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for phyCORE-TC1775\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for TriBoard-TC1130\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for TriBoard-TC1161\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for TriBoard-TC1162\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# for TriBoard-TC1762\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for TriBoard-TC1765\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for TriBoard-TC1766\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# for TriBoard-TC1775\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for TriBoard-TC1792\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# for TriBoard-TC1796\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# for TriBoard-TC1797\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# for TriBoard-TC1920\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/plugins/scriptedwizard/resources/win32gui/Makefile.am" : {
      "ObjectId" : "e1e806e695bd879e735989337f7dcda9353bcd6a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/scriptedwizard/resources/wxwidgets/Makefile.am" : {
      "ObjectId" : "256c98275cc50e806c430fda2cc8731d66d21f03",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/todo/Makefile.am" : {
      "ObjectId" : "306c79d1c0f908abba5c8552454e55732ace67ed",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/todo/resources/Makefile.am" : {
      "ObjectId" : "684d2ef9a95a996c6ecf16d006bc8d33d2ac9d66",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/plugins/xpmanifest/Makefile.am" : {
      "ObjectId" : "2cb7818b18df8e2f3779a5b1c96e971615b97732",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/scripts/Makefile.am" : {
      "ObjectId" : "f220ab3b1035aa65980793be2903d1ea2a73fa50",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# install tests files in a subfolder\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/sdk/Makefile.am" : {
      "ObjectId" : "157aa781309aa41ef4566ed8ec065700295a6073",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/resources/Makefile.am" : {
      "ObjectId" : "c7efabacabede9e504cdbd51903757eb449e680d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/resources/lexers/Makefile.am" : {
      "ObjectId" : "ce8419d76b506a75e7daf3e67219daec26f9bd02",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/scripting/Makefile.am" : {
      "ObjectId" : "008a26723b923ae47c9190b6d67ccdb15f46d525",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/scripting/bindings/Makefile.am" : {
      "ObjectId" : "2186fd5fbedf58683d9133c32bd786d902af67d5",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/scripting/sqplus/Makefile.am" : {
      "ObjectId" : "e35120cfe1ac531750bdde6d24c432f0c88a08b0",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/scripting/sqstdlib/Makefile.am" : {
      "ObjectId" : "de26a29e884fd9e636fbebb64212fbdf959429d4",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/scripting/squirrel/Makefile.am" : {
      "ObjectId" : "cd0e2340181ea35dd88380bb8997ad2ba901f670",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/wxpropgrid/Makefile.am" : {
      "ObjectId" : "2b1a1077107de58aceec73633042ae0f4fa56157",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/sdk/wxscintilla/Makefile.am" : {
      "ObjectId" : "99d31d7917314be4faee06d2947ddecdd1873223",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# add upper-case copy\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/sdk/wxscintilla/build/Makefile" : {
      "ObjectId" : "921c51ee870495035cb67f51beb3d78c48c40bc2",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n## File:        Makefile\n\n## Purpose:     wxScintilla\n\n## Maintainer:  Otto Wyss\n\n## Created:     2004-09-19\n\n## RCS-ID:      $Id$\n\n## Copyright:   (c) 2004 wxCode\n\n## Licence:     wxWindows\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of source files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source directories\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# additional header directories\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# objects\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# library\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# implementation, change only if other settings or other targets are needed\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/src/Makefile.am" : {
      "ObjectId" : "ec004ed61a3a17234bd385d8d423bde5ac4d666d",
      "LastModified" : "2018-10-27T13:43:25Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# wxMac resource fork/unbundled app\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wxAUI uses GTK+ libraries on wxGTK\n\n# codeblocks_LDFLAGS = $(WX_GTK_LIBS)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/src/resources/Makefile.am" : {
      "ObjectId" : "682b5c056a068c73badd1d49b2d3fed8123ee0a2",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/src/resources/icons/Makefile.am" : {
      "ObjectId" : "81299c11a99a1f3e1a411fea2682d70141ea5717",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/src/resources/images/16x16/Makefile.am" : {
      "ObjectId" : "6855478d19b8cbc9aeda5bdb7807a8cdb2b4a1d6",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/src/resources/images/Makefile.am" : {
      "ObjectId" : "b4a54b6a99bf44a2e65e96c199d9508826b78a85",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/src/resources/images/settings/Makefile.am" : {
      "ObjectId" : "fd207488062489b9a72a96ff398b392e07941654",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/templates/Makefile.am" : {
      "ObjectId" : "07b09800faf9e225054a31fbba64602aba850293",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/templates/common/Makefile.am" : {
      "ObjectId" : "965449b831aa4db465567404970529950b53d81e",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/templates/unix/Makefile.am" : {
      "ObjectId" : "707442e0e5c004f7c51ad6911d58bd8bf084100d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/templates/win32/Makefile.am" : {
      "ObjectId" : "8696ea606df4ca8bb8cf6dddae661385b4ee840f",
      "LastModified" : "2018-10-27T13:43:25Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/tools/CBLauncher/Makefile.am" : {
      "ObjectId" : "d3dac74b72d6bd117b1a2646a880303fdaf886ba",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/tools/ConsoleRunner/Makefile.am" : {
      "ObjectId" : "7e43b244466b69c8df5e0b0357d664cc6ee61a7a",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/tools/Makefile.am" : {
      "ObjectId" : "cf78d814f0aa3ca1ca7cd4d7e689c5b75d97a7f3",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/tools/cb_share_config/Makefile.am" : {
      "ObjectId" : "60787534ef8628a885abda07cf77cdcec85b8ee3",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/tools/cbp2make/lib/tinyxml/Makefile" : {
      "ObjectId" : "5ffb95267ccd892391da1eee2f7d385ebdbae849",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#****************************************************************************\n\n#\n\n# Makefile for TinyXml test.\n\n# Lee Thomason\n\n# www.grinninglizard.com\n\n#\n\n# This is a GNU make (gmake) makefile\n\n#****************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBUG can be set to YES to include debugging info, or NO otherwise\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PROFILE can be set to YES to include profiling info, or NO otherwise\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TINYXML_USE_STL can be used to turn on STL support. NO, then STL\n\n# will not be used. YES will include the STL files.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#****************************************************************************\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#****************************************************************************\n\n# Preprocessor directives\n\n#****************************************************************************\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#****************************************************************************\n\n# Include paths\n\n#****************************************************************************\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#INCS := -I/usr/include/g++-2 -I/usr/local/include\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#****************************************************************************\n\n# Makefile code common to all platforms\n\n#****************************************************************************\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#****************************************************************************\n\n# Targets of the build\n\n#****************************************************************************\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#****************************************************************************\n\n# Source files\n\n#****************************************************************************\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add on the sources for libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#****************************************************************************\n\n# Output\n\n#****************************************************************************\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#****************************************************************************\n\n# common rules\n\n#****************************************************************************\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules for compiling source files to object files\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#makedepend ${INCS} ${SRCS}\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 16
    },
    "src/wxsmith/Makefile.am" : {
      "ObjectId" : "565aa3e59aa137013fe20e1aa2da206d5be0389d",
      "LastModified" : "2018-10-03T14:50:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 6,
    "AUTOMAKE" : 208,
    "BAZEL" : 1
  },
  "ElapsedTime" : 7654
}