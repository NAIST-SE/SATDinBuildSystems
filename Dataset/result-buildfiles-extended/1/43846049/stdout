{
  "Repository" : "43846049",
  "Revision" : "HEAD",
  "ObjectId" : "b315417d0cd57d399e25d911bd3537f7504e4fd3",
  "CommitTime" : "2019-04-18T20:05:00Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "c4dc36861dad4843c858d31ef5eaa7d29df50070",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Select board in which we will work. Options are: ml605 or afcv3\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Select which application we want to generate. Options are: halcsd\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Select if we want to have the AFCv3 DDR memory shrink to 2^28 or the full size 2^32. Options are: (y)es ot (n)o.\n\n# This is a TEMPORARY fix until the AFCv3 FPGA firmware is fixed. If unsure, select (y)es.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Select if we want to compile code with all messages outputs. Options are: y(es) or n(o)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Select if we want to compile with debug mode on. Options are: y(es) or n(o)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Select the FMC ADC board type. Options are: passive or active\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Select if we should program FMC EEPROM with some code or not. Option are:\n\n# active, passive or nothing (dont' program EEPROM)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Selects if we want to compile DEV_MNGR. Options are: y(es) or n(o)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Selects the AFE RFFE version. Options are: 2\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Selects if we want to compile specfic APP Config. Options are: y(es) or n(o).\n\n# If selected, the FPGA firmware must have the AFC diagnostics module\n\n# synthesized.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Installation prefix for the scripts. This is mainly used for testing the build\n\n# system. Usually this is empty\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Selects the install location of the config file\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# All of our supported boards\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Linker script\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Init sripts\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Subdmoules and third-party codes\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Our submodules and third-party codes\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# PCIe driver stuff (pcie driver and library) relative\n\n# directory\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Project libraries\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Board selection\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Program FMC130M_4CH EEPROM\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Program FMC250M_4CH EEPROM\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile DEV MNGR or not\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compile APP Config or not\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Malamute 1.0.0 requires this to be defined\n\n# as all of its API is in DRAFT state\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Debug conditional flags\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Libraries\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# FIXME: make the project libraries easily interchangeable, specifying\n\n# the lib only a single time\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Specific platform objects\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Source directory\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Prepare \"apps\" include\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Include other Makefiles as needed here\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Project boards\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Include directories\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Output modules\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Get each APP OUT module\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# All possible output modules\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Get each APP all possible output modules\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Out objects\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Save a git repository description\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Sources\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Makefile rules\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Output Rule\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Special rule for the revision object\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#Verify if the driver is in place\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Install just the driver and lib, not udev rules\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Project Libraries\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# External project dependencies\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "examples/Makefile" : {
      "ObjectId" : "083ad4f7794b5b5d16876bbaac012f6872ac0ab9",
      "LastModified" : "2017-03-29T01:40:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Malamute 1.0.0 requires this to be defined\n\n# as all of its API is in DRAFT state\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Libraries\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include directories\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Every .c file will must be a separate example\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For compatibility\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#BAD\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "foreign/libsdbfs/Makefile" : {
      "ObjectId" : "2d9230d73a658495131beaa2f12be30ace6b5e35",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# If we compile for the kernel, we need to include real kernel headers.\n\n# The thing is enough a mess that I moved it to a different file\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install prefix\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# calculate endianness at compile time\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the other unused targets, so the rule in ../Makefile works\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "foreign/libsdbfs/tools/Makefile" : {
      "ObjectId" : "43f1dbeb330f79e89f295b1b04776746d841792e",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# install prefix\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add the other unused targets, so the rule in ../Makefile works\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "kernel/pcie-driver/Makefile" : {
      "ObjectId" : "9c9931e43078833e25b79b1a9576d0b9d68a0233",
      "LastModified" : "2015-06-19T17:41:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libs/acqclient/Makefile" : {
      "ObjectId" : "a5514d642b132276f6fac2960e31ef107c6bd731",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Select board in which we will work. Options are: ml605 or afcv3\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Special variable for version.h script only\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Malamute 1.0.0 requires this to be defined\n\n# as all of its API is in DRAFT state\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Libraries\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Source directory\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include directory\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Specific board objects\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Specific platform objects\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects that are not specificaly related to the acq_client, but composes\n\n# our library, as it eases some tasks for us\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Project boards\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Include directories\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Output library names\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Library objects\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Objects common for both server and client libraries.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Copy specific acq_chan.h defintions according to the BOARD MACRO\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Copy non-standard headers\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Our local library headers\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Installation headers\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Save a git repository description\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Generate suitable names for static libraries\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Makefile rules\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Compile static library\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Special rule for the revision object\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#tests:\n\n#\t$(MAKE) -C $@ all\n\n#\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Prepare the environment for install rule\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "libs/bpmclient/Makefile" : {
      "ObjectId" : "d1e40b0efc342636a40a06871ae7a996d8413854",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Select board in which we will work. Options are: ml605 or afcv3\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Special variable for version.h script only\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Malamute 1.0.0 requires this to be defined\n\n# as all of its API is in DRAFT state\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Libraries\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Source directory\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include directory\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Specific board objects\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Specific platform objects\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects that are not specificaly related to the bpm_client, but composes\n\n# our library, as it eases some tasks for us\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Project boards\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Include directories\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Output library names\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Library objects\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Objects common for both server and client libraries.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Copy specific acq_chan.h defintions according to the BOARD MACRO\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Copy non-standard headers\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Our local library headers\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Installation headers\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Save a git repository description\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Generate suitable names for static libraries\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Makefile rules\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Compile static library\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Special rule for the revision object\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#tests:\n\n#\t$(MAKE) -C $@ all\n\n#\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Prepare the environment for install rule\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "libs/convc/Makefile" : {
      "ObjectId" : "a49f0ca3e76d65d45a2be4ad8cf62d3b920ca4f1",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Libraries\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Source directory\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Include directory\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include directories\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Output library names\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Library objects\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Objects common for this library\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generate suitable names for libraries\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Makefile rules\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile static library\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "libs/disptable/Makefile" : {
      "ObjectId" : "09683af5e4d2eda5eda84b8abb22a774ca67a8df",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Libraries\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Source directory\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Include directory\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include directories\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Output library names\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Library objects\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Objects common for this library\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generate suitable names for libraries\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Makefile rules\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile static library\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "libs/errhand/Makefile" : {
      "ObjectId" : "0ff84e464f07287a53094e4a5791c1342f64cc8d",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The following options are just for compatibility. Prefer the above ones!\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Libraries\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Source directory\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include directory\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Include directories\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Output library names\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Library objects\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects common for this library\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Generate suitable names for libraries\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Makefile rules\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile static library\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "libs/halcsclient/Makefile" : {
      "ObjectId" : "5577adf79b9977d0e7c61b99b2fa05ea881ac6f4",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Select board in which we will work. Options are: ml605 or afcv3\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Special variable for version.h script only\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Malamute 1.0.0 requires this to be defined\n\n# as all of its API is in DRAFT state\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Libraries\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Source directory\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include directory\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Specific board objects\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Specific platform objects\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects that are not specificaly related to the halcs_client, but composes\n\n# our library, as it eases some tasks for us\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Project boards\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Include directories\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Output library names\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Library objects\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Objects common for both server and client libraries.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Copy specific acq_chan.h defintions according to the BOARD MACRO\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Copy non-standard headers\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Our local library headers\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Installation headers\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Save a git repository description\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Generate suitable names for static libraries\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Makefile rules\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Compile static library\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Special rule for the revision object\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#tests:\n\n#\t$(MAKE) -C $@ all\n\n#\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Prepare the environment for install rule\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "libs/hutils/Makefile" : {
      "ObjectId" : "b7483d6b2fb7cb53559ceedd41c3d4b9bdd56c5b",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Libraries\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Source directory\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Include directory\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include directories\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Output library names\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Library objects\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Objects common for this library\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generate suitable names for static libraries\n\n# Generate suitable names for static libraries\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Makefile rules\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile static library\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "libs/llio/Makefile" : {
      "ObjectId" : "a7ed393fb37f1ffe8ca76d5fc2a2aebeac6f8a2b",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Special variable for version.h script only\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Libraries\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Source directory\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include directory\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Include directories\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Output library names\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Library objects\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects common for this library\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Generate suitable names for libraries\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Makefile rules\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile static library\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "libs/sdbutils/Makefile" : {
      "ObjectId" : "f7dcf5133463bcace37d43ba2798eacc89966986",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Config variables suitable for creating shared libraries\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General C/CPP flags\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To enable this option, use: make ERRHAND_DBG=y\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To enable this option use: make ERRHAND_MIN_LEVEL=DBG_MIN_TRACE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To enable this option use: make ERRHAND_SUBSYS_ON='\"(DBG_DEV_MNGR | \\\n# DBG_DEV_IO | DBG_SM_IO | DBG_LIB_CLIENT  | DBG_SM_PR | DBG_SM_CH | DBG_LL_IO | DBG_HAL_UTILS)\"'\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# You can also OR the available subsytems to enable debug messages in just the\n\n# those subsytems. See file errhand_opts.h for more information\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Debug flags -D<flasg_name>=<value>\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specific platform Flags\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Libraries\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# General library flags -L<libdir>\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Source directory\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Include directory\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include directories\n\n# FIXME. Needed so we can find libsdbfs headers\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Merge all flags. We expect tghese variables to be appended to the possible\n\n# command-line options\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Output library names\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Library objects\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Objects common for this library\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Objects for each version of library\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Libraries suffixes\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generate suitable names for static libraries\n\n# Generate suitable names for static libraries\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Avoid deletion of intermediate files, such as objects\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Makefile rules\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile static library\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile dynamic library\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Pull in dependency info for *existing* .o files and don't complain if the\n\n# corresponding .d file is not found\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compile with position-independent objects.\n\n# Autodependencies generatation by Scott McPeak, November 2001,\n\n# from article \"Autodependencies with GNU make\"\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# create the dependency files \"target: pre-requisites\"\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Workaround to make objects in different folders have\n\n# the correct target path. e.g., \"dir/bar.o: dir/bar.c dir/foo.h\"\n\n# instead of \"bar.o: dir/bar.c dir/foo.h\"\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# All prereqs listed will also become command-less,\n\n# prereq-less targets. In this way, the prereq file will be\n\n# treated as changed and the target will be rebuilt\n\n#   sed:    strip the target (everything before colon)\n\n#   sed:    remove any continuation backslashes\n\n#   fmt -1: list words one per line\n\n#   sed:    strip leading spaces\n\n#   sed:    add trailing colons\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "scripts/Makefile" : {
      "ObjectId" : "58b317a358aab3d9a5106e83a303b91f856ce607",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set your cross compile prefix with CROSS_COMPILE variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This SCRIPTS_PREFIX could be different than PREFIX, as SCRIPTS_PREFIX\n\n# is defined as the location of init scripts and must be placed in a specific\n\n# place. The main use of thuis variable is for testing the build system\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OS information\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Strip off a leading ./\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Makefile rules\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/Makefile" : {
      "ObjectId" : "65cec4a687cf7f60fa45045e1270af3f56600457",
      "LastModified" : "2018-05-22T20:31:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 16
  },
  "ElapsedTime" : 1477
}