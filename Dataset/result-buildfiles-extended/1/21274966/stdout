{
  "Repository" : "21274966",
  "Revision" : "HEAD",
  "ObjectId" : "c079784365674503db674329c8eafc76e9aa40c4",
  "CommitTime" : "2019-04-12T15:15:00Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "5ff14906020d54583327c8565150c3e926dcbca2",
      "LastModified" : "2018-11-08T16:47:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Put user-specific changes in your own Makefile.user file in this directory.\n\n# Make will silently continue if Makefile.user does not exist.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################################################\n\n### Variables\n\n###\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the NONETWORK variable to avoid network operations.  Example:\n\n#   make NONETWORK=true compile\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# note that for right now, we are only copying the html and texinfo\n\n# versions of the developer manual (though the PDF version is also built)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The texinfo files are included so we can diff to see what has changed from\n\n# release to release.  They are in the dist/doc directory, but not\n\n# visible to the user.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Files that contain the (automatically updated) version number and date.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Scripts, such as Perl programs, that are included in the Daikon distribution.\n\n# Why not just include all of them?  (Maybe to avoid problems with\n\n# accidentally including things in the user's checkout that are not needed\n\n# by most users, but why not include everything that's in repository?)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is so troublesome that it isn't used except as a list of dependences for make commands\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# the following is only used in the \"make showvars\" target\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#JAVA tools need Windows path on Windows\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for install-test target\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Staging area for the distribution\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Files to copy to the website, from $DAIKONDIR/doc/www/\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## These seem to be used only by the test-staged-dist target.\n\n# It would be nicer to automatically set JAVA_HOME, or to not need it to be set.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# JUNIT_VERSION := junit3.8.1\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# For deterministic sorting\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Examples of better ways to get the lists:\n\n# PERL_MODULES := $(wildcard *.pm)\n\n# PERL_SCRIPTS := $(wildcard *.pl)\n\n# PERL_SCRIPTS += em_analyze em_reports cppp\n\n# PERL_MODULE_TEXI := $(patsubst %.pm,%.texi,$(PERL_MODULES))\n\n# PERL_MODULE_INFO := $(patsubst %.pm,%.info,$(PERL_MODULES))\n\n# PERL_MODULE_MAN := $(patsubst %.pm,%.man,$(PERL_MODULES))\n\n# PERL_MODULE_HTML := $(patsubst %.pm,%.html,$(PERL_MODULES))\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###########################################################################\n\n### Rules\n\n###\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "### Default tag\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# must 'make compile' before 'make doc-all'\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "### Compiling the code\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "### Kvasir (C/C++ front end)\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# If fjalar/valgrind/Makefile.am does not exist, then this must be a fresh\n\n# daikon repository and we need to create the parallel fjalar repository.\n",
        "Line" : 212,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# force a build\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "### Rebuild everything; used for monthly releases, for example\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "### Testing the code\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# A quick test used to verify that Chicory and Daikon\n\n# are working properly.\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Sanity check, suitable for continuous integration such as Jenkins or Travis.\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# For systems such as Ubuntu 12.04 where makeinfo does not take the --pdf\n\n# command-line option, don't build the PDF manual.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "### Tags\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To make a TAGS table that does not include generated files, run:\n\n#   make -C java tags-sans-generated\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###########################################################################\n\n### Test the distribution\n\n###\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This is the target we use to verify that the software we are about\n\n# to distribute runs correctly in a variety of target environments.\n\n# Currently, we test Windows(Cygwin), Fedora and Ubuntu client machines.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# This is the target we use to do a sanity check of the distribution\n\n# on the machine used to build the release - prior to running the\n\n# 'distribution-check' target on a variety of client machines.\n\n# - verify we can open/unpack the distribution tar file\n\n# - run the junit verification tests on daikon.jar\n\n# - verify the released class files are all version 8\n\n# - verify that we can rebuild the .class files from the .java files\n\n# - run the junit verification tests on the class files\n\n# - run the quick-test\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## First, get and test daikon.jar.\n",
        "Line" : 365,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "## Make sure that all of the class files are 1.8 (version 52) or earlier.\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "## Test that we can rebuild the .class files from the .java files.\n",
        "Line" : 373,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "## Test that these new .class files work properly.\n",
        "Line" : 375,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "## Test the main target of the makefile.\n",
        "Line" : 377,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "## Test that we can build docs.\n",
        "Line" : 379,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "## Test the basic operation of Chicory/Daikon.\n",
        "Line" : 381,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# I would rather define this inside the repository-test rule.  (In that case I\n\n# must use \"$$FOO\", not $(FOO), to refer to it.)\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#This is broken and under repair! (markro)\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# vars for Daikon\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\tsource ${DAIKONDIR}/scripts/daikon.bashrc\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "###########################################################################\n\n### Distribution\n\n###\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Main distribution\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# A couple of checks to see if we can proceed with staging.\n\n# Verify that doc/CHANGES is newer than doc/daikon.texinfo - error out if not.\n\n# Report any uncommited files - users responsibility to act on results.\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# The staging target builds all of the files that will be distributed\n\n# to the website in the directory $(STAGING_DIR).  This includes:\n\n# daikon.tar.gz, daikon.zip, daikon.jar, javadoc, and the documentation.\n\n# See the dist target for moving these files to the website.\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Our intention is that members of the plse_www group will always have\n\n# write permission on the release directories; however, if you happen\n\n# to be the owner of an existing file, the permissions system gives\n\n# that priority and we must set the write bit.  These two chmod commands\n\n# will fail if you are not the owner, but the remainder of the commands\n\n# should work fine.\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Build the main tarfile for daikon\n",
        "Line" : 437,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# make daikon.tar has side effect of making documents\n\n# it also causes doc/CHANGES time stamp to be checked; which\n\n# we do not care about at this point.\n",
        "Line" : 439,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# Build javadoc\n",
        "Line" : 447,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# Copy the documentation\n",
        "Line" : 451,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# Build pubs and copy the results\n",
        "Line" : 459,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# This command updates the dates and sizes in the various index files\n",
        "Line" : 466,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# all distributed files should belong to the group plse_www and be group writable.\n\n# set the owner and other permissions to readonly\n",
        "Line" : 468,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# compare new list of files in tarfile to previous list\n",
        "Line" : 475,
        "CharPositionInLine" : 1
      },
      "58" : {
        "Text" : "# need to remove the leading \"daikon-<version>/\" before we can compare old and new\n",
        "Line" : 478,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Delete the tmp files\n",
        "Line" : 482,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Convert the staging area to the live release.\n\n# We do this by deleting the previous release directory and\n\n# renaming the staging directory to be the release directory.\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Webpages of publications that use Daikon\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Get the current release version,\n\n# if on the CSE filesystem where an old daikon-*.zip file exists.\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# As we are now including links to the previous version, we must only look at the newest one to get the correct version number.\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Get the new release version.\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Create links to the previous version to help reduce confusion over a version number change.\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Perl command compresses multiple spaces to one, for first 9 days of month.\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Update the documentation with a new distribution date (today).\n\n# This is done immediately before releasing a new distribution.\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Update the documentation according to the version number in VERSION.\n\n# This isn't done as part of \"make dist\" because then subsequent \"make www\"\n\n# would show the new version.\n\n# I removed the dependence on \"update-dist-version-file\" because this rule\n\n# is invoked at the beginning of a make.\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# update the version number in the release archive file names\n",
        "Line" : 573,
        "CharPositionInLine" : 1
      },
      "70" : {
        "Text" : "# Update the version number in file doc/VERSION\n\n# This is done immediately after releasing a new version; thus, VERSION\n\n# refers to the next version to be released, not the previously-released one.\n\n# (Tip: If you want the next version to end with \".0\", then before running\n\n# this target you can set the the last element of VERSION to \"-1\".)\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "## Problem: \"make -C java veryclean; make daikon.jar\" fails, as does\n\n## \"make -C java clean; make daikon.jar\".\n\n## It seems that one must do \"make compile\" before \"make daikon.jar\".\n\n# Perhaps daikon.jar shouldn't include JUnit or the test files.\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Compile Daikon and copy the resulting class files\n\n# to the ${TMPDIR}/daikon-jar directory\n",
        "Line" : 598,
        "CharPositionInLine" : 1
      },
      "73" : {
        "Text" : "#rm -rf ${TMPDIR}/daikon-jar\n",
        "Line" : 610,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# This rule creates the files that comprise the distribution, but does\n\n# not copy them anywhere.  (It does no compilation of its own.)\n\n# This rule could be changed to check out a fresh version of the\n\n# repository, then tar from there.  Then there would be no need to be so\n\n# careful about not including extraneous files in the distribution, and one\n\n# could make a distribution even if there were diffs in the current\n\n# checkout.\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Utility libraries\n",
        "Line" : 636,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "# Auxiliary programs\n",
        "Line" : 640,
        "CharPositionInLine" : 1
      },
      "77" : {
        "Text" : "# Java example files\n",
        "Line" : 644,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# Keep .java files, delete everything else\n",
        "Line" : 647,
        "CharPositionInLine" : 1
      },
      "79" : {
        "Text" : "# Perl example files\n",
        "Line" : 650,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# C example files for Kvasir\n",
        "Line" : 654,
        "CharPositionInLine" : 1
      },
      "81" : {
        "Text" : "## Now make the daikon distribution\n\n# First add some more files to the distribution\n",
        "Line" : 663,
        "CharPositionInLine" : 1
      },
      "82" : {
        "Text" : "# Daikon itself\n",
        "Line" : 668,
        "CharPositionInLine" : 1
      },
      "83" : {
        "Text" : "# Maybe I should do  $(MAKE) javadoc\n\n# Don't do  $(MAKE) clean  which deletes .class files\n",
        "Line" : 672,
        "CharPositionInLine" : 1
      },
      "84" : {
        "Text" : "## Front ends\n",
        "Line" : 676,
        "CharPositionInLine" : 1
      },
      "85" : {
        "Text" : "# Perl front end\n\n# mkdir ${TMPDIR}/daikon/front-end/perl\n",
        "Line" : 679,
        "CharPositionInLine" : 1
      },
      "86" : {
        "Text" : "# Kvasir C front end\n",
        "Line" : 684,
        "CharPositionInLine" : 1
      },
      "87" : {
        "Text" : "# We use the --filter option twice with rsync to exclude unneeded files.\n\n# The first attempts to ignore all files indicated by the contents\n\n# of the .gitignore file.  The second ignores the version control files.\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Internal developer documentation\n",
        "Line" : 690,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# Jar file needed for Chicory front end\n",
        "Line" : 695,
        "CharPositionInLine" : 1
      },
      "90" : {
        "Text" : "# Jar file needed for DynComp front end\n",
        "Line" : 698,
        "CharPositionInLine" : 1
      },
      "91" : {
        "Text" : "## Tools\n",
        "Line" : 701,
        "CharPositionInLine" : 1
      },
      "92" : {
        "Text" : "## Make the source distribution proper\n",
        "Line" : 705,
        "CharPositionInLine" : 1
      },
      "93" : {
        "Text" : "### Front end binaries\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "## (empty for now)\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "###########################################################################\n\n### Utilities\n\n###\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# If .git does not exist, then directory was created from a daikon archive file.\n\n# The \"git pull\" command fails under Centos and Fedora 23, for mysterious reasons.\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 97,
      "Errorlog" : "line 492:1 token recognition error at: '\\m'\nline 576:40 token recognition error at: '\\s'\n"
    },
    "doc/Makefile" : {
      "ObjectId" : "c4ed37b9cab4eb4b59e1dbe595247520263ad09b",
      "LastModified" : "2018-07-28T11:53:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Large split size fixes an apparent bug in makeinfo 4.11:\n\n# failing searches say\n\n#   Search failed: \"  Indirect:\"\n\n# instead of proper message.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If you know you haven't changed the Java code, or you don't care\n\n# about the parts of the documentation that are automatically\n\n# generated from it, running with SKIP_JAVA=1 will skip regenerating\n\n# the code-derived texinfo, which in turn avoids recompiling all of\n\n# Daikon, regenerating the splitter tests, and running the Daikon unit\n\n# tests.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always remake config-options.texinfo\n\n# (We delegate to ../java/Makefile, which is more discerning)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a jpg version of the dfepl flow, blow up by 4X to get cleaner\n\n# output.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Just builds .html from .texinfo.\n\n# Much faster than rebuilding the .texinfo files from Javadoc.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## These two rules create the directories if absent but don't update them.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Does the actual work\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fixup 'bad' href inserted by makeinfo.\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Fixup 'bad' href inserted by makeinfo.\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# The \"subdir\" flag does not copy over images, so the\n\n# pathnames become incorrect.  We need to copy them over ourselves.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Fixup 'bad' href(s) inserted by makeinfo.\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Fixup 'bad' href inserted by makeinfo.\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Note that the clean target does not remove invariants-doc.texinfo or\n\n# config-options.texinfo.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Obsolete files\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Remakes entire distribution; use with caution.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \"www\" target wouldn't work from here, because \"www\" is an (existing)\n\n# directory; but go to the parent directory and run the rule from there.\n\n# www:\n\n# \tcd .. && $(MAKE) www\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -u switch to hunspell is undocumented and subject to change,\n\n# but gives a line number whereas -l does not.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For CHANGES file, only recent lines (top 100), and not text starting with\n\n# 4+ spaces (assumed to be literal code or commands.  Permit some failures.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "doc/www/Makefile" : {
      "ObjectId" : "d134640c399e7a157ba09db279fe8cd4232c52f9",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Not the default to avoid accidentally installing new webpages.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/www/pubs-sources/Makefile" : {
      "ObjectId" : "a0c19da5fb1044483aa4abaaa640361f038abb60",
      "LastModified" : "2018-07-28T11:53:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This should include every file with \"usesDaikon\" or \"\\\"Invariant dectection\\\"\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Files in $pag/www/daikon/pubs-sources/\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove generated files.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Avoid error \"Cannot write to index.html\"\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A chmod command fails if there are no arguments.  But this might be\n\n# called when no *-abstract.html files exist.  So create a dummy file,\n\n# include it on the command line, and remove it afterward.  This is gross.\n\n# An alternative (but \"--no-run-if-empty\" is a GNU extension):\n\n#   ls | egrep '-abstract\\.html$' | xargs --no-run-if-empty chmod -f a+w\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Creates *-abstract.html files.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "examples/perl-examples/Makefile" : {
      "ObjectId" : "8325b7a9bde18cc61a49e1d2bbe6b5a79a603351",
      "LastModified" : "2017-07-17T19:39:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DAIKON = $(JAVA) daikon.Daikon --no_text_output --show_progress --suppress_redundant\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "java/Makefile" : {
      "ObjectId" : "a4fd48448e66175fa87ee8d94135189beedaf30d",
      "LastModified" : "2019-04-09T20:06:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "### User customizations\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Put user-specific changes in your own Makefile.user file in this directory.\n\n# Make will silently continue if Makefile.user does not exist.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't let the user override this; it should refer to the current directory.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Do some basic configuration checking:\n\n#  - Make sure uname and OSTYPE match up\n\n#  - On Windows, make sure that find is the Unix find and not the Windows find\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OSTYPE is a bash variable, not an environment variable.  Set it if necessary\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# For debugging, add -verbose flag to javac command\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To run doclint, do\n\n#   JAVADOC=\"~/research/types/jsr308-langtools/dist/bin/javadoc -Xdoclint:all,-missing\" make javadoc\n\n# But doclint is enabled by default starting with Java 8.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# JAVAC ?= javac -g -Xlint:unchecked\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add flags like \"-source 8\" or \"-target 8\" to JAVAC_TARGET_FLAGS.\n\n# That variable appears last and overrides the values we provide here.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### end of user customizations\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Not := because DAIKON_CLASSPATH is set later in this file.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###########################################################################\n\n### Variables\n\n###\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Classpath\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Daikon compiled files\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add jar files that only exist for the development version, not the\n\n# distributed version, of Daikon.  The if clause avoids a (harmless but\n\n# annoying) javac error message that they don't exist.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## Add tools.jar and rt.jar, if they exist\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -docletpath doesn't seem to respect path wildcards as -cp does\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This command should run after the AUTO_GENERATED_FILES are generated, or\n\n# else AUTO_GENERATED_FILES should be appended to it (without duplication).\n\n# Therefore, this assignment uses \"=\" instead of \":=\".\n\n# DO NOT USE THESE in dependencies or the\n\n# find command will get run multiple times.  USE AUTO_GENERATED_FILES instead.\n\n# \"-o -path './jakarta-oro*/src/java/examples'\" does not work for non-GNU find.\n\n# \" | perl -pi -e 's/^\\.\\///g'\" to remove leading \"./\"\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Until \"make ../plume-scripts\" has been run, sort-directory-order is not available.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Copied from\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Other find commands should perhaps use the recursive grep form instead\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#                    $(shell find binary_variables/ -name '*.java' -print)\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# When removing files from this list, add them to OLD_AUTO_GENERATED_FILES.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# These files were auto-generated previously; they still might exist in\n\n# some user's directory.\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# These files cannot be generated until everything else has been compiled.\n\n# (But, a problem is that it can get out of date and cause the compilation\n\n# to fail during pass 1.)\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Used as a prerequisite, not for the file names, so OK to include update-libs.\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "###########################################################################\n\n### Variables passed down to subshells\n\n###\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "###########################################################################\n\n### Compilation targets\n\n###\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# all_directly is not marked as phony\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# \"-S\" means do not continue after errors.\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Don't bother to run the unit tests if the compilation failed.\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# if ../.git does not exist, then directory was created from\n\n# a daikon archive file and we cannot do git-hooks\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## In general, don't use this; it misses some files\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## ${JAVA_FILES} is so long I can't see the result on the same screen as the command.\n\n# Do not mark this target as .PHONY.  We want it to\n\n# always recompile, whether recompilation is necessary or not.  (Why?)\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# # If SplitterFactoryTestUpdater.java is newer than SplitterFactoryTest.java, then delete the latter.\n\n# \tif [ daikon/test/split/SplitterFactoryTestUpdater.java -nt daikon/test/split/SplitterFactoryTest.java ] ; then rm -f daikon/test/split/SplitterFactoryTest.java; fi\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# on some systems chmod with symbolic arguments pays attention to umask.  so use 444 instead of -w\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# This creates ${AUTO_GENERATED_FILES_2}, so that shouldn't be a prerequisite.\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# These can't be prerequisites because they depend on .class files from Daikon itself.\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# $(MAKE) all_pass2\n",
        "Line" : 451,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "#\n\n# Chicory java front end for Daikon\n\n#\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# This actually requires Daikon to already be compiled.\n\n# It would be good to make that an explicit prerequisite.\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\n\n# Dynamic Comparability (DynComp/Java; also Chicory)\n\n#\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Build DynComp/Java, check the DF summary info and run a sanity test\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Runs a simple sanity test on DynComp/Java without an instrumented JDK\n\n# Also creates file ./Test.decls-DynComp\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\n\n# Rules to build the instrumented JDK for DynComp/Java\n\n#\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#DCOMP_JDK\t:= /tmp/$(USER)/dcomp-j2sdk-1.5\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Install the local version of the dyncomp specific rt.jar\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Only rebuild the jar file, don't recreate the contents of $(DCOMP_RT).\n\n# Useful if editing only one file in the jar.\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "## These two rules create the directories if absent but don't update them.\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Checks that daikon.util, rather than plume, is imported by source files\n\n# that do instrumentation.  Should also check that daikon.util is never\n\n# imported by non-instrumentation files.\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "## Use this when you don't want $inv/tests makefiles to restart\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# These rules are undesirable, because Daikon.class (or Diff.class) might\n\n# be up to date even if other files aren't.\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "###########################################################################\n\n### Cleaning (removing generated files\n\n###\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# It's good to run \"make clean\" occasionally, because it costs little to\n\n# regenerate .class files and it's bad to continue to use an orphaned class\n\n# file (whose source file was renamed).  Or, run \"orphaned-class-files\".\n\n# The (slight) downside is that the regenerated .class files might cause some\n\n# Make rules to unnecessarily re-run, if the code hasn't actually changed.\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# java/daikon might be a symbolic link; the alternative is to pass\n\n# \"-follow\" to the above find command, but I don't necessarily\n\n# want to remove everything reachable through symbolic links.\n",
        "Line" : 629,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# Could/should remove plume-scripts here, too.\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# A TAGS file that does not contain generated files\n\n# When doing certain search/replace tasks, it's better to omit generated files\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "###########################################################################\n\n### Code quality (static checks of the code)\n\n###\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# See version numbers at https://github.com/google/error-prone/releases\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# For 2.3.2 and later (but I can't make the command work):\n\n# ERRORPRONE_JAR_FILE := error_prone_core-${ERRORPRONE_VERSION}-with-dependencies.jar\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "## For 2.3.2 and later (but it isn't working for me):\n\n# \tjavac \\\n# \t  -J-Xbootclasspath/p:javac-9+181-r4173-1.jar \\\n# \t  -XDcompilePolicy=simple \\\n# \t  -processorpath ${DAIKONDIR}/java/lib/tmp/error_prone_core-2.3.2-with-dependencies.jar:${DAIKONDIR}/java/lib/tmp/dataflow-2.5.7.jar:${DAIKONDIR}/java/lib/tmp/javacutil-2.5.7.jar:${DAIKONDIR}/java/lib/tmp/jFormatString-3.0.0.jar \\\n# \t  '-Xplugin:ErrorProne -Xep:ReferenceEquality:OFF -Xep:StringSplitter:OFF' \\\n# \t  -Xmaxwarns 100000  \\\n# \t  ${JAVA_FILES_FOR_STYLE}\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# To create a patch file to apply changes:\n\n#\t\\rm -f ${DAIKONDIR}/java/error-prone.patch && java -Xbootclasspath/p:${ERRORPRONE_JAR_PATH} com.google.errorprone.ErrorProneCompiler -Xmaxwarns 100000 -XepPatchChecks:MissingOverride,DefaultCharset,DeadException -XepPatchLocation:${DAIKONDIR}/java ${JAVA_FILES_FOR_STYLE}\n\n# This didn't create the file though its output claimed it did:\n\n#\t\\rm -f ${DAIKONDIR}/java/error-prone.patch && java -Xbootclasspath/p:${ERRORPRONE_JAR_PATH} com.google.errorprone.ErrorProneCompiler -Xmaxwarns 100000 -XepPatchChecks:BoxedPrimitiveConstructor -XepPatchLocation:${DAIKONDIR}/java ${JAVA_FILES_FOR_STYLE}\n\n# To apply the patch, see instructions in the Error Prone output.\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# For 2.3.2 and later:\n\n# lib/tmp/${ERRORPRONE_JAR_FILE}:\n\n# \tmkdir -p lib/tmp\n\n# \tcd lib/tmp && curl -s -O --retry 3 https://repo1.maven.org/maven2/com/google/errorprone/error_prone_core/${ERRORPRONE_VERSION}/${ERRORPRONE_JAR_FILE}\n\n# \tcd lib/tmp && curl -s -O --retry 3 https://repo1.maven.org/maven2/org/checkerframework/dataflow/2.5.7/dataflow-2.5.7.jar\n\n# \tcd lib/tmp && curl -s -O --retry 3 https://repo1.maven.org/maven2/org/checkerframework/javacutil/2.5.7/javacutil-2.5.7.jar\n\n# \tcd lib/tmp && curl -s -O --retry 3 https://repo1.maven.org/maven2/com/google/code/findbugs/jFormatString/3.0.0/jFormatString-3.0.0.jar\n\n# \tcd lib/tmp && curl -s -O --retry 3 https://repo1.maven.org/maven2/com/google/errorprone/javac/9+181-r4173-1/javac-9+181-r4173-1.jar\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Takes about 20 minutes on manioc as of June 2005.\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# WARNING: This does not use the class files, but the .jar file.\n\n# So make sure it's up to date before using this\n\n# WARNING: I don't think this will work unless you're logged on as Michael Ernst.\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# This target is aimed at M-x compile in Emacs.  The output is misleading\n\n# if the .findbugs-output file might be old, or the daikon.jar file is old.\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# This invocation works on Ubuntu.\n",
        "Line" : 754,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# \"(cd $inv; maudit daikon)\" does not work; I don't understand why.\n\n# Unfortunately, this is way too much output; I need to filter it.\n\n# Maybe write my own script to do that...\n",
        "Line" : 760,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Requires Java 8\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Requires Java 8\n",
        "Line" : 776,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "###########################################################################\n\n### Pluggable type checkers\n\n###\n",
        "Line" : 784,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# (Don't run these until after you have compiled Daikon at least once.)\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Note about CHECKER_ARGS: if this contains any -Alint option, it will\n\n# override (not augment) any other use of -Alint in this Makefile.\n\n# \"-proc:only\" prevents generation of .class files (so generated classfiles are\n\n# version 8 rather than version 9).\n\n# JAVACHECK_EXTRA_ARGS is set only by the user (and is currently used by Travis).\n",
        "Line" : 790,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "## All of the following targets need to depend on \"compile\".\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Just check that the Index Checker doesn't crash -- -AsuppressWarnings=\"index\"\n\n# command-line argument suppresses all type-checking errors.\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# JAVAC_INTERNING_ARGS = -processor org.checkerframework.checker.interning.InterningChecker -implicit:class -Xlint:-processing\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "## The \"-J-Dcheckers.skipUses='^daikon.Debug'\" should really be just for rawness, not for nullness.\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# -AsuppressWarnings=method.guarantee.violated,override.sideeffect.invalid is temporary.\n\n# Once the Purity Checker and -AsuggestPureMethods are fixed, they can be run on plume-lib\n\n# and Daikon and this can be removed. The method.guarantee.violated warning is issued by\n\n# the Lock Checker when a method calls another method with a weaker side effect guarantee.\n\n# The override.sideeffect.invalid warning is issued by the Lock Checker when the side effect\n\n# annotation on the overridder method is weaker than that on the overridden method.\n",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "## Code in dcomp directory is not called directly; annotations would be useless.\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Intern.java implements interning and so has very many annotations.  VarInfoName\n\n# is obsolescent, retained for backward compatibility only; it is of flawed design\n\n# and has 60 @Interned annotations and quite a few SuppressWarnings.\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "## Which files to check.\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#  $(shell find daikon -name '*.java' -a -exec grep -L \"^@SuppressWarnings.*nullness\" {} \\; | sort)\n\n#   $(shell find typequals/ -name '*.java')\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "## Reinstate prototype and vindex checkers later.\n\n# check-all: check-formatter check-interning check-nullness check-regex check-signature check-prototype check-vindex\n\n## check-regex-qual target runs extremely slowly.\n\n# check-all: check-formatter check-interning check-nullness check-regex check-regex-qual check-signature\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Run the index checker on all Java files, not just those in the daikon package.\n\n# For instance, this includes jtb, which is not annotated with @Interned.\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# This target runs the Index checker on just one file.\n\n# Typical command:\n\n# INDEX_ONEFILE=\"daikon/derive/binary/SequenceStringIntersection.java daikon/derive/binary/SequenceStringUnion.java daikon/inv/unary/stringsequence/CommonStringSequence.java daikon/Quant.java\" make check-index-onefile\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Run the interning checker on all Java files, not just those in the daikon package.\n\n# For instance, this includes jtb, which is not annotated with @Interned.\n",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# This target runs the Interning checker on just one file.\n\n# Typical command:\n\n# INTERNING_ONEFILE=\"daikon/derive/binary/SequenceStringIntersection.java daikon/derive/binary/SequenceStringUnion.java daikon/inv/unary/stringsequence/CommonStringSequence.java daikon/Quant.java\" make check-interning-onefile\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# This target runs the Signature checker on just one file.\n\n# Typical command:\n\n# SIGNATURE_ONEFILE=\"daikon/derive/binary/SequenceStringIntersection.java daikon/derive/binary/SequenceStringUnion.java daikon/inv/unary/stringsequence/CommonStringSequence.java daikon/Quant.java\" make check-signature-onefile\n\n# SIGNATURE_ONEFILE ?= daikon/chicory/Instrument.java daikon/dcomp/DCInstrument.java\n",
        "Line" : 890,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# These targets run the Nullness checker on just one file.\n\n# Typical command:\n\n# NULLNESS_RAW_ONEFILE=\"daikon/derive/binary/SequenceStringIntersection.java daikon/derive/binary/SequenceStringUnion.java daikon/inv/unary/stringsequence/CommonStringSequence.java daikon/Quant.java\" make check-nullness-raw-onefile\n\n# NULLNESS_RAW_ONEFILE ?= daikon/derive/binary/SequenceStringUnion.java\n\n# NULLNESS_RAW_ONEFILE ?= daikon/FileIO.java\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# These targets run the Nullness checker on just one file.\n\n# Typical command:\n\n# NULLNESS_ONEFILE=\"daikon/derive/binary/SequenceStringIntersection.java daikon/derive/binary/SequenceStringUnion.java daikon/inv/unary/stringsequence/CommonStringSequence.java daikon/Quant.java\" make check-nullness-onefile\n\n# NULLNESS_ONEFILE ?= daikon/derive/binary/SequenceStringUnion.java\n\n# NULLNESS_ONEFILE ?= daikon/FileIO.java\n",
        "Line" : 922,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# These targets run the Interning checker on just one file.  They use ${JAVAC}\n\n# instead of ${JAVAC_COMMAND}, to display a shorter, easier-to-read command.\n",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# \"tail -1\" is required when wc is given multiple arguments\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#\t@echo ${INTERNING_JAVA_FILES_COUNTS}\n",
        "Line" : 977,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# This counts annotations in comments, etc.\n\n# \"tail -1\" is required when wc is given multiple arguments\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# \t@echo -n \"Annotated files: \"\n\n# \t@echo ${NULLNESS_JAVA_FILES} | sed 's/ /\\n/g' | wc -l\n\n# \t@echo -n \" / \"\n\n# \t@echo ${DAIKON_JAVA_FILES} | sed 's/ /\\n/g' | wc -l\n\n# #\t@echo ${NULLNESS_JAVA_FILES}\n\n# \t@echo -n \"Lines in annotated files: \"\n\n# \t@echo ${NULLNESS_JAVA_FILES} | xargs wc -l | tail -1 | cut -d ' ' -f 2\n\n# \t@echo -n \" / \"\n\n# \t@echo ${DAIKON_JAVA_FILES} | xargs wc -l | tail -1 | cut -d ' ' -f 2\n",
        "Line" : 999,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Count the total possible locations at which a type annotation could be written.\n",
        "Line" : 1015,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "###########################################################################\n\n### Testing\n\n###\n",
        "Line" : 1023,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# run a static check on currently-compiled classes\n\n# ensure serialized classes have a date-style UID assigned\n",
        "Line" : 1032,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#\tfor each non-gui class, run serialver\n\n#\taccept only \"is not Serializable\" or \"UID = 200#####\" as output\n",
        "Line" : 1035,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Alternately, MasterUnitTester could run SplitterFactoryTest,\n\n# but I'm having trouble with that, apparently due to hard-coded\n\n# directory paths.  And these tests are slow, so we want them to\n\n# be separate anyway.\n",
        "Line" : 1046,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "###\n\n### Clover (code coverage)\n\n###\n",
        "Line" : 1052,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "###########################################################################\n\n### Documentation\n\n###\n",
        "Line" : 1080,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# ${DAIKONDIR}/java should not be in classpath, to avoid Javadoc error\n\n# \"Multiple sources of package comments found for package\"\n",
        "Line" : 1085,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Daikon packages except for util (which is just a copy of plume)\n",
        "Line" : 1094,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Don't run Javadoc on files that require the Checker Framework.\n",
        "Line" : 1100,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Build javadoc using the daikon package and all subpackages of daikon.\n",
        "Line" : 1105,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Run Javadoc on each file individually, to determine which one is crashing Javadoc.\n\n# Then, you need to do binary search on that file.\n",
        "Line" : 1117,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "## Make Javadoc with private fields for people working on source code.\n\n## It is generated in the standard location, directory api/\n",
        "Line" : 1124,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "## Test that Javadoc exists.\n\n## You should regenerate api/ after running this.\n",
        "Line" : 1132,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "## This doesn't seem necessary any more\n\n# javadoc-lookup: doc-javadoc-lookup\n\n#\n\n# ## Fix up generated .html files for use by the Emacs `javadoc-lookup' function.\n\n# doc-javadoc-lookup: api\n\n# \tfind api -name '*.html' | xargs -n 100 ${PLUMESCRIPTS}/jdk-add-munged-anchor-names\n\n# \techo \"Run javadoc-index-to-alist > ~/.javadoc-index.el\"\n",
        "Line" : 1144,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# This fails if both . and pwd are on CLASSPATH:  classes are found twice\n\n# resulting in a duplicate class warning.\n",
        "Line" : 1158,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "###########################################################################\n\n### For debugging the Makefile.\n\n###\n",
        "Line" : 1178,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "###########################################################################\n\n### Automatically generated files\n\n###\n",
        "Line" : 1222,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "## First, a file not generated via java-cpp.\n",
        "Line" : 1226,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# Has expected errors while compiling splitter files.\n\n# Suppress output unless whole command fails.\n",
        "Line" : 1230,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "## This would be an alternative to the above rule for ${AUTO_GENERATED_CLASSES_2}.\n\n# daikon/test/split/SplitterFactoryTest.class: daikon/test/split/SplitterFactoryTest.java\n\n# \t${JAVAC_COMMAND} $<\n",
        "Line" : 1238,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Create the auto-generated files with jpp\n",
        "Line" : 1242,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# Use this rule if you do not have cpp or for some other reason do not want\n\n# to refresh the automatically generated .java files.  You should not do\n\n# this if those files are not up-to-date (that is, if you have modified the\n\n# .jpp files).  It is safe to do this with a distrubution that you have\n\n# just unpacked.\n",
        "Line" : 1246,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# \":=\" does not work here; the variables get expanded too soon.\n\n# \"-e\" means exit immediately if any error, rather than returning\n\n# the status of the last command.\n",
        "Line" : 1256,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# This rule does not work with make 3.77, but does work with make 3.78.\n",
        "Line" : 1260,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# Like the above, but also makes a backup file\n\n# JAVA_CPP = (mv -f $@ $@-bak; set -e; ${PLUMESCRIPTS}/java-cpp -DDEFINEDVAR $< > $@; chmod a-w $@)\n",
        "Line" : 1262,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# JAVA_CPP = (cp -pf $@ $@-bak; set -e; java-cpp $< -DDEFINEDVAR > $@-postproc; mv -f $@-postproc $@; chmod a-w $@)\n\n## Here are alternate ways of writing the same command:\n\n## I could use \"define\", but that's specific to GNU Make\n\n## I can't do this because the CPP defined variable changes.\n\n# JAVA_CPP = (mv -f $@ $@-bak; set -e; java-cpp $< -DDEFINEDVAR > $@; chmod a-w $@)\n\n## These are used like:\t$(JAVA_CPP_START) -DLOWER $(JAVA_CPP_END)\n\n# JAVA_CPP_START = (cp -pf $@ $@-bak; set -e; java-cpp $<\n\n# JAVA_CPP_END = > $@-postproc; mv -f $@-postproc $@; chmod a-w $@)\n",
        "Line" : 1265,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "###########################################################################\n\n### Delete-on-error\n\n###\n",
        "Line" : 1875,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# Existence of this rule means that a target is deleted if has just changed\n\n# and its rule commands exit with nonzero status.  It's needed for the\n\n# java-cpp rules above.\n\n# (Actually, it isn't anymore, for I arrange not to overwrite the file\n\n# unless success.  But leave it in for now anyway.)\n",
        "Line" : 1879,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 124,
      "Errorlog" : "line 1037:309 token recognition error at: '\\d'\nline 1037:315 token recognition error at: '\\d'\nline 1037:323 token recognition error at: '\\d'\n"
    },
    "java/daikon/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/asm/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/chicory/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/config/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/dcomp/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/derive/Makefile" : {
      "ObjectId" : "a90b4ff190a324974dfd453374a3b4165f199ac0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/derive/binary/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/derive/ternary/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/derive/unary/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/diff/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/binary/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/binary/sequenceScalar/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/binary/sequenceString/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/binary/twoScalar/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/binary/twoSequence/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/binary/twoString/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/filter/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/ternary/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/ternary/threeScalar/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/unary/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/unary/scalar/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/unary/sequence/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/unary/string/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/inv/unary/stringsequence/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/simplify/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/split/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/split/misc/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/suppress/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/config/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/diff/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/inv/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/inv/unary/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/inv/unary/scalar/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/inv/unary/sequence/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/split/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/test/split/targets/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/tools/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/tools/compare/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/tools/jtb/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/tools/nullness/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/daikon/tools/runtimechecker/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/jtb/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/jtb/syntaxtree/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/jtb/visitor/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "java/typequals/Makefile" : {
      "ObjectId" : "a4bb7ec32d27fff741e6a0ed3418fa9c959e4dc0",
      "LastModified" : "2012-01-12T22:15:42Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "scripts/Makefile" : {
      "ObjectId" : "4e43fe137263f188dc0c5875e33f4e6415ccb34a",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Delegation to other Makefiles (gross)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This rule lists no dependencies, because doing so would just duplicate\n\n# what is already in that Makefile.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/Makefile" : {
      "ObjectId" : "9f5cd7089000fc043d0c8f53f9be2b3012f08cc0",
      "LastModified" : "2017-11-09T20:14:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# help listing, split up so that children can use some of it\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To produce incremental output, invoke make as: make MPARG=-Otarget ...\n\n# To not run in parallel, invoke make as: make MPARG=-j1 ...\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These do not use DynComp\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# targets that descend to child direcories\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# output display; can be called from children (they will set BASE)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# removes fields before the size (ie, permissions, owner, group).\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# args to 'find' program, to find files containg results\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# omit pristine tests\n",
        "Line" : 123,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# also omit esc differences\n",
        "Line" : 126,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 11,
      "Errorlog" : "line 91:60 token recognition error at: '\\S'\nline 91:63 token recognition error at: '\\s'\nline 91:66 token recognition error at: '\\S'\nline 91:69 token recognition error at: '\\s'\nline 91:72 token recognition error at: '\\S'\nline 91:75 token recognition error at: '\\s'\nline 91:78 token recognition error at: '\\S'\nline 91:81 token recognition error at: '\\s'\nline 91:85 token recognition error at: '\\d'\nline 91:89 token recognition error at: '\\s'\nline 91:96 token recognition error at: '\\s'\nline 91:100 token recognition error at: '\\S'\nline 120:17 token recognition error at: '\\Q'\n"
    },
    "tests/chicory-tests/Makefile" : {
      "ObjectId" : "7d4e300d65d30bffeb79c70e1bd4e964c4e52988",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/chicory-tests/option-tests/Makefile" : {
      "ObjectId" : "3a011e3227fc04497601d0fb8b40270897d1e770",
      "LastModified" : "2018-09-10T15:59:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile that runs tests that checks various chicory options.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DAIKONDIR is the clone of the 'daikon' project.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# StackAr sources are used for option testing\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On cygwin, translate the premain path to windows format.  Only do so if\n\n# this has not already been done (which is determined by looking for\n\n# semicolons (:) in the name.  Only do this for PREMAIN, not for CHICORY\n\n# as CHICORY is used by make which will expect unix format\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is the working directory, but not necessarily the directory in\n\n# which this Makefile is found.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# obtain and compile the sources\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/daikon-tests/ArrayList13/Makefile" : {
      "ObjectId" : "43691a838db7abfe8c56a0a3767b9b94c400c172",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/ArrayList17/Makefile" : {
      "ObjectId" : "ba224b78dca92ae888758690f88b6a6ccf7e8ade",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MAIN_CLASS:=javautil.IteratorMicroBenchmark17\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/BinaryHeap/Makefile" : {
      "ObjectId" : "58365d75c40d93ae38ba0c18658dbb19e06ebee8",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generating the .dtrace takes 7 minutes on my (slow!) laptop as of 7/12/2005\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ESC_ON:=1\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## INSTRUMENT:=infer\n\n## #INSTRUMENT:=explicit\n\n## #INSTR_FILES:=DataStructures/StackAr.java\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# INSTRUMENT_OBSERVERS:=1\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# USER_DAIKON_OPTIONS:=--ppt-select-pattern=\"^DataStructures.Binary[:\\.]\"\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tests/daikon-tests/BinaryTree/Makefile" : {
      "ObjectId" : "a9cb641481c7591914297804bb01b66bdd54b745",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MAIN_CLASS:=DataStructures.BinarySearchTreeTester # for esc-annotate-paper\n\n#MAIN_CLASS:=DataStructures.BinarySearchTreeTester # for esc-annotate-paper\n\n#MAIN_CLASS:=DataStructures.BinarySearchTreeTester  #improved test suite for clustering\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#INSTRUMENT:=explicit\n\n#INSTR_FILES:=DataStructures/StackAr.java\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# INSTRUMENT_OBSERVERS:=1\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# USER_DAIKON_OPTIONS:=--ppt-select-pattern=\"^DataStructures.BinarySearch[:\\.]\"\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/daikon-tests/CursorList/Makefile" : {
      "ObjectId" : "b3a1fdeadca6c33405752c4cce8964a5367f20bd",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/Daikon/Makefile" : {
      "ObjectId" : "86c32626d56f06922137eb4a9828356153f61f36",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Basics\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input for daikon under test\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test diff; or test Inference\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t\t| grep -v 'ProglangType' \\\n#\t\t| grep -v 'FileIO' \\\n#\t\t| grep -v 'daikon/inv' \\\n#\t\t| grep -v 'daikon/derive' \\\n\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Just don't want data\n\n# ==========================================================================\n\n# Configuration\t\t: Singleton; too much data\n\n# ProglangType\t\t: Way to many static fields\n\n# simplify\t\t: Unintersting / off?\n\n# split\t\t\t: Uninteresting?\n\n# plume\t\t\t: Not daikon\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instrumentation problems\n\n# ==========================================================================\n\n# VarInfoName\t\t: Something unpleasant about its inner class QuantHelper.\n\n# Invariant\t\t: Hoisting static field anon class problem\n\n# ValueAndModified\t: Init'd static fields in dtrace but not decls\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make .inv.gz files for diff under test\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/daikon-tests/DisjSets/Makefile" : {
      "ObjectId" : "61b2e5b0e0938c1d6a102120f69042c1648b7413",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MAIN_CLASS:=DataStructures.DisjSetsTestOrig # for esc-specs paper\n\n#MAIN_CLASS:=DataStructures.DisjSetsTestPlus # for esc-specs paper\n\n#MAIN_CLASS:=DataStructures.DisjSetsTestAug  # improved test suite for clustering\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/FixedSizeSet/Makefile" : {
      "ObjectId" : "e216e60591e6f6cd248e45817d12bc361bf2f14f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/GeoSegment/Makefile" : {
      "ObjectId" : "9b9f229d10cd14e8362ee26a19ab2bd6371fa241",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# USER_DAIKON_OPTS:=--ppt-select-regep=\"^MapQuick1\\.Geo\" ${USER_DAIKON_OPTIONS}\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# must come after the include to get SOURCES\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/daikon-tests/GeoSegment3/Makefile" : {
      "ObjectId" : "a74d9f3a92bdc19dc50ad986b229f54f95003156",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Using this, the Daikon error of 3/9/2006 does not occur.\n\n# instrument-files-revise:\n\n# \t@echo \"MapQuick3/GeoSegment.java MapQuick3/GeoFeature.java MapQuick3/Route.java\" >| ${INST_LIST_FILE}\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This has no effect, because Makefile.common overrides it.  Use instrument-files-revise instead.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/Graph/Makefile" : {
      "ObjectId" : "67d79951a1d9cd17a4bbb3aa37b44b78fb349733",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is unnecessary when we have instrument-files-revise\n\n# USER_DAIKON_OPTIONS:=--ppt-select-pattern=\"^MapQuick1\\.Graph[:\\.]\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# must come after the include to get SOURCES\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/Huffman/Makefile" : {
      "ObjectId" : "11fca086e691f1e25086f54c10687634bf026863",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/KnownValues/Makefile" : {
      "ObjectId" : "a6cc47d32b95fc3b32e58bb0e589776a4a061e61",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: config.txt only used because V3 has a memory use problem\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/KnownValuesNewDecls/Makefile" : {
      "ObjectId" : "0ba3ca648e7794f889c5d5b2cdd43e4d78616ac1",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: config.txt only used because V3 has a memory use problem\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/LinkedList/Makefile" : {
      "ObjectId" : "f7110864685a7e0c691292585647876ffde04bdd",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ESC_ON:=1\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# USER_DAIKON_OPTIONS:=--ppt-select-pattern=\"^DataStructures\\.LinkedList[:\\.]\"\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/daikon-tests/Makefile" : {
      "ObjectId" : "188fa40bb26b6945ed9b6d5289cb4bb5943f8044",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n\n# Read Makefile in parent directory to see what this all means\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DAIKONDIR is the clone of the 'daikon' project.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Help system\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Targets that ascend to parent directories\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets that descend to child directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###########################################################################\n\n# Useful groupings of projects (everything, default, by source, etc.)\n\n# e.g. \"make siemens-txt-diff\" or \"make dsaa-inv\"\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# (We must use actions for these rules for 'make' to work correctly.)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Approximate times as of July 2016:  total 58 minutes, 30 for quick, 28 for nonquick\n\n# SQD: 6 minutes\n\n# polycalc: 11 minutes\n\n# special-cases: 10 minutes\n\n# siemens: 3 minutes\n\n# dsaa: 7 minutes\n\n# mapquick: 9 minutes\n\n# javautil: 6 minutes\n\n# 6170: 5 minutes\n\n# large: 0 minutes\n\n# new: 1 minute\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Canonical groupings\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# do-MapQuick-%\n",
        "Line" : 59,
        "CharPositionInLine" : 82
      },
      "10" : {
        "Text" : "# do-Flex-% do-JML-%\n",
        "Line" : 65,
        "CharPositionInLine" : 9
      },
      "11" : {
        "Text" : "# Extra groupings\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# 'make do-SomeDiectory-target'\n\n# e.g. 'make do-StackAr-inv'\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###########################################################################\n\n# Jeremy's junk\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Collecting esc-specs-paper statistics\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\tcp -p table-stats.tex ${DAIKONDIR}/papers/esc-specs-paper/\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\t${SCRIPTS}/esc-stats-latex.pl -s StackAr/stackar.stats > table-stats-stackar.tex\n\n#\tcp -p table-stats-stackar.tex ${DAIKONDIR}/papers/esc-specs-paper/\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# x: stats-table stats-tables-single\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "tests/daikon-tests/MapQuick/Makefile" : {
      "ObjectId" : "69518edecc96b916566836abb3214d0475a189d7",
      "LastModified" : "2017-07-17T19:39:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MAIN_CLASS:=MapQuick.PS6PrivateTest # is uselessly long\n\n#MAIN_CLASS:=MapQuick.DirectionsFinderTest # is \"original\" for esc-specs paper\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# is \"augmented\" for esc-specs paper\n",
        "Line" : 7,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : "# Just don't want data\n\n# ==========================================================================\n\n# ^MapQuick\t\t: Only want the applicaton (e.g. not JUnit)\n\n# ^MapQuick/tigerdb\"\t: ImmIterator closure; probably lots of data\n\n# Test | PrivateQueries\t: Inner classes, weird crap, etc.\n\n# StreetClassification  : Uninteresting and way too much output in depth = 2\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Instrumentation problems\n\n# ==========================================================================\n\n# StreetSegReader &\t: public final static non-primitive init'd inline field in dtrace; not in decls\n\n#  StreetSegIterator\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DirectionsFinder also\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \tcat ${ALL_LIST_FILE} \\\n# \t\t| egrep    \"^MapQuick\" \\\n# \t\t| egrep -v \"^MapQuick/tigerdb\" \\\n# \t\t|  grep -v \"Test\" | grep -v \"PrivateQueries\" \\\n# \t\t|  grep -v \"StreetClassification\" \\\n# \t\t|  grep -v \"StreetSegReader\" | grep -v \"StreetSegIterator\" \\\n# \t>| ${INST_LIST_FILE}\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# run \"make separate\" to split the trace file into pieces\n\n# run \"make invs\" to do inference on each\n\n# run \"make oneinv\" to recominbine into one inv file\n\n# then you may run \"make txt-daikon\", \"make merge\", etc.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#${DAIKON_CLASS}\n",
        "Line" : 69,
        "CharPositionInLine" : 44
      },
      "10" : {
        "Text" : "# USER_MERGE_ESC_OPTIONS:=--dbg daikon.tools.jtb.MergeESC\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This screws up LOC counting, but we miss edits in non-checked files otherwise\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "tests/daikon-tests/MapQuick/issta-goals/Makefile" : {
      "ObjectId" : "804f60e9f24faeae75369937c64aa384d0f4f216",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile gets copied to $PROJECT/merged/... to allow esc to be\n\n# run more easily while toying with the merged source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/MapQuick/issta-goals/MapQuick/Makefile" : {
      "ObjectId" : "804f60e9f24faeae75369937c64aa384d0f4f216",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile gets copied to $PROJECT/merged/... to allow esc to be\n\n# run more easily while toying with the merged source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/MapQuick/issta-goals/MapQuick/tigerdb/Makefile" : {
      "ObjectId" : "804f60e9f24faeae75369937c64aa384d0f4f216",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile gets copied to $PROJECT/merged/... to allow esc to be\n\n# run more easily while toying with the merged source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/MapQuick/issta-goals/MapQuick1/Makefile" : {
      "ObjectId" : "804f60e9f24faeae75369937c64aa384d0f4f216",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile gets copied to $PROJECT/merged/... to allow esc to be\n\n# run more easily while toying with the merged source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/MapQuick/issta-goals/MapQuick2/Makefile" : {
      "ObjectId" : "804f60e9f24faeae75369937c64aa384d0f4f216",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile gets copied to $PROJECT/merged/... to allow esc to be\n\n# run more easily while toying with the merged source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/MapQuick/issta-goals/junit/Makefile" : {
      "ObjectId" : "804f60e9f24faeae75369937c64aa384d0f4f216",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile gets copied to $PROJECT/merged/... to allow esc to be\n\n# run more easily while toying with the merged source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/MapQuick/issta-goals/junit/framework/Makefile" : {
      "ObjectId" : "804f60e9f24faeae75369937c64aa384d0f4f216",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile gets copied to $PROJECT/merged/... to allow esc to be\n\n# run more easily while toying with the merged source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/QueueAr/Makefile" : {
      "ObjectId" : "a6145a804f3014d7fbbdf5275b7de10a3dea490e",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MAIN_CLASS:=DataStructures.QueueArTesterOrig # for esc-annotate-paper\n\n#MAIN_CLASS:=DataStructures.QueueArTesterPlus # for esc-annotate-paper\n\n#MAIN_CLASS:=DataStructures.QueueArTesterAug  # improved testsuite for cluster Analysis\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To create implications, do \"mv cluster-spinfo cluster.spinfo\" and uncomment:\n\n# USER_DAIKON_OPTIONS := --config_option daikon.PptTopLevel.pairwise_implications=true\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# USER_DAIKON_OPTIONS := --ppt-select-pattern=\"^DataStructures\\.QueueAr[:\\.][:d]\"\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/daikon-tests/RatNum/Makefile" : {
      "ObjectId" : "72c4344ea90bb98264da350aa2f46dbbd151be09",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To toggle original / edited test suite, edit the use_original flag\n\n# in PolyCalc/PublicTest.java\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MAIN_CLASS:=PolyCalc.PublicTestAug\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/daikon-tests/RatPoly/Makefile" : {
      "ObjectId" : "251dee351f8defcf13e3ee8d6491ede4016aa29b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To toggle original / edited test suite, edit the use_original flag\n\n# in PolyCalc/PublicTest.java\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MAIN_CLASS:=PolyCalc.PublicTestAug\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# USER_DAIKON_OPTIONS:=--var_omit_pattern=\".*wrapped.*\"\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# USER_DAIKON_OPTIONS:=--ppt-select-pattern=\"^Rat\" --config config.txt\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Don't check RatNum, as we already have in another e.g.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 32:23 token recognition error at: '\"\\b'\nline 33:24 token recognition error at: '\\b'\nline 33:33 token recognition error at: '\" ${PROJECT_FILE}.spinfo\\n\u0000'\n"
    },
    "tests/daikon-tests/RatPolyStack/Makefile" : {
      "ObjectId" : "355f001460266e79542b417bb0505d543f80fcdd",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/RatTermVec/Makefile" : {
      "ObjectId" : "784d36f7c0467e9387fb85d50729aad66ce0424e",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/Smithnosky/Makefile" : {
      "ObjectId" : "7c1b650ccd42e1f7ced3b3218834a0d7a81864b2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ESC_ON:=1\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#instrument-files-revise:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/StackAr/Makefile" : {
      "ObjectId" : "a0dd42f2d1bc5b23aaa8e2a6e59fb514208cee46",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MAIN_CLASS:=DataStructures.StackArTesterOrig # for esc-annotate-paper\n\n#MAIN_CLASS:=DataStructures.StackArTesterPlus # for esc-annotate-paper\n\n#MAIN_CLASS:=DataStructures.StackArTesterAug  #improved test suite for clustering\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#INSTRUMENT:=explicit\n\n#INSTR_FILES:=DataStructures/StackAr.java\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# INSTRUMENT_OBSERVERS:=1\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#CHICORY_USER_FLAGS = --purity-file=/scratch2/jhp/tmp/kuzmina/stack.pure\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/daikon-tests/StaticInteresting/Makefile" : {
      "ObjectId" : "b5e2a03a7aab877dec3b38573ed63c15e5f0e152",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n\n# Read source code javadoc for what this tests for.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ESC_ON:=0\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/StreetNumberSet/Makefile" : {
      "ObjectId" : "775136b9e5156bb266ba4199df098df1c740f9bf",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Change flag in source/MapQuick/StreetNumberSetTest2.java to toggle\n\n# original / augmented (esc-specs paper)\n\n#MAIN_CLASS:=MapQuick.StreetNumberSetTest2Aug  # improved test suite for clustering\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/TinySet/Makefile" : {
      "ObjectId" : "88650262737c5a15f4cd32ba3f53fe0ab81b61a1",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ESC_ON:=1\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/TreeMap/Makefile" : {
      "ObjectId" : "30e91f40057779f0ee853f0b1fd294a59cea9725",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#DAIKON_OPTIONS:=--noternary\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override default rule; unfortunately, this produces a Makefile warning.\n\n# This overriding is necessary because the main class, testera.Daikon, is\n\n# available only in bytecode, not .java, form.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/daikon-tests/Vector/Makefile" : {
      "ObjectId" : "8dfc3d8a1af63dbe8b95ea9209b4b9b449f18956",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MAIN_CLASS:=javautil.VectorTest\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MAIN_CLASS:=javautil.VectorTestAug\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#USER_CLUSTER_OPTIONS:=-a km -k 5\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/daikon-tests/WeightedNodePath/Makefile" : {
      "ObjectId" : "6f2269f2c05ffa76299f0f315685e04bf34545d5",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# must come after the include to get SOURCES\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/baseline/Makefile" : {
      "ObjectId" : "89f0d0fa72929ca867eaf248e660cfe0d7ae1f7b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Be sure to do 'make clean-output' if you switch this value; make\n\n# doesn't know that a change here means Daikon needs to be re-run.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CALLSITE_GRAIN:=method\n\n#CALLSITE_GRAIN:=class\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Override sources to draw from \".\"\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/daikon-tests/compar/Makefile" : {
      "ObjectId" : "802c9630e82c669058168a933f2591b9b6b2adf4",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/encapsulate_downcast/Makefile" : {
      "ObjectId" : "31dc9e733b75b2faadb7ad077270e93ba79651ed",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#instrument-files-revise:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/fib/Makefile" : {
      "ObjectId" : "e5481518c418ae49202f296361ebe0fbc81e310b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ESC_ON:=1\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/hanoi/Makefile" : {
      "ObjectId" : "214aed005c11bce51e13caea0fb2c56b303c49ad",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/method_sequences/DisjSets/Makefile" : {
      "ObjectId" : "0340c73f39e4eb0148f8790054c54bfd9429f927",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/param/Makefile" : {
      "ObjectId" : "f982b268136f3583c10644ac8f796f3ec2fe8c05",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n\n# Test for handling of parameter variables in method invocations.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/pine_mdiep/Makefile" : {
      "ObjectId" : "19d421a26fa1f3fe17490dcc719b27d7c5ab6129",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Daikon test case from Madeline Hardojo at Nebraska.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#DAIKON_OPTIONS         := $(subst --suppress_redundant,,${DAIKON_OPTIONS})\n\n#USER_DAIKON_OPTIONS    = --config config.txt\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/precedence/Makefile" : {
      "ObjectId" : "382f95a8c4f9e70226183290ce7c6befc55a8a5b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/print_tokens/Makefile" : {
      "ObjectId" : "0d420f78cad250405b9e9c9dd4d9b359b217949f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/print_tokens2/Makefile" : {
      "ObjectId" : "054e674d70ca055875b88b47fb97bf903d76cf80",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/purity/Makefile" : {
      "ObjectId" : "376955f1059e6a6dc559af64a8c40f4ba459d68d",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/redblack/Makefile" : {
      "ObjectId" : "020379bfd408551a78540d83802cd9b67ef991fc",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In mernst's original tests, this example says:\n\n# SKIP THIS: IT DEPENDS ON TREES\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/replace/Makefile" : {
      "ObjectId" : "054e674d70ca055875b88b47fb97bf903d76cf80",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/schedule/Makefile" : {
      "ObjectId" : "054e674d70ca055875b88b47fb97bf903d76cf80",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/schedule2/Makefile" : {
      "ObjectId" : "054e674d70ca055875b88b47fb97bf903d76cf80",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/space/Makefile" : {
      "ObjectId" : "054e674d70ca055875b88b47fb97bf903d76cf80",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/daikon-tests/suppress01/Makefile" : {
      "ObjectId" : "11ddf25f2a541d53deb8192bb0c5f13cdf23aa3f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n\n# Test 1 for suppression.  Tests MemberSuppressionFactory1 and\n\n# SubSequence/SubSet suppression factories.\n\n# If output is correct, we should see\n\n# this.theArray2[this.b] in this.theArray[] but not\n\n# this.theArray[this.b] in this.theArray2[] because\n\n# this.theArray is a subset of this.theArray2.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/suppress02/Makefile" : {
      "ObjectId" : "c35a6ad8750014a91dc0dc585f7730fca2d60c23",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n\n# Test 1 for suppression.  Tests MemberSuppressionFactory1 and\n\n# SubSequence/SubSet suppression factories.\n\n# If output is correct, we should see\n\n# this.theArray2[this.b] in this.theArray[] but not\n\n# this.theArray[this.b] in this.theArray2[] because\n\n# this.theArray is a subset of this.theArray2.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/daikon-tests/tcas/Makefile" : {
      "ObjectId" : "cd3021617456aa2ae4119b7c2265d3ebcdd0de9f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/daikon-tests/tot_info/Makefile" : {
      "ObjectId" : "ec9481bf28c4a9e98f0960556c0b6a1c0b4c1adb",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read Makefile.common for what all of this means\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To turn off Simplify, put this in the project's own Makefile, after\n\n# the \"include ../../Makefile.common\" line.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: config.txt only used because V3 has a memory use problem\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/diff-tests/Makefile" : {
      "ObjectId" : "6f00c54e6938bf1d215c9d1a5457e7dd3ce5fddc",
      "LastModified" : "2018-08-30T14:28:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.common contains the targets for running an individual test.\n\n# This Makefile is a driver for running all the tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HOW TO ADD A DIRECTORY TO THE DIFF REGRESSION TESTS\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 1. Create a directory for the program (myprog).\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 2. Put the following files in the directory: myprog.decls,\n\n# myprog-1.dtrace.gz, myprog-2.dtrace.gz.  Copy the Makefile\n\n# from an existing test directory into the new directory.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 3. Run 'make update-goals', and examine the goal files to make sure\n\n# the output is correct.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 4. Run 'make clean; make', and make sure all the tests are passed.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 5. Run 'make clean'.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 6. Check the directory and remaining files into the repository.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XXX HACK:  must remove \"grep -v StackAr\"\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The regression tests seem to break if the \"@\" is omitted from this line.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/diff-tests/StackAr/Makefile" : {
      "ObjectId" : "609c89e13514e7e6f28524f82ac6ba9ac2d3f1e9",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/diff-tests/schedule2/Makefile" : {
      "ObjectId" : "0a42375f10c5888a545e3434c7728711c92be532",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/Apples/Makefile" : {
      "ObjectId" : "706e913af9a2cde85b5db17d1ee0da445297d50c",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/DerivedComparability/Makefile" : {
      "ObjectId" : "3ac398226b6d013b399bbe7f42bfceea05f7fef1",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/FloatTest/Makefile" : {
      "ObjectId" : "b806bf2a502d34be6efa6be128a92cc9b6a8af3c",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/FunctionParamsTest/Makefile" : {
      "ObjectId" : "d6d875799b8610e82b86e8b76df61ca898ca3698",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/GlibcTest/Makefile" : {
      "ObjectId" : "c22d5d0ac3a59c0e40a8a0c8841e6b95de2e0ce0",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/IntFromFloatTest/Makefile" : {
      "ObjectId" : "db4a98ff53fe9c95b277258188a1d26a32c70624",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/LocalVarTest/Makefile" : {
      "ObjectId" : "4ea83087b3e924cb5b9c4f3dea85f9b814a525f9",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/Logicals/Makefile" : {
      "ObjectId" : "b3e7b37709542c314c1ea7666cd73a6686756610",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/Makefile" : {
      "ObjectId" : "6f5a5ddac5a467f28d7bb44362d720c7d2e9a1f4",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.common contains the targets for running an individual test.\n\n# This Makefile is a driver for running all the tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HOW TO ADD A FILE TO THE REGRESSION TESTSUITE:\n\n# 1. Create a directory for the test (myprog).\n\n# 2. Put the source in the directory (myprog.c).\n\n# 3. Make a Makefile in the directory that sets NAME to myprog and\n\n#    includes ../Makefile.common (for more kinds of customization,\n\n#    look at the other directories' Makefiles).\n\n# 4. Create myprog.{decls,dtrace,out}.goal files in the directory. It's\n\n#    OK if they start out empty; you can update them later with\n\n#    \"make update-goals\".\n\n#\n\n# In this file:\n\n# 5. Put the test into one of the existing categories, or make a new\n\n#    category to contain it.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Forked from $DAIKONDIR/tests/kvasir-tests/Makefile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This target simulates what the nightly build-test does, but note that\n\n# it actually makes the two targets separately (so that it can skip the\n\n# second if Daikon didn't build).\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 'make do-SomeDiectory_target'\n\n# e.g. 'make do-bzip2__clean'\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# removes fields before the size (ie, permissions, owner, group).\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# args to 'find' program, to find files containg results\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7,
      "Errorlog" : "line 87:60 token recognition error at: '\\S'\nline 87:63 token recognition error at: '\\s'\nline 87:66 token recognition error at: '\\S'\nline 87:69 token recognition error at: '\\s'\nline 87:72 token recognition error at: '\\S'\nline 87:75 token recognition error at: '\\s'\nline 87:78 token recognition error at: '\\S'\nline 87:81 token recognition error at: '\\s'\nline 87:85 token recognition error at: '\\d'\nline 87:89 token recognition error at: '\\s'\nline 87:96 token recognition error at: '\\s'\nline 87:100 token recognition error at: '\\S'\nline 102:17 token recognition error at: '\\Q'\n"
    },
    "tests/dyncomp-tests/PointerComp/Makefile" : {
      "ObjectId" : "7537a920a12da1f056113f25de8c193bd5f0d266",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/PricesTest/Makefile" : {
      "ObjectId" : "2c63c69800bcb3c7772969d3a4353220a0091b82",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/PrintfTest/Makefile" : {
      "ObjectId" : "a04e33c5376bd1615b9eabca74ab65df5b6b9271",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/SimpleStructTest/Makefile" : {
      "ObjectId" : "c29dd300fb05411ca720c59680b773d92985cd1e",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/StrcpyTest/Makefile" : {
      "ObjectId" : "132abb2c4ee7dd7d561d4b1bf98a1b1ac3935024",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/dyncomp-tests/WhatIsInteraction/Makefile" : {
      "ObjectId" : "84308c2921566a8199921a59defc3c0834a6274d",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/ArrayTest-cpp/Makefile" : {
      "ObjectId" : "b39b2f15b7e829beededa06b25bfb3dbce7c57de",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/ArrayTest/Makefile" : {
      "ObjectId" : "2698b4333bd8f6a12e791689a428de2bf9e71fb3",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/ArraysInStructTest/Makefile" : {
      "ObjectId" : "99c036793911c2272dd7b805f48efd7a046f4194",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#KVASIR_OPTIONS := --ppt-list-file=ArraysInStructTest.ppt\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/kvasir-tests/CoercePointerTest/Makefile" : {
      "ObjectId" : "bd72fa74a4f275a7e88362e70df54e51e41e62d8",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/ConstMergeTest/Makefile" : {
      "ObjectId" : "71f227301ccba89bf1ad6748f58db955c5878425",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/ConstantTest/Makefile" : {
      "ObjectId" : "2874325dc7c71cdf7f022d438932b00b947352b4",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/CppFunctionTest/Makefile" : {
      "ObjectId" : "c5396194dacdde9d7ccbc8e4270f31e6f0c2c531",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/CppInlineTest/Makefile" : {
      "ObjectId" : "9c5dc22474793060728167f6e0593387a6a842fe",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/DisambigTest/Makefile" : {
      "ObjectId" : "ad9fbb89863510e7c0edc2f386aa7d3b088ea129",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/Dstr/Makefile" : {
      "ObjectId" : "a9c9015454748148c1fff6571b6704ffe84a0044",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/ExceptionTest/Makefile" : {
      "ObjectId" : "df41578e3f6ee359076f4ffe7901ea2b889b4bd3",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/FloatTest/Makefile" : {
      "ObjectId" : "adc52b55eb8e53a01360630d5ee2b3b36a317dd2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/FunctionNamesTest/Makefile" : {
      "ObjectId" : "36bb51c64ba6877834186eddfe2929318c766f24",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/GlobalTest/Makefile" : {
      "ObjectId" : "50b114942fd92312e644ff1ace3c154363908523",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/IntTest/Makefile" : {
      "ObjectId" : "3df102ffe3fe3cf9c21015df530e3d405fda1520",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/Makefile" : {
      "ObjectId" : "d590ebfafcfa66e9b8ab9692255be7b975769e96",
      "LastModified" : "2019-03-26T20:00:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.common contains the targets for running an individual test.\n\n# This Makefile is a driver for running all the tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HOW TO ADD A FILE TO THE REGRESSION TESTSUITE:\n\n# 1. Run make-test.pl $TEST_NAME\n\n# 2. Edit $TEST_NAME/$TEST_NAME.c and edit the Makefile\n\n#    as necessary\n\n# 3. The test suite can be run with \"make\". When the results\n\n#    are correct, you can update the goals with \"make update-goals\"\n\n#\n\n# In this file:\n\n# 4. Put the test into one of the existing categories, or make a new\n\n#    category to contain it.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This target simulates what the nightly build-test does, but note that\n\n# it actually makes the two targets separately (so that it can skip the\n\n# second if Daikon didn't build).\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This target is not used in standard test runs.\n\n# The tests are duplicated in the pgbovine-tests target.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Omits povray and perl\n\n# Omits flex-pristine and bzip2\n\n# Omits flex-rothermel, md5 and space\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gtest won't run on tern do to old software\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# gtest is too big to run on 32 bits\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# bc won't run on tern do to old software\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# gzip won't run on tern do to old software\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# omit povray test; see povray/README for details\n\n# omit flex_pristine test; see flex_pristine/README for details\n\n#medium-real-tests__%: test-gzip__% do-flex-pristine__% do-bzip2__% do-perl__%  do-povray__%  do-tcas__%\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Omits povray and perl\n\n# Omits flex-pristine and bzip2\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# 'make do-SomeDiectory_target'\n\n# e.g. 'make do-bzip2__clean'\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# removes fields before the size (ie, permissions, owner, group).\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# args to 'find' program, to find files containg results\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14,
      "Errorlog" : "line 216:60 token recognition error at: '\\S'\nline 216:63 token recognition error at: '\\s'\nline 216:66 token recognition error at: '\\S'\nline 216:69 token recognition error at: '\\s'\nline 216:72 token recognition error at: '\\S'\nline 216:75 token recognition error at: '\\s'\nline 216:78 token recognition error at: '\\S'\nline 216:81 token recognition error at: '\\s'\nline 216:85 token recognition error at: '\\d'\nline 216:89 token recognition error at: '\\s'\nline 216:96 token recognition error at: '\\s'\nline 216:100 token recognition error at: '\\S'\nline 231:17 token recognition error at: '\\Q'\n"
    },
    "tests/kvasir-tests/MultiDimArrayTest/Makefile" : {
      "ObjectId" : "b714ed35abbf0b297c231ab84b192bef8498d3b6",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/NestedStructTest/Makefile" : {
      "ObjectId" : "a7b0d7b247dc6cbf59aead8df5af7295fc2e235e",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/NestedStructVarList/Makefile" : {
      "ObjectId" : "680b329db8cc7751491b6aa5605722157b6e73ed",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/PointerTest/Makefile" : {
      "ObjectId" : "d5bba74ae135b249d8161f397daa70cc2ff5fc81",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/SelectGlobalsTest/Makefile" : {
      "ObjectId" : "45711366ebc350e855a19af4927b2297d0c178e6",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/SimpleClassesTest/Makefile" : {
      "ObjectId" : "fc1d80ca34c374eb0d8b600bacd8e55a20c64fb8",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/SimpleDisambigStructTest/Makefile" : {
      "ObjectId" : "2f6e223e072b00577ab259e17f4909f741d0cdd9",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/StackArrayCppTest/Makefile" : {
      "ObjectId" : "663ea20a48798817a3b1e73afd839eabeaba7ee2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/StackCppTest/Makefile" : {
      "ObjectId" : "efabe8b83c85cdbbcac925e0633a0c7f4dafe57f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/StackCppTestInline/Makefile" : {
      "ObjectId" : "068954e37b539fb1b6e7d4b734df30ec19494da7",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/StaticArraysTest/Makefile" : {
      "ObjectId" : "f784d533bff73273b2b6af561e6b8d9e19e083a7",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/StructPtrTest/Makefile" : {
      "ObjectId" : "15c52a361f132c870c068422b07eea4792e4e027",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/TrivialTest/Makefile" : {
      "ObjectId" : "3bcb08a5af227e3f63c7f23831d93f818d8c89cc",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/TypedefTest/Makefile" : {
      "ObjectId" : "bb4e8aa2a76107ab97136ba05d4ed6f96440aba3",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/TypesTest/Makefile" : {
      "ObjectId" : "f3e7572db52bf2e1fa710d49fc6778d2753e3b74",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/UnionComp/Makefile" : {
      "ObjectId" : "681a4824c313a594c6644cee1d3f8914df970d2c",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This test contains a union of a char* and ptr*.\n\n# The ptr (next) is assigned an address giving the char* (name) random garbage.\n\n# Hence, the .dtrace file will almost never match.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/kvasir-tests/bc/Makefile" : {
      "ObjectId" : "c3d357851f8e1f805ac2abbd1f6f6ac5a6cd4e59",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/bzip2/Makefile" : {
      "ObjectId" : "fcaa0ec822c2ce5998687ae39410ac8a0a26d87d",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/crazy-test-1/Makefile" : {
      "ObjectId" : "ce4d3f7f3001364bbbb133556f65668c655269a9",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/dtrace-append/Makefile" : {
      "ObjectId" : "894d54505048c0eeb79a4e382fc7b59187f3e548",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/flex-pristine/Makefile" : {
      "ObjectId" : "e547126a635f6e8041904e5b0ccc1ed63bd51a80",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# You can define these to be \"lex\" and \"libl.a\" if you want to replace\n\n# lex at your site.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# which \"flex\" to use to generate scan.c from scan.l\n\n# For reproducibility, use our own version of flex to make scan.c. To\n\n# avoid bootstrapping problems, we keep the output in CVS, and there\n\n# shouldn't often be a need to rerun it.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To rebuild parse.c and parse.h, use the rule above\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To rebuild scan.c, use the rule above\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/kvasir-tests/flex-rothermel/Makefile" : {
      "ObjectId" : "cd1af02858635d770ce9cfb58e91a8cfd251274f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/function-pointer/Makefile" : {
      "ObjectId" : "7b11003f21c6b2d31d622d55a9952554329d5dd2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/gtest/Makefile" : {
      "ObjectId" : "dd94c488e7d831faf18ee986e90991cdbf5a1a91",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# dtrace file contains timing variables and is very large\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# inv file contains timing variables and current directory dependancies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# counts file contains a current directory dependancy\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/kvasir-tests/gzip/Makefile" : {
      "ObjectId" : "b4fcc7b6e0a3bf9ac896a7473e96127eddf43173",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# COMPRESS_DTRACE := 1\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#default: summary\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/kvasir-tests/inline-func/Makefile" : {
      "ObjectId" : "c974e3ede60519d00c2dbedca2f7421493709238",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/iostream-interact/Makefile" : {
      "ObjectId" : "0310797da412743990ffdb1fc627d1107299610c",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/local-ptr/Makefile" : {
      "ObjectId" : "030aca1ed501cd78adad3c1b9fb22b645e2bfdd2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/md5/Makefile" : {
      "ObjectId" : "9cb3273a2b05236e3ffa7aa5f74e2d61eaeeeb25",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/partial-init/Makefile" : {
      "ObjectId" : "b8afd2d30d94b222f380c23c3a12bcf0674706b2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/perl/Makefile" : {
      "ObjectId" : "fc73732a930baa2b604d654b334361adf11301f5",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# PROGRAM_ARGS := -e 'print \"Hello, world!\\n\"'\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# COMPRESS_DTRACE := 1\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/kvasir-tests/pointer-levels/Makefile" : {
      "ObjectId" : "8b8b7fde25aca859206957c804c2d045e51294eb",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/povray/Makefile" : {
      "ObjectId" : "8b381882e93c0a8ceea5fb8bd1494a881bebf0f1",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/povray/source/Makefile.am" : {
      "ObjectId" : "797f37e77300606da28fff68c865b742f3d61a8a",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directories.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Directories to build.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Additional files to distribute.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Additional files to clean with 'make distclean'.\n\n# Note the little ';' trick for CONFIG_CLEAN_FILES.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Render a test scene for 'make check'.\n\n# This is meant to run before 'make install'.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install scripts in povlibdir.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install documentation in povdocdir.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Install configuration and INI files in povconfdir.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install man page.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Remove all unwanted files in unix and libraries for 'make dist'.\n\n# Make all files user read-writeable.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Manage various data files for 'make install'.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For 'make uninstall' we remove the whole POV-Ray data directory.\n\n# We have to use uninstall-local and not uninstall-data-local.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tests/kvasir-tests/povray/source/libraries/Makefile.am" : {
      "ObjectId" : "3a8e9fd7c153ab2cb612dbe5e80dba46be8a37f1",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Libraries to build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries to clean with 'make distclean'.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Don't recurse in the subdirectories for 'make maintainer-clean'\n\n# since some libraries might not have this target (e.g. libtiff).\n\n# These subdirectories should be cleaned first by 'make clean'.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create an empty target for 'make dist'; ignore automake warning about it.\n\n# The whole directory is distributed through EXTRA_DIST at the top level.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Replaces the install target for 'make install'.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Creates an empty install target for 'make uninstall'.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Don't recurse in the subdirectories for 'make check'.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tests/kvasir-tests/povray/source/libraries/png/Makefile.am" : {
      "ObjectId" : "c5153269e740424f7a3497de0c9f9ca3f7b7bf1f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Libraries to build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/kvasir-tests/povray/source/libraries/zlib/Makefile.am" : {
      "ObjectId" : "44a4e78d9f7cac4b0bf11c8aa56caa3d5ac6e889",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Libraries to build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/kvasir-tests/povray/source/source/Makefile.am" : {
      "ObjectId" : "08b7d0a86cdd4dc33ac01e7022455e40f804ed6f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Directories to build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries to build.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Source files.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths for headers.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/kvasir-tests/povray/source/source/base/Makefile.am" : {
      "ObjectId" : "6d0e0e2d36d9f74d850f7f8122ee80b782dd4a8b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Libraries to build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include paths for headers.\n\n# INCZ and INCPNG required in case \"png.h\" is included in config.h.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/kvasir-tests/povray/source/source/frontend/Makefile.am" : {
      "ObjectId" : "9f92031e13c03aa583eec8d5465fb23db0b5d485",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Libraries to build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include paths for headers.\n\n# INCZ and INCPNG required in case \"png.h\" is included in config.h.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/kvasir-tests/povray/source/unix/Makefile.am" : {
      "ObjectId" : "75ef7a03ac584263f344e42ac58f2cb4949d83b5",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n#               Makefile.am\n\n#\n\n# Process this file with automake to produce Makefile.in\n\n#\n\n# from Persistence of Vision(tm) Ray Tracer version 3.6.\n\n# Copyright 1991-2003 Persistence of Vision Team\n\n# Copyright 2003-2004 Persistence of Vision Raytracer Pty. Ltd.\n\n#---------------------------------------------------------------------------\n\n# NOTICE: This source code file is provided so that users may experiment\n\n# with enhancements to POV-Ray and to port the software to platforms other\n\n# than those supported by the POV-Ray developers. There are strict rules\n\n# regarding how you are permitted to use this file. These rules are contained\n\n# in the distribution and derivative versions licenses which should have been\n\n# provided with this file.\n\n#\n\n# These licences may be found online, linked from the end-user license\n\n# agreement that is located at http://www.povray.org/povlegal.html\n\n#---------------------------------------------------------------------------\n\n# This program is based on the popular DKB raytracer version 2.12.\n\n# DKBTrace was originally written by David K. Buck.\n\n# DKBTrace Ver 2.0-2.12 were written by David K. Buck & Aaron A. Collins.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile.am for the source distribution of POV-Ray 3.6 for UNIX\n\n# Written by Nicolas Calimet <pov4grasp@free.fr>\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Programs to build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extra definitions for compiling.\n\n# They cannot be placed in conf.h since they indirectly rely on $prefix.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths for headers.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Libraries to link with.\n\n# libtiff and libpng must come before libz.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/kvasir-tests/print_tokens/Makefile" : {
      "ObjectId" : "6ff1b86b02be45850a443d5446e6e557e6898d8b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/print_tokens2/Makefile" : {
      "ObjectId" : "e086c0fe5cbf01799c241516af694d1d828b685c",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/printf-interact/Makefile" : {
      "ObjectId" : "636efa49fe0581f00264f489fdfe41a9aa581d75",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/pthread-test/Makefile" : {
      "ObjectId" : "bd7b16693c8ffdd5d083d5811913ec2ea605e3fb",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This test runs two threads and their order is non-deterministic.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/kvasir-tests/rdtsc/Makefile" : {
      "ObjectId" : "6a89f79a823d734f20292f46d03a8669ae9fb4e4",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/replace/Makefile" : {
      "ObjectId" : "49b1849c97fa9a48bbba51429de0616c83ab3dbb",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/rijndael/Makefile" : {
      "ObjectId" : "84a5d571dfb2b70b9e6b9036436d12f611ef6844",
      "LastModified" : "2017-12-06T14:14:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/setjmp-test/Makefile" : {
      "ObjectId" : "400b3afc7c9141f2d438f271bc03b87734103c1b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/shared-lib/Makefile" : {
      "ObjectId" : "69b51d64fbdbeeeb1066296660fe715b97a64b33",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/small-test/Makefile" : {
      "ObjectId" : "73451f290f8ded934cc0b56a97b83bcbad1cdbb5",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/space/Makefile" : {
      "ObjectId" : "1a5fb863cfef86ce21bef98accaf3839cc890c10",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/static-struct/Makefile" : {
      "ObjectId" : "98bec84535cee0c3eed3924b9ee070f310dbf7d2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/string-arrays/Makefile" : {
      "ObjectId" : "64157d6d70169f553ea2544162a4ca6c92a0cb5d",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/tcas/Makefile" : {
      "ObjectId" : "1fb41acd2ed464b45dbba03f2936b5b407abf959",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/tot_info/Makefile" : {
      "ObjectId" : "bb9551fcb633965eeb1eaea652135864a3755f3b",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/two-statics/Makefile" : {
      "ObjectId" : "bbd08531043d280b1a62204b180f76e3e6119cb6",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/virtual-method/Makefile" : {
      "ObjectId" : "6fb89c80b26ca881959d4e4863608434dae9b0c2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/kvasir-tests/wordplay/Makefile" : {
      "ObjectId" : "01d529ac7d7f088792573818e61f01a93640987f",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/merge-invariants-tests/Makefile" : {
      "ObjectId" : "8fe785af5922c7a7b48a4425825d2ac305993fc4",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/merge-invariants-tests/drawlet/Makefile" : {
      "ObjectId" : "631244997f30a0afceea86ca10af55766cd130e3",
      "LastModified" : "2019-03-26T20:00:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile that tests MergeInvariants on tracefiles created for the\n\n# drawlet program (from Laurentiu Radu Vanciu <radu@wayne.edu>).  This\n\n# should be modified into a Makefile.common if we ever create another\n\n# program to test.\n\n#\n\n# Note that we are just using the trace files and not rerunning chicory\n\n# to recreate them.  If we should need to recreate them, the source\n\n# files are in drawlet_src.zip in this directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DAIKONDIR is the clone of the 'daikon' project.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the merged version of the invariant file from the individual inv files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the combined inv file directly from the trace files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Test targets\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Options for testing\n\n#\n\n#PPT_OPTION\t= '--ppt-select-pattern=defaultHandleSize|CanvasHandle:::CLASS'\n\n#DEBUG_OPTION := --dbg daikon.print\n\n#DEBUG_OPTION := $(DEBUG_OPTION) --dbg daikon.Progress\n\n#TRACK_OPTION = --track 'LowerBound<com.rolemodelsoft.drawlet.basics.CanvasHandle.HANDLE_SIZE>@defaultHandleSize'\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Run Daikon on all three input trace files\n\n# Note that this puts the output invariant file in test.inv.gz so it doesn't\n\n# overwrite the correct invariant file\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# run PrintInvariants on the merge invariant file\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# run MergeInvariants on the three inv files\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# run Daikon on the first dtrace file\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# run Daikon on the second dtrace file\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tests/parser-tests/Makefile" : {
      "ObjectId" : "790a0dc0d00f0472138d260066ddf731da200d99",
      "LastModified" : "2019-03-26T20:00:31Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/script-tests/trace-add-nonces/Makefile" : {
      "ObjectId" : "27e3b90d1e413a93216cf2b7004891e047a61afa",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tools/hierarchical/Makefile" : {
      "ObjectId" : "fe3aa9560dc262945c09f0de70336b2a88b1dcd2",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# all: difftbl cluster den denxview clgroup\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/kmeans/Makefile" : {
      "ObjectId" : "214329b2a10e6ed42f3d3123d8f223d8dfec9bb5",
      "LastModified" : "2016-04-02T23:10:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 206,
    "AUTOMAKE" : 8
  },
  "ElapsedTime" : 18824
}