{
  "Repository" : "30401163",
  "Revision" : "HEAD",
  "ObjectId" : "8f4b773b515cb3b5c0ddfe250c65e96fb3fbc7cc",
  "CommitTime" : "2019-04-17T21:31:30Z",
  "Files" : {
    "atools.pro" : {
      "ObjectId" : "7c99e6bbe5e64a998dd92b87d69a11c37700eab6",
      "LastModified" : "2019-04-17T21:31:30Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#*****************************************************************************\n\n# Copyright 2015-2019 Alexander Barthel alex@littlenavmap.org\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#****************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# =============================================================================\n\n# Set these environment variables for configuration - do not change this .pro file\n\n# =============================================================================\n\n#\n\n# ATOOLS_GIT_PATH\n\n# Optional. Path to GIT executable. Revision will be set to \"UNKNOWN\" if not set.\n\n# Uses \"git\" on macOS and Linux as default if not set.\n\n# Example: \"C:\\Git\\bin\\git\"\n\n#\n\n# ATOOLS_SIMCONNECT_PATH\n\n# Path to SimConnect SDK. SimConnect support will be omitted in build if not set.\n\n# Example: \"C:\\Program Files (x86)\\Microsoft Games\\Microsoft Flight Simulator X SDK\\SDK\\Core Utilities Kit\\SimConnect SDK\"\n\n#\n\n# ATOOLS_QUIET\n\n# Optional. Set this to \"true\" to avoid qmake messages.\n\n#\n\n# ATOOLS_NO_FS\n\n# Optional. Set this to \"true\" to omit all flight simulator code if not needed.\n\n# Reduces compilation time.\n\n#\n\n# This project has no deploy or install target. The include and library should\n\n# be used directly from the source tree.\n\n#\n\n# =============================================================================\n\n# End of configuration documentation\n\n# =============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# =======================================================================\n\n# Copy ennvironment variables into qmake variables\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# =======================================================================\n\n# Set compiler flags and paths\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 75:36 token recognition error at: '\"\\i'\nline 76:30 token recognition error at: '\\l'\nline 76:34 token recognition error at: '\\S'\nline 265:28 token recognition error at: '\") {\\nHEADERS += \\\\n  src/fs/ap/airportloader.h \\\\n  src/fs/bgl/ap/airport.h \\\\n  src/fs/bgl/ap/approach.h \\\\n  src/fs/bgl/ap/approachleg.h \\\\n  src/fs/bgl/ap/approachtypes.h \\\\n  src/fs/bgl/ap/apron.h \\\\n  src/fs/bgl/ap/apron2.h \\\\n  src/fs/bgl/ap/apronedgelight.h \\\\n  src/fs/bgl/ap/com.h \\\\n  src/fs/bgl/ap/del/deleteairport.h \\\\n  src/fs/bgl/ap/del/deletecom.h \\\\n  src/fs/bgl/ap/del/deleterunway.h \\\\n  src/fs/bgl/ap/del/deletestart.h \\\\n  src/fs/bgl/ap/fence.h \\\\n  src/fs/bgl/ap/helipad.h \\\\n  src/fs/bgl/ap/jetway.h \\\\n  src/fs/bgl/ap/parking.h \\\\n  src/fs/bgl/ap/rw/runway.h \\\\n  src/fs/bgl/ap/rw/runwayapplights.h \\\\n  src/fs/bgl/ap/rw/runwayend.h \\\\n  src/fs/bgl/ap/rw/runwayvasi.h \\\\n  src/fs/bgl/ap/start.h \\\\n  src/fs/bgl/ap/taxipath.h \\\\n  src/fs/bgl/ap/taxipoint.h \\\\n  src/fs/bgl/ap/transition.h \\\\n  src/fs/bgl/bglbase.h \\\\n  src/fs/bgl/bglfile.h \\\\n  src/fs/bgl/bglposition.h \\\\n  src/fs/bgl/boundary.h \\\\n  src/fs/bgl/boundarysegment.h \\\\n  src/fs/bgl/converter.h \\\\n  src/fs/bgl/header.h \\\\n  src/fs/bgl/nav/airwaysegment.h \\\\n  src/fs/bgl/nav/airwaywaypoint.h \\\\n  src/fs/bgl/nav/dme.h \\\\n  src/fs/bgl/nav/glideslope.h \\\\n  src/fs/bgl/nav/ils.h \\\\n  src/fs/bgl/nav/ilsvor.h \\\\n  src/fs/bgl/nav/localizer.h \\\\n  src/fs/bgl/nav/marker.h \\\\n  src/fs/bgl/nav/navbase.h \\\\n  src/fs/bgl/nav/ndb.h \\\\n  src/fs/bgl/nav/tacan.h \\\\n  src/fs/bgl/nav/vor.h \\\\n  src/fs/bgl/nav/waypoint.h \\\\n  src/fs/bgl/nl/namelist.h \\\\n  src/fs/bgl/nl/namelistentry.h \\\\n  src/fs/bgl/record.h \\\\n  src/fs/bgl/recordtypes.h \\\\n  src/fs/bgl/section.h \\\\n  src/fs/bgl/sectiontype.h \\\\n  src/fs/bgl/subsection.h \\\\n  src/fs/bgl/util.h \\\\n  src/fs/common/airportindex.h \\\\n  src/fs/common/binarygeometry.h \\\\n  src/fs/common/globereader.h \\\\n  src/fs/common/magdecreader.h \\\\n  src/fs/common/metadatawriter.h \\\\n  src/fs/common/morareader.h \\\\n  src/fs/common/procedurewriter.h \\\\n  src/fs/common/xpgeometry.h \\\\n  src/fs/db/airwayresolver.h \\\\n  src/fs/db/ap/airportfilewriter.h \\\\n  src/fs/db/ap/airportwriter.h \\\\n  src/fs/db/ap/approachlegwriter.h \\\\n  src/fs/db/ap/approachwriter.h \\\\n  src/fs/db/ap/apronlightwriter.h \\\\n  src/fs/db/ap/apronwriter.h \\\\n  src/fs/db/ap/comwriter.h \\\\n  src/fs/db/ap/deleteairportwriter.h \\\\n  src/fs/db/ap/deleteprocessor.h \\\\n  src/fs/db/ap/fencewriter.h \\\\n  src/fs/db/ap/helipadwriter.h \\\\n  src/fs/db/ap/legbasewriter.h \\\\n  src/fs/db/ap/parkingwriter.h \\\\n  src/fs/db/ap/rw/runwayendwriter.h \\\\n  src/fs/db/ap/rw/runwaywriter.h \\\\n  src/fs/db/ap/startwriter.h \\\\n  src/fs/db/ap/taxipathwriter.h \\\\n  src/fs/db/ap/transitionlegwriter.h \\\\n  src/fs/db/ap/transitionwriter.h \\\\n  src/fs/db/databasemeta.h \\\\n  src/fs/db/datawriter.h \\\\n  src/fs/db/dbairportindex.h \\\\n  src/fs/db/meta/bglfilewriter.h \\\\n  src/fs/db/meta/sceneryareawriter.h \\\\n  src/fs/db/nav/airwaysegmentwriter.h \\\\n  src/fs/db/nav/boundarywriter.h \\\\n  src/fs/db/nav/ilswriter.h \\\\n  src/fs/db/nav/markerwriter.h \\\\n  src/fs/db/nav/ndbwriter.h \\\\n  src/fs/db/nav/tacanwriter.h \\\\n  src/fs/db/nav/vorwriter.h \\\\n  src/fs/db/nav/waypointwriter.h \\\\n  src/fs/db/routeedgewriter.h \\\\n  src/fs/db/runwayindex.h \\\\n  src/fs/db/writerbase.h \\\\n  src/fs/db/writerbasebasic.h \\\\n  src/fs/dfd/dfdcompiler.h \\\\n  src/fs/fspaths.h \\\\n  src/fs/lb/logbook.h \\\\n  src/fs/lb/logbookentry.h \\\\n  src/fs/lb/logbookentryfilter.h \\\\n  src/fs/lb/logbookloader.h \\\\n  src/fs/lb/types.h \\\\n  src/fs/navdatabase.h \\\\n  src/fs/navdatabaseerrors.h \\\\n  src/fs/navdatabaseoptions.h \\\\n  src/fs/navdatabaseprogress.h \\\\n  src/fs/ns/navserver.h \\\\n  src/fs/ns/navservercommon.h \\\\n  src/fs/ns/navserverworker.h \\\\n  src/fs/online/onlinedatamanager.h \\\\n  src/fs/online/onlinetypes.h \\\\n  src/fs/online/statustextparser.h \\\\n  src/fs/online/whazzuptextparser.h \\\\n  src/fs/perf/aircraftperf.h \\\\n  src/fs/perf/aircraftperfconstants.h \\\\n  src/fs/perf/aircraftperfhandler.h \\\\n  src/fs/pln/flightplan.h \\\\n  src/fs/pln/flightplanconstants.h \\\\n  src/fs/pln/flightplanentry.h \\\\n  src/fs/pln/flightplanio.h \\\\n  src/fs/progresshandler.h \\\\n  src/fs/sc/connecthandler.h \\\\n  src/fs/sc/datareaderthread.h \\\\n  src/fs/sc/simconnectaircraft.h \\\\n  src/fs/sc/simconnectapi.h \\\\n  src/fs/sc/simconnectdata.h \\\\n  src/fs/sc/simconnectdatabase.h \\\\n  src/fs/sc/simconnectdummy.h \\\\n  src/fs/sc/simconnecthandler.h \\\\n  src/fs/sc/simconnectreply.h \\\\n  src/fs/sc/simconnecttypes.h \\\\n  src/fs/sc/simconnectuseraircraft.h \\\\n  src/fs/sc/weatherrequest.h \\\\n  src/fs/sc/xpconnecthandler.h \\\\n  src/fs/scenery/addoncfg.h \\\\n  src/fs/scenery/addoncomponent.h \\\\n  src/fs/scenery/addonpackage.h \\\\n  src/fs/scenery/fileresolver.h \\\\n  src/fs/scenery/sceneryarea.h \\\\n  src/fs/scenery/scenerycfg.h \\\\n  src/fs/userdata/userdatamanager.h \\\\n  src/fs/util/coordinates.h \\\\n  src/fs/util/fsutil.h \\\\n  src/fs/util/morsecode.h \\\\n  src/fs/util/tacanfrequencies.h \\\\n  src/fs/weather/metar.h \\\\n  src/fs/weather/metarparser.h \\\\n  src/fs/weather/weathernetdownload.h \\\\n  src/fs/weather/weathernetsingle.h \\\\n  src/fs/weather/weathertypes.h \\\\n  src/fs/weather/xpweatherreader.h \\\\n  src/fs/xp/airwaypostprocess.h \\\\n  src/fs/xp/scenerypacks.h \\\\n  src/fs/xp/xpairportwriter.h \\\\n  src/fs/xp/xpairspacewriter.h \\\\n  src/fs/xp/xpairwaywriter.h \\\\n  src/fs/xp/xpcifpwriter.h \\\\n  src/fs/xp/xpconstants.h \\\\n  src/fs/xp/xpdatacompiler.h \\\\n  src/fs/xp/xpfixwriter.h \\\\n  src/fs/xp/xpnavwriter.h \\\\n  src/fs/xp/xpwriter.h\\n\\nSOURCES += \\\\n  src/fs/ap/airportloader.cpp \\\\n  src/fs/bgl/ap/airport.cpp \\\\n  src/fs/bgl/ap/approach.cpp \\\\n  src/fs/bgl/ap/approachleg.cpp \\\\n  src/fs/bgl/ap/approachtypes.cpp \\\\n  src/fs/bgl/ap/apron.cpp \\\\n  src/fs/bgl/ap/apron2.cpp \\\\n  src/fs/bgl/ap/apronedgelight.cpp \\\\n  src/fs/bgl/ap/com.cpp \\\\n  src/fs/bgl/ap/del/deleteairport.cpp \\\\n  src/fs/bgl/ap/del/deletecom.cpp \\\\n  src/fs/bgl/ap/del/deleterunway.cpp \\\\n  src/fs/bgl/ap/del/deletestart.cpp \\\\n  src/fs/bgl/ap/fence.cpp \\\\n  src/fs/bgl/ap/helipad.cpp \\\\n  src/fs/bgl/ap/jetway.cpp \\\\n  src/fs/bgl/ap/parking.cpp \\\\n  src/fs/bgl/ap/rw/runway.cpp \\\\n  src/fs/bgl/ap/rw/runwayapplights.cpp \\\\n  src/fs/bgl/ap/rw/runwayend.cpp \\\\n  src/fs/bgl/ap/rw/runwayvasi.cpp \\\\n  src/fs/bgl/ap/start.cpp \\\\n  src/fs/bgl/ap/taxipath.cpp \\\\n  src/fs/bgl/ap/taxipoint.cpp \\\\n  src/fs/bgl/ap/transition.cpp \\\\n  src/fs/bgl/bglbase.cpp \\\\n  src/fs/bgl/bglfile.cpp \\\\n  src/fs/bgl/bglposition.cpp \\\\n  src/fs/bgl/boundary.cpp \\\\n  src/fs/bgl/boundarysegment.cpp \\\\n  src/fs/bgl/converter.cpp \\\\n  src/fs/bgl/header.cpp \\\\n  src/fs/bgl/nav/airwaysegment.cpp \\\\n  src/fs/bgl/nav/airwaywaypoint.cpp \\\\n  src/fs/bgl/nav/dme.cpp \\\\n  src/fs/bgl/nav/glideslope.cpp \\\\n  src/fs/bgl/nav/ils.cpp \\\\n  src/fs/bgl/nav/ilsvor.cpp \\\\n  src/fs/bgl/nav/localizer.cpp \\\\n  src/fs/bgl/nav/marker.cpp \\\\n  src/fs/bgl/nav/navbase.cpp \\\\n  src/fs/bgl/nav/ndb.cpp \\\\n  src/fs/bgl/nav/tacan.cpp \\\\n  src/fs/bgl/nav/vor.cpp \\\\n  src/fs/bgl/nav/waypoint.cpp \\\\n  src/fs/bgl/nl/namelist.cpp \\\\n  src/fs/bgl/nl/namelistentry.cpp \\\\n  src/fs/bgl/record.cpp \\\\n  src/fs/bgl/recordtypes.cpp \\\\n  src/fs/bgl/section.cpp \\\\n  src/fs/bgl/sectiontype.cpp \\\\n  src/fs/bgl/subsection.cpp \\\\n  src/fs/bgl/util.cpp \\\\n  src/fs/common/airportindex.cpp \\\\n  src/fs/common/binarygeometry.cpp \\\\n  src/fs/common/globereader.cpp \\\\n  src/fs/common/magdecreader.cpp \\\\n  src/fs/common/metadatawriter.cpp \\\\n  src/fs/common/morareader.cpp \\\\n  src/fs/common/procedurewriter.cpp \\\\n  src/fs/common/xpgeometry.cpp \\\\n  src/fs/db/airwayresolver.cpp \\\\n  src/fs/db/ap/airportfilewriter.cpp \\\\n  src/fs/db/ap/airportwriter.cpp \\\\n  src/fs/db/ap/approachlegwriter.cpp \\\\n  src/fs/db/ap/approachwriter.cpp \\\\n  src/fs/db/ap/apronlightwriter.cpp \\\\n  src/fs/db/ap/apronwriter.cpp \\\\n  src/fs/db/ap/comwriter.cpp \\\\n  src/fs/db/ap/deleteairportwriter.cpp \\\\n  src/fs/db/ap/deleteprocessor.cpp \\\\n  src/fs/db/ap/fencewriter.cpp \\\\n  src/fs/db/ap/helipadwriter.cpp \\\\n  src/fs/db/ap/legbasewriter.cpp \\\\n  src/fs/db/ap/parkingwriter.cpp \\\\n  src/fs/db/ap/rw/runwayendwriter.cpp \\\\n  src/fs/db/ap/rw/runwaywriter.cpp \\\\n  src/fs/db/ap/startwriter.cpp \\\\n  src/fs/db/ap/taxipathwriter.cpp \\\\n  src/fs/db/ap/transitionlegwriter.cpp \\\\n  src/fs/db/ap/transitionwriter.cpp \\\\n  src/fs/db/databasemeta.cpp \\\\n  src/fs/db/datawriter.cpp \\\\n  src/fs/db/dbairportindex.cpp \\\\n  src/fs/db/meta/bglfilewriter.cpp \\\\n  src/fs/db/meta/sceneryareawriter.cpp \\\\n  src/fs/db/nav/airwaysegmentwriter.cpp \\\\n  src/fs/db/nav/boundarywriter.cpp \\\\n  src/fs/db/nav/ilswriter.cpp \\\\n  src/fs/db/nav/markerwriter.cpp \\\\n  src/fs/db/nav/ndbwriter.cpp \\\\n  src/fs/db/nav/tacanwriter.cpp \\\\n  src/fs/db/nav/vorwriter.cpp \\\\n  src/fs/db/nav/waypointwriter.cpp \\\\n  src/fs/db/routeedgewriter.cpp \\\\n  src/fs/db/runwayindex.cpp \\\\n  src/fs/db/writerbasebasic.cpp \\\\n  src/fs/dfd/dfdcompiler.cpp \\\\n  src/fs/fspaths.cpp \\\\n  src/fs/lb/logbook.cpp \\\\n  src/fs/lb/logbookentry.cpp \\\\n  src/fs/lb/logbookentryfilter.cpp \\\\n  src/fs/lb/logbookloader.cpp \\\\n  src/fs/lb/types.cpp \\\\n  src/fs/navdatabase.cpp \\\\n  src/fs/navdatabaseerrors.cpp \\\\n  src/fs/navdatabaseoptions.cpp \\\\n  src/fs/navdatabaseprogress.cpp \\\\n  src/fs/ns/navserver.cpp \\\\n  src/fs/ns/navservercommon.cpp \\\\n  src/fs/ns/navserverworker.cpp \\\\n  src/fs/online/onlinedatamanager.cpp \\\\n  src/fs/online/onlinetypes.cpp \\\\n  src/fs/online/statustextparser.cpp \\\\n  src/fs/online/whazzuptextparser.cpp \\\\n  src/fs/perf/aircraftperf.cpp \\\\n  src/fs/perf/aircraftperfconstants.cpp \\\\n  src/fs/perf/aircraftperfhandler.cpp \\\\n  src/fs/pln/flightplan.cpp \\\\n  src/fs/pln/flightplanconstants.cpp \\\\n  src/fs/pln/flightplanentry.cpp \\\\n  src/fs/pln/flightplanio.cpp \\\\n  src/fs/progresshandler.cpp \\\\n  src/fs/sc/connecthandler.cpp \\\\n  src/fs/sc/datareaderthread.cpp \\\\n  src/fs/sc/simconnectaircraft.cpp \\\\n  src/fs/sc/simconnectapi.cpp \\\\n  src/fs/sc/simconnectdata.cpp \\\\n  src/fs/sc/simconnectdatabase.cpp \\\\n  src/fs/sc/simconnectdummy.cpp \\\\n  src/fs/sc/simconnecthandler.cpp \\\\n  src/fs/sc/simconnectreply.cpp \\\\n  src/fs/sc/simconnectuseraircraft.cpp \\\\n  src/fs/sc/weatherrequest.cpp \\\\n  src/fs/sc/xpconnecthandler.cpp \\\\n  src/fs/scenery/addoncfg.cpp \\\\n  src/fs/scenery/addoncomponent.cpp \\\\n  src/fs/scenery/addonpackage.cpp \\\\n  src/fs/scenery/fileresolver.cpp \\\\n  src/fs/scenery/sceneryarea.cpp \\\\n  src/fs/scenery/scenerycfg.cpp \\\\n  src/fs/userdata/userdatamanager.cpp \\\\n  src/fs/util/coordinates.cpp \\\\n  src/fs/util/fsutil.cpp \\\\n  src/fs/util/morsecode.cpp \\\\n  src/fs/util/tacanfrequencies.cpp \\\\n  src/fs/weather/metar.cpp \\\\n  src/fs/weather/metarparser.cpp \\\\n  src/fs/weather/weathernetdownload.cpp \\\\n  src/fs/weather/weathernetsingle.cpp \\\\n  src/fs/weather/weathertypes.cpp \\\\n  src/fs/weather/xpweatherreader.cpp \\\\n  src/fs/xp/airwaypostprocess.cpp \\\\n  src/fs/xp/scenerypacks.cpp \\\\n  src/fs/xp/xpairportwriter.cpp \\\\n  src/fs/xp/xpairspacewriter.cpp \\\\n  src/fs/xp/xpairwaywriter.cpp \\\\n  src/fs/xp/xpcifpwriter.cpp \\\\n  src/fs/xp/xpconstants.cpp \\\\n  src/fs/xp/xpdatacompiler.cpp \\\\n  src/fs/xp/xpfixwriter.cpp \\\\n  src/fs/xp/xpnavwriter.cpp \\\\n  src/fs/xp/xpwriter.cpp\\n}\\n\\nRESOURCES += \\\\n  atools.qrc\\n\\nOTHER_FILES += \\\\n  resources/sql/fs/db/README.txt \\\\n  *.ts \\\\n  BUILD.txt \\\\n  CHANGELOG.txt \\\\n  LICENSE.txt \\\\n  README.txt \\\\n  uncrustify.cfg\\n\\nTRANSLATIONS = \\\\n  atools_de.ts \\\\n  atools_es.ts \\\\n  atools_fr.ts \\\\n  atools_it.ts \\\\n  atools_nl.ts \\\\n  atools_pt_BR.ts\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "QMAKE" : 1
  },
  "ElapsedTime" : 985
}