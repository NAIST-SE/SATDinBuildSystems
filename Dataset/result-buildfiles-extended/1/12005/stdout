{
  "Repository" : "12005",
  "Revision" : "HEAD",
  "ObjectId" : "3c14f0cb9510c60502821bfd7adb22e795540479",
  "CommitTime" : "2019-03-11T21:35:54Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d1d42729713d9da034db79672895368726f34f8b",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# emacs: -*- CMake -*-\n\n# kate: replace-tabs off; tab-width 4; indent-width 4; tab-indents true; indent-mode normal\n\n# vim: ts=4:sw=4:noexpandtab\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project name\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ensure a minimal version of CMake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# additional CMake modules\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# testing and defines\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt and Qwt\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Zeroconf\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Aseba itself\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Must be bumped for incompatible ABI changes\n",
        "Line" : 52,
        "CharPositionInLine" : 25
      },
      "9" : {
        "Text" : "# Examples for developers\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Unit tests\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# User entries\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CMakeModules/Find7Z.cmake" : {
      "ObjectId" : "86ac794e9de2b2b5b57ba418453dab1fded594b6",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 7zr(.exe) only supports 7z archives, while 7z(.exe) and 7za(.exe)\n\n# additionally support many other formats (eg zip)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SEVENZIP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindDNSSD.cmake" : {
      "ObjectId" : "e895a97fc559252fad35c009d53b5e060a30d12b",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2011 Stefan Eilemann <eile@eyescale.ch>\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are met:\n\n#\n\n#  - Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#  - Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  - Neither the name of Eyescale Software GmbH nor the names of its\n\n#    contributors may be used to endorse or promote products derived from this\n\n#    software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n#  POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#==================================\n\n#\n\n# - Find ZeroConf headers\n\n#\n\n#==================================\n\n#\n\n# The following environment variables are respected for finding Dnssd.\n\n# CMAKE_PREFIX_PATH can also be used for this (see find_library() CMake\n\n# documentation).\n\n#\n\n#    DNSSD_ROOT\n\n#\n\n# This module defines the following output variables:\n\n#\n\n#    DNSSD_FOUND - Was Dnssd and all of the specified components found?\n\n#\n\n#    DNSSD_INCLUDE_DIRS - Where to find the headers\n\n#\n\n#    DNSSD_LIBRARIES - The Dnssd libraries\n\n#\n\n#==================================\n\n# Example Usage:\n\n#\n\n#  find_package(DNSSD REQUIRED)\n\n#  include_directories(${DNSSD_INCLUDE_DIRS})\n\n#\n\n#  add_executable(foo foo.cc)\n\n#  target_link_libraries(foo ${DNSSD_LIBRARIES})\n\n#\n\n#==================================\n\n# Naming convention:\n\n#  Local variables of the form _dnssd_foo\n\n#  Output variables of the form DNSSD_FOO\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if(_dnssd_EPIC_FAIL)\n\n#     # Zero out everything, we didn't meet version requirements\n\n#     set(DNSSD_FOUND FALSE)\n\n#     set(_dnssd_LIBRARY)\n\n#     set(_dnssd_INCLUDE_DIR)\n\n# endif()\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindPythonInterp.cmake" : {
      "ObjectId" : "74e8cdd95ed3dfc76dd5708377fc599d6a3b565d",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindPythonInterp\n\n# ----------------\n\n#\n\n# Find python interpreter\n\n#\n\n# This module finds if Python interpreter is installed and determines\n\n# where the executables are.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHONINTERP_FOUND         - Was the Python executable found\n\n#   PYTHON_EXECUTABLE          - path to the Python interpreter\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   PYTHON_VERSION_STRING      - Python version found e.g. 2.5.2\n\n#   PYTHON_VERSION_MAJOR       - Python major version found e.g. 2\n\n#   PYTHON_VERSION_MINOR       - Python minor version found e.g. 5\n\n#   PYTHON_VERSION_PATCH       - Python patch version found e.g. 2\n\n#\n\n#\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list\n\n# of version numbers that should be taken into account when searching\n\n# for Python.  You need to set this variable before calling\n\n# find_package(PythonInterp).\n\n#\n\n# If calling both ``find_package(PythonInterp)`` and\n\n# ``find_package(PythonLibs)``, call ``find_package(PythonInterp)`` first to\n\n# get the currently active Python version by default with a consistent version\n\n# of PYTHON_LIBRARIES.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If FindPythonInterp has already found the major and minor version,\n\n# insert that version next to get consistent versions of the interpreter and\n\n# library.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for the current active python version first\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for newest python version if python executable isn't found\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# determine python version string\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# it's called \"Python 2.7\", not \"2.7.0\"\n",
        "Line" : 122,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# sys.version predates sys.version_info, so use that\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# sys.version was first documented for Python 1.5, so assume\n\n# this is older.\n",
        "Line" : 141,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 10
    },
    "CMakeModules/FindQwt.cmake" : {
      "ObjectId" : "91f6b7ecd77f81f04662521130a23fd98aab213b",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#from https://cmake.org/Wiki/images/2/27/FindQwt.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Widgets for Technical Applications\n\n# available at http://www.http://qwt.sourceforge.net/\n\n#\n\n# The module defines the following variables:\n\n#  QWT_FOUND - the system has Qwt\n\n#  QWT_INCLUDE_DIR - where to find qwt_plot.h\n\n#  QWT_INCLUDE_DIRS - qwt includes\n\n#  QWT_LIBRARY - where to find the Qwt library\n\n#  QWT_LIBRARIES - aditional libraries\n\n#  QWT_MAJOR_VERSION - major version\n\n#  QWT_MINOR_VERSION - minor version\n\n#  QWT_PATCH_VERSION - patch version\n\n#  QWT_VERSION_STRING - version (ex. 5.2.1)\n\n#  QWT_ROOT_DIR - root dir (ex. /usr/local)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2013, Julien Schueller\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The views and conclusions contained in the software and documentation are those\n\n# of the authors and should not be interpreted as representing official policies,\n\n# either expressed or implied, of the FreeBSD Project.\n\n#=============================================================================\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# version\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check version\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to guess root dir from include dir\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to guess root dir from library dir\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindSDL2.cmake" : {
      "ObjectId" : "4792f53a2b09c171e42933a1ecc52ea4af1cb7b3",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "CMakeModules/ParseVersion.cmake" : {
      "ObjectId" : "636ca9e4a040240909e9350928778bf6a934fb21",
      "LastModified" : "2018-03-14T17:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeModules/aseba_conf.cmake" : {
      "ObjectId" : "4f80599100efb312b521d34eb85f4ef82f4e11d8",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the amount of recursive include trash on Windows\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/codesign.cmake" : {
      "ObjectId" : "2bc39a920c78804074946834348ca0ae113ad908",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeModules/cpp_features.cmake" : {
      "ObjectId" : "74eeaea7e2004a0bab22f012092f3cee4bc85c36",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#The cpp_features virtual target defines the set of c++11/14/17 features requiered to build aseba\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# target_compile_features(cpp_features INTERFACE\n\n# \tcxx_auto_type\n\n# \tcxx_aggregate_default_initializers\n\n# \tcxx_relaxed_constexpr\n\n# \tcxx_decltype\n\n# \tcxx_deleted_functions\n\n# \tcxx_inline_namespaces\n\n# \tcxx_noexcept\n\n# \tcxx_nullptr\n\n# \tcxx_override\n\n# \tcxx_range_for\n\n# \tcxx_raw_string_literals\n\n# \tcxx_right_angle_brackets\n\n# \tcxx_return_type_deduction\n\n# \tcxx_strong_enums\n\n# \tcxx_trailing_return_types\n\n# \tcxx_variadic_templates\n\n# \tcxx_uniform_initialization\n\n# )\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/dashel.cmake" : {
      "ObjectId" : "ae6423b0914460f2316f336d7f7c2d5ad6413e5c",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeModules/deployqt.cmake" : {
      "ObjectId" : "db41f2d15a086f66a729342c720565a69d2d08ab",
      "LastModified" : "2018-03-14T17:42:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2017 Nathan Osman\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Retrieve the absolute path to qmake and then use that path to find\n\n# the windeployqt binary\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add commands that copy the Qt runtime to the target's output directory after\n\n# build and install the Qt runtime to the specified directory\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#     # Run windeployqt immediately after build\n\n#     execute_process(TARGET ${target} POST_BUILD\n\n#         COMMAND \"${CMAKE_COMMAND}\" -E\n\n#             env PATH=\"${_qt_bin_dir}\" \"${WINDEPLOYQT_EXECUTABLE}\"\n\n#                 --no-compiler-runtime\n\n#                 --plugindir plugins\n\n#                 \\\"$<TARGET_FILE:${target}>\\\"\n\n#         COMMENT \"Deploying Qt...\"\n\n#     )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install(CODE ...) doesn't support generator expressions, but\n\n# file(GENERATE ...) does - store the path in a file\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Before installation, run a series of commands that copy each of the Qt\n\n# runtime files to the appropriate directory for installation\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMakeModules/enki.cmake" : {
      "ObjectId" : "d760fddbd790255ffc207d0c96876fda9ef08ab3",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeModules/workarounds.cmake" : {
      "ObjectId" : "243b03210ac0fd6f613e610e8d98d5cfe47874b3",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove -Wl,--no-undefined which CMake 3.0.2 (on OpenSUSE 13.2) adds to the\n\n# linker options when building shared libs. That breaks building libs that use\n\n# callbacks that will be provided by other libs when the executable is linked.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/zeroconf.cmake" : {
      "ObjectId" : "43ccec61e7dea0e8028233ed0a6addcf559e309b",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/CMakeLists.txt" : {
      "ObjectId" : "a7f03886ed9b4b18940f4b1cee01816dce05ada2",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Core libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target and client specific libraries\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User programs\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "aseba/clients/CMakeLists.txt" : {
      "ObjectId" : "25b7545e9bd6d901a8e9c470df7e6074c2560cbf",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# text-based\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# text-based using QtCore\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gui\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "aseba/clients/cmd/CMakeLists.txt" : {
      "ObjectId" : "f21ce2ed60a56db73e11c6dcab556b359605c52c",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/clients/dump/CMakeLists.txt" : {
      "ObjectId" : "b0fa8357671e5629ed968188ae1fa5be0abd165f",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/clients/eventlogger/CMakeLists.txt" : {
      "ObjectId" : "faa91fca26b011db477afd4b52068b4d4590b5a1",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(asebastudio WIN32 ${eventlogger_SRCS} ${resfiles})\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Only include the qtmain lib if we are on the windows platform\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "aseba/clients/exec/CMakeLists.txt" : {
      "ObjectId" : "f3f012b64befa286abdebb3dca606491c61f29cd",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/clients/joy/CMakeLists.txt" : {
      "ObjectId" : "431fbf3fdf01fd5d317a105de8fa5289ee4e134f",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/clients/massloader/CMakeLists.txt" : {
      "ObjectId" : "20f1bc4eadcaf16012b4f5c9a23ef30df563aad5",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/clients/replay/CMakeLists.txt" : {
      "ObjectId" : "cb210aaa152e0dfea8f1bdcd6325eb89f9be8f42",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/clients/studio/CMakeLists.txt" : {
      "ObjectId" : "fdff78cc1efbed474dbf0822593d612b07e31a0d",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# kate: replace-tabs off; tab-width 4; indent-width 4; tab-indents true; indent-mode normal\n\n# vim: ts=4:sw=4:noexpandtab\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# file(TO_NATIVE_PATH ...) is broken with MSYS generator\n\n# (http://www.kwwidgets.org/Bug/bug_view_advanced_page.php?bug_id=5939)\n\n# This is a replacement...\n\n# From : http://www.cmake.org/pipermail/cmake/2006-July/010180.html\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# An extra \\\\ escape is necessary to get a \\ through CMake's processing.\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Enclose with UNESCAPED quotes.  This means we need to escape our\n\n# quotes once here, i.e. with \\\"\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# link for Studio\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Google protobuf\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add a console for debug messages under Windows\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# generates the documentation\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# code common to the use of Aseba under Qt\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# plugins\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# resources\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# studio for desktop use\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Thymio VPL standalone\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#renderblocks\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Zeroconf\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "aseba/clients/studio/plugins/CMakeLists.txt" : {
      "ObjectId" : "b4edd1945a9a037c49ecfc30f4d2ea53ab577cbd",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/clients/thymioupgrader/CMakeLists.txt" : {
      "ObjectId" : "4660df3baaa23099d1615919c549c9d950f1ce4a",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add a console for debug messages under Windows\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "aseba/clients/thymiownetconfig/CMakeLists.txt" : {
      "ObjectId" : "70a8a717e709153713879ed3abcb3ad0efba63b8",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/common/CMakeLists.txt" : {
      "ObjectId" : "b70fc253cac280987cf1762fd3a5c7201e34b1ee",
      "LastModified" : "2018-03-14T17:42:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/common/about/CMakeLists.txt" : {
      "ObjectId" : "f650a4e47013a1787d0bf8d270a73ff277e68408",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/common/zeroconf/CMakeLists.txt" : {
      "ObjectId" : "70e02c40de33d9beb8c2d83f4dffa6890c9203e1",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Zeroconf with Qt\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aseba/compiler/CMakeLists.txt" : {
      "ObjectId" : "80528be1ec99a3908a702f82ef4e070b16d6c43d",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/switches/CMakeLists.txt" : {
      "ObjectId" : "c1c196a1dfc1b1351b047c5d8712e3607929d277",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FIXME: rename http2 and remove this one\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aseba/switches/http/CMakeLists.txt" : {
      "ObjectId" : "42f9f0630480fde50e94693f7cb6ae279e699317",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# asebahttp - a switch to bridge HTTP to Aseba\n\n# 2014-12-01 David James Sherman <david dot sherman at inria dot fr>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# need libxml2 to read aesl files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "aseba/switches/http2/CMakeLists.txt" : {
      "ObjectId" : "7b18e9c8a9e1564d2062474e2def44b0ff198d79",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# need libxml2 to read aesl files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aseba/switches/medulla/CMakeLists.txt" : {
      "ObjectId" : "63ab042d0b8f639e2fa8c2fc3a6fb6bc58a78d94",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/switches/switch/CMakeLists.txt" : {
      "ObjectId" : "b01a1f15f630654be860025dacd7e8bf77c5335e",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/targets/CMakeLists.txt" : {
      "ObjectId" : "2b5fc3ae0cd3acc9955c81f72895ef0cf468931a",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(enki-marxbot)\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "aseba/targets/challenge/CMakeLists.txt" : {
      "ObjectId" : "bef5256a6921fd2ea55720f94ec86c89fc13662e",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/targets/dummy/CMakeLists.txt" : {
      "ObjectId" : "a9951734f7c35db076e451e5949080719272ad7f",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/targets/enki-marxbot/CMakeLists.txt" : {
      "ObjectId" : "3f5c1901657cebafdf37be34f3502115afb9a97e",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/targets/enki-marxbot/asebaenki.pro" : {
      "ObjectId" : "b9ec8c3266a83d5a918bcfcf9a9206630687ab5a",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aseba/targets/playground/CMakeLists.txt" : {
      "ObjectId" : "9446a18fa48afc5a9910f41a62bf6bbcd9c82db0",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# force disable D-Bus on Windows, because it generates compilation\n\n# errors in interaction with QtOpenGL includes\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "aseba/transport/CMakeLists.txt" : {
      "ObjectId" : "70b8f8348998275e5c8981025f133ba9c2bd53c1",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/transport/buffer/CMakeLists.txt" : {
      "ObjectId" : "00e290f485fdcbf218743633a5a6571639614bec",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aseba/transport/dashel_plugins/CMakeLists.txt" : {
      "ObjectId" : "1f7c2198a9fa170a01f16ff34ed7c7f61a6dcad5",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Select plugins following system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "aseba/vm/CMakeLists.txt" : {
      "ObjectId" : "9a7e5de25bc50fa4c0fe6b9e113bea663f31cb1d",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/en/Makefile" : {
      "ObjectId" : "ed0b6162a4c60c5c35de1c8a2b630587c4079311",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "b6f5b0ac12924ac3690ee1f78213b28e4b22db42",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Different types of examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/clients/CMakeLists.txt" : {
      "ObjectId" : "e216a5270846a37c93e090a95fdf96c316666dad",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/clients/cpp-qt-dbus/CMakeLists.txt" : {
      "ObjectId" : "a68505160772dd5fe3129b9c0e67470be2fc36f3",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/clients/cpp-qt-dbus/qt-dbus.pro" : {
      "ObjectId" : "9b1215336c0ba0450f5c985c18d10e4f1267b628",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-07-16T15:29:29\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# With C++11 support\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/clients/cpp-qt-gui/CMakeLists.txt" : {
      "ObjectId" : "e47a4b476a98c9f691d06058cc8d2d9621f76176",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/clients/cpp-qt-gui/qt-gui.pro" : {
      "ObjectId" : "eb4e0e57c63717c3218000e6ffe0cefba35d9841",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2013-04-02T16:25:05\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/clients/cpp-shell/CMakeLists.txt" : {
      "ObjectId" : "d19b1c4f82006fbfcdad40a25931c681a1ffec5d",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libxml2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/switches/CMakeLists.txt" : {
      "ObjectId" : "661ca66baa4d031330894681acf08708a94d2f76",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/switches/botspeak/CMakeLists.txt" : {
      "ObjectId" : "540572895fd9861fee63586b13b94d63255b13d1",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/zeroconf/CMakeLists.txt" : {
      "ObjectId" : "446b0169ccdee7c0445a9113296b77b0741aa472",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Using DashelhubZeroconf\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Using ThreadZeroconf\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Using QtZeroconf\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "menu/CMakeLists.txt" : {
      "ObjectId" : "538f70d2e3f76836eeb95d706fd63f5964839ce9",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "menu/freedesktop/48x48/CMakeLists.txt" : {
      "ObjectId" : "d9f5e1a9586a3463e4cf398618a8fe2604d44dcc",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "menu/freedesktop/CMakeLists.txt" : {
      "ObjectId" : "c13ba7a162cb1664176f42144c9246750ce4444b",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "menu/src/CMakeLists.txt" : {
      "ObjectId" : "f7d77c9b49f7261ae17c8f740868cc8323368678",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "21bd62c9f0db12b71f213bce968e55585f1af7ee",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(e2e-http)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test asebahttp\n\n# FIXME: port to asebahttp2\n\n#find_package(LibXml2)\n\n#if (LIBXML2_FOUND)\n\n#\tinclude_directories(${LIBXML2_INCLUDE_DIR})\n\n#\tinclude_directories(externals/Catch/include ${COMMON_INCLUDES})\n\n#\tadd_executable(test-asebahttp test-http.cpp)\n\n#\tif (CMAKE_VERSION VERSION_EQUAL \"2.8.12\" OR CMAKE_VERSION VERSION_GREATER \"2.8.12\")\n\n#\t\t# Support compilers like GCC 5 that don't have C++11 support enabled by default.\n\n#\t\ttarget_compile_definitions(test-asebahttp PRIVATE -DCATCH_CONFIG_NO_CPP11)\n\n#\tendif ()\n\n#\ttarget_link_libraries(test-asebahttp asebahttphub asebacompiler ${LIBXML2_LIBRARIES} asebacommon)\n\n#\tconfigure_file(testdata-HttpRequest.txt ${CMAKE_CURRENT_BINARY_DIR}/testdata-HttpRequest.txt COPYONLY)\n\n#\tconfigure_file(http-valgrind-macosx.supp ${CMAKE_CURRENT_BINARY_DIR}/http-valgrind-macosx.supp COPYONLY)\n\n#\t# test HTTP requests and JSON parsing\n\n#\tconfigure_file(run-test-asebahttp.sh ${CMAKE_CURRENT_BINARY_DIR}/run-test-asebahttp.sh COPYONLY)\n\n#\tadd_test(NAME test-asebahttp COMMAND bash run-test-asebahttp.sh)\n\n#else (LIBXML2_FOUND)\n\n#\tmessage(WARNING \"libXML2 not found! Disabling HTTP switch tests\")\n\n#endif (LIBXML2_FOUND)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/common/CMakeLists.txt" : {
      "ObjectId" : "97a1f1d6cb27c7718b9a2dc5d17620b518c5150d",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test that invalid utf8 strings do not generate memory trashes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/compiler/CMakeLists.txt" : {
      "ObjectId" : "c0314d348c6edf3dd9c8084694c0585a5e1644f0",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# two test executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If the asebavm is built as a shared lib, it must not be a dependency of\n\n# asebavmdummycallbacks because if it is, it will not be able to resolve refs\n\n# using asebavmdummycallbacks. On the other hand, if asabavm is not built as a\n\n# shared lib, it must be a dependency so that it can be used to resolve refs \n\n# in asebavmdummycallbacks.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the following tests should succeed\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the following tests should fail\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check whether we have Python interpreter to run tests that require scripts\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# stress test the compiler, by simulating user's input\n\n# compiler should not crash. Exiting with an exception is OK\n\n# The script should always succeed (otherwise the compiler caught a signal)\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# use zzuf to fuzzy the input script deterministically\n\n# compiler should not crash\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# set the number of test loops for the fuzzy test\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# add tests\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# use valgrind to test memory leaks inside the compiler\n",
        "Line" : 183,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# test all the .txt files inside the data directory\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "tests/e2e-http/CMakeLists.txt" : {
      "ObjectId" : "45dd31bcd295af0d9fb178840e8bb3f0d4072956",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/msg/CMakeLists.txt" : {
      "ObjectId" : "6be1d44fc149f524bb3bbda77d03f765b6334c0e",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the following tests should succeed\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/patch-script.cmake" : {
      "ObjectId" : "d8a973717538faf52875dca41f500aeed1e7ddd8",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/simulator/CMakeLists.txt" : {
      "ObjectId" : "3d479e91b044ec9cb3ce1a643d4cccd1977def4c",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the following tests should succeed\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "tests/vm/CMakeLists.txt" : {
      "ObjectId" : "90b3510f92b3c5b35721b48f5d45700553b62c20",
      "LastModified" : "2018-03-07T13:58:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test the number of native functions in the vm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# tests for bugs in VM\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test the deque native functions\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test exceptions raised by deque native functions\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "third_party/bonjour/CMakeLists.txt" : {
      "ObjectId" : "21cd70fd5fa66ad77ff2c363cc4fd225f034d667",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This variables are meant to be used by nsis - therefore they should use \\ rather than /\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "third_party/catch2/CMakeLists.txt" : {
      "ObjectId" : "bd07e644d3c2f92da7ef89ce548284f7586dd8bd",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "windows/cl-toolchain.cmake" : {
      "ObjectId" : "b48d5a7a1b509b22dcd031c23e6a6713ff07dceb",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "windows/clang-cl-toolchain.cmake" : {
      "ObjectId" : "9ef3b4a1b7672ac8252de0606fec55625adc6c44",
      "LastModified" : "2018-03-15T16:40:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 70,
    "QMAKE" : 3,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2619
}