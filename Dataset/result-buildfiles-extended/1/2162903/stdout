{
  "Repository" : "2162903",
  "Revision" : "HEAD",
  "ObjectId" : "a0ced3f4885b1050202f66a869e2b71b7cee5646",
  "CommitTime" : "2017-01-25T15:53:01Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "6dc668282b0197b4f8c3ac907900d4ff00ad225b",
      "LastModified" : "2015-10-13T19:53:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\tBitThunder Top-Level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Print the defconfig error message.\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "doc/Makefile" : {
      "ObjectId" : "df2b31f7e00f5a948cf19e77d2fba5026e9193f2",
      "LastModified" : "2013-01-23T10:56:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "os/src/shell/jimtcl/.indent.pro" : {
      "ObjectId" : "128d5636f1e312972b19e20b00a4f98e6df4ab38",
      "LastModified" : "2014-06-11T09:58:40Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "os/src/shell/jimtcl/examples.api/Makefile" : {
      "ObjectId" : "a7cc6d1c81dee6cd1ae3875fba2f0e40ac134950",
      "LastModified" : "2014-06-11T09:58:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "os/src/shell/jimtcl/examples.ext/Makefile" : {
      "ObjectId" : "fa5cfc68070ecfd30d6c650299c0aa97a8b7c258",
      "LastModified" : "2014-06-11T09:58:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that if cross compiling, build with:\n\n#\n\n#   make NOTEST=1\n\n#\n\n# to avoid trying to load the resulting module.\n\n# Also note that you will need a build-host version of jimsh in the\n\n# PATH in order to build the extension.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefer jimsh in the PATH because it is more likely to be built\n\n# for the build-host rather than the target.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: Currently we don't attempt to set LD_LIBRARY_PATH or equivalent\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "os/src/shell/jimtcl/sqlite3/Makefile" : {
      "ObjectId" : "2b69ae451cc8410a2b6c2567972df3a0633cc8ee",
      "LastModified" : "2014-06-11T09:58:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Builds the full sqlite3 extension for Jim Tcl with the sqlite3 amalgamation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that this will only work when not cross compiling\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "os/src/shell/jimtcl/tests/Makefile" : {
      "ObjectId" : "452bd8d25f73ea0cad9e0ccf913b56e71d8ef570",
      "LastModified" : "2014-06-11T09:58:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "os/src/shell/micropython/bare-arm/Makefile" : {
      "ObjectId" : "eeaaf423d0f4be703946be48b94298b7174ed92f",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# qstr definitions (must come before including py.mk)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include py core make definitions\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Debugging/Optimization\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\tprintf.c \\\n\tstring0.c \\\n\tmalloc0.c \\\n\tgccollect.c \\\n\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\tstartup_stm32f40xx.s \\\n\tgchelper.s \\\n\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "os/src/shell/micropython/docs/Makefile" : {
      "ObjectId" : "7da33e9a3e407323071fca3678cafe6170d9cbc2",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "os/src/shell/micropython/qemu-arm/Makefile" : {
      "ObjectId" : "03cc7db9e0d62c9c2a6dd65a7ae876ae871e9a4c",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# qstr definitions (must come before including py.mk)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include py core make definitions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Debugging/Optimization\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## With CoudeSourcery it's actually a little different, you just need `-T generic-m-hosted.ld`.\n\n## Although for some reason `$(LD)` will not find that linker script, it works with `$(CC)`.\n\n## It turns out that this is specific to CoudeSourcery, and ARM version of GCC ships something\n\n## else instead and according to the following files, this is what we need to pass to `$(CC).\n\n## - gcc-arm-none-eabi-4_8-2014q1/share/gcc-arm-none-eabi/samples/src/makefile.conf\n\n## - gcc-arm-none-eabi-4_8-2014q1/share/gcc-arm-none-eabi/samples/src/qemu/Makefile\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## `$(LD)` doesn't seem to like `--specs` for some reason, but we can just use `$(CC)` here.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "os/src/shell/micropython/stmhal/Makefile" : {
      "ObjectId" : "7e825279fa28141f2ae10f0d720ff39c09775a24",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Select the board to build for: if not given on the command line,\n\n# then default to PYBV10.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If the build directory is not given, make it reflect the board name.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# qstr definitions (must come before including py.mk)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include py core make definitions\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#USBHOST_DIR=usbhost\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# may need to prefix dfu-util with sudo\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#INC += -I$(USBHOST_DIR)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Debugging/Optimization\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# uncomment this if you want libgcc\n\n#LIBS += $(shell $(CC) -print-libgcc-file-name)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\tclass/cdc/src/usbd_cdc.c \\\n\tclass/msc/src/usbd_msc.c \\\n#\tusbd_core.c \\\n\tusbd_ioreq.c \\\n\tusbd_req.c \\\n\tusbd_usr.c \\\n\tusbd_desc.c \\\n\tusbd_pyb_core.c \\\n\tusbd_pyb_core2.c \\\n\tusbd_cdc_vcp.c \\\n\tusbd_msc_bot.c  \\\n\tusbd_msc_data.c \\\n\tusbd_msc_scsi.c \\\n\tusbd_storage_msd.c \\\n\t)\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for CC3000 module\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We put ff.o and stm32f4xx_hal_sd.o into the first 16K section with the ISRs.\n\n# If we compile these using -O0 then it won't fit. So if you really want these\n\n# to be compiled with -O0, then edit stm32f405.ld (in the .isr_vector section)\n\n# and comment out the following 2 lines.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Making OBJ use an order-only depenedency on the generated pins.h file\n\n# has the side effect of making the pins.h file before we actually compile\n\n# any of the objects. The normal dependency generation will deal with the\n\n# case when pins.h is modified. But when it doesn't exist, we don't know\n\n# which source files might need it.\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Use a pattern rule here so that make will only call make-pins.py once to make\n\n# both pins_$(BOARD).c and pins.h\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "os/src/shell/micropython/teensy/Makefile" : {
      "ObjectId" : "5746f6c432aeb557442a870475ec372a01ef226a",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# qstr definitions (must come before including py.mk)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include py core make definitions\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If you set USE_ARDUINO_TOOLCHAIN=1 then this makefile will attempt to use\n\n# the toolchain that comes with Teensyduino\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(info %%%%% LIBGCC_FILE_NAME = $(LIBGCC_FILE_NAME))\n\n#$(info %%%%% LIBM_FILE_NAME = $(LIBM_FILE_NAME))\n\n#$(info %%%%% LIBC_FILE_NAME = $(LIBC_FILE_NAME))\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#$(info %%%%% dirname LIBGCC_FILE_NAME = $(dir $(LIBGCC_FILE_NAME)))\n\n#$(info %%%%% dirname LIBM_FILE_NAME = $(dir $(LIBM_FILE_NAME)))\n\n#$(info %%%%% dirname LIBC_FILE_NAME = $(dir $(LIBC_FILE_NAME)))\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Debugging/Optimization\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-DNDEBUG\n",
        "Line" : 71,
        "CharPositionInLine" : 14
      },
      "7" : {
        "Text" : "# Making OBJ use an order-only depenedency on the generated pins.h file\n\n# has the side effect of making the pins.h file before we actually compile\n\n# any of the objects. The normal dependency generation will deal with the\n\n# case when pins.h is modified. But when it doesn't exist, we don't know\n\n# which source files might need it.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use a pattern rule here so that make will only call make-pins.py once to make\n\n# both pins_$(BOARD).c and pins.h\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "os/src/shell/micropython/unix-cpy/Makefile" : {
      "ObjectId" : "0376932d6a012e0d5323790a10ff54ce5ed76d2f",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# define main target\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include py core make definitions\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compiler settings\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Debugging/Optimization\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-DNDEBUG\n",
        "Line" : 21,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "# source files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "os/src/shell/micropython/unix/Makefile" : {
      "ObjectId" : "8ee2319828ac72e8f479f83f998f8e15e6052726",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# define main target\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qstr definitions (must come before including py.mk)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OS name, for simple autoconfig\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include py core make definitions\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# compiler settings\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Debugging/Optimization\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-DNDEBUG\n",
        "Line" : 29,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# On OSX, 'gcc' is a symlink to clang unless a real gcc is installed.\n\n# The unix port of micropython on OSX must be compiled with clang,\n\n# while cross-compile ports require gcc, so we test here for OSX and \n\n# if necessary override the value of 'CC' set in py/mkenv.mk\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use clang syntax for map file and set osx specific flags\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use gcc syntax for map file\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Note: you may need to install i386 versions of dependency packages,\n\n# starting with linux-libc-dev:i386\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# the following is needed for BSD\n\n#LDFLAGS_MOD += -ltermcap\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# source files\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Must be the last file in list of sources\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# making seg_helpers.c rely on order.def will force order.def to be created\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# create order.def in build directory\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# install micropython in /usr/local/bin\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# uninstall micropython\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "os/src/shell/micropython/windows/Makefile" : {
      "ObjectId" : "44029c028f3724ee16b7e81146f83dcba283f9ad",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# define main target\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qstr definitions (must come before including py.mk)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include py core make definitions\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compiler settings\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Debugging/Optimization\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-DNDEBUG\n",
        "Line" : 29,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# source files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# the following is needed for BSD\n\n#LDFLAGS_MOD += -ltermcap\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#LIB += -lmman\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "scripts/dtc/Makefile" : {
      "ObjectId" : "962f94eba661c2ef7254ea725af76a0d9cc0fd99",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Device Tree Compiler\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Version information will be constructed in this order:\n\n# EXTRAVERSION might be \"-rc\", for example.\n\n# LOCAL_VERSION is likely from command line.\n\n# CONFIG_LOCALVERSION from some future config system.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Overall rules\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Rules for versioning\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# end of line\n",
        "Line" : 74,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# Contents of the generated version file.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Rules for libfdt\n\n#\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This stops make from generating the lex and bison output during\n\n# auto-dependency computation, but throwing them away as an\n\n# intermediate target and building them again \"for real\"\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Testsuite rules\n\n#\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Clean rules\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Generic compile rules\n\n#\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "scripts/mkimage/Makefile" : {
      "ObjectId" : "9d39d6afeccb53705aa0ba13a68b7e7f8c493dc9",
      "LastModified" : "2014-10-21T09:16:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "QMAKE" : 1,
    "MAKEFILE" : 16
  },
  "ElapsedTime" : 3145
}