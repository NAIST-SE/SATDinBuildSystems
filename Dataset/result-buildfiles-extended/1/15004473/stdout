{
  "Repository" : "15004473",
  "Revision" : "HEAD",
  "ObjectId" : "d02a209082819e3bfa3edd167328b4ed52ebf6e1",
  "CommitTime" : "2016-10-30T05:20:09Z",
  "Files" : {
    "3rdparty/CMakeLists.txt" : {
      "ObjectId" : "d3ac0d0c5cc76eadb3996b39eeac9f680aa61e3c",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qlogind/CMakeLists.txt" : {
      "ObjectId" : "e4ce7ae9a5cd1fca07f958896c6bef41466b1682",
      "LastModified" : "2015-01-19T23:57:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/qlogind/src/CMakeLists.txt" : {
      "ObjectId" : "44998c3d3b1a6380416f1585e7fd8aa7b21475fc",
      "LastModified" : "2015-02-22T21:20:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#generate cpp from xml files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/qlogind/tools/CMakeLists.txt" : {
      "ObjectId" : "06821e2af0c94530f3ac3feb7adba7da1f025368",
      "LastModified" : "2015-01-19T23:57:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/sigwatch/CMakeLists.txt" : {
      "ObjectId" : "4455011ee2c39c50077e75f92556d727e88c0afc",
      "LastModified" : "2015-02-22T21:20:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "c50c09de9e3fc789f8f9a1c894b7619e3ead7307",
      "LastModified" : "2016-08-28T10:52:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Silence CMake warnings\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set version\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up packaging\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Options\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ECM\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macros\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find pkg-config here so that it can be referenced soon\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# systemd user unit directory\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Require at least gcc 4.8\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Adjusting CMAKE_C_FLAGS to get Wayland protocols to compile\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build flags\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Definitions\n\n#add_definitions(-DQT_DISABLE_DEPRECATED_BEFORE=0)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add custom uninstall target\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ECM 1.7.0 provides this target, so we can't roll our own (see issue #172)\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Assume release build by default\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check for prctl\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Minimum version requirements\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Find Qt5\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find KF5\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Find NetworkManager-Qt\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Find Green Island\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Find libhawaii\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# lxqt\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Subdirectories\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#add_subdirectory(decorations)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#add_subdirectory(styles)\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Install the shell with development builds\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Display featute summary\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/FindBcmHost.cmake" : {
      "ObjectId" : "8923e7024e22c895ddb23a5896fd5f535c2de484",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindBcmHost\n\n# -----------\n\n#\n\n# Try to find Broadcom libraries.\n\n#\n\n# It is meant as a drop-in replacement for FindEGL.cmake on Raspberry Pi\n\n# systems.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``BcmHost_FOUND``\n\n#     True if bcm_host is available\n\n# ``BcmHost_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``BcmHost::BcmHost``\n\n#     target\n\n# ``BcmHost_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n#\n\n# If ``BcmHost_FOUND`` is TRUE, it will also define the following imported target:\n\n#\n\n# ``BcmHost::BcmHost``\n\n#     The BcmHost library\n\n# ``BcmHost::GLESv2``\n\n#     The GLESv2 library\n\n# ``BcmHost::EGL``\n\n#     The EGL library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015-2016 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compatibility variables\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindMobileBroadbandProviderInfo.cmake" : {
      "ObjectId" : "79487a4b56ad23e5c6c069ee8172dc2c82d3576a",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find mobile-broadband-provider-info\n\n# Once done this will define\n\n#\n\n#  MOBILEBROADBANDPROVIDERINFO_FOUND - system has mobile-broadband-provider-info\n\n#  MOBILEBROADBANDPROVIDERINFO_CFLAGS - the mobile-broadband-provider-info directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Lamarque Souza <lamarque@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 19,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/FindModemManager.cmake" : {
      "ObjectId" : "708db95f2185709b60c5e47a9b10ab3822957131",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ModemManager\n\n# Once done this will define\n\n#\n\n#  MODEMMANAGER_FOUND - system has ModemManager\n\n#  MODEMMANAGER_INCLUDE_DIRS - the ModemManager include directories\n\n#  MODEMMANAGER_LIBRARIES - the libraries needed to use ModemManager\n\n#  MODEMMANAGER_CFLAGS - Compiler switches required for using ModemManager\n\n#  MODEMMANAGER_VERSION - version number of ModemManager\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2007, Will Stephenson, <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "cmake/FindNetworkManager.cmake" : {
      "ObjectId" : "cac5acee49f151e87c749a2990b7b67af700b9cf",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find NetworkManager\n\n# Once done this will define\n\n#\n\n#  NETWORKMANAGER_FOUND - system has NetworkManager\n\n#  NETWORKMANAGER_INCLUDE_DIRS - the NetworkManager include directories\n\n#  NETWORKMANAGER_LIBRARIES - the libraries needed to use NetworkManager\n\n#  NETWORKMANAGER_CFLAGS - Compiler switches required for using NetworkManager\n\n#  NETWORKMANAGER_VERSION - version number of NetworkManager\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2007, Will Stephenson, <wstephenson@kde.org>\n\n# Copyright (c) 2015, Jan Grulich, <jgrulich@redhat.com>\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in cache already\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Since NetworkManager 1.0.0 we need to find different libraries\n",
        "Line" : 33,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 6
    },
    "cmake/FindPAM.cmake" : {
      "ObjectId" : "f209c0b464c7e133fd702bade27938c7ab53e70b",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the PAM libraries\n\n# Once done this will define\n\n#\n\n#  PAM_FOUND - system has pam\n\n#  PAM_INCLUDE_DIR - the pam include directory\n\n#  PAM_LIBRARIES - libpam library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# darwin claims to be something special\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# XXX does this work with plain c?\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/GetGitRevision.cmake" : {
      "ObjectId" : "e5960036b38f375718082d38a9c2ba2599b5ac3b",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2012-2016 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of Pier Luigi Fiorini nor the names of his\n\n#   contributors may be used to endorse or promote products derived\n\n#   from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "compositor/CMakeLists.txt" : {
      "ObjectId" : "32482772f7e69e7e835437b7dc88b49d5135caa3",
      "LastModified" : "2016-04-23T06:33:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Git revision\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "01f8e20549f23d5213c411f5bf1616dd52d2c5c4",
      "LastModified" : "2016-02-17T08:19:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/systemd/CMakeLists.txt" : {
      "ObjectId" : "769703ea92c86cb77c603daed82473bef8d9858e",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# You can run Hawaii on:\n\n#\n\n#  - KMS (this requires Qt >= 5.5) and root privileges\n\n#  - Nested into Weston >= 1.5\n\n#\n\n# To start a Hawaii shell upon login:\n\n#\n\n# systemctl --user enable hawaii.service\n\n# systemctl --user enable hawaii.target\n\n#\n\n# Otherwise to run it on demand:\n\n#\n\n# systemctl --user isolate hawaii.target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/wayland-sessions/CMakeLists.txt" : {
      "ObjectId" : "b4d2e72336f8ebd862e704223763e5f41b9c70b5",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/CMakeLists.txt" : {
      "ObjectId" : "254b3117e584cdc7ae186d3f55b092d4995f754a",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(styles)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "declarative/hardware/CMakeLists.txt" : {
      "ObjectId" : "800a1a53dddcf60a8219a372766d5139b790cfdb",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/launcher/CMakeLists.txt" : {
      "ObjectId" : "b3f4a8cc05c35b55d49fc12a0d7e2554637717b7",
      "LastModified" : "2016-04-23T06:33:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/misc/CMakeLists.txt" : {
      "ObjectId" : "bf81e65d500c20e3d3aa4016ceec6b18930647ab",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/mixer/CMakeLists.txt" : {
      "ObjectId" : "cd0698c2eeb66693644ab8f3e884c09f54d2fe84",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/mpris2/CMakeLists.txt" : {
      "ObjectId" : "2152a0a100e195aedecd9c19c3234ae13e70f419",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/networkmanager/CMakeLists.txt" : {
      "ObjectId" : "1180ad5f866f8ae2b84cb3c1891ea2ac21c12d5d",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/notifications/CMakeLists.txt" : {
      "ObjectId" : "70ac6a01b946075dd09df24c36ef740f1ab0fa02",
      "LastModified" : "2016-02-15T07:21:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/styles/Base/CMakeLists.txt" : {
      "ObjectId" : "738fbe261852de4348bef2a8e9dd70f64d8c0e22",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/styles/CMakeLists.txt" : {
      "ObjectId" : "6c6e40f36d70f67cde017569482016d460e42b76",
      "LastModified" : "2015-04-23T11:30:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "decorations/CMakeLists.txt" : {
      "ObjectId" : "1c506051da21886f808361d052f08fa9881929be",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "decorations/material/CMakeLists.txt" : {
      "ObjectId" : "a2632da84aaeb365b7af52f2bb4165642ab78fe3",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "framework/CMakeLists.txt" : {
      "ObjectId" : "3ac44404c19bece3e7003ca1cc89ec1cbf8ddc65",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "framework/controls/CMakeLists.txt" : {
      "ObjectId" : "387f040ebb897ff49763d5e6ff46d48edb63a6de",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "framework/themes/CMakeLists.txt" : {
      "ObjectId" : "fb111a537fc4d316c36a538e1fd38b66e10b4803",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "headers/CMakeLists.txt" : {
      "ObjectId" : "fa239e27195f991790a64fafee3769fcc0284a6c",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create the cmakedirs.h header file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the config.h header file\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "6d589dc652d4e8aa5f25a40df59206c70374991f",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate the starthawaii script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "styles/CMakeLists.txt" : {
      "ObjectId" : "88764a925e3d198441cb030c08fc205c72f7c53f",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "styles/wind/CMakeLists.txt" : {
      "ObjectId" : "d581452392dea7c2ca6960dada19220d18f7e909",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "0653827192a0cbf91144c9c87b11b4c3f39c5478",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/auto/CMakeLists.txt" : {
      "ObjectId" : "9751526443654dcf88153ed9a34cede65763b8aa",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "themes/CMakeLists.txt" : {
      "ObjectId" : "15a2d3e7698af5779503ff11c254a244ad3f251a",
      "LastModified" : "2016-07-05T21:46:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "themes/sddm/CMakeLists.txt" : {
      "ObjectId" : "bf922ef9adfabf32dafbd4b5d9a86cd453f5125f",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "themes/shell/CMakeLists.txt" : {
      "ObjectId" : "88764a925e3d198441cb030c08fc205c72f7c53f",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "themes/shell/wind/CMakeLists.txt" : {
      "ObjectId" : "58ee6f2fc251e4ce56a194331c9e56aa72f75b89",
      "LastModified" : "2016-06-26T12:41:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 41
  },
  "ElapsedTime" : 1262
}