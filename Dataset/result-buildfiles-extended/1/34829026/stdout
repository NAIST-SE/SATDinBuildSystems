{
  "Repository" : "34829026",
  "Revision" : "HEAD",
  "ObjectId" : "1623175539c6a887003792773edf50ed5de3c234",
  "CommitTime" : "2017-03-15T20:26:13Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b2ad37bdfec02d8e2af54389a69ee6670ea2ea1e",
      "LastModified" : "2017-03-15T19:45:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n\n# CMake modules\n\n#============================================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Settable options\n\n#============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Components\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Parameters\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#============================================================================\n\n# Internal compiler options\n\n#============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setting compiler properties\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Error management\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Update if necessary\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Sanitizer builds\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Static builds\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Calculating version\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Strip \"v\" before tag\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Third-party libraries\n\n#============================================================================\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##### System libraries #####\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Threads\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#target_compile_definitions(threads INTERFACE \"-D_REENTRANT\")\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "##### Bundled libraries #####\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Dir_monitor\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Docopt\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## libnatpmp\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## libminiupnpc\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## rabin\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## dht\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## QtSingleApplication\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Spdlog\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## SQLite\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## WebSocket++\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##### External libraries #####\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Boost\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Qt5\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\t\tSql\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Protobuf\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## CryptoPP\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## OpenSSL\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#============================================================================\n\n# Subprojects\n\n#============================================================================\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "Install.cmake" : {
      "ObjectId" : "53426b1fc9fbe2ad5e9f198c900aca544160544d",
      "LastModified" : "2017-03-15T19:45:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prerequisites\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Install Qt5 plugins\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\tinstall_qt5_plugin(\"Qt5::QSQLiteDriverPlugin\" QT_PLUGIN \"${BUNDLE_PLUGINS_PATH}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install Qt5 plugins\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#install_qt5_plugin(\"Qt5::QSQLiteDriverPlugin\" QT_PLUGIN \"${BUNDLE_PLUGINS_PATH}\")\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Dependencies of targets and plugins\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# qt.conf\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Install ld-linux.so runtime\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Install ld-linux shims\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# DragNDrop\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Bundle\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Bundle plugin path\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Qt5 plugins\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 13
    },
    "cli/CMakeLists.txt" : {
      "ObjectId" : "3ccec024de76ba9e12db48a7bed7bd69832fb8ef",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n\n# Internal compiler options\n\n#============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Sources & headers\n\n#============================================================================\n\n# Universal sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#============================================================================\n\n# Compile targets\n\n#============================================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#============================================================================\n\n# Third-party libraries\n\n#============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Qt\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindCryptoPP.cmake" : {
      "ObjectId" : "8e39b411d6901c3ed1e61d04590018b3e971dc08",
      "LastModified" : "2016-03-06T14:04:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module for locating the Crypto++ encryption library.\n\n#\n\n# Customizable variables:\n\n#   CRYPTOPP_ROOT_DIR\n\n#     This variable points to the CryptoPP root directory. On Windows the\n\n#     library location typically will have to be provided explicitly using the\n\n#     -D command-line option. The directory should include the include/cryptopp,\n\n#     lib and/or bin sub-directories.\n\n#\n\n# Read-only variables:\n\n#   CRYPTOPP_FOUND\n\n#     Indicates whether the library has been found.\n\n#\n\n#   CRYPTOPP_INCLUDE_DIRS\n\n#     Points to the CryptoPP include directory.\n\n#\n\n#   CRYPTOPP_LIBRARIES\n\n#     Points to the CryptoPP libraries that should be passed to\n\n#     target_link_libararies.\n\n#\n\n#\n\n# Copyright (c) 2012 Sergiu Dotenco\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Re-use the previous path:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindICU.cmake" : {
      "ObjectId" : "eea934e416ed4bf15a9a6d9edce401ce9454a406",
      "LastModified" : "2016-09-06T11:38:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module can find the International Components for Unicode (ICU) libraries\n\n#\n\n# Requirements:\n\n# - CMake >= 2.8.3 (for new version of find_package_handle_standard_args)\n\n#\n\n# The following variables will be defined for your use:\n\n#   - ICU_FOUND             : were all of your specified components found?\n\n#   - ICU_INCLUDE_DIRS      : ICU include directory\n\n#   - ICU_LIBRARIES         : ICU libraries\n\n#   - ICU_VERSION           : complete version of ICU (x.y.z)\n\n#   - ICU_VERSION_MAJOR     : major version of ICU\n\n#   - ICU_VERSION_MINOR     : minor version of ICU\n\n#   - ICU_VERSION_PATCH     : patch version of ICU\n\n#   - ICU_<COMPONENT>_FOUND : were <COMPONENT> found? (FALSE for non specified component if it is not a dependency)\n\n#\n\n# For windows or non standard installation, define ICU_ROOT_DIR variable to point to the root installation of ICU. Two ways:\n\n#   - run cmake with -DICU_ROOT_DIR=<PATH>\n\n#   - define an environment variable with the same name before running cmake\n\n# With cmake-gui, before pressing \"Configure\":\n\n#   1) Press \"Add Entry\" button\n\n#   2) Add a new entry defined as:\n\n#     - Name: ICU_ROOT_DIR\n\n#     - Type: choose PATH in the selection list\n\n#     - Press \"...\" button and select the root installation of ICU\n\n#\n\n# Example Usage:\n\n#\n\n#   1. Copy this file in the root of your project source directory\n\n#   2. Then, tell CMake to search this non-standard module in your project directory by adding to your CMakeLists.txt:\n\n#     set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})\n\n#   3. Finally call find_package() once, here are some examples to pick from\n\n#\n\n#   Require ICU 4.4 or later\n\n#     find_package(ICU 4.4 REQUIRED)\n\n#\n\n#   if(ICU_FOUND)\n\n#      add_executable(myapp myapp.c)\n\n#      include_directories(${ICU_INCLUDE_DIRS})\n\n#      target_link_libraries(myapp ${ICU_LIBRARIES})\n\n#      # with CMake >= 3.0.0, the last two lines can be replaced by the following\n\n#      target_link_libraries(myapp ICU::ICU)\n\n#   endif(ICU_FOUND)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########## <ICU finding> ##########\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########## Private ##########\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefix for all ICU relative public variables\n",
        "Line" : 50,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "# Prefix for all ICU relative internal variables\n",
        "Line" : 53,
        "CharPositionInLine" : 58
      },
      "5" : {
        "Text" : "# Prefix for all pkg-config relative internal variables\n",
        "Line" : 56,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : "# <deprecated>\n\n# for future removal\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# </deprecated>\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# <icu component name> <library name 1> ... <library name N>\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Common and Data libraries\n\n# Internationalization library\n\n# Stream and I/O Library\n\n# Layout library\n\n# Paragraph Layout library\n",
        "Line" : 86,
        "CharPositionInLine" : 43
      },
      "10" : {
        "Text" : "########## Public ##########\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# may be done in the _icu_declare_component macro\n",
        "Line" : 105,
        "CharPositionInLine" : 85
      },
      "12" : {
        "Text" : "# Check components\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# uc required at least\n",
        "Line" : 109,
        "CharPositionInLine" : 45
      },
      "14" : {
        "Text" : "# if pkg-config is available check components dependencies and append `pkg-config icu-<component> --variable=prefix` to hints\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list(APPEND ${ICU_PRIVATE_VAR_NS}_HINTS ENV ICU_ROOT_DIR)\n\n# message(\"${ICU_PRIVATE_VAR_NS}_HINTS = ${${ICU_PRIVATE_VAR_NS}_HINTS}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Includes\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########## <part to keep synced with tests/version/CMakeLists.txt> ##########\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# ICU >= 4.4\n",
        "Line" : 156,
        "CharPositionInLine" : 71
      },
      "19" : {
        "Text" : "# ICU [2;4.4[\n",
        "Line" : 158,
        "CharPositionInLine" : 76
      },
      "20" : {
        "Text" : "# ICU [1.4;2[\n",
        "Line" : 160,
        "CharPositionInLine" : 74
      },
      "21" : {
        "Text" : "# ICU 1.3\n",
        "Line" : 162,
        "CharPositionInLine" : 66
      },
      "22" : {
        "Text" : "# ICU 1.3\n",
        "Line" : 168,
        "CharPositionInLine" : 105
      },
      "23" : {
        "Text" : "# [1.3;1.4[ as #define ICU_VERSION \"3\" (no patch version, ie all 1.3.X versions will be detected as 1.3.0)\n",
        "Line" : 169,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "#\n\n# Since version 4.9.1, ICU release version numbering was totaly changed, see:\n\n# - http://site.icu-project.org/download/49\n\n# - http://userguide.icu-project.org/design#TOC-Version-Numbers-in-ICU\n\n#\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# ICU [1.4;1.8[\n",
        "Line" : 182,
        "CharPositionInLine" : 125
      },
      "26" : {
        "Text" : "# [1.4;1.8[ as #define U_ICU_VERSION \"1.4.1.2\" but it seems that some 1.4.[12](?:\\.\\d)? have releasing error and appears as 1.4.0\n",
        "Line" : 183,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# copy CMAKE_MATCH_1, no longer valid on the following if\n",
        "Line" : 184,
        "CharPositionInLine" : 67
      },
      "28" : {
        "Text" : "########## </part to keep synced with tests/version/CMakeLists.txt> ##########\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Check libraries\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Try to find out compiler flags\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check find_package arguments\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# <deprecated>\n\n# for compatibility with previous versions, alias old ICU_(MAJOR|MINOR|PATCH)_VERSION to ICU_VERSION_$1\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# </deprecated>\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "#             set_target_properties(\"ICU::${${ICU_PRIVATE_VAR_NS}_UPPER_COMPONENT}\" PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"${${ICU_PUBLIC_VAR_NS}_INCLUDE_DIR}\")\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "########## </ICU finding> ##########\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "########## <resource bundle support> ##########\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "########## Private ##########\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "########## Public ##########\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n# Prototype:\n\n#   icu_generate_resource_bundle([NAME <name>] [PACKAGE] [DESTINATION <location>] [FILES <list of files>])\n\n#\n\n# Common arguments:\n\n#   - NAME <name>                      : name of output package and to create dummy targets\n\n#   - FILES <file 1> ... <file N>      : list of resource bundles sources\n\n#   - DEPENDS <target1> ... <target N> : required to package as library (shared or static), a list of cmake parent targets to link to\n\n#                                        Note: only (PREVIOUSLY DECLARED) add_executable and add_library as dependencies\n\n#   - DESTINATION <location>           : optional, directory where to install final binary file(s)\n\n#   - FORMAT <name>                    : optional, one of none (ICU4C binary format, default), java (plain java) or xliff (XML), see below\n\n#\n\n# Arguments depending on FORMAT:\n\n#   - none (default):\n\n#       * PACKAGE     : if present, package all resource bundles together. Default is to stop after building individual *.res files\n\n#       * TYPE <name> : one of :\n\n#           + common or archive (default) : archive all ressource bundles into a single .dat file\n\n#           + library or dll              : assemble all ressource bundles into a separate and loadable library (.dll/.so)\n\n#           + static                      : integrate all ressource bundles to targets designed by DEPENDS parameter (as a static library)\n\n#       * NO_SHARED_FLAGS                 : only with TYPE in ['library', 'dll', 'static'], do not append ICU_C(XX)_SHARED_FLAGS to targets given as DEPENDS argument\n\n#   - JAVA:\n\n#       * BUNDLE <name> : required, prefix for generated classnames\n\n#   - XLIFF:\n\n#       (none)\n\n#\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\n\n# For an archive, the idea is to generate the following dependencies:\n\n#\n\n#   root.txt => root.res \\\n\n#                        |\n\n#   en.txt   => en.res   |\n\n#                        | => pkglist.txt => application.dat\n\n#   fr.txt   => fr.res   |\n\n#                        |\n\n#   and so on            /\n\n#\n\n# Lengend: 'A => B' means B depends on A\n\n#\n\n# Steps (correspond to arrows):\n\n#   1) genrb (from .txt to .res)\n\n#   2) generate a file text (pkglist.txt) with all .res files to put together\n\n#   3) build final archive (from *.res/pkglist.txt to .dat)\n\n#\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##### <constants> #####\n",
        "Line" : 383,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "##### </constants> #####\n",
        "Line" : 388,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "##### <hash constants> #####\n\n# filename extension of built resource bundle (without dot)\n",
        "Line" : 390,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# alias: none (default) = common = archive ; dll = library ; static\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# filename prefix of built package\n",
        "Line" : 402,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# filename extension of built package (with dot)\n",
        "Line" : 406,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# pkgdata option mode specific\n",
        "Line" : 410,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# cmake library type for output package\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "##### </hash constants> #####\n",
        "Line" : 418,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# output variable name\n",
        "Line" : 422,
        "CharPositionInLine" : 20
      },
      "51" : {
        "Text" : "# options (true/false) (default value: false)\n",
        "Line" : 423,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# univalued parameters (default value: \"\")\n",
        "Line" : 425,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# multivalued parameters (default value: \"\")\n",
        "Line" : 427,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# assert(${PARSED_ARGS_NAME} != \"\")\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# assert(length(PARSED_ARGS_FILES) > 0)\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# assert(${UPPER_FORMAT} in ['', 'java', 'xlif'])\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# assert(${PARSED_ARGS_BUNDLE} != \"\")\n",
        "Line" : 450,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# assert(${PARSED_ARGS_FORMAT} == \"\")\n",
        "Line" : 457,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# assert(${UPPER_MODE} in ['', 'common', 'archive', 'dll', library'])\n",
        "Line" : 463,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# Package name: strip file extension if present\n",
        "Line" : 470,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# Target name to build package\n",
        "Line" : 472,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# Target name to build intermediate list file\n",
        "Line" : 474,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# Directory (absolute) to set as \"current directory\" for genrb (does not include package directory, -p)\n\n# We make our \"cook\" there to prevent any conflict\n",
        "Line" : 476,
        "CharPositionInLine" : 8
      },
      "64" : {
        "Text" : "# CMake < 2.8.10\n",
        "Line" : 478,
        "CharPositionInLine" : 44
      },
      "65" : {
        "Text" : "# CMake >= 2.8.10\n",
        "Line" : 480,
        "CharPositionInLine" : 46
      },
      "66" : {
        "Text" : "# Directory (absolute) where resource bundles are built: concatenation of RESOURCE_GENRB_CHDIR_DIR and package name\n",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# Output (relative) path for built package\n",
        "Line" : 485,
        "CharPositionInLine" : 8
      },
      "68" : {
        "Text" : "# Output (absolute) path for the list file\n",
        "Line" : 491,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "#         set(RESOURCE_GENRB_CHDIR_DIR \"UNUSED\")\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "##### <templates> #####\n",
        "Line" : 516,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "##### </templates> #####\n",
        "Line" : 530,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# build <locale>.txt from <locale>.res\n",
        "Line" : 532,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "# dummy target (ICU+RB+<name>+<locale>) for each locale to build the <locale>.res file from its <locale>.txt by the add_custom_command above\n",
        "Line" : 546,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "# convert semicolon separated list to a space separated list\n\n# NOTE: if the pkglist.txt file starts (or ends?) with a whitespace, pkgdata add an undefined symbol (named <package>_) for it\n",
        "Line" : 562,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# create a text file (pkglist.txt) with the list of the *.res to package together\n",
        "Line" : 567,
        "CharPositionInLine" : 8
      },
      "76" : {
        "Text" : "# run pkgdata from pkglist.txt\n",
        "Line" : 573,
        "CharPositionInLine" : 8
      },
      "77" : {
        "Text" : "# assert(${PARSED_ARGS_DEPENDS} != \"\")\n",
        "Line" : 581,
        "CharPositionInLine" : 12
      },
      "78" : {
        "Text" : "# http://www.mail-archive.com/cmake-commits@cmake.org/msg01135.html\n",
        "Line" : 604,
        "CharPositionInLine" : 12
      },
      "79" : {
        "Text" : "# dummy intermediate target (ICU+PKG+<name>+DUMMY) to link the package to the produced library by running pkgdata (see add_custom_command above)\n",
        "Line" : 606,
        "CharPositionInLine" : 12
      },
      "80" : {
        "Text" : "# dummy target (ICU+PKG+<name>) to run pkgdata (see add_custom_command above)\n",
        "Line" : 614,
        "CharPositionInLine" : 12
      },
      "81" : {
        "Text" : "# dummy target (ICU+PKG+<name>+PKGLIST) to build the file pkglist.txt\n",
        "Line" : 621,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "# package => pkglist.txt\n",
        "Line" : 627,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# pkglist.txt => *.res\n",
        "Line" : 629,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "########## </resource bundle support> ##########\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "########## <debug> ##########\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# IN (args)\n",
        "Line" : 653,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# OUT\n\n# Found\n",
        "Line" : 659,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# Flags\n",
        "Line" : 662,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# Linking\n",
        "Line" : 669,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Version\n",
        "Line" : 672,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# Executables\n",
        "Line" : 677,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# <COMPONENT>_(FOUND|LIBRARY)\n",
        "Line" : 680,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "########## </debug> ##########\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "cmake/FindSqlite3.cmake" : {
      "ObjectId" : "a30246eaa3b4648d9fc8b3ca247d4b11729a30f9",
      "LastModified" : "2016-09-06T11:38:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find Sqlite 3\n\n# SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)\n\n# SQLITE3_LIBRARY - Where the release library is\n\n# SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and executable)\n\n# SQLITE3_VERSION - Sqlite3 version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2016 Alexander Shishenko <alex@shishenko.com>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SQLite version\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/GetELFInterpreter.cmake" : {
      "ObjectId" : "bb44dc06dc38a0c1a714bfaf6180cb61912715e7",
      "LastModified" : "2017-03-15T19:45:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "85eae1562fe2011e9800787819b21f30a8898eb4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/InstallQt5Plugin.cmake" : {
      "ObjectId" : "94507e27d00c3f227d820c1ff74cc27f8655259b",
      "LastModified" : "2016-09-09T10:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is a part of CMake source code.\n\n# You can wiew its license on https://github.com/Kitware/CMake/blob/master/Copyright.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/OSDetection.cmake" : {
      "ObjectId" : "768fef1a944de0d7d58babac1df6045c2d7cc2fc",
      "LastModified" : "2016-09-13T18:45:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016 Alexander Shishenko <alex@shishenko.com>\n\n#\n\n# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n# In addition, as a special exception, the copyright holders give\n\n# permission to link the code of portions of this program with the\n\n# OpenSSL library under certain conditions as described in each\n\n# individual source file, and distribute linked combinations\n\n# including the two.\n\n# You must obey the GNU General Public License in all respects\n\n# for all of the code used other than OpenSSL.  If you modify\n\n# file(s) with this exception, you may extend this exception to your\n\n# version of the file(s), but you are not obligated to do so.  If you\n\n# do not wish to do so, delete this exception statement from your\n\n# version.  If you delete this exception statement from all source\n\n# files in the program, then also delete it here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OS detection flags\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Bitness detection\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "0e9bc8b0ddccfeae748622134373029b7c7e14b3",
      "LastModified" : "2017-03-15T20:26:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n\n# Internal compiler options\n\n#============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Sources & headers\n\n#============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main sources\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Platform-dependent sources\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#============================================================================\n\n# Compile targets\n\n#============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#============================================================================\n\n# Third-party libraries\n\n#============================================================================\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##### Bundled libraries #####\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Qt5\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/qtsingleapplication/CMakeLists.txt" : {
      "ObjectId" : "4d70f2c8c2012e749af270ae723e78b68f979f2d",
      "LastModified" : "2016-12-02T09:52:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n\n# Internal compiler options\n\n#============================================================================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setting compiler properties\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#============================================================================\n\n# Compile targets\n\n#============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/qtsingleapplication/buildlib/buildlib.pro" : {
      "ObjectId" : "37dddcdaa0c919a3d50e5308a0c4433e319d97e1",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/common.pri" : {
      "ObjectId" : "924c57c8839282f92f15c73cff6213a751814bba",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/examples/console/console.pro" : {
      "ObjectId" : "e0390e2335a17c481bfeb6c1342b12597ae5dc33",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/examples/examples.pro" : {
      "ObjectId" : "36b8fd3831578d44ee4c634808c64ffd94114b63",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/examples/loader/loader.pro" : {
      "ObjectId" : "3e52586b32ae3d68cabf73c19239b8c05bc21fbd",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/examples/trivial/trivial.pro" : {
      "ObjectId" : "673497a408c6232757b2204fcb954fb9e78c51ca",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/qtsingleapplication.pro" : {
      "ObjectId" : "07257c5d441a3c19a9b3738c24a2f21f8a134283",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/src/qtsingleapplication.pri" : {
      "ObjectId" : "6f2bced94dc6d3f7d115a739e7fdf235fbd8221c",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "contrib/qtsingleapplication/src/qtsinglecoreapplication.pri" : {
      "ObjectId" : "d2d6cc3e148ec45c831641f1afd35cebb33cf92d",
      "LastModified" : "2016-11-23T10:03:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "daemon/CMakeLists.txt" : {
      "ObjectId" : "5d741e8609b0685d66854cc43164bb70c0ba5563",
      "LastModified" : "2017-02-27T21:00:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n\n# Internal compiler options\n\n#============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Sources & headers\n\n#============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main sources\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Platform-dependent sources\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Linux sources\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OS X sources\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#file(GLOB_RECURSE MAC_SRCS \"*.mac.cpp\")\n\n#list(REMOVE_ITEM MAIN_SRCS ${MAC_SRCS})\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#============================================================================\n\n# Compile targets\n\n#============================================================================\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#============================================================================\n\n# Third-party libraries\n\n#============================================================================\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##### Bundled libraries #####\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##### External libraries #####\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Boost\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Qt5\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Protobuf\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## CryptoPP\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## OpenSSL\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##### System libraries #####\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## WinSock\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## CoreFoundation\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "gui/CMakeLists.txt" : {
      "ObjectId" : "87a297a87b2778ddbd6cc82488f83564200c272b",
      "LastModified" : "2017-03-15T19:45:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n\n# Internal compiler options\n\n#============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Sources & headers\n\n#============================================================================\n\n# Universal sources\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows sources\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linux sources\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OS X sources\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#============================================================================\n\n# Third-party packages\n\n#============================================================================\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Translation\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#============================================================================\n\n# Compile targets\n\n#============================================================================\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#============================================================================\n\n# Target properties\n\n#============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#============================================================================\n\n# Third-party libraries\n\n#============================================================================\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Qt\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# QtSingleApplication\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# WinSparkle\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Sparkle (for Macs)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## CoreFoundation\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    }
  },
  "FileTypes" : {
    "CMAKE" : 14,
    "QMAKE" : 9
  },
  "ElapsedTime" : 1237
}