{
  "Repository" : "2754788",
  "Revision" : "HEAD",
  "ObjectId" : "0e189317d76a5cd687adf9765089a3fefd4a6c1d",
  "CommitTime" : "2018-06-26T14:24:03Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0d5397c19793b1523f662392c132ff05906a5ee7",
      "LastModified" : "2017-09-24T10:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Plagiarized by: Dave Cowell for WINDOWS\n\n##\n\n## Author:      bdbcat aka. dsr (Dave Register)\n\n## Copyright:\n\n## License:     wxWidgets License\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For convenience we define the sources as a variable. You can add\n\n# header files and cpp/c files and CMake will sort them out\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We don't use jsonwriter.cpp yet ...\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "Makefile" : {
      "ObjectId" : "ee4ed3edffe5d746d5540b048a18afb9e0d4d72b",
      "LastModified" : "2015-05-23T09:11:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cmake/PluginConfigure.cmake" : {
      "ObjectId" : "a2da9aaa3e99bb19de4eaf496f77b000cb5cd951",
      "LastModified" : "2016-02-02T21:20:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian (Based on the work of Sean D'Epagnier)\n\n## Copyright:   2014\n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This should be 2.8.0 to have FindGTK2 module\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET(CMAKE_BUILD_TYPE Debug)\n\n#SET(CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SET(PROFILING 1)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  IF NOT DEBUGGING CFLAGS=\"-O2 -march=native\"\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  ADD_DEFINITIONS( \"-Wall -g -fexceptions\" )\n\n#  ADD_DEFINITIONS( \"-Wall -Wno-unused-result -g -O2 -fexceptions\" )\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add some definitions to satisfy MS\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# this is just a hack. I think the bug is in FindwxWidgets.cmake\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/PluginInstall.cmake" : {
      "ObjectId" : "c081a590787e9d87a18cf12d376f9d2785a69c06",
      "LastModified" : "2016-07-13T12:37:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian (Based on the work of Sean D'Epagnier)\n\n## Copyright:   2014\n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    TARGET_LINK_LIBRARIES(${PACKAGE_NAME}\n\n#\tgdiplus.lib\n\n#\tglu32.lib)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# assuming wxwidgets is compiled with unicode, this is needed for mingw headers\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#IF(EXISTS ${PROJECT_SOURCE_DIR}/data)\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#ENDIF()\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "cmake/PluginLocalization.cmake" : {
      "ObjectId" : "061c6ffe8b41d8dfc60cf279bbf8d61c988d5e00",
      "LastModified" : "2015-05-23T09:11:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian / Sean D'Epagnier\n\n## Copyright:   \n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/PluginPackage.cmake" : {
      "ObjectId" : "a5a7e679b96e0e6f8b40d94688071066421d511c",
      "LastModified" : "2015-05-23T09:11:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##---------------------------------------------------------------------------\n\n## Author:      Pavel Kalian (Based on the work of Sean D'Epagnier)\n\n## Copyright:   2014\n\n## License:     GPLv3+\n\n##---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build a CPack driven installer package\n\n#include (InstallRequiredSystemLibraries)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to protect against confusable windows users, let us _not_ generate zip packages\n\n#  SET(CPACK_GENERATOR \"NSIS;ZIP\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# override install directory to put package files in the opencpn directory\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CPACK_NSIS_DIR ??\n\n# CPACK_BUILDWIN_DIR ??\n\n# CPACK_PACKAGE_ICON ??\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Let cmake find NSIS.template.in\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#  These lines set the name of the Windows Start Menu shortcut and the icon that goes with it\n\n#  SET(CPACK_NSIS_INSTALLED_ICON_NAME \"${PACKAGE_NAME}\")\n\n#  SET(CPACK_NSIS_DISPLAY_NAME \"OpenCPN ${PACKAGE_NAME}\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  SET(CPACK_PACKAGE_FILE_NAME \"${PACKAGE_NAME}_${VERSION_MAJOR}.${VERSION_MINOR}_setup\" )\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Gunther\n",
        "Line" : 42,
        "CharPositionInLine" : 67
      },
      "9" : {
        "Text" : "#Gunther\n",
        "Line" : 43,
        "CharPositionInLine" : 58
      },
      "10" : {
        "Text" : "#    MESSAGE(STATUS \"Using generic cpack package description file.\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#SET(CPACK_SOURCE_GENERATOR \"TGZ\")\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The following components are regex's to match anywhere (unless anchored)\n\n# in absolute path + filename to find files or directories to be excluded\n\n# from source tarball.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#    INCLUDE(UseRPMTools)\n\n#    IF(RPMTools_FOUND)\n\n#        RPMTools_ADD_RPM_TARGETS(packagename ${CMAKE_SOURCE_DIR}/package.spec)\n\n#    ENDIF(RPMTools_FOUND)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# need apt-get install rpm, for rpmbuild\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# don't bother with rpm on armhf\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# note: in a chroot must use \"setarch i686 make package\"\n",
        "Line" : 93,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# requires my patches to cmake\n",
        "Line" : 103,
        "CharPositionInLine" : 44
      },
      "18" : {
        "Text" : "#    SET(CPACK_RPM_PACKAGE_GROUP \"Applications/Engineering\")\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#    SET(CPACK_RPM_USER_BINARY_SPECFILE \"${CMAKE_SOURCE_DIR}/opencpn.spec.in\")\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    SET(CPACK_SET_DESTDIR ON)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# configure_file(${CMAKE_SOURCE_DIR}/src/opencpn.rc.in ${CMAKE_SOURCE_DIR}/src/opencpn.rc)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this dummy target is necessary to make sure the ADDITIONAL_MAKE_CLEAN_FILES directive is executed.\n\n# apparently, the base CMakeLists.txt file must have \"some\" target to activate all the clean steps.\n\n#ADD_CUSTOM_TARGET(dummy COMMENT \"dummy: Done.\" DEPENDS ${PACKAGE_NAME})\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#  Copy a bunch of files so the Packages installer builder can find them\n\n#  relative to ${CMAKE_CURRENT_BINARY_DIR}\n\n#  This avoids absolute paths in the wmm.pkgproj file\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Patch the pkgproj.in file to make the output package name conform to Xxx-Plugin_x.x.pkg format\n\n#  Key is:\n\n#  <key>NAME</key>\n\n#  <string>${VERBOSE_NAME}-Plugin_${VERSION_MAJOR}.${VERSION_MINOR}</string>\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 25
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1406
}