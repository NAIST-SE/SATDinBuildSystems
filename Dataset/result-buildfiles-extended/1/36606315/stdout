{
  "Repository" : "36606315",
  "Revision" : "HEAD",
  "ObjectId" : "712d257b3873f7ce03026c0120a713f950f82bf6",
  "CommitTime" : "2019-04-11T19:47:46Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "19272649dc5bead72229f3526ce4afdcd78eb42c",
      "LastModified" : "2019-04-11T19:21:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Init CMake (require at least version 3.12.0)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General build settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project name and version\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define installation paths\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Custom CMake base module\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Basic setup for cAER\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Required: threads, math\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Windows needs extra winsock library for portable endian functions.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Search for external libraries with pkg-config.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Required: basic USB devices support\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optional: serial devices support\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Require libserialport, minimum 0.1.1 version.\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Optional: OpenCV support for frame enhancement\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# OpenCV support.\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Subdirectories\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Generate pkg-config file\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Export the cmake configuration for the install tree\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Install udev rules\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Automatic documentation generation support\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Support automatic RPM generation\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#SET(CPACK_RPM_PACKAGE_REQUIRES \"libusbx >= 1.0.17, libserialport >= 0.1.1, opencv >= 3.1.0\")\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#SET(CPACK_DEBIAN_PACKAGE_DEPENDS \"libusb-1.0-0 (>= 1.0.17), libserialport0 (>= 0.1.1), libopencv-contrib3.1 (>= 3.1.0)\")\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmakemod/caer-base.cmake" : {
      "ObjectId" : "b8e2e30afc201104bb8febe8d99709fb0e09a634",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiler cache support\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set compiler info\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set operating system info\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test if we are on a big-endian architecture\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check size of various types\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check threads support (almost nobody implements C11 threads yet! C++11 is fine)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add system defines for header features\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# POSIX system (Unix, Linux, MacOS X)\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Support for large files (>2GB) on 32-bit systems\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Enable C/C++ compiler warnings\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable all warnings for GCC / Clang\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Enable all useful warnings in GCC one-by-one.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Enable all warnings in Clang, then turn off useless ones.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Apply all flags.\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# RPATH settings\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Linker settings\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add --as-needed to linker flags for executables.\n",
        "Line" : 173,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Add --as-needed to linker flags for shared libraries.\n",
        "Line" : 176,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Print info summary for debug purposes\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "2ad5c8a96a58c992c8abe9418314acab8a8f1ff1",
      "LastModified" : "2015-10-13T14:42:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only support call from main cmake.\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Doxygen directories and configuration. HTML and Latex are generated.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate documentation with 'make doc'.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Automatically generate PDF from Latex.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate PDF documentation.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate PDF from Latex with 'make pdf'.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "c660728f78df88f10891c8e8ff91b0d622ed313c",
      "LastModified" : "2019-01-21T11:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "includecpp/CMakeLists.txt" : {
      "ObjectId" : "ecb91d468340ec7546e8003e7e9ef16bb747b57b",
      "LastModified" : "2019-01-21T11:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "9a7de3427a3dc266e6cb2fb94cca14791212138e",
      "LastModified" : "2019-04-11T19:47:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use same object files for both shared and static.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Shared libraries need PIC enabled.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is often the case due to how we try to have multiple compatible\n\n# definitions of functions in C.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Raspberry Pi support available only on Linux.\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Add serial devices.\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Add C++ OpenCV support.\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# The included C headers need to do this (NULL is 0, nullptr not available).\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Clang weirdness: also looks into the C code, which of course\n\n# will use old-style casts (the only cast available there).\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Set full RPATH\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 6
  },
  "ElapsedTime" : 2495
}