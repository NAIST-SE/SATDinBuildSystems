{
  "Repository" : "5889",
  "Revision" : "HEAD",
  "ObjectId" : "ccf4251b89b323fb01f0a18d7aafdcbb3eac4a0e",
  "CommitTime" : "2019-02-14T16:28:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "11f60981cde7ec904cbf37f216c4230b9b328956",
      "LastModified" : "2017-07-23T19:25:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure the Android toolchain before the project start\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project start\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "blocks/Box2D/proj/cmake/Box2DConfig.cmake" : {
      "ObjectId" : "9e5e15d8d14b6aa3e7fb9589c2aaa5dab46f2a99",
      "LastModified" : "2016-07-19T14:22:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/Clipper/samples/BasicBoolean/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "fc38759cca209b0f697b59c43b62e6fb16b901ae",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/OSC/proj/cmake/OSCConfig.cmake" : {
      "ObjectId" : "d4e9f8a0ad20e23fbf9d80b09380f10e4846f100",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/OSC/samples/BroadcastSender/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "78200808663b23be8aba31e2a6f12e5270d6c3be",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/OSC/samples/SimpleMultiThreadedReceiver/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e87308b9490a765d6297bb58d8d1a1935062586f",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/OSC/samples/SimpleMultiThreadedSender/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d7cd1fa0935cea50ba4000f1342d9dd9c16e5767",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/OSC/samples/SimpleReceiver/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "3697079a1d65506a0e88c57decc83a11d1e50830",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: why aren't these different when building out of source?\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "blocks/OSC/samples/SimpleSender/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "2ca3caa4249d0b345b36b14635aa61a1fef03fa9",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/TUIO/proj/cmake/TUIOConfig.cmake" : {
      "ObjectId" : "ae53607bf0093b904d4f3fcd0fa41f8ea6736b4e",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add OSC block as a dependency\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "blocks/TUIO/samples/TuioListener/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "8cb0be1e29054e6d9971df6b160e2a0667aa3c0b",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/TUIO/samples/TuioMultitouchBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e6ba535b0d1542e3b45537505937c6c3aa4af94b",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "blocks/__AppTemplates/__Foundation/linux_cmake/CMakeLists.txt" : {
      "ObjectId" : "e19c14035d099fd81c849c8d63fb973766ed36d2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cube\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use PROJECT_NAME since CMAKE_PROJET_NAME returns the top-level project name.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "include/glm/CMakeLists.txt" : {
      "ObjectId" : "67f114666d464990612d20508a53a42eec3e7726",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "proj/android/CMakeLists.txt" : {
      "ObjectId" : "670395b8778d1fe555fd3c01f3308cbcef06a641",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress compiler checks. Why? CMake seems to be inconsistent\n\n# with how it checks compilers on different platforms. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default values\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# NDK_ROOT\n\n# ------------------------------------------------------------------------\n\n# If NDK_ROOT as not passed in as parameter - check environment variable.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# See if we can find the NDK located next to the Cinder directory\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Most recent first\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# If string begins with \"/\" - remove the first \"/\"\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Create list of path components\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Find Cinder directory\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#math( EXPR _index \"${_numToks} - ${val}\" )\n\n#list( GET _curDirList ${_index} item )\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Bail if we haven't set NDK_ROOT\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# NDK_PLATFORM\n\n# ------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ------------------------------------------------------------------------\n\n# NDK_ARCH\n\n# ------------------------------------------------------------------------\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -- log to console --\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Toolchain, STL (gnustl, libc++)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Switch to gcc49 if on arm64-v8a or x86_64\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Process platform\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Process arch - find tool chain params\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# >> armeabi <<\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Library out dir\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# >> armeabi-v7a <<\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Library out dir\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# >> arm64-v8a <<\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Library out dir\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# >> x86 <<\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Library out dir\n",
        "Line" : 244,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# >> x86_64 <<\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Library out dir\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# >> mips <<\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Library out dir\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# >> mips64 <<\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Library out dir\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# STL\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Architecture\n",
        "Line" : 301,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Architecture\n",
        "Line" : 316,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Toolchain host\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Toolchain prefix\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# sysroot\n\n#if( NOT NDK_TOOLCHAIN_CLANG)\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\n",
        "Line" : 376,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "#endif()\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Compiler, build tool settings\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#set( CMAKE_RANLIB       ${NKD_TOOLCHAIN_ROOT}/bin/llvm-ar   CACHE FILEPATH \"\" FORCE )\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Output path\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Arch flags\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# C_FLAGS\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# CXX_FLAGS\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#${CINDER_SRC_DIR}/cinder/app/AppScreenSaver.cpp\n",
        "Line" : 560,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 48
    },
    "proj/cmake/configure.cmake" : {
      "ObjectId" : "9ee5dc850c1044110344e8d6cab80b198d14895d",
      "LastModified" : "2018-08-05T18:40:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is consumed by the main libcinder cmake configuration and any other targets within the library that depend on it (such as samples and tests).\n\n# Other applications can include it as well to set the same build variables that libcinder uses\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default build type to Debug\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set default target to build for\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# no default target, user must specify\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Configure which gl target to build for, currently only used on linux.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable headless GL rendering support.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Configure platform variables needed by both libcinder and user projects.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find architecture name.\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# CINDER_TARGET_GL is added to CINDER_TARGET_SUBFOLDER on Linux since we can have various builds depending on the target GL.\n\n# e.g on the TK1 we can build both core profile and es2 so this takes care of putting everything on the right place.\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#set( CINDER_ANDROID_NDK_PLATFORM 21 CACHE STRING \"Android NDK Platform version number.\" )\n\n#set( CINDER_ANDROID_NDK_ARCH \"armeabi-v7a\" CACHE STRING \"Android NDK target architecture.\" )\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# TODO: place in msw/arch folder (x64 or x86)\n",
        "Line" : 132,
        "CharPositionInLine" : 53
      },
      "11" : {
        "Text" : "# CINDER_LIB_DIRECTORY is the platform-specific, relative path that will be used to define\n\n# CMAKE_ARCHIVE_OUTPUT_DIRECTORY for libcinder and also specifies where user apps will locate the cinder package\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "proj/cmake/libcinder_configure.cmake" : {
      "ObjectId" : "8bec189f92288f1da7d5d4665060b427a1e2f9a9",
      "LastModified" : "2018-11-05T20:44:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# *_INTERFACE includes get added to targets that depend on cinder.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# *_PRIVATE includes are used by cinder internally, user apps explicitly add these as needed.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find cross-platform packages\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: this can cause a system include location to appear before cinder/include's,\n\n# we need to ensure that can't happen before using this\n\n#find_package( PNG )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\tTODO: finish this, not sure what to do about library linking\n\n#\tfind_package( Freetype2 REQUIRED )\n\n#\tlist( APPEND CINDER_INCLUDE_SYSTEM_PRIVATE  ${FREETYPE2_INCLUDE_DIRS} )\n\n#\tlist( APPEND CINDER_LIBS_DEPENDS \t${FREETYPE2_LIBRARIES} )\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# use freetype copy that ships with cinder\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# declare whether AntTweakBar is available (isn't on mobile devices)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "proj/cmake/libcinder_source_files.cmake" : {
      "ObjectId" : "281ef05f93780aeb8ce4e88c379765c4cfd0f9a0",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is used to specify sources that become part of the libcinder binary, organized according to namespace or folders.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# cinder\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# cinder::app\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# cinder::audio\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# cinder::gl\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# cinder::ip\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# cinder::svg\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# tinyexr\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# glload\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# jsoncpp\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# linebreak\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# libtess\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libtess\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# libpng\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# cinder::params + AntTweakBar\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# FreeType\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ! CINDER_FREETYPE_USE_SYSTEM\n",
        "Line" : 378,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# r8brain\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ----------------------------------------------------------------------------------------------------------------------\n\n# oggvorbis\n\n# ----------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "proj/cmake/libcinder_target.cmake" : {
      "ObjectId" : "dec4c245a04efa6f3ed2b7752df5e9eaa6edfa69",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The type is based on the value of the BUILD_SHARED_LIBS variable.\n\n# When OFF ( default value ) Cinder will be built as a static lib\n\n# and when ON as a shared library.\n\n# See https://cmake.org/cmake/help/v3.0/command/add_library.html for more info.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Visual Studio and Xcode generators adds a ${CMAKE_BUILD_TYPE} to the ARCHIVE \n\n# and LIBRARY directories. Override the directories so, ${CMAKE_BUILD_TYPE} doesn't double up.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assume Visual Studio 2015\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Visual Studio 2013\n",
        "Line" : 36,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# Check compiler support for enabling c++11 or c++14.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Older version of Visual Studio\n",
        "Line" : 77,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# Visual Studio 2013\n",
        "Line" : 79,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# Visual Studio 2015\n",
        "Line" : 81,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# Assume true for Android since compiler is Clang 3.8 at minimum\n",
        "Line" : 86,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# TODO: it would be nice to the following, but we can't until min required cmake is 3.3\n\n#target_compile_options( cinder PUBLIC $<$<COMPILE_LANGUAGE:CXX>:${CINDER_CXX_FLAGS}> )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This file will contain all dependencies, includes, definition, compiler flags and so on..\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# And this command will generate a file on the ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}\n\n# that applications have to pull in order to link successfully with Cinder and its dependencies.\n\n# This specific cinderConfig.cmake file will just hold a path to the above mention \n\n# cinderTargets.cmake file which holds the actual info.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "proj/cmake/modules/FindCLANG.cmake" : {
      "ObjectId" : "48ea6e3973ab794e28bf303dfd23ec8653471e45",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find clang first\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If clang is found - try to find the rest of the tools in the same dir. \n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search in the paths for things that aren't found yet.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_program( CLANG_CLANG\t\tNAMES clang\t\t\tclang-3.8\t\tclang-3.7\t\tclang-3.6\t\tclang-3.5\t\t)\n\n#find_program( CLANG_CLANGXX \tNAMES clang++\t\tclang++-3.8\t\tclang++-3.7\t\tclang++-3.6\t\tclang++-3.5\t\t)\n\n#find_program( CLANG_LLVM_AR\t\tNAMES llvm-ar\t\tllvm-ar-3.8\t\tllvm-ar-3.7\t\tllvm-ar-3.6\t\tllvm-ar-3.5\t\t)\n\n#find_program( CLANG_LLVM_LINK\tNAMES llvm-link\t\tllvm-link-3.8\tllvm-link-3.7\tllvm-link-3.6\tllvm-link-3.5\t)\n\n#find_program( CLANG_LLVM_NM\t\tNAMES llvm-nm\t\tllvm-nm-3.8\t\tllvm-nm-3.7\t\tllvm-nm-3.6\t\tllvm-nm-3.5\t\t)\n\n#find_program( CLANG_LLVM_RANLIB\tNAMES llvm-ranlib\tllvm-ranlib-3.8\tllvm-ranlib-3.7\tllvm-ranlib-3.6\tllvm-ranlib-3.5\t)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "proj/cmake/modules/FindFontConfig.cmake" : {
      "ObjectId" : "0025154bba11ca879119a48fe7ab2f3420429d23",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the  Fontconfig\n\n# Once done this will define\n\n#\n\n#  FONTCONFIG_FOUND - system has Fontconfig\n\n#  FONTCONFIG_INCLUDE_DIR - The include directory to use for the fontconfig headers\n\n#  FONTCONFIG_LIBRARIES - Link these to use FONTCONFIG\n\n#  FONTCONFIG_DEFINITIONS - Compiler switches required for using FONTCONFIG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "proj/cmake/modules/FindFreetype2.cmake" : {
      "ObjectId" : "1b8a20c07b6ef8766a331741dcf731661771566c",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013 Nokia Corporation and/or its subsidiary(-ies).\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\n\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n\n# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since Freetype 2.5.1 there is no freetype/freetype.h, so this variable can be null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Inspired in the original FindFreetype.cmake\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "proj/cmake/modules/FindGStreamer.cmake" : {
      "ObjectId" : "25a59897c759daec815da89b47694504a5ab8b44",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GStreamer and its plugins\n\n# Once done, this will define\n\n#\n\n#  GSTREAMER_FOUND - system has GStreamer\n\n#  GSTREAMER_INCLUDE_DIRS - the GStreamer include directories\n\n#  GSTREAMER_LIBRARIES - link these to use GStreamer\n\n#\n\n# Additionally, gstreamer-base is always looked for and required, and\n\n# the following related variables are defined:\n\n#\n\n#  GSTREAMER_BASE_INCLUDE_DIRS - gstreamer-base's include directory\n\n#  GSTREAMER_BASE_LIBRARIES - link to these to use gstreamer-base\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to find_package()\n\n# and GStreamer plugins can be looked for.  Currently, the following\n\n# plugins can be searched, and they define the following variables if\n\n# found:\n\n#\n\n#  gstreamer-app:        GSTREAMER_APP_INCLUDE_DIRS and GSTREAMER_APP_LIBRARIES\n\n#  gstreamer-audio:      GSTREAMER_AUDIO_INCLUDE_DIRS and GSTREAMER_AUDIO_LIBRARIES\n\n#  gstreamer-fft:        GSTREAMER_FFT_INCLUDE_DIRS and GSTREAMER_FFT_LIBRARIES\n\n#  gstreamer-gl:         GSTREAMER_GL_INCLUDE_DIRS and GSTREAMER_GL_LIBRARIES\n\n#  gstreamer-mpegts:     GSTREAMER_MPEGTS_INCLUDE_DIRS and GSTREAMER_MPEGTS_LIBRARIES\n\n#  gstreamer-pbutils:    GSTREAMER_PBUTILS_INCLUDE_DIRS and GSTREAMER_PBUTILS_LIBRARIES\n\n#  gstreamer-tag:        GSTREAMER_TAG_INCLUDE_DIRS and GSTREAMER_TAG_LIBRARIES\n\n#  gstreamer-video:      GSTREAMER_VIDEO_INCLUDE_DIRS and GSTREAMER_VIDEO_LIBRARIES\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper macro to find a GStreamer plugin (or GStreamer itself)\n\n#   _component_prefix is prepended to the _INCLUDE_DIRS and _LIBRARIES variables (eg. \"GSTREAMER_AUDIO\")\n\n#   _pkgconfig_name is the component's pkg-config name (eg. \"gstreamer-1.0\", or \"gstreamer-video-1.0\").\n\n#   _library is the component's library name (eg. \"gstreamer-1.0\" or \"gstvideo-1.0\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------\n\n# 1. Find GStreamer itself\n\n# ------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1.1. Find headers and libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -------------------------\n\n# 2. Find GStreamer plugins\n\n# -------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ------------------------------------------------\n\n# 3. Process the COMPONENTS passed to FIND_PACKAGE\n\n# ------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "proj/cmake/modules/FindGlib.cmake" : {
      "ObjectId" : "6362be1f6d0ee56f3a699a397f9c8c0b0a8fe48e",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib and its components (gio, gobject etc)\n\n# Once done, this will define\n\n#\n\n#  GLIB_FOUND - system has Glib\n\n#  GLIB_INCLUDE_DIRS - the Glib include directories\n\n#  GLIB_LIBRARIES - link these to use Glib\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to find_package()\n\n# and Glib components can be looked for.  Currently, the following\n\n# components can be used, and they define the following variables if\n\n# found:\n\n#\n\n#  gio:             GLIB_GIO_LIBRARIES\n\n#  gobject:         GLIB_GOBJECT_LIBRARIES\n\n#  gmodule:         GLIB_GMODULE_LIBRARIES\n\n#  gthread:         GLIB_GTHREAD_LIBRARIES\n\n#\n\n# Note that the respective _INCLUDE_DIR variables are not set, since\n\n# all headers are in the same directory as GLIB_INCLUDE_DIRS.\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files in glib's main include path may include glibconfig.h, which,\n\n# for some odd reason, is normally in $LIBDIR/glib-2.0/include.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version detection\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additional Glib components.  We only look for libraries, as not all of them\n\n# have corresponding headers and all headers are installed alongside the main\n\n# glib ones.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# gio-unix is compiled as part of the gio library, but the include paths\n\n# are separate from the shared glib ones. Since this is currently only used\n\n# by WebKitGTK+ we don't go to extraordinary measures beyond pkg-config.\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "proj/cmake/modules/FindMPG123.cmake" : {
      "ObjectId" : "360e8b6ef1cb10500b5148cd84c82bbdc6246661",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013 Martin Felis <martin@fysx.org>\n\n# License: Public Domain (Unlicense: http://unlicense.org/)\n\n#\n\n# Try to find MPG123. Sets the following variables:\n\n#   MPG123_FOUND\n\n#   MPG123_INCLUDE_DIR\n\n#   MPG123_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "proj/cmake/modules/FindOSMesa.cmake" : {
      "ObjectId" : "1604db1d04a6e51bfee08de400a6879e1640890d",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find OSMesa. Once done this will define\n\n#\n\n# OSMESA_FOUND\t\t\t- true if OSMesa has been found\n\n# OSMESA_INCLUDE_DIR\t- where the GL/osmesa.h can be found\n\n# OSMESA_LIBRARIES\t\t- Link this to use OSMesa\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "proj/cmake/modules/FindSNDFILE.cmake" : {
      "ObjectId" : "ee1e2a5ed962d4adaa828fc0879214acc8e85bce",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013 Martin Felis <martin@fysx.org>\n\n# License: Public Domain (Unlicense: http://unlicense.org/)\n\n#\n\n# Try to find SNDFILE. Sets the following variables:\n\n#   SNDFILE_FOUND\n\n#   SNDFILE_INCLUDE_DIR\n\n#   SNDFILE_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "proj/cmake/modules/cinderAndroidToolchain.cmake" : {
      "ObjectId" : "7d0ba6463c257ee2dfbf63f6a2f7a79111c07800",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force some known options\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NDK path\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look at environment variable NDK_DIR\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Make sure there's an NDK dir specified\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure the specified NDK dir exists\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NDK platform - defaults to platform 24\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for minimum platform\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NDK architecture - defaults to ARMV8\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Validate architecture\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# NDK host\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Print relevant information\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setup platform and toolchain dirs\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Print tool chain dirs\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Setup toolchain\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Suppress compiler checks for Android since building happens on a host system\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Configure system root\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Print system root dir\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Suppress this on macOS host\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# STL include directories \n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Architecture flags\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Force hard float, Vulkan requires the use the hard float calling convention or the build will break.\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# C_FLAGS\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMAKE_FLAGS\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# CXX_FLAGS\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# CMAKE_CXX_FLAGS\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "proj/cmake/modules/cinderMakeApp.cmake" : {
      "ObjectId" : "5409dcb512e1e9fc4fce489f14bc969c50e8943c",
      "LastModified" : "2018-08-05T18:40:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the default assets path to be in the standard app location (next to proj folder)\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Give the user the option to define with which build type of Cinder the application should link.\n\n# By default the application will link with Cinder based on CMAKE_CURRENT_BUILD_TYPE.\n\n# Use CINDER_APP_LINK_RELEASE or CINDER_APP_LINK_DEBUG to force the app to link with a specific build version of Cinder.\n\n#\n\n# In order to achieve this we override the build type which is embedded\n\n# in the CINDER_LIB_DIRECTORY path and included from the configure.cmake file.\n\n#\n\n# Disabling this option on MSW since the platform doesn't properly support mixing Debug and Release versions.\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Append the build type to the output dir\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# place the binary one level deeper, so that the assets folder can live next to it when building out-of-source.\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# This ensures that the application will link with the correct version of Cinder\n\n# based on the current build type without the need to remove the entire build folder\n\n# when switching build type after an initial configuration. See PR #1518 for more info.\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# pull in cinder's exported configuration\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# ensure the runtime output directory exists, in case we need to copy other files to it\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# set icon. TODO: make this overridable\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# copy .icns to bundle's resources folder\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# copy any other resources specified by user\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# copy resources to a folder next to the app names 'resources'. note the folder is flat, so duplicates will be overwritten\n",
        "Line" : 100,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Don't allow resources to be added to the executable on linux\n",
        "Line" : 109,
        "CharPositionInLine" : 26
      },
      "12" : {
        "Text" : "# Override the default /MD with /MT\n",
        "Line" : 113,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# Force synchronous PDB writes\n",
        "Line" : 124,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# Force multiprocess compilation\n",
        "Line" : 126,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# Add lib dirs\n",
        "Line" : 128,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# Ignore Specific Default Libraries for Debug build\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Blocks are first searched relative to the sample's CMakeLists.txt file, then within cinder's blocks folder\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# First check if a target was defined. If so then includes and extra libraries will automatically be added to the app target.\n",
        "Line" : 165,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# Otherwise, check for either includes for a header-only block or libraries that need to be linked.\n\n# - sanity check to warn if someone passed in a block with unexpected cmake configuration\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# set bundle info.plist properties\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Handle assets directory so that it can be found relative to the application.\n",
        "Line" : 196,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# make a hard copy. Skipping the extra 'assets' folder as it we're copying the entire folder over\n",
        "Line" : 206,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# Get OS dependent path to use in `execute_process`\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# it appears the file( REMOVE_RECURSE ) command above doesn't work with windows junctions,\n\n# so remove it using a native command if it still exists.\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# make a windows symlink using mklink\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# make a symlink\n",
        "Line" : 244,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 27
    },
    "proj/cmake/modules/findCMakeDirs.cmake" : {
      "ObjectId" : "2948740500eb778dd536a60e045f52f721820daf",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Recursively finds directories that end in \"proj/cmake\", which contain a CMakeLists.txt (ex. samples and tests)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "proj/cmake/platform_android.cmake" : {
      "ObjectId" : "c8abc2202bc7e46f8322dfae2d5b42f1bbcab2e3",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "proj/cmake/platform_ios.cmake" : {
      "ObjectId" : "3a3b72d4782cf0750cd262ccdc403ac8ac0472ef",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "proj/cmake/platform_linux.cmake" : {
      "ObjectId" : "e546a7840841d76a58a16ffa3dbad65ed651d7d6",
      "LastModified" : "2018-08-05T18:40:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# When CINDER_HEADLESS is set, ${SRC_SET_GLFW} will *not* be compiled.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t${CINDER_SRC_DIR}/cinder/audio/linux/ContextJack.cpp\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\t${CINDER_SRC_DIR}/cinder/audio/linux/DeviceManagerJack.cpp\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Curl\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Relevant source files depending on target GL and if we running headless.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Desktop ogl, es2, es3, RPi\n",
        "Line" : 57,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "# GLFW\n",
        "Line" : 69,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "# RPi\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Headless egl, osmesa\n",
        "Line" : 86,
        "CharPositionInLine" : 7
      },
      "9" : {
        "Text" : "# Relevant libs and include dirs depending on target platform and target GL.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Headless through EGL\n",
        "Line" : 116,
        "CharPositionInLine" : 31
      },
      "11" : {
        "Text" : "# Common libs for Linux.\n\n# ZLib\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Curl\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# FontConfig\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PulseAudio\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# mpg123\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# sndfile\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# GStreamer and its dependencies.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Glib\n",
        "Line" : 176,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# GStreamer\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# If we have gst-gl available add it.\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Boost\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Defaults... dl and pthread\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Workaround for gcc bug on versions > 5.3.1 when building as a shared lib.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Cinder GL defines depending on target GL.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# rpi\n",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Set appropriate defines when running headless.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If not headless and not on the RPi we need X.\n",
        "Line" : 256,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 28
    },
    "proj/cmake/platform_macosx.cmake" : {
      "ObjectId" : "1b8d229eeecc39f57a69e91187c424eaa9b4d1c9",
      "LastModified" : "2018-08-05T18:40:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# append mac specific source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# specify what files need to be compiled as Objective-C++\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# link in system frameworks\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# some Core Video functions are used inside CinderCocoa.mm so we have to link for\n\n# now even if CINDER_DISABLE_AUDIO is defined.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Option for using GStreamer under OS X.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These are samples that cannot be built on Mac OS X, indicating they should be skipped with CINDER_BUILD_ALL_SAMPLES is on.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "proj/cmake/platform_msw.cmake" : {
      "ObjectId" : "78dcb1dff100c494541d0d00ce32cc2b15c31a73",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: should these two files be added to \"cinder\\\\app\" group?\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#${CINDER_SRC_DIR}/cinder/app/RendererDx.cpp\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#${CINDER_SRC_DIR}/cinder/app/msw/RendererImplDx.cpp\n\n#${CINDER_SRC_DIR}/cinder/app/msw/RendererImplGlAngle.cpp\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Option for using GStreamer under MSW.\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# NOTE: UNICODE and _UNICODE forces generator to use Unicode instead of MultiByte\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Override the default /MD with /MT\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Force synchronous PDB writes\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Force multiprocess compilation\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Static library flags\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Platform libraries \n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Static library debug depends\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Static library release depends\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "proj/cmake/utilities.cmake" : {
      "ObjectId" : "9915d9caabb9bc211b8442f830f32bb166fedffb",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only prints if CINDER_VERBOSE is On\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Alawys prints\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "samples/ArcballDemo/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9b426f318e68aa900f9c4ea3c4099a8ac86c305d",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/BasicApp/androidstudio/BasicApp/app/proguard-rules.pro" : {
      "ObjectId" : "8861331f149b1a1d127873791497bdb6de2e39b2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/hai/DevTools/android/android-sdk-macosx/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "samples/BasicApp/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "3a395bf65fb5dca50ea5d70f8e55b810a8d106de",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/BasicAppMultiWindow/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9c4c4560791c038c01a9ced328de7b9d6875d189",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/BezierPath/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "6407325d165c944bb2799b86aaa399f3546bc4e7",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/BezierPathIteration/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e321aa1e782c37791155200cc8e2e3890b549614",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/CairoBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "5b32e8964da3fc5e5420a364cb2c6d3dc5c36606",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/CameraPersp/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e4a37f052891d26c15bb4b7add664614881e4528",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/CaptureBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d377cd568c50a118a66f888fddba209ddd3cf4e8",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/CaptureCube/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "a13c8ad5225827930be792ccffdbb946eb62add7",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/ClipboardBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "978d7ff574dad7a5e808e7c6fe191994582b8941",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Compass/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "eb6e6b133ff0eba6add5c77c1700cabcbb141499",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Earthquake/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "70e55fb4c96b891db4cf1c75f396cc27959b0cdd",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/EaseGallery/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "c0d988f4c8cdd86368f2abfd015040aa8de5ac6a",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Extrude/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "7a3e926d5ea0b80b268607cc1aeb0202eb3fca14",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/FallingGears/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "b62202a85dc2d24f0586dd8f4efa4f02ad4af22d",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/FlickrTestMultithreaded/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "a7e0e3423f78ee5f708fbb0034d73343385fe02a",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/FontSample/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "0fb71aa9ec12dde127b47f353ac19b8ff603b3a4",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/FrustumCulling/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9746988b97f2a7224a793f7defe9e866a9172b42",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Geometry/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "dced530bd1a0688a12ffcccd8100c757ef43d93c",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/ImageFileBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e223170c29781692b84d346e3ccf77a77d40b822",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/ImageHeightField/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "5f512d2e8f22d6af384c772fba0a8b55d0f5e8bd",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Kaleidoscope/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d5c5093e922d80fe639e93f42973f5dc94b8007e",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/LocationManager/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "b6350663a4d23670a4943438e5bc030a7ac85211",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Logging/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "04e30b6dbe89f7d796da37264d7e6172e0c35c6f",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/MandelbrotGLSL/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "1044e473dc75ff92c8d466a13578477f5756e98c",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/MotionBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9212585fa06320b6365ff0f7d6edf1763edb0716",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/MultiTouchBasic/androidstudio/MultiTouchBasic/app/proguard-rules.pro" : {
      "ObjectId" : "8861331f149b1a1d127873791497bdb6de2e39b2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/hai/DevTools/android/android-sdk-macosx/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "samples/MultiTouchBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "f3819ed170b31c72d032c721c5c8d6b8e4cda8fc",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/ParamsBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "71975e6442b992f7ddb7b5b72fc30deb516341ac",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Picking3D/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d753aec96964e534e2f657da354d77114ea178f8",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/QuaternionAccum/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "4fe6f83bce406abb76c07b594a1a284045af784d",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/QuickTimeAdvanced/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "ce15d505be4802dd861e53ea440943c8be709be4",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/QuickTimeAvfWriter/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "4447bc0855eb6e703a4caffbda96bbbaa64e5232",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/QuickTimeBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "a9ea882ece79b8531da3a2442939b3f3b5abbddd",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/QuickTimeIteration/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "06695b1580740d3b3f293fc7bb0f92c26dd10924",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/RDiffusion/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e12d029d7cf5207b284f1ab55ec34d0ca81deddb",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Renderer2dBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "130f111728444fe07796802e30162767289061f2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/SaveImage/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "aef1a1473a416c571728e1492201396f0989c7b9",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/SerialCommunication/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "3309c9dc732f13339a611080ffeb476bd9632a7a",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/StereoscopicRendering/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "5c32bc2335a91ea7f0195cf65d05bfabe9707c46",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/SurfaceBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "336e782965a3c1617750337c0ec44d72d808e1f0",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/TextBox/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "8a554e67500290f8093234562c025729ecef8ad7",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/TextTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "bbb92020d6c65f9458b67948ed516775672d3cac",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/TextureFont/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "db86775068afd4fe448cd759993e1d3c2ea3b55a",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Triangulation/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "0e894eb09f03d38897b4eb5014d6c6ac5fed9ef2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Tubular/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "8a31a61289774948c6b81abe540914902a90f33c",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/VoronoiGpu/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e95aad2d60c7347c79737bd69e3f5363c6497164",
      "LastModified" : "2018-11-15T05:52:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/Wisteria/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9b7cbcabb6bbec1ddd517a7677c83fb31ae5b6e8",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/BufferPlayer/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "4c06694ff0f8c943bf67bffd29e14e092f17f420",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/DelayFeedback/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "fe7a221ef87b52f91d6887466d4eb6a4ef4f9b8e",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/InputAnalyzer/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "61d1fd50e457c9c10046f36627d264a581a57213",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/MultichannelOutput/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "6ee81e7d0fc7383642c02d52821e82bfef1673a0",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/NodeAdvanced/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e7daa87dfc6d6591cfe348b02a428313328f430e",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/NodeBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "4dbf121f29fabf92aa44fc32c2f7ed96b3f87b9a",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/NodeSubclassing/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "1734963f6d195023fcfa16789fa93cc9fbaa404c",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/VoiceBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9cfc54f1627051bf6ff9eba79c5fe5c73d764518",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_audio/VoiceBasicProcessing/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "c700229d818efef32e9f1112255490ad0e413341",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ClothSimulation/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "896b2683de6401f73ec5007f0c31b13e1a7ff2e3",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/Cube/androidstudio/Cube/app/proguard-rules.pro" : {
      "ObjectId" : "8861331f149b1a1d127873791497bdb6de2e39b2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/hai/DevTools/android/android-sdk-macosx/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "samples/_opengl/Cube/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "3abf7063959df82a16cf67c4e948b5b3ea95638d",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/CubeMapping/androidstudio/CubeMapping/app/proguard-rules.pro" : {
      "ObjectId" : "8861331f149b1a1d127873791497bdb6de2e39b2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/hai/DevTools/android/android-sdk-macosx/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "samples/_opengl/CubeMapping/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "7fdab05894e1e2f3a12fd76e31a332008aa4ba05",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/DeferredShading/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "840c1665777adda7984647cb157554793b454d41",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/DeferredShadingAdvanced/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "37b472b7005955a6f99430ba7bba8eda72023545",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/DynamicCubeMapping/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d16355b9f27676ca4bc9e3094bac47c256c95ff2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/FboBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "3a8092095efac1de72bea95e00f29602d5890f27",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/FboMultipleRenderTargets/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "ab6673b9d7a02471bc22deba555af007766657bb",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/GeometryShaderBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "3c5babbd5d4f5d5f3fde7e506b4e92919c44ed5c",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/HighDynamicRange/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "023a875f3084ffccd6341e8c98979d747ee28c29",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ImmediateMode/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "89dbfebbd21bc72d1456b285fec4098cd75a491b",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/InstancedTeapots/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e4dbe29161e7f4e140e90869e81362427664d265",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/LevelOfDetailIndirect/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "cee8d309e38b20a3c1db80650670476c6b9aaa91",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/MipMap/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "5f280de1dd04ac82244c82e5b5478e5610414b6e",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/MotionBlurFbo/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d9dbe2cb4a80246a8e39f576a68e55bc800bea4b",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/MotionBlurVelocityBuffer/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "623af33d31a24e646e87cb2d0759a140fae0dd31",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/NVidiaComputeParticles/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9873bea98ac2f942e676f6fff14b6e2e10ccaf48",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/NormalMapping/androidstudio/NormalMapping/app/proguard-rules.pro" : {
      "ObjectId" : "8861331f149b1a1d127873791497bdb6de2e39b2",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /Users/hai/DevTools/android/android-sdk-macosx/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "samples/_opengl/NormalMapping/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "50564c7bcca989fb329e94c3c52b31d1a80d011b",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/NormalMappingBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "eee1581f7aa2ff1e3c450b406370e2f19f8d5b5a",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ObjLoader/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e62ce01e7b0459bf08362b2a84344079676122d1",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/PBOReadBack/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "5bbc51308ff6999f7d9d7a0e442b5d591ef792b8",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ParticleSphereCPU/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e59e12cbc56d7ac7a3dd588b3827d0390ae73857",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ParticleSphereCS/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "5dba6f721c18ab5abfe44865003817b913b7f94b",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ParticleSphereGPU/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "8c438616a91bec509be8d2015d732591736e4058",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ParticlesBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "4dca404e3a49fb0bce8908efd2ed46de0d2d87d8",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/PickingFBO/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "8130dce4df45224f229bc51cfeed8fc7b6cc4678",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/PostProcessingAA/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "fef122717d497d006343ea81533b7c1ac1c580ab",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ShadowMapping/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "c6c214729326f234cf2ef093a1e013a691c9a78b",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/ShadowMappingBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "421251867cd8f8919e084cae0465654188babd5c",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/StencilReflection/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "67c6dc12318eecc43ab9c64b0b91eeb4a47d29e3",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/SuperformulaGPU/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9c35446e02625e5e21d254b98c686a6cdc111ea6",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/TessellationBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e73ccfcceb29900509e4bb62a68795b62d0acad6",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/TessellationBezier/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9e5031fbb8f449855a903eac6cd423b623cc6e2c",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/TransformFeedbackSmokeParticles/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "818523e6ec21bb5c01bd262d25f53cbdc0489ff5",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_opengl/VboMesh/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "f1999a4beb9ee8a8278fa88e9b74fcdacc9fe692",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_svg/AnimatedReveal/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "f7c278d00b619500d8b40396e147ff16b8c5de43",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_svg/EuroMap/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "62cf9bde80616e740c3affed0604c459bc5a8bd0",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_svg/GoodNightMorning/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d09a8ed58570ed7b1e346597072980995991cfdc",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_svg/SimpleViewer/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "de643908e0ff3bd88d95f1228c2a2d9f106fc4c6",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/BasicAppendTween/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "81c15effcd7b6c8950367bdd97c99bc0be8b9708",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/BasicTween/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "4da9ef259948ce5759829e8e1872a7cf26f0201a",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/CustomCallback/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "7f5e632bb8884ef85af9cdc57c8098668bb8b680",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/CustomLerp/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "5d87cdaa31793823b75af6e65b18c16c1ed22e9f",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/DragTween/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "fb7670f70e3d971b6ffdb7a128d7dfca6dbcdaa1",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/ImageAccordion/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9893f110cead606d96927f3add99f5a43a8a6ac5",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/PaletteBrowser/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "7ef0167f6174c40ae14196e6eb84b0bd661b4cd5",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/TextInputTween/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "b2a2b89b497e9a79fd3575be449ad63b706cd722",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/_timeline/VisualDictionary/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "8f35bd2a303bb323c3d1cf053b4f59515e4f3378",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/perlinTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "67f1a398a1f50c1956cc6490196188a7c8c18e67",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/slerpBasic/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "da626754b87cc7889ee78c4f014b3006314f75d6",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/freetype/tools/ftrandom/Makefile" : {
      "ObjectId" : "24dc49c563961522b068c37a31bbb81bcf70eac1",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform,\n\n# where FreeType has been set up to create a static library\n\n# (which is the default).\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/glfw/src/CMakeLists.txt" : {
      "ObjectId" : "5042aba382aa86dba035b84c5955adef6f7ee821",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For some reason, CMake doesn't know about .m\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# HACK: When building on MinGW, WINVER and UNICODE need to be defined before\n\n# the inclusion of stddef.h (by glfw3.h), which is itself included before\n\n# win32_platform.h.  We define them here until a saner solution can be found\n\n# NOTE: MinGW-w64 and Visual C++ do /not/ need this hack.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable a reasonable set of warnings (no, -Wextra is not reasonable)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove the lib prefix on the DLL (but not the import library\n",
        "Line" : 87,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 93,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Add -fno-common to work around a bug in Apple's GCC\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Hide symbols not explicitly tagged for export from the shared library\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "test/CMake/TestApp/CMakeLists.txt" : {
      "ObjectId" : "eadf4fa60d1d224376dc0942a4982cd12d249240",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Basic\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use PROJECT_NAME since CMAKE_PROJET_NAME returns the top-level project name.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/DisplayTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d0adb827ca8c77f1e85a25c00cd0e75c9260a7ff",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Linux/AudioLoader/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d168ba34eb2dab58fa2db9bb92f0b35d9e0a0bb8",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Linux/GstPlayerRefactorTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "210487321122d532bcbec0d5a614db314159a77d",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Linux/HeadlessTestApp/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "718e635cde6b749d82abf03cb318eed8a2113703",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Linux/Input/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "c8158541640879b760948c7b1966e77467d6ea90",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Linux/LoadUrl/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e8cc72fb905b10053cf4b9b35f816fc561aee6f4",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Linux/PlatformTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "8f55fc39ebe835e182996da177bc300165529b4f",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Video/VideoPlayerScrubTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "f8912618ef93dcf3392b4b57c9bc7fd14d6db728",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/_audio/DeviceTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "7b1109533ef007791695940b13e8653a9bc044f5",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/_audio/SampleTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "e1ff8c408b98b578dee716669fac82b7f795d1da",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/_opengl/SamplerObject/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d8e67af7df21930dc17c09d9a10498037bb6f383",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/eventTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "efbbb02b560fbfe75fd68c6e69b1240ddd1f6d92",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "d7c54e5206732ce28d1e15408ed53b93773e0e99",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for catch.hpp\n",
        "Line" : 33,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "test/windowTest/proj/cmake/CMakeLists.txt" : {
      "ObjectId" : "9974a4308df0c961504e55027092ff340aa55797",
      "LastModified" : "2018-05-07T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 158,
    "QMAKE" : 5,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 8391
}