{
  "Repository" : "10830",
  "Revision" : "HEAD",
  "ObjectId" : "db2ba267171ddd89b4253ded3b640a219290c315",
  "CommitTime" : "2013-03-24T13:45:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "90de92c9c199601addad5f4f4414162bf410f43f",
      "LastModified" : "2013-03-21T21:39:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# most stuff should be implemented so far, what is not working so far:\n\n# * some other smaller stuff\n\n# * nice INSTALL howto\n\n# * Detect Python and install Python tools\n\n# * Rewrite the po4a-update\n\n# * Test everything\n\n# * install .desktop files taking binary prefix and suffix into account\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set minimum version\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use our own version of FindBoost.cmake and other Find* scripts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# no, gettext executables are not required when NLS is deactivated\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# yes, libintl is *required* even when NLS is deactivated (this is to compile\n\n# src/gettext.cpp since it includes libintl.h)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#needed to get some SDL defines in... (as of rev31694 -D_GNU_SOURCE=1 is required!)\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Use the safer `mkstemp' instead of `tmpnam' on POSIX systems.\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#check for some compiler/arch specific things and export defines accordingly...\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Options\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Path options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Game options\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#server options\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#build options\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# TODO test whether can be enabled by default\n",
        "Line" : 88,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# The use of shared libraries makes compilation debug versions faster but\n\n# results in extra shared libraries. For installation this is not practical\n\n# since the libraries need to be given SONAMES and kept in sync. Therefore\n\n# installation is not supported for this option and will probably fail.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#misc options\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Pot updates don't work at Windows so no reason to even try\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#\n\n# Handle options (set paths/definitions/etc...)\n\n#\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##### Set the compiler flags.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This macro checks whether a compiler supports a compiler flag.\n\n#\n\n# If the flag is supported the flag will be added to the target compiler flags.\n\n# GCC seems to be quite happy to accept flags it does not support when there is\n\n# a `no' in it e.g. -Wno-not_supported_flag but will fail to compile with\n\n# -Wnot_supported_flag. For that case all not-named parameters will be added to\n\n# the target instead.\n\n#\n\n# param target                    The variable to add the compiler flag to.\n\n# param flag                      The compiler flag to test.\n\n# param variable                  The test macro needs a variable to store the\n\n#                                 result of the test, this paramter holds that\n\n#                                 variable.\n\n# param ...                       If this variable is set it will be added to\n\n#                                 target instead of flag when the compiler\n\n#                                 supports flag.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "### Set the environment compiler flags.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The CONFIGURED flag was replaced when trunk `was' 1.11, before the release of 1.11.0\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "### Set default Wesnoth project compiler flags\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# MSVC sets some initial compilation flags, these need to\n\n# be preserved.\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "### Set strict compiler flags.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The current unit test code breaks strict aliasing with g++ 4.4.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This flag is/will be added in gcc-4.8 and fails with BOOST_STATIC_ASSERT\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This flag is/will be added in gcc-4.8 and fails with png in C++11 mode\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# This removes a lot of warnings from Clang regarding unused -I arguments\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Silences Clang warnings about declaring a class a class first and\n\n# a struct later.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Silences warnings about overloaded virtuals.\n\n# (GCC doesn't complain Clang does.)\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "### Set pedantic compiler flags.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "### Set the final compiler flags.\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Assume the compiler is the clang compiler.\n",
        "Line" : 381,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# compose datadir path of datarootdir and datadirname\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# When the path starts with a / on a Unix system it's an absolute path.\n\n# This means that on Windows the path used is always relative.\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# Libraries that are only required by some targets\n\n#\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# get languages\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\n\n# Include subdirectories\n\n#\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n# Install files\n\n#\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\n\n# Install desktop file so wesnoth appears in the application start menu with an icon\n\n# TODO: string replacement to have the real binary name in does not work atm, because in the Categories= block semicolons are lost...\n\n#\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# do some crude string replacing to have the real binary name in the .desktop file (read in original .desktop file, replace the Exec= line with the correct value and output the generated file)\n\n#  file(READ icons/wesnoth.desktop wesnoth-desktop-orig)\n\n#string(REGEX REPLACE \"(\\nName.*=.*)\\n\" \"\\\\1 (${BINARY_SUFFIX})\\n\" wesnoth-desktop-modified ${wesnoth-desktop-orig} )\n\n#  string(REPLACE \"Exec=wesnoth\" \"Exec=${BINARY_PREFIX}wesnoth${BINARY_SUFFIX}\" wesnoth-desktop-modified ${wesnoth-desktop-orig} )\n\n#  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_PREFIX}wesnoth${BINARY_SUFFIX}.desktop ${wesnoth-desktop-modified} )\n",
        "Line" : 517,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "#execute_process(COMMAND sed \"-i\" \"'s/^\\(Name.*=.*\\)$/\\1TEST/g'\" ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_PREFIX}wesnoth${BINARY_SUFFIX}.desktop )\n\n#exec_program(sed ARGS \"-i\" \"'s/^\\(Name.*=.*\\)$/\\1TEST/g'\" ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_PREFIX}wesnoth${BINARY_SUFFIX}.desktop )\n\n# install the generated .desktop file\n\n#  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_PREFIX}wesnoth${BINARY_SUFFIX}.desktop DESTINATION ${DESKTOPDIR} )\n",
        "Line" : 523,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# do some crude string replacing to have the real binary name in the .desktop file (read in original .desktop file, replace the Exec= line with the correct value and output the generated file)\n\n#    file(READ icons/wesnoth_editor.desktop wesnoth-editor-desktop-orig)\n\n#    string(REPLACE \"Exec=wesnoth -e\" \"Exec=${BINARY_PREFIX}wesnoth${BINARY_SUFFIX} -e\" wesnoth-editor-desktop-modified ${wesnoth-editor-desktop-orig} )\n\n#    file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_PREFIX}wesnoth_editor${BINARY_SUFFIX}.desktop ${wesnoth-editor-desktop-modified} )\n\n# install the generated .desktop file\n\n#    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${BINARY_PREFIX}wesnoth_editor${BINARY_SUFFIX}.desktop DESTINATION ${DESKTOPDIR} )\n",
        "Line" : 530,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# install systemd stuff if it is installed\n",
        "Line" : 543,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#        configure_file(packaging/systemd/wesnothd.tmpfiles.conf.in ${CMAKE_BINARY_DIR}/wesnothd.conf)\n\n#        configure_file(packaging/systemd/wesnothd.service.in ${CMAKE_BINARY_DIR}/wesnothd.service)\n\n#        install(FILES ${CMAKE_BINARY_DIR}/wesnothd.conf DESTINATION lib/tmpfiles.d)\n\n#       install(FILES ${CMAKE_BINARY_DIR}/wesnothd.service DESTINATION lib/systemd/system)\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Index for checking states of localized images at runtime.\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\n\n# uninstall\n\n#\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n# Packaging stuff\n\n#\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "cmake/FindFriBiDi.cmake" : {
      "ObjectId" : "f980dad45528fa22c525fe67aab76dd9f48ed3a3",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the native FriBiDI includes and library\n\n#\n\n#\n\n# This module defines\n\n#  FRIBIDI_INCLUDE_DIR, where to find fribidi.h, etc.\n\n#  FRIBIDI_LIBRARIES, the libraries to link against to use FriBiDi.\n\n#  PNG_DEFINITIONS - You should ADD_DEFINITONS(${PNG_DEFINITIONS}) before compiling code that includes png library files.\n\n#  FRIBIDI_FOUND, If false, do not try to use PNG.\n\n# also defined, but not for general use are\n\n#  FRIBIDI_LIBRARY, where to find the FriBiDi library.\n\n#\n\n# If this module finds an old version of fribidi, then this module will run\n\n# add_definitions(-DOLD_FRIBIDI) so that Wesnoth will compile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set variable in temp var, otherwise FIND_PATH might fail\n\n# unset isn't present in the required version of cmake.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FriBiDi provides both fribidi_utf8_to_unicode and fribidi_charset_to_unicode.\n\n# The difference is that\n\n#  1. fribidi >= 0.10.5 has FRIBIDI_CHAR_SET_UTF8.\n\n#  2. fribidi <= 0.10.4 has FRIBIDI_CHARSET_UTF8.\n\n# Wesnoth has two methods to use FriBiDi.\n\n#  1. Use fribidi_charset_to_unicode and FRIBIDI_CHAR_SET_UTF8.\n\n#  2. Define OLD_FRIBIDI and use fribidi_utf8_to_unicode.\n\n# To compile Wesnoth with fribidi <= 0.10.4, we must define OLD_FRIBIDI.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Newer versions of fribidi (not tested the initial version which has the\n\n# issue, but at least 0.19.2 has the issue) no longer have the symbol\n\n# FRIBIDI_CHAR_SET_UTF8.  But the symbol is build with some macros confusing\n\n# cmake. To test for that case let the compiler give its verdict.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# fribidi >= 0.10.5\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# fribidi <= 0.10.4\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/FindLibintl.cmake" : {
      "ObjectId" : "52ae647938a481a96288056723fde903138b72ad",
      "LastModified" : "2008-05-04T20:11:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Libintl functionality\n\n# Once done this will define\n\n#\n\n#  LIBINTL_FOUND - system has Libintl\n\n#  LIBINTL_INCLUDE_DIR - Libintl include directory\n\n#  LIBINTL_LIBRARIES - Libraries needed to use Libintl\n\n#\n\n# TODO: This will enable translations only if Gettext functionality is\n\n# present in libc. Must have more robust system for release, where Gettext\n\n# functionality can also reside in standalone Gettext library, or the one\n\n# embedded within kdelibs (cf. gettext.m4 from Gettext source).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Chusslove Illich, <caslav.ilic@gmx.net>\n\n# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindPotupdate.cmake" : {
      "ObjectId" : "332b1d816703238c3f41e41617a6bc449ccd0368",
      "LastModified" : "2009-03-20T23:42:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Gettext run-time library and tools.\n\n# This module finds the GNU gettext run-time library (LGPL), include paths and \n\n# associated tools (GPL). This code sets the following variables:\n\n#  GETTEXT_INCLUDE_DIR         = path(s) to gettext's include files\n\n#  GETTEXT_LIBRARIES           = the libraries to link against to use gettext\n\n#  GETTEXT_INTL_LIBRARY        = path to gettext's intl library\n\n#  GETTEXT_RUNTIME_FOUND       = true if runtime libs were found (intl)\n\n#  GETTEXT_INFO_MSG            = information string about gettext\n\n#  GETTEXT_XGETTEXT_EXECUTABLE = xgettext tool\n\n#  GETTEXT_MSGINIT_EXECUTABLE  = msginit tool\n\n#  GETTEXT_MSGCAT_EXECUTABLE   = msgcat tool\n\n#  GETTEXT_MSGCONV_EXECUTABLE  = msgconv tool\n\n#  GETTEXT_TOOLS_FOUND         = true if all the tools were found\n\n#  GETTEXT_FOUND               = true if both runtime and tools were found\n\n# As a convenience, the following variables can be set before including\n\n# this module to make its life easier:\n\n#  GETTEXT_SEARCH_PATH         = list of path to search gettext components for\n\n# --------------------------------------------------------------------------\n\n# As a convenience, try to find everything as soon as we set any one of\n\n# the cache variables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Find the runtime lib\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The gettext intl include dir (libintl.h)\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The gettext intl library\n\n# Some Unix system (like Linux) have gettext right into libc\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Even if we have a system one, let the user provide another one\n\n# eventually (i.e., more recent, or GNU).\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The gettext asprintf library\n\n# Actually not useful as it does not seem to exist on Unix\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#   IF(WIN32)\n\n#     FIND_LIBRARY(GETTEXT_ASPRINTF_LIBRARY \n\n#       NAMES asprintf \n\n#       PATHS ${potential_lib_dirs}\n\n#       DOC \"Gettext asprintf library\")\n\n#     MARK_AS_ADVANCED(GETTEXT_ASPRINTF_LIBRARY)\n\n#     IF(NOT GETTEXT_ASPRINTF_LIBRARY)\n\n#       SET(GETTEXT_RUNTIME_FOUND 0)\n\n#     ELSE(NOT GETTEXT_ASPRINTF_LIBRARY)\n\n#       SET(GETTEXT_LIBRARIES ${GETTEXT_LIBRARIES} ${GETTEXT_ASPRINTF_LIBRARY})\n\n#     ENDIF(NOT GETTEXT_ASPRINTF_LIBRARY)\n\n#   ENDIF(WIN32)\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Find the tools\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Some convenient info about gettext, where to get it, etc.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Found ?\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Try again with new potential dirs now that we may have found the runtime\n\n# or the tools\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/FindTranslationTools.cmake" : {
      "ObjectId" : "fce15f3138926bc1da1eac49664e33e57ca94fdd",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the tools needed for updating the potfiles and translations\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/SearchForStuff.cmake" : {
      "ObjectId" : "e17d0a129ead7a5687710c3f80b4357115bf14b8",
      "LastModified" : "2009-04-25T12:43:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#check for some platform specific things and export defines accordingly...\n\n#done basically the same was as AC_CHECK_HEADERS and AC_CHECK_FUNCS in configure.ac\n\n#the file is basically built upon the info available at\n\n#http://www.vtk.org/Wiki/CMake_HowToDoPlatformChecks\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#the two includes below seem to not be required, those headers are checked for\n\n#anyway, including them here, too...\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#sendfile should be in one of the headers checked for here, so first check if\n\n#one of the headers is available and then check for 'sendfile'\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#in configure.ac it is not explicitly tested, if it is in 'm', instead the first\n\n#test is if \"floor\" is available in m and later on it is checked if round,\n\n#sendfile and others do exist (with the 'm' lib linked), regarding our sources\n\n#we *only* want round from 'm'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#use config.h.cmake to create a list of #defines comparable to the one configure\n\n#does, this file is created in the dir where cmake is run from\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#to make the compiler actually use the generated config.h\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/UseLATEX.cmake" : {
      "ObjectId" : "52f8858952223d3fb4bff7f7e48a7f4a4ae9b679",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.7.3\n\n# Author: Kenneth Moreland (kmorel at sandia dot gov)\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following MACROS are defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                       [BIBFILES <bib_files>]\n\n#                       [INPUTS <input_tex_files>]\n\n#                       [IMAGE_DIRS] <image_directories>\n\n#                       [IMAGES] <image_files>\n\n#                       [CONFIGURE] <tex_files>\n\n#                       [DEPENDS] <tex_files>\n\n#                       [USE_INDEX] [USE_GLOSSARY]\n\n#                       [DEFAULT_PDF] [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag.  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux.  This is sometimes necessary\n\n#                       if a LaTeX error occurs and writes a bad aux file.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.\n\n#\n\n# History:\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper macros\n\n#############################################################################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helpful list macros.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse macro arguments.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but it's not supported on\n\n# older versions of CMake.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Macros that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############################################################################\n\n# Helper macros for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 433,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 443,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 472,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 482,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 486,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 490,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 543,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 572,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Set up target names.\n",
        "Line" : 595,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 612,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 643,
        "CharPositionInLine" : 25
      },
      "28" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 706,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 719,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 742,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "cmake/po4a-man.cmake" : {
      "ObjectId" : "dbe9e571a349f50ada7305868b3651631eeffbd0",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/po4a-manual.cmake" : {
      "ObjectId" : "e8566566770c369d1b76874d68029c7a51a65daa",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Small helper to execute code see doc/manual/CMakeLists.txt\n\n# for more information\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/revision.cmake" : {
      "ObjectId" : "b000e9df9cc80019754b50cddc1609fd74eefc05",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/update_pot_source_dependencies.cmake" : {
      "ObjectId" : "40b8923d622f7bd253bcef31e2262e5a68d07926",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Update the source file dependencies of the pot file.\n\n#\n\n# This globs all files cpp in the src directory and looks for the text domain\n\n# definition in that file and outputs these dependencies in POTFILES.in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove the old input file.\n\n# Dummy target with a non existing (and not created file) is always executed.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove the old file.\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Recreate the input file.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For the default text domain.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Create an empty new one, to be sure it will exist.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Find all cpp files which are not in a .svn directory.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If the file doesn't contain a GETTEXT_DOMAIN\n\n# definition it should be added to the default domain.\n",
        "Line" : 31,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "# For the other text domains.\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Create an empty new one, to be sure it will exist.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find all cpp files which are not in a .svn directory.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# If the file contains a GETTEXT_DOMAIN definition for\n\n# the current domain add it to the domain.\n",
        "Line" : 61,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 12
    },
    "config.h.cmake" : {
      "ObjectId" : "a88303e38f25ae106110311131dc02543eb03746",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*this file is used to automatically set some defines and is used in the CMake recipe*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/core/terrain-graphics/Makefile" : {
      "ObjectId" : "3f27c1bafdc969da68cced3ce20d05e1521ef683",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Many of the macros in these files are generated from template meta-macros using the\n\n# expand-terrain-macros.py tool.  Here's a canned invocation that will rebuild all.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/tools/Makefile" : {
      "ObjectId" : "bf62c4b1fa282de9674686afc9640ed5d383d099",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Recipes for various sanity checks.\n\n#\n\n# Hack DATA if our location in the Wesnoth source tree changes.\n\n# It needs to point to the top-level data directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The MAINLINE definition should expand to all directories considered  \n\n# to be part of the mainline distribution.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Define UMC to point to a local copy of user-made content to run checks on.\n\n# Note, this needs to expand to a list with one subdirectory per UMC campaign,\n\n# otherwise the visibility checks aren't going to work right.\n\n#UMC = ../../../../wesnoth-umc-dev/trunk/*\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for obsolete WML, broken references, consistency.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Check WML for meaning and references.\n\n# No UMC testing until $$(UMC) is fixed\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#-u $(UMC)\n",
        "Line" : 37,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "# Check GUI WML for meaning and references.\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Beware of removing images listed in this report unless you know\n\n# UMC is not relying on them!\n\n#\n\n# References to terrain graphics go through so many layers of nasty\n\n# opaque macros that trying to reference-check them is hopeless.\n\n# So suppress reporting them unused even if they seem to have\n\n# no references.  \n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Report a list of symbols and resources defined in mainline.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generate a reference page for the utility macros.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Report on unchecked macro calls\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Reindent the mainline content\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extract a table of editor keybindings from the editor theme definition\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Look at the difficulty-rank order of the campaigns\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For performing test lifts of mainline\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "data/tools/emacs_mode/Makefile" : {
      "ObjectId" : "6b302a886c2ac6577adb3d3dc30c7a3ecafd44e4",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "77cca475c1e6032fea7c66ce7b72ca15b5cffb6c",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/design/CMakeLists.txt" : {
      "ObjectId" : "0eb3065a54f14e21ac9effd330f0653305f18b0f",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Generates the documents using pdflatex.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Abort compilation on errors.\n\n# Failing to do so might lead to infinite loops and hard to diagnose\n\n# problems.\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n\n# LaTeX files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Source files.\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# LaTeX files\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "doc/man/CMakeLists.txt" : {
      "ObjectId" : "2eb79b622b5eabe793f1d8beaa63d9c7915fa777",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/manual/CMakeLists.txt" : {
      "ObjectId" : "9b90d71cb251ab5a6149483425cb8f8540bdbe96",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create the .xml file if enough strings are translated.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Only create a .html if there is an .xml file. Since it's not\n\n# possible to only execute cmake code if the file exists directly,\n\n# build the command here. Then send it to a small script that only\n\n# executes if the .html file exists. \n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "3aaf2ca6fc21a598b72ac36283fdac436b998397",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############ Settings. ###########\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The normal domains use cpp and cfg files.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All available domains.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If a source file has not GETTEXT_DOMAIN it belongs to this domain.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############ pot update. ###########\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Update the source file dependencies.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate pot file for c++ data.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# misses bug address\n",
        "Line" : 56,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# create the pot file make sure we always get output.\n",
        "Line" : 58,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# replace the chartype\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Remove some header info - Need to test whether needed.\n",
        "Line" : 66,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Generate pot file for wml data.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Merge both pot files\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# The old function checked for differences in the time in the header see\n\n# what we need to do with it.\n",
        "Line" : 89,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# Update / generate the po files for all languages\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "### Generate new po file.\n",
        "Line" : 113,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# For some reason CMake is rather happy to delete the po file in\n\n# some cases. Too avoid that problem only generate the init rule\n\n# if the po file doesn't exist. The case where a po file used to\n\n# exist and no longer exists should never occur\n",
        "Line" : 115,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "### Update existing po file.\n",
        "Line" : 136,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# The pot-update depends on a dummy file which we promise to\n\n# make. We don't make this dummy file but the pot-update\n\n# still works.\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Add to target list\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# should depend on languages\n",
        "Line" : 161,
        "CharPositionInLine" : 52
      },
      "21" : {
        "Text" : "# The target to call\n",
        "Line" : 166,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "##### po update per language #####\n",
        "Line" : 173,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# The pot-update depends on a dummy file which we promise to\n\n# make. We don't make this dummy file but the pot-update\n\n# still works.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# After the po file is updated it might look not entirely as\n\n# wanted, for example poedit reorders the file. Use msgattrib\n\n# to reformat the file, use a helper file to do so.\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Now merge with the pot file.\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Only set the verbose flag for maintainers.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# The target to call\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 28
    },
    "po/wesnoth-manpages/Makefile" : {
      "ObjectId" : "698c77bf8ce544ee12e2a3ca1f93cc5068344b34",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This makefile was created with the sole purpose of emulating the \n\n# makefiles of the rest of domains (and thus make updates easily\n\n# scriptable).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this dummy rule only displays the statistics, there is no need to\n\n# generate .gmo files for po4a manpages\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "po/wesnoth-manual/Makefile" : {
      "ObjectId" : "1e04f3fe9ac115ff08db89cd717d8f69ee39fff1",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This makefile was created with the sole purpose of emulating the \n\n# makefiles of the rest of domains (and thus make updates easily\n\n# scriptable).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this dummy rule only displays the statistics, there is no need to\n\n# generate .gmo files for po4a manpages\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "aabb818883abe2392f291a50d97c48a113343898",
      "LastModified" : "2013-03-15T20:28:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## some includes ##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This seems to break on some Linux systems in combination with strict\n\n# compilation, so disabled for now. The problem occurred on Gentoo with\n\n# boost 1.37. Debian with boost 1.34, 1.35 and 1.38 works properly.\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#additional MSVC includes\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#optional dependencies\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# needed to get include paths in the subfolders correct\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed to have the generated config.h used, too\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Since MSVC does autolinking of boost adding those files will duplicate\n\n# the includes and cause build errors.\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\n\n# Create targets for revision.hpp\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########### Set Library mode ###############\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "########### libwesnoth-core ###############\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# a 'lib' is automatically set in front when creating the library (as in the filename)\n\n# internal reference is the name given here\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Depending on the flag create a real file or an empty dummy.\n\n#\n\n# Since the code is executed every build run of Wesnoth we need to make sure\n\n# that no modifications don't turn into a rebuild. Therefore a the dummy is\n\n# created and the second target only copies the file if modified.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########### libwesnoth-lua ###############\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# We explicitly want lua compiled as C++ version, so this line is required:\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Assume the compiler is the clang compiler.\n\n# It needs the files to be forced as c++ manually, it might be a newer\n\n# version of cmake will be able to this for us.\n\n#\n\n# Also silence some Clang specific warnings due to extra parenthesis in if statements when comparing instead\n",
        "Line" : 321,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# a 'lib' is automatically set in front when creating the library (as in the filename)\n\n# internal reference is the name given here\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########### Old style cast flags ###############\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Disable the setting of -Wold-style-cast on some targets.\n\n# old style casts are not wanted by our coding style but some C based code\n\n# uses it. Force the flag off for these files. (We don't enable it in our\n\n# generic compiler flags, but allows people to do it.)\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########### Helper libraries ###############\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The main library is rather huge especially in debug mode, causing quite a bit\n\n# of overhead packing objects that haven't been changed for quite a while.\n\n# Attempting to solve the issue with several smaller libraries when adding new\n\n# files.\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##### Gui types\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This library contains the basic types for the gui library.\n\n# - Public Enumerates\n\n# - Small structs\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##### Gui event\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# This library contains the basic event handling for the gui library. It\n\n# converts the SDL events to internal events and allows other code to\n\n# connect to the events based on slots.\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##### Gui iterator\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# This library contains the basic iterator for the gui library.\n\n# It is used to create visitors for the GUI widget tree in a window.\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##### Gui placer\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This library contains the basic placer for the gui library.\n\n# The placer is used is some widgets to determine how to place its content.\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##### GUI tooltip\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# This library contains the tooltip handling code.\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##### GUI widget\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# This library contains the widget code.\n\n# It contains the core code of the wigets which determines the\n\n# behavior of the widgets. It also contains the builder code\n\n# for the widgets since the code has inter dependencies.\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##### Gui widget definition\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# This library contains the widget definitions for the gui library.\n\n# The widget definitions serialise the widget definition WML code into\n\n# its own structures. The definitions define the looks of the widgets.\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##### GUI1 widgets\n",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# This library contains the widgets from gui1.\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##### GUI1 widgets\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# This library contains the schema validator.\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "########### Wesnoth main source files ###############\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Depending on whether the game or the game and the tests are build the main\n\n# sources are compiled in the game library or not. If only one target is needed\n\n# the putting in the game library solution is slower. If both targets are build\n\n# the library is faster (especially if the user doesn't use ccache (or\n\n# something similar)).\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# network.cpp and network_worker.cpp are included by default (without USE_ANA_NETWORK)\n",
        "Line" : 853,
        "CharPositionInLine" : 33
      },
      "41" : {
        "Text" : "########### libwesnoth-game ###############\n\n# rename libwesnoth.a to libwesnoth-game.a to have clearer targets\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# a 'lib' is automatically set in front when creating the library (as in the filename)\n\n# internal reference is the name given here\n",
        "Line" : 924,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "########### Wesnoth ###############\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "########### Wesnothd Server ###############\n",
        "Line" : 990,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "########### Campaign Server ###############\n",
        "Line" : 1024,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# NEEDED when compiling with ANA support\n",
        "Line" : 1029,
        "CharPositionInLine" : 20
      },
      "47" : {
        "Text" : "# NEEDED with ANA\n",
        "Line" : 1041,
        "CharPositionInLine" : 23
      },
      "48" : {
        "Text" : "########### Castle building helpers ###############\n",
        "Line" : 1050,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "########### Unit tests ###############\n",
        "Line" : 1139,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# This tool is used to create the images for the sdl_utils unit test.\n\n# Due to its unique nature the program is never installed.\n",
        "Line" : 1223,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 51
    },
    "src/ana/CMakeLists.txt" : {
      "ObjectId" : "bb5670356df2d1d1c629ff6bc6eadde165127fa0",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Id$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ana/apps/CMakeLists.txt" : {
      "ObjectId" : "9dc520f5e418ff959b5ceb0c3ca17f52d76bb123",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Id$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ana/apps/chat/CMakeLists.txt" : {
      "ObjectId" : "80ba885ad843724cf36c94ab1ac371dd5b98c998",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Id$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ana/src/CMakeLists.txt" : {
      "ObjectId" : "ff5ef91016a539979ee10ccbd118edee2e645800",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Id$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ana/test/CMakeLists.txt" : {
      "ObjectId" : "36e73bc10254154816f5ea9ccb8ca9f89b93bc17",
      "LastModified" : "2011-03-06T10:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Id$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "utils/umc_dev/Makefile" : {
      "ObjectId" : "cecf99c58061a1177e8bf5ed98343cd4fb4ad8b9",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# developer manual\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# user manual\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# cleanup non-needed files\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "utils/umc_dev/build/build.xml" : {
      "ObjectId" : "9fd27e807322e2075196edcc0b057d4e731fce78",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Check that we have a deltapack ",
        "Line" : 10,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : " clear previous builds ",
        "Line" : 19,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : " remove non-wesnoth plugins ",
        "Line" : 43,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 3
    },
    "utils/umc_dev/org.wesnoth/templates/build.xml" : {
      "ObjectId" : "cef62784271af8b53217bd13c09f801ae33c1d90",
      "LastModified" : "2012-03-10T10:19:48Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " <property file=\"build.properties\"/> ",
        "Line" : 3,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : " <exclude name=\".project\"/> ",
        "Line" : 7,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 22,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 6,
    "ANT" : 2
  },
  "ElapsedTime" : 25378
}